{
    "00401040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.00401040(ulong *arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    ulong in_R8;\n    ulong in_R9;\n    ulong uVar3;\n    \n    fcn.00408000(arg1 + 0x8b);\n    fcn.00407f78(arg1 + 0x76);\n    fcn.00408844(arg1 + 0x73);\n    fcn.00407ec0(arg1 + 0x5e);\n    fcn.00408134(arg1 + 0x47);\n    fcn.00408134(arg1 + 0x32);\n    fcn.00408134(arg1 + 0x1d);\n    *arg1 = 0x44ac18;\n    if (arg1[8] != 0) {\n        fcn.0040da4c(arg1);\n    }\n    uVar3 = 0xfffffffffffffffe;\n    *arg1 = 0x44ba88;\n    if ((((arg1[8] != 0) && (arg1 != 0x46a7b0)) && (arg1 != 0x46a860)) && ((arg1 != 0x46a910 && (arg1 != 0x46a9c0)))) {\n        fcn.0040da4c(arg1);\n    }\n    piVar1 = arg1[0x13];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1, 1, in_R8, in_R9, uVar3);\n    }\n    iVar2 = arg1[0x14];\n    if ((iVar2 != 0) && (*(iVar2 + 0x50) == arg1)) {\n        *(iVar2 + 0x50) = 0;\n    }\n    if (arg1[4] != 0) {\n        (**(arg1[4] + 0x38))();\n    }\n    arg1[7] = 0;\n    return;\n}\n",
        "token_count": 448
    },
    "00406fb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.00406fb0(ulong *arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    ulong in_R8;\n    ulong in_R9;\n    ulong uVar3;\n    \n    *arg1 = 0x44ac18;\n    if (arg1[8] != 0) {\n        fcn.0040da4c(arg1);\n    }\n    uVar3 = 0xfffffffffffffffe;\n    *arg1 = 0x44ba88;\n    if ((((arg1[8] != 0) && (arg1 != 0x46a7b0)) && (arg1 != 0x46a860)) && ((arg1 != 0x46a910 && (arg1 != 0x46a9c0)))) {\n        fcn.0040da4c(arg1);\n    }\n    piVar1 = arg1[0x13];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1, 1, in_R8, in_R9, uVar3);\n    }\n    iVar2 = arg1[0x14];\n    if ((iVar2 != 0) && (*(iVar2 + 0x50) == arg1)) {\n        *(iVar2 + 0x50) = 0;\n    }\n    if (arg1[4] != 0) {\n        (**(arg1[4] + 0x38))();\n    }\n    arg1[7] = 0;\n    return;\n}\n",
        "token_count": 339
    },
    "0040e1e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.0040e1e0(ulong *arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    ulong in_R8;\n    ulong in_R9;\n    ulong uVar3;\n    \n    uVar3 = 0xfffffffffffffffe;\n    *arg1 = 0x44ba88;\n    if ((((arg1[8] != 0) && (arg1 != 0x46a7b0)) && (arg1 != 0x46a860)) && ((arg1 != 0x46a910 && (arg1 != 0x46a9c0)))) {\n        fcn.0040da4c(arg1);\n    }\n    piVar1 = arg1[0x13];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1, 1, in_R8, in_R9, uVar3);\n    }\n    iVar2 = arg1[0x14];\n    if ((iVar2 != 0) && (*(iVar2 + 0x50) == arg1)) {\n        *(iVar2 + 0x50) = 0;\n    }\n    if (arg1[4] != 0) {\n        (**(arg1[4] + 0x38))();\n    }\n    arg1[7] = 0;\n    return;\n}\n",
        "token_count": 302
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004058cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.004058cc(ulong *arg1)\n\n{\n    int64_t iVar1;\n    \n    *arg1 = 0x44a9d8;\n    if (arg1[0xb] != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    }\n    iVar1 = fcn.00413c60();\n    if (*(iVar1 + 8) == arg1) {\n        *(iVar1 + 8) = 0;\n    }\n    if (arg1[4] != 0) {\n        (**(arg1[4] + 0x38))();\n    }\n    arg1[7] = 0;\n    return;\n}\n",
        "token_count": 149
    },
    "00404d68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong * fcn.00404d68(ulong *arg1, int64_t arg2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    ulong *puVar5;\n    int64_t iVar6;\n    \n    fcn.00405cb8(arg1);\n    *arg1 = 0x44a4e8;\n    if (arg2 == 0) {\n        arg1[0x14] = 0;\n    }\n    else {\n        uVar3 = fcn.0042f850(arg2);\n        arg1[0x14] = uVar3;\n    }\n    iVar4 = fcn.00413c10();\n    if (iVar4 == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        puVar5 = (*pcVar1)();\n        return puVar5;\n    }\n    iVar6 = fcn.00415eb0(iVar4 + 0xc0, 0x404434);\n    if (iVar6 == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        puVar5 = (*pcVar1)();\n        return puVar5;\n    }\n    if (iVar6 == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        puVar5 = (*pcVar1)();\n        return puVar5;\n    }\n    *(iVar6 + 8) = arg1;\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentThread)();\n    arg1[0xb] = uVar3;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    *(arg1 + 0xc) = uVar2;\n    *(iVar4 + 8) = arg1;\n    arg1[0x11] = 0;\n    arg1[0x1f] = 0;\n    arg1[0x19] = 0;\n    arg1[0x1a] = 0;\n    arg1[0x15] = 0;\n    arg1[0x18] = 0;\n    arg1[0x22] = 0;\n    arg1[0x16] = 0;\n    *(arg1 + 0x122) = 0;\n    *(arg1 + 0x24) = 0;\n    arg1[0x12] = 0;\n    arg1[0x23] = 0;\n    *(arg1 + 0x20) = 0;\n    arg1[0x21] = 0;\n    arg1[0x1c] = 0;\n    arg1[0x1d] = 0;\n    *(arg1 + 0x124) = 0;\n    arg1[0x26] = 0;\n    *(arg1 + 0x17) = 0;\n    *(arg1 + 0x1b) = 0;\n    arg1[0x25] = 0x200;\n    return arg1;\n}\n",
        "token_count": 686
    },
    "00406038": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.00406038(int64_t arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    \n    if (arg2 < 1) {\n        iVar5 = *(arg1 + 0x40);\n        if (((iVar5 != 0) && (*(iVar5 + 0x40) != 0)) && (iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(),  iVar2 != 0))\n        {\n            fcn.0040dfe4(iVar5, *(iVar5 + 0x40), 0x363, 1);\n            fcn.0040e458(*(iVar5 + 0x40), 0x363, 1, 0);\n        }\n        iVar3 = fcn.00413c10();\n        iVar3 = fcn.00415eb0(iVar3 + 0xc0, 0x404434);\n        if (iVar3 == 0) {\n            fcn.00412ca8();\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n        for (iVar3 = *(iVar3 + 0x10); iVar3 != 0; iVar3 = *(iVar3 + 200)) {\n            if ((*(iVar3 + 0x40) != 0) && (iVar3 != iVar5)) {\n                if (*(iVar3 + 0x120) == 0) {\n                    fcn.004119d8(iVar3, 0);\n                }\n                iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar3 + 0x40));\n                if ((iVar2 != 0) || (-1 < *(iVar3 + 0x120))) {\n                    fcn.0040dfe4(iVar3, *(iVar3 + 0x40), 0x363, 1);\n                    fcn.0040e458(*(iVar3 + 0x40), 0x363, 1, 0);\n                }\n                if (0 < *(iVar3 + 0x120)) {\n                    fcn.004119d8(iVar3, *(iVar3 + 0x120));\n                }\n                *(iVar3 + 0x120) = 0xffffffff;\n            }\n        }\n    }\n    else {\n        iVar5 = fcn.00413c10();\n        iVar5 = fcn.00415eb0(iVar5 + 0xc0, 0x404434);\n        if (iVar5 == 0) {\n            fcn.00412ca8();\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n        if (*(iVar5 + 0x20) == 0) {\n            fcn.0041656c();\n            fcn.00416900(1);\n        }\n    }\n    return arg2 < 0;\n}\n",
        "token_count": 667
    },
    "00406a74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.00406a74(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    ulong uStack48;\n    \n    uStack48 = 0;\n    iVar4 = fcn.00413c10();\n    uVar5 = fcn.00412ea8(*(iVar4 + 0xd8), &uStack48);\n    iVar1 = uVar5;\n    if (iVar1 != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_MessageBoxA)(arg1, arg2, arg3, arg4, 0);\n        uVar5 = uVar2;\n        if (iVar1 != 2) {\n            if (uVar2 != 0) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            fcn.00412e8c(0, uStack48);\n            if (uVar2 == 0) {\n                (*_sym.imp.KERNEL32.dll_SetLastError)(uVar3);\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 284
    },
    "00407d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.00407d80(ulong arg1, ulong hResData, ulong arg3, ulong arg4)\n\n{\n    ulong arg2;\n    \n    arg2 = (*_sym.imp.KERNEL32.dll_LockResource)(hResData);\n    fcn.00407d28(arg1, arg2, arg3, 0);\n    return;\n}\n",
        "token_count": 78
    },
    "00408498": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.00408498(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    ulong in_R8;\n    ulong in_R9;\n    code *pcVar6;\n    bool bVar7;\n    ulong uStackX32;\n    uchar auStack32 [8];\n    \n    uStackX32 = 0;\n    iVar4 = fcn.00413c10();\n    uVar5 = fcn.00412ea8(*(iVar4 + 0xd8), &uStackX32);\n    iVar1 = uVar5;\n    if (iVar1 != 0) {\n        fcn.0040842c(arg1, auStack32);\n        pcVar6 = *(arg1 + 0x38);\n        if (pcVar6 == NULL) {\n            fcn.00412ca8();\n        }\n        uVar2 = (*pcVar6)(arg2);\n        uVar5 = uVar2;\n        if (iVar1 != 2) {\n            bVar7 = uVar2 != 0;\n            if (bVar7) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            fcn.00412e8c(0, uStackX32, in_R8, in_R9, uVar2);\n            if (!bVar7) {\n                (*_sym.imp.KERNEL32.dll_SetLastError)(uVar3);\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 363
    },
    "004166ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.004166ac(int64_t arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    ulong arg1_00;\n    int64_t iVar2;\n    int64_t *piVar3;\n    \n    if (arg2 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00418218(arg1 + 0x30, arg2);\n        if (iVar1 == 0) {\n            iVar1 = fcn.00418218(arg1 + 0x68, arg2);\n            if (iVar1 == 0) {\n                arg1_00 = fcn.00403cb0(0x4154b8);\n                iVar1 = fcn.004286bc(arg1 + 8);\n                iVar2 = iVar1;\n                if (iVar1 == 0) {\n                    iVar2 = fcn.00412c60();\n                }\n                (**(arg1 + 0x20))(iVar2);\n                piVar3 = fcn.00418460(arg1 + 0x68, arg2);\n                *piVar3 = iVar1;\n                fcn.00403cb0(arg1_00);\n                iVar2 = *(arg1 + 0xa8);\n                *(iVar1 + iVar2) = arg2;\n                if (*(arg1 + 0xb0) == 2) {\n                    *(iVar1 + 8 + iVar2) = arg2;\n                }\n            }\n            else {\n                iVar2 = *(arg1 + 0xa8);\n                *(iVar1 + iVar2) = arg2;\n                if (*(arg1 + 0xb0) == 2) {\n                    *(iVar1 + 8 + iVar2) = arg2;\n                }\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 397
    },
    "00408fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.00408fa0(ulong *arg1)\n\n{\n    ulong *puVar1;\n    ulong in_R8;\n    ulong in_R9;\n    \n    *arg1 = 0x44b4f0;\n    puVar1 = arg1[8];\n    if (puVar1 != NULL) {\n        (***puVar1)(puVar1, 1, in_R8, in_R9, 0xfffffffffffffffe);\n    }\n    fcn.00408d84(arg1 + 1);\n    arg1[1] = 0x44b440;\n    for (puVar1 = arg1[2]; puVar1 != NULL; puVar1 = *puVar1) {\n    }\n    arg1[4] = 0;\n    arg1[5] = 0;\n    arg1[3] = 0;\n    arg1[2] = 0;\n    fcn.00418c7c(arg1[6]);\n    arg1[6] = 0;\n    return;\n}\n",
        "token_count": 226
    },
    "00409550": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong * fcn.00409550(ulong *arg1)\n\n{\n    ulong *arg2;\n    \n    *arg1 = 0x44b4f0;\n    arg1[1] = 0x44b440;\n    arg1[4] = 0;\n    arg1[5] = 0;\n    arg1[3] = 0;\n    arg1[2] = 0;\n    arg1[6] = 0;\n    arg1[7] = 10;\n    arg2 = fcn.00403cc0(8);\n    if (arg2 == NULL) {\n        arg2 = NULL;\n    }\n    else {\n        *arg2 = 0x44b488;\n    }\n    arg1[8] = arg2;\n    fcn.004094d0(arg1, arg2);\n    return arg1;\n}\n",
        "token_count": 189
    },
    "0040b490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint16_t fcn.0040b490(ulong arg1)\n\n{\n    int16_t iVar1;\n    int16_t extraout_AX;\n    int16_t extraout_AX_00;\n    uint extraout_EAX;\n    int32_t iVar2;\n    uint extraout_var;\n    uint uVar3;\n    ulong in_R8;\n    ulong in_R9;\n    bool bVar4;\n    ulong auStackX24 [2];\n    \n    auStackX24[0] = 0;\n    fcn.00413c10();\n    iVar2 = fcn.00412ea8(*(CONCAT44(extraout_var, extraout_EAX) + 0xd8), auStackX24);\n    iVar1 = iVar2;\n    if ((iVar2 != 0) && (iVar1 = (*_sym.imp.USER32.dll_RegisterClassA)(arg1),  iVar2 != 2)) {\n        bVar4 = iVar1 != 0;\n        if (bVar4) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.00412e8c(0, auStackX24[0], in_R8, in_R9, iVar1);\n        iVar1 = extraout_AX;\n        if (!bVar4) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar3);\n            iVar1 = extraout_AX_00;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 327
    },
    "0040b8a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.0040b8a8(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int64_t iVar3;\n    ulong in_R8;\n    ulong in_R9;\n    ulong auStackX24 [2];\n    int64_t iVar4;\n    \n    auStackX24[0] = 0;\n    iVar3 = fcn.00413c10();\n    iVar1 = fcn.00412ea8(*(iVar3 + 0xd8), auStackX24);\n    if (iVar1 == 0) {\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(arg1);\n        if (iVar1 != 2) {\n            iVar4 = iVar3;\n            if (iVar3 != 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            fcn.00412e8c(0, auStackX24[0], in_R8, in_R9, iVar4);\n            if (iVar3 == 0) {\n                (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 284
    },
    "0040d48c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.0040d48c(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    ulong in_R8;\n    ulong in_R9;\n    code *pcVar6;\n    bool bVar7;\n    ulong uStackX32;\n    uchar auStack32 [8];\n    \n    uStackX32 = 0;\n    iVar4 = fcn.00413c10();\n    uVar5 = fcn.00412ea8(*(iVar4 + 0xd8), &uStackX32);\n    iVar1 = uVar5;\n    if (iVar1 != 0) {\n        fcn.0040d420(arg1, auStack32);\n        pcVar6 = *(arg1 + 0x28);\n        if (pcVar6 == NULL) {\n            fcn.00412ca8();\n        }\n        uVar2 = (*pcVar6)(arg2);\n        uVar5 = uVar2;\n        if (iVar1 != 2) {\n            bVar7 = uVar2 != 0;\n            if (bVar7) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            fcn.00412e8c(0, uStackX32, in_R8, in_R9, uVar2);\n            if (!bVar7) {\n                (*_sym.imp.KERNEL32.dll_SetLastError)(uVar3);\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 365
    },
    "00410efc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.00410efc(int64_t hWnd, ulong arg2, ulong wParam, ulong lParam)\n\n{\n    int64_t iVar1;\n    int64_t *in_stack_00000028;\n    \n    if (*(hWnd + 0xa0) == 0) {\n        iVar1 = fcn.004109ac(hWnd, arg2, wParam, lParam);\n    }\n    else {\n        iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(hWnd + 0x40), arg2 + 0x2000);\n        if ((6 < arg2 - 0x132U) || (iVar1 != 0)) {\n            if (in_stack_00000028 != NULL) {\n                *in_stack_00000028 = iVar1;\n            }\n            iVar1 = 1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 187
    },
    "00411f74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nuint64_t fcn.00411f74(int64_t hWnd, ulong arg2, ulong arg3)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    int64_t *piVar6;\n    ulong in_R9;\n    int64_t aiStackX8 [4];\n    \n    if (*(hWnd + 0xa0) == 0) {\n        uVar5 = (*_sym.imp.USER32.dll_GetWindowTextA)(*(hWnd + 0x40), arg2, arg3, in_R9, 0xfffffffffffffffe);\n    }\n    else {\n        piVar6 = fcn.00413fdc();\n        if (piVar6 == NULL) {\n            fcn.00401cd0(0x80004005);\n            pcVar2 = swi(3);\n            uVar5 = (*pcVar2)();\n            return uVar5;\n        }\n        aiStackX8[0] = (**(*piVar6 + 0x18))(piVar6);\n        aiStackX8[0] = aiStackX8[0] + 0x18;\n        (**(**(hWnd + 0xa0) + 0x118))(*(hWnd + 0xa0), aiStackX8);\n        iVar3 = fcn.00430150(arg2, arg3, aiStackX8[0], 0xffffffffffffffff);\n        if (iVar3 != 0) {\n            if (iVar3 == 0xc) {\n                fcn.00412c60();\n                pcVar2 = swi(3);\n                uVar5 = (*pcVar2)();\n                return uVar5;\n            }\n            if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                fcn.00412ca8();\n                pcVar2 = swi(3);\n                uVar5 = (*pcVar2)();\n                return uVar5;\n            }\n            if (iVar3 != 0x50) {\n                fcn.00412ca8();\n                pcVar2 = swi(3);\n                uVar5 = (*pcVar2)();\n                return uVar5;\n            }\n        }\n        uVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n        uVar5 = uVar4;\n        LOCK();\n        piVar1 = aiStackX8[0] + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar3 + -1 < 1) {\n            (**(**(aiStackX8[0] + -0x18) + 8))();\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 606
    },
    "0041229c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.0041229c(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    bool bVar4;\n    uint32_t uVar5;\n    int64_t *piVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uchar auStack56 [16];\n    \n    iVar1 = *arg1;\n    iVar8 = arg1[1];\n    bVar4 = false;\n    do {\n        if (iVar8 == 0) goto code_r0x004122ce;\n        uVar5 = fcn.00411b40(*(iVar8 + 0x10));\n        if ((uVar5 >> 0x11 & 1) != 0) goto code_r0x004122ce;\n        iVar8 = *(iVar8 + 8);\n        while (iVar8 == 0) {\ncode_r0x004122ce:\n            piVar6 = fcn.0041208c(arg1, auStack56);\n            if (iVar1 != *piVar6) {\n                fcn.00412ca8();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            iVar8 = piVar6[1];\n            if (iVar8 == 0) {\n                return;\n            }\n            if (bVar4) {\n                return;\n            }\n            bVar4 = true;\n        }\n        piVar6 = *(iVar8 + 0x10);\n        iVar2 = *piVar6;\n        if ((((iVar2 == 0) || (uVar7 = (*_sym.imp.USER32.dll_SendMessageA)(iVar2, 0x87, 0, 0),  (uVar7 >> 8 & 1) == 0))\n            && (uVar5 = fcn.00411b40(piVar6),  (uVar5 >> 0x1c & 1) != 0)) && ((uVar5 >> 0x1b & 1) == 0)) {\n            if (*arg1 == iVar1) {\n                arg1[1] = iVar8;\n                return;\n            }\n            fcn.00412ca8();\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 514
    },
    "00412350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.00412350(int64_t arg1, int64_t arg2)\n\n{\n    int64_t iStack24;\n    int64_t iStack16;\n    \n    if (*(arg1 + 0x98) != 0) {\n        if (arg2 == 0) {\n            iStack16 = fcn.0041213c(arg1);\n        }\n        else {\n            iStack16 = fcn.0041210c(arg1, arg2);\n        }\n        if (iStack16 != 0) {\n            iStack24 = *(arg1 + 0x98) + 0x80;\n            fcn.0041229c(&iStack24);\n            if (iStack16 != 0) {\n                return *(iStack16 + 0x10);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 183
    },
    "004123b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong fcn.004123b4(int64_t arg1, int64_t arg2)\n\n{\n    int64_t iStack24;\n    int64_t iStack16;\n    \n    if (*(arg1 + 0x98) != 0) {\n        if (arg2 == 0) {\n            iStack16 = fcn.0041213c(arg1);\n        }\n        else {\n            iStack16 = fcn.0041210c(arg1, arg2);\n        }\n        if (iStack16 != 0) {\n            iStack24 = *(arg1 + 0x98) + 0x80;\n            fcn.004121b4(&iStack24);\n            if (iStack16 != 0) {\n                return *(iStack16 + 0x10);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 184
    },
    "00413290": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.00413290(ulong *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    ulong *puVar4;\n    int64_t iVar5;\n    ulong in_R8;\n    ulong in_R9;\n    \n    *arg1 = 0x44ce30;\n    piVar3 = arg1[0x17];\n    if (piVar3 != NULL) {\n        (**(*piVar3 + 0x18))(piVar3, arg1 + 0x10, in_R8, in_R9, 0xfffffffffffffffe);\n        piVar3 = arg1[0x17];\n        if (piVar3 != NULL) {\n            (**(*piVar3 + 8))(piVar3, 1);\n        }\n    }\n    puVar4 = *arg1[0x19];\n    if (puVar4 != NULL) {\n        (***puVar4)(puVar4, 1);\n    }\n    puVar4 = *(arg1[0x19] + 8);\n    if (puVar4 != NULL) {\n        (***puVar4)(puVar4, 1);\n    }\n    fcn.00403cfc(arg1[0x19]);\n    if ((arg1[0x1b] != 0) && (arg1[0x1b] != -1)) {\n        if (*0x46aa80 != NULL) {\n            (**0x46aa80)();\n        }\n        arg1[0x1b] = 0xffffffffffffffff;\n    }\n    fcn.00415fd0(arg1 + 0x18);\n    iVar5 = arg1[0xb];\n    LOCK();\n    piVar1 = iVar5 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar5 + -0x18) + 8))();\n    }\n    return;\n}\n",
        "token_count": 447
    },
    "00413938": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong * fcn.00413938(ulong *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    \n    *arg1 = 0x44ce30;\n    arg1[6] = 0;\n    arg1[7] = 0;\n    arg1[8] = 0;\n    arg1[9] = 0;\n    piVar2 = fcn.00413fdc();\n    if (piVar2 == NULL) {\n        fcn.00401cd0(0x80004005);\n        pcVar1 = swi(3);\n        puVar3 = (*pcVar1)();\n        return puVar3;\n    }\n    iVar4 = (**(*piVar2 + 0x18))(piVar2);\n    arg1[0xb] = iVar4 + 0x18;\n    arg1[0xe] = 0;\n    arg1[0xf] = 0;\n    *(arg1 + 0x11) = 0xffffffff;\n    arg1[0x12] = 0;\n    arg1[0x15] = 0;\n    *(arg1 + 0x16) = 0;\n    arg1[9] = 0x40;\n    arg1[7] = 0x20;\n    *(arg1 + 0x2c) = 0;\n    *(arg1 + 5) = arg2;\n    if ((*(arg1[0xb] + -0xc) - 0x1000U | 1U - *(arg1[0xb] + -8)) < 0) {\n        fcn.00402e50(arg1 + 0xb, 0x1000);\n    }\n    *(arg1 + 0x54) = 1;\n    arg1[0xf] = 0x20;\n    uVar5 = fcn.00403cc0(0x10);\n    arg1[0x19] = uVar5;\n    iVar4 = fcn.00415758(0x310);\n    if (iVar4 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.00413448(iVar4);\n    }\n    *arg1[0x19] = uVar5;\n    iVar4 = fcn.00415758(200);\n    if (iVar4 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.004137c0(iVar4);\n    }\n    *(arg1[0x19] + 8) = uVar5;\n    *(arg1 + 0x1a) = 1;\n    arg1[0x1b] = 0;\n    return arg1;\n}\n",
        "token_count": 633
    },
    "00414bc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong * fcn.00414bc8(ulong *arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    \n    arg1[1] = 0;\n    arg1[2] = 0;\n    *(arg1 + 3) = 0;\n    *arg1 = 0x44d418;\n    if (arg2 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = *(arg2 + 0x40);\n    }\n    arg1[4] = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetDC)();\n    iVar1 = fcn.00414b08(arg1, uVar2);\n    if (iVar1 == 0) {\n        fcn.004143bc();\n    }\n    return arg1;\n}\n",
        "token_count": 190
    },
    "00414c50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.00414c50(ulong *arg1)\n\n{\n    ulong uVar1;\n    ulong in_R8;\n    ulong in_R9;\n    ulong uVar2;\n    \n    uVar2 = 0xfffffffffffffffe;\n    *arg1 = 0x44d418;\n    uVar1 = fcn.00414b54(arg1);\n    (*_sym.imp.USER32.dll_ReleaseDC)(arg1[4], uVar1, in_R8, in_R9, uVar2);\n    *arg1 = 0x44d2c8;\n    if (arg1[1] != 0) {\n        uVar1 = fcn.00414b54(arg1);\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "00414ca8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong * fcn.00414ca8(ulong *arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    \n    arg1[1] = 0;\n    arg1[2] = 0;\n    *(arg1 + 3) = 0;\n    *arg1 = 0x44d568;\n    if (arg2 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = *(arg2 + 0x40);\n    }\n    arg1[4] = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowDC)();\n    iVar1 = fcn.00414b08(arg1, uVar2);\n    if (iVar1 == 0) {\n        fcn.004143bc();\n    }\n    return arg1;\n}\n",
        "token_count": 191
    },
    "00414d30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.00414d30(ulong *arg1)\n\n{\n    ulong uVar1;\n    ulong in_R8;\n    ulong in_R9;\n    ulong uVar2;\n    \n    uVar2 = 0xfffffffffffffffe;\n    *arg1 = 0x44d568;\n    uVar1 = fcn.00414b54(arg1);\n    (*_sym.imp.USER32.dll_ReleaseDC)(arg1[4], uVar1, in_R8, in_R9, uVar2);\n    *arg1 = 0x44d2c8;\n    if (arg1[1] != 0) {\n        uVar1 = fcn.00414b54(arg1);\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "00414d88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong * fcn.00414d88(ulong *arg1, int64_t hWnd)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    ulong in_R8;\n    ulong in_R9;\n    \n    arg1[1] = 0;\n    arg1[2] = 0;\n    *(arg1 + 3) = 0;\n    *arg1 = 0x44d6b8;\n    uVar2 = *(hWnd + 0x40);\n    arg1[4] = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_BeginPaint)(uVar2, arg1 + 5, in_R8, in_R9, 0xfffffffffffffffe);\n    iVar1 = fcn.00414b08(arg1, uVar2);\n    if (iVar1 == 0) {\n        fcn.004143bc();\n    }\n    return arg1;\n}\n",
        "token_count": 202
    },
    "00414e10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.00414e10(ulong *lpPaint)\n\n{\n    ulong uVar1;\n    ulong in_R8;\n    ulong in_R9;\n    \n    *lpPaint = 0x44d6b8;\n    (*_sym.imp.USER32.dll_EndPaint)(lpPaint[4], lpPaint + 5, in_R8, in_R9, 0xfffffffffffffffe);\n    fcn.00414b54(lpPaint);\n    *lpPaint = 0x44d2c8;\n    if (lpPaint[1] != 0) {\n        uVar1 = fcn.00414b54(lpPaint);\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "00415584": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.00415584(int64_t arg1, ulong arg2)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    ulong auStackX16 [3];\n    uchar auStack24 [16];\n    \n    auStackX16[0] = arg2;\n    (*_sym.imp.USER32.dll_ClientToScreen)(arg1, auStackX16);\n    uVar4 = 5;\n    do {\n        arg1 = (*_sym.imp.USER32.dll_GetWindow)(arg1, uVar4);\n        if (arg1 == 0) {\n            return 0;\n        }\n        iVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(arg1);\n        if ((iVar1 != 0) && (uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(arg1, 0xfffffff0),  (uVar2 >> 0x1c & 1) != 0)\n           ) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(arg1, auStack24);\n            iVar3 = (*_sym.imp.USER32.dll_PtInRect)(auStack24, auStackX16[0]);\n            if (iVar3 != 0) {\n                return arg1;\n            }\n        }\n        uVar4 = 2;\n    } while( true );\n}\n",
        "token_count": 305
    },
    "00415b98": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.00415b98(uint *lpCriticalSection, ulong arg2, int64_t arg3)\n\n{\n    code *pcVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    ulong in_R9;\n    ulong uVar4;\n    \n    uVar4 = 0xfffffffffffffffe;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 10);\n    if ((arg2 < 1) || (lpCriticalSection[3] <= arg2)) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 10);\n        return;\n    }\n    puVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*lpCriticalSection);\n    if (puVar2 == NULL) {\n        puVar2 = fcn.00415758(0x20);\n        if (puVar2 == NULL) {\n            puVar2 = NULL;\n        }\n        else {\n            *puVar2 = 0x44d910;\n        }\n        *(puVar2 + 2) = 0;\n        puVar2[3] = 0;\n        *(puVar2 + *(lpCriticalSection + 8)) = *(lpCriticalSection + 6);\n        *(lpCriticalSection + 6) = puVar2;\n    }\n    else if ((arg2 < *(puVar2 + 2)) || (arg3 == 0)) goto code_r0x00415ce3;\n    if (puVar2[3] == 0) {\n        if (0xffffffff < lpCriticalSection[3] << 3) {\n            fcn.00401cd0(0x80070057);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0);\n    }\n    else {\n        if (0xffffffff < lpCriticalSection[3] << 3) {\n            fcn.00401cd0(0x80070057);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_LocalReAlloc)\n                          (puVar2[3], lpCriticalSection[3] << 3 & 0xffffffff, 2, in_R9, uVar4);\n    }\n    if (iVar3 == 0) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 10);\n        fcn.00412c60();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    puVar2[3] = iVar3;\n    fcn.0042f6c0(iVar3 + *(puVar2 + 2) * 8, 0, lpCriticalSection[3] - *(puVar2 + 2) << 3);\n    *(puVar2 + 2) = lpCriticalSection[3];\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(*lpCriticalSection, puVar2);\ncode_r0x00415ce3:\n    if ((puVar2[3] != 0) && (arg2 < *(puVar2 + 2))) {\n        *(puVar2[3] + arg2 * 8) = arg3;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 10);\n    return;\n}\n",
        "token_count": 731
    },
    "00415eb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.00415eb0(uint32_t *arg1, code *arg2)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    \n    if (arg2 == NULL) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        iVar4 = (*pcVar1)();\n        return iVar4;\n    }\n    if (*arg1 == 0) {\n        if ((*0x46abf0 == NULL) && (*0x46abf0 = fcn.00415950(0x46ac00),  *0x46abf0 == NULL)) {\n            fcn.00412ca8();\n            pcVar1 = swi(3);\n            iVar4 = (*pcVar1)();\n            return iVar4;\n        }\n        uVar3 = fcn.004159a0(*0x46abf0);\n        *arg1 = uVar3;\n        if (uVar3 == 0) {\n            fcn.00412ca8();\n            pcVar1 = swi(3);\n            iVar4 = (*pcVar1)();\n            return iVar4;\n        }\n    }\n    puVar2 = *0x46abf0;\n    uVar3 = *arg1;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(*0x46abf0 + 10);\n    if ((uVar3 < 1) || (puVar2[3] <= uVar3)) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar2 + 10);\n        iVar4 = 0;\n    }\n    else {\n        iVar4 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*puVar2);\n        if ((iVar4 == 0) || (*(iVar4 + 0x10) <= uVar3)) {\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar2 + 10);\n            goto code_r0x00415f86;\n        }\n        iVar4 = *(*(iVar4 + 0x18) + uVar3 * 8);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar2 + 10);\n    }\n    if (iVar4 != 0) {\n        return iVar4;\n    }\ncode_r0x00415f86:\n    iVar4 = (*arg2)();\n    fcn.00415b98(*0x46abf0, *arg1, iVar4);\n    return iVar4;\n}\n",
        "token_count": 551
    },
    "00416580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong * fcn.00416580(ulong *arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    ulong *puVar2;\n    ulong in_stack_00000028;\n    uint in_stack_00000030;\n    \n    *arg1 = 0x44d998;\n    fcn.00428658(arg1 + 1, *(arg2 + 8), 0x40);\n    fcn.004183a4(arg1 + 6, 10);\n    fcn.004183a4(arg1 + 0xd, 4);\n    if (arg3 == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        puVar2 = (*pcVar1)();\n        return puVar2;\n    }\n    if (arg4 == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        puVar2 = (*pcVar1)();\n        return puVar2;\n    }\n    fcn.00418124(arg1 + 0xd, 7, 0);\n    arg1[0x14] = arg2;\n    arg1[4] = arg3;\n    arg1[5] = arg4;\n    arg1[0x15] = in_stack_00000028;\n    *(arg1 + 0x16) = in_stack_00000030;\n    return arg1;\n}\n",
        "token_count": 325
    },
    "00416900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nbool fcn.00416900(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t arg1_00;\n    ulong uVar5;\n    uint32_t uVar6;\n    \n    iVar1 = fcn.00413c60();\n    arg1_00 = 0;\n    if (*(iVar1 + 0x20) != 0) {\n        uVar6 = *(iVar1 + 0x20) - 1;\n        uVar4 = uVar6;\n        *(iVar1 + 0x20) = uVar6;\n        if (uVar6 == 0) {\n            if (arg1 != 0) {\n                if (arg1 != -1) {\n                    iVar2 = fcn.004057c8();\n                    if ((iVar2 != 0) && (*(iVar2 + 0x78) != NULL)) {\n                        uVar4 = 0;\n                        (**(iVar2 + 0x78))(0);\n                    }\n                }\n                fcn.004167b4(*(iVar1 + 0x40), uVar4);\n                fcn.004167b4(*(iVar1 + 0x38), uVar4);\n                fcn.004167b4(*(iVar1 + 0x30), uVar4);\n                fcn.004167b4(*(iVar1 + 0x28), uVar4);\n                fcn.004167b4(*(iVar1 + 0x48), uVar4);\n            }\n            iVar2 = fcn.00413c10();\n            iVar2 = *(iVar2 + 8);\n            iVar3 = fcn.00415790(0x46aaa8);\n            if ((iVar3 != 0) && (iVar2 != 0)) {\n                if (*(iVar3 + 0x18) != 0) {\n                    uVar4 = fcn.004306c0(*(iVar3 + 0x18));\n                    if (*(iVar2 + 0x128) <= uVar4) goto code_r0x00416a13;\n                }\n                if (*(iVar2 + 0x128) != 0) {\n                    if (*(iVar3 + 0x18) != 0) {\n                        arg1_00 = fcn.004306c0(*(iVar3 + 0x18));\n                        fcn.0042dcd0(*(iVar3 + 0x18));\n                    }\n                    iVar2 = fcn.0042dd10(*(iVar2 + 0x128));\n                    *(iVar3 + 0x18) = iVar2;\n                    if ((iVar2 == 0) && (arg1_00 != 0)) {\n                        uVar5 = fcn.0042dd10(arg1_00);\n                        *(iVar3 + 0x18) = uVar5;\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00416a13:\n    return *(iVar1 + 0x20) != 0;\n}\n",
        "token_count": 662
    },
    "00418e64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong * fcn.00418e64(ulong *arg1, ulong arg2, int64_t arg3)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    ulong *puVar4;\n    int64_t iVar5;\n    uint64_t arg3_00;\n    \n    fcn.00412ccc(arg1);\n    *arg1 = 0x44de60;\n    piVar3 = fcn.00413fdc();\n    arg3_00 = 0;\n    if (piVar3 == NULL) {\n        fcn.00401cd0(0x80004005);\n        pcVar1 = swi(3);\n        puVar4 = (*pcVar1)();\n        return puVar4;\n    }\n    iVar5 = (**(*piVar3 + 0x18))(piVar3);\n    arg1[3] = iVar5 + 0x18;\n    *(arg1 + 2) = arg2;\n    if (arg3 != 0) {\n        uVar2 = fcn.0042f460(arg3);\n        arg3_00 = uVar2;\n    }\n    fcn.00403160(arg1 + 3, arg3, arg3_00);\n    return arg1;\n}\n",
        "token_count": 281
    },
    "004199a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.004199a0(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    if ((*(arg1 + 0x30) != 0) && ((*(arg1 + 0x20) & 2) == 0)) {\n        fcn.0041920c(arg1);\n        *(arg1 + 0x30) = 0;\n    }\n    fcn.00418fd8(arg1);\n    iVar3 = *(arg1 + 0x18);\n    LOCK();\n    piVar1 = iVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar3 + -0x18) + 8))();\n    }\n    return;\n}\n",
        "token_count": 200
    },
    "00419fc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.00419fc4(ulong *arg1)\n\n{\n    int64_t **ppiVar1;\n    uint32_t uVar2;\n    \n    *arg1 = 0x44dfe8;\n    uVar2 = 0;\n    if ((arg1[9] == 0) && (ppiVar1 = arg1[10],  *(arg1 + 0x5c) != 0)) {\n        do {\n            (**(**ppiVar1 + 0x10))();\n            uVar2 = uVar2 + 1;\n            ppiVar1 = ppiVar1 + 1;\n        } while (uVar2 < *(arg1 + 0x5c));\n    }\n    *arg1 = 0x44f9f8;\n    if (arg1[9] != 0) {\n        fcn.00426c60(arg1[9]);\n    }\n    if (*(arg1 + 0xc) != 0) {\n        fcn.00403cfc(arg1[10]);\n    }\n    if (arg1[4] != 0) {\n        (**(arg1[4] + 0x38))();\n    }\n    arg1[7] = 0;\n    return;\n}\n",
        "token_count": 272
    },
    "0042a24c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.0042a24c(ulong *arg1)\n\n{\n    *arg1 = 0x44f9f8;\n    if (arg1[9] != 0) {\n        fcn.00426c60(arg1[9]);\n    }\n    if (*(arg1 + 0xc) != 0) {\n        fcn.00403cfc(arg1[10]);\n    }\n    if (arg1[4] != 0) {\n        (**(arg1[4] + 0x38))();\n    }\n    arg1[7] = 0;\n    return;\n}\n",
        "token_count": 133
    },
    "004238fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong * fcn.004238fc(ulong *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    \n    fcn.004053a8(arg1);\n    *arg1 = 0x44f098;\n    arg1[8] = arg2;\n    arg1[10] = 0;\n    *(arg1 + 0xb) = 0xffffffff;\n    arg1[0x10] = 0;\n    arg1[0x11] = 0;\n    arg1[0x12] = 0;\n    arg1[0x13] = 0;\n    *(arg1 + 0x14) = 0;\n    *(arg1 + 0xa4) = 0;\n    *(arg1 + 0x16) = 0;\n    *(arg1 + 0xb4) = 0;\n    *(arg1 + 0x1a) = 0;\n    *(arg1 + 0xd4) = 0;\n    arg1[0x1b] = 0;\n    arg1[0x1c] = 0;\n    arg1[0x1d] = 0;\n    *(arg1 + 0x1e) = 0;\n    *(arg1 + 0xf4) = 0;\n    piVar2 = fcn.00413fdc();\n    if (piVar2 == NULL) {\n        fcn.00401cd0(0x80004005);\n        pcVar1 = swi(3);\n        puVar3 = (*pcVar1)();\n        return puVar3;\n    }\n    iVar4 = (**(*piVar2 + 0x18))(piVar2);\n    arg1[0x1f] = iVar4 + 0x18;\n    *(arg1 + 0x20) = 0;\n    fcn.0042a75c(arg1 + 0x24);\n    arg1[0x26] = 0;\n    arg1[0x27] = 0x44eb08;\n    arg1[0x28] = 0x44ef78;\n    arg1[0x29] = 0x44eb58;\n    arg1[0x2a] = 0x44ebb8;\n    arg1[0x2b] = 0x44ebf8;\n    arg1[0x2c] = 0x44ec28;\n    arg1[0x2d] = 0x44ec68;\n    arg1[0x2e] = 0x44ec98;\n    arg1[0x2f] = 0x44ecf0;\n    fcn.0042f6c0(arg1 + 0x21, 0, 0x18);\n    *(arg1 + 0x21) = 0;\n    return arg1;\n}\n",
        "token_count": 652
    },
    "00423c3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.00423c3c(ulong *arg1)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    int64_t **ppiVar3;\n    int64_t *piVar4;\n    ulong *puVar5;\n    ulong arg2;\n    code *pcVar6;\n    int32_t iVar7;\n    uint64_t uVar8;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    ulong in_R9;\n    int64_t **ppiStackX16;\n    int64_t *apiStackX24 [2];\n    \n    *arg1 = 0x44e718;\n    uVar11 = 0;\n    if ((((*(arg1 + 0x16) != 0) && (arg1[0x14] != NULL)) &&\n        (puVar1 = *arg1[0x14],  iVar7 = (***puVar1)(puVar1, 0x4528e0, apiStackX24, in_R9, 0xfffffffffffffffe), \n        -1 < iVar7)) && (apiStackX24[0] != NULL)) {\n        ppiStackX16 = NULL;\n        iVar7 = (**(*apiStackX24[0] + 0x20))(apiStackX24[0], 0x452a20, &ppiStackX16);\n        if ((-1 < iVar7) && (ppiStackX16 != NULL)) {\n            (*(*ppiStackX16)[6])(ppiStackX16, *(arg1 + 0x16));\n            (*(*ppiStackX16)[2])();\n        }\n        (**(*apiStackX24[0] + 0x10))();\n    }\n    iVar2 = arg1[9];\n    while (((iVar2 != 0 && (ppiVar3 = *(arg1[7] + 0x10),  ppiVar3 != NULL)) && (piVar4 = *ppiVar3,  piVar4 != NULL))) {\n        (**(*piVar4 + 0x178))(piVar4, *(ppiVar3 + 0xc), 0);\n        (*ppiVar3)[0x1d] = 0;\n        iVar2 = arg1[9];\n    }\n    fcn.00426db8(arg1 + 6);\n    if (arg1[0x10] != 0) {\n        uVar8 = uVar11;\n        uVar10 = uVar11;\n        if (0 < arg1[0xe]) {\n            do {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(arg1[0x10] + uVar8 * 0x18);\n                uVar9 = uVar10 + 1;\n                uVar8 = uVar9;\n                uVar10 = uVar9;\n            } while (uVar9 < arg1[0xe]);\n        }\n        if (arg1[0xe] != 0) {\n            fcn.00403cfc(arg1[0xf]);\n            fcn.00403cfc(arg1[0x10]);\n        }\n    }\n    if (arg1[2] != NULL) {\n        (**(*arg1[2] + 0x10))();\n    }\n    if (arg1[3] != NULL) {\n        (**(*arg1[3] + 0x10))();\n    }\n    if (arg1[5] != 0) {\n        uVar8 = uVar11;\n        if (0 < arg1[4]) {\n            do {\n                puVar1 = *(*(uVar11 + 0x38 + arg1[5]) + 8);\n                while (puVar1 != NULL) {\n                    if (puVar1 == NULL) {\n                        fcn.00412ca8();\n                        pcVar6 = swi(3);\n                        (*pcVar6)();\n                        return;\n                    }\n                    puVar5 = *puVar1;\n                    *(puVar1[2] + 0xe8) = 0;\n                    puVar1 = puVar5;\n                }\n                fcn.00426db8(*(uVar11 + 0x38 + arg1[5]));\n                piVar4 = *(uVar11 + 0x38 + arg1[5]);\n                if (piVar4 != NULL) {\n                    (**(*piVar4 + 8))(piVar4, 1);\n                }\n                uVar9 = uVar8 + 1;\n                uVar8 = uVar9;\n                uVar11 = uVar11 + 0x40;\n            } while (uVar9 < arg1[4]);\n        }\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(arg1[5]);\n    }\n    if (arg1[0xd] != 0) {\n        (*_sym.imp.ole32.dll_CoTaskMemFree)();\n    }\n    iVar2 = arg1[0x15];\n    if (iVar2 != 0) {\n        arg2 = *arg1[0x14];\n        fcn.004210cc(iVar2, arg2);\n        fcn.00420398(iVar2, arg2);\n        iVar2 = arg1[0x15];\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(*(iVar2 + 0x28));\n        *(iVar2 + 0x28) = 0;\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(*(iVar2 + 0x30));\n        *(iVar2 + 0x30) = 0;\n        fcn.00403cfc(*(iVar2 + 0x10));\n        *(iVar2 + 0x10) = 0;\n        fcn.00403cfc(*(iVar2 + 0x20));\n        *(iVar2 + 0x20) = 0;\n        *(iVar2 + 0x18) = 0;\n    }\n    iVar2 = arg1[0x15];\n    if (iVar2 != 0) {\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(*(iVar2 + 0x28));\n        *(iVar2 + 0x28) = 0;\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(*(iVar2 + 0x30));\n        *(iVar2 + 0x30) = 0;\n        fcn.00403cfc(*(iVar2 + 0x10));\n        *(iVar2 + 0x10) = 0;\n        fcn.00403cfc(*(iVar2 + 0x20));\n        *(iVar2 + 0x20) = 0;\n        *(iVar2 + 0x18) = 0;\n        fcn.00403cfc(iVar2);\n    }\n    ppiVar3 = arg1[0x14];\n    ppiStackX16 = ppiVar3;\n    if (ppiVar3 != NULL) {\n        fcn.004235cc(ppiVar3);\n        if (ppiVar3[1] != NULL) {\n            (**(*ppiVar3[1] + 0x10))();\n        }\n        if (*ppiVar3 != NULL) {\n            (**(**ppiVar3 + 0x10))();\n        }\n        fcn.00403cfc(ppiVar3);\n    }\n    if (arg1[0x13] != NULL) {\n        (**(*arg1[0x13] + 0x10))();\n    }\n    if (arg1[0x12] != NULL) {\n        (**(*arg1[0x12] + 0x10))();\n    }\n    arg1[6] = 0x44f518;\n    arg1[9] = 0;\n    arg1[10] = 0;\n    arg1[8] = 0;\n    arg1[7] = 0;\n    fcn.00418c7c(arg1[0xb]);\n    arg1[0xb] = 0;\n    return;\n}\n",
        "token_count": 1750
    },
    "004269d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.004269d8(ulong *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uchar auStack616 [56];\n    ulong *puStack560;\n    ulong uStack544;\n    ulong uStack64;\n    uint64_t uStack24;\n    \n    uStack24 = 0xfffffffffffffffe;\n    *arg1 = 0x44f388;\n    if (arg1[8] != 0) {\n        uStack64 = 0x426a04;\n        fcn.00426854(arg1);\n    }\n    arg1[4] = 0;\n    arg1[5] = 0;\n    arg1[6] = 0;\n    arg1[7] = 0;\n    uStack544 = 0xfffffffffffffffe;\n    uStack24 = *0x465c38 ^ &stack0xfffffffffffffd98;\n    *arg1 = 0x44da88;\n    puStack560 = arg1;\n    if ((arg1[1] != -1) && (*(arg1 + 2) != 0)) {\n        fcn.00417054(arg1);\n    }\n    iVar3 = arg1[3];\n    LOCK();\n    piVar1 = iVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar3 + -0x18) + 8))();\n    }\n    fcn.0042dcb0(uStack24 ^ &stack0xfffffffffffffd98);\n    return;\n}\n",
        "token_count": 366
    },
    "00427248": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.00427248(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong arg2;\n    uint auStackX8 [2];\n    int64_t iStackX16;\n    int64_t aiStackX24 [2];\n    \n    iVar3 = fcn.00413c10();\n    fcn.0041633c(1);\n    auStackX8[0] = 0;\n    iVar3 = iVar3 + 0x58;\n    fcn.00416bc8(iVar3, &iStackX16, 0x44f558, auStackX8);\n    iVar2 = *(iStackX16 + -0x10);\n    while (iVar2 != 0) {\n        iVar4 = fcn.00413c10();\n        (*_sym.imp.USER32.dll_UnregisterClassA)(iStackX16, *(iVar4 + 0x10));\n        arg2 = fcn.00416bc8(iVar3, aiStackX24, 0x44f558, auStackX8);\n        fcn.004096a8(&iStackX16, arg2);\n        LOCK();\n        piVar1 = aiStackX24[0] + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 + -1 < 1) {\n            (**(**(aiStackX24[0] + -0x18) + 8))();\n        }\n        iVar2 = *(iStackX16 + -0x10);\n    }\n    fcn.00402dc0(iVar3);\n    fcn.004163c8(1);\n    LOCK();\n    piVar1 = iStackX16 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iStackX16 + -0x18) + 8))();\n    }\n    return;\n}\n",
        "token_count": 462
    },
    "00427cc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.00427cc8(ulong arg1, uint64_t arg2, ulong arg3, uint64_t arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t hModule;\n    int64_t iStack56;\n    ulong uStack48;\n    \n    uStack48 = 0xfffffffffffffffe;\n    piVar4 = fcn.00413fdc();\n    if (piVar4 != NULL) {\n        iVar5 = (**(*piVar4 + 0x18))(piVar4);\n        iStack56 = iVar5 + 0x18;\n        hModule = fcn.00413fc8(arg2 & 0xffffffff);\n        iVar5 = iVar5 + 0x18;\n        if ((hModule == 0) ||\n           (iVar3 = fcn.00402fc0(&iStack56, hModule, arg2 & 0xffffffff),  iVar5 = iStack56,  iVar3 == 0)) {\n            LOCK();\n            piVar1 = iVar5 + -8;\n            iVar3 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar3 + -1 < 1) {\n                (**(**(iVar5 + -0x18) + 8))();\n            }\n        }\n        else {\n            fcn.00427ad0(arg1, iStack56, arg3, arg4 & 0xffffffff);\n            LOCK();\n            piVar1 = iVar5 + -8;\n            iVar3 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar3 + -1 < 1) {\n                (**(**(iVar5 + -0x18) + 8))();\n            }\n        }\n        return;\n    }\n    fcn.00401cd0(0x80004005);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 450
    },
    "004285bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.004285bc(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    int64_t arg1_00;\n    ulong uStackX32;\n    \n    arg1_00 = fcn.00403cc0(0x20);\n    uStackX32 = 0;\n    if (arg1_00 != 0) {\n        uStackX32 = fcn.00417850(arg1_00, arg1, arg2, arg3);\n    }\n    fcn.00430080(&uStackX32, 0x4612e8);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 154
    },
    "00429ebc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong * fcn.00429ebc(ulong *arg1, int64_t arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    ulong *puVar4;\n    int64_t iVar5;\n    int16_t in_R9W;\n    \n    fcn.00412ccc(arg1);\n    *arg1 = 0x44f920;\n    piVar3 = fcn.00413fdc();\n    if (piVar3 == NULL) {\n        fcn.00401cd0(0x80004005);\n        pcVar1 = swi(3);\n        puVar4 = (*pcVar1)();\n        return puVar4;\n    }\n    iVar5 = (**(*piVar3 + 0x18))();\n    arg1[3] = iVar5 + 0x18;\n    piVar3 = fcn.00413fdc();\n    if (piVar3 == NULL) {\n        fcn.00401cd0(0x80004005);\n        pcVar1 = swi(3);\n        puVar4 = (*pcVar1)();\n        return puVar4;\n    }\n    iVar5 = (**(*piVar3 + 0x18))();\n    arg1[5] = iVar5 + 0x18;\n    piVar3 = fcn.00413fdc();\n    if (piVar3 == NULL) {\n        fcn.00401cd0(0x80004005);\n        pcVar1 = swi(3);\n        puVar4 = (*pcVar1)();\n        return puVar4;\n    }\n    iVar5 = (**(*piVar3 + 0x18))(piVar3);\n    arg1[6] = iVar5 + 0x18;\n    *(arg1 + 4) = -(arg3 != 0) & arg3 + 0x60000U;\n    *(arg1 + 2) = in_R9W;\n    if (arg2 != 0) {\n        uVar2 = fcn.0042f460(arg2);\n        fcn.00403160(arg1 + 3, arg2, uVar2);\n    }\n    *(arg1 + 7) = ~-(in_R9W != 0) & 0x8000ffff;\n    return arg1;\n}\n",
        "token_count": 509
    },
    "0042c694": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t fcn.0042c694(int64_t arg1, int64_t arg2, uint32_t *arg3, uint32_t *arg4)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    ulong uVar7;\n    uint64_t *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t auStackX8 [8];\n    int64_t iStack72;\n    ulong uStack64;\n    \n    uStack64 = 0xfffffffffffffffe;\n    if ((*(arg1 + 0x20) & 1) == 0) {\n        fcn.00418f70(1, *(arg1 + 0x18));\n        pcVar3 = swi(3);\n        iVar5 = (*pcVar3)();\n        return iVar5;\n    }\n    if ((arg2 != 0) && (*(arg2 + 0xc) == 0xffff)) {\n        fcn.00412c84();\n        pcVar3 = swi(3);\n        iVar5 = (*pcVar3)();\n        return iVar5;\n    }\n    fcn.0042c3ac(arg1, 0);\n    if ((*(arg1 + 0x20) & 1) == 0) {\n        fcn.00418f70(4, *(arg1 + 0x18));\n        pcVar3 = swi(3);\n        iVar5 = (*pcVar3)();\n        return iVar5;\n    }\n    uVar6 = *(arg1 + 0x38) + 2;\n    if (*(arg1 + 0x40) <= uVar6 && uVar6 != *(arg1 + 0x40)) {\n        fcn.004192c8(arg1, (*(arg1 + 0x38) - *(arg1 + 0x40)) + 2);\n    }\n    puVar2 = *(arg1 + 0x38);\n    uVar1 = *puVar2;\n    *(arg1 + 0x38) = puVar2 + 1;\n    if (uVar1 == 0x7fff) {\n        if ((*(arg1 + 0x20) & 1) == 0) {\n            fcn.00418f70(4, *(arg1 + 0x18));\n            pcVar3 = swi(3);\n            iVar5 = (*pcVar3)();\n            return iVar5;\n        }\n        if (*(arg1 + 0x40) <= puVar2 + 3 && puVar2 + 3 != *(arg1 + 0x40)) {\n            fcn.004192c8(arg1, (*(arg1 + 0x38) - *(arg1 + 0x40)) + 4);\n        }\n        uVar10 = **(arg1 + 0x38);\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 1;\n    }\n    else {\n        uVar10 = (uVar1 & 0x8000) << 0x10 | uVar1 & 0xffff7fff;\n    }\n    if (uVar10 < 0) {\n        if (uVar1 == 0xffff) {\n            iVar5 = fcn.00419470(arg1, auStackX8);\n            if (iVar5 == 0) {\n                fcn.00418f70(6, *(arg1 + 0x18));\n                pcVar3 = swi(3);\n                iVar5 = (*pcVar3)();\n                return iVar5;\n            }\n            if ((*(iVar5 + 0xc) & 0x7fffffff) != auStackX8[0]) {\n                if (-1 < *(iVar5 + 0xc)) {\n                    fcn.00418f70(7, *(arg1 + 0x18));\n                    pcVar3 = swi(3);\n                    iVar5 = (*pcVar3)();\n                    return iVar5;\n                }\n                if (*(arg1 + 0x60) == 0) {\n                    iStack72 = fcn.00403cc0(0x38);\n                    if (iStack72 == 0) {\n                        uVar7 = 0;\n                    }\n                    else {\n                        uVar7 = fcn.004183a4(iStack72, 10);\n                    }\n                    *(arg1 + 0x60) = uVar7;\n                }\n                uVar6 = auStackX8[0];\n                puVar8 = fcn.00418460(*(arg1 + 0x60), iVar5);\n                *puVar8 = uVar6;\n            }\n            fcn.0042c388(arg1);\n            uVar9 = *(arg1 + 0x50);\n            *(arg1 + 0x50) = uVar9 + 1;\n            fcn.0042cde4(*(arg1 + 0x58), uVar9, iVar5, 1);\n        }\n        else {\n            uVar9 = uVar10 & 0x7fffffff;\n            if ((uVar9 == 0) || (iVar5 = *(arg1 + 0x58),  *(iVar5 + 0x10) - 1U < uVar9)) {\n                fcn.00418f70(5, *(arg1 + 0x18));\n                pcVar3 = swi(3);\n                iVar5 = (*pcVar3)();\n                return iVar5;\n            }\n            if (*(iVar5 + 0x10) <= uVar9) {\n                fcn.00412ca8();\n                pcVar3 = swi(3);\n                iVar5 = (*pcVar3)();\n                return iVar5;\n            }\n            iVar5 = *(*(iVar5 + 8) + uVar9 * 8);\n            auStackX8[0] = 0;\n            if ((*(arg1 + 0x60) == 0) || (iVar4 = fcn.00418260(*(arg1 + 0x60), iVar5, &iStack72),  iVar4 == 0)) {\n                auStackX8[0] = *(iVar5 + 0xc) & 0x7fffffff;\n            }\n            else {\n                auStackX8[0] = iStack72;\n            }\n        }\n        if ((arg2 != 0) && (iVar4 = fcn.0041568c(iVar5, arg2),  iVar4 == 0)) {\n            fcn.00418f70(6, *(arg1 + 0x18));\n            pcVar3 = swi(3);\n            iVar5 = (*pcVar3)();\n            return iVar5;\n        }\n        if (arg3 == NULL) {\n            *(arg1 + 0x14) = auStackX8[0];\n        }\n        else {\n            *arg3 = auStackX8[0];\n        }\n        if (arg4 != NULL) {\n            *arg4 = uVar10;\n        }\n    }\n    else {\n        if (arg4 == NULL) {\n            fcn.00418f70(5, *(arg1 + 0x18));\n            pcVar3 = swi(3);\n            iVar5 = (*pcVar3)();\n            return iVar5;\n        }\n        *arg4 = uVar10;\n        iVar5 = 0;\n    }\n    return iVar5;\n}\n",
        "token_count": 1648
    },
    "0042caec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t * fcn.0042caec(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    uint32_t auStackX8 [4];\n    uint auStackX24 [2];\n    int64_t *piStackX32;\n    \n    if ((*(arg1 + 0x20) & 1) == 0) {\n        fcn.00418f70(4, *(arg1 + 0x18));\n        pcVar3 = swi(3);\n        piVar5 = (*pcVar3)();\n        return piVar5;\n    }\n    iVar6 = fcn.0042c694(arg1, arg2, auStackX24, auStackX8);\n    piStackX32 = NULL;\n    if (iVar6 == 0) {\n        iVar6 = *(arg1 + 0x58);\n        if (*(iVar6 + 0x10) - 1U < auStackX8[0]) {\n            fcn.00418f70(5, *(arg1 + 0x18));\n            pcVar3 = swi(3);\n            piVar5 = (*pcVar3)();\n            return piVar5;\n        }\n        if (auStackX8[0] < *(iVar6 + 0x10)) {\n            piVar5 = *(*(iVar6 + 8) + auStackX8[0] * 8);\n            if (piVar5 == NULL) {\n                return NULL;\n            }\n            if (arg2 == 0) {\n                return piVar5;\n            }\n            iVar4 = fcn.004156c4(piVar5, arg2);\n            if (iVar4 != 0) {\n                return piVar5;\n            }\n            fcn.00418f70(6, *(arg1 + 0x18));\n            pcVar3 = swi(3);\n            piVar5 = (*pcVar3)();\n            return piVar5;\n        }\n        iVar6 = fcn.00412ca8();\n    }\n    piVar5 = fcn.00415614(iVar6);\n    piStackX32 = piVar5;\n    if (piVar5 == NULL) {\n        fcn.00412c60();\n    }\n    fcn.0042c388(arg1);\n    uVar1 = *(arg1 + 0x50);\n    *(arg1 + 0x50) = uVar1 + 1;\n    fcn.0042cde4(*(arg1 + 0x58), uVar1, piVar5, 1);\n    uVar2 = *(arg1 + 0x14);\n    *(arg1 + 0x14) = auStackX24[0];\n    (**(*piVar5 + 0x10))(piVar5, arg1);\n    *(arg1 + 0x14) = uVar2;\n    return piVar5;\n}\n",
        "token_count": 668
    },
    "00401430": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00401430(int16_t *arg1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    iVar1 = *arg1;\n    while (iVar1 != 0) {\n        arg1 = arg1 + 1;\n        iVar2 = iVar2 + 1;\n        iVar1 = *arg1;\n    }\n    return iVar2;\n}\n",
        "token_count": 94
    },
    "00414158": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00414158(int64_t arg1, ulong arg2, int64_t arg3)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t aiStackX24 [2];\n    \n    if (*(arg3 + 0x40) != 0) {\n        return;\n    }\n    iVar4 = fcn.00411748(arg3);\n    if (iVar4 != 0) {\n        return;\n    }\n    fcn.00414108(arg1, arg2);\n    fcn.004117e8(*(arg1 + 8), arg2, aiStackX24);\n    if (aiStackX24[0] != 0) {\n        iVar3 = fcn.0040e680(arg3, aiStackX24[0]);\n        if (iVar3 == 0) {\n            fcn.00412c84();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        if (aiStackX24[0] != 0) {\n            iVar4 = *(arg1 + 8);\n            iVar2 = (*_sym.imp.USER32.dll_GetParent)(*(arg3 + 0x40));\n            if (*(iVar4 + 0x40) == iVar2) {\n                return;\n            }\n            goto code_r0x004141f1;\n        }\n    }\n    iVar4 = fcn.00411788(*(arg1 + 8));\n    if (iVar4 == 0) {\n        return;\n    }\n    iVar4 = *(arg1 + 8);\ncode_r0x004141f1:\n    fcn.00411b0c(arg3, iVar4);\n    return;\n}\n",
        "token_count": 382
    },
    "00402bc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00402bc0(int64_t lpModuleName, ulong *arg2)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    if (*(lpModuleName + 0x58) == 0) {\n        if (*(lpModuleName + 8) == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(*(lpModuleName + 0x18));\n            *(lpModuleName + 8) = iVar1;\n            if (iVar1 == 0) {\n                iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(*(lpModuleName + 0x18));\n                *(lpModuleName + 8) = iVar1;\n                *(lpModuleName + 0x10) = iVar1 != 0;\n            }\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*(lpModuleName + 8), \"ImageList_ReplaceIcon\");\n        *(lpModuleName + 0x58) = uVar2;\n    }\n    *arg2 = *(lpModuleName + 0x58);\n    return arg2;\n}\n",
        "token_count": 239
    },
    "00402c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.00402c40(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int64_t iVar4;\n    code *pcVar5;\n    ulong uStack48;\n    uchar auStack40 [24];\n    \n    uVar3 = 0;\n    uStack48 = 0;\n    iVar4 = fcn.00413c10();\n    iVar1 = fcn.00412ea8(*(iVar4 + 0xd8), &uStack48);\n    if (iVar1 == 0) {\n        iVar2 = -1;\n    }\n    else {\n        fcn.00402bc0(arg1, auStack40);\n        pcVar5 = *(arg1 + 0x58);\n        if (pcVar5 == NULL) {\n            fcn.00412ca8();\n        }\n        iVar2 = (*pcVar5)(arg2, arg3, arg4);\n        if (iVar1 != 2) {\n            if (iVar2 == -1) {\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            fcn.00412e8c(0, uStack48);\n            if (iVar2 == -1) {\n                (*_sym.imp.KERNEL32.dll_SetLastError)(uVar3);\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 314
    },
    "00402dc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00402dc0(int64_t *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    code *pcVar4;\n    int64_t iVar5;\n    \n    iVar5 = *arg1;\n    piVar3 = *(iVar5 + -0x18);\n    if (*(iVar5 + -0x10) != 0) {\n        if (*(iVar5 + -8) < 0) {\n            if (*(iVar5 + -0xc) < 0) {\n                fcn.00401cd0(0x80070057);\n                pcVar4 = swi(3);\n                (*pcVar4)();\n                return;\n            }\n            *(iVar5 + -0x10) = 0;\n            **arg1 = 0;\n            return;\n        }\n        LOCK();\n        piVar1 = iVar5 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 + -1 < 1) {\n            (**(**(iVar5 + -0x18) + 8))();\n        }\n        iVar5 = (**(*piVar3 + 0x18))(piVar3);\n        *arg1 = iVar5 + 0x18;\n    }\n    return;\n}\n",
        "token_count": 294
    },
    "00402e50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00402e50(int64_t *arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    ulong *puVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    uint64_t arg2_00;\n    int32_t iVar8;\n    uint64_t uVar9;\n    \n    uVar9 = arg2;\n    iVar6 = *arg1;\n    if (arg2 < *(iVar6 + -0x10)) {\n        uVar9 = *(iVar6 + -0x10);\n    }\n    iVar8 = uVar9;\n    if (1 < *(iVar6 + -8)) {\n        iVar6 = *arg1;\n        iVar2 = *(iVar6 + -0x10);\n        puVar4 = (**(**(iVar6 + -0x18) + 0x20))();\n        iVar5 = (***puVar4)(puVar4, uVar9, 1);\n        if (iVar5 == 0) {\n            fcn.00401ed0();\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        if (iVar2 < iVar8) {\n            iVar8 = iVar2;\n        }\n        fcn.0042e220(iVar5 + 0x18, iVar8 + 1, iVar6, iVar8 + 1);\n        *(iVar5 + 8) = iVar2;\n        LOCK();\n        piVar1 = iVar6 + -8;\n        iVar8 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar8 + -1 < 1) {\n            (**(**(iVar6 + -0x18) + 8))(*(iVar6 + -0x18), iVar6 + -0x18);\n        }\n        *arg1 = iVar5 + 0x18;\n        return;\n    }\n    iVar2 = *(iVar6 + -0xc);\n    if (iVar2 < iVar8) {\n        if (0x400 < iVar2) {\n            iVar7 = iVar2 + 0x400;\n            if (iVar2 + 0x400 < iVar8) {\n                iVar7 = iVar8;\n            }\n            if ((*(*arg1 + -0xc) < iVar7) && (0 < iVar7)) {\n                iVar6 = (**(**(*arg1 + -0x18) + 0x10))();\n                if (iVar6 == 0) {\n                    fcn.00401ed0();\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n                *arg1 = iVar6 + 0x18;\n                return;\n            }\n            fcn.00401ed0();\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        arg2_00 = iVar2 * 2;\n        if (iVar2 * 2 < iVar8) {\n            arg2_00 = uVar9;\n        }\n        fcn.00401fa0(arg1, arg2_00);\n    }\n    return;\n}\n",
        "token_count": 698
    },
    "00403d1c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00403d1c(ulong *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    \n    *arg1 = arg2;\n    arg1[1] = 0;\n    if (*0x467730 == '\\0') {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"KERNEL32\");\n        if (iVar2 == 0) {\n            fcn.00412ca8();\n            pcVar1 = swi(3);\n            puVar3 = (*pcVar1)();\n            return puVar3;\n        }\n        *0x467710 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"CreateActCtxA\");\n        *0x467718 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"ReleaseActCtx\");\n        *0x467720 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"ActivateActCtx\");\n        *0x467728 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"DeactivateActCtx\");\n        if (*0x467710 == 0) {\n            if (((*0x467718 != 0) || (*0x467720 != 0)) || (*0x467728 != 0)) {\n                fcn.00412ca8();\n                pcVar1 = swi(3);\n                puVar3 = (*pcVar1)();\n                return puVar3;\n            }\n        }\n        else if (((*0x467718 == 0) || (*0x467720 == 0)) || (*0x467728 == 0)) {\n            fcn.00412ca8();\n            pcVar1 = swi(3);\n            puVar3 = (*pcVar1)();\n            return puVar3;\n        }\n        *0x467730 = '\\x01';\n    }\n    return arg1;\n}\n",
        "token_count": 421
    },
    "00403f90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00403f90(ulong *arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    ulong in_R8;\n    ulong in_R9;\n    \n    *arg1 = 0x44a4e8;\n    piVar1 = arg1[0x16];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1, 1, in_R8, in_R9, 0xfffffffffffffffe);\n    }\n    piVar1 = arg1[0x22];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 0x30))(piVar1, 1);\n    }\n    iVar2 = fcn.00413c10();\n    if (*(iVar2 + 0x28) == '\\0') {\n        if (*0x467708 != NULL) {\n            (**(**0x467708 + 8))(*0x467708, 1);\n            *0x467708 = NULL;\n        }\n        if (*0x467700 != NULL) {\n            (**(**0x467700 + 8))(*0x467700, 1);\n            *0x467700 = NULL;\n        }\n    }\n    if (arg1[0x1c] != 0) {\n        fcn.0041547c(arg1[0x1c]);\n    }\n    if (arg1[0x1d] != 0) {\n        fcn.0041547c(arg1[0x1d]);\n    }\n    if (*(arg1 + 0x24) != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)();\n    }\n    if (*(arg1 + 0x122) != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)();\n    }\n    piVar1 = arg1[0x23];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1, 1);\n    }\n    iVar2 = fcn.00413c10();\n    if (*(iVar2 + 0x20) == arg1[0x14]) {\n        *(iVar2 + 0x20) = 0;\n    }\n    if (*(iVar2 + 8) == arg1) {\n        *(iVar2 + 8) = 0;\n    }\n    fcn.0042dcd0(arg1[0x14]);\n    fcn.0042dcd0(arg1[0x15]);\n    fcn.0042dcd0(arg1[0x18]);\n    fcn.0042dcd0(arg1[0x19]);\n    fcn.0042dcd0(arg1[0x1a]);\n    arg1[0xb] = 0;\n    *arg1 = 0x44a9d8;\n    if (arg1[0xb] != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n    }\n    iVar2 = fcn.00413c60();\n    if (*(iVar2 + 8) == arg1) {\n        *(iVar2 + 8) = 0;\n    }\n    if (arg1[4] != 0) {\n        (**(arg1[4] + 0x38))();\n    }\n    arg1[7] = 0;\n    return;\n}\n",
        "token_count": 736
    },
    "00404118": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00404118(int64_t arg1)\n\n{\n    if (*(arg1 + 0x110) != 0) {\n        (**(**(arg1 + 0x110) + 0x28))();\n    }\n    if (*(arg1 + 0x124) != 0) {\n        fcn.004152d8(arg1, \"Settings\", \"PreviewPages\", *(arg1 + 0x124));\n    }\n    return;\n}\n",
        "token_count": 101
    },
    "00404334": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00404334(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong auStackX8 [4];\n    \n    if (*(arg1 + 0xe8) != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)();\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(*(iVar2 + 2) + iVar2, arg2);\n        if (iVar1 == 0) {\n            iVar1 = sub.WINSPOOL.DRV_OpenPrinterA(arg2, auStackX8, 0);\n            if (iVar1 != 0) {\n                if (*(arg1 + 0xe0) != 0) {\n                    fcn.0041547c(*(arg1 + 0xe0));\n                }\n                iVar1 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, auStackX8[0], arg2, 0, 0, 0);\n                uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, iVar1);\n                *(arg1 + 0xe0) = uVar3;\n                uVar3 = (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar3);\n                iVar1 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, auStackX8[0], arg2, uVar3, 0, 2);\n                if (iVar1 != 1) {\n                    fcn.0041547c(*(arg1 + 0xe0));\n                    *(arg1 + 0xe0) = 0;\n                }\n                sub.WINSPOOL.DRV_ClosePrinter(auStackX8[0]);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 390
    },
    "004046b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004046b0(int64_t *arg1)\n\n{\n    if ((*0x467718 != NULL) && (*arg1 != -1)) {\n        if ((*0x467728 != NULL) && (arg1[1] != 0)) {\n            arg1[1] = 0;\n            (**0x467728)(0);\n        }\n        (**0x467718)(*arg1);\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "00404700": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00404700(ulong arg1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    ulong uVar5;\n    code *pcVar6;\n    uint *puVar7;\n    int32_t *piVar8;\n    int64_t iVar9;\n    uint16_t uVar10;\n    int32_t iVar11;\n    int64_t iVar12;\n    uchar auStack808 [32];\n    ulong *puStack776;\n    uchar *puStack768;\n    uint16_t uStack760;\n    uint uStack756;\n    int64_t iStack752;\n    int64_t iStack744;\n    uint32_t uStack736;\n    int32_t iStack732;\n    ulong uStack728;\n    int32_t aiStack720 [6];\n    ulong uStack696;\n    uint uStack688;\n    uint uStack684;\n    uchar *puStack680;\n    ulong uStack656;\n    ulong uStack640;\n    ulong auStack632 [2];\n    uchar auStack616 [260];\n    uchar uStack356;\n    uchar uStack355;\n    uchar auStack344 [288];\n    uint64_t uStack56;\n    \n    uStack696 = 0xfffffffffffffffe;\n    uStack56 = *0x465c38 ^ auStack808;\n    uStack760 = 0;\n    iVar3 = 0;\n    iVar11 = 0;\n    uVar5 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"kernel32.dll\");\n    pcVar6 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar5, \"GetUserDefaultUILanguage\");\n    if (pcVar6 == NULL) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n        if (iVar2 < 0) {\n            uStack728 = 0;\n            puStack776 = &uStack728;\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)\n                              (0xffffffff80000001, \"Control Panel\\\\Desktop\\\\ResourceLocale\", 0, 0x20019);\n            if (iVar2 == 0) {\n                uStack756 = 0x10;\n                puStack768 = &uStack756;\n                puStack776 = auStack632;\n                piVar8 = &iStack732;\n                iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(uStack728, 0, 0);\n                iVar11 = iVar3;\n                if (((iVar2 == 0) && (iStack732 == 1)) &&\n                   (iVar3 = fcn.0042f7b0(auStack632, 0x44a6bc, &uStack736, piVar8),  iVar3 == 1)) {\n                    uStack760 = uStack736;\n                    aiStack720[0] =\n                         (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)(uStack760 & 0xfc00 | uStack736 & 0x3ff);\n                    aiStack720[1] = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)(uStack736 & 0x3ff);\n                    iVar11 = 2;\n                }\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uStack728);\n            }\n        }\n        else {\n            iVar12 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"ntdll.dll\");\n            if (iVar12 != 0) {\n                uStack760 = 0;\n                puStack776 = &uStack760;\n                (*_sym.imp.KERNEL32.dll_EnumResourceLanguagesA)(iVar12, 0x10, 1, 0x403d04);\n                if (uStack760 != 0) {\n                    uVar10 = uStack760 & 0x3ff;\n                    aiStack720[0] = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)(uStack760);\n                    aiStack720[1] = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)(uVar10);\n                    iVar11 = 2;\n                }\n            }\n        }\n    }\n    else {\n        uStack760 = (*pcVar6)();\n        uVar10 = uStack760 & 0x3ff;\n        aiStack720[0] = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)(uStack760);\n        aiStack720[1] = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)(uVar10);\n        iVar11 = 2;\n        pcVar6 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar5, \"GetSystemDefaultUILanguage\");\n        if (pcVar6 != NULL) {\n            uStack760 = (*pcVar6)();\n            uVar10 = uStack760 & 0x3ff;\n            aiStack720[2] = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)(uStack760);\n            aiStack720[3] = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)(uVar10);\n            iVar11 = 4;\n        }\n    }\n    aiStack720[iVar11] = 0x800;\n    uStack355 = 0;\n    uStack356 = 0;\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0x400000, auStack616, 0x105);\n    if (iVar3 != 0) {\n        fcn.0042f6c0(&uStack688, 0, 0x38);\n        uStack688 = 0x38;\n        puStack680 = auStack616;\n        uStack656 = 1000;\n        uStack640 = 0x400000;\n        uStack684 = 0x88;\n        fcn.00403d1c(&iStack752, 0xffffffffffffffff);\n        if ((((*0x467710 == NULL) || ((iStack752 == -1 && (iStack752 = (**0x467710)(),  iStack752 != -1)))) &&\n            (*0x467720 != NULL)) && ((iStack752 != -1 && (iStack744 == 0)))) {\n            (**0x467720)(iStack752, &iStack744);\n        }\n        iVar12 = 0;\n        if (iVar11 + 1 != 0) {\n            do {\n                if (aiStack720[iVar12] == 0x800) {\n                    iVar3 = fcn.0042f3a0(&uStack756, 4, 0x44a680);\n                    if (iVar3 != 0) {\n                        if (iVar3 == 0xc) {\n                            fcn.00412c60();\n                            pcVar6 = swi(3);\n                            (*pcVar6)();\n                            return;\n                        }\n                        if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                            fcn.00412ca8();\n                            pcVar6 = swi(3);\n                            (*pcVar6)();\n                            return;\n                        }\n                        if (iVar3 != 0x50) {\n                            fcn.00412ca8();\n                            pcVar6 = swi(3);\n                            (*pcVar6)();\n                            return;\n                        }\n                    }\ncode_r0x00404ac2:\n                    puVar7 = fcn.0042f5c0();\n                    uVar1 = *puVar7;\n                    puVar7 = fcn.0042f5c0();\n                    *puVar7 = 0;\n                    puStack776 = &uStack756;\n                    uVar4 = fcn.0042f540(auStack344, 0x112, 0x111, arg1);\n                    piVar8 = fcn.0042f5c0();\n                    if (*piVar8 == 0) {\n                        puVar7 = fcn.0042f5c0();\n                        *puVar7 = uVar1;\ncode_r0x00404b2a:\n                        if ((uVar4 == 0xffffffff) || (0x111 < uVar4)) {\n                            iVar9 = 0;\n                        }\n                        else {\n                            iVar9 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n                        }\n                        if (iVar9 == 0) goto code_r0x00404b51;\n                    }\n                    else {\n                        piVar8 = fcn.0042f5c0();\n                        if (*piVar8 == 0) goto code_r0x00404b2a;\n                        if (*piVar8 != 0xc) {\n                            if ((*piVar8 == 0x16) || (*piVar8 == 0x22)) {\n                                fcn.00401cd0(0x80070057);\n                                pcVar6 = swi(3);\n                                (*pcVar6)();\n                                return;\n                            }\n                            if (*piVar8 != 0x50) {\n                                fcn.00401cd0(0x80004005);\n                                pcVar6 = swi(3);\n                                (*pcVar6)();\n                                return;\n                            }\n                            goto code_r0x00404b2a;\n                        }\n                        fcn.00401cd0(0x8007000e);\n                    }\n                    if ((*0x467718 != NULL) && (iStack752 != -1)) {\n                        if ((*0x467728 != NULL) && (iStack744 != 0)) {\n                            iStack744 = 0;\n                            (**0x467728)(0);\n                        }\n                        (**0x467718)(iStack752);\n                    }\n                    goto code_r0x00404c33;\n                }\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)(aiStack720[iVar12], 3);\n                if (iVar3 != 0) goto code_r0x00404ac2;\ncode_r0x00404b51:\n                iVar12 = iVar12 + 1;\n            } while (iVar12 < iVar11 + 1);\n        }\n        if ((*0x467718 != NULL) && (iStack752 != -1)) {\n            if ((*0x467728 != NULL) && (iStack744 != 0)) {\n                iStack744 = 0;\n                (**0x467728)(0);\n            }\n            (**0x467718)(iStack752);\n        }\n    }\ncode_r0x00404c33:\n    fcn.0042dcb0(uStack56 ^ auStack808);\n    return;\n}\n",
        "token_count": 2259
    },
    "00405180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00405180(int64_t *arg1, uint64_t arg2, ulong arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    ulong *puVar5;\n    code **ppcVar6;\n    uint32_t uVar7;\n    int64_t *piVar8;\n    ulong in_stack_00000028;\n    \n    arg2 = arg2 & 0xffffffff;\n    if (arg3 == 0xfffffffe) {\n        iVar3 = fcn.00413c10();\n        if (*(iVar3 + 0x68) != 0) {\n            iVar3 = fcn.00413c10();\n            uVar4 = (**(**(iVar3 + 0x68) + 8))(*(iVar3 + 0x68), arg1, arg2, arg4, in_stack_00000028);\n            return uVar4;\n        }\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        uVar4 = (*pcVar1)();\n        return uVar4;\n    }\n    if (arg3 == 0xfffffffd) {\n        uVar7 = 0;\n        if (arg4 == 0) {\n            fcn.00412ca8();\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n        iVar3 = *(arg4 + 0x50);\n        puVar5 = (**(*arg1 + 0x58))();\n        do {\n            if ((puVar5 == NULL) || (uVar7 != 0)) {\n                return uVar7;\n            }\n            piVar8 = puVar5[1];\n            while (((*(piVar8 + 1) != 0 && (*(piVar8 + 0xc) != 0)) && (uVar7 == 0))) {\n                if (arg2 == *(piVar8 + 1)) {\n                    if (iVar3 == 0) {\n                        if (*piVar8 == 0) {\ncode_r0x00405243:\n                            uVar7 = 1;\n                            *(arg4 + 8) = *(piVar8 + 0xc);\n                        }\n                    }\n                    else if ((*piVar8 != 0) && (iVar2 = fcn.0042f910(iVar3, *piVar8, 0x10),  iVar2 == 0))\n                    goto code_r0x00405243;\n                }\n                piVar8 = piVar8 + 2;\n            }\n            puVar5 = *puVar5;\n        } while( true );\n    }\n    uVar7 = arg3;\n    if (arg3 != 0xffffffff) {\n        uVar7 = arg3 & 0xffff;\n        uVar4 = arg3 >> 0x10;\n        if (arg3 >> 0x10 != 0) goto code_r0x00405281;\n    }\n    uVar4 = 0x111;\ncode_r0x00405281:\n    ppcVar6 = (**(*arg1 + 0x50))();\n    while( true ) {\n        if (*ppcVar6 == NULL) {\n            return 0;\n        }\n        iVar3 = fcn.0040ae04(ppcVar6[1], uVar4, uVar7, arg2);\n        if (iVar3 != 0) break;\n        ppcVar6 = (**ppcVar6)();\n    }\n    uVar4 = fcn.00405000(arg1, arg2, uVar7, *(iVar3 + 0x18));\n    return uVar4;\n}\n",
        "token_count": 814
    },
    "004057f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.004057f0(ulong noname_0, ulong *arg2)\n\n{\n    ulong uVar1;\n    \n    if (*(arg2 + 1) == 1) {\n        uVar1 = 0xffffffffffffffff;\n    }\n    else {\n        if (*(arg2 + 1) == 0xf) {\n            (*_sym.imp.USER32.dll_ValidateRect)(*arg2, 0);\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 110
    },
    "00405a1c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00405a1c(int64_t *arg1, int64_t arg2)\n\n{\n    code **ppcVar1;\n    int64_t iVar2;\n    code *arg1_00;\n    \n    ppcVar1 = (**(*arg1 + 0x50))();\n    do {\n        if (*ppcVar1 == NULL) {\n            return 0;\n        }\n        arg1_00 = ppcVar1[1];\n        if (*(arg2 + 8) < 0xc000) {\n            iVar2 = fcn.0040ae04(arg1_00, *(arg2 + 8), 0, 0);\n            if (iVar2 != 0) {\ncode_r0x00405a5b:\n                (**(iVar2 + 0x18))(arg1, *(arg2 + 0x10), *(arg2 + 0x18));\n                return 1;\n            }\n        }\n        else {\n            while (iVar2 = fcn.0040ae04(arg1_00, 0xc000, 0, 0),  iVar2 != 0) {\n                if (**(iVar2 + 0x10) == *(arg2 + 8)) goto code_r0x00405a5b;\n                arg1_00 = iVar2 + 0x20;\n            }\n        }\n        ppcVar1 = (**ppcVar1)();\n    } while( true );\n}\n",
        "token_count": 313
    },
    "00405b14": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00405b14(int64_t *arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    ulong uVar4;\n    int64_t *piVar5;\n    \n    iVar2 = fcn.00413c60();\n    if (((*(iVar2 + 8) == 0) || (*arg1 != 0)) || (iVar1 = fcn.00405a1c(*(iVar2 + 8), arg1),  iVar1 == 0)) {\n        iVar2 = fcn.00413c60();\n        if (*(iVar2 + 8) == NULL) {\n            piVar3 = NULL;\n        }\n        else {\n            piVar3 = (**(**(iVar2 + 8) + 0xe8))();\n        }\n        if (piVar3 == NULL) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = piVar3[8];\n        }\n        iVar1 = fcn.0040dbc4(iVar2, arg1);\n        if (iVar1 == 0) {\n            if (piVar3 != NULL) {\n                uVar4 = fcn.0040d71c(*arg1);\n                piVar5 = fcn.0040f0cc(uVar4);\n                if (piVar5 != piVar3) {\n                    uVar4 = (**(*piVar3 + 0x200))(piVar3, arg1);\n                    return uVar4;\n                }\n            }\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 347
    },
    "00405ff8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00405ff8(void)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.00413c10();\n    if (*(iVar1 + 0x28) == '\\0') {\n        iVar1 = fcn.00413268();\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        uVar2 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(0xffffffff, 0x405de0, 0, uVar3);\n        *(iVar1 + 0x50) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "004061b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004061b4(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    if (*(arg1 + 0xb0) == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = (**(**(arg1 + 0xb0) + 0x20))();\n    }\n    return uVar1;\n}\n",
        "token_count": 84
    },
    "004061d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.004061d8(int64_t **arg1)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    int64_t **ppiVar3;\n    \n    piVar2 = (**(**arg1 + 0x20))();\n    if ((*(arg1 + 2) < 0) || (piVar2 != *arg1)) {\n        ppiVar3 = (***piVar2)(piVar2, *(arg1 + 1), 1);\n        if (ppiVar3 == NULL) {\n            fcn.00401ed0();\n            pcVar1 = swi(3);\n            ppiVar3 = (*pcVar1)();\n            return ppiVar3;\n        }\n        *(ppiVar3 + 1) = *(arg1 + 1);\n        fcn.0042e220(ppiVar3 + 3, *(arg1 + 1) + 1, arg1 + 3, *(arg1 + 1) + 1);\n    }\n    else {\n        LOCK();\n        *(arg1 + 2) = *(arg1 + 2) + 1;\n        ppiVar3 = arg1;\n    }\n    return ppiVar3;\n}\n",
        "token_count": 269
    },
    "00406468": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00406468(ulong arg1, ulong *lpSubKey)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar auStack408 [32];\n    char cStack376;\n    int64_t iStack368;\n    ulong uStack360;\n    ulong uStack352;\n    ulong *puStack344;\n    ulong uStack336;\n    uchar auStack312 [272];\n    uint64_t uStack40;\n    \n    uStack336 = 0xfffffffffffffffe;\n    uStack40 = *0x465c38 ^ auStack408;\n    uStack352 = arg1;\n    puStack344 = lpSubKey;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(arg1, *lpSubKey, &uStack360);\n    if (iVar3 == 0) {\n        do {\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyA)(uStack360, 0, auStack312, 0x104);\n            if (iVar3 != 0) break;\n            fcn.00404ed0(&iStack368, auStack312);\n            iVar3 = fcn.00406468(uStack360, &iStack368);\n            cStack376 = iVar3 != 0;\n            LOCK();\n            piVar1 = iStack368 + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 + -1 < 1) {\n                (**(**(iStack368 + -0x18) + 8))();\n            }\n        } while (cStack376 == '\\0');\n        if ((iVar3 == 0x103) || (iVar3 == 0x3f2)) {\n            (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(arg1, *lpSubKey);\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uStack360);\n    }\n    fcn.0042dcb0(uStack40 ^ auStack408);\n    return;\n}\n",
        "token_count": 459
    },
    "00406b6c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00406b6c(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t *piVar2;\n    \n    piVar2 = fcn.004057c8();\n    if (piVar2 == NULL) {\n        piVar2 = NULL;\n    }\n    else {\n        piVar2 = (**(*piVar2 + 0xe8))(piVar2);\n    }\n    if (piVar2 != NULL) {\n        iVar1 = (**(*piVar2 + 0x240))(piVar2);\n        if ((iVar1 != 0) && (piVar2[0x1c] != 0)) {\n            (**(*piVar2[0x1c] + 200))(piVar2[0x1c], arg1);\n        }\n    }\n    return;\n}\n",
        "token_count": 180
    },
    "00406cc4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00406cc4(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int64_t arg1_00;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uchar *arg3_00;\n    uchar auStack392 [32];\n    int32_t aiStack360 [2];\n    int64_t iStack352;\n    uchar auStack344 [259];\n    uchar uStack85;\n    uint64_t uStack72;\n    \n    uStack72 = *0x465c38 ^ auStack392;\n    fcn.00406b6c(0);\n    arg1_00 = fcn.00406bcc(0, &iStack352);\n    if (arg1_00 != iStack352) {\n        (*_sym.imp.USER32.dll_EnableWindow)(arg1_00, 1);\n    }\n    iVar3 = 0;\n    aiStack360[0] = 0;\n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(arg1_00, aiStack360);\n    if ((((arg1_00 == 0) || (iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)(),  aiStack360[0] != iVar1)) ||\n        (piVar2 = (*_sym.imp.USER32.dll_SendMessageA)(arg1_00, 0x376, 0),  piVar2 == NULL)) &&\n       (piVar2 = NULL,  arg1 != 0)) {\n        piVar2 = arg1 + 0xf0;\n    }\n    if ((piVar2 != NULL) && (iVar3 = *piVar2,  arg4 != 0)) {\n        *piVar2 = arg4 + 0x30000;\n    }\n    if ((arg3 & 0xf0) == 0) {\n        if ((arg3 & 0xf) < 2) {\n            arg3._0_4_ = arg3 | 0x30;\n        }\n        else if ((arg3 & 0xf) - 3 < 2) {\n            arg3._0_4_ = arg3 | 0x20;\n        }\n    }\n    auStack344[0] = 0;\n    if (arg1 == 0) {\n        arg3_00 = auStack344;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack344, 0x104);\n        if (iVar1 == 0x104) {\n            uStack85 = 0;\n        }\n    }\n    else {\n        arg3_00 = *(arg1 + 0xa0);\n    }\n    fcn.00406a74(arg1_00, arg2, arg3_00, arg3);\n    if (piVar2 != NULL) {\n        *piVar2 = iVar3;\n    }\n    if (iStack352 != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(iStack352, 1);\n    }\n    fcn.00406b6c(1);\n    fcn.0042dcb0(uStack72 ^ auStack392);\n    return;\n}\n",
        "token_count": 697
    },
    "004074e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004074e4(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    ulong uVar4;\n    uchar auStack24 [24];\n    \n    iVar2 = fcn.00413c10();\n    if (*(iVar2 + 8) == 0) {\n        uVar4 = 0;\n    }\n    else {\n        piVar3 = fcn.004057c8();\n        if (piVar3 == NULL) {\n            piVar3 = NULL;\n        }\n        else {\n            piVar3 = (**(*piVar3 + 0xe8))(piVar3);\n        }\n        if ((piVar3 != NULL) && (iVar1 = (**(*piVar3 + 0x18))(piVar3, 0xe146, 0, 0, auStack24),  iVar1 != 0)) {\n            return 1;\n        }\n        iVar2 = fcn.00413c10();\n        uVar4 = (**(**(iVar2 + 8) + 0x18))(*(iVar2 + 8), 0xe146, 0, 0, auStack24);\n    }\n    return uVar4;\n}\n",
        "token_count": 268
    },
    "00407a40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00407a40(int64_t *arg1)\n\n{\n    bool bVar1;\n    bool bVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t *piVar10;\n    int64_t *hWnd;\n    ulong uVar11;\n    ulong uStack104;\n    \n    iVar8 = arg1[0x18];\n    iVar7 = arg1[0x17];\n    iVar6 = fcn.00413c10();\n    uStack104 = *(iVar6 + 0x18);\n    if (arg1[0x16] != 0) {\n        iVar7 = fcn.00413c10();\n        uStack104 = *(iVar7 + 0x18);\n        (*_sym.imp.KERNEL32.dll_FindResourceA)(uStack104, arg1[0x16], 5);\n        iVar7 = (*_sym.imp.KERNEL32.dll_LoadResource)(uStack104);\n    }\n    if (iVar7 != 0) {\n        iVar8 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar7);\n    }\n    if (iVar8 == 0) {\n        iVar8 = -1;\n    }\n    else {\n        iVar6 = fcn.00407350(arg1);\n        fcn.0040d820();\n        hWnd = NULL;\n        bVar3 = false;\n        bVar1 = false;\n        bVar2 = false;\n        if (((iVar6 != 0) &&\n            (iVar9 = (*_sym.imp.USER32.dll_GetDesktopWindow)(),  bVar1 = bVar3,  bVar2 = false,  iVar6 != iVar9)) &&\n           (iVar4 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar6),  iVar4 != 0)) {\n            (*_sym.imp.USER32.dll_EnableWindow)(iVar6);\n            bVar2 = true;\n            piVar10 = fcn.004057c8();\n            if (piVar10 != NULL) {\n                hWnd = (**(*piVar10 + 0xe8))(piVar10);\n            }\n            if (((hWnd != NULL) && (iVar4 = (**(*hWnd + 0x240))(hWnd),  iVar4 != 0)) &&\n               (iVar4 = fcn.00411a08(hWnd),  iVar4 != 0)) {\n                fcn.00411a38(hWnd, 0);\n                bVar1 = bVar2;\n            }\n        }\n        fcn.0040fad0(arg1);\n        uVar11 = fcn.0040d71c(iVar6);\n        iVar4 = fcn.00407708(arg1, iVar8, uVar11, uStack104);\n        if (iVar4 != 0) {\n            if ((*(arg1 + 0xf) & 0x10) != 0) {\n                uVar5 = fcn.0041185c(arg1);\n                uVar11 = 4;\n                if ((uVar5 >> 8 & 1) != 0) {\n                    uVar11 = 5;\n                }\n                fcn.0040d0b8(arg1, uVar11);\n            }\n            if (arg1[8] != 0) {\n                fcn.00411bd4(arg1, 0, 0, 0);\n            }\n        }\n        if (bVar1) {\n            fcn.00411a38(hWnd, 1);\n        }\n        if (bVar2) {\n            (*_sym.imp.USER32.dll_EnableWindow)(iVar6, 1);\n        }\n        if ((iVar6 != 0) && (iVar8 = (*_sym.imp.USER32.dll_GetActiveWindow)(),  iVar8 == arg1[8])) {\n            (*_sym.imp.USER32.dll_SetActiveWindow)(iVar6);\n        }\n        (**(*arg1 + 0xc0))(arg1);\n        fcn.004073a8(arg1);\n        if (arg1[0x16] != 0) {\n            (*_sym.imp.KERNEL32.dll_FreeResource)(iVar7);\n        }\n        iVar8 = *(arg1 + 0x11);\n    }\n    return iVar8;\n}\n",
        "token_count": 944
    },
    "00408294": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00408294(int64_t lpModuleName, ulong *arg2)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    if (*(lpModuleName + 0x30) == 0) {\n        if (*(lpModuleName + 8) == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(*(lpModuleName + 0x18));\n            *(lpModuleName + 8) = iVar1;\n            if (iVar1 == 0) {\n                iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(*(lpModuleName + 0x18));\n                *(lpModuleName + 8) = iVar1;\n                *(lpModuleName + 0x10) = iVar1 != 0;\n            }\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*(lpModuleName + 8), \"ImageList_Create\");\n        *(lpModuleName + 0x30) = uVar2;\n    }\n    *arg2 = *(lpModuleName + 0x30);\n    return arg2;\n}\n",
        "token_count": 236
    },
    "00408300": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t fcn.00408300(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    uint in_stack_00000028;\n    uint in_stack_00000030;\n    ulong uStack64;\n    int64_t iStack56;\n    uchar auStack48 [8];\n    \n    uStack64 = 0;\n    iVar3 = fcn.00413c10();\n    iVar1 = fcn.00412ea8(*(iVar3 + 0xd8), &uStack64);\n    iStack56 = 0;\n    if (iVar1 == 0) {\n        iVar3 = 0;\n    }\n    else {\n        fcn.00408294(arg1, auStack48);\n        pcVar4 = *(arg1 + 0x30);\n        if (pcVar4 == NULL) {\n            fcn.00412ca8();\n        }\n        iVar3 = (*pcVar4)(arg2, arg3, arg4, in_stack_00000028, in_stack_00000030);\n        if (iVar1 != 2) {\n            iStack56 = iVar3;\n            if (iVar3 != 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            fcn.00412e8c(0, uStack64);\n            if (iVar3 == 0) {\n                (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 366
    },
    "0040842c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0040842c(int64_t lpModuleName, ulong *arg2)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    if (*(lpModuleName + 0x38) == 0) {\n        if (*(lpModuleName + 8) == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(*(lpModuleName + 0x18));\n            *(lpModuleName + 8) = iVar1;\n            if (iVar1 == 0) {\n                iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(*(lpModuleName + 0x18));\n                *(lpModuleName + 8) = iVar1;\n                *(lpModuleName + 0x10) = iVar1 != 0;\n            }\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*(lpModuleName + 8), \"ImageList_Destroy\");\n        *(lpModuleName + 0x38) = uVar2;\n    }\n    *arg2 = *(lpModuleName + 0x38);\n    return arg2;\n}\n",
        "token_count": 237
    },
    "004086f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004086f0(int64_t arg1)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    \n    if (*(arg1 + 8) == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.004086b0(arg1);\n        iVar2 = fcn.00413c10();\n        uVar1 = fcn.00408498(**(iVar2 + 200), uVar1);\n    }\n    return uVar1;\n}\n",
        "token_count": 116
    },
    "0040916c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040916c(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    \n    if (*(arg1 + 0x20) == 0) {\n        iVar3 = fcn.00418c44(arg1 + 0x28, *(arg1 + 0x30), 0x18);\n        iVar1 = *(arg1 + 0x30);\n        puVar4 = iVar3 + -0x10 + iVar1 * 0x18;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar4 = *(arg1 + 0x20);\n            *(arg1 + 0x20) = puVar4;\n            puVar4 = puVar4 + -3;\n        }\n    }\n    puVar4 = *(arg1 + 0x20);\n    if (puVar4 != NULL) {\n        *(arg1 + 0x20) = *puVar4;\n        puVar4[1] = arg2;\n        *puVar4 = arg3;\n        *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n        return;\n    }\n    fcn.00412ca8();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 320
    },
    "004091ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004091ec(ulong noname_0, int64_t arg2)\n\n{\n    uint16_t uVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    ulong *puVar7;\n    \n    if (*(arg2 + 0x98) != 0) {\n        puVar7 = *(*(arg2 + 0x98) + 0x88);\n        while (puVar7 != NULL) {\n            if (puVar7 == NULL) {\n                fcn.00412ca8();\n                pcVar4 = swi(3);\n                (*pcVar4)();\n                return;\n            }\n            iVar3 = puVar7[2];\n            puVar7 = *puVar7;\n            if (*(iVar3 + 8) != 0) {\n                for (iVar6 = *(*(iVar3 + 8) + 0xe0); iVar6 != 0; iVar6 = fcn.0041d1b0(iVar6)) {\n                    fcn.0041d1ac(iVar6, *(iVar3 + 8));\n                    if (*(iVar6 + 8) != 0) {\n                        iVar5 = fcn.004117b0(arg2, *(iVar6 + 8));\n                        fcn.0042062c(iVar6, *(iVar5 + 0xa0));\n                    }\n                }\n                uVar1 = *(*(iVar3 + 8) + 0xe8);\n                if (uVar1 != 0) {\n                    iVar6 = fcn.004117b0(arg2, uVar1);\n                    (**(**(iVar6 + 0xa0) + 0x168))();\n                    *(*(iVar3 + 8) + 0xe8) = *(iVar6 + 0xa0);\n                    piVar2 = *(*(iVar6 + 0xa0) + 0xd8);\n                    (**(*piVar2 + 0x10))(piVar2, *(iVar3 + 8), 1);\n                }\n            }\n        }\n        puVar7 = *(*(arg2 + 0x98) + 0x88);\n        while (puVar7 != NULL) {\n            if (puVar7 == NULL) {\n                fcn.00412ca8();\n                pcVar4 = swi(3);\n                (*pcVar4)();\n                return;\n            }\n            piVar2 = puVar7 + 2;\n            puVar7 = *puVar7;\n            iVar3 = *(*piVar2 + 8);\n            if ((iVar3 != 0) && (*(iVar3 + 0xd8) != 0)) {\n                (**(**(iVar3 + 0xd8) + 0x18))();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 622
    },
    "004096a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.004096a8(int64_t *arg1, int64_t *arg2)\n\n{\n    int64_t **arg1_00;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t **ppiVar5;\n    \n    iVar4 = *arg2;\n    iVar3 = *arg1;\n    arg1_00 = iVar4 + -0x18;\n    ppiVar5 = iVar3 + -0x18;\n    if (arg1_00 != ppiVar5) {\n        if ((*(iVar3 + -8) < 0) || (*arg1_00 != *ppiVar5)) {\n            fcn.00403160(arg1, iVar4, *(iVar4 + -0x10));\n        }\n        else {\n            iVar4 = fcn.004061d8(arg1_00);\n            LOCK();\n            piVar1 = iVar3 + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 + -1 < 1) {\n                (**(**ppiVar5 + 8))(*ppiVar5, ppiVar5);\n            }\n            *arg1 = iVar4 + 0x18;\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 300
    },
    "00409edc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00409edc(void)\n\n{\n    uchar auStack216 [32];\n    uint uStack184;\n    uchar auStack180 [156];\n    uint64_t uStack24;\n    \n    uStack24 = *0x465c38 ^ auStack216;\n    fcn.0042f6c0(auStack180, 0, 0x90);\n    uStack184 = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&uStack184);\n    fcn.0042dcb0(uStack24 ^ auStack216);\n    return;\n}\n",
        "token_count": 132
    },
    "0040a098": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0040a098(int32_t *arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    \n    iVar1 = fcn.00409f3c();\n    if (iVar1 == 0) {\n        if (((arg2 & 3) == 0) &&\n           ((((arg1[2] < 1 || (arg1[3] < 1)) || (iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0),  iVar1 <= *arg1))\n            || (iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(1),  iVar1 <= arg1[1])))) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 0x12340042;\n        }\n        return uVar2;\n    }\n    uVar2 = (**0x46a770)(arg1, arg2);\n    return uVar2;\n}\n",
        "token_count": 209
    },
    "0040a22c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.0040a22c(int64_t *arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    ushort *puVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    uint32_t *puVar12;\n    uint *puVar13;\n    uint auStackX8 [8];\n    uint16_t in_stack_00000028;\n    int64_t *in_stack_00000030;\n    ushort *in_stack_00000038;\n    uint *in_stack_00000048;\n    int64_t iStack216;\n    int64_t iStack208;\n    int64_t iStack200;\n    int64_t *apiStack184 [4];\n    int64_t *piStack152;\n    int64_t aiStack144 [3];\n    int64_t iStack120;\n    int64_t iStack112;\n    int64_t iStack104;\n    ulong uStack96;\n    ushort auStack88 [16];\n    \n    auStack88[0] = 0;\n    if (arg1 == NULL) {\n        return -0x7ff8ffa9;\n    }\n    if (in_stack_00000030 == NULL) {\n        return -0x7ffdfff8;\n    }\n    uVar1 = *(in_stack_00000030 + 2);\n    if (5 < uVar1) {\n        return -0x7ffdfff2;\n    }\n    uVar10 = 0;\n    if (*(in_stack_00000030 + 0x14) != 0) {\n        puVar12 = in_stack_00000030[1];\n        uVar11 = uVar10;\n        do {\n            if (uVar1 <= *puVar12) {\n                return -0x7ffdfff2;\n            }\n            uVar8 = uVar11 + 1;\n            uVar10 = uVar8;\n            uVar2 = *puVar12;\n            puVar12 = puVar12 + 1;\n            uVar9 = *(in_stack_00000030 + 0x14);\n            apiStack184[uVar2] = *in_stack_00000030 + uVar11 * 0x18;\n            uVar11 = uVar10;\n        } while (uVar8 < uVar9);\n    }\n    if (uVar10 < uVar1) {\n        piVar6 = *in_stack_00000030 + uVar10 * 0x18;\n        do {\n            iVar4 = uVar10;\n            uVar9 = iVar4 + 1;\n            uVar10 = uVar9;\n            apiStack184[(uVar1 - iVar4) - 1] = piVar6;\n            piVar6 = piVar6 + 3;\n        } while (uVar9 < uVar1);\n    }\n    iVar4 = -0x7ffdfffd;\n    puVar13 = auStackX8;\n    if (in_stack_00000048 != NULL) {\n        puVar13 = in_stack_00000048;\n    }\n    puVar7 = auStack88;\n    if (in_stack_00000038 != NULL) {\n        puVar7 = in_stack_00000038;\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantClear)();\n    if (0x12 < arg2 + 0x139aU) goto code_r0x0040aa7d;\n    // switch table (19 cases) at 0x40aa9c\n    switch(*((arg2 + 0x139aU) * 4 + 0x40aa9c) + 0x400000) {\n    case 0x40a354:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack216 = *apiStack184[0];\n            iStack208 = apiStack184[0][1];\n            iStack200 = apiStack184[0][2];\n            iVar4 = (**(*arg1 + 200))(arg1, &iStack216);\n            goto code_r0x0040aa7d;\n        }\n        break;\n    case 0x40a395:\n        if (*(in_stack_00000030 + 2) == 2) {\n            if (*apiStack184[0] != 3) {\n                iVar4 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(aiStack144, apiStack184[0], 0, 3);\n                if (iVar4 < 0) goto code_r0x0040a684;\n                apiStack184[0] = aiStack144;\n            }\n            uVar3 = *(apiStack184[0] + 1);\n            if (*apiStack184[1] != 3) {\n                iVar4 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(aiStack144, apiStack184[1], 0, 3);\n                if (iVar4 < 0) {\ncode_r0x0040a9b6:\n                    *puVar13 = 1;\n                    goto code_r0x0040aa7d;\n                }\n                apiStack184[1] = aiStack144;\n            }\n            iVar4 = (**(*arg1 + 0xc0))(arg1, uVar3, *(apiStack184[1] + 1), puVar7);\n            goto code_r0x0040aa7d;\n        }\n        break;\n    case 0x40a41d:\n        if (*(in_stack_00000030 + 2) == 2) {\n            if (*apiStack184[0] != 3) {\n                iVar4 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(aiStack144, apiStack184[0], 0, 3);\n                if (iVar4 < 0) goto code_r0x0040a684;\n                apiStack184[0] = aiStack144;\n            }\n            iStack216 = *apiStack184[1];\n            iStack208 = apiStack184[1][1];\n            iStack200 = apiStack184[1][2];\n            iVar4 = (**(*arg1 + 0xb8))(arg1, *(apiStack184[0] + 1), &iStack216, puVar7);\n            goto code_r0x0040aa7d;\n        }\n        break;\n    case 0x40a491:\n        iVar5 = iStack120;\n        if (*(in_stack_00000030 + 2) == 5) {\n            while (((*apiStack184[0] >> 0xe & 1) != 0 && ((*apiStack184[0] & 0xf) != 0))) {\n                if ((*apiStack184[0] & 0xc) == 0) {\n                    iVar5 = apiStack184[0][1];\n                }\n                else {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(apiStack184[0][1]);\n                    *apiStack184[0][1] = 3;\n                    iVar5 = apiStack184[0][1] + 8;\n                }\n            }\n            *puVar13 = 0;\n            iStack216 = *piStack152;\n            iStack208 = piStack152[1];\n            iStack200 = piStack152[2];\n            iVar4 = (**(*arg1 + 0xb0))(arg1, iVar5, iStack112, iStack104, uStack96, &iStack216);\n            goto code_r0x0040aa7d;\n        }\n        break;\n    case 0x40a53f:\n        if (*(in_stack_00000030 + 2) == 2) {\n            if (*apiStack184[0] != 3) {\n                iVar4 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(aiStack144, apiStack184[0], 0, 3);\n                if (iVar4 < 0) goto code_r0x0040a684;\n                apiStack184[0] = aiStack144;\n            }\n            iStack216 = *apiStack184[1];\n            iStack208 = apiStack184[1][1];\n            iStack200 = apiStack184[1][2];\n            iVar4 = (**(*arg1 + 0xa8))(arg1, *(apiStack184[0] + 1), &iStack216);\n            goto code_r0x0040aa7d;\n        }\n        break;\n    case 0x40a5b0:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack216 = *apiStack184[0];\n            iStack208 = apiStack184[0][1];\n            iStack200 = apiStack184[0][2];\n            iVar4 = (**(*arg1 + 0xa0))(arg1, &iStack216, puVar7 + 4);\ncode_r0x0040a946:\n            if (-1 < iVar4) {\n                *puVar7 = 8;\n            }\n            goto code_r0x0040aa7d;\n        }\n        break;\n    case 0x40a5f5:\n        iVar4 = (**(*arg1 + 0x98))(arg1, puVar7);\n        goto code_r0x0040aa7d;\n    case 0x40a60a:\n        iVar4 = (**(*arg1 + 0x90))(arg1, puVar7);\n        goto code_r0x0040aa7d;\n    case 0x40a61f:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack216 = *apiStack184[0];\n            iStack208 = apiStack184[0][1];\n            iStack200 = apiStack184[0][2];\n            iVar4 = (**(*arg1 + 0x88))(arg1, &iStack216, puVar7 + 4);\n            goto code_r0x0040a946;\n        }\n        break;\n    case 0x40a664:\n        if (*(in_stack_00000030 + 2) == 2) {\n            if (((*apiStack184[0] >> 0xe & 1) != 0) && ((*apiStack184[0] & 0xc) == 0)) {\n                iVar4 = -0x7ffdfffb;\ncode_r0x0040a684:\n                *puVar13 = 0;\n                goto code_r0x0040aa7d;\n            }\n            if (*apiStack184[0] == 0x400c) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(apiStack184[0][1]);\n                *apiStack184[0][1] = 8;\n                piVar6 = apiStack184[0][1] + 8;\n            }\n            else if (*apiStack184[0] == 0x4008) {\n                piVar6 = apiStack184[0][1];\n            }\n            else {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(apiStack184[0]);\n                piVar6 = apiStack184[0] + 1;\n                *apiStack184[0] = 8;\n            }\n            iStack216 = *apiStack184[1];\n            iStack208 = apiStack184[1][1];\n            iStack200 = apiStack184[1][2];\n            iVar4 = (**(*arg1 + 0x80))(arg1, piVar6, &iStack216, puVar7 + 4);\n            goto code_r0x0040aa57;\n        }\n        break;\n    case 0x40a710:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack216 = *apiStack184[0];\n            iStack208 = apiStack184[0][1];\n            iStack200 = apiStack184[0][2];\n            iVar4 = (**(*arg1 + 0x78))(arg1, &iStack216, puVar7 + 4);\n            goto code_r0x0040a946;\n        }\n        break;\n    case 0x40a752:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack216 = *apiStack184[0];\n            iStack208 = apiStack184[0][1];\n            iStack200 = apiStack184[0][2];\n            iVar4 = (**(*arg1 + 0x70))(arg1, &iStack216, puVar7);\n            goto code_r0x0040aa7d;\n        }\n        break;\n    case 0x40a793:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack216 = *apiStack184[0];\n            iStack208 = apiStack184[0][1];\n            iStack200 = apiStack184[0][2];\n            iVar4 = (**(*arg1 + 0x68))(arg1, &iStack216, puVar7);\n            goto code_r0x0040aa7d;\n        }\n        break;\n    case 0x40a7d4:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack216 = *apiStack184[0];\n            iStack208 = apiStack184[0][1];\n            iStack200 = apiStack184[0][2];\n            iVar4 = (**(*arg1 + 0x60))(arg1, &iStack216, puVar7 + 4);\n            goto code_r0x0040a946;\n        }\n        break;\n    case 0x40a816:\n        if ((in_stack_00000028 & 2) == 0) {\n            if ((in_stack_00000028 & 4) == 0) goto code_r0x0040a8ff;\n            if (*(in_stack_00000030 + 2) == 2) {\n                iStack216 = *apiStack184[0];\n                iStack208 = apiStack184[0][1];\n                iStack200 = apiStack184[0][2];\n                if (*apiStack184[1] != 8) {\n                    iVar4 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(aiStack144, apiStack184[1], 0, 3);\n                    if (iVar4 < 0) goto code_r0x0040a9b6;\n                    apiStack184[1] = aiStack144;\n                }\n                iStack120 = iStack216;\n                iStack112 = iStack208;\n                iStack104 = iStack200;\n                iVar4 = (**(*arg1 + 0xd8))(arg1, &iStack120, apiStack184[1][1]);\n                goto code_r0x0040aa7d;\n            }\n        }\n        else if (*(in_stack_00000030 + 2) == 1) {\n            iStack216 = *apiStack184[0];\n            iStack208 = apiStack184[0][1];\n            iStack200 = apiStack184[0][2];\n            iVar4 = (**(*arg1 + 0x58))(arg1, &iStack216, puVar7 + 4);\n            goto code_r0x0040a946;\n        }\n        break;\n    case 0x40a8ff:\ncode_r0x0040a8ff:\n        if ((in_stack_00000028 & 2) == 0) {\n            if ((in_stack_00000028 & 4) == 0) goto code_r0x0040aa01;\n            if (*(in_stack_00000030 + 2) == 2) {\n                iStack120 = *apiStack184[0];\n                iStack112 = apiStack184[0][1];\n                iStack104 = apiStack184[0][2];\n                if (*apiStack184[1] != 8) {\n                    iVar4 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(aiStack144, apiStack184[1], 0, 3);\n                    if (iVar4 < 0) goto code_r0x0040a9b6;\n                    apiStack184[1] = aiStack144;\n                }\n                iStack216 = iStack120;\n                iStack208 = iStack112;\n                iStack200 = iStack104;\n                iVar4 = (**(*arg1 + 0xd0))(arg1, &iStack216, apiStack184[1][1]);\n                goto code_r0x0040aa7d;\n            }\n        }\n        else if (*(in_stack_00000030 + 2) == 1) {\n            iStack120 = *apiStack184[0];\n            iStack112 = apiStack184[0][1];\n            iStack104 = apiStack184[0][2];\n            iVar4 = (**(*arg1 + 0x50))(arg1, &iStack120, puVar7 + 4);\n            goto code_r0x0040a946;\n        }\n        break;\n    case 0x40aa01:\ncode_r0x0040aa01:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack120 = *apiStack184[0];\n            iStack112 = apiStack184[0][1];\n            iStack104 = apiStack184[0][2];\n            iVar4 = (**(*arg1 + 0x48))(arg1, &iStack120, puVar7 + 4);\n            goto code_r0x0040aa72;\n        }\n        break;\n    case 0x40aa49:\n        iVar4 = (**(*arg1 + 0x40))(arg1, puVar7 + 4);\ncode_r0x0040aa57:\n        if (-1 < iVar4) {\n            *puVar7 = 3;\n        }\n        goto code_r0x0040aa7d;\n    case 0x40aa64:\n        iVar4 = (**(*arg1 + 0x38))(arg1, puVar7 + 4);\ncode_r0x0040aa72:\n        if (-1 < iVar4) {\n            *puVar7 = 9;\n        }\n        goto code_r0x0040aa7d;\n    }\n    iVar4 = -0x7ffdfff2;\ncode_r0x0040aa7d:\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(aiStack144);\n    return iVar4;\n}\n",
        "token_count": 4096
    },
    "0040ae06": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * fcn.0040ae06(int32_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    while( true ) {\n        if (*(arg1 + 4) == 0) {\n            return NULL;\n        }\n        if ((((*arg1 == arg2) && (arg1[1] == arg3)) && (arg1[2] <= arg4)) && (arg4 < arg1[3] || arg4 == arg1[3])) break;\n        arg1 = arg1 + 8;\n    }\n    return arg1;\n}\n",
        "token_count": 129
    },
    "0040b56c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint64_t fcn.0040b56c(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    ulong in_R9;\n    ulong auStack48 [2];\n    \n    auStack48[0] = 0;\n    iVar4 = fcn.00413c10();\n    uVar5 = fcn.00412ea8(*(iVar4 + 0xd8), auStack48);\n    iVar1 = uVar5;\n    if (iVar1 != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetClassInfoA)(arg1, arg2, arg3, in_R9, 0);\n        uVar5 = uVar2;\n        if (iVar1 != 2) {\n            if (uVar2 != 0) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            fcn.00412e8c(0, auStack48[0]);\n            if (uVar2 == 0) {\n                (*_sym.imp.KERNEL32.dll_SetLastError)(uVar3);\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 295
    },
    "0040b654": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint64_t fcn.0040b654(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    ulong in_R9;\n    ulong auStack48 [2];\n    \n    auStack48[0] = 0;\n    iVar4 = fcn.00413c10();\n    uVar5 = fcn.00412ea8(*(iVar4 + 0xd8), auStack48);\n    iVar1 = uVar5;\n    if (iVar1 != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetClassInfoExA)(arg1, arg2, arg3, in_R9, 0);\n        uVar5 = uVar2;\n        if (iVar1 != 2) {\n            if (uVar2 != 0) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            fcn.00412e8c(0, auStack48[0]);\n            if (uVar2 == 0) {\n                (*_sym.imp.KERNEL32.dll_SetLastError)(uVar3);\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 295
    },
    "0040b73c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t fcn.0040b73c(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int64_t iVar3;\n    uint in_stack_00000028;\n    uint in_stack_00000030;\n    uint in_stack_00000038;\n    uint in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong uStack64;\n    int64_t iStack56;\n    \n    uStack64 = 0;\n    iVar3 = fcn.00413c10();\n    iVar1 = fcn.00412ea8(*(iVar3 + 0xd8), &uStack64);\n    iStack56 = 0;\n    if (iVar1 == 0) {\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                          (arg1, arg2, arg3, arg4, in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                           in_stack_00000040, in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060\n                           , iVar1);\n        if (iVar1 != 2) {\n            iStack56 = iVar3;\n            if (iVar3 != 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            fcn.00412e8c(0, uStack64);\n            if (iVar3 == 0) {\n                (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 418
    },
    "0040b994": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040b994(ulong *arg1)\n\n{\n    if (*(arg1 + 1) != 0) {\n        fcn.00412e8c(0, *arg1);\n    }\n    return;\n}\n",
        "token_count": 52
    },
    "0040d314": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0040d314(int64_t lpModuleName, ulong *arg2)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    if (*(lpModuleName + 0x20) == 0) {\n        if (*(lpModuleName + 8) == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(*(lpModuleName + 0x18));\n            *(lpModuleName + 8) = iVar1;\n            if (iVar1 == 0) {\n                iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(*(lpModuleName + 0x18));\n                *(lpModuleName + 8) = iVar1;\n                *(lpModuleName + 0x10) = iVar1 != 0;\n            }\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*(lpModuleName + 8), \"InitCommonControls\");\n        *(lpModuleName + 0x20) = uVar2;\n    }\n    *arg2 = *(lpModuleName + 0x20);\n    return arg2;\n}\n",
        "token_count": 237
    },
    "0040d380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040d380(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    ulong uStackX24;\n    uchar auStackX32 [8];\n    \n    uStackX24 = 0;\n    iVar1 = fcn.00413c10();\n    iVar2 = fcn.00412ea8(*(iVar1 + 0xd8), &uStackX24);\n    if (iVar2 != 0) {\n        fcn.0040d314(arg1, auStackX32);\n        pcVar3 = *(arg1 + 0x20);\n        if (pcVar3 == NULL) {\n            fcn.00412ca8();\n        }\n        (*pcVar3)();\n        if (iVar2 != 2) {\n            fcn.00412e8c(0, uStackX24);\n        }\n    }\n    return;\n}\n",
        "token_count": 203
    },
    "0040d420": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0040d420(int64_t lpModuleName, ulong *arg2)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    if (*(lpModuleName + 0x28) == 0) {\n        if (*(lpModuleName + 8) == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(*(lpModuleName + 0x18));\n            *(lpModuleName + 8) = iVar1;\n            if (iVar1 == 0) {\n                iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(*(lpModuleName + 0x18));\n                *(lpModuleName + 8) = iVar1;\n                *(lpModuleName + 0x10) = iVar1 != 0;\n            }\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*(lpModuleName + 8), \"InitCommonControlsEx\");\n        *(lpModuleName + 0x28) = uVar2;\n    }\n    *arg2 = *(lpModuleName + 0x28);\n    return arg2;\n}\n",
        "token_count": 238
    },
    "0040d820": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0040d820(void)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    bool bVar5;\n    \n    iVar2 = fcn.00415eb0(0x46aaa8, 0x405abc);\n    if (iVar2 != 0) {\n        iVar4 = fcn.00413c10();\n        if ((*(iVar4 + 0x28) != '\\0') && (*(iVar2 + 0x48) != 0)) {\n            (*_sym.imp.USER32.dll_UnhookWindowsHookEx)();\n            *(iVar2 + 0x48) = 0;\n        }\n        bVar5 = *(iVar2 + 0x28) == 0;\n        if (!bVar5) {\n            *(iVar2 + 0x28) = 0;\n        }\n        return bVar5;\n    }\n    fcn.00412ca8();\n    pcVar1 = swi(3);\n    uVar3 = (*pcVar1)();\n    return uVar3;\n}\n",
        "token_count": 243
    },
    "0040dfe4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.0040dfe4(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint64_t arg3_00;\n    ulong in_stack_00000028;\n    uchar auStack136 [16];\n    ulong uStack120;\n    uchar auStack112 [56];\n    \n    uStack120 = 0xfffffffffffffffe;\n    iVar3 = fcn.00415eb0(0x46aaa8, 0x405abc);\n    arg3_00 = 0;\n    if (iVar3 == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        uVar4 = (*pcVar1)();\n        return uVar4;\n    }\n    fcn.0042f9f0(auStack112, iVar3 + 0x98, 0x30);\n    *(iVar3 + 0x98) = arg2;\n    *(iVar3 + 0xa0) = arg3;\n    *(iVar3 + 0xa8) = arg4;\n    *(iVar3 + 0xb0) = in_stack_00000028;\n    if ((arg3 == 2) && (arg1[0x13] != 0)) {\n        (**(*arg1[0x13] + 0xc0))(arg1[0x13], 0);\n    }\n    if (arg3 == 0x110) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(arg1[8], auStack136);\n        uVar2 = fcn.0041185c(arg1);\n        arg3_00 = uVar2;\n    }\n    uVar4 = (**(*arg1 + 0x210))(arg1, arg3, arg4, in_stack_00000028);\n    if (arg3 == 0x110) {\n        fcn.0040df54(arg1, auStack136, arg3_00);\n    }\n    fcn.0042f9f0(iVar3 + 0x98, auStack112, 0x30);\n    return uVar4;\n}\n",
        "token_count": 489
    },
    "0040e404": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0040e404(int64_t *arg1)\n\n{\n    int64_t *arg1_00;\n    int32_t iVar1;\n    int64_t *piVar2;\n    \n    if ((arg1 == NULL) || (arg1[8] == 0)) {\n        arg1 = NULL;\n    }\n    else {\n        iVar1 = (**(*arg1 + 0x240))();\n        piVar2 = arg1;\n        if (iVar1 == 0) {\n            arg1 = fcn.0040e3b4(arg1);\n            piVar2 = arg1;\n        }\n        while (arg1_00 = piVar2,  arg1_00 != NULL) {\n            piVar2 = fcn.0040e3b4(arg1_00);\n            arg1 = arg1_00;\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 196
    },
    "0040e680": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0040e680(int64_t *arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    uVar1 = fcn.0040d784(arg1, arg2);\n    if (uVar1 != 0) {\n        (**(*arg1 + 0xa0))(arg1);\n        piVar2 = (**(*arg1 + 0x1e0))(arg1);\n        iVar3 = (*_sym.imp.USER32.dll_SetWindowLongPtrA)(arg2, 0xfffffffc, 0x40e174);\n        if (*piVar2 == 0) {\n            *piVar2 = iVar3;\n        }\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 178
    },
    "0040ee24": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0040ee24(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    \n    fcn.0041633c(0xc);\n    iVar2 = fcn.004157f8(0x46aa70, 0x40df2c);\n    if (iVar2 == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        uVar3 = (*pcVar1)();\n        return uVar3;\n    }\n    if (*(iVar2 + 0x10) == 0) {\n        iVar4 = fcn.0040b8a8(\"hhctrl.ocx\");\n        *(iVar2 + 8) = iVar4;\n        if (iVar4 != 0) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar4, \"HtmlHelpA\");\n            *(iVar2 + 0x10) = iVar4;\n            if (iVar4 != 0) goto code_r0x0040eeb3;\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(*(iVar2 + 8));\n            *(iVar2 + 8) = 0;\n        }\n        uVar3 = 0;\n    }\n    else {\ncode_r0x0040eeb3:\n        fcn.004163c8(0xc);\n        uVar3 = (**(iVar2 + 0x10))(arg1, arg2, arg3, arg4);\n    }\n    return uVar3;\n}\n",
        "token_count": 358
    },
    "0040fad0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040fad0(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    \n    iVar3 = fcn.00415eb0(0x46aaa8, 0x405abc);\n    if (iVar3 == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if (*(iVar3 + 0x28) != arg1) {\n        if (*(iVar3 + 0x48) == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            iVar4 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(5, 0x40f7b8, 0, uVar2);\n            *(iVar3 + 0x48) = iVar4;\n            if (iVar4 == 0) {\n                fcn.00412c60();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        *(iVar3 + 0x28) = arg1;\n    }\n    return;\n}\n",
        "token_count": 268
    },
    "0040fda4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0040fda4(int64_t *arg1, ulong arg2, uint64_t arg3, int64_t *arg4)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    ulong uVar6;\n    code **ppcVar7;\n    uchar *puVar8;\n    int64_t iVar9;\n    ulong uVar10;\n    uint64_t uVar11;\n    int16_t iVar12;\n    uint32_t *puVar13;\n    uint32_t *puVar14;\n    uint64_t *in_stack_00000028;\n    uint64_t uStack296;\n    int32_t iStack288;\n    int32_t iStack284;\n    uint uStack280;\n    uchar auStack272 [8];\n    int64_t iStack264;\n    ulong uStack240;\n    uchar auStack232 [64];\n    int64_t iStack168;\n    int64_t iStack72;\n    \n    uStack240 = 0xfffffffffffffffe;\n    uStack296 = 0;\n    uStack280 = 0x7fffffff;\n    if (arg2 == 0x111) {\n        iVar4 = (**(*arg1 + 0x1d0))(arg1, arg3, arg4);\n        if (iVar4 == 0) {\n            return 0;\n        }\n        uStack296 = 1;\n    }\n    else if (arg2 == 0x4e) {\n        if ((*arg4 == 0) || (iVar4 = (**(*arg1 + 0x1d8))(arg1, arg3, arg4, &uStack296),  iVar4 == 0)) {\n            return 0;\n        }\n    }\n    else {\n        if (arg2 == 6) {\n            uVar6 = fcn.0040d71c(arg4);\n            fcn.0040f4a4(arg1, arg3, uVar6);\n        }\n        iVar12 = arg4;\n        if ((arg2 == 0x20) && (iVar4 = fcn.0040f530(arg1, iVar12, arg4 >> 0x10 & 0xffff),  iVar4 != 0)) {\n            uStack296 = 1;\n        }\n        else if ((((arg1[0x13] == 0) || (*(arg1[0x13] + 0xe0) < 1)) ||\n                 ((((arg2 < 0x200 || (0x209 < arg2)) && ((arg2 < 0x100 || (0x10f < arg2)))) && (0x10 < arg2 - 0x281))))\n                || (iVar4 = (**(*arg1[0x13] + 0x128))(arg1[0x13], arg2, arg3, arg4, &uStack296),  iVar4 == 0)) {\n            ppcVar7 = (**(*arg1 + 0x50))();\n            uVar11 = (ppcVar7 ^ arg2) & 0x1ff;\n            uStack280 = 7;\n            fcn.0041633c(7);\n            if ((arg2 != *(uVar11 * 0x18 + 0x467760)) || (ppcVar7 != *(uVar11 * 0x18 + 0x467770))) {\n                *(uVar11 * 0x18 + 0x467760) = arg2;\n                *(uVar11 * 0x18 + 0x467770) = ppcVar7;\n                pcVar2 = *ppcVar7;\n                do {\n                    if (pcVar2 == NULL) {\n                        *(uVar11 * 0x18 + 0x467768) = 0;\n                        fcn.004163c8(7);\n                        return 0;\n                    }\n                    if (arg2 < 0xc000) {\n                        puVar13 = ppcVar7[1];\n                        iVar9 = *(puVar13 + 4);\n                        for (; (puVar14 = NULL,  iVar9 != 0 &&\n                               (((*puVar13 != arg2 || (puVar13[1] != 0)) || (puVar14 = puVar13,  puVar13[2] != 0))));\n                            puVar13 = puVar13 + 8) {\n                            iVar9 = *(puVar13 + 0xc);\n                        }\n                        if (puVar14 != NULL) {\n                            *(uVar11 * 0x18 + 0x467768) = puVar14;\n                            fcn.004163c8(7);\n                            goto code_r0x0041002c;\n                        }\n                    }\n                    else {\n                        puVar13 = ppcVar7[1];\n                        while( true ) {\n                            iVar9 = *(puVar13 + 4);\n                            for (; (puVar14 = NULL,  iVar9 != 0 &&\n                                   (((*puVar13 != 0xc000 || (puVar13[1] != 0)) || (puVar14 = puVar13,  puVar13[2] != 0))\n                                   )); puVar13 = puVar13 + 8) {\n                                iVar9 = *(puVar13 + 0xc);\n                            }\n                            if (puVar14 == NULL) break;\n                            if (**(puVar14 + 4) == arg2) {\n                                *(uVar11 * 0x18 + 0x467768) = puVar14;\n                                fcn.004163c8(7);\n                                goto code_r0x004108cc;\n                            }\n                            puVar13 = puVar14 + 8;\n                        }\n                    }\n                    ppcVar7 = (*pcVar2)();\n                    pcVar2 = *ppcVar7;\n                } while( true );\n            }\n            puVar14 = *(uVar11 * 0x18 + 0x467768);\n            fcn.004163c8(7);\n            if (puVar14 == NULL) {\n                return 0;\n            }\n            if (arg2 < 0xc000) {\ncode_r0x0041002c:\n                uStack280 = 0x7fffffff;\n                pcVar2 = *(puVar14 + 6);\n                uVar11 = *(puVar14 + 4);\n                iVar3 = arg4 >> 0x10;\n                if (uVar11 < 0x1e) {\n                    if (uVar11 == 0x1d) {\n                        iVar4 = (*pcVar2)(arg1);\n                        uStack296 = iVar4;\n                    }\n                    else if (uVar11 < 0x10) {\n                        if (uVar11 == 0xf) {\n                            uVar6 = fcn.00413e34(arg4);\n                            uStack296 = (*pcVar2)(arg1, arg3 & 0xffff, arg3 >> 0x10 & 0xffff, uVar6);\n                        }\n                        else if (uVar11 < 9) {\n                            if (uVar11 == 8) {\n                                fcn.00414404(auStack272);\n                                iStack264 = arg4[1];\n                                fcn.0040b9b0(auStack232);\n                                iStack168 = *arg4;\n                                uVar1 = *(arg4 + 2);\n                                puVar8 = fcn.0040d758(iStack168);\n                                if (puVar8 == NULL) {\n                                    if ((arg1[0x13] != 0) &&\n                                       (iVar9 = fcn.00418218(arg1[0x13] + 0x48, iStack168),  iVar9 != 0)) {\n                                        iStack72 = iVar9;\n                                    }\n                                    puVar8 = auStack232;\n                                }\n                                uStack296 = (*pcVar2)(arg1, auStack272, puVar8, uVar1);\n                                iStack264 = 0;\n                                iStack168 = 0;\n                                fcn.0040e1e0(auStack232);\n                                fcn.00414ba0(auStack272);\n                            }\n                            else if (uVar11 == 1) {\n                                uVar6 = fcn.00414ae4(arg3);\n                                iVar4 = (*pcVar2)(arg1, uVar6);\n                                uStack296 = iVar4;\n                            }\n                            else if (uVar11 == 2) {\n                                iVar4 = (*pcVar2)(arg1, arg3 & 0xffffffff);\n                                uStack296 = iVar4;\n                            }\n                            else if (uVar11 == 3) {\n                                iVar4 = (*pcVar2)(arg1, arg3 & 0xffffffff);\n                                uStack296 = iVar4;\n                            }\n                            else if (uVar11 == 4) {\n                                iVar4 = (*pcVar2)(arg1, arg3);\n                                uStack296 = iVar4;\n                            }\n                            else if (uVar11 == 5) {\n                                uVar6 = fcn.0040d71c(arg3);\n                                iVar4 = (*pcVar2)(arg1, uVar6, arg4 & 0xffff, arg4 >> 0x10 & 0xffff);\n                                uStack296 = iVar4;\n                            }\n                            else if (uVar11 == 6) {\n                                uVar6 = fcn.0040d71c(arg3);\n                                iVar4 = (*pcVar2)(arg1, uVar6, arg4);\n                                uStack296 = iVar4;\n                            }\n                            else if (uVar11 == 7) {\n                                iVar4 = (*pcVar2)(arg1, arg4);\n                                uStack296 = iVar4;\n                            }\n                        }\n                        else if (uVar11 == 9) {\n                            fcn.00414404(auStack272);\n                            iStack264 = arg4[1];\n                            uStack296 = (*pcVar2)(arg1, auStack272, *(arg4 + 2));\n                            iStack264 = 0;\n                            fcn.00414ba0(auStack272);\n                        }\n                        else if (uVar11 == 10) {\n                            uVar6 = fcn.0040d71c(arg4);\n                            iVar4 = (*pcVar2)(arg1, arg3 & 0xffff, uVar6, arg3 >> 0x10 & 0xffff);\n                            uStack296 = iVar4;\n                        }\n                        else if (uVar11 == 0xb) {\n                            iVar4 = (*pcVar2)(arg1, arg3 & 0xffff, arg3 >> 0x10 & 0xffff);\n                            uStack296 = iVar4;\n                        }\n                        else if (uVar11 == 0xc) {\n                            uVar6 = fcn.0040d71c(arg3);\n                            iVar4 = (*pcVar2)(arg1, uVar6, arg4 & 0xffff, arg4 >> 0x10 & 0xffff);\n                            uStack296 = iVar4;\n                        }\n                        else if (uVar11 == 0xd) {\n                            iVar4 = (*pcVar2)(arg1, arg4);\n                            uStack296 = iVar4;\n                        }\n                        else if (uVar11 == 0xe) {\n                            uStack296 = (*pcVar2)(arg1, arg3, arg4);\n                        }\n                    }\n                    else if (uVar11 < 0x17) {\n                        if (uVar11 == 0x16) {\n                            (*pcVar2)(arg1, arg3 & 0xffff, arg3 >> 0x10 & 0xffff);\n                        }\n                        else if (uVar11 == 0x10) {\n                            (*pcVar2)(arg1, arg3 & 0xffffffff, arg4);\n                        }\n                        else if (uVar11 == 0x11) {\n                            (*pcVar2)(arg1, arg3);\n                        }\n                        else if (uVar11 == 0x12) {\n                            (*pcVar2)(arg1, arg3, arg4);\n                        }\n                        else if (uVar11 == 0x13) {\n                            (*pcVar2)(arg1);\n                        }\n                        else if (uVar11 == 0x14) {\n                            (*pcVar2)(arg1, arg3 & 0xffffffff);\n                        }\n                        else if (uVar11 == 0x15) {\n                            (*pcVar2)(arg1, arg3 & 0xffffffff, arg4 & 0xffffffff);\n                        }\n                    }\n                    else if (uVar11 == 0x17) {\n                        (*pcVar2)(arg1, iVar12, iVar3);\n                    }\n                    else if (uVar11 == 0x18) {\n                        (*pcVar2)(arg1, arg3 & 0xffffffff, arg4 & 0xffff, arg4 >> 0x10 & 0xffff);\n                    }\n                    else if (uVar11 == 0x19) {\n                        (*pcVar2)(arg1, arg3 & 0xffffffff, arg4 & 0xffff, arg4 >> 0x10 & 0xffff);\n                    }\n                    else if (uVar11 == 0x1a) {\n                        uVar6 = fcn.0040d71c(arg4);\n                        (*pcVar2)(arg1, arg3 & 0xffffffff, uVar6);\n                    }\n                    else if (uVar11 == 0x1b) {\n                        iVar4 = (*pcVar2)(arg1, arg3 & 0xffffffff);\n                        uStack296 = iVar4;\n                    }\n                    else if (uVar11 == 0x1c) {\n                        uVar5 = (*pcVar2)(arg1, arg3 & 0xffffffff);\n                        uStack296 = uVar5;\n                    }\n                }\n                else if (uVar11 < 0x2d) {\n                    if (uVar11 == 0x2c) {\n                        (*pcVar2)(arg1, arg4);\n                    }\n                    else if (uVar11 < 0x25) {\n                        if (uVar11 == 0x24) {\n                            uVar6 = fcn.0040d71c(arg4);\n                            (*pcVar2)(arg1, uVar6);\n                        }\n                        else if (uVar11 == 0x1e) {\n                            (*pcVar2)(arg1, arg3, arg4);\n                        }\n                        else if (uVar11 == 0x1f) {\n                            uVar6 = fcn.0040d71c(arg3);\n                            uVar10 = fcn.0040d71c(arg4);\n                            (*pcVar2)(arg1, arg1[8] == arg4, uVar10, uVar6);\n                        }\n                        else if (uVar11 == 0x20) {\n                            uVar6 = fcn.00414ae4(arg3);\n                            (*pcVar2)(arg1, uVar6);\n                        }\n                        else if (uVar11 == 0x21) {\n                            uVar6 = fcn.00413e34(arg3);\n                            (*pcVar2)(arg1, uVar6);\n                        }\n                        else if (uVar11 == 0x22) {\n                            uVar6 = fcn.00413e34(arg3);\n                            (*pcVar2)(arg1, uVar6, iVar12, iVar3);\n                        }\n                        else if (uVar11 == 0x23) {\n                            uVar6 = fcn.0040d71c(arg3);\n                            (*pcVar2)(arg1, uVar6);\n                        }\n                    }\n                    else if (uVar11 == 0x25) {\n                        uVar6 = fcn.0040d71c(arg3);\n                        (*pcVar2)(arg1, uVar6, arg4 & 0xffff, arg4 >> 0x10 & 0xffff);\n                    }\n                    else if (uVar11 == 0x26) {\n                        iStack288 = iVar12;\n                        iStack284 = iVar3;\n                        uVar6 = fcn.0040d71c(arg3);\n                        (*pcVar2)(arg1, uVar6, CONCAT44(iStack284, iStack288));\n                    }\n                    else if (uVar11 == 0x27) {\n                        uVar6 = fcn.0040d71c(arg3);\n                        (*pcVar2)(arg1, uVar6, arg4);\n                    }\n                    else if (uVar11 == 0x28) {\n                        uStack296 = (*pcVar2)(arg1);\n                    }\n                    else if (uVar11 == 0x29) {\n                        uVar6 = fcn.0040d71c(arg4);\n                        (*pcVar2)(arg1, arg3 & 0xffff, uVar6, arg3 >> 0x10 & 0xffff);\n                    }\n                    else if (uVar11 == 0x2a || uVar11 == 0x2b) {\n                        iVar4 = arg3 >> 0x10;\n                        if (uVar11 == 0x2a) {\n                            uVar6 = fcn.0040d71c(arg4);\n                            (*pcVar2)(arg1, arg3, iVar4, uVar6);\n                        }\n                        else {\n                            (*pcVar2)(arg1, arg3, iVar4);\n                        }\n                    }\n                }\n                else if (uVar11 < 0x34) {\n                    if (uVar11 == 0x33) {\n                        (*pcVar2)(arg1, arg4);\n                    }\n                    else if (uVar11 == 0x2d) {\n                        (*pcVar2)(arg1, arg3 & 0xffffffff, arg4);\n                    }\n                    else if (uVar11 == 0x2e) {\n                        (*pcVar2)(arg1, arg3 & 0xffffffff, arg4);\n                        uStack296 = 1;\n                    }\n                    else if (uVar11 == 0x2f) {\n                        iVar4 = (*pcVar2)(arg1, arg3 & 0xffffffff, arg4);\n                        uStack296 = iVar4;\n                    }\n                    else if (uVar11 == 0x30) {\n                        iStack288 = iVar12;\n                        iStack284 = iVar3;\n                        uVar5 = (*pcVar2)(arg1, CONCAT44(iStack284, iStack288));\n                        uStack296 = uVar5;\n                    }\n                    else if (uVar11 == 0x31) {\n                        uVar5 = (*pcVar2)(arg1);\n                        uStack296 = uVar5;\n                    }\n                    else if (uVar11 == 0x32) {\n                        (*pcVar2)(arg1, arg3 & 0xffffffff, arg4);\n                    }\n                }\n                else if (uVar11 == 0x34) {\n                    (*pcVar2)(arg1, arg3 & 0xffff, arg3 >> 0x10 & 0xffff, arg4);\n                }\n                else if (uVar11 == 0x35) {\n                    iStack288 = iVar12;\n                    iStack284 = iVar3;\n                    (*pcVar2)(arg1, arg3 & 0xffffffff, CONCAT44(iStack284, iStack288));\n                }\n                else if (uVar11 == 0x36) {\n                    (*pcVar2)(arg1, arg3 & 0xffffffff, arg4);\n                    uStack296 = 1;\n                }\n                else if (uVar11 == 0x37) {\n                    iStack288 = iVar12;\n                    iStack284 = iVar3;\n                    iVar4 = (*pcVar2)(arg1, arg3 & 0xffff, arg3 >> 0x10, CONCAT44(iStack284, iStack288));\n                    uStack296 = iVar4;\n                    if (uStack296 == 0) {\n                        return 0;\n                    }\n                }\n                else if (uVar11 == 0x44) {\n                    uStack296 = (*pcVar2)(arg1);\n                    if (uStack296 != 0) {\n                        return 0;\n                    }\n                }\n                else if (uVar11 == 0x45) {\n                    iStack288 = iVar12;\n                    iStack284 = iVar3;\n                    uStack296 = (*pcVar2)(arg1, CONCAT44(iStack284, iStack288));\n                }\n            }\n            else {\ncode_r0x004108cc:\n                uStack280 = 0x7fffffff;\n                uStack296 = (**(puVar14 + 6))(arg1, arg3, arg4);\n            }\n        }\n    }\n    if (in_stack_00000028 != NULL) {\n        *in_stack_00000028 = uStack296;\n    }\n    return 1;\n}\n",
        "token_count": 4518
    },
    "00411760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00411760(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    if (*(arg1 + 0x98) == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = (**(**(arg1 + 0x98) + 0x130))();\n    }\n    return uVar1;\n}\n",
        "token_count": 83
    },
    "00411788": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00411788(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    if (*(arg1 + 0x98) == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = (**(**(arg1 + 0x98) + 0xa8))();\n    }\n    return uVar1;\n}\n",
        "token_count": 83
    },
    "004117b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004117b0(int64_t hDlg, ulong nIDDlgItem)\n\n{\n    ulong arg1;\n    \n    if (*(hDlg + 0x98) == 0) {\n        arg1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(hDlg + 0x40));\n        fcn.0040d71c(arg1);\n    }\n    else {\n        (**(**(hDlg + 0x98) + 0xe8))();\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "004117e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004117e8(int64_t hDlg, ulong nIDDlgItem, ulong *arg3)\n\n{\n    ulong uVar1;\n    \n    if (*(hDlg + 0x98) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(hDlg + 0x40));\n        *arg3 = uVar1;\n    }\n    else {\n        (**(**(hDlg + 0x98) + 0xe0))();\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0041185c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041185c(int64_t hWnd)\n\n{\n    if (*(hWnd + 0xa0) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(*(hWnd + 0x40), 0xfffffff0);\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0xf0))();\n    }\n    return;\n}\n",
        "token_count": 89
    },
    "00411890": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411890(int64_t hWnd)\n\n{\n    if (*(hWnd + 0xa0) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(*(hWnd + 0x40), 0xffffffec);\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0xf8))();\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "004118c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004118c4(int64_t arg1)\n\n{\n    ulong in_RDX;\n    ulong in_R8;\n    ulong in_R9;\n    \n    if (*(arg1 + 0xa0) == 0) {\n        fcn.0040ac8c(*(arg1 + 0x40), in_RDX, in_R8, in_R9);\n    }\n    else {\n        (**(**(arg1 + 0xa0) + 0x108))();\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "004118f4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004118f4(int64_t hWnd, ulong arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (hWnd == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iVar2 = (*_sym.imp.USER32.dll_IsWindow)(*(hWnd + 0x40));\n    if (iVar2 == 0) {\n        if (*(hWnd + 0xa0) == 0) {\n            fcn.00412ca8();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    else if (*(hWnd + 0xa0) == 0) {\n        (*_sym.imp.USER32.dll_SetWindowTextA)(*(hWnd + 0x40), arg2);\n        return;\n    }\n    (**(**(hWnd + 0xa0) + 0x110))(*(hWnd + 0xa0), arg2);\n    return;\n}\n",
        "token_count": 235
    },
    "00411960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411960(int64_t hWnd)\n\n{\n    if (*(hWnd + 0xa0) == 0) {\n        (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(hWnd + 0x40));\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0x120))();\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00411990": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411990(int64_t hWnd, ulong X, ulong Y, ulong nWidth)\n\n{\n    if (*(hWnd + 0xa0) == 0) {\n        (*_sym.imp.USER32.dll_MoveWindow)(*(hWnd + 0x40));\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0x130))();\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "004119d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004119d8(int64_t hWnd, ulong nCmdShow)\n\n{\n    if (*(hWnd + 0xa0) == 0) {\n        (*_sym.imp.USER32.dll_ShowWindow)(*(hWnd + 0x40));\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0x140))();\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "00411a08": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411a08(int64_t hWnd)\n\n{\n    if (*(hWnd + 0xa0) == 0) {\n        (*_sym.imp.USER32.dll_IsWindowEnabled)(*(hWnd + 0x40));\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0x148))();\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00411a38": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411a38(int64_t hWnd, ulong bEnable)\n\n{\n    if (*(hWnd + 0xa0) == 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(*(hWnd + 0x40));\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0x150))();\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "00411a68": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411a68(int64_t hWnd)\n\n{\n    ulong arg1;\n    \n    if (*(hWnd + 0xa0) == 0) {\n        arg1 = (*_sym.imp.USER32.dll_SetFocus)(*(hWnd + 0x40));\n        fcn.0040d71c(arg1);\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0x160))();\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "00411adc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411adc(int64_t arg1, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    if (*(arg1 + 0xa0) != 0) {\n        fcn.00411aa0(arg1);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "00411b0c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411b0c(int64_t arg1, int64_t arg2)\n\n{\n    if ((*(arg1 + 0xa0) == 0) && (*(arg2 + 0x98) != 0)) {\n        (**(**(arg2 + 0x98) + 0x138))(*(arg2 + 0x98), arg1);\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "00411b40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411b40(ulong *arg1)\n\n{\n    if (arg1[1] == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(*arg1, 0xfffffff0);\n    }\n    else {\n        (**(*arg1[1] + 0xf0))();\n    }\n    return;\n}\n",
        "token_count": 77
    },
    "00411c4c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411c4c(int64_t hWnd, int64_t arg2)\n\n{\n    ulong arg2_00;\n    int64_t iVar1;\n    \n    if ((hWnd != 0) && (*(hWnd + 0xa0) == 0)) {\n        arg2_00 = (*_sym.imp.USER32.dll_GetParent)(*(hWnd + 0x40));\n        iVar1 = fcn.00418218(arg2 + 0x30, arg2_00);\n        if ((iVar1 != 0) && (*(iVar1 + 0x98) != 0)) {\n            (**(**(iVar1 + 0x98) + 0x138))(*(iVar1 + 0x98), hWnd, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "00411cd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00411cd0(int64_t arg1, int64_t *arg2, ulong arg3)\n\n{\n    int64_t *piVar1;\n    int64_t *arg1_00;\n    uint32_t uVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t **ppiVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    code *pcVar8;\n    code *pcVar9;\n    bool bVar10;\n    int64_t aiStackX8 [4];\n    \n    if (*(arg1 + 0x98) != 0) {\n        if ((*(arg1 + 0x78) >> 0xb & 1) == 0) {\n            uVar3 = *(arg1 + 0x40);\n            uVar7 = 5;\n            while( true ) {\n                uVar3 = (*_sym.imp.USER32.dll_GetWindow)(uVar3, uVar7);\n                iVar4 = fcn.0040d71c(uVar3);\n                if (iVar4 == 0) break;\n                uVar2 = fcn.00411890(iVar4);\n                if ((((uVar2 >> 0x10 & 1) != 0) && (uVar2 = fcn.0041185c(iVar4),  (uVar2 >> 0x1c & 1) != 0)) &&\n                   (uVar2 = fcn.0041185c(iVar4),  (uVar2 >> 0x1b & 1) == 0)) {\n                    return NULL;\n                }\n                uVar3 = *(iVar4 + 0x40);\n                uVar7 = 2;\n            }\n        }\n        if (arg3 == 0) {\n            pcVar9 = 0x409064;\n            pcVar8 = 0x427708;\n        }\n        else {\n            pcVar9 = 0x411cac;\n            pcVar8 = 0x411bcc;\n        }\n        aiStackX8[0] = (*pcVar8)(*(arg1 + 0x98) + 0x80);\ncode_r0x00411d91:\n        do {\n            if (aiStackX8[0] == 0) {\n                return NULL;\n            }\n            ppiVar5 = (*pcVar9)(*(arg1 + 0x98) + 0x80, aiStackX8);\n            piVar1 = *ppiVar5;\n            if (arg2 == NULL) {\n                if (piVar1[1] == 0) {\n                    iVar4 = *piVar1;\n                }\n                else {\n                    iVar4 = *(piVar1[1] + 0x48);\n                }\n                if ((iVar4 != 0) && (iVar6 = (*_sym.imp.USER32.dll_GetFocus)(),  iVar4 == iVar6)) break;\n                if (piVar1[1] == 0) goto code_r0x00411d91;\n                bVar10 = piVar1[1] == *(*(arg1 + 0x98) + 0xd8);\n            }\n            else {\n                bVar10 = arg2 == piVar1;\n            }\n        } while (!bVar10);\n        if (piVar1 != NULL) {\n            while( true ) {\n                if (aiStackX8[0] == 0) {\n                    aiStackX8[0] = (*pcVar8)(*(arg1 + 0x98) + 0x80);\n                }\n                ppiVar5 = (*pcVar9)(*(arg1 + 0x98) + 0x80, aiStackX8);\n                arg1_00 = *ppiVar5;\n                uVar2 = fcn.00411b40(arg1_00);\n                if (arg1_00 == piVar1) break;\n                if ((((uVar2 >> 0x10 & 1) != 0) && ((uVar2 >> 0x1b & 1) == 0)) && ((uVar2 >> 0x1c & 1) != 0)) {\n                    return arg1_00;\n                }\n            }\n            return arg1_00;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 935
    },
    "00411e64": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00411e64(int64_t arg1, ulong *arg2)\n\n{\n    ulong *puVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    ulong *puVar5;\n    ulong uVar6;\n    ulong *puVar7;\n    int64_t iVar8;\n    ulong *arg1_00;\n    \n    if (*(arg1 + 0x98) == 0) {\n        return;\n    }\n    if (arg2 == NULL) {\n        return;\n    }\n    if ((*(arg2 + 2) != 0) && (iVar8 = (*_sym.imp.USER32.dll_SendMessageA)(*arg2, 0xf0, 0, 0),  iVar8 == 1)) {\n        uVar6 = *arg2;\ncode_r0x00411f15:\n        (*_sym.imp.USER32.dll_SendMessageA)(uVar6, 0xf1, 0, 0);\n        return;\n    }\n    puVar5 = fcn.00426ec0(*(arg1 + 0x98) + 0x80, arg2, 0);\n    if (puVar5 == NULL) {\n        fcn.00412ca8();\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    puVar7 = *puVar5;\ncode_r0x00411ed5:\n    if (puVar7 == NULL) {\ncode_r0x00411f28:\n        iVar8 = puVar5[1];\n        while( true ) {\n            if (iVar8 == 0) {\n                return;\n            }\n            iVar2 = *(iVar8 + 8);\n            arg1_00 = *(iVar8 + 0x10);\n            if ((*(arg1_00 + 2) != 0) &&\n               (iVar8 = (*_sym.imp.USER32.dll_SendMessageA)(*arg1_00, 0xf0, 0, 0),  iVar8 == 1)) break;\n            uVar4 = fcn.00411b40(arg1_00);\n            iVar8 = iVar2;\n            if ((uVar4 >> 0x11 & 1) != 0) {\n                return;\n            }\n        }\n    }\n    else {\n        puVar1 = *puVar7;\n        arg1_00 = puVar7[2];\n        uVar4 = fcn.00411b40(arg1_00);\n        if ((uVar4 >> 0x11 & 1) != 0) goto code_r0x00411f28;\n        puVar7 = puVar1;\n        if ((*(arg1_00 + 2) == 0) || (iVar8 = (*_sym.imp.USER32.dll_SendMessageA)(*arg1_00, 0xf0),  iVar8 != 1))\n        goto code_r0x00411ed5;\n    }\n    uVar6 = *arg1_00;\n    goto code_r0x00411f15;\n}\n",
        "token_count": 667
    },
    "0041208c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.0041208c(int64_t *arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int64_t *piVar6;\n    ulong *puVar7;\n    \n    iVar1 = *arg1;\n    *arg2 = iVar1;\n    if (iVar1 != *arg1) {\n        fcn.00412ca8();\n        pcVar3 = swi(3);\n        piVar6 = (*pcVar3)();\n        return piVar6;\n    }\n    puVar2 = arg1[1];\n    iVar4 = 1;\n    arg2[1] = puVar2;\n    puVar7 = puVar2;\n    do {\n        if (puVar2 == NULL) break;\n        if (puVar7 != NULL) {\n            puVar7 = *puVar7;\n        }\n        iVar4 = iVar4 + -1;\n    } while (0 < iVar4);\n    while( true ) {\n        if (puVar7 == NULL) {\n            return arg2;\n        }\n        uVar5 = fcn.00411b40(puVar7[2]);\n        if ((uVar5 >> 0x11 & 1) != 0) break;\n        puVar7 = *puVar7;\n        if (arg2[1] != 0) {\n            if (arg2[1] == NULL) {\n                fcn.00412ca8();\n                pcVar3 = swi(3);\n                piVar6 = (*pcVar3)();\n                return piVar6;\n            }\n            arg2[1] = *arg2[1];\n        }\n    }\n    return arg2;\n}\n",
        "token_count": 394
    },
    "00412720": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00412720(int64_t *arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    uint64_t arg2_00;\n    \n    iVar2 = *arg1;\n    if (*(iVar2 + -0x10) != arg2 && arg2 <= *(iVar2 + -0x10)) {\n        arg2._0_4_ = *(iVar2 + -0x10);\n    }\n    if (*(iVar2 + -8) < 2) {\n        iVar1 = *(iVar2 + -0xc);\n        if (iVar1 < arg2) {\n            if (iVar1 < 0x401) {\n                uVar3 = iVar1 * 2;\n            }\n            else {\n                uVar3 = iVar1 + 0x400;\n            }\n            arg2_00 = uVar3;\n            if (uVar3 < arg2) {\n                arg2_00 = arg2;\n            }\n            fcn.004126d4(arg1, arg2_00);\n        }\n    }\n    else {\n        fcn.00412640(arg1, arg2);\n    }\n    return;\n}\n",
        "token_count": 261
    },
    "00412b70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00412b70(int64_t *arg1)\n\n{\n    if (0 < *(arg1 + 1)) {\n        (**(*arg1 + 8))(arg1, 1);\n    }\n    return;\n}\n",
        "token_count": 51
    },
    "00412dec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00412dec(void)\n\n{\n    code *pcVar1;\n    \n    if (*0x46aa98 == 0) {\n        *0x46aa98 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"KERNEL32\");\n        if (*0x46aa98 == 0) {\n            fcn.00412ca8();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        *0x46aa78 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x46aa98, \"CreateActCtxW\");\n        *0x46aa80 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x46aa98, \"ReleaseActCtx\");\n        *0x46aa88 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x46aa98, \"ActivateActCtx\");\n        *0x46aa90 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x46aa98, \"DeactivateActCtx\");\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "00412ee0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00412ee0(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uchar auStack664 [32];\n    uint uStack632;\n    uint uStack628;\n    uchar *puStack624;\n    ulong uStack600;\n    ulong uStack584;\n    uchar auStack568 [520];\n    int16_t iStack48;\n    ushort uStack46;\n    uint64_t uStack40;\n    \n    uStack40 = *0x465c38 ^ auStack664;\n    fcn.00412dec();\n    uVar3 = *(arg1 + 0x10);\n    uStack46 = 0;\n    iStack48 = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(uVar3, auStack568, 0x105);\n    if (iVar1 != 0) {\n        if (iStack48 == 0) {\n            puStack624 = auStack568;\n            uStack632 = 0x38;\n            uStack628 = 0x88;\n            uStack600 = 2;\n            uStack584 = uVar3;\n            if (*0x46aa78 == NULL) {\n                iVar2 = -1;\n            }\n            else {\n                iVar2 = (**0x46aa78)(&uStack632);\n            }\n            *(arg1 + 0xd8) = iVar2;\n            if (iVar2 == -1) {\n                uStack600 = 3;\n                if (*0x46aa78 == NULL) {\n                    uVar3 = 0xffffffffffffffff;\n                }\n                else {\n                    uVar3 = (**0x46aa78)(&uStack632);\n                }\n                *(arg1 + 0xd8) = uVar3;\n            }\n            if (*(arg1 + 0xd8) == -1) {\n                uStack600 = 1;\n                if (*0x46aa78 == NULL) {\n                    iVar2 = -1;\n                }\n                else {\n                    iVar2 = (**0x46aa78)(&uStack632);\n                }\n                *(arg1 + 0xd8) = iVar2;\n                if (iVar2 == -1) {\n                    *(arg1 + 0xd8) = 0;\n                }\n            }\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(0x6f);\n        }\n    }\n    fcn.0042dcb0(uStack40 ^ auStack664);\n    return;\n}\n",
        "token_count": 549
    },
    "004130e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004130e8(ulong *arg1)\n\n{\n    ulong *puVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    ulong arg1_00;\n    \n    *arg1 = 0x44cdf8;\n    if (arg1[0xf] != NULL) {\n        (**(*arg1[0xf] + 0x278))();\n    }\n    fcn.00403cfc(arg1[0x12]);\n    puVar1 = arg1[5];\n    if (puVar1 != NULL) {\n        (***puVar1)(puVar1, 1);\n    }\n    puVar1 = arg1[6];\n    if (puVar1 != NULL) {\n        (***puVar1)(puVar1, 1);\n    }\n    puVar1 = arg1[7];\n    if (puVar1 != NULL) {\n        (***puVar1)(puVar1, 1);\n    }\n    puVar1 = arg1[8];\n    if (puVar1 != NULL) {\n        (***puVar1)(puVar1, 1);\n    }\n    puVar1 = arg1[9];\n    if (puVar1 != NULL) {\n        (***puVar1)(puVar1, 1);\n    }\n    if (arg1[0xe] != 0) {\n        iVar3 = *(arg1[0xe] + 0x18);\n        while (iVar3 != 0) {\n            arg1_00 = fcn.00426e24(arg1[0xe]);\n            fcn.00403cfc(arg1_00);\n            iVar3 = *(arg1[0xe] + 0x18);\n        }\n    }\n    piVar2 = arg1[0xc];\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 8))(piVar2, 1);\n    }\n    piVar2 = arg1[0xd];\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 8))(piVar2, 1);\n    }\n    piVar2 = arg1[0xe];\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 8))(piVar2, 1);\n    }\n    return;\n}\n",
        "token_count": 503
    },
    "00414fd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00414fd0(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    if (*(arg1 + 8) == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00414f90(arg1);\n        uVar1 = (*_sym.imp.GDI32.dll_DeleteObject)(uVar1);\n    }\n    return uVar1;\n}\n",
        "token_count": 94
    },
    "00413ec4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00413ec4(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    if (*(arg1 + 8) == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00413e84(arg1);\n        uVar1 = (*_sym.imp.USER32.dll_DestroyMenu)(uVar1);\n    }\n    return uVar1;\n}\n",
        "token_count": 93
    },
    "00414ba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00414ba0(ulong *arg1)\n\n{\n    ulong uVar1;\n    \n    *arg1 = 0x44d2c8;\n    if (arg1[1] != 0) {\n        uVar1 = fcn.00414b54(arg1);\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "00415518": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00415518(ulong hWnd, ulong arg2)\n\n{\n    uchar auStack104 [32];\n    ulong uStack72;\n    uint uStack64;\n    uchar auStack56 [32];\n    uint64_t uStack24;\n    \n    uStack24 = *0x465c38 ^ auStack104;\n    (*_sym.imp.USER32.dll_GetClassNameA)(hWnd, auStack56, 0x20);\n    uStack64 = 0xffffffff;\n    uStack72 = arg2;\n    (*_sym.imp.KERNEL32.dll_CompareStringA)(0x409, 1, auStack56);\n    fcn.0042dcb0(uStack24 ^ auStack104);\n    return;\n}\n",
        "token_count": 157
    },
    "00415614": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00415614(int64_t arg1)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    \n    if (arg1 == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    if (*(arg1 + 0x10) == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = (**(arg1 + 0x10))();\n    }\n    return uVar2;\n}\n",
        "token_count": 130
    },
    "00415d68": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00415d68(uint *arg1, ulong *arg2, int64_t arg3)\n\n{\n    ulong *puVar1;\n    bool bVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    \n    bVar2 = true;\n    iVar4 = 1;\n    if (1 < *(arg2 + 2)) {\n        iVar3 = 8;\n        iVar5 = 0x10;\n        do {\n            if ((arg3 == 0) || (*(*(arg1 + 4) + 8 + iVar5) == arg3)) {\n                puVar1 = *(iVar3 + arg2[3]);\n                if (puVar1 != NULL) {\n                    (***puVar1)(puVar1, 1);\n                }\n                *(iVar3 + arg2[3]) = 0;\n            }\n            else if (*(iVar3 + arg2[3]) != 0) {\n                bVar2 = false;\n            }\n            iVar4 = iVar4 + 1;\n            iVar5 = iVar5 + 0x10;\n            iVar3 = iVar3 + 8;\n        } while (iVar4 < *(arg2 + 2));\n        if (!bVar2) {\n            return;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(arg1 + 10);\n    fcn.004158d4(arg1 + 6, arg2);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg1 + 10);\n    (*_sym.imp.KERNEL32.dll_LocalFree)(arg2[3]);\n    (***arg2)(arg2, 1);\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(*arg1, 0);\n    return;\n}\n",
        "token_count": 386
    },
    "00416108": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00416108(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.00413c10();\n    if (*(iVar2 + 0x54) == 0) {\n        iVar2 = fcn.00413c10();\n        *(iVar2 + 0x54) = 1;\n        iVar2 = fcn.00413c10();\n        iVar2 = *(iVar2 + 8);\n        if ((iVar2 == 0) || (*(iVar2 + 0x40) == 0)) {\n            iVar2 = fcn.00413c10();\n            if (*(iVar2 + 0x28) == '\\0') {\n                fcn.004041d8(0);\n            }\n        }\n        else {\n            iVar1 = fcn.00411a08(*(iVar2 + 0x40));\n            if (iVar1 != 0) {\n                (**(**(iVar2 + 0x40) + 0xc0))();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "004162d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004162d8(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    \n    if (*0x46ac54 != 0) {\n        *0x46ac54 = *0x46ac54 + -1;\n        (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(0x46af08);\n        piVar1 = 0x46af30;\n        iVar3 = 0x46ac60;\n        iVar2 = 0x11;\n        do {\n            if (*piVar1 != 0) {\n                (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(iVar3);\n                *piVar1 = *piVar1 + -1;\n            }\n            iVar3 = iVar3 + 0x28;\n            piVar1 = piVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "0041633c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041633c(ulong arg1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    \n    iVar3 = arg1;\n    if (0x10 < arg1) {\n        fcn.00412ca8();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (*0x46ac54 == 0) {\n        fcn.004162a8();\n    }\n    if (*(iVar3 * 4 + 0x46af30) == 0) {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x46af08);\n        if (*(iVar3 * 4 + 0x46af30) == 0) {\n            (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(iVar3 * 0x28 + 0x46ac60);\n            piVar1 = iVar3 * 4 + 0x46af30;\n            *piVar1 = *piVar1 + 1;\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x46af08);\n    }\n    // WARNING: Could not recover jumptable at 0x004163c0. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar3 * 0x28 + 0x46ac60);\n    return;\n}\n",
        "token_count": 319
    },
    "004167b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004167b4(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    int64_t iStackX8;\n    int64_t iStackX16;\n    uchar auStackX24 [16];\n    \n    if (arg1 != 0) {\n        iStackX16 = -(*(arg1 + 0x80) != 0);\n        while (iStackX16 != 0) {\n            fcn.004182f4(arg1 + 0x68, &iStackX16, auStackX24, &iStackX8);\n            iVar1 = *(arg1 + 0xa8);\n            *(iStackX8 + iVar1) = 0;\n            if (*(arg1 + 0xb0) == 2) {\n                *(iStackX8 + 8 + iVar1) = 0;\n            }\n            (**(arg1 + 0x28))(iStackX8);\n        }\n        fcn.00418198(arg1 + 0x68);\n        fcn.0042868c(arg1 + 8);\n    }\n    return;\n}\n",
        "token_count": 245
    },
    "00416bc8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00416bc8(int64_t *arg1, int64_t *arg2, char *arg3, int32_t *arg4)\n\n{\n    uint64_t arg1_00;\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    \n    iVar3 = *arg4;\n    if (iVar3 < 0) {\n        fcn.00401cd0(0x80070057);\n        pcVar2 = swi(3);\n        piVar5 = (*pcVar2)();\n        return piVar5;\n    }\n    if ((arg3 == NULL) || (*arg3 == '\\0')) {\n        if (iVar3 < *(*arg1 + -0x10)) {\n            piVar5 = *(*arg1 + -0x18);\n            if (piVar5 == NULL) {\n                iVar6 = 0;\n            }\n            else {\n                iVar6 = (**(*piVar5 + 0x20))();\n            }\n            if (iVar6 == 0) {\n                piVar5 = fcn.00413fdc();\n                iVar6 = (**(*piVar5 + 0x20))(piVar5);\n            }\n            fcn.00416b10(arg2, *arg4 + *arg1, iVar6);\n            return arg2;\n        }\n    }\n    else {\n        iVar6 = *arg1;\n        arg1_00 = iVar6 + iVar3;\n        uVar7 = *(iVar6 + -0x10) + iVar6;\n        if (arg1_00 < uVar7) {\n            iVar3 = fcn.004308f0(arg1_00, arg3);\n            if (iVar3 + arg1_00 < uVar7) {\n                uVar4 = fcn.00430ad0(iVar3 + arg1_00, arg3);\n                iVar1 = *arg4;\n                *arg4 = iVar3 + iVar1 + 1U + uVar4;\n                fcn.00416a50(arg1, arg2, iVar3 + iVar1, uVar4);\n                return arg2;\n            }\n        }\n    }\n    *arg4 = -1;\n    if (*(*arg1 + -0x18) == NULL) {\n        piVar5 = NULL;\n    }\n    else {\n        piVar5 = (**(**(*arg1 + -0x18) + 0x20))();\n    }\n    if (piVar5 == NULL) {\n        piVar5 = fcn.00413fdc();\n        piVar5 = (**(*piVar5 + 0x20))(piVar5);\n        if (piVar5 == NULL) {\n            fcn.00401cd0(0x80004005);\n            pcVar2 = swi(3);\n            piVar5 = (*pcVar2)();\n            return piVar5;\n        }\n    }\n    iVar6 = (**(*piVar5 + 0x18))();\n    *arg2 = iVar6 + 0x18;\n    return arg2;\n}\n",
        "token_count": 692
    },
    "00417328": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00417328(ulong *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uchar auStack616 [56];\n    ulong *puStack560;\n    ulong uStack544;\n    uint64_t uStack24;\n    \n    uStack544 = 0xfffffffffffffffe;\n    uStack24 = *0x465c38 ^ auStack616;\n    *arg1 = 0x44da88;\n    puStack560 = arg1;\n    if ((arg1[1] != -1) && (*(arg1 + 2) != 0)) {\n        fcn.00417054(arg1);\n    }\n    iVar3 = arg1[3];\n    LOCK();\n    piVar1 = iVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar3 + -0x18) + 8))();\n    }\n    fcn.0042dcb0(uStack24 ^ auStack616);\n    return;\n}\n",
        "token_count": 251
    },
    "00417d00": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00417d00(ulong *hMem, ulong arg2)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t *arg1;\n    ushort *puVar6;\n    uint64_t arg2_00;\n    int64_t arg2_01;\n    uint32_t uVar7;\n    uint64_t arg1_00;\n    int32_t iVar8;\n    ushort in_R8W;\n    uint64_t arg3;\n    bool bVar9;\n    uchar auStack216 [32];\n    uchar *puStack184;\n    uint uStack176;\n    ushort uStack168;\n    uchar auStack152 [64];\n    uint64_t uStack88;\n    \n    uStack88 = *0x465c38 ^ auStack216;\n    if (*(hMem + 1) != 0) {\n        uStack168 = in_R8W;\n        arg1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*hMem);\n        bVar9 = *(arg1 + 2) == -1;\n        if (*(arg1 + 2) == -1) {\n            uVar7 = arg1[3];\n        }\n        else {\n            uVar7 = *arg1;\n        }\n        iVar8 = (-bVar9 & 2) + 1;\n        iVar5 = iVar8 * 2;\n        if (bVar9) {\n            arg1[3] = arg1[3] | 0x40;\n        }\n        else {\n            *arg1 = *arg1 | 0x40;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg2);\n        if (iVar3 < 0x20) {\n            puStack184 = auStack152;\n            uStack176 = 0x20;\n            iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, arg2, 0xffffffff);\n            iVar3 = iVar5 + iVar3 * 2;\n            if (iVar5 <= iVar3) {\n                puVar6 = fcn.00417b1c(arg1);\n                if ((uVar7 & 0x40) == 0) {\n                    iVar4 = 0;\n                }\n                else {\n                    iVar4 = fcn.00430170(iVar5 + puVar6);\n                    iVar4 = iVar5 + 2 + iVar4 * 2;\n                }\n                arg3 = iVar4 + 3 + puVar6 & 0xfffffffffffffffc;\n                arg1_00 = iVar3 + 3 + puVar6 & 0xfffffffffffffffc;\n                if (bVar9) {\n                    iVar2 = *(arg1 + 4);\n                }\n                else {\n                    iVar2 = *(arg1 + 2);\n                }\n                if ((iVar3 != iVar4) && (iVar2 != 0)) {\n                    arg2_00 = (*(hMem + 1) - arg3) + arg1;\n                    if (*(hMem + 1) < arg2_00) goto code_r0x00417ed0;\n                    iVar4 = fcn.0042e300(arg1_00, arg2_00, arg3, arg2_00);\n                    if (iVar4 != 0) {\n                        if (iVar4 == 0xc) {\n                            fcn.00412c60();\n                            pcVar1 = swi(3);\n                            (*pcVar1)();\n                            return;\n                        }\n                        if ((iVar4 == 0x16) || (iVar4 == 0x22)) {\n                            fcn.00412ca8();\n                            pcVar1 = swi(3);\n                            (*pcVar1)();\n                            return;\n                        }\n                        if (iVar4 != 0x50) {\n                            fcn.00412ca8();\n                            pcVar1 = swi(3);\n                            (*pcVar1)();\n                            return;\n                        }\n                    }\n                }\n                arg2_01 = iVar3 + iVar8 * -2;\n                *puVar6 = uStack168;\n                iVar5 = fcn.0042e300(iVar5 + puVar6, arg2_01, auStack152, arg2_01);\n                if (iVar5 != 0) {\n                    if (iVar5 == 0xc) {\n                        fcn.00412c60();\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                    if ((iVar5 == 0x16) || (iVar5 == 0x22)) {\n                        fcn.00412ca8();\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                    if (iVar5 != 0x50) {\n                        fcn.00412ca8();\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                }\n                *(hMem + 1) = *(hMem + 1) + (arg1_00 - arg3);\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*hMem);\n                *(hMem + 0xc) = 0;\n            }\n        }\n    }\ncode_r0x00417ed0:\n    fcn.0042dcb0(uStack88 ^ auStack216);\n    return;\n}\n",
        "token_count": 1164
    },
    "004183ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004183ec(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    \n    if (*(arg1 + 0x20) == 0) {\n        iVar3 = fcn.00418c44(arg1 + 0x28, *(arg1 + 0x30), 0x18);\n        iVar1 = *(arg1 + 0x30);\n        puVar4 = iVar3 + -0x10 + iVar1 * 0x18;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar4 = *(arg1 + 0x20);\n            *(arg1 + 0x20) = puVar4;\n            puVar4 = puVar4 + -3;\n        }\n    }\n    puVar4 = *(arg1 + 0x20);\n    uVar2 = *puVar4;\n    *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n    *(arg1 + 0x20) = uVar2;\n    puVar4[1] = 0;\n    puVar4[2] = 0;\n    return;\n}\n",
        "token_count": 281
    },
    "004184fc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004184fc(int64_t *pvarg, uint *arg2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    uVar2 = *0x46af98;\n    uVar3 = *0x46af9c;\n    if (pvarg != NULL) {\n        iVar1 = (*_sym.imp.GDI32.dll_GetMapMode)(pvarg[2]);\n        if ((iVar1 < 7) && (iVar1 != 1)) {\n            (**(*pvarg + 0x68))(pvarg, 3);\n            fcn.004148c4(pvarg, arg2);\n            (**(*pvarg + 0x68))(pvarg, iVar1);\n            return;\n        }\n        uVar2 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(pvarg[2], 0x58);\n        uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(pvarg[2], 0x5a);\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg2, 0x9ec, uVar2);\n    *arg2 = uVar2;\n    uVar2 = (*_sym.imp.KERNEL32.dll_MulDiv)(arg2[1], 0x9ec, uVar3);\n    arg2[1] = uVar2;\n    return;\n}\n",
        "token_count": 311
    },
    "004185ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004185ac(int64_t *pvarg, uint *arg2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    uVar2 = *0x46af98;\n    uVar3 = *0x46af9c;\n    if (pvarg != NULL) {\n        iVar1 = (*_sym.imp.GDI32.dll_GetMapMode)(pvarg[2]);\n        if ((iVar1 < 7) && (iVar1 != 1)) {\n            (**(*pvarg + 0x68))(pvarg, 3);\n            fcn.00414848(pvarg, arg2);\n            (**(*pvarg + 0x68))(pvarg, iVar1);\n            return;\n        }\n        uVar2 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(pvarg[2], 0x58);\n        uVar3 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(pvarg[2], 0x5a);\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg2, uVar2, 0x9ec);\n    *arg2 = uVar2;\n    uVar2 = (*_sym.imp.KERNEL32.dll_MulDiv)(arg2[1], uVar3, 0x9ec);\n    arg2[1] = uVar2;\n    return;\n}\n",
        "token_count": 310
    },
    "00418fd8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00418fd8(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    \n    *(arg1 + 0x30) = 0;\n    if (*(arg1 + 0x24) == 0) {\n        fcn.00403cfc(*(arg1 + 0x48));\n        *(arg1 + 0x48) = 0;\n        *(arg1 + 0x38) = 0;\n    }\n    piVar1 = *(arg1 + 0x60);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1, 1);\n    }\n    piVar1 = *(arg1 + 0x58);\n    *(arg1 + 0x60) = 0;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1, 1);\n    }\n    *(arg1 + 0x58) = 0;\n    return;\n}\n",
        "token_count": 221
    },
    "00419048": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00419048(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int64_t iVar11;\n    \n    if ((arg3 == 0) || (arg2 == 0)) {\n        uVar6 = 0;\n    }\n    else {\n        if ((*(arg1 + 0x20) & 1) == 0) {\n            fcn.00418f70(4, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            uVar6 = (*pcVar2)();\n            return uVar6;\n        }\n        piVar1 = arg1 + 0x40;\n        uVar8 = *piVar1 - *(arg1 + 0x38);\n        uVar6 = uVar8;\n        if (arg3 < uVar8) {\n            uVar6 = arg3;\n        }\n        iVar3 = fcn.0042e220(arg2, arg3, *(arg1 + 0x38), uVar6);\n        if (iVar3 != 0) {\n            if (iVar3 == 0xc) {\n                fcn.00412c60();\n                pcVar2 = swi(3);\n                uVar6 = (*pcVar2)();\n                return uVar6;\n            }\n            if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                fcn.00412ca8();\n                pcVar2 = swi(3);\n                uVar6 = (*pcVar2)();\n                return uVar6;\n            }\n            if (iVar3 != 0x50) {\n                fcn.00412ca8();\n                pcVar2 = swi(3);\n                uVar6 = (*pcVar2)();\n                return uVar6;\n            }\n        }\n        *(arg1 + 0x38) = *(arg1 + 0x38) + uVar6;\n        arg2 = arg2 + uVar6;\n        uVar8 = arg3 - uVar6;\n        if (uVar8 != 0) {\n            iVar9 = uVar8 - uVar8 % *(arg1 + 0x28);\n            iVar7 = 0;\n            iVar3 = iVar9;\n            do {\n                uVar4 = (**(**(arg1 + 0x30) + 0x68))(*(arg1 + 0x30), arg2, iVar3);\n                iVar7 = iVar7 + uVar4;\n                iVar3 = iVar3 - uVar4;\n                arg2 = arg2 + uVar4;\n                if (uVar4 == 0) break;\n            } while (iVar3 != 0);\n            uVar8 = uVar8 - iVar7;\n            if ((uVar8 != 0) && (iVar7 == iVar9)) {\n                if (*(arg1 + 0xc) == 0) {\n                    uVar4 = uVar8;\n                    if ((*(arg1 + 0x10) == 0) && (uVar4 = *(arg1 + 0x28),  *(arg1 + 0x28) < uVar8)) {\n                        uVar4 = uVar8;\n                    }\n                    iVar11 = *(arg1 + 0x48);\n                    uVar10 = 0;\n                    do {\n                        uVar5 = (**(**(arg1 + 0x30) + 0x68))(*(arg1 + 0x30), iVar11, uVar4);\n                        uVar10 = uVar10 + uVar5;\n                        uVar4 = uVar4 - uVar5;\n                        iVar11 = iVar11 + uVar5;\n                        if ((uVar5 == 0) || (uVar4 == 0)) break;\n                    } while (uVar10 < uVar8);\n                    iVar11 = *(arg1 + 0x48);\n                    *piVar1 = uVar10 + iVar11;\n                }\n                else {\n                    (**(**(arg1 + 0x30) + 0xa0))(*(arg1 + 0x30), 0, *(arg1 + 0x28), arg1 + 0x48, piVar1);\n                    iVar11 = *(arg1 + 0x48);\n                }\n                uVar4 = *piVar1 - iVar11;\n                *(arg1 + 0x38) = iVar11;\n                if (uVar8 < uVar4) {\n                    uVar4 = uVar8;\n                }\n                iVar3 = fcn.0042e220(arg2, uVar8, iVar11, uVar4);\n                if (iVar3 != 0) {\n                    if (iVar3 == 0xc) {\n                        fcn.00412c60();\n                        pcVar2 = swi(3);\n                        uVar6 = (*pcVar2)();\n                        return uVar6;\n                    }\n                    if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                        fcn.00412ca8();\n                        pcVar2 = swi(3);\n                        uVar6 = (*pcVar2)();\n                        return uVar6;\n                    }\n                    if (iVar3 != 0x50) {\n                        fcn.00412ca8();\n                        pcVar2 = swi(3);\n                        uVar6 = (*pcVar2)();\n                        return uVar6;\n                    }\n                }\n                *(arg1 + 0x38) = *(arg1 + 0x38) + uVar4;\n                uVar8 = uVar8 - uVar4;\n            }\n        }\n        uVar6 = arg3 - uVar8;\n    }\n    return uVar6;\n}\n",
        "token_count": 1309
    },
    "0041920c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041920c(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    \n    if ((*(arg1 + 0x20) & 1) == 0) {\n        piVar1 = arg1 + 0x48;\n        if (*(arg1 + 0xc) == 0) {\n            iVar2 = *piVar1;\n            if (*(arg1 + 0x38) != iVar2) {\n                (**(**(arg1 + 0x30) + 0x70))(*(arg1 + 0x30), iVar2, *(arg1 + 0x38) - iVar2);\n            }\n        }\n        else {\n            if (*(arg1 + 0x38) != *piVar1) {\n                (**(**(arg1 + 0x30) + 0xa0))(*(arg1 + 0x30), 2, *(arg1 + 0x38) - *piVar1, 0, 0);\n            }\n            (**(**(arg1 + 0x30) + 0xa0))(*(arg1 + 0x30), 1, *(arg1 + 0x28), piVar1, arg1 + 0x40);\n        }\n        iVar2 = *piVar1;\n    }\n    else {\n        if (*(arg1 + 0x40) != *(arg1 + 0x38)) {\n            (**(**(arg1 + 0x30) + 0x50))(*(arg1 + 0x30), *(arg1 + 0x38) - *(arg1 + 0x40), 1);\n        }\n        iVar2 = *(arg1 + 0x40);\n    }\n    *(arg1 + 0x38) = iVar2;\n    return;\n}\n",
        "token_count": 401
    },
    "004192c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004192c8(int64_t arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint64_t arg1_00;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint64_t arg4;\n    \n    if ((*(arg1 + 0x20) & 1) == 0) {\n        fcn.00418f70(4, *(arg1 + 0x18));\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    piVar1 = arg1 + 0x40;\n    uVar4 = *piVar1 - *(arg1 + 0x38);\n    arg4 = uVar4;\n    uVar7 = uVar4 + arg2;\n    if (*(arg1 + 0xc) == 0) {\n        arg1_00 = *(arg1 + 0x48);\n        if (arg1_00 < *(arg1 + 0x38)) {\n            if (0 < uVar4) {\n                iVar3 = fcn.0042e300(arg1_00, *piVar1 - arg1_00, *(arg1 + 0x38), arg4);\n                if (iVar3 != 0) {\n                    if (iVar3 == 0xc) {\n                        fcn.00412c60();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                        fcn.00412ca8();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if (iVar3 != 0x50) {\n                        fcn.00412ca8();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n                arg1_00 = *(arg1 + 0x48);\n                *(arg1 + 0x38) = arg1_00;\n                *piVar1 = arg4 + arg1_00;\n            }\n            if (*(arg1 + 0x10) == 0) {\n                arg2._0_4_ = *(arg1 + 0x28);\n            }\n            arg2._0_4_ = arg2 - uVar4;\n            iVar6 = arg4 + arg1_00;\n            do {\n                uVar4 = (**(**(arg1 + 0x30) + 0x68))(*(arg1 + 0x30), iVar6, arg2);\n                uVar5 = arg4 + uVar4;\n                arg4 = uVar5;\n                arg2._0_4_ = arg2 - uVar4;\n                iVar6 = iVar6 + uVar4;\n                if ((uVar4 == 0) || (arg2 == 0)) break;\n            } while (uVar5 < uVar7);\n            *(arg1 + 0x38) = *(arg1 + 0x48);\n            *piVar1 = arg4 + *(arg1 + 0x48);\n        }\n    }\n    else {\n        if (uVar4 != 0) {\n            (**(**(arg1 + 0x30) + 0x50))();\n        }\n        (**(**(arg1 + 0x30) + 0xa0))(*(arg1 + 0x30), 0, *(arg1 + 0x28), arg1 + 0x48, piVar1);\n        *(arg1 + 0x38) = *(arg1 + 0x48);\n    }\n    if (*piVar1 - *(arg1 + 0x38) < uVar7) {\n        fcn.00418f70(3, 0);\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 889
    },
    "00419564": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00419564(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint64_t arg4;\n    \n    if ((arg3 != 0) && (arg2 != 0)) {\n        if ((~*(arg1 + 0x20) & 1) == 0) {\n            fcn.00418f70(2, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = arg1 + 0x40;\n        uVar4 = *piVar1 - *(arg1 + 0x38);\n        arg4 = uVar4;\n        if (arg3 < uVar4) {\n            arg4 = arg3;\n        }\n        iVar3 = fcn.0042e220(*(arg1 + 0x38), *piVar1 - *(arg1 + 0x38), arg2, arg4);\n        if (iVar3 != 0) {\n            if (iVar3 == 0xc) {\n                fcn.00412c60();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                fcn.00412ca8();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if (iVar3 != 0x50) {\n                fcn.00412ca8();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        *(arg1 + 0x38) = *(arg1 + 0x38) + arg4;\n        arg3._0_4_ = arg3 - arg4;\n        if (arg3 != 0) {\n            fcn.0041920c(arg1);\n            uVar4 = arg3 - arg3 % *(arg1 + 0x28);\n            (**(**(arg1 + 0x30) + 0x70))(*(arg1 + 0x30), arg2 + arg4, uVar4);\n            arg3._0_4_ = arg3 - uVar4;\n            if (*(arg1 + 0xc) != 0) {\n                (**(**(arg1 + 0x30) + 0xa0))(*(arg1 + 0x30), 1, *(arg1 + 0x28), arg1 + 0x48, piVar1);\n                *(arg1 + 0x38) = *(arg1 + 0x48);\n            }\n            if (*(arg1 + 0x28) <= arg3) {\n                fcn.00412ca8();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if (*(arg1 + 0x38) != *(arg1 + 0x48)) {\n                fcn.00412ca8();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            iVar3 = fcn.0042e220(*(arg1 + 0x38), arg3, arg2 + arg4 + uVar4, arg3);\n            if (iVar3 != 0) {\n                if (iVar3 == 0xc) {\n                    fcn.00412c60();\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n                if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                    fcn.00412ca8();\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n                if (iVar3 != 0x50) {\n                    fcn.00412ca8();\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n            }\n            *(arg1 + 0x38) = *(arg1 + 0x38) + arg3;\n        }\n    }\n    return;\n}\n",
        "token_count": 926
    },
    "00419a2c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.00419a2c(ulong *arg1, int64_t *arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int64_t *piVar4;\n    ulong *puVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    int64_t iVar8;\n    int32_t iVar9;\n    ulong in_stack_00000028;\n    int64_t iStack56;\n    ulong uStack48;\n    \n    uStack48 = 0xfffffffffffffffe;\n    piVar4 = fcn.00413fdc();\n    if (piVar4 == NULL) {\n        fcn.00401cd0(0x80004005);\n        pcVar2 = swi(3);\n        puVar5 = (*pcVar2)();\n        return puVar5;\n    }\n    iVar6 = (**(*piVar4 + 0x18))(piVar4);\n    arg1[3] = iVar6 + 0x18;\n    if (arg2 == NULL) {\n        fcn.00412ca8();\n        pcVar2 = swi(3);\n        puVar5 = (*pcVar2)();\n        return puVar5;\n    }\n    uVar7 = (**(*arg2 + 0x30))(arg2, &iStack56);\n    fcn.004096a8(arg1 + 3, uVar7);\n    LOCK();\n    piVar1 = iStack56 + -8;\n    iVar9 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar9 + -1 < 1) {\n        (**(**(iStack56 + -0x18) + 8))();\n    }\n    *(arg1 + 4) = arg3;\n    arg1[6] = arg2;\n    arg1[0xc] = 0;\n    arg1[0xb] = 0;\n    *arg1 = 0;\n    *(arg1 + 1) = 1;\n    *(arg1 + 0x14) = 0xffffffff;\n    *(arg1 + 0xd) = (-((~arg3 & 1) != 0) & 0xffffffd0) + 0x40;\n    *(arg1 + 0x6c) = 0x89;\n    arg1[9] = in_stack_00000028;\n    *(arg1 + 0x24) = 1;\n    *(arg1 + 0xc) = 0;\n    uVar3 = (**(*arg2 + 0xa0))(arg2, 3, 0, 0, 0);\n    *(arg1 + 2) = uVar3 & 2;\n    if (arg4 < 0x80) {\n        *(arg1 + 5) = 0x80;\n        arg1[9] = 0;\n    }\n    else {\n        *(arg1 + 5) = arg4;\n    }\n    iVar9 = *(arg1 + 5);\n    if (arg1[9] == 0) {\n        uVar3 = (**(*arg1[6] + 0xa0))(arg1[6], 3, 0, 0, 0);\n        *(arg1 + 0xc) = uVar3 & 1;\n        if ((uVar3 & 1) == 0) {\n            uVar7 = fcn.00403cc0(*(arg1 + 5));\n            arg1[9] = uVar7;\n            *(arg1 + 0x24) = 0;\n        }\n        else {\n            iVar9 = 0;\n        }\n    }\n    iVar8 = iVar9 + arg1[9];\n    arg1[8] = iVar8;\n    iVar6 = arg1[9];\n    if ((*(arg1 + 4) & 1) != 0) {\n        iVar6 = iVar8;\n    }\n    arg1[7] = iVar6;\n    return arg1;\n}\n",
        "token_count": 892
    },
    "0041a090": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool fcn.0041a090(int32_t *arg1)\n\n{\n    return *arg1 != 2;\n}\n",
        "token_count": 27
    },
    "0041a2ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool fcn.0041a2ac(int64_t arg1, ulong arg2, uint64_t arg3, int32_t *arg4)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong *arg2_00;\n    int64_t **ppiVar4;\n    bool bVar5;\n    ulong in_stack_00000028;\n    uint32_t in_stack_00000030;\n    ulong in_stack_00000038;\n    ulong in_stack_00000040;\n    uint in_stack_00000048;\n    int64_t **in_stack_00000068;\n    uint64_t uVar6;\n    int64_t *piStack72;\n    ulong uStack64;\n    \n    uStack64 = 0xfffffffffffffffe;\n    piStack72 = NULL;\n    uVar6 = arg3;\n    iVar2 = (**(**(arg1 + 0x40) + 0x250))(*(arg1 + 0x40), arg1, &piStack72, in_stack_00000048, arg3);\n    if ((iVar2 != 0) && (piStack72 == NULL)) {\n        iVar3 = fcn.00413c10();\n        if (*(iVar3 + 0x68) == 0) {\n            fcn.00412ca8();\n        }\n        iVar3 = fcn.00413c10();\n        piStack72 = (**(**(iVar3 + 0x68) + 0x18))(*(iVar3 + 0x68), arg1, arg4);\n    }\n    if (piStack72 == NULL) {\n        bVar5 = false;\n    }\n    else {\n        if (*arg4 == 2) {\n            iVar2 = (**(*piStack72 + 0xa0))\n                              (piStack72, arg2, arg3, in_stack_00000028, uVar6 & 0xffffffff00000000 | in_stack_00000030\n                               , in_stack_00000038, in_stack_00000040);\n        }\n        else {\n            iVar2 = fcn.0041bd24(piStack72, arg2, arg4, in_stack_00000030);\n        }\n        bVar5 = -1 < iVar2;\n        if (bVar5) {\n            arg2_00 = fcn.00403cc0(0x18);\n            if (arg2_00 == NULL) {\n                arg2_00 = NULL;\n            }\n            else {\n                *arg2_00 = 0;\n                arg2_00[1] = piStack72;\n                *(arg2_00 + 2) = 0;\n            }\n            fcn.00426fd8(arg1 + 0x80, arg2_00);\n            piVar1 = piStack72;\n            if (piStack72[9] != 0) {\n                ppiVar4 = fcn.00418460(arg1 + 0x48, piStack72[9]);\n                *ppiVar4 = piVar1;\n            }\n            if (in_stack_00000068 != NULL) {\n                *in_stack_00000068 = piStack72;\n            }\n        }\n        else if (piStack72 != NULL) {\n            (**(*piStack72 + 8))(piStack72, 1);\n        }\n    }\n    return bVar5;\n}\n",
        "token_count": 731
    },
    "0041a7e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041a7e0(ulong *arg1)\n\n{\n    ulong *puVar1;\n    int64_t *piVar2;\n    ulong *arg2;\n    int32_t iVar3;\n    int64_t iVar4;\n    code *pcVar5;\n    uchar auStack104 [32];\n    int64_t *piStack72;\n    ulong uStack64;\n    ulong *puStack56;\n    ulong uStack48;\n    ushort uStack40;\n    char cStack38;\n    uint64_t uStack32;\n    \n    uStack64 = 0xfffffffffffffffe;\n    uStack32 = *0x465c38 ^ auStack104;\n    *arg1 = 0x44e218;\n    puVar1 = arg1[0x11];\n    puStack56 = arg1;\n    while( true ) {\n        arg2 = puVar1;\n        if (arg2 == NULL) {\n            iVar4 = arg1[0x13];\n            while (iVar4 != 0) {\n                iVar4 = fcn.00426e24(arg1 + 0x10);\n                if (iVar4 != 0) {\n                    piVar2 = *(iVar4 + 8);\n                    if (piVar2 != NULL) {\n                        (**(*piVar2 + 8))(piVar2, 1);\n                    }\n                    fcn.00403cfc(iVar4);\n                }\n                iVar4 = arg1[0x13];\n            }\n            fcn.00418198(arg1 + 9);\n            fcn.00426ac4(arg1 + 0x18);\n            piStack72 = NULL;\n            iVar3 = fcn.00426cfc(arg1, 0x4527a0, &piStack72);\n            if (-1 < iVar3) {\n                uStack48 = str.mfcm80.dll._0_8_;\n                uStack40 = str.mfcm80.dll._8_2_;\n                cStack38 = str.mfcm80.dll[10];\n                iVar4 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(&uStack48);\n                if ((iVar4 != 0) &&\n                   (pcVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar4, \"MFCM80ReleaseManagedReferences\"), \n                   pcVar5 != NULL)) {\n                    (*pcVar5)(piStack72);\n                }\n                (**(*piStack72 + 0x10))();\n            }\n            fcn.00426f10(arg1 + 0x10);\n            fcn.004183dc(arg1 + 9);\n            fcn.004053e0(arg1);\n            fcn.0042dcb0(uStack32 ^ auStack104);\n            return;\n        }\n        if (arg2 == NULL) break;\n        puVar1 = *arg2;\n        iVar4 = arg2[2];\n        if (((iVar4 != 0) && (*(iVar4 + 8) != 0)) && (*(*(iVar4 + 8) + 0xd8) == 0)) {\n            fcn.00426e74(arg1 + 0x10, arg2);\n            piVar2 = *(iVar4 + 8);\n            if (piVar2 != NULL) {\n                (**(*piVar2 + 8))(piVar2, 1);\n            }\n            fcn.00403cfc(iVar4);\n        }\n    }\n    fcn.00412ca8();\n    pcVar5 = swi(3);\n    (*pcVar5)();\n    return;\n}\n",
        "token_count": 769
    },
    "0041b344": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041b344(int64_t arg1, ulong *arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar auStack248 [32];\n    ulong uStack216;\n    int64_t iStack208;\n    int64_t iStack200;\n    uint auStack192 [2];\n    int64_t iStack184;\n    int32_t iStack176;\n    uint uStack172;\n    ushort uStack168;\n    uint16_t uStack166;\n    uint32_t uStack164;\n    uint32_t uStack160;\n    uint32_t uStack156;\n    ulong uStack152;\n    uchar auStack144 [16];\n    ulong uStack128;\n    int32_t aiStack104 [4];\n    ushort uStack88;\n    uint8_t uStack84;\n    uint8_t uStack83;\n    uint8_t uStack82;\n    uint8_t uStack81;\n    uchar auStack76 [36];\n    uint64_t uStack40;\n    \n    uStack152 = 0xfffffffffffffffe;\n    uStack40 = *0x465c38 ^ auStack248;\n    iStack208 = 0;\n    uStack216 = 0x44cf78;\n    if ((arg2 == NULL) || (arg2[1] == 0)) {\n        iStack208 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n        if (iStack208 == 0) {\n            iStack208 = (*_sym.imp.GDI32.dll_GetStockObject)(0xd);\n            if (iStack208 == 0) {\n                *(arg1 + 0xc0) = 0;\n                uStack216 = 0x44b2c8;\n                fcn.00414fd0(&uStack216);\n                goto code_r0x0041b519;\n            }\n        }\n        arg2 = &uStack216;\n    }\n    (*_sym.imp.GDI32.dll_GetObjectA)(arg2[1], 0x3c, aiStack104);\n    auStack192[0] = 0x28;\n    fcn.00412ac8(&iStack200, auStack76);\n    iStack184 = iStack200;\n    uStack168 = uStack88;\n    uStack166 = uStack81;\n    uStack164 = uStack84;\n    uStack160 = uStack83;\n    uStack156 = uStack82;\n    if (aiStack104[0] < 0) {\n        aiStack104[0] = -aiStack104[0];\n    }\n    fcn.00414ca8(auStack144, *(arg1 + 0x40));\n    iStack176 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uStack128);\n    iStack176 = (aiStack104[0] * 720000) / iStack176;\n    uStack172 = 0;\n    fcn.00426ac4(arg1 + 0xc0);\n    iVar2 = (*_sym.imp.OLEAUT32.dll_OleTranslateColor)(auStack192, 0x452840, arg1 + 0xc0);\n    if (iVar2 < 0) {\n        *(arg1 + 0xc0) = 0;\n    }\n    fcn.00414d30(auStack144);\n    LOCK();\n    piVar1 = iStack200 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iStack200 + -0x18) + 8))();\n    }\n    uStack216 = 0x44b2c8;\n    fcn.00414fd0(&uStack216);\ncode_r0x0041b519:\n    fcn.0042dcb0(uStack40 ^ auStack248);\n    return;\n}\n",
        "token_count": 852
    },
    "0041b8d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0041b8d4(int64_t *arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    \n    *arg1 = 0;\n    uVar1 = SUB168(ZEXT816(0x10) * ZEXT816(arg2), 0);\n    if (SUB168(ZEXT816(0x10) * ZEXT816(arg2) >> 0x40, 0) != 0) {\n        uVar1 = 0xffffffffffffffff;\n    }\n    iVar2 = fcn.00403cc0(uVar1);\n    *arg1 = iVar2;\n    if (*arg1 == 0) {\n        uVar1 = 0x8007000e;\n    }\n    else {\n        *(arg1 + 1) = arg2;\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 196
    },
    "0041bb80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0041bb80(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uVar1;\n    \n    *(arg1 + 0x10) = arg3;\n    *(arg1 + 0x30) = arg4;\n    *(arg1 + 0x20) = 0;\n    *(arg1 + 0x28) = 0;\n    fcn.0042f6c0(arg3, 0, arg4);\n    fcn.00403cfc(*(arg1 + 0x18));\n    *(arg1 + 0x18) = 0;\n    uVar1 = SUB168(ZEXT816(0x58) * ZEXT816(arg2), 0);\n    if (SUB168(ZEXT816(0x58) * ZEXT816(arg2) >> 0x40, 0) != 0) {\n        uVar1 = 0xffffffffffffffff;\n    }\n    uVar1 = fcn.00403cc0(uVar1);\n    *(arg1 + 0x18) = uVar1;\n    if (*(arg1 + 0x18) == 0) {\n        uVar1 = 0x8007000e;\n    }\n    else {\n        *(arg1 + 0x20) = arg2;\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 308
    },
    "0041bf24": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0041bf24(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint auStackX8 [6];\n    int64_t *piStackX32;\n    int64_t *apiStack40 [3];\n    \n    if ((*(arg1 + 0x80) != 0) && (iVar1 = (****(arg1 + 0x80))(*(arg1 + 0x80), 0x4528e0, apiStack40),  -1 < iVar1)) {\n        piStackX32 = NULL;\n        auStackX8[0] = 0;\n        iVar1 = (**(*apiStack40[0] + 0x20))(apiStack40[0], arg2, &piStackX32);\n        if (-1 < iVar1) {\n            (**(*piStackX32 + 0x28))(piStackX32, arg3, auStackX8);\n            (**(*piStackX32 + 0x10))();\n        }\n        (**(*apiStack40[0] + 0x10))();\n        return auStackX8[0];\n    }\n    return 0;\n}\n",
        "token_count": 260
    },
    "0041bfb8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041bfb8(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    int64_t *piStackX32;\n    int64_t *apiStack40 [3];\n    \n    if (((arg3 != 0) && (*(arg1 + 0x80) != 0)) &&\n       (iVar1 = (****(arg1 + 0x80))(*(arg1 + 0x80), 0x4528e0, apiStack40),  -1 < iVar1)) {\n        piStackX32 = NULL;\n        iVar1 = (**(*apiStack40[0] + 0x20))(apiStack40[0], arg2, &piStackX32);\n        if (-1 < iVar1) {\n            (**(*piStackX32 + 0x30))(piStackX32, arg3);\n            (**(*piStackX32 + 0x10))();\n        }\n        (**(*apiStack40[0] + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "0041c03c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nbool fcn.0041c03c(int64_t arg1, ulong *arg2)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint auStackX8 [2];\n    uint auStackX16 [2];\n    int64_t *piStackX24;\n    int64_t *piStackX32;\n    int64_t *piStack56;\n    int64_t iStack48;\n    int64_t *piStack40;\n    ulong *puStack32;\n    \n    uVar2 = *0x452788;\n    uVar1 = *0x452780;\n    uVar4 = 0;\n    piStack56 = NULL;\n    *arg2 = *0x452780;\n    arg2[1] = uVar2;\n    iVar3 = (****(arg1 + 0x80))(uVar1, *(arg1 + 0x80), 0x4528b0, &piStack56);\n    if (-1 < iVar3) {\n        (**(*piStack56 + 0x20))(piStack56, 1, arg2);\n        (**(*piStack56 + 0x10))();\n    }\n    piStack40 = NULL;\n    iVar3 = fcn.0042f910(arg2, 0x452780, 0x10);\n    if ((iVar3 == 0) && (iVar3 = (****(arg1 + 0x80))(*(arg1 + 0x80), 0x4528c0, &piStack40),  -1 < iVar3)) {\n        piStackX24 = NULL;\n        iVar3 = (**(*piStack40 + 0x18))(piStack40, &piStackX24);\n        if (-1 < iVar3) {\n            iVar3 = (**(*piStackX24 + 0x18))(piStackX24, &iStack48);\n            if (-1 < iVar3) {\n                if (*(iStack48 + 0x34) != 0) {\n                    do {\n                        iVar3 = (**(*piStackX24 + 0x48))(piStackX24, uVar4, auStackX8);\n                        if ((-1 < iVar3) && ((auStackX8[0] & 7) == 3)) {\n                            piStackX32 = NULL;\n                            iVar3 = (**(*piStackX24 + 0x40))(piStackX24, uVar4, auStackX16);\n                            if ((-1 < iVar3) &&\n                               (iVar3 = (**(*piStackX24 + 0x70))(piStackX24, auStackX16[0], &piStackX32),  -1 < iVar3))\n                            {\n                                iVar3 = (**(*piStackX32 + 0x18))(piStackX32, &puStack32);\n                                if (-1 < iVar3) {\n                                    uVar1 = *puStack32;\n                                    uVar2 = puStack32[1];\n                                    *arg2 = uVar1;\n                                    arg2[1] = uVar2;\n                                    (**(*piStackX32 + 0x98))(uVar1);\n                                }\n                                (**(*piStackX32 + 0x10))();\n                            }\n                            break;\n                        }\n                        uVar4 = uVar4 + 1;\n                    } while (uVar4 < *(iStack48 + 0x34));\n                }\n                (**(*piStackX24 + 0x98))(piStackX24, iStack48);\n            }\n            (**(*piStackX24 + 0x10))();\n        }\n        (**(*piStack40 + 0x10))();\n    }\n    iVar3 = fcn.0042f910(arg2, 0x452780, 0x10);\n    return iVar3 != 0;\n}\n",
        "token_count": 837
    },
    "0041c354": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041c354(int64_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t *apiStackX8 [4];\n    \n    if ((*(arg1 + 0x16) >> 0xe & 1) == 0) {\n        (**(*arg1 + 0x160))();\n    }\n    apiStackX8[0] = NULL;\n    if (arg1[0x10] == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    iVar2 = (***arg1[0x10])(arg1[0x10], 0x4528a0, apiStackX8);\n    if (-1 < iVar2) {\n        if (apiStackX8[0] == NULL) {\n            fcn.00412ca8();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        (**(*apiStackX8[0] + 0x20))(apiStackX8[0], arg2);\n        (**(*apiStackX8[0] + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 278
    },
    "0041c3d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041c3d4(int64_t arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t *apiStackX8 [4];\n    \n    if (*(arg1 + 0x80) == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    apiStackX8[0] = NULL;\n    iVar2 = (****(arg1 + 0x80))(*(arg1 + 0x80), 0x4528a0, apiStackX8);\n    if (-1 < iVar2) {\n        if (apiStackX8[0] == NULL) {\n            fcn.00412ca8();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        (**(*apiStackX8[0] + 0x30))(apiStackX8[0], arg2);\n        (**(*apiStackX8[0] + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 245
    },
    "0041c4a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041c4a0(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int64_t *piVar2;\n    \n    *(arg1 + 0x48) = 0;\n    piVar2 = *(arg1 + 0x50);\n    if (piVar2 != NULL) {\n        if (piVar2[8] != 0) {\n            piVar2 = (**(*piVar2 + 0x1e0))();\n            iVar1 = (*_sym.imp.USER32.dll_IsWindow)(*(*(arg1 + 0x50) + 0x40));\n            if ((iVar1 != 0) && (*piVar2 != 0)) {\n                fcn.0040deec(*(arg1 + 0x50));\n            }\n            fcn.0040d7d4(*(arg1 + 0x50));\n        }\n        *(*(arg1 + 0x50) + 0xa0) = 0;\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "0041c510": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0041c510(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    \n    if ((*(arg1 + 0x50) != 0) &&\n       (iVar3 = (**(**(arg1 + 0x50) + 0x18))(*(arg1 + 0x50), *(arg1 + 0x58), 0xfffffffe, arg2, 0),  iVar3 != 0)) {\n        return 1;\n    }\n    iVar1 = *(arg1 + 0x40);\n    if ((iVar1 != 0) && (*(iVar1 + 0x40) != 0)) {\n        uVar4 = (**(**(iVar1 + 0x40) + 0x18))(*(iVar1 + 0x40), *(arg1 + 0x58), 0xfffffffe, arg2, 0);\n        return uVar4;\n    }\n    fcn.00412ca8();\n    pcVar2 = swi(3);\n    uVar4 = (*pcVar2)();\n    return uVar4;\n}\n",
        "token_count": 263
    },
    "0041d09c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.0041d09c(ulong noname_0, uint *arg2, uint *arg3)\n\n{\n    uint64_t arg2_00;\n    int32_t iVar1;\n    uint64_t uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    \n    arg2[4] = arg3[4];\n    iVar1 = arg3[4];\n    if (iVar1 == 0) {\n        uVar3 = arg3[1];\n        uVar4 = arg3[2];\n        uVar5 = arg3[3];\n        *arg2 = *arg3;\n        arg2[1] = uVar3;\n        arg2[2] = uVar4;\n        arg2[3] = uVar5;\ncode_r0x0041d0e0:\n        iVar6 = fcn.00430170(*(arg3 + 6));\n        arg2_00 = iVar6 + 1;\n        if (arg2_00 < 0x100000000) {\n            uVar2 = (arg2_00 & 0xffffffff) * 2;\n            if (uVar2 < 0x100000000) {\n                iVar6 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)(uVar2 & 0xffffffff);\n            }\n            else {\n                iVar6 = 0;\n            }\n            *(arg2 + 6) = iVar6;\n            if (iVar6 != 0) {\n                fcn.0042e570(iVar6, arg2_00, *(arg3 + 6));\n                goto code_r0x0041d129;\n            }\n        }\n        uVar7 = 0;\n    }\n    else {\n        if (iVar1 == 1) {\n            uVar3 = arg3[1];\n            uVar4 = arg3[2];\n            uVar5 = arg3[3];\n            *arg2 = *arg3;\n            arg2[1] = uVar3;\n            arg2[2] = uVar4;\n            arg2[3] = uVar5;\n            arg2[6] = arg3[6];\n        }\n        else if (iVar1 == 2) goto code_r0x0041d0e0;\ncode_r0x0041d129:\n        uVar7 = 1;\n    }\n    return uVar7;\n}\n",
        "token_count": 535
    },
    "0041d1b8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0041d1b8(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    ulong uVar2;\n    \n    if (*(arg1 + 0x10) == 0) {\n        uVar2 = 0;\n    }\n    else {\n        (**(**(arg1 + 0x10) + 0x168))();\n        piVar1 = *(*(arg1 + 0x10) + 0xd8);\n        (**(*piVar1 + 8))(piVar1, arg1, 1);\n        uVar2 = (****(*(arg1 + 0x10) + 0xd8))();\n    }\n    return uVar2;\n}\n",
        "token_count": 155
    },
    "0042a770": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042a770(int64_t **arg1)\n\n{\n    if (*arg1 != NULL) {\n        if (*(arg1 + 1) != 0) {\n            (**(**arg1 + 0x10))();\n        }\n        *arg1 = NULL;\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "0041fb4c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0041fb4c(int64_t **arg1)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    code *pcVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    \n    uVar5 = 0;\n    uVar7 = 0;\n    uVar1 = *(arg1[2] + 1);\n    if (uVar1 != 0) {\n        iVar6 = 0;\n        do {\n            piVar2 = arg1[2];\n            if (*piVar2 == 0) {\n                fcn.00401cd0(0x80004005);\n                pcVar3 = swi(3);\n                uVar5 = (*pcVar3)();\n                return uVar5;\n            }\n            if (*(iVar6 + 8 + *piVar2) != '\\0') {\n                uVar4 = (**(**arg1 + 0x20))(*arg1, arg1[3], *(iVar6 + *piVar2), piVar2[2]);\n                uVar5 = uVar4 & 0xffffffff;\n                if (uVar4 < 0) {\n                    return uVar4;\n                }\n            }\n            uVar7 = uVar7 + 1;\n            iVar6 = iVar6 + 0x10;\n        } while (uVar7 < uVar1);\n    }\n    return uVar5;\n}\n",
        "token_count": 329
    },
    "0041fbec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0041fbec(int64_t **arg1, ulong arg2, ulong noname_2, ulong arg4)\n\n{\n    int64_t **ppiVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    int64_t **appiStackX8 [3];\n    ulong uStackX32;\n    \n    ppiVar1 = arg1 + 3;\n    uStackX32 = 0;\n    if (*ppiVar1 != NULL) {\n        (**(**arg1 + 0x30))(*arg1, 1, ppiVar1, 0, 0, 0);\n        *ppiVar1 = NULL;\n    }\n    appiStackX8[0] = ppiVar1;\n    uVar3 = (**(**arg1 + 0x28))(*arg1, 0, arg2, (-(noname_2 != '\\0') & 2) - 1, &uStackX32, appiStackX8);\n    if (uVar3 == 0) {\n        uVar2 = fcn.0041fb4c(arg1);\n        uVar3 = uVar2;\n        if ((uVar2 < 0) && (*ppiVar1 != NULL)) {\n            (**(**arg1 + 0x30))(*arg1, 1, ppiVar1, 0, 0, 0);\n            *ppiVar1 = NULL;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 328
    },
    "00420398": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00420398(int64_t *arg1, ulong *arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    uint32_t uVar3;\n    int64_t *apiStackX16 [3];\n    \n    if (arg2 == NULL) {\ncode_r0x004203ac:\n        iVar1 = -0x7fffbffb;\n    }\n    else {\n        if (*(arg1 + 1) == 0) {\n            return 0;\n        }\n        apiStackX16[0] = NULL;\n        iVar1 = (***arg2)(arg2, 0x44e768, apiStackX16);\n        if (-1 < iVar1) {\n            if (*arg1 == 0) {\n                if (apiStackX16[0] != NULL) {\n                    (**(*apiStackX16[0] + 0x10))();\n                }\n                goto code_r0x004203ac;\n            }\n            uVar3 = 0;\n            if (*(arg1 + 1) != 0) {\n                iVar2 = 0;\n                do {\n                    (**(*apiStackX16[0] + 0x30))(apiStackX16[0], *(*arg1 + iVar2), 0);\n                    uVar3 = uVar3 + 1;\n                    iVar2 = iVar2 + 0x10;\n                } while (uVar3 < *(arg1 + 1));\n            }\n        }\n        *(arg1 + 1) = 0;\n        fcn.00403cfc(*arg1);\n        *arg1 = 0;\n        if (apiStackX16[0] != NULL) {\n            (**(*apiStackX16[0] + 0x10))();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 393
    },
    "004204f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.004204f8(int64_t *arg1, ulong *arg2)\n\n{\n    int32_t iVar1;\n    int64_t *apiStackX16 [3];\n    \n    if (arg2 == NULL) {\n        return -0x7fffbffb;\n    }\n    apiStackX16[0] = NULL;\n    iVar1 = (***arg2)(arg2, 0x44e768, apiStackX16);\n    if (iVar1 < 0) {\ncode_r0x00420537:\n        if (apiStackX16[0] != NULL) {\n            (**(*apiStackX16[0] + 0x10))();\n        }\n    }\n    else {\n        if (*arg1 == 0) {\n            iVar1 = fcn.0041b8d4(arg1, 1);\n            if (iVar1 < 0) goto code_r0x00420537;\n            *(*arg1 + 8) = 1;\n        }\n        iVar1 = fcn.0041b96c(arg1[3], arg1[4], *arg1, arg1[6]);\n        if (apiStackX16[0] != NULL) {\n            (**(*apiStackX16[0] + 0x10))();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 289
    },
    "004210cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid fcn.004210cc(int64_t arg1, ulong arg2)\n\n{\n    uint16_t uVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    \n    uVar3 = 0;\n    if (*(arg1 + 0x18) != 0) {\n        iVar5 = 0;\n        do {\n            if ((*(arg1 + 0x20) == 0) || (*(*(arg1 + 0x20) + uVar3) != '\\x01')) {\n                iVar2 = *(arg1 + 0x28);\n                if ((*(iVar2 + 0x28 + iVar5) == 0xd) || (*(iVar2 + 0x28 + iVar5) == 9)) {\n                    if (*((*(iVar2 + 0x20 + iVar5) + 7 + *(iVar2 + 8 + iVar5) & 0xfffffffffffffff8U) + 8 +\n                         *(arg1 + 0x10)) != 0) goto code_r0x004211b4;\n                    uVar1 = *(*(arg1 + 0x28) + 0x28 + iVar5);\n                    iVar2 = *(arg1 + 0x10) + *(*(arg1 + 0x28) + 8 + iVar5);\n                }\n                else {\n                    uVar1 = *(iVar2 + 0x28 + iVar5);\n                    iVar2 = *(iVar2 + 8 + iVar5) + *(arg1 + 0x10);\n                }\n                fcn.00420fdc(uVar1, iVar2, arg2);\n            }\n            else if (((*((*(*(arg1 + 0x28) + 0x20 + iVar5) + 7 + *(*(arg1 + 0x28) + 8 + iVar5) & 0xfffffffffffffff8U) +\n                         8 + *(arg1 + 0x10)) != 3) &&\n                     (piVar4 = *(*(arg1 + 0x28) + 8 + iVar5) + *(arg1 + 0x10),  piVar4 != NULL)) && (*piVar4 != 0)) {\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(*piVar4);\n                *piVar4 = 0;\n            }\ncode_r0x004211b4:\n            uVar3 = uVar3 + 1;\n            iVar5 = iVar5 + 0x50;\n        } while (uVar3 < *(arg1 + 0x18));\n    }\n    return;\n}\n",
        "token_count": 577
    },
    "00421450": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00421450(int64_t **arg1, ulong noname_1, int64_t **arg3)\n\n{\n    int32_t iVar1;\n    ulong in_R9;\n    \n    if (arg1[3] != NULL) {\n        in_R9 = 0;\n        arg3 = arg1 + 3;\n        (**(**arg1 + 0x30))();\n        arg1[3] = NULL;\n    }\n    iVar1 = (**(**arg1 + 0x38))();\n    if (-1 < iVar1) {\n        fcn.0041fbec(arg1, 0, CONCAT71(arg3 >> 8, 1), in_R9);\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "00421658": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00421658(int64_t *arg1, ulong *arg2)\n\n{\n    uint64_t *puVar1;\n    uint16_t *puVar2;\n    int64_t *piVar3;\n    uchar uVar4;\n    uchar uVar5;\n    int64_t iVar6;\n    code *pcVar7;\n    ulong uVar8;\n    int64_t *arg1_00;\n    int32_t iVar9;\n    uint32_t uVar10;\n    ulong uVar11;\n    int64_t *piVar12;\n    int64_t iVar13;\n    uint64_t uVar14;\n    int64_t *arg1_01;\n    uint *puVar15;\n    uint *arg1_02;\n    uint *puVar16;\n    int64_t iVar17;\n    uchar auStack344 [32];\n    ulong uStack312;\n    uchar uStack304;\n    uint uStack296;\n    uint *puStack288;\n    uint64_t uStack280;\n    int64_t iStack272;\n    uint *puStack264;\n    char cStack248;\n    uint *puStack240;\n    ushort uStack232;\n    uint32_t uStack228;\n    int64_t *piStack224;\n    int64_t *piStack216;\n    uint *puStack208;\n    int64_t *piStack200;\n    ulong *puStack192;\n    int64_t *piStack184;\n    uint *puStack176;\n    int64_t *piStack168;\n    ulong *puStack160;\n    int32_t iStack152;\n    int32_t iStack148;\n    uint uStack144;\n    uint uStack140;\n    ulong uStack136;\n    ulong uStack88;\n    ulong uStack80;\n    uint64_t uStack72;\n    \n    uStack136 = 0xfffffffffffffffe;\n    uStack72 = *0x465c38 ^ auStack344;\n    uStack88 = CONCAT44(*0x44eee4, *0x44eee0);\n    uStack80 = CONCAT44(*0x44eeec, *0x44eee8);\n    puVar15 = NULL;\n    cStack248 = '\\0';\n    puStack192 = arg2;\n    piStack184 = arg1;\n    puStack160 = arg2;\n    if (arg2 != NULL) {\n        piStack224 = NULL;\n        iVar9 = (***arg2)(uStack88, arg2, 0x44e768);\n        if (iVar9 < 0) {\n            if (piStack224 != NULL) {\n                (**(*piStack224 + 0x10))();\n            }\n        }\n        else {\n            puStack240 = NULL;\n            if (arg1[5] == 0) {\n                piStack216 = NULL;\n                iVar9 = (***arg2)(arg2, 0x44e748, &piStack216);\n                if (iVar9 < 0) {\n                    if (piStack216 != NULL) {\n                        (**(*piStack216 + 0x10))();\n                    }\n                    if (piStack224 != NULL) {\n                        (**(*piStack224 + 0x10))();\n                    }\n                    goto code_r0x00422157;\n                }\n                iVar9 = (**(*piStack216 + 0x18))(piStack216, arg1 + 3, arg1 + 5, arg1 + 6);\n                if (iVar9 < 0) {\n                    if (piStack216 != NULL) {\n                        (**(*piStack216 + 0x10))();\n                    }\n                    if (piStack224 != NULL) {\n                        (**(*piStack224 + 0x10))();\n                    }\n                    goto code_r0x00422157;\n                }\n                *(arg1 + 7) = 0;\n                if (piStack216 != NULL) {\n                    (**(*piStack216 + 0x10))();\n                }\n            }\n            else {\n                *(arg1 + 7) = 1;\n            }\n            piStack216 = NULL;\n            uVar11 = SUB168(ZEXT816(0x58) * ZEXT816(arg1[3]), 0);\n            if (SUB168(ZEXT816(0x58) * ZEXT816(arg1[3]) >> 0x40, 0) != 0) {\n                uVar11 = 0xffffffffffffffff;\n            }\n            piVar12 = fcn.00403cc0(uVar11);\n            piStack216 = piVar12;\n            if (piVar12 == NULL) {\n                if (piStack224 != NULL) {\n                    (**(*piStack224 + 0x10))();\n                }\n            }\n            else {\n                piStack168 = piVar12;\n                iVar13 = fcn.00403cc0(arg1[3]);\n                arg1[4] = iVar13;\n                if (arg1[4] == 0) {\n                    fcn.00403cfc(piVar12);\n                    if (piStack224 != NULL) {\n                        (**(*piStack224 + 0x10))();\n                    }\n                }\n                else {\n                    uStack228 = 0;\n                    puVar16 = puVar15;\n                    arg1_01 = piVar12;\n                    arg1_02 = puVar15;\n                    piStack200 = piVar12;\n                    while (arg1_00 = piStack200,  puVar16 < arg1[3]) {\n                        *(puVar16 + arg1[4]) = 0;\n                        iVar17 = puVar16 * 0x50;\n                        iVar13 = arg1[5];\n                        puVar1 = iVar13 + 0x20 + iVar17;\n                        if ((*puVar1 < arg1[8] || *puVar1 == arg1[8]) || (*(iVar13 + 0x28 + iVar17) == 0xd)) {\n                            if (*(iVar13 + 0x28 + iVar17) == 0xd) {\n                                puStack208 = NULL;\n                                puStack208 = fcn.00403cc0(0x14);\n                                puStack176 = puStack208;\n                                if (puStack208 == NULL) {\n                                    uVar14 = uStack228;\n                                    if (uStack228 != 0) {\n                                        piVar12 = piVar12 + 5;\n                                        do {\n                                            fcn.00403cfc(*piVar12);\n                                            piVar12 = piVar12 + 0xb;\n                                            uVar14 = uVar14 - 1;\n                                        } while (uVar14 != 0);\n                                    }\n                                    fcn.00403cfc(arg1[4]);\n                                    arg1[4] = 0;\n                                    fcn.00403cfc(arg1_01);\n                                    if (piStack224 != NULL) {\n                                        (**(*piStack224 + 0x10))();\n                                    }\n                                    goto code_r0x00422157;\n                                }\n                                *puStack208 = 0;\n                                uVar8 = *0x44eec8;\n                                uVar11 = *0x44eec0;\n                                *(puStack208 + 1) = *0x44eec0;\n                                *(puStack208 + 3) = uVar8;\n                                iVar17 = uStack228 * 0x50;\n                                *(arg1[5] + 0x28 + iVar17) = 0xd;\n                                *(arg1[5] + 0x20 + iVar17) = 8;\n                                iVar13 = arg1[5];\n                                uVar10 = fcn.0041b9ec(uVar11);\n                                puStack288 = (uVar10 - 1) + puStack240 & ~(uVar10 - 1);\n                                iVar6 = *(iVar13 + 0x20 + iVar17);\n                                uStack280 = iVar6 + 7 + puStack288 & 0xfffffffffffffff8;\n                                iStack272 = uStack280 + 8;\n                                puStack240 = uStack280 + 0xc;\n                                puStack264 = puStack176;\n                                uStack296 = 0;\n                                uStack304 = *(iVar13 + 0x2b + iVar17);\n                                uStack312 = uStack312 & 0xffffffffffffff00 | *(iVar13 + 0x2a + iVar17);\n                                puStack208 = puStack288;\n                                fcn.0041d31c(arg1_00, *(iVar13 + 0x10 + iVar17), *(iVar13 + 0x28 + iVar17), iVar6);\n                                puVar16 = puStack208;\n                            }\n                            else {\n                                if (*(iVar13 + 0x28 + iVar17) == 0x81) {\n                                    piVar3 = iVar13 + 0x20 + iVar17;\n                                    *piVar3 = *piVar3 + 1;\n                                }\n                                iVar13 = arg1[5];\n                                if (*(iVar13 + 0x28 + iVar17) == 0x82) {\n                                    *(iVar13 + 0x20 + iVar17) = *(iVar13 + 0x20 + iVar17) * 2 + 2;\n                                }\n                                iVar13 = arg1[5];\n                                uVar10 = fcn.0041b9ec();\n                                puStack288 = (uVar10 - 1) + puStack240 & ~(uVar10 - 1);\n                                iVar6 = *(iVar13 + 0x20 + iVar17);\n                                uStack280 = iVar6 + 7 + puStack288 & 0xfffffffffffffff8;\n                                iStack272 = uStack280 + 8;\n                                puStack240 = uStack280 + 0xc;\n                                puStack264 = NULL;\n                                uStack296 = 0;\n                                uStack304 = *(iVar13 + 0x2b + iVar17);\n                                uStack312 = uStack312 & 0xffffffffffffff00 | *(iVar13 + 0x2a + iVar17);\n                                puStack208 = puStack288;\n                                fcn.0041d31c(arg1_00, *(iVar13 + 0x10 + iVar17), *(iVar13 + 0x28 + iVar17), iVar6);\n                                puVar16 = puStack208;\n                            }\n                        }\n                        else if (*(arg1 + 0x3c) == 2) {\n                            uVar14 = arg1_02 + 7U & 0xfffffffffffffff8;\n                            puStack240 = uVar14 + 0xc;\n                            *(iVar13 + 0x20 + iVar17) = 0;\n                            iVar13 = arg1[5];\n                            uVar4 = *(iVar13 + 0x2b + iVar17);\n                            uVar5 = *(iVar13 + 0x2a + iVar17);\n                            iVar6 = *(iVar13 + 0x20 + iVar17);\n                            uStack232 = *(iVar13 + 0x28 + iVar17);\n                            iVar13 = *(iVar13 + 0x10 + iVar17);\n                            if (piStack200 == NULL) {\n                                fcn.00401cd0(0x80004005);\n                                pcVar7 = swi(3);\n                                (*pcVar7)();\n                                return;\n                            }\n                            *(piStack200 + 0x3c) = 0;\n                            piStack200[5] = 0;\n                            *(piStack200 + 8) = 0;\n                            *piStack200 = iVar13;\n                            *(piStack200 + 0x54) = uStack232;\n                            *(piStack200 + 0x56) = uVar5;\n                            *(piStack200 + 0x57) = uVar4;\n                            *(piStack200 + 10) = 0;\n                            piStack200[1] = 0;\n                            piStack200[2] = 0;\n                            piStack200[3] = 0;\n                            piStack200[4] = 0;\n                            piStack200[6] = 0;\n                            piStack200[9] = iVar6;\n                            *(piStack200 + 7) = 0;\n                            if (uVar14 != 0) {\n                                *(piStack200 + 7) = 2;\n                                piStack200[2] = uVar14;\n                            }\n                            arg1_01 = piStack168;\n                            puVar16 = puVar15;\n                            if (uVar14 + 8 != 0) {\n                                *(piStack200 + 7) = *(piStack200 + 7) | 4;\n                                piStack200[3] = uVar14 + 8;\n                            }\n                        }\n                        else if (*(arg1 + 0x3c) == 1) {\n                            puVar2 = iVar13 + 0x28 + iVar17;\n                            *puVar2 = *puVar2 | 0x4000;\n                            *(arg1[5] + 0x20 + iVar17) = 8;\n                            *(puVar16 + arg1[4]) = 1;\n                            iVar13 = arg1[5];\n                            uStack232 = *(iVar13 + 0x28 + iVar17);\n                            uVar10 = fcn.0041b9ec();\n                            puVar16 = (uVar10 - 1) + puStack240 & ~(uVar10 - 1);\n                            iVar6 = *(iVar13 + 0x20 + iVar17);\n                            uVar14 = iVar6 + 7 + puVar16 & 0xfffffffffffffff8;\n                            puStack240 = uVar14 + 0xc;\n                            uVar4 = *(iVar13 + 0x2b + iVar17);\n                            uVar5 = *(iVar13 + 0x2a + iVar17);\n                            iVar13 = *(iVar13 + 0x10 + iVar17);\n                            if (arg1_00 == NULL) {\n                                fcn.00401cd0(0x80004005);\n                                pcVar7 = swi(3);\n                                (*pcVar7)();\n                                return;\n                            }\n                            *(arg1_00 + 0x3c) = 0;\n                            arg1_00[5] = 0;\n                            *(arg1_00 + 8) = 0;\n                            *arg1_00 = iVar13;\n                            *(arg1_00 + 0x54) = uStack232;\n                            *(arg1_00 + 0x56) = uVar5;\n                            *(arg1_00 + 0x57) = uVar4;\n                            *(arg1_00 + 10) = 0;\n                            arg1_00[2] = 0;\n                            arg1_00[3] = 0;\n                            arg1_00[4] = 0;\n                            arg1_00[6] = 0;\n                            arg1_00[9] = iVar6;\n                            *(arg1_00 + 7) = 1;\n                            arg1_00[1] = puVar16;\n                            if (uVar14 != 0) {\n                                *(arg1_00 + 7) = 3;\n                                arg1_00[2] = uVar14;\n                            }\n                            if (uVar14 + 8 != 0) {\n                                *(arg1_00 + 7) = *(arg1_00 + 7) | 4;\n                                arg1_00[3] = uVar14 + 8;\n                            }\n                        }\n                        else {\n                            if (cStack248 == '\\0') {\n                                uStack144 = 0x89;\n                                uStack140 = 0x8b;\n                                iStack152 = 0;\n                                iStack148 = 0;\n                                uStack312 = CONCAT44(uStack312._4_4_, 2);\n                                fcn.00421518(arg1, puStack192, &uStack144, &iStack152);\n                                if (iStack152 == 0) {\n                                    if (iStack148 != 0) {\n                                        uStack88 = CONCAT44(*0x44eed4, *0x44eed0);\n                                        uStack80 = CONCAT44(*0x44eedc, *0x44eed8);\n                                    }\n                                }\n                                else {\n                                    uStack88 = CONCAT44(*0x44eee4, *0x44eee0);\n                                    uStack80 = CONCAT44(*0x44eeec, *0x44eee8);\n                                }\n                                cStack248 = '\\x01';\n                            }\n                            puStack208 = NULL;\n                            puStack208 = fcn.00403cc0(0x14);\n                            puStack176 = puStack208;\n                            if (puStack208 == NULL) {\n                                uVar14 = uStack228;\n                                if (uStack228 != 0) {\n                                    piVar12 = piVar12 + 5;\n                                    do {\n                                        fcn.00403cfc(*piVar12);\n                                        piVar12 = piVar12 + 0xb;\n                                        uVar14 = uVar14 - 1;\n                                    } while (uVar14 != 0);\n                                }\n                                fcn.00403cfc(arg1[4]);\n                                arg1[4] = 0;\n                                fcn.00403cfc(arg1_01);\n                                if (piStack224 != NULL) {\n                                    (**(*piStack224 + 0x10))();\n                                }\n                                goto code_r0x00422157;\n                            }\n                            *puStack208 = 0;\n                            *(puStack208 + 1) = uStack88;\n                            *(puStack208 + 3) = uStack80;\n                            iVar17 = uStack228 * 0x50;\n                            *(arg1[5] + 0x28 + iVar17) = 0xd;\n                            *(arg1[5] + 0x20 + iVar17) = 8;\n                            iVar13 = arg1[5];\n                            uVar10 = fcn.0041b9ec(uStack88);\n                            puStack288 = (uVar10 - 1) + puStack240 & ~(uVar10 - 1);\n                            iVar6 = *(iVar13 + 0x20 + iVar17);\n                            uStack280 = iVar6 + 7 + puStack288 & 0xfffffffffffffff8;\n                            iStack272 = uStack280 + 8;\n                            puStack240 = uStack280 + 0xc;\n                            puStack264 = puStack176;\n                            uStack296 = 0;\n                            uStack304 = *(iVar13 + 0x2b + iVar17);\n                            uStack312 = uStack312 & 0xffffffffffffff00 | *(iVar13 + 0x2a + iVar17);\n                            puStack208 = puStack288;\n                            fcn.0041d31c(arg1_00, *(iVar13 + 0x10 + iVar17), *(iVar13 + 0x28 + iVar17), iVar6);\n                            puVar16 = puStack208;\n                        }\n                        piStack200 = arg1_00 + 0xb;\n                        *(arg1[5] + 8 + iVar17) = puVar16;\n                        uStack228 = uStack228 + 1;\n                        arg1_02 = puStack240;\n                        puVar16 = uStack228;\n                    }\n                    if (*arg1 == 0) {\n                        iVar9 = fcn.0041b8d4(arg1, 1);\n                        if (iVar9 < 0) {\n                            if (arg1[3] != 0) {\n                                piVar12 = piVar12 + 5;\n                                do {\n                                    fcn.00403cfc(*piVar12);\n                                    puVar15 = puVar15 + 1;\n                                    piVar12 = piVar12 + 0xb;\n                                } while (puVar15 < arg1[3]);\n                            }\n                            fcn.00403cfc(arg1[4]);\n                            arg1[4] = 0;\n                            fcn.00403cfc(arg1_01);\n                            if (piStack224 != NULL) {\n                                (**(*piStack224 + 0x10))();\n                            }\n                            goto code_r0x00422157;\n                        }\n                        *(*arg1 + 8) = 1;\n                    }\n                    arg1[2] = 0;\n                    iVar13 = fcn.00403cc0(arg1_02);\n                    arg1[2] = iVar13;\n                    if (arg1[2] == 0) {\n                        if (arg1[3] != 0) {\n                            piVar12 = piVar12 + 5;\n                            do {\n                                fcn.00403cfc(*piVar12);\n                                puVar15 = puVar15 + 1;\n                                piVar12 = piVar12 + 0xb;\n                            } while (puVar15 < arg1[3]);\n                        }\n                        fcn.00403cfc(arg1[4]);\n                        arg1[4] = 0;\n                        fcn.00403cfc(arg1_01);\n                        if (piStack224 != NULL) {\n                            (**(*piStack224 + 0x10))();\n                        }\n                    }\n                    else {\n                        fcn.0042f6c0(arg1[2], 0, arg1_02);\n                        uStack312 = piStack224;\n                        iVar9 = fcn.0041b96c(piVar12, arg1[3], *arg1, arg1_02);\n                        if (iVar9 < 0) {\n                            fcn.00403cfc(arg1[4]);\n                            arg1[4] = 0;\n                        }\n                        fcn.00403cfc(arg1_01);\n                        if (piStack224 != NULL) {\n                            (**(*piStack224 + 0x10))();\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00422157:\n    fcn.0042dcb0(uStack72 ^ auStack344);\n    return;\n}\n",
        "token_count": 4711
    },
    "004236ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.004236ac(int64_t arg1)\n\n{\n    ulong *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    ulong arg1_00;\n    int64_t iVar7;\n    bool bVar8;\n    int64_t *piStackX8;\n    int64_t *apiStackX16 [3];\n    uint32_t uStack72;\n    uint32_t uStack68;\n    int32_t iStack64;\n    int32_t iStack56;\n    int32_t iStack52;\n    int32_t iStack48;\n    int32_t iStack44;\n    \n    if (*(arg1 + 8) == 0) {\n        fcn.00412ca8();\n        pcVar2 = swi(3);\n        uVar5 = (*pcVar2)();\n        return uVar5;\n    }\n    iVar6 = *(*(arg1 + 8) + 0x50);\n    if (iVar6 == 0) {\n        fcn.00412ca8();\n        pcVar2 = swi(3);\n        uVar5 = (*pcVar2)();\n        return uVar5;\n    }\n    iVar6 = fcn.0040f0cc(iVar6);\n    if (iVar6 == 0) {\n        fcn.00412ca8();\n        pcVar2 = swi(3);\n        uVar5 = (*pcVar2)();\n        return uVar5;\n    }\n    iVar3 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar6 + 0x40));\n    bVar8 = iVar3 == 0;\n    if (bVar8) {\n        arg1_00 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n        iVar7 = fcn.0040d71c(arg1_00);\n        (*_sym.imp.USER32.dll_GetWindowRect)(*(iVar7 + 0x40), &iStack56);\n        (*_sym.imp.USER32.dll_GetWindowRect)(*(iVar6 + 0x40));\n        fcn.00411990(iVar6, (iStack48 - iStack56) / 2, (iStack44 - iStack52) / 2, 0);\n        fcn.004119d8(iVar6, 1);\n    }\n    puVar1 = *(*(arg1 + 8) + 0x80);\n    iVar3 = (***puVar1)(puVar1, 0x44e560, arg1 + 0x90);\n    if (iVar3 < 0) {\n        puVar1 = *(*(arg1 + 8) + 0x80);\n        uVar5 = (***puVar1)(puVar1, 0x44e5c0, &piStackX8);\n        if (uVar5 < 0) {\n            return uVar5;\n        }\n        (**(*piStackX8 + 0x28))(piStackX8, apiStackX16);\n        (**(*piStackX8 + 0x10))();\n        if (apiStackX16[0] == NULL) {\n            return 0x80004005;\n        }\n        uVar4 = (***apiStackX16[0])(apiStackX16[0], 0x452760, arg1 + 0x10);\n        (**(*apiStackX16[0] + 0x10))();\n        if (uVar4 < 0) {\n            return uVar4;\n        }\n        (****(arg1 + 0x10))();\n    }\n    else {\n        uVar4 = (**(**(arg1 + 0x90) + 0x18))();\n        if (*(arg1 + 0x98) == 0) {\n            uVar4 = 0x80004003;\n        }\n        if (uVar4 < 0) {\n            if (bVar8) {\n                fcn.00411990(iVar6, uStack72, uStack68, iStack64 - uStack72);\n                fcn.004119d8(iVar6, 0);\n            }\n            return uVar4;\n        }\n    }\n    uVar4 = fcn.004222d4(arg1);\n    if (bVar8) {\n        fcn.00411990(iVar6, uStack72, uStack68, iStack64 - uStack72);\n        fcn.004119d8(iVar6, 0);\n    }\n    return uVar4;\n}\n",
        "token_count": 997
    },
    "004241ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.004241ec(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t *piVar1;\n    int64_t arg1_00;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    uint64_t arg2_00;\n    ulong *puVar7;\n    uint64_t *puVar8;\n    ulong *puVar9;\n    uchar auStack680 [32];\n    uint16_t auStack648 [2];\n    int32_t iStack644;\n    uchar auStack640 [24];\n    ushort uStack616;\n    ushort uStack614;\n    ushort uStack612;\n    ushort uStack608;\n    ushort uStack606;\n    ushort uStack604;\n    ushort uStack600;\n    ushort uStack598;\n    ushort uStack594;\n    ushort uStack592;\n    ushort uStack590;\n    ushort uStack588;\n    ushort uStack584;\n    ushort uStack582;\n    ushort uStack578;\n    ushort uStack576;\n    ushort uStack574;\n    ushort uStack572;\n    ushort uStack568;\n    ushort uStack566;\n    ushort uStack562;\n    ushort uStack560;\n    ushort uStack558;\n    ushort uStack556;\n    ushort uStack552;\n    ushort uStack550;\n    ushort uStack548;\n    ushort uStack546;\n    ushort uStack544;\n    ushort uStack542;\n    ulong uStack536;\n    uint32_t uStack528;\n    ulong uStack520;\n    uint32_t uStack512;\n    int64_t iStack504;\n    int64_t iStack496;\n    ulong uStack488;\n    uint32_t uStack480;\n    ushort auStack472 [4];\n    ulong uStack464;\n    ushort auStack448 [4];\n    ulong uStack440;\n    ushort auStack424 [4];\n    ulong uStack416;\n    ushort auStack400 [4];\n    ulong uStack392;\n    ushort auStack376 [4];\n    uchar uStack368;\n    ushort auStack352 [4];\n    ulong uStack344;\n    ushort auStack328 [4];\n    uint uStack320;\n    ushort auStack304 [4];\n    ulong uStack296;\n    ushort auStack280 [4];\n    double dStack272;\n    ulong uStack256;\n    uchar auStack248 [24];\n    uchar auStack224 [24];\n    uchar auStack200 [24];\n    uchar auStack176 [24];\n    uchar auStack152 [24];\n    uchar auStack128 [24];\n    uchar uStack104;\n    char cStack103;\n    char cStack102;\n    int64_t iStack101;\n    uint64_t uStack80;\n    \n    uStack256 = 0xfffffffffffffffe;\n    uStack80 = *0x465c38 ^ auStack680;\n    arg2_00 = arg3;\n    puVar9 = NULL;\n    iStack644 = 0;\n    if (*(arg1 + 0x90) == 0) {\n        fcn.00412ca8();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (*(arg1 + 0xa8) == 0) {\n        fcn.00412ca8();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    fcn.00427540(auStack640);\n    iStack644 = 3;\n    fcn.00420454(*(arg1 + 0xa8), arg2_00, &iStack644);\n    if (iStack644 == 3) {\n        fcn.004277a8(arg2, auStack640);\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack640);\n        goto code_r0x00424daf;\n    }\n    arg1_00 = *(arg1 + 0xa8);\n    cVar3 = fcn.0041d3d8(arg1_00, arg2_00, auStack648);\n    if (cVar3 == '\\0') {\n        fcn.004277a8(arg2, auStack640);\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack640);\n        goto code_r0x00424daf;\n    }\n    if (auStack648[0] < 0x82) {\n        if (auStack648[0] == 0x81) {\n            if (*(arg1_00 + 0x38) == '\\0') {\n                iVar6 = *(arg1_00 + 0x28);\n                if (arg2_00 <= *(arg1_00 + 0x18) + -1 + *(iVar6 + 0x10)) {\n                    puVar7 = arg2_00 - *(iVar6 + 0x10);\ncode_r0x004248ff:\n                    puVar9 = *(iVar6 + 8 + puVar7 * 0x50) + *(arg1_00 + 0x10);\n                }\n            }\n            else if (*(arg1_00 + 0x18) != 0) {\n                iVar6 = *(arg1_00 + 0x28);\n                puVar8 = iVar6 + 0x10;\n                puVar7 = puVar9;\n                do {\n                    if (*puVar8 == arg2_00) goto code_r0x004248ff;\n                    puVar7 = puVar7 + 1;\n                    puVar8 = puVar8 + 10;\n                } while (puVar7 < *(arg1_00 + 0x18));\n            }\n            puVar9 = fcn.00404ed0(&iStack504, puVar9);\n            uVar5 = fcn.004279e8(auStack128, *puVar9);\n            fcn.0042751c(auStack640, uVar5);\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack128);\n            LOCK();\n            piVar1 = iStack504 + -8;\n            iVar4 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar4 + -1 < 1) {\n                (**(**(iStack504 + -0x18) + 8))();\n            }\n        }\n        else if (auStack648[0] < 9) {\n            if (auStack648[0] == 8) goto code_r0x00424ccc;\n            if (auStack648[0] == 2) {\ncode_r0x00424671:\n                if ((*(arg1_00 + 0x38) != '\\0') && (*(arg1_00 + 0x18) != 0)) {\n                    puVar8 = *(arg1_00 + 0x28) + 0x10;\n                    do {\n                        if (*puVar8 == arg2_00) break;\n                        puVar9 = puVar9 + 1;\n                        puVar8 = puVar8 + 10;\n                    } while (puVar9 < *(arg1_00 + 0x18));\n                }\n                uVar5 = fcn.0042743c(auStack152);\n                fcn.0042751c(auStack640, uVar5);\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack152);\n            }\n            else if (auStack648[0] == 3) {\ncode_r0x004245e0:\n                if (*(arg1_00 + 0x38) == '\\0') {\n                    iVar6 = *(arg1_00 + 0x28);\n                    if (arg2_00 <= *(arg1_00 + 0x18) + -1 + *(iVar6 + 0x10)) {\n                        puVar7 = arg2_00 - *(iVar6 + 0x10);\ncode_r0x0042462a:\n                        puVar9 = *(iVar6 + 8 + puVar7 * 0x50) + *(arg1_00 + 0x10);\n                    }\n                }\n                else if (*(arg1_00 + 0x18) != 0) {\n                    iVar6 = *(arg1_00 + 0x28);\n                    puVar8 = iVar6 + 0x10;\n                    puVar7 = puVar9;\n                    do {\n                        if (*puVar8 == arg2_00) goto code_r0x0042462a;\n                        puVar7 = puVar7 + 1;\n                        puVar8 = puVar8 + 10;\n                    } while (puVar7 < *(arg1_00 + 0x18));\n                }\n                uVar5 = fcn.00427460(auStack200, *puVar9);\n                fcn.0042751c(auStack640, uVar5);\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack200);\n            }\n            else if (auStack648[0] == 4) {\n                if (*(arg1_00 + 0x38) == '\\0') {\n                    iVar6 = *(arg1_00 + 0x28);\n                    if (arg2_00 <= *(arg1_00 + 0x18) + -1 + *(iVar6 + 0x10)) {\n                        puVar7 = arg2_00 - *(iVar6 + 0x10);\ncode_r0x0042455c:\n                        puVar9 = *(iVar6 + 8 + puVar7 * 0x50) + *(arg1_00 + 0x10);\n                    }\n                }\n                else if (*(arg1_00 + 0x18) != 0) {\n                    iVar6 = *(arg1_00 + 0x28);\n                    puVar8 = iVar6 + 0x10;\n                    puVar7 = puVar9;\n                    do {\n                        if (*puVar8 == arg2_00) goto code_r0x0042455c;\n                        puVar7 = puVar7 + 1;\n                        puVar8 = puVar8 + 10;\n                    } while (puVar7 < *(arg1_00 + 0x18));\n                }\n                uStack320 = *puVar9;\n                auStack328[0] = 4;\n                fcn.0042751c(auStack640, auStack328);\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack328);\n            }\n            else if (auStack648[0] == 5) {\n                if (*(arg1_00 + 0x38) == '\\0') {\n                    iVar6 = *(arg1_00 + 0x28);\n                    if (arg2_00 <= *(arg1_00 + 0x18) + -1 + *(iVar6 + 0x10)) {\n                        puVar7 = arg2_00 - *(iVar6 + 0x10);\ncode_r0x004244c4:\n                        puVar9 = *(iVar6 + 8 + puVar7 * 0x50) + *(arg1_00 + 0x10);\n                    }\n                }\n                else if (*(arg1_00 + 0x18) != 0) {\n                    iVar6 = *(arg1_00 + 0x28);\n                    puVar8 = iVar6 + 0x10;\n                    puVar7 = puVar9;\n                    do {\n                        if (*puVar8 == arg2_00) goto code_r0x004244c4;\n                        puVar7 = puVar7 + 1;\n                        puVar8 = puVar8 + 10;\n                    } while (puVar7 < *(arg1_00 + 0x18));\n                }\n                uStack296 = *puVar9;\n                auStack304[0] = 5;\n                fcn.0042751c(auStack640, auStack304);\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack304);\n            }\n            else if (auStack648[0] == 6) {\n                if (*(arg1_00 + 0x38) == '\\0') {\n                    iVar6 = *(arg1_00 + 0x28);\n                    if (arg2_00 <= *(arg1_00 + 0x18) + -1 + *(iVar6 + 0x10)) {\n                        puVar7 = arg2_00 - *(iVar6 + 0x10);\ncode_r0x0042442f:\n                        puVar9 = *(iVar6 + 8 + puVar7 * 0x50) + *(arg1_00 + 0x10);\n                    }\n                }\n                else if (*(arg1_00 + 0x18) != 0) {\n                    iVar6 = *(arg1_00 + 0x28);\n                    puVar8 = iVar6 + 0x10;\n                    puVar7 = puVar9;\n                    do {\n                        if (*puVar8 == arg2_00) goto code_r0x0042442f;\n                        puVar7 = puVar7 + 1;\n                        puVar8 = puVar8 + 10;\n                    } while (puVar7 < *(arg1_00 + 0x18));\n                }\n                uStack392 = *puVar9;\n                auStack400[0] = 6;\n                fcn.0042751c(auStack640, auStack400);\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack400);\n            }\n            else if (auStack648[0] == 7) {\n                if (*(arg1_00 + 0x38) == '\\0') {\n                    iVar6 = *(arg1_00 + 0x28);\n                    if (arg2_00 <= *(arg1_00 + 0x18) + -1 + *(iVar6 + 0x10)) {\n                        puVar7 = arg2_00 - *(iVar6 + 0x10);\ncode_r0x00424397:\n                        puVar9 = *(iVar6 + 8 + puVar7 * 0x50) + *(arg1_00 + 0x10);\n                    }\n                }\n                else if (*(arg1_00 + 0x18) != 0) {\n                    iVar6 = *(arg1_00 + 0x28);\n                    puVar8 = iVar6 + 0x10;\n                    puVar7 = puVar9;\n                    do {\n                        if (*puVar8 == arg2_00) goto code_r0x00424397;\n                        puVar7 = puVar7 + 1;\n                        puVar8 = puVar8 + 10;\n                    } while (puVar7 < *(arg1_00 + 0x18));\n                }\n                uStack464 = *puVar9;\n                auStack472[0] = 7;\n                fcn.0042751c(auStack640, auStack472);\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack472);\n            }\n        }\n        else if (auStack648[0] == 0xb) {\n            if ((*(arg1_00 + 0x38) != '\\0') && (*(arg1_00 + 0x18) != 0)) {\n                puVar8 = *(arg1_00 + 0x28) + 0x10;\n                do {\n                    if (*puVar8 == arg2_00) break;\n                    puVar9 = puVar9 + 1;\n                    puVar8 = puVar8 + 10;\n                } while (puVar9 < *(arg1_00 + 0x18));\n            }\n            uVar5 = fcn.0042743c(auStack176);\n            fcn.0042751c(auStack640, uVar5);\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack176);\n        }\n        else if (auStack648[0] == 0xc) {\n            if (*(arg1_00 + 0x38) == '\\0') {\n                iVar6 = *(arg1_00 + 0x28);\n                if (arg2_00 <= *(arg1_00 + 0x18) + -1 + *(iVar6 + 0x10)) {\n                    puVar7 = arg2_00 - *(iVar6 + 0x10);\ncode_r0x004247e1:\n                    puVar9 = *(iVar6 + 8 + puVar7 * 0x50) + *(arg1_00 + 0x10);\n                }\n            }\n            else if (*(arg1_00 + 0x18) != 0) {\n                iVar6 = *(arg1_00 + 0x28);\n                puVar8 = iVar6 + 0x10;\n                puVar7 = puVar9;\n                do {\n                    if (*puVar8 == arg2_00) goto code_r0x004247e1;\n                    puVar7 = puVar7 + 1;\n                    puVar8 = puVar8 + 10;\n                } while (puVar7 < *(arg1_00 + 0x18));\n            }\n            uVar5 = fcn.00427770(auStack224, puVar9);\n            fcn.0042751c(auStack640, uVar5);\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack224);\n        }\n        else if (0xf < auStack648[0]) {\n            if (auStack648[0] < 0x12) {\n                if (*(arg1_00 + 0x38) == '\\0') {\n                    iVar6 = *(arg1_00 + 0x28);\n                    if (arg2_00 <= *(arg1_00 + 0x18) + -1 + *(iVar6 + 0x10)) {\n                        puVar7 = arg2_00 - *(iVar6 + 0x10);\ncode_r0x0042474d:\n                        puVar9 = *(iVar6 + 8 + puVar7 * 0x50) + *(arg1_00 + 0x10);\n                    }\n                }\n                else if (*(arg1_00 + 0x18) != 0) {\n                    iVar6 = *(arg1_00 + 0x28);\n                    puVar8 = iVar6 + 0x10;\n                    puVar7 = puVar9;\n                    do {\n                        if (*puVar8 == arg2_00) goto code_r0x0042474d;\n                        puVar7 = puVar7 + 1;\n                        puVar8 = puVar8 + 10;\n                    } while (puVar7 < *(arg1_00 + 0x18));\n                }\n                uStack368 = *puVar9;\n                auStack376[0] = 0x11;\n                fcn.0042751c(auStack640, auStack376);\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack376);\n            }\n            else {\n                if (auStack648[0] == 0x12) goto code_r0x00424671;\n                if (auStack648[0] == 0x13) goto code_r0x004245e0;\n            }\n        }\n    }\n    else if (auStack648[0] == 0x82) {\ncode_r0x00424ccc:\n        if (*(arg1_00 + 0x38) == '\\0') {\n            iVar6 = *(arg1_00 + 0x28);\n            if (arg2_00 <= *(arg1_00 + 0x18) + -1 + *(iVar6 + 0x10)) {\n                puVar7 = arg2_00 - *(iVar6 + 0x10);\ncode_r0x00424d16:\n                puVar9 = *(iVar6 + 8 + puVar7 * 0x50) + *(arg1_00 + 0x10);\n            }\n        }\n        else if (*(arg1_00 + 0x18) != 0) {\n            iVar6 = *(arg1_00 + 0x28);\n            puVar8 = iVar6 + 0x10;\n            puVar7 = puVar9;\n            do {\n                if (*puVar8 == arg2_00) goto code_r0x00424d16;\n                puVar7 = puVar7 + 1;\n                puVar8 = puVar8 + 10;\n            } while (puVar7 < *(arg1_00 + 0x18));\n        }\n        puVar9 = fcn.00412850(&iStack496, puVar9);\n        uVar5 = fcn.004279e8(auStack248, *puVar9);\n        fcn.0042751c(auStack640, uVar5);\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack248);\n        LOCK();\n        piVar1 = iStack496 + -8;\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar4 + -1 < 1) {\n            (**(**(iStack496 + -0x18) + 8))();\n        }\n    }\n    else if (auStack648[0] == 0x83) {\n        cVar3 = fcn.0041fcc4(arg1_00, arg2_00, &uStack104);\n        if (cVar3 != '\\0') {\n            dStack272 = iStack101;\n            for (; cStack103 != '\\0'; cStack103 = cStack103 + -1) {\n                dStack272 = dStack272 / *0x44f2b8;\n            }\n            if (cStack102 == '\\0') {\n                dStack272 = *0x44f2b0 - dStack272;\n            }\n            auStack280[0] = 5;\n            fcn.0042751c(auStack640, auStack280);\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack280);\n        }\n    }\n    else if (auStack648[0] == 0x85) {\n        cVar3 = fcn.0041fd4c(arg1_00, arg2_00, &uStack608);\n        if (cVar3 != '\\0') {\n            uStack536 = 0;\n            uStack528 = 0;\n            fcn.0042f6c0(&uStack600, 0, 0x10);\n            uStack600 = uStack608;\n            uStack598 = uStack606;\n            uStack594 = uStack604;\n            uStack592 = 0;\n            uStack590 = 0;\n            uStack588 = 0;\n            iVar4 = fcn.0041babc(&uStack600, &uStack536);\n            uStack528 = iVar4 == 0;\n            auStack424[0] = 7;\n            uStack416 = uStack536;\n            fcn.0042751c(auStack640, auStack424);\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack424);\n        }\n    }\n    else if (auStack648[0] == 0x86) {\n        cVar3 = fcn.0041fdc4(arg1_00, arg2_00, &uStack616);\n        if (cVar3 != '\\0') {\n            uStack520 = 0;\n            uStack512 = 0;\n            fcn.0042f6c0(&uStack568, 0, 0x10);\n            uStack568 = 0x76b;\n            uStack566 = 0xc;\n            uStack562 = 0x1e;\n            uStack560 = uStack616;\n            uStack558 = uStack614;\n            uStack556 = uStack612;\n            iVar4 = fcn.0041babc(&uStack568, &uStack520);\n            uStack512 = iVar4 == 0;\n            auStack448[0] = 7;\n            uStack440 = uStack520;\n            fcn.0042751c(auStack640, auStack448);\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack448);\n        }\n    }\n    else if ((auStack648[0] == 0x87) && (cVar3 = fcn.0041fe3c(arg1_00, arg2_00, &uStack552),  cVar3 != '\\0')) {\n        fcn.0042f6c0(&uStack584, 0, 0x10);\n        uStack584 = uStack552;\n        uStack582 = uStack550;\n        uStack578 = uStack548;\n        uStack576 = uStack546;\n        uStack574 = uStack544;\n        uStack572 = uStack542;\n        iVar4 = fcn.0041babc(&uStack584, &uStack488);\n        uStack480 = iVar4 == 0;\n        auStack352[0] = 7;\n        uStack344 = uStack488;\n        fcn.0042751c(auStack640, auStack352);\n        (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack352);\n    }\n    fcn.004277a8(arg2, auStack640);\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(auStack640);\ncode_r0x00424daf:\n    fcn.0042dcb0(uStack80 ^ auStack680);\n    return;\n}\n",
        "token_count": 5571
    },
    "004252b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004252b4(ulong *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t arg1_00;\n    int64_t iVar6;\n    \n    *arg1 = 0x44f098;\n    iVar6 = arg1[8];\n    if ((iVar6 != 0) && (*(iVar6 + 0xd0) == arg1)) {\n        *(iVar6 + 0xd0) = 0;\n    }\n    iVar6 = arg1[0x1b];\n    if (iVar6 != 0) {\n        fcn.00423c3c(iVar6);\n        fcn.00403cfc(iVar6);\n    }\n    fcn.0041c4a0(arg1);\n    fcn.0041bfb8(arg1, arg1 + 0x6c, *(arg1 + 0x14));\n    fcn.0041bfb8(arg1, 0x452880, *(arg1 + 0xa4));\n    fcn.0041bfb8(arg1, 0x452740, *(arg1 + 0xd4));\n    if (arg1[0x13] != NULL) {\n        (**(*arg1[0x13] + 0x10))();\n        arg1[0x13] = 0;\n    }\n    if (arg1[0x11] != NULL) {\n        (**(*arg1[0x11] + 0x28))();\n        (**(*arg1[0x11] + 0x10))();\n        arg1[0x11] = 0;\n    }\n    if (arg1[0x12] != NULL) {\n        (**(*arg1[0x12] + 0x10))();\n        arg1[0x12] = 0;\n    }\n    piVar3 = arg1[0x10];\n    if (piVar3 != NULL) {\n        (**(*piVar3 + 0x18))(piVar3, 0);\n        (**(*arg1[0x10] + 0x30))(arg1[0x10], 1);\n        (**(*arg1[0x10] + 0x10))();\n        arg1[0x10] = 0;\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(arg1 + 0x21);\n    iVar6 = 0;\n    arg1_00 = arg1[0x1c];\n    while (arg1_00 != 0) {\n        iVar4 = *(arg1_00 + 0x20);\n        if (iVar6 == 0) {\n            arg1[0x1c] = iVar4;\n        }\n        else {\n            *(iVar6 + 0x20) = iVar4;\n        }\n        iVar5 = *(arg1_00 + 0x10);\n        if ((iVar5 != 0) && (*(iVar5 + 0xd8) != 0)) {\n            (**(**(iVar5 + 0xd8) + 8))(*(iVar5 + 0xd8), arg1_00, 0);\n        }\n        fcn.00403cfc(arg1_00);\n        arg1_00 = iVar4;\n        if (iVar6 != 0) {\n            iVar6 = *(iVar6 + 0x20);\n        }\n    }\n    if (((*(arg1 + 0x1e) != 0) && (iVar6 = arg1[0x1d],  iVar6 != 0)) && (*(iVar6 + 0xd8) != 0)) {\n        (**(**(iVar6 + 0xd8) + 0x10))(*(iVar6 + 0xd8), arg1, 0);\n    }\n    if ((arg1[8] != 0) && (*(arg1 + 0xb4) != 0)) {\n        piVar1 = arg1[8] + 0xe0;\n        *piVar1 = *piVar1 + -1;\n    }\n    fcn.0042a770(arg1 + 0x24);\n    iVar6 = arg1[0x1f];\n    LOCK();\n    piVar1 = iVar6 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar6 + -0x18) + 8))();\n    }\n    if (arg1[4] != 0) {\n        (**(arg1[4] + 0x38))();\n    }\n    arg1[7] = 0;\n    return;\n}\n",
        "token_count": 1053
    },
    "00425e14": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00425e14(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    ulong *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t *piVar8;\n    int32_t iVar9;\n    ulong *puVar10;\n    int64_t *piVar11;\n    \n    piVar11 = NULL;\n    piVar5 = fcn.00425c0c(arg1, arg2);\n    piVar8 = piVar5;\n    if ((piVar5 == NULL) && (iVar6 = fcn.0040b40c(arg1),  iVar6 != 0)) {\n        puVar10 = *(iVar6 + 0x88);\n        while (piVar8 = piVar5,  puVar10 != NULL) {\n            puVar1 = *puVar10;\n            piVar8 = puVar10[2];\n            if (((piVar8[1] != 0) && (piVar8[1] == *(iVar6 + 0xd8))) ||\n               ((puVar10 = puVar1,  *piVar8 != 0 && (iVar7 = (*_sym.imp.USER32.dll_GetFocus)(),  *piVar8 == iVar7))))\n            break;\n        }\n    }\n    iVar9 = 0;\n    do {\n        piVar8 = fcn.00425c6c(arg1, piVar8, arg3);\n        if (piVar8 == NULL) {\n            return NULL;\n        }\n        iVar3 = fcn.004255bc(piVar8);\n        if ((iVar3 != 0) && (piVar8 = fcn.00411cd0(arg1, piVar8, 0),  piVar8 == NULL)) {\n            return NULL;\n        }\n        if (piVar8 == NULL) {\ncode_r0x00425eed:\n            if (piVar8[1] == 0) {\n                fcn.00412ca8();\n                pcVar2 = swi(3);\n                piVar8 = (*pcVar2)();\n                return piVar8;\n            }\n            uVar4 = (**(*piVar8[1] + 0xf0))();\n            uVar4 = uVar4 >> 0x1b & 1;\n        }\n        else {\n            if (piVar8[1] == 0) {\n                iVar6 = *piVar8;\n            }\n            else {\n                iVar6 = *(piVar8[1] + 0x48);\n            }\n            if (iVar6 == 0) goto code_r0x00425eed;\n            uVar4 = (*_sym.imp.USER32.dll_IsWindowEnabled)();\n        }\n        if (uVar4 == 0) {\n            return piVar8;\n        }\n        if (piVar8 == piVar11) {\n            return NULL;\n        }\n        if (piVar11 == NULL) {\n            piVar11 = piVar8;\n        }\n        iVar9 = iVar9 + 1;\n        if (0x1ff < iVar9) {\n            return NULL;\n        }\n    } while( true );\n}\n",
        "token_count": 712
    },
    "00426854": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00426854(int64_t *arg1)\n\n{\n    arg1[4] = 0;\n    arg1[5] = 0;\n    arg1[6] = 0;\n    arg1[7] = 0;\n    if ((arg1[8] != 0) && (*(arg1 + 9) != 0)) {\n        (**(*arg1 + 0xc0))();\n    }\n    arg1[8] = 0;\n    return;\n}\n",
        "token_count": 109
    },
    "00426aec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * fcn.00426aec(int64_t *arg1, int32_t *arg2)\n\n{\n    int32_t *piVar1;\n    int64_t **ppiVar2;\n    int64_t *piVar3;\n    int32_t **ppiVar4;\n    \n    piVar1 = (**(*arg1 + 0x88))();\n    if (piVar1 == NULL) {\n        ppiVar2 = (**(*arg1 + 0x70))();\n        if ((((*0x4527a0 == *arg2) && (arg2[1] == *0x4527a4)) && (arg2[2] == *0x4527a8)) && (arg2[3] == *0x4527ac)) {\n            do {\n                for (piVar3 = ppiVar2[1]; *piVar3 != 0; piVar3 = piVar3 + 2) {\n                    if (*(piVar3[1] + arg1) != 0) {\n                        return piVar3[1] + arg1;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        else {\n            do {\n                for (ppiVar4 = ppiVar2[1]; piVar1 = *ppiVar4,  piVar1 != NULL; ppiVar4 = ppiVar4 + 2) {\n                    if (((*piVar1 == *arg2) && (piVar1[1] == arg2[1])) &&\n                       ((piVar1[2] == arg2[2] && ((piVar1[3] == arg2[3] && (*(ppiVar4[1] + arg1) != 0)))))) {\n                        return ppiVar4[1] + arg1;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        piVar1 = NULL;\n    }\n    return piVar1;\n}\n",
        "token_count": 442
    },
    "00426bb8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00426bb8(int64_t *arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    int64_t aiStackX8 [4];\n    \n    piVar3 = (**(*arg1 + 0x70))();\n    do {\n        for (piVar4 = piVar3[1]; *piVar4 != 0; piVar4 = piVar4 + 2) {\n        }\n        for (piVar4 = piVar4 + 1; *piVar4 != -1; piVar4 = piVar4 + 2) {\n            puVar1 = *(arg1 + *piVar4);\n            if (puVar1 != NULL) {\n                aiStackX8[0] = 0;\n                iVar2 = (***puVar1)(puVar1, arg2, aiStackX8);\n                if ((iVar2 == 0) && (aiStackX8[0] != 0)) {\n                    return aiStackX8[0];\n                }\n            }\n        }\n        piVar3 = *piVar3;\n        if (piVar3 == NULL) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 285
    },
    "00426c34": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00426c34(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    \n    if (*(arg1 + 0x10) == 0) {\n        LOCK();\n        piVar1 = arg1 + 8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + 1;\n        uVar3 = iVar2 + 1;\n    }\n    else {\n        uVar3 = (**(**(arg1 + 0x10) + 8))();\n    }\n    return uVar3;\n}\n",
        "token_count": 142
    },
    "00426c60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00426c60(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    ulong in_R8;\n    ulong in_R9;\n    ulong uVar3;\n    ulong uStack48;\n    int32_t iStack40;\n    \n    uVar3 = 0xfffffffffffffffe;\n    if (*(arg1 + 1) == 0) {\n        iVar2 = 0;\n    }\n    else {\n        LOCK();\n        piVar1 = arg1 + 1;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        iVar2 = iVar2 + -1;\n        if (iVar2 == 0) {\n            fcn.00413c8c(&uStack48, arg1[7]);\n            (**(*arg1 + 0x20))(arg1);\n            if (iStack40 != 0) {\n                fcn.00412e8c(0, uStack48, in_R8, in_R9, uVar3);\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 246
    },
    "00426cd8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00426cd8(int64_t psa)\n\n{\n    if (*(psa + 0x10) == 0) {\n        fcn.00426c60(psa);\n    }\n    else {\n        (**(**(psa + 0x10) + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "00426d48": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00426d48(int64_t arg1)\n\n{\n    ulong in_RDX;\n    ulong in_R8;\n    \n    if (*(arg1 + 0x10) == 0) {\n        fcn.00426cfc(arg1, in_RDX, in_R8);\n    }\n    else {\n        (****(arg1 + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "00426d68": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00426d68(void)\n\n{\n    uint uVar1;\n    uchar auStack72 [32];\n    uchar auStack40 [24];\n    uint64_t uStack16;\n    \n    uStack16 = *0x465c38 ^ auStack72;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetOEMCP)();\n    (*_sym.imp.KERNEL32.dll_GetCPInfo)(uVar1, auStack40);\n    fcn.0042dcb0(uStack16 ^ auStack72);\n    return;\n}\n",
        "token_count": 119
    },
    "00426f20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00426f20(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    \n    if (*(arg1 + 0x20) == 0) {\n        iVar2 = fcn.00418c44(arg1 + 0x28, *(arg1 + 0x30), 0x18);\n        iVar1 = *(arg1 + 0x30);\n        puVar3 = iVar2 + -0x10 + iVar1 * 0x18;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar3 = *(arg1 + 0x20);\n            *(arg1 + 0x20) = puVar3;\n            puVar3 = puVar3 + -3;\n        }\n    }\n    puVar3 = *(arg1 + 0x20);\n    *(arg1 + 0x20) = *puVar3;\n    puVar3[1] = arg2;\n    *puVar3 = arg3;\n    *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n    puVar3[2] = 0;\n    return;\n}\n",
        "token_count": 284
    },
    "00427380": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00427380(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    \n    fcn.00427248();\n    iVar3 = fcn.00413c10();\n    if ((*(iVar3 + 8) != 0) && (pcVar1 = *(*(iVar3 + 8) + 0x78),  pcVar1 != NULL)) {\n        (*pcVar1)(1);\n    }\n    iVar3 = fcn.00413c60();\n    if (*(iVar3 + 0x78) != NULL) {\n        iVar2 = (**(**(iVar3 + 0x78) + 0x278))();\n        if (iVar2 != 0) {\n            *(iVar3 + 0x78) = 0;\n        }\n    }\n    iVar3 = fcn.00413268();\n    iVar4 = fcn.00413c10();\n    if (*(iVar4 + 0x28) == '\\0') {\n        if (*(iVar3 + 0x50) != 0) {\n            (*_sym.imp.USER32.dll_UnhookWindowsHookEx)();\n            *(iVar3 + 0x50) = 0;\n        }\n        if (*(iVar3 + 0x48) != 0) {\n            (*_sym.imp.USER32.dll_UnhookWindowsHookEx)();\n            *(iVar3 + 0x48) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 326
    },
    "00427e5c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00427e5c(int64_t arg1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uchar *arg1_00;\n    int64_t iVar4;\n    uchar *arg1_01;\n    uchar auStack872 [32];\n    uchar auStack840 [260];\n    uchar auStack580 [12];\n    uchar auStack568 [272];\n    uchar auStack296 [256];\n    uint64_t uStack40;\n    \n    uStack40 = *0x465c38 ^ auStack872;\n    iVar3 = fcn.00413c10();\n    *(iVar3 + 0x10) = *(arg1 + 0x88);\n    *(iVar3 + 0x18) = *(arg1 + 0x88);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(*(arg1 + 0x88), auStack840, 0x104);\n    if ((iVar2 == 0) || (iVar2 == 0x104)) {\n        fcn.004143e0();\n    }\n    arg1_00 = (*_sym.imp.SHLWAPI.dll_PathFindExtensionA)(auStack840);\n    if (arg1_00 == NULL) {\n        fcn.004143e0();\n    }\n    *arg1_00 = 0;\n    iVar2 = fcn.00427de0(auStack840, auStack568, 0x104);\n    if (iVar2 != 0) {\n        fcn.004143e0();\n    }\n    if (*(arg1 + 0xc0) == 0) {\n        iVar4 = fcn.0042f850(auStack568);\n        *(arg1 + 0xc0) = iVar4;\n        if (iVar4 == 0) {\n            fcn.00412c60();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    iVar4 = *(arg1 + 0xa0);\n    if (iVar4 == 0) {\n        iVar2 = fcn.00413f1c(0xe000, auStack296, 0x100);\n        arg1_01 = auStack296;\n        if (iVar2 == 0) {\n            arg1_01 = *(arg1 + 0xc0);\n        }\n        iVar4 = fcn.0042f850(arg1_01);\n        *(arg1 + 0xa0) = iVar4;\n        if (iVar4 == 0) {\n            fcn.00412c60();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    *(iVar3 + 0x20) = iVar4;\n    if (*(arg1 + 200) == 0) {\n        if (*(arg1 + 0xd8) == 1) {\n            iVar2 = fcn.0042f3a0(arg1_00, auStack580 + -arg1_00, \".CHM\");\n            if (iVar2 != 0) {\n                if (iVar2 == 0xc) {\n                    fcn.00412c60();\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n                if ((iVar2 == 0x16) || (iVar2 == 0x22)) {\n                    fcn.00412ca8();\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n                if (iVar2 != 0x50) {\n                    fcn.00412ca8();\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n            }\n        }\n        else {\n            iVar2 = fcn.0042f3a0(arg1_00, auStack580 + -arg1_00, \".HLP\");\n            if (iVar2 != 0) {\n                if (iVar2 == 0xc) {\n                    fcn.00412c60();\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n                if ((iVar2 == 0x16) || (iVar2 == 0x22)) {\n                    fcn.00412ca8();\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n                if (iVar2 != 0x50) {\n                    fcn.00412ca8();\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n            }\n        }\n        iVar3 = fcn.0042f850(auStack840);\n        *(arg1 + 200) = iVar3;\n        if (iVar3 == 0) {\n            fcn.00412c60();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        *arg1_00 = 0;\n    }\n    if (*(arg1 + 0xd0) == 0) {\n        iVar2 = fcn.00430350(auStack568, 0x104, \".INI\");\n        if (iVar2 != 0) {\n            if (iVar2 == 0xc) {\n                fcn.00412c60();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            if ((iVar2 == 0x16) || (iVar2 == 0x22)) {\n                fcn.00412ca8();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            if (iVar2 != 0x50) {\n                fcn.00412ca8();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        iVar3 = fcn.0042f850(auStack568);\n        *(arg1 + 0xd0) = iVar3;\n        if (iVar3 == 0) {\n            fcn.00412c60();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    fcn.0042dcb0(uStack40 ^ auStack872);\n    return;\n}\n",
        "token_count": 1360
    },
    "004280b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004280b0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(0);\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)(uVar1 | 0x8001);\n    iVar2 = fcn.00413c10();\n    *(iVar2 + 0x10) = arg1;\n    *(iVar2 + 0x18) = arg1;\n    fcn.00412ee0(iVar2);\n    iVar2 = fcn.00413c10();\n    iVar2 = *(iVar2 + 8);\n    if (iVar2 != 0) {\n        *(iVar2 + 0x88) = arg1;\n        *(iVar2 + 0x90) = arg3;\n        *(iVar2 + 0x98) = arg4;\n        fcn.00427e5c(iVar2);\n    }\n    iVar2 = fcn.00413c10();\n    if (*(iVar2 + 0x28) == '\\0') {\n        fcn.00405ff8();\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"user32.dll\");\n    if (iVar2 != 0) {\n        *0x46a7a0 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"NotifyWinEvent\");\n    }\n    return 1;\n}\n",
        "token_count": 336
    },
    "00428158": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.00428158(ulong arg1)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    if (arg1 < 0x10c) {\n        if (arg1 == 0x10b) {\n            return 3;\n        }\n        if (0x3e < arg1) {\n            if (arg1 < 0x6c) {\n                if (arg1 == 0x6b) {\n                    return 2;\n                }\n                if (0x47 < arg1) {\n                    if (arg1 == 0x50) {\n                        return 5;\n                    }\n                    if (arg1 == 0x52) {\n                        return 5;\n                    }\n                    if (arg1 == 0x55) {\n                        return 3;\n                    }\n                    if (arg1 != 0x56) {\n                        if (arg1 == 0x58) {\n                            return 10;\n                        }\n                        return 1;\n                    }\n                    return 5;\n                }\n                if (arg1 == 0x47) {\n                    return 5;\n                }\n                if (arg1 == 0x40) {\n                    return 5;\n                }\n                if (arg1 == 0x41) {\n                    return 5;\n                }\n                if (arg1 == 0x42) {\n                    return 6;\n                }\n                if (arg1 == 0x43) {\n                    return 3;\n                }\n                iVar1 = arg1 - 0x44;\n                if (iVar1 == 0) {\n                    return 4;\n                }\n            }\n            else {\n                if (arg1 < 0x91) {\n                    if (arg1 == 0x90) {\n                        return 3;\n                    }\n                    if (arg1 < 0x76) {\n                        if (arg1 == 0x75) {\n                            return 10;\n                        }\n                        if (arg1 == 0x6c) {\n                            return 0xc;\n                        }\n                        if (arg1 == 0x6f) {\n                            return 3;\n                        }\n                        if (arg1 == 0x70) {\n                            return 0xd;\n                        }\n                        iVar1 = arg1 - 0x71;\n                        if (iVar1 == 0) {\n                            return 4;\n                        }\n                        goto code_r0x00428357;\n                    }\n                    if (arg1 == 0x7b) {\n                        return 3;\n                    }\n                    if (arg1 == 0x7c) {\n                        return 3;\n                    }\n                    if (arg1 == 0x7d) {\n                        return 3;\n                    }\n                    iVar1 = arg1 - 0x83;\n                    if (iVar1 == 0) {\n                        return 9;\n                    }\ncode_r0x00428210:\n                    if (iVar1 == 1) {\n                        return 9;\n                    }\n                    return 1;\n                }\n                if (arg1 < 0xb7) {\n                    if (arg1 == 0xb6) {\n                        return 6;\n                    }\n                    if (arg1 == 0x91) {\n                        return 7;\n                    }\n                    if (arg1 == 0x9a) {\n                        return 3;\n                    }\n                    if (arg1 == 0xa1) {\n                        return 3;\n                    }\n                    if (arg1 == 0xa7) {\n                        return 0xc;\n                    }\n                    bVar2 = arg1 == 0xaa;\n                    goto code_r0x004283c4;\n                }\n                if (arg1 == 0xb7) {\n                    return 5;\n                }\n                if (arg1 == 0xbf) {\n                    return 6;\n                }\n                if (arg1 == 0xc1) {\n                    return 6;\n                }\n                iVar1 = arg1 - 0xce;\n                if (iVar1 == 0) {\n                    return 3;\n                }\n            }\n            bVar2 = iVar1 == 2;\ncode_r0x004281b6:\n            if (bVar2) {\n                return 3;\n            }\n            return 1;\n        }\n        if (arg1 == 0x3e) {\n            return 8;\n        }\n        if (arg1 < 0x1a) {\n            if (arg1 == 0x19) {\n                return 9;\n            }\n            if (arg1 < 0x11) {\n                if (arg1 == 0x10) {\n                    return 7;\n                }\n                if (arg1 == 0) {\n                    return 0;\n                }\n                if (arg1 == 2) {\n                    return 2;\n                }\n                if (arg1 == 3) {\n                    return 3;\n                }\n                if (arg1 == 4) {\n                    return 4;\n                }\n                if (arg1 == 5) {\n                    return 5;\n                }\n                if (arg1 == 6) {\n                    return 2;\n                }\n                if (arg1 == 0xb) {\n                    return 6;\n                }\n                if (arg1 == 0xc) {\n                    return 5;\n                }\n                bVar2 = arg1 == 0xf;\n                goto code_r0x004281b6;\n            }\n            if (arg1 == 0x11) {\n                return 3;\n            }\n            if (arg1 == 0x12) {\n                return 2;\n            }\n            if (arg1 == 0x13) {\n                return 5;\n            }\n            if (((arg1 != 0x14) && (arg1 != 0x15)) && ((arg1 != 0x16 && (iVar1 = arg1 - 0x17,  iVar1 != 0))))\n            goto code_r0x00428210;\n        }\n        else {\n            if (arg1 < 0x28) {\n                if (arg1 == 0x27) {\n                    return 0xd;\n                }\n                if (arg1 == 0x1a) {\n                    return 6;\n                }\n                if (arg1 == 0x1b) {\n                    return 9;\n                }\n                if (arg1 == 0x1d) {\n                    return 5;\n                }\n                if (arg1 == 0x1e) {\n                    return 9;\n                }\n                if (arg1 == 0x20) {\n                    return 0xb;\n                }\n                if (arg1 == 0x21) {\n                    return 0xc;\n                }\n                if (arg1 != 0x22) {\n                    if (arg1 == 0x24) {\n                        return 4;\n                    }\n                    if (arg1 == 0x26) {\n                        return 0xe;\n                    }\n                    return 1;\n                }\n                return 3;\n            }\n            if (arg1 == 0x34) {\n                return 3;\n            }\n            if (arg1 == 0x35) {\n                return 3;\n            }\n            if (arg1 == 0x36) {\n                return 5;\n            }\n            if (arg1 == 0x37) {\n                return 3;\n            }\n            if (arg1 != 0x39) {\n                if (arg1 == 0x3a) {\n                    return 5;\n                }\n                iVar1 = arg1 - 0x3b;\n                if (iVar1 != 0) {\ncode_r0x00428357:\n                    if (iVar1 == 1) {\n                        return 6;\n                    }\n                    return 1;\n                }\n            }\n        }\n    }\n    else if (((arg1 != 0x3e3) && (arg1 != 0x3e4)) && (arg1 != 0x3e5)) {\n        bVar2 = arg1 == 999;\ncode_r0x004283c4:\n        if (bVar2) {\n            return 5;\n        }\n        return 1;\n    }\n    return 10;\n}\n",
        "token_count": 1736
    },
    "00428658": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t * fcn.00428658(uint32_t *arg1, ulong arg2, ulong arg3)\n\n{\n    *(arg1 + 4) = 0;\n    *(arg1 + 2) = 0;\n    if (arg2 < 8) {\n        arg2._0_4_ = 8;\n    }\n    if (arg3 < 2) {\n        arg3._0_4_ = 0x40;\n    }\n    *arg1 = arg2;\n    arg1[1] = arg3;\n    return arg1;\n}\n",
        "token_count": 125
    },
    "004286bc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004286bc(uint32_t *arg1)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    \n    if (*(arg1 + 4) == 0) {\n        iVar2 = fcn.00418c44(arg1 + 2, arg1[1], *arg1);\n        uVar1 = arg1[1];\n        puVar3 = iVar2 + 8 + (uVar1 - 1) * *arg1;\n        while (uVar1 = uVar1 - 1,  -1 < uVar1) {\n            *puVar3 = *(arg1 + 4);\n            *(arg1 + 4) = puVar3;\n            puVar3 = puVar3 - *arg1;\n        }\n    }\n    *(arg1 + 4) = **(arg1 + 4);\n    return;\n}\n",
        "token_count": 200
    },
    "00428e04": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00428e04(ulong *arg1)\n\n{\n    if (*(arg1 + 2) != 0) {\n        fcn.00403cfc(*arg1);\n    }\n    return;\n}\n",
        "token_count": 48
    },
    "00429290": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00429290(ulong *arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    \n    *arg1 = 0x44f900;\n    if (arg1[1] != 0) {\n        iVar1 = 0;\n        if (0 < arg1[2]) {\n            iVar2 = 0;\n            do {\n                if (*(iVar2 + 0x10 + arg1[1]) != 0) {\n                    fcn.00403cfc(*(iVar2 + arg1[1]));\n                }\n                iVar1 = iVar1 + 1;\n                iVar2 = iVar2 + 0x18;\n            } while (iVar1 < arg1[2]);\n        }\n        fcn.00403cfc(arg1[1]);\n    }\n    return;\n}\n",
        "token_count": 178
    },
    "00429370": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00429370(int64_t arg1, int64_t arg2, ulong *arg3)\n\n{\n    ulong *puVar1;\n    ulong uVar2;\n    code *pcVar3;\n    \n    if (arg2 < 0) {\n        fcn.00412ca8();\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    if (*(arg1 + 0x10) <= arg2) {\n        fcn.00428e7c(arg1, arg2 + 1, 0xffffffffffffffff);\n    }\n    puVar1 = *(arg1 + 8) + arg2 * 0x18;\n    if (puVar1 != arg3) {\n        uVar2 = *arg3;\n        if (*(arg3 + 2) != 0) {\n            *arg3 = 0;\n        }\n        *puVar1 = uVar2;\n        puVar1[1] = arg3[1];\n        *(puVar1 + 2) = *(arg3 + 2);\n    }\n    return;\n}\n",
        "token_count": 239
    },
    "00429484": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00429484(ulong arg1, ulong *arg2, uint8_t *arg3, uint32_t *arg4)\n\n{\n    uint8_t uVar1;\n    int16_t iVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int64_t *piVar5;\n    bool bVar6;\n    uint32_t uVar7;\n    ulong uVar8;\n    uint32_t *puVar9;\n    uint32_t *puVar10;\n    uint16_t uVar11;\n    uint32_t **ppuVar12;\n    uint64_t uVar13;\n    uint16_t uVar14;\n    int32_t iVar15;\n    int16_t in_stack_00000028;\n    int32_t in_stack_00000030;\n    uint in_stack_00000034;\n    int32_t *in_stack_00000038;\n    int64_t in_stack_00000040;\n    int64_t in_stack_00000048;\n    ulong uVar16;\n    uint32_t *puStack96;\n    int64_t iStack88;\n    int32_t iStack80;\n    \n    uVar16 = 0xfffffffffffffffe;\n    *arg2 = arg1;\n    ppuVar12 = arg2 + 1;\n    if ((in_stack_00000028 == 6) || (in_stack_00000028 == 0xc)) {\n        *ppuVar12 = arg4;\n        ppuVar12 = arg2 + 2;\n    }\n    piVar5 = CONCAT44(in_stack_00000034, in_stack_00000030);\n    iVar3 = *piVar5;\n    bVar6 = false;\n    iVar15 = *(piVar5 + 2);\n    in_stack_00000030 = *(piVar5 + 0x14);\n    uVar1 = *arg3;\n    do {\n        if (uVar1 == 0) {\ncode_r0x0042986d:\n            if (iVar15 < 1) {\n                if (*arg3 == 0) {\n                    uVar13 = 0;\n                }\n                else {\n                    *in_stack_00000038 = *(piVar5 + 2);\n                    uVar13 = 0x8002000f;\n                }\n            }\n            else {\n                uVar13 = 0x8002000e;\ncode_r0x00429878:\n                *in_stack_00000038 = iVar15;\n            }\n            return uVar13;\n        }\n        iVar15 = iVar15 + -1;\n        uVar1 = *arg3;\n        uVar11 = uVar1;\n        if ((uVar1 != 0xff) && ((uVar1 & 0x40) != 0)) {\n            uVar11 = uVar1 & 0xffbf | 0x4000;\n        }\n        if (iVar15 < in_stack_00000030) {\n            if (uVar11 != 0xff) {\n                if ((!bVar6) && (uVar11 == 0xc)) {\n                    *0x46b010 = 10;\n                    *0x46b018 = 0x80020004;\n                    puVar10 = 0x46b010;\n                    goto code_r0x0042962f;\n                }\n                goto code_r0x0042986d;\n            }\n            iVar15 = *(piVar5 + 0x14);\n            in_stack_00000030 = 0;\n            bVar6 = true;\n        }\n        else {\n            if (uVar11 == 0xff) goto code_r0x0042986d;\n            puVar9 = iVar3 + iVar15 * 0x18;\n            puVar10 = puVar9;\n            if ((uVar11 != 0xc) && (uVar11 != *puVar9)) {\n                puVar10 = in_stack_00000040 + iVar15 * 0x18;\n                uVar14 = uVar11;\n                if (uVar11 == 0xe) {\n                    uVar14 = 8;\n                }\n                if (*puVar9 != uVar14) {\n                    uVar7 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(puVar10, puVar9, 0, uVar14, uVar16);\n                    uVar13 = uVar7;\n                    if (uVar7 < 0) goto code_r0x00429878;\n                }\n                if (uVar11 == 0xe) {\n                    if (*puVar9 == uVar14) {\n                        uVar8 = fcn.00427098(*(puVar9 + 2));\n                        *(puVar10 + 2) = uVar8;\n                        *puVar10 = 8;\n                    }\n                    else {\n                        uVar8 = fcn.00427098(*(puVar10 + 2));\n                        *(puVar10 + 2) = uVar8;\n                        (*_sym.imp.OLEAUT32.dll_SysStringLen)();\n                    }\n                    uVar11 = 8;\n                }\n            }\ncode_r0x0042962f:\n            if (uVar11 >> 0xe == 0) {\n                if (uVar11 < 0xc) {\n                    if (uVar11 == 0xb) {\n                        *ppuVar12 = *(puVar10 + 2) != 0;\n                        ppuVar12 = ppuVar12 + 1;\n                    }\n                    else if (uVar11 == 2) {\n                        *ppuVar12 = *(puVar10 + 2);\n                        ppuVar12 = ppuVar12 + 1;\n                    }\n                    else if (uVar11 == 3) {\n                        *ppuVar12 = puVar10[2];\n                        ppuVar12 = ppuVar12 + 1;\n                    }\n                    else if (uVar11 == 4) {\n                        *ppuVar12 = puVar10[2];\n                        ppuVar12 = ppuVar12 + 4;\n                    }\n                    else if (uVar11 == 5) {\n                        *ppuVar12 = *(puVar10 + 2);\n                        ppuVar12 = ppuVar12 + 1;\n                    }\n                    else if (uVar11 == 6) {\n                        *ppuVar12 = *(puVar10 + 2);\n                        ppuVar12 = ppuVar12 + 1;\n                    }\n                    else if (uVar11 == 7) {\n                        *ppuVar12 = *(puVar10 + 2);\n                        ppuVar12 = ppuVar12 + 1;\n                    }\n                    else if (uVar11 == 8) {\n                        *ppuVar12 = *(puVar10 + 2);\n                        ppuVar12 = ppuVar12 + 1;\n                    }\n                    else {\n                        if (uVar11 == 9) goto code_r0x00429828;\n                        if (uVar11 == 10) {\n                            *ppuVar12 = puVar10[2];\n                            ppuVar12 = ppuVar12 + 1;\n                        }\n                    }\n                }\n                else if (uVar11 == 0xc) {\n                    *ppuVar12 = puVar10;\n                    ppuVar12 = ppuVar12 + 1;\n                }\n                else if (uVar11 == 0xd) {\ncode_r0x00429828:\n                    *ppuVar12 = *(puVar10 + 2);\n                    ppuVar12 = ppuVar12 + 1;\n                }\n                else if (uVar11 == 0x10) {\n                    *ppuVar12 = *(puVar10 + 2);\n                    ppuVar12 = ppuVar12 + 1;\n                }\n                else if (uVar11 == 0x11) {\n                    *ppuVar12 = *(puVar10 + 2);\n                    ppuVar12 = ppuVar12 + 1;\n                }\n                else if (uVar11 == 0x12) {\n                    *ppuVar12 = *(puVar10 + 2);\n                    ppuVar12 = ppuVar12 + 1;\n                }\n                else if (uVar11 == 0x13) {\n                    *ppuVar12 = puVar10[2];\n                    ppuVar12 = ppuVar12 + 1;\n                }\n                else if (uVar11 == 0x14) {\n                    *ppuVar12 = *(puVar10 + 2);\n                    ppuVar12 = ppuVar12 + 1;\n                }\n                else if (uVar11 == 0x15) {\n                    *ppuVar12 = *(puVar10 + 2);\n                    ppuVar12 = ppuVar12 + 1;\n                }\n            }\n            else {\n                if ((uVar11 == 0x400b) && (in_stack_00000048 != 0)) {\n                    iVar2 = **(puVar10 + 2);\n                    puVar9 = fcn.00403cc0(4);\n                    if (puVar9 == NULL) {\n                        puVar9 = NULL;\n                    }\n                    else {\n                        *puVar9 = iVar2 != 0;\n                    }\n                    iStack88 = *(puVar10 + 2);\n                    iStack80 = 1;\n                    puStack96 = puVar9;\n                    if ((puVar9 == NULL) || (iStack88 == 0)) {\n                        fcn.00412ca8();\n                        pcVar4 = swi(3);\n                        uVar13 = (*pcVar4)();\n                        return uVar13;\n                    }\n                    fcn.00429370(in_stack_00000048, *(in_stack_00000048 + 0x10), &puStack96);\n                    if (iStack80 != 0) {\n                        fcn.00403cfc(puStack96);\n                    }\n                }\n                else {\n                    puVar9 = *(puVar10 + 2);\n                }\n                *ppuVar12 = puVar9;\n                ppuVar12 = ppuVar12 + 1;\n            }\n            ppuVar12 = ppuVar12 + 7U & 0xfffffffffffffff8;\n        }\n        arg3 = arg3 + 1;\n        uVar1 = *arg3;\n    } while( true );\n}\n",
        "token_count": 2241
    },
    "004298dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004298dc(int64_t arg1, uchar *arg2, ulong noname_2, ulong *arg4, int64_t noname_4, ulong noname_5, \n                 ulong noname_6, ulong noname_7, ulong noname_8, ulong noname_9, ulong noname_10, ulong noname_11, \n                 ulong noname_12, ulong noname_13, ulong noname_14, ulong noname_15, ulong noname_16, ulong noname_17, \n                 ulong noname_18, ulong noname_19, ulong noname_20, ulong noname_21, ulong noname_22, ulong noname_23, \n                 ulong noname_24, ulong noname_25, ulong noname_26, ulong noname_27, ulong noname_28, ulong noname_29, \n                 ulong noname_30, ulong noname_31, ulong arg_110h, ulong arg_118h)\n\n{\n    code *pcVar1;\n    uchar *puVar2;\n    int64_t arg1_00;\n    char cVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int64_t iVar6;\n    int64_t *piVar7;\n    int16_t iVar8;\n    uint64_t arg1_01;\n    int64_t *piVar9;\n    uchar *puVar10;\n    uchar *puVar11;\n    uint16_t uVar12;\n    int64_t *piVar13;\n    int64_t iVar14;\n    ulong arg1_02;\n    uint uVar15;\n    ulong var_8h;\n    ulong var_10h;\n    ulong var_18h;\n    ulong var_20h;\n    ulong pvargDest;\n    ulong var_40h;\n    ulong var_48h;\n    ulong var_bp_50h;\n    ulong var_58h;\n    ulong var_60h;\n    ulong var_68h;\n    ulong var_70h;\n    ulong var_78h;\n    ulong var_80h;\n    ulong var_90h;\n    ulong var_a8h;\n    ulong uStack320;\n    uchar auStack312 [80];\n    uchar auStack232 [8];\n    uchar *puStack224;\n    ulong uStack216;\n    int32_t iStack208;\n    uchar *puStack200;\n    ulong uStack192;\n    ulong uStack184;\n    ulong uStack176;\n    int64_t iStack168;\n    uint64_t uStack160;\n    ulong *puStack152;\n    ulong uStack144;\n    ulong uStack136;\n    ulong uStack128;\n    ulong uStack120;\n    ulong uStack112;\n    ulong uStack104;\n    uint64_t uStack88;\n    \n    puVar10 = &stack0xfffffffffffffec8;\n    uStack104 = 0xfffffffffffffffe;\n    uStack88 = *0x465c38 ^ &stack0xffffffffffffff18;\n    uStack320 = 0x429934;\n    puStack200 = arg2;\n    iStack168 = arg1;\n    puStack152 = arg4;\n    fcn.00413c8c(&stack0xffffffffffffff28, *(arg1 + 0x38));\n    piVar13 = NULL;\n    auStack232[0] = 0;\n    puStack224 = &stack0xffffffffffffff18;\n    if (*(arg2 + 0x10) != 0) {\n        puStack224 = *(arg2 + 0x10);\n    }\n    uStack320 = 0x429957;\n    uVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    arg1_02 = *(arg2 + 0x20);\n    uVar12 = *(arg2 + 0x18);\n    if ((noname_2 & 0xc) != 0) {\n        uStack320 = 0x429979;\n        cVar3 = fcn.00403bf0(uVar4 + 3);\n        if (cVar3 == '\\0') {\n            puVar11 = &stack0xfffffffffffffec8;\n            if (iStack208 != 0) {\n                uStack320 = 0x42998e;\n                fcn.00412e8c(0, uStack216);\n                puVar11 = &stack0xfffffffffffffec8;\n            }\n            goto code_r0x00429dfc;\n        }\n        uStack320 = 0x4299c3;\n        iVar6 = fcn.00447500();\n        puVar2 = puStack224;\n        iVar6 = -iVar6;\n        puVar10 = &stack0xfffffffffffffec8 + iVar6;\n        puVar11 = &stack0xffffffffffffff18 + iVar6;\n        *(&stack0xfffffffffffffec0 + iVar6) = 0x4299dd;\n        iVar5 = fcn.0042e220(puVar11, uVar4 + 3, puVar2, uVar4);\n        puVar2 = puStack200;\n        if (iVar5 != 0) {\n            if (iVar5 == 0xc) {\n                *(&stack0xfffffffffffffec0 + iVar6) = 0x429a06;\n                fcn.00412c60();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            if ((iVar5 == 0x16) || (iVar5 == 0x22)) {\n                *(&stack0xfffffffffffffec0 + iVar6) = 0x429a00;\n                fcn.00412ca8();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            if (iVar5 != 0x50) {\n                *(&stack0xfffffffffffffec0 + iVar6) = 0x4299fa;\n                fcn.00412ca8();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        puStack224 = puVar11;\n        iVar8 = *(puStack200 + 0x18);\n        if (iVar8 == 8) {\n            iVar8 = 0xe;\n        }\n        puVar11[uVar4] = 0xff;\n        puVar11[uVar4 + 1] = iVar8;\n        puVar11[uVar4 + 2] = 0;\n        arg1_02 = *(puVar2 + 0x28);\n        uVar12 = 0;\n    }\n    uVar4 = *(noname_4 + 0x10);\n    *(puVar10 + -8) = 0x429a64;\n    cVar3 = fcn.00403bf0(uVar4 * 0x18);\n    puVar11 = puVar10;\n    if (cVar3 == '\\0') {\n        if (iStack208 != 0) {\n            *(puVar10 + -8) = 0x429a79;\n            fcn.00412e8c(0, uStack216);\n        }\n        goto code_r0x00429dfc;\n    }\n    if (0x5555555 < *(noname_4 + 0x10)) {\n        if (iStack208 != 0) {\n            *(puVar10 + -8) = 0x429a9c;\n            fcn.00412e8c(0, uStack216);\n        }\n        goto code_r0x00429dfc;\n    }\n    iVar14 = *(noname_4 + 0x10) * 0x18;\n    *(puVar10 + -8) = 0x429ac6;\n    iVar6 = fcn.00447500();\n    iVar6 = -iVar6;\n    puStack200 = puVar10 + iVar6 + 0x50;\n    *(puVar10 + iVar6 + -8) = 0x429adc;\n    fcn.0042f6c0(puVar10 + iVar6 + 0x50, 0, iVar14);\n    puVar11 = puStack224;\n    *(puVar10 + iVar6 + -8) = 0x429ae9;\n    iVar5 = fcn.00428d80(puVar11);\n    uStack160 = iVar5 + 0x20;\n    *(puVar10 + iVar6 + -8) = 0x429afa;\n    cVar3 = fcn.00403bf0(iVar5 + 0x20);\n    if (cVar3 == '\\0') {\n        puVar11 = puVar10 + iVar6;\n        if (iStack208 != 0) {\n            *(puVar10 + iVar6 + -8) = 0x429b0f;\n            fcn.00412e8c(0, uStack216);\n            puVar11 = puVar10 + iVar6;\n        }\n        goto code_r0x00429dfc;\n    }\n    *(puVar10 + iVar6 + -8) = 0x429b32;\n    iVar14 = fcn.00447500();\n    iVar14 = -iVar14;\n    puVar11 = puVar10 + iVar14 + iVar6 + 0x50;\n    uStack144 = 0x44f900;\n    uStack136 = 0;\n    uStack112 = 0;\n    uStack120 = 0;\n    uStack128 = 0;\n    *(puVar10 + iVar14 + iVar6 + 0x40) = &stack0xffffffffffffff70;\n    *(puVar10 + iVar14 + iVar6 + 0x38) = puStack200;\n    *(puVar10 + iVar14 + iVar6 + 0x30) = noname_5;\n    *(puVar10 + iVar14 + iVar6 + 0x28) = noname_4;\n    *(puVar10 + iVar14 + iVar6 + 0x20) = uVar12;\n    arg1_00 = iStack168;\n    puVar2 = puStack224;\n    *(puVar10 + iVar14 + iVar6 + -8) = 0x429b92;\n    uVar4 = fcn.00429484(arg1_00, puVar11, puVar2, &stack0xffffffffffffff40);\n    puStack224 = puStack224 & 0xffffffff00000000 | uVar4;\n    piVar9 = NULL;\n    piVar7 = piVar13;\n    if (uVar4 == 0) {\n        piVar7 = piVar9;\n        if (uVar12 == 4) {\n            *(puVar10 + iVar14 + iVar6 + -8) = 0x429c16;\n            uVar15 = fcn.0042bb60(arg1_02, puVar11);\n            uStack192 = CONCAT44(uStack192._4_4_, uVar15);\n        }\n        else if (uVar12 == 5) {\n            *(puVar10 + iVar14 + iVar6 + -8) = 0x429c01;\n            uStack192 = fcn.0042bb60(arg1_02, puVar11);\n        }\n        else if (uVar12 == 7) {\n            *(puVar10 + iVar14 + iVar6 + -8) = 0x429bec;\n            uStack192 = fcn.0042bb60(arg1_02, puVar11);\n        }\n        else if (uVar12 - 0x14 < 2) {\n            *(puVar10 + iVar14 + iVar6 + -8) = 0x429bc5;\n            uStack192 = fcn.0042bb60(arg1_02, puVar11);\n            piVar7 = piVar13;\n        }\n        else {\n            *(puVar10 + iVar14 + iVar6 + -8) = 0x429bd9;\n            piVar7 = fcn.0042bb60(arg1_02, puVar11);\n        }\n    }\n    puVar11 = puStack200;\n    if (*(noname_4 + 0x10) != 0) {\n        do {\n            *(puVar10 + iVar14 + iVar6 + -8) = 0x429c40;\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(puVar11 + piVar13 * 0x18);\n            uVar4 = piVar13 + 1;\n            piVar13 = uVar4;\n            arg4 = puStack152;\n        } while (uVar4 < *(noname_4 + 0x10));\n    }\n    if (puStack224 != 0) {\n        *(puVar10 + iVar14 + iVar6 + -8) = 0x429c60;\n        fcn.00429290(&stack0xffffffffffffff70);\n        puVar11 = puVar10 + iVar14 + iVar6;\n        if (iStack208 != 0) {\n            *(puVar10 + iVar14 + iVar6 + -8) = 0x429c71;\n            fcn.00412e8c(0, uStack216);\n            puVar11 = puVar10 + iVar14 + iVar6;\n        }\n        goto code_r0x00429dfc;\n    }\n    *(puVar10 + iVar14 + iVar6 + -8) = 0x429c82;\n    fcn.00429220(&stack0xffffffffffffff70);\n    if (arg4 == NULL) {\n        if (uVar12 == 8) {\n            *(puVar10 + iVar14 + iVar6 + -8) = 0x429ddf;\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(piVar7);\n        }\n        else if (uVar12 == 9) {\ncode_r0x00429dc6:\n            if (piVar7 != NULL) {\n                pcVar1 = *(*piVar7 + 0x10);\n                *(puVar10 + iVar14 + iVar6 + -8) = 0x429dd4;\n                (*pcVar1)(piVar7);\n            }\n        }\n        else if (uVar12 == 0xc) {\n            *(puVar10 + iVar14 + iVar6 + -8) = 0x429dc4;\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)(&stack0xffffffffffffff40);\n        }\n        else if (uVar12 == 0xd) goto code_r0x00429dc6;\n    }\n    else {\n        *arg4 = uVar12;\n        if (uVar12 < 0xb) {\n            if (uVar12 == 10) {\n                *(arg4 + 1) = piVar7;\n            }\n            else if (uVar12 == 2) {\ncode_r0x00429d67:\n                *(arg4 + 1) = piVar7;\n            }\n            else if (uVar12 == 3) {\ncode_r0x00429d62:\n                *(arg4 + 1) = piVar7;\n            }\n            else if (uVar12 == 4) {\n                *(arg4 + 1) = uStack192;\n            }\n            else if (uVar12 == 5) {\n                arg4[1] = uStack192;\n            }\n            else if (uVar12 == 6) {\n                arg4[1] = uStack192;\n            }\n            else if (uVar12 == 7) {\n                arg4[1] = uStack192;\n            }\n            else if (uVar12 == 8) {\n                arg4[1] = piVar7;\n            }\n            else if (uVar12 == 9) goto code_r0x00429d72;\n        }\n        else if (uVar12 == 0xb) {\n            *(arg4 + 1) = -(piVar7 != 0);\n        }\n        else if (uVar12 == 0xc) {\n            *arg4 = uStack192;\n            arg4[1] = uStack184;\n            arg4[2] = uStack176;\n        }\n        else if (uVar12 == 0xd) {\ncode_r0x00429d72:\n            arg4[1] = piVar7;\n        }\n        else if (0xf < uVar12) {\n            if (uVar12 < 0x12) {\n                *(arg4 + 1) = piVar7;\n            }\n            else {\n                if (uVar12 == 0x12) goto code_r0x00429d67;\n                if (uVar12 == 0x13) goto code_r0x00429d62;\n                if (uVar12 - 0x14 < 2) {\n                    arg4[1] = uStack192;\n                }\n            }\n        }\n    }\n    *(puVar10 + iVar14 + iVar6 + -8) = 0x429de9;\n    fcn.00429290(&stack0xffffffffffffff70);\n    puVar11 = puVar10 + iVar14 + iVar6;\n    if (iStack208 != 0) {\n        *(puVar10 + iVar14 + iVar6 + -8) = 0x429dfa;\n        fcn.00412e8c(0, uStack216);\n        puVar11 = puVar10 + iVar14 + iVar6;\n    }\ncode_r0x00429dfc:\n    arg1_01 = uStack88 ^ &stack0xffffffffffffff18;\n    *(puVar11 + -8) = 0x429e0b;\n    fcn.0042dcb0(arg1_01);\n    return;\n}\n",
        "token_count": 3851
    },
    "0042a028": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042a028(ushort *arg1, int64_t arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    ulong *puVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    uchar *arg2_00;\n    uchar auStack392 [32];\n    int64_t iStack360;\n    int64_t iStack352;\n    int64_t iStack344;\n    int64_t iStack336;\n    int64_t aiStack328 [2];\n    uchar auStack312 [256];\n    uint64_t uStack56;\n    \n    uStack56 = *0x465c38 ^ auStack392;\n    fcn.0042f6c0(arg1, 0, 0x40);\n    arg2_00 = auStack312;\n    iVar2 = fcn.004156c4(arg2, 0x44f8c8);\n    if (iVar2 == 0) {\n        iVar2 = fcn.004156c4(arg2, 0x44cc98);\n        if (iVar2 == 0) {\n            fcn.00413f1c(0xf108, auStack312, 0x100);\n            *arg1 = 0xf108;\n        }\n        else {\n            fcn.00413f1c(0xf10a, auStack312, 0x100);\n            *arg1 = 0xf10a;\n        }\n    }\n    else {\n        arg2_00 = *(arg2 + 0x18);\n        *arg1 = *(arg2 + 0x10);\n        *(arg1 + 0x10) = *(arg2 + 0x20);\n        *(arg1 + 0x1c) = *(arg2 + 0x38);\n        if (*(*(arg2 + 0x28) + -0x10) != 0) {\n            puVar3 = fcn.00412ac8(aiStack328, *(arg2 + 0x28));\n            uVar4 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(*puVar3);\n            *(arg1 + 0xc) = uVar4;\n            LOCK();\n            piVar1 = aiStack328[0] + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 + -1 < 1) {\n                (**(**(aiStack328[0] + -0x18) + 8))();\n            }\n        }\n        if (*(*(arg2 + 0x30) + -0x10) != 0) {\n            puVar3 = fcn.00412ac8(&iStack344, *(arg2 + 0x30));\n            uVar4 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(*puVar3);\n            *(arg1 + 4) = uVar4;\n            LOCK();\n            piVar1 = iStack344 + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 + -1 < 1) {\n                (**(**(iStack344 + -0x18) + 8))();\n            }\n        }\n    }\n    puVar3 = fcn.00412ac8(&iStack360, arg2_00);\n    uVar4 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(*puVar3);\n    *(arg1 + 8) = uVar4;\n    LOCK();\n    piVar1 = iStack360 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iStack360 + -0x18) + 8))();\n    }\n    if (*(arg1 + 4) == 0) {\n        iVar5 = fcn.00413c10();\n        puVar3 = fcn.00412ac8(&iStack352, *(iVar5 + 0x20));\n        uVar4 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(*puVar3);\n        *(arg1 + 4) = uVar4;\n        LOCK();\n        piVar1 = iStack352 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 + -1 < 1) {\n            (**(**(iStack352 + -0x18) + 8))();\n        }\n    }\n    if ((*(arg1 + 0xc) == 0) && (*(arg1 + 0x10) != 0)) {\n        iVar5 = fcn.00413c10();\n        puVar3 = fcn.00412ac8(&iStack336, *(*(iVar5 + 8) + 200));\n        uVar4 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)(*puVar3);\n        *(arg1 + 0xc) = uVar4;\n        LOCK();\n        piVar1 = iStack336 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 + -1 < 1) {\n            (**(**(iStack336 + -0x18) + 8))();\n        }\n    }\n    fcn.0042dcb0(uStack56 ^ auStack392);\n    return;\n}\n",
        "token_count": 1215
    },
    "0042a850": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042a850(int64_t **arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint16_t uVar3;\n    uint32_t *puVar4;\n    ulong *puVar5;\n    code *pcVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    ulong arg1_00;\n    int64_t iVar9;\n    ulong *puVar10;\n    uint32_t **ppuVar11;\n    int64_t iVar12;\n    uint16_t in_R8W;\n    uint16_t in_R9W;\n    uint8_t *puVar13;\n    uint auStackX8 [2];\n    uint uStackX16;\n    ulong *in_stack_00000028;\n    uint8_t *in_stack_00000030;\n    int64_t in_stack_00000038;\n    ulong uStack280;\n    uchar uStack272;\n    uchar uStack271;\n    ushort uStack270;\n    uint uStack268;\n    ulong uStack264;\n    int64_t iStack256;\n    uint *puStack248;\n    uint32_t uStack240;\n    uint uStack236;\n    uint uStack232;\n    int64_t iStack224;\n    int64_t iStack216;\n    uint32_t *puStack208;\n    uint32_t *puStack200;\n    int32_t iStack192;\n    uchar auStack184 [8];\n    ulong uStack176;\n    ulong uStack168;\n    ulong uStack160;\n    uint uStack152;\n    code *pcStack136;\n    uint uStack128;\n    ulong uStack120;\n    ulong uStack112;\n    ulong uStack104;\n    ulong uStack96;\n    ulong uStack88;\n    ulong uStack80;\n    \n    uStack80 = 0xfffffffffffffffe;\n    if (*arg1 != NULL) {\n        iStack256 = 0;\n        puStack248 = NULL;\n        uStack240 = 0;\n        uStack236 = 0;\n        uStackX16 = arg2;\n        fcn.0042f6c0(&iStack256, 0, 0x18);\n        if (in_stack_00000030 != NULL) {\n            uStack240 = (*_sym.imp.KERNEL32.dll_lstrlenA)(in_stack_00000030);\n        }\n        auStackX8[0] = 0xfffffffd;\n        if ((in_R8W & 0xc) != 0) {\n            uStack236 = 1;\n            puStack248 = auStackX8;\n        }\n        uStack120 = 0x44f900;\n        uStack112 = 0;\n        uStack88 = 0;\n        uStack96 = 0;\n        uStack104 = 0;\n        if (uStack240 != 0) {\n            arg1_00 = SUB168(ZEXT816(0x18) * ZEXT416(uStack240), 0);\n            if (SUB168(ZEXT816(0x18) * ZEXT416(uStack240) >> 0x40, 0) != 0) {\n                arg1_00 = 0xffffffffffffffff;\n            }\n            iVar9 = fcn.00403cc0(arg1_00);\n            iStack256 = iVar9;\n            fcn.0042f6c0(iVar9, 0, uStack240 * 0x18);\n            puVar10 = iVar9 + (uStack240 - 1) * 0x18;\n            if (*in_stack_00000030 != 0) {\n                ppuVar11 = in_stack_00000038 + -8;\n                puVar13 = in_stack_00000030;\n                do {\n                    uVar2 = *puVar13;\n                    *puVar10 = uVar2;\n                    if ((uVar2 & 0x40) != 0) {\n                        *puVar10 = uVar2 & 0xffbf | 0x4000;\n                    }\n                    uVar3 = *puVar10;\n                    if (uVar3 < 0x4003) {\n                        if (uVar3 == 0x4002) {\n                            ppuVar11 = ppuVar11 + 1;\n                            puVar10[1] = *ppuVar11;\n                        }\n                        else if (uVar3 < 0xc) {\n                            if (uVar3 == 0xb) {\n                                ppuVar11 = ppuVar11 + 1;\n                                *(puVar10 + 1) = -(*ppuVar11 != 0);\n                            }\n                            else if (uVar3 == 2) {\n                                ppuVar11 = ppuVar11 + 1;\n                                *(puVar10 + 1) = *ppuVar11;\n                            }\n                            else if (uVar3 == 3) {\n                                ppuVar11 = ppuVar11 + 1;\n                                *(puVar10 + 1) = *ppuVar11;\n                            }\n                            else if (uVar3 == 4) {\n                                ppuVar11 = ppuVar11 + 1;\n                                *(puVar10 + 1) = *ppuVar11;\n                            }\n                            else if (uVar3 == 5) {\n                                ppuVar11 = ppuVar11 + 1;\n                                puVar10[1] = *ppuVar11;\n                            }\n                            else if (uVar3 == 6) {\n                                ppuVar11 = ppuVar11 + 1;\n                                puVar10[1] = **ppuVar11;\n                            }\n                            else if (uVar3 == 7) {\n                                ppuVar11 = ppuVar11 + 1;\n                                puVar10[1] = *ppuVar11;\n                            }\n                            else if (uVar3 == 8) {\n                                ppuVar11 = ppuVar11 + 1;\n                                puVar4 = *ppuVar11;\n                                iVar9 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n                                puVar10[1] = iVar9;\n                                if ((puVar4 != NULL) && (iVar9 == 0)) {\n                                    fcn.00412c60();\n                                    goto code_r0x0042adfa;\n                                }\n                            }\n                            else if (uVar3 == 9) {\n                                ppuVar11 = ppuVar11 + 1;\n                                puVar10[1] = *ppuVar11;\n                            }\n                            else if (uVar3 == 10) {\n                                ppuVar11 = ppuVar11 + 1;\n                                *(puVar10 + 1) = *ppuVar11;\n                            }\n                        }\n                        else if (uVar3 == 0xc) {\n                            ppuVar11 = ppuVar11 + 1;\n                            puVar5 = *ppuVar11;\n                            *puVar10 = *puVar5;\n                            puVar10[1] = puVar5[1];\n                            puVar10[2] = puVar5[2];\n                        }\n                        else if (uVar3 == 0xd) {\n                            ppuVar11 = ppuVar11 + 1;\n                            puVar10[1] = *ppuVar11;\n                        }\n                        else if (uVar3 == 0xe) {\n                            ppuVar11 = ppuVar11 + 1;\n                            puVar4 = *ppuVar11;\n                            fcn.00412ac8(&iStack216, puVar4);\n                            iVar9 = (*_sym.imp.OLEAUT32.dll_SysReAllocString)();\n                            puVar10[1] = iVar9;\n                            if ((puVar4 != NULL) && (iVar9 == 0)) {\ncode_r0x0042adfa:\n                                fcn.00412c60();\n                                break;\n                            }\n                            *puVar10 = 8;\n                            LOCK();\n                            piVar1 = iStack216 + -8;\n                            iVar8 = *piVar1;\n                            *piVar1 = *piVar1 + -1;\n                            if (iVar8 + -1 < 1) {\n                                (**(**(iStack216 + -0x18) + 8))();\n                            }\n                        }\n                        else if (uVar3 == 0x10) {\n                            ppuVar11 = ppuVar11 + 1;\n                            *(puVar10 + 1) = *ppuVar11;\n                        }\n                        else if (uVar3 == 0x11) {\n                            ppuVar11 = ppuVar11 + 1;\n                            *(puVar10 + 1) = *ppuVar11;\n                        }\n                        else if (uVar3 == 0x12) {\n                            ppuVar11 = ppuVar11 + 1;\n                            *(puVar10 + 1) = *ppuVar11;\n                        }\n                        else if (uVar3 == 0x13) {\n                            ppuVar11 = ppuVar11 + 1;\n                            *(puVar10 + 1) = *ppuVar11;\n                        }\n                        else if (uVar3 == 0x14) {\n                            ppuVar11 = ppuVar11 + 1;\n                            puVar10[1] = *ppuVar11;\n                        }\n                        else if (uVar3 == 0x15) {\n                            ppuVar11 = ppuVar11 + 1;\n                            puVar10[1] = *ppuVar11;\n                        }\n                    }\n                    else if (uVar3 < 0x400c) {\n                        if (uVar3 == 0x400b) {\n                            ppuVar11 = ppuVar11 + 1;\n                            puStack208 = *ppuVar11;\n                            *puStack208 = -(*puStack208 != 0) & 0xffff;\n                            puVar10[1] = puStack208;\n                            iStack192 = 0;\n                            puStack200 = puStack208;\n                            fcn.00429370(&uStack120, uStack104, &puStack208);\n                            if (iStack192 != 0) {\n                                fcn.00403cfc(puStack208);\n                            }\n                        }\n                        else if (uVar3 == 0x4003) {\n                            ppuVar11 = ppuVar11 + 1;\n                            puVar10[1] = *ppuVar11;\n                        }\n                        else if (uVar3 == 0x4004) {\n                            ppuVar11 = ppuVar11 + 1;\n                            puVar10[1] = *ppuVar11;\n                        }\n                        else if (uVar3 == 0x4005) {\n                            ppuVar11 = ppuVar11 + 1;\n                            puVar10[1] = *ppuVar11;\n                        }\n                        else if (uVar3 == 0x4006) {\n                            ppuVar11 = ppuVar11 + 1;\n                            puVar10[1] = *ppuVar11;\n                        }\n                        else if (uVar3 == 0x4007) {\n                            ppuVar11 = ppuVar11 + 1;\n                            puVar10[1] = *ppuVar11;\n                        }\n                        else if (uVar3 == 0x4008) {\n                            ppuVar11 = ppuVar11 + 1;\n                            puVar10[1] = *ppuVar11;\n                        }\n                        else if (uVar3 == 0x4009) {\n                            ppuVar11 = ppuVar11 + 1;\n                            puVar10[1] = *ppuVar11;\n                        }\n                        else if (uVar3 == 0x400a) {\n                            ppuVar11 = ppuVar11 + 1;\n                            puVar10[1] = *ppuVar11;\n                        }\n                    }\n                    else if (uVar3 == 0x400c) {\n                        ppuVar11 = ppuVar11 + 1;\n                        puVar10[1] = *ppuVar11;\n                    }\n                    else if (uVar3 == 0x400d) {\n                        ppuVar11 = ppuVar11 + 1;\n                        puVar10[1] = *ppuVar11;\n                    }\n                    else if (uVar3 == 0x4010) {\n                        ppuVar11 = ppuVar11 + 1;\n                        puVar10[1] = *ppuVar11;\n                    }\n                    else if (uVar3 == 0x4011) {\n                        ppuVar11 = ppuVar11 + 1;\n                        puVar10[1] = *ppuVar11;\n                    }\n                    else if (uVar3 == 0x4012) {\n                        ppuVar11 = ppuVar11 + 1;\n                        puVar10[1] = *ppuVar11;\n                    }\n                    else if (uVar3 == 0x4013) {\n                        ppuVar11 = ppuVar11 + 1;\n                        puVar10[1] = *ppuVar11;\n                    }\n                    else if (uVar3 == 0x4014) {\n                        ppuVar11 = ppuVar11 + 1;\n                        puVar10[1] = *ppuVar11;\n                    }\n                    else if (uVar3 == 0x4015) {\n                        ppuVar11 = ppuVar11 + 1;\n                        puVar10[1] = *ppuVar11;\n                    }\n                    puVar10 = puVar10 + -3;\n                    puVar13 = puVar13 + 1;\n                } while (*puVar13 != 0);\n            }\n        }\n        iVar9 = 0;\n        fcn.00427540(&uStack280);\n        fcn.0042f6c0(auStack184, 0, 0x40);\n        uStack232 = 0xffffffff;\n        uVar7 = (**(**arg1 + 0x30))();\n        fcn.0042a7e4(&uStack120);\n        if (uStack240 != 0) {\n            iVar12 = iStack256 + -0x18 + uStack240 * 0x18;\n            uVar2 = *in_stack_00000030;\n            while (uVar2 != 0) {\n                if ((*in_stack_00000030 == 8) || (*in_stack_00000030 == 0xe)) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(iVar12);\n                }\n                iVar12 = iVar12 + -0x18;\n                in_stack_00000030 = in_stack_00000030 + 1;\n                uVar2 = *in_stack_00000030;\n            }\n        }\n        fcn.00403cfc(iStack256);\n        iStack256 = 0;\n        if (uVar7 < 0) {\n            (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n            if (uVar7 == 0x80020009) {\n                if (pcStack136 != NULL) {\n                    (*pcStack136)(auStack184);\n                }\n                iStack224 = fcn.00403cc0(0x40);\n                if (iStack224 != 0) {\n                    iVar9 = fcn.00429ebc(iStack224, 0, 0);\n                }\n                iVar8 = (*_sym.imp.OLEAUT32.dll_VariantInit)(uStack176);\n                if (iVar8 != 0) {\n                    fcn.00412768(iVar9 + 0x30, uStack176);\n                }\n                (*_sym.imp.OLEAUT32.dll_SysStringLen)(uStack176);\n                iVar8 = (*_sym.imp.OLEAUT32.dll_VariantInit)(uStack168);\n                if (iVar8 != 0) {\n                    fcn.00412768(iVar9 + 0x18, uStack168);\n                }\n                (*_sym.imp.OLEAUT32.dll_SysStringLen)(uStack168);\n                iVar8 = (*_sym.imp.OLEAUT32.dll_VariantInit)(uStack160);\n                if (iVar8 != 0) {\n                    fcn.00412768(iVar9 + 0x28, uStack160);\n                }\n                (*_sym.imp.OLEAUT32.dll_SysStringLen)(uStack160);\n                *(iVar9 + 0x20) = uStack152;\n                *(iVar9 + 0x38) = uStack128;\n                iStack224 = iVar9;\n                fcn.00430080(&iStack224, 0x461358);\n                pcVar6 = swi(3);\n                (*pcVar6)();\n                return;\n            }\n            fcn.00412420(uVar7);\n            pcVar6 = swi(3);\n            (*pcVar6)();\n            return;\n        }\n        if (in_R9W != 0) {\n            if (in_R9W != 0xc) {\n                uVar7 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&uStack280, &uStack280, 0, in_R9W);\n                if (uVar7 < 0) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)();\n                    fcn.00412420(uVar7);\n                    pcVar6 = swi(3);\n                    (*pcVar6)();\n                    return;\n                }\n            }\n            if (in_R9W < 0xc) {\n                if (in_R9W == 0xb) {\n                    *in_stack_00000028 = CONCAT11(uStack271, uStack272) != 0;\n                }\n                else if (in_R9W == 2) {\n                    *in_stack_00000028 = CONCAT11(uStack271, uStack272);\n                }\n                else if (in_R9W == 3) {\n                    *in_stack_00000028 = CONCAT22(uStack270, CONCAT11(uStack271, uStack272));\n                }\n                else if (in_R9W == 4) {\n                    *in_stack_00000028 = CONCAT22(uStack270, CONCAT11(uStack271, uStack272));\n                }\n                else if (in_R9W == 5) {\n                    *in_stack_00000028 = CONCAT44(uStack268, CONCAT22(uStack270, CONCAT11(uStack271, uStack272)));\n                }\n                else if (in_R9W == 6) {\n                    *in_stack_00000028 = CONCAT44(uStack268, CONCAT22(uStack270, CONCAT11(uStack271, uStack272)));\n                }\n                else if (in_R9W == 7) {\n                    *in_stack_00000028 = CONCAT44(uStack268, CONCAT22(uStack270, CONCAT11(uStack271, uStack272)));\n                }\n                else if (in_R9W == 8) {\n                    fcn.0042713c(in_stack_00000028, \n                                 CONCAT44(uStack268, CONCAT22(uStack270, CONCAT11(uStack271, uStack272))));\n                    (*_sym.imp.OLEAUT32.dll_SysStringLen)\n                              (CONCAT44(uStack268, CONCAT22(uStack270, CONCAT11(uStack271, uStack272))));\n                }\n                else if (in_R9W == 9) {\n                    *in_stack_00000028 = CONCAT44(uStack268, CONCAT22(uStack270, CONCAT11(uStack271, uStack272)));\n                }\n                else if (in_R9W == 10) {\n                    *in_stack_00000028 = CONCAT22(uStack270, CONCAT11(uStack271, uStack272));\n                }\n            }\n            else if (in_R9W == 0xc) {\n                *in_stack_00000028 = uStack280;\n                in_stack_00000028[1] = CONCAT44(uStack268, CONCAT22(uStack270, CONCAT11(uStack271, uStack272)));\n                in_stack_00000028[2] = uStack264;\n            }\n            else if (in_R9W == 0xd) {\n                *in_stack_00000028 = CONCAT44(uStack268, CONCAT22(uStack270, CONCAT11(uStack271, uStack272)));\n            }\n            else if (in_R9W == 0x10) {\n                *in_stack_00000028 = uStack272;\n            }\n            else if (in_R9W == 0x11) {\n                *in_stack_00000028 = uStack272;\n            }\n            else if (in_R9W == 0x12) {\n                *in_stack_00000028 = CONCAT11(uStack271, uStack272);\n            }\n            else if (in_R9W == 0x13) {\n                *in_stack_00000028 = CONCAT22(uStack270, CONCAT11(uStack271, uStack272));\n            }\n            else if (in_R9W == 0x14) {\n                *in_stack_00000028 = CONCAT44(uStack268, CONCAT22(uStack270, CONCAT11(uStack271, uStack272)));\n            }\n            else if (in_R9W == 0x15) {\n                *in_stack_00000028 = CONCAT44(uStack268, CONCAT22(uStack270, CONCAT11(uStack271, uStack272)));\n            }\n        }\n        fcn.00429290(&uStack120);\n        if (iStack256 != 0) {\n            fcn.00403cfc(iStack256);\n        }\n    }\n    return;\n}\n",
        "token_count": 4675
    },
    "0042b410": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042b410(ulong arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    \n    fcn.0042bd04();\n    fcn.0042bc14();\n    fcn.0042bb94();\n    if (arg1 == 0) {\n        iVar2 = fcn.004057c8();\n        if (iVar2 != 0) {\n            piVar1 = *(iVar2 + 0x80);\n            if (piVar1 != NULL) {\n                (**(*piVar1 + 8))(piVar1, 1);\n            }\n            *(iVar2 + 0x80) = 0;\n        }\n        iVar2 = fcn.00413268();\n        if (*(iVar2 + 0x17c) == 1) {\n            (*_sym.imp.ole32.dll_CoFreeUnusedLibraries)();\n            (*_sym.imp.ole32.dll_OleUninitialize)();\n            *(iVar2 + 0x17c) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 231
    },
    "0042bbe4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042bbe4(int64_t arg1)\n\n{\n    if (*(arg1 + 0x7a) != '\\0') {\n        if (*(arg1 + 0x48) != 0) {\n            (*_sym.imp.ole32.dll_CoRevokeClassObject)();\n            *(arg1 + 0x48) = 0;\n        }\n        *(arg1 + 0x7a) = 0;\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "0042bd64": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0042bd64(int64_t arg1)\n\n{\n    if (*(arg1 + 0x40) != 0) {\n        (*_sym.imp.ole32.dll_CoRegisterMessageFilter)(0, 0);\n        *(arg1 + 0x40) = 0;\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "0042f090": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0042f090(uint *arg1)\n\n{\n    uint *puVar1;\n    \n    if ((arg1 != NULL) && (*0x46b0a4 != 0)) {\n        *arg1 = *0x46b0b0;\n        return 0;\n    }\n    puVar1 = fcn.0042f5c0();\n    *puVar1 = 0x16;\n    fcn.004359b0(0, 0, 0, 0);\n    return 0x16;\n}\n",
        "token_count": 120
    },
    "0042f2f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042f285)\n// WARNING: Removing unreachable block (ram,0x0042f2ae)\n\nvoid fcn.0042f2f0(ulong arg1)\n\n{\n    code *pcVar1;\n    code **ppcVar2;\n    code **ppcVar3;\n    \n    fcn.00437ce0(8);\n    if (*0x46b104 != 1) {\n        *0x46b100 = 1;\n        *0x46b0bc = 0;\n        ppcVar2 = fcn.004321a0(*0x46d270);\n        ppcVar3 = fcn.004321a0(*0x46d268);\n        if (ppcVar2 != NULL) {\n            while (ppcVar3 = ppcVar3 + -1,  ppcVar2 <= ppcVar3) {\n                if (*ppcVar3 != NULL) {\n                    (**ppcVar3)();\n                }\n            }\n        }\n        fcn.0042eff0(0x448c08, 0x448c20);\n        fcn.0042eff0(0x448c28, 0x448c38);\n    }\n    *0x46b104 = 1;\n    fcn.00437bb0(8);\n    fcn.0042ef90(arg1);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 323
    },
    "0042ff10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042fdc9)\n\nint32_t fcn.0042ff10(uint8_t *arg1, uint8_t *arg2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint *puVar6;\n    uint16_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint8_t *puVar10;\n    uint8_t *puVar11;\n    bool bVar12;\n    \n    iVar4 = fcn.004323c0();\n    iVar5 = *(iVar4 + 0xb8);\n    if ((*(iVar4 + 0xc0) != *0x466a00) && ((*0x466888 & *(iVar4 + 200)) == 0)) {\n        fcn.0043ab60();\n    }\n    if ((iVar5 != *0x466780) && ((*0x466888 & *(iVar4 + 200)) == 0)) {\n        iVar5 = fcn.00439f80();\n    }\n    bVar12 = (*(iVar4 + 200) & 2) == 0;\n    if (bVar12) {\n        *(iVar4 + 200) = *(iVar4 + 200) | 2;\n    }\n    if ((arg1 == NULL) || (arg2 == NULL)) {\n        puVar6 = fcn.0042f5c0();\n        *puVar6 = 0x16;\n        fcn.004359b0(0, 0, 0, 0);\n        if (bVar12) {\n            *(iVar4 + 200) = *(iVar4 + 200) & 0xfffffffd;\n        }\n        iVar3 = 0x7fffffff;\n    }\n    else if (*(iVar5 + 8) == 0) {\n        iVar5 = arg2 - arg1;\n        do {\n            uVar1 = *arg1;\n            if (uVar1 != arg1[iVar5]) {\n                uVar2 = uVar1 < arg1[iVar5];\n                iVar3 = (1 - uVar2) - (uVar2 != 0);\n                goto code_r0x0042fee5;\n            }\n            arg1 = arg1 + 1;\n        } while (uVar1 != 0);\n        iVar3 = 0;\ncode_r0x0042fee5:\n        if (bVar12) {\n            *(iVar4 + 200) = *(iVar4 + 200) & 0xfffffffd;\n        }\n    }\n    else {\n        do {\n            uVar8 = *arg1;\n            puVar10 = arg1 + 1;\n            if ((*(uVar8 + 0x1d + iVar5) & 4) != 0) {\n                if (*puVar10 == 0) {\n                    uVar8 = 0;\n                }\n                else {\n                    uVar8 = CONCAT11(*arg1, *puVar10);\n                    puVar10 = arg1 + 2;\n                }\n            }\n            uVar9 = *arg2;\n            puVar11 = arg2 + 1;\n            if ((*(uVar9 + 0x1d + iVar5) & 4) != 0) {\n                if (*puVar11 == 0) {\n                    uVar9 = 0;\n                }\n                else {\n                    uVar9 = CONCAT11(*arg2, *puVar11);\n                    puVar11 = arg2 + 2;\n                }\n            }\n            uVar7 = uVar8;\n            if (uVar7 != uVar9) {\n                iVar3 = -1;\n                if (uVar9 < uVar7) {\n                    iVar3 = 1;\n                }\n                goto code_r0x0042fee5;\n            }\n            arg1 = puVar10;\n            arg2 = puVar11;\n        } while (uVar7 != 0);\n        if (bVar12) {\n            *(iVar4 + 200) = *(iVar4 + 200) & 0xfffffffd;\n        }\n        iVar3 = 0;\n    }\n    return iVar3;\n}\n",
        "token_count": 923
    },
    "00430330": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043022a)\n\nuint8_t * fcn.00430330(uint8_t *arg1, ulong arg2)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint *puVar4;\n    uint8_t *puVar5;\n    bool bVar6;\n    \n    iVar2 = fcn.004323c0();\n    iVar3 = *(iVar2 + 0xb8);\n    if ((*(iVar2 + 0xc0) != *0x466a00) && ((*0x466888 & *(iVar2 + 200)) == 0)) {\n        fcn.0043ab60();\n    }\n    if ((iVar3 != *0x466780) && ((*0x466888 & *(iVar2 + 200)) == 0)) {\n        iVar3 = fcn.00439f80();\n    }\n    bVar6 = (*(iVar2 + 200) & 2) == 0;\n    if (bVar6) {\n        *(iVar2 + 200) = *(iVar2 + 200) | 2;\n    }\n    if (arg1 == NULL) {\n        puVar4 = fcn.0042f5c0();\n        *puVar4 = 0x16;\n        fcn.004359b0(0, 0, 0, 0);\n    }\n    else {\n        if (*(iVar3 + 8) == 0) {\n            arg1 = fcn.0043b180(arg1);\ncode_r0x00430289:\n            if (!bVar6) {\n                return arg1;\n            }\n            *(iVar2 + 200) = *(iVar2 + 200) & 0xfffffffd;\n            return arg1;\n        }\n        uVar1 = *arg1;\n        while (uVar1 != 0) {\n            if ((*(uVar1 + 0x1d + iVar3) & 4) == 0) {\n                puVar5 = arg1;\n                if (arg2 == uVar1) break;\n            }\n            else {\n                if (arg1[1] == 0) goto code_r0x004302fd;\n                puVar5 = arg1 + 1;\n                if (arg2 == CONCAT11(uVar1, arg1[1])) goto code_r0x00430289;\n            }\n            arg1 = puVar5 + 1;\n            uVar1 = puVar5[1];\n        }\n        if (arg2 == uVar1) {\n            if (!bVar6) {\n                return arg1;\n            }\n            *(iVar2 + 200) = *(iVar2 + 200) & 0xfffffffd;\n            return arg1;\n        }\n    }\ncode_r0x004302fd:\n    if (bVar6) {\n        *(iVar2 + 200) = *(iVar2 + 200) & 0xfffffffd;\n    }\n    return NULL;\n}\n",
        "token_count": 651
    },
    "00431110": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00431110(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    if (*0x46bd88 == 0) {\n        fcn.00430d80(0x466a10, arg1, arg2, arg3);\n        return;\n    }\n    fcn.00430d80(0, arg1, arg2, arg3);\n    return;\n}\n",
        "token_count": 88
    },
    "004308f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004307ba)\n\nint64_t fcn.004308f0(uint8_t *arg1, uint8_t *arg2)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint *puVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    bool bVar7;\n    \n    iVar2 = fcn.004323c0();\n    iVar3 = *(iVar2 + 0xb8);\n    if ((*(iVar2 + 0xc0) != *0x466a00) && ((*0x466888 & *(iVar2 + 200)) == 0)) {\n        fcn.0043ab60();\n    }\n    if ((iVar3 != *0x466780) && ((*0x466888 & *(iVar2 + 200)) == 0)) {\n        iVar3 = fcn.00439f80();\n    }\n    bVar7 = (*(iVar2 + 200) & 2) == 0;\n    if (bVar7) {\n        *(iVar2 + 200) = *(iVar2 + 200) | 2;\n    }\n    if (*(iVar3 + 8) == 0) {\n        iVar3 = fcn.0043b1e0(arg1, arg2);\n        if (bVar7) {\n            *(iVar2 + 200) = *(iVar2 + 200) & 0xfffffffd;\n        }\n    }\n    else if ((arg1 == NULL) || (arg2 == NULL)) {\n        puVar4 = fcn.0042f5c0();\n        *puVar4 = 0x16;\n        fcn.004359b0(0, 0, 0, 0);\n        if (bVar7) {\n            *(iVar2 + 200) = *(iVar2 + 200) & 0xfffffffd;\n        }\n        iVar3 = 0;\n    }\n    else {\n        puVar6 = arg1;\n        if (*arg1 != 0) {\n            do {\n                puVar5 = arg2;\n                if (*arg2 != 0) {\n                    do {\n                        uVar1 = *puVar5;\n                        if ((*(uVar1 + 0x1d + iVar3) & 4) == 0) {\n                            if (uVar1 == *puVar6) break;\n                        }\n                        else {\n                            if (((uVar1 == *puVar6) && (puVar5[1] == puVar6[1])) || (puVar5[1] == 0)) break;\n                            puVar5 = puVar5 + 1;\n                        }\n                        puVar5 = puVar5 + 1;\n                        if (*puVar5 == 0) goto code_r0x004308b3;\n                    } while( true );\n                }\n            } while (((*puVar5 != 0) && (((*(*puVar6 + 0x1d + iVar3) & 4) == 0 || (puVar6 = puVar6 + 1,  *puVar6 != 0)))\n                     ) && (puVar6 = puVar6 + 1,  *puVar6 != 0));\n        }\ncode_r0x004308b3:\n        iVar3 = puVar6 - arg1;\n        if (bVar7) {\n            *(iVar2 + 200) = *(iVar2 + 200) & 0xfffffffd;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 775
    },
    "00430ad0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043099a)\n\nint64_t fcn.00430ad0(uint8_t *arg1, uint8_t *arg2)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint *puVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    bool bVar7;\n    \n    iVar2 = fcn.004323c0();\n    iVar3 = *(iVar2 + 0xb8);\n    if ((*(iVar2 + 0xc0) != *0x466a00) && ((*0x466888 & *(iVar2 + 200)) == 0)) {\n        fcn.0043ab60();\n    }\n    if ((iVar3 != *0x466780) && ((*0x466888 & *(iVar2 + 200)) == 0)) {\n        iVar3 = fcn.00439f80();\n    }\n    bVar7 = (*(iVar2 + 200) & 2) == 0;\n    if (bVar7) {\n        *(iVar2 + 200) = *(iVar2 + 200) | 2;\n    }\n    if (*(iVar3 + 8) == 0) {\n        iVar3 = fcn.0043b2d0(arg1, arg2);\n        if (bVar7) {\n            *(iVar2 + 200) = *(iVar2 + 200) & 0xfffffffd;\n        }\n    }\n    else if ((arg1 == NULL) || (arg2 == NULL)) {\n        puVar4 = fcn.0042f5c0();\n        *puVar4 = 0x16;\n        fcn.004359b0(0, 0, 0, 0);\n        if (bVar7) {\n            *(iVar2 + 200) = *(iVar2 + 200) & 0xfffffffd;\n        }\n        iVar3 = 0;\n    }\n    else {\n        puVar6 = arg1;\n        if (*arg1 != 0) {\n            do {\n                puVar5 = arg2;\n                if (*arg2 == 0) {\ncode_r0x00430a72:\n                    if (*puVar5 != 0) break;\n                }\n                else {\n                    do {\n                        uVar1 = *puVar5;\n                        if ((*(uVar1 + 0x1d + iVar3) & 4) == 0) {\n                            if (uVar1 == *puVar6) goto code_r0x00430a72;\n                        }\n                        else {\n                            if (((uVar1 == *puVar6) && (puVar5[1] == puVar6[1])) || (puVar5[1] == 0))\n                            goto code_r0x00430a72;\n                            puVar5 = puVar5 + 1;\n                        }\n                        puVar5 = puVar5 + 1;\n                    } while (*puVar5 != 0);\n                }\n                if ((((*(*puVar6 + 0x1d + iVar3) & 4) != 0) && (puVar6 = puVar6 + 1,  *puVar6 == 0)) ||\n                   (puVar6 = puVar6 + 1,  *puVar6 == 0)) break;\n            } while( true );\n        }\n        iVar3 = puVar6 - arg1;\n        if (bVar7) {\n            *(iVar2 + 200) = *(iVar2 + 200) & 0xfffffffd;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 792
    },
    "00431370": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043123f)\n\nuint64_t fcn.00431370(uint64_t arg1)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    uchar uStackX8;\n    uchar uStackX9;\n    uint16_t uStackX16;\n    int16_t iStackX18;\n    int64_t iStack40;\n    int64_t iStack32;\n    int64_t iStack24;\n    char cStack16;\n    \n    arg1 = arg1 & 0xffffffff;\n    cStack16 = '\\0';\n    iStack24 = fcn.004323c0();\n    iStack40 = *(iStack24 + 0xc0);\n    iStack32 = *(iStack24 + 0xb8);\n    if ((iStack40 != *0x466a00) && ((*0x466888 & *(iStack24 + 200)) == 0)) {\n        iStack40 = fcn.0043ab60();\n    }\n    if ((iStack32 != *0x466780) && ((*0x466888 & *(iStack24 + 200)) == 0)) {\n        iStack32 = fcn.00439f80();\n    }\n    if ((*(iStack24 + 200) & 2) == 0) {\n        *(iStack24 + 200) = *(iStack24 + 200) | 2;\n        cStack16 = '\\x01';\n    }\n    if (arg1 < 0x100) {\n        if (*(iStack40 + 0x10c) < 2) {\n            uVar2 = *(*(iStack40 + 0x140) + arg1 * 2) & 4;\n        }\n        else {\n            uVar2 = fcn.0043b3a0(arg1, 4, &iStack40);\n        }\n        if (cStack16 != '\\0') {\n            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n        }\n        return uVar2;\n    }\n    uStackX16 = 0;\n    uStackX9 = arg1;\n    iStackX18 = 0;\n    uStackX8 = arg1 >> 8;\n    if (*(iStack32 + 8) == 0) {\n        if (cStack16 != '\\0') {\n            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n        }\n        return 0;\n    }\n    uVar2 = 1;\n    iVar1 = fcn.0043b810(&iStack40, 1, &uStackX8, 2);\n    if (iVar1 != 0) {\n        if ((iStackX18 != 0) || ((uStackX16 & 4) == 0)) {\n            uVar2 = 0;\n        }\n        if (cStack16 != '\\0') {\n            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n        }\n        return uVar2;\n    }\n    if (cStack16 != '\\0') {\n        *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n    }\n    return 0;\n}\n",
        "token_count": 725
    },
    "00431560": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0043142f)\n\nuint64_t fcn.00431560(uint64_t arg1)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    uchar uStackX8;\n    uchar uStackX9;\n    uint16_t uStackX16;\n    int16_t iStackX18;\n    int64_t iStack40;\n    int64_t iStack32;\n    int64_t iStack24;\n    char cStack16;\n    \n    arg1 = arg1 & 0xffffffff;\n    cStack16 = '\\0';\n    iStack24 = fcn.004323c0();\n    iStack40 = *(iStack24 + 0xc0);\n    iStack32 = *(iStack24 + 0xb8);\n    if ((iStack40 != *0x466a00) && ((*0x466888 & *(iStack24 + 200)) == 0)) {\n        iStack40 = fcn.0043ab60();\n    }\n    if ((iStack32 != *0x466780) && ((*0x466888 & *(iStack24 + 200)) == 0)) {\n        iStack32 = fcn.00439f80();\n    }\n    if ((*(iStack24 + 200) & 2) == 0) {\n        *(iStack24 + 200) = *(iStack24 + 200) | 2;\n        cStack16 = '\\x01';\n    }\n    if (arg1 < 0x100) {\n        if (*(iStack40 + 0x10c) < 2) {\n            uVar2 = *(*(iStack40 + 0x140) + arg1 * 2) & 8;\n        }\n        else {\n            uVar2 = fcn.0043b3a0(arg1, 8, &iStack40);\n        }\n        if (cStack16 != '\\0') {\n            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n        }\n        return uVar2;\n    }\n    uStackX16 = 0;\n    uStackX9 = arg1;\n    iStackX18 = 0;\n    uStackX8 = arg1 >> 8;\n    if (*(iStack32 + 8) == 0) {\n        if (cStack16 != '\\0') {\n            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n        }\n        return 0;\n    }\n    uVar2 = 1;\n    iVar1 = fcn.0043b810(0, 1, &uStackX8, 2);\n    if (iVar1 != 0) {\n        if ((iStackX18 != 0) || ((uStackX16 & 8) == 0)) {\n            uVar2 = 0;\n        }\n        if (cStack16 != '\\0') {\n            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n        }\n        return uVar2;\n    }\n    if (cStack16 != '\\0') {\n        *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n    }\n    return 0;\n}\n",
        "token_count": 723
    },
    "00431a20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004319c3)\n\nint64_t fcn.00431a20(int32_t *arg1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    int32_t iStack72;\n    int32_t iStack68;\n    int64_t iStack64;\n    int32_t iStack56;\n    int32_t iStack52;\n    int32_t iStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    iStack68 = 0;\n    iStack72 = 0;\n    if (arg1 == NULL) {\n        puVar2 = fcn.0042f5c0();\n        *puVar2 = 0x16;\n        fcn.004359b0(0, 0, 0, 0);\n        return -1;\n    }\n    iStack64 = arg1[5];\n    if (iStack64 - 0x45U < 0x409) {\n        iVar1 = arg1[4];\n        if ((iVar1 < 0) || (0xb < iVar1)) {\n            iVar3 = iVar1 % 0xc;\n            iStack64 = iStack64 + iVar1 / 0xc;\n            arg1[4] = iVar3;\n            if (iVar3 < 0) {\n                iStack64 = iStack64 + -1;\n                arg1[4] = iVar3 + 0xc;\n            }\n            if (0x408 < iStack64 - 0x45U) goto code_r0x00431994;\n        }\n        iVar8 = *(arg1[4] * 4 + 0x466b28);\n        uVar4 = iStack64 >> 0x3f & 3;\n        if (((((iStack64 + uVar4 & 3) == uVar4) &&\n             (iVar5 = SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(iStack64) >> 0x40, 0) + iStack64, \n             iStack64 != ((iVar5 >> 6) - (iVar5 >> 0x3f)) * 100)) ||\n            (iVar5 = iStack64 + 0x76c,  iVar6 = SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(iVar5) >> 0x40, 0) + iVar5\n            ,  iVar5 == ((iVar6 >> 8) - (iVar6 >> 0x3f)) * 400)) && (1 < arg1[4])) {\n            iVar8 = iVar8 + 1;\n        }\n        iVar5 = iStack64 + -1;\n        iVar6 = iStack64 + 299 + SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(iStack64 + 299) >> 0x40, 0);\n        iVar7 = SUB168(SEXT816(-0x5c28f5c28f5c28f5) * SEXT816(iVar5) >> 0x40, 0) + iVar5;\n        iStack64 = *arg1 + (arg1[1] +\n                           (arg1[2] +\n                           (iStack64 * 0x16d + -0x63df +\n                           (iVar5 + (iVar5 >> 0x3f & 3) >> 2) + iVar8 +\n                           ((((iVar6 >> 8) - (iVar6 >> 0x3f)) + arg1[3]) - ((iVar7 >> 6) - (iVar7 >> 0x3f)))) * 0x18) *\n                           0x3c) * 0x3c;\n        fcn.0043df40();\n        iVar1 = fcn.0043d0f0(&iStack68);\n        if (iVar1 != 0) {\n            fcn.00435910(0, 0, 0, 0, 0);\n        }\n        iVar1 = fcn.0043d140(&iStack72);\n        if (iVar1 != 0) {\n            fcn.00435910(0, 0, 0, 0, 0);\n        }\n        iStack64 = iStack64 + iStack72;\n        iVar1 = fcn.00431a30(&iStack56, &iStack64);\n        if (iVar1 == 0) {\n            if ((0 < arg1[8]) || ((arg1[8] < 0 && (0 < iStack24)))) {\n                iStack64 = iStack64 + iStack68;\n                iVar1 = fcn.00431a30(&iStack56, &iStack64);\n                if (iVar1 != 0) goto code_r0x00431994;\n            }\n            *arg1 = iStack56;\n            arg1[1] = iStack52;\n            arg1[2] = iStack48;\n            arg1[3] = iStack44;\n            arg1[4] = iStack40;\n            arg1[5] = iStack36;\n            arg1[6] = iStack32;\n            arg1[7] = iStack28;\n            arg1[8] = iStack24;\n            return iStack64;\n        }\n    }\ncode_r0x00431994:\n    puVar2 = fcn.0042f5c0();\n    *puVar2 = 0x16;\n    return -1;\n}\n",
        "token_count": 1305
    },
    "0043e2e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.0043e2e0(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t arg1_00;\n    ulong uVar4;\n    code *pcVar5;\n    int64_t iVar6;\n    int32_t iStack56;\n    uint32_t uStack52;\n    uchar auStack48 [8];\n    uchar auStack40 [8];\n    uint8_t uStack32;\n    \n    iVar2 = fcn.00432140();\n    iVar6 = 0;\n    iStack56 = 0;\n    uStack52 = 0;\n    if (*0x46bef0 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n        if ((iVar3 == 0) || (arg1_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, 0x451cf0),  arg1_00 == 0)) {\n            return 0;\n        }\n        *0x46bef0 = fcn.004320d0(arg1_00);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, 0x451ce0);\n        *0x46bef8 = fcn.004320d0(uVar4);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, 0x451cc8);\n        *0x46bf00 = fcn.004320d0(uVar4);\n        iVar1 = fcn.0042f040(&iStack56);\n        if (iVar1 != 0) {\n            fcn.00435910(0, 0, 0, 0, 0);\n        }\n        if (iStack56 == 2) {\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"GetUserObjectInformationA\");\n            *0x46bf10 = fcn.004320d0(uVar4);\n            if (*0x46bf10 != 0) {\n                uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"GetProcessWindowStation\");\n                *0x46bf08 = fcn.004320d0(uVar4);\n            }\n        }\n    }\n    if ((*0x46bf08 == iVar2) || (*0x46bf10 == iVar2)) {\ncode_r0x0043e4a3:\n        if (*0x46bef8 != iVar2) {\n            pcVar5 = fcn.004321a0(*0x46bef8);\n            iVar6 = (*pcVar5)();\n            if ((iVar6 != 0) && (*0x46bf00 != iVar2)) {\n                pcVar5 = fcn.004321a0(*0x46bf00);\n                iVar6 = (*pcVar5)(iVar6);\n            }\n        }\n    }\n    else {\n        pcVar5 = fcn.004321a0(*0x46bf08);\n        iVar3 = (*pcVar5)();\n        if (iVar3 != 0) {\n            pcVar5 = fcn.004321a0(*0x46bf10);\n            iVar1 = (*pcVar5)(iVar3, 1, auStack40, 0xc, auStack48);\n            if ((iVar1 != 0) && ((uStack32 & 1) != 0)) goto code_r0x0043e4a3;\n        }\n        iVar1 = fcn.0042f090(&uStack52);\n        if (iVar1 != 0) {\n            fcn.00435910(0, 0, 0, 0, 0);\n        }\n        if (uStack52 < 4) {\n            arg3._0_4_ = arg3 | 0x40000;\n        }\n        else {\n            arg3._0_4_ = arg3 | 0x200000;\n        }\n    }\n    pcVar5 = fcn.004321a0(*0x46bef0);\n    uVar4 = (*pcVar5)(iVar6, arg1, arg2, arg3);\n    return uVar4;\n}\n",
        "token_count": 928
    },
    "0043ff70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.0043ff70(uint16_t *arg1, uint8_t *arg2, uint64_t arg3, int64_t *arg4)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int64_t iStack40;\n    int64_t iStack32;\n    int64_t iStack24;\n    char cStack16;\n    \n    if ((arg2 != NULL) && (arg3 != 0)) {\n        if (*arg2 != 0) {\n            cStack16 = '\\0';\n            if (arg4 == NULL) {\n                iStack24 = fcn.004323c0();\n                iStack40 = *(iStack24 + 0xc0);\n                iStack32 = *(iStack24 + 0xb8);\n                if ((iStack40 != *0x466a00) && ((*0x466888 & *(iStack24 + 200)) == 0)) {\n                    iStack40 = fcn.0043ab60();\n                }\n                if ((iStack32 != *0x466780) && ((*0x466888 & *(iStack24 + 200)) == 0)) {\n                    iStack32 = fcn.00439f80();\n                }\n                if ((*(iStack24 + 200) & 2) == 0) {\n                    *(iStack24 + 200) = *(iStack24 + 200) | 2;\n                    cStack16 = '\\x01';\n                }\n            }\n            else {\n                iStack40 = *arg4;\n                iStack32 = arg4[1];\n            }\n            if (*(iStack40 + 0x14) != 0) {\n                iVar2 = fcn.0043f740(*arg2, &iStack40);\n                if (iVar2 == 0) {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                      (*(iStack40 + 4), 9, arg2, 1, arg1, arg1 != NULL);\n                    if (iVar2 != 0) {\n                        if (cStack16 != '\\0') {\n                            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n                        }\n                        return 1;\n                    }\n                }\n                else {\n                    iVar2 = *(iStack40 + 0x10c);\n                    if ((((1 < iVar2) && (iVar2 <= arg3)) &&\n                        (iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                           (*(iStack40 + 4), 9, arg2, iVar2, arg1, arg1 != NULL),  iVar2 != 0)) ||\n                       ((*(iStack40 + 0x10c) <= arg3 && (arg2[1] != 0)))) {\n                        uVar1 = *(iStack40 + 0x10c);\n                        if (cStack16 == '\\0') {\n                            return uVar1;\n                        }\n                        *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n                        return uVar1;\n                    }\n                }\n                puVar3 = fcn.0042f5c0();\n                *puVar3 = 0x2a;\n                if (cStack16 != '\\0') {\n                    *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n                }\n                return 0xffffffff;\n            }\n            if (arg1 != NULL) {\n                *arg1 = *arg2;\n            }\n            if (cStack16 != '\\0') {\n                *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n            }\n            return 1;\n        }\n        if (arg1 != NULL) {\n            *arg1 = 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 848
    },
    "004411d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004411d0(ulong arg1, ulong arg2, int64_t *arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uchar auStack136 [32];\n    uint uStack104;\n    uint uStack96;\n    uint uStack88;\n    int64_t *piStack80;\n    int64_t iStack72;\n    int64_t iStack64;\n    int64_t iStack56;\n    char cStack48;\n    uchar auStack40 [8];\n    uchar auStack32 [16];\n    uint64_t uStack16;\n    \n    uStack16 = *0x465c38 ^ auStack136;\n    cStack48 = '\\0';\n    if (arg3 == NULL) {\n        iStack56 = fcn.004323c0();\n        iStack72 = *(iStack56 + 0xc0);\n        iStack64 = *(iStack56 + 0xb8);\n        if ((iStack72 != *0x466a00) && ((*0x466888 & *(iStack56 + 200)) == 0)) {\n            iStack72 = fcn.0043ab60();\n        }\n        if ((iStack64 != *0x466780) && ((*0x466888 & *(iStack56 + 200)) == 0)) {\n            iStack64 = fcn.00439f80();\n        }\n        if ((*(iStack56 + 200) & 2) == 0) {\n            *(iStack56 + 200) = *(iStack56 + 200) | 2;\n            cStack48 = '\\x01';\n        }\n    }\n    else {\n        iStack72 = *arg3;\n        iStack64 = arg3[1];\n    }\n    piStack80 = &iStack72;\n    uStack88 = 0;\n    uStack96 = 0;\n    uStack104 = 0;\n    uVar1 = fcn.00443aa0(auStack32, auStack40, arg2, 0);\n    iVar2 = fcn.00442d40(auStack32, arg1);\n    if ((uVar1 & 3) == 0) {\n        if (iVar2 != 1) {\n            if (iVar2 != 2) {\ncode_r0x0044133a:\n                if (cStack48 != '\\0') {\n                    *(iStack56 + 200) = *(iStack56 + 200) & 0xfffffffd;\n                }\n                goto code_r0x0044134f;\n            }\ncode_r0x00441316:\n            if (cStack48 != '\\0') {\n                *(iStack56 + 200) = *(iStack56 + 200) & 0xfffffffd;\n            }\n            goto code_r0x0044134f;\n        }\n    }\n    else {\n        if ((uVar1 & 1) != 0) goto code_r0x00441316;\n        if ((uVar1 & 2) == 0) goto code_r0x0044133a;\n    }\n    if (cStack48 != '\\0') {\n        *(iStack56 + 200) = *(iStack56 + 200) & 0xfffffffd;\n    }\ncode_r0x0044134f:\n    fcn.0042dcb0(uStack16 ^ auStack136);\n    return;\n}\n",
        "token_count": 736
    },
    "00441370": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00441370(ulong arg1, ulong arg2, int64_t *arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uchar auStack136 [32];\n    uint uStack104;\n    uint uStack96;\n    uint uStack88;\n    int64_t *piStack80;\n    int64_t iStack72;\n    int64_t iStack64;\n    int64_t iStack56;\n    char cStack48;\n    uchar auStack40 [8];\n    uchar auStack32 [16];\n    uint64_t uStack16;\n    \n    uStack16 = *0x465c38 ^ auStack136;\n    cStack48 = '\\0';\n    if (arg3 == NULL) {\n        iStack56 = fcn.004323c0();\n        iStack72 = *(iStack56 + 0xc0);\n        iStack64 = *(iStack56 + 0xb8);\n        if ((iStack72 != *0x466a00) && ((*0x466888 & *(iStack56 + 200)) == 0)) {\n            iStack72 = fcn.0043ab60();\n        }\n        if ((iStack64 != *0x466780) && ((*0x466888 & *(iStack56 + 200)) == 0)) {\n            iStack64 = fcn.00439f80();\n        }\n        if ((*(iStack56 + 200) & 2) == 0) {\n            *(iStack56 + 200) = *(iStack56 + 200) | 2;\n            cStack48 = '\\x01';\n        }\n    }\n    else {\n        iStack72 = *arg3;\n        iStack64 = arg3[1];\n    }\n    piStack80 = &iStack72;\n    uStack88 = 0;\n    uStack96 = 0;\n    uStack104 = 0;\n    uVar1 = fcn.00443aa0(auStack32, auStack40, arg2, 0);\n    iVar2 = fcn.004433f0(auStack32, arg1);\n    if ((uVar1 & 3) == 0) {\n        if (iVar2 != 1) {\n            if (iVar2 != 2) {\ncode_r0x004414da:\n                if (cStack48 != '\\0') {\n                    *(iStack56 + 200) = *(iStack56 + 200) & 0xfffffffd;\n                }\n                goto code_r0x004414ef;\n            }\ncode_r0x004414b6:\n            if (cStack48 != '\\0') {\n                *(iStack56 + 200) = *(iStack56 + 200) & 0xfffffffd;\n            }\n            goto code_r0x004414ef;\n        }\n    }\n    else {\n        if ((uVar1 & 1) != 0) goto code_r0x004414b6;\n        if ((uVar1 & 2) == 0) goto code_r0x004414da;\n    }\n    if (cStack48 != '\\0') {\n        *(iStack56 + 200) = *(iStack56 + 200) & 0xfffffffd;\n    }\ncode_r0x004414ef:\n    fcn.0042dcb0(uStack16 ^ auStack136);\n    return;\n}\n",
        "token_count": 732
    },
    "00442080": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00441fba)\n// WARNING: Removing unreachable block (ram,0x00441fbf)\n// WARNING: Removing unreachable block (ram,0x00441fc3)\n// WARNING: Removing unreachable block (ram,0x00441fcb)\n// WARNING: Removing unreachable block (ram,0x00441fcf)\n\nint32_t fcn.00442080(void)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    \n    iVar5 = 0;\n    fcn.00437ce0(1);\n    for (uVar3 = 0; uVar3 < *0x46d040; uVar3 = uVar3 + 1) {\n        iVar4 = uVar3;\n        if ((*(*0x46c020 + iVar4 * 8) != 0) && (iVar1 = *(*0x46c020 + iVar4 * 8),  (*(iVar1 + 0x18) & 0x83) != 0)) {\n            fcn.0043f360(uVar3, iVar1);\n            iVar1 = *(*0x46c020 + iVar4 * 8);\n            if (((*(iVar1 + 0x18) & 0x83) != 0) && (iVar2 = fcn.00441e40(iVar1),  iVar2 != -1)) {\n                iVar5 = iVar5 + 1;\n            }\n            fcn.0043f3d0(uVar3, *(*0x46c020 + iVar4 * 8));\n        }\n    }\n    fcn.00437bb0(1);\n    return iVar5;\n}\n",
        "token_count": 386
    },
    "00442d40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint64_t fcn.00442d40(uint16_t *arg1, uint32_t *arg2)\n\n{\n    uint16_t uVar1;\n    char32_t cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    uint8_t uVar6;\n    int64_t iVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    uint64_t uVar12;\n    int32_t iVar13;\n    int64_t iVar14;\n    int32_t iVar15;\n    uint64_t uVar16;\n    int32_t iVar17;\n    uint32_t auStack100 [5];\n    uint32_t uStack80;\n    uint32_t uStack76;\n    int32_t iStack72;\n    \n    cVar2 = str.5_v_[0];\n    uVar1 = arg1[5];\n    uVar10 = uVar1 & 0x7fff;\n    iVar11 = uVar10 - 0x3fff;\n    auStack100[1] = *(arg1 + 3);\n    auStack100[2] = *(arg1 + 1);\n    auStack100[3] = *arg1 << 0x10;\n    if (iVar11 == -0x3fff) {\n        uVar12 = 0;\n        iVar4 = 0;\n        uVar5 = uVar12;\n        do {\n            if (auStack100[uVar5 + 1] != 0) {\n                auStack100[1] = 0;\n                auStack100[2] = 0;\n                uVar12 = 2;\n                iVar4 = 0;\n                break;\n            }\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < 3);\n    }\n    else {\n        uStack80 = *(arg1 + 3);\n        uStack76 = *(arg1 + 1);\n        uVar12 = 0;\n        iVar4 = 0;\n        iStack72 = *arg1 << 0x10;\n        iVar15 = 0;\n        uVar9 = str.5_v_[0] >> 0x1f & 0x1f;\n        uVar3 = str.5_v_[0] + uVar9;\n        iVar17 = uVar3 >> 5;\n        uVar3 = 0x1f - ((uVar3 & 0x1f) - uVar9);\n        uVar6 = uVar3;\n        if ((auStack100[iVar17 + 1] >> (uVar3 & 0x1f) & 1) != 0) {\n            if ((auStack100[iVar17 + 1] & ~(-1 << (uVar6 & 0x1f))) == 0) {\n                for (iVar7 = iVar17 + 1; iVar7 < 3; iVar7 = iVar7 + 1) {\n                    if (auStack100[iVar7 + 1] != 0) goto code_r0x00442e82;\n                }\n            }\n            else {\ncode_r0x00442e82:\n                uVar3 = str.5_v_[0] + L'\\xffffffff' >> 0x1f & 0x1f;\n                iVar15 = str.5_v_[0] + L'\\xffffffff' + uVar3;\n                iVar13 = iVar15 >> 5;\n                uVar9 = 1 << (0x1f - ((iVar15 & 0x1f) - uVar3) & 0x1f);\n                uVar3 = auStack100[iVar13 + 1] + uVar9;\n                if ((uVar3 < auStack100[iVar13 + 1]) || (uVar5 = uVar12,  uVar3 < uVar9)) {\n                    uVar5 = 1;\n                }\n                iVar15 = uVar5;\n                auStack100[iVar13 + 1] = uVar3;\n                iVar7 = iVar13 + -1;\n                if (-1 < iVar13 + -1) {\n                    do {\n                        iVar15 = uVar5;\n                        if (iVar15 == 0) break;\n                        uVar3 = auStack100[iVar7 + 1] + 1;\n                        if ((uVar3 < auStack100[iVar7 + 1]) || (uVar5 = uVar12,  uVar3 == 0)) {\n                            uVar5 = 1;\n                        }\n                        iVar15 = uVar5;\n                        auStack100[iVar7 + 1] = uVar3;\n                        iVar7 = iVar7 + -1;\n                    } while (-1 < iVar7);\n                }\n            }\n        }\n        auStack100[iVar17 + 1] = auStack100[iVar17 + 1] & -1 << (uVar6 & 0x1f);\n        iVar7 = iVar17 + 1;\n        if (iVar7 < 3) {\n            fcn.0042f6c0(auStack100 + iVar7 + 1, 0, (3 - iVar7) * 4);\n        }\n        iVar17 = iVar11;\n        if (iVar15 != 0) {\n            iVar17 = uVar10 - 0x3ffe;\n        }\n        if (iVar17 < *0x467244 - cVar2) {\n            auStack100[1] = 0;\n            auStack100[2] = 0;\n            uVar12 = 2;\n        }\n        else if (*0x467244 < iVar17) {\n            if (iVar17 < *0x467240) {\n                auStack100[1] = auStack100[1] & 0x7fffffff;\n                iVar4 = str.5_v_[3] + iVar17;\n                uVar10 = str.5_v_[1] >> 0x1f & 0x1f;\n                iVar11 = str.5_v_[1] + uVar10;\n                uVar6 = (iVar11 & 0x1f) - uVar10;\n                uVar5 = uVar12;\n                uVar16 = uVar12;\n                do {\n                    uVar10 = auStack100[uVar5 + 1];\n                    uVar5 = uVar5 + 1;\n                    auStack100[uVar5] = uVar10 >> (uVar6 & 0x1f) | uVar16;\n                    uVar16 = (~(-1 << (uVar6 & 0x1f)) & uVar10) << (0x20 - uVar6 & 0x1f);\n                } while (uVar5 < 3);\n                iVar7 = iVar11 >> 5;\n                iVar14 = 2;\n                puVar8 = auStack100 + (3 - iVar7);\n                do {\n                    if (iVar14 < iVar7) {\n                        auStack100[iVar14 + 1] = 0;\n                    }\n                    else {\n                        auStack100[iVar14 + 1] = *puVar8;\n                    }\n                    puVar8 = puVar8 + -1;\n                    iVar14 = iVar14 + -1;\n                } while (-1 < iVar14);\n            }\n            else {\n                auStack100[1] = 0x80000000;\n                auStack100[2] = 0;\n                auStack100[3] = 0;\n                uVar10 = str.5_v_[1] >> 0x1f & 0x1f;\n                iVar11 = str.5_v_[1] + uVar10;\n                uVar6 = (iVar11 & 0x1f) - uVar10;\n                uVar5 = uVar12;\n                do {\n                    uVar10 = auStack100[uVar12 + 1];\n                    uVar12 = uVar12 + 1;\n                    auStack100[uVar12] = uVar10 >> (uVar6 & 0x1f) | uVar5;\n                    uVar5 = (~(-1 << (uVar6 & 0x1f)) & uVar10) << (0x20 - uVar6 & 0x1f);\n                } while (uVar12 < 3);\n                iVar7 = iVar11 >> 5;\n                iVar14 = 2;\n                puVar8 = auStack100 + (3 - iVar7);\n                do {\n                    if (iVar14 < iVar7) {\n                        auStack100[iVar14 + 1] = 0;\n                    }\n                    else {\n                        auStack100[iVar14 + 1] = *puVar8;\n                    }\n                    puVar8 = puVar8 + -1;\n                    iVar14 = iVar14 + -1;\n                } while (-1 < iVar14);\n                uVar12 = 1;\n                iVar4 = str.5_v_[3] + *0x467240;\n            }\n        }\n        else {\n            auStack100[1] = uStack80;\n            auStack100[2] = uStack76;\n            auStack100[3] = iStack72;\n            uVar10 = *0x467244 - iVar11 >> 0x1f & 0x1f;\n            iVar11 = (*0x467244 - iVar11) + uVar10;\n            uVar6 = (iVar11 & 0x1f) - uVar10;\n            uVar5 = uVar12;\n            uVar16 = uVar12;\n            do {\n                uVar10 = auStack100[uVar5 + 1];\n                uVar5 = uVar5 + 1;\n                auStack100[uVar5] = uVar10 >> (uVar6 & 0x1f) | uVar16;\n                uVar16 = (uVar10 & ~(-1 << (uVar6 & 0x1f))) << (-uVar6 & 0x1f);\n            } while (uVar5 < 3);\n            iVar14 = iVar11 >> 5;\n            iVar7 = 2;\n            puVar8 = auStack100 + (3 - iVar14);\n            do {\n                if (iVar7 < iVar14) {\n                    auStack100[iVar7 + 1] = 0;\n                }\n                else {\n                    auStack100[iVar7 + 1] = *puVar8;\n                }\n                puVar8 = puVar8 + -1;\n                iVar7 = iVar7 + -1;\n            } while (-1 < iVar7);\n            uVar3 = str.5_v_[0] >> 0x1f & 0x1f;\n            uVar10 = str.5_v_[0] + uVar3;\n            iVar11 = uVar10 >> 5;\n            uVar10 = 0x1f - ((uVar10 & 0x1f) - uVar3);\n            uVar6 = uVar10;\n            if ((auStack100[iVar11 + 1] >> (uVar10 & 0x1f) & 1) != 0) {\n                if ((auStack100[iVar11 + 1] & ~(-1 << (uVar6 & 0x1f))) == 0) {\n                    for (iVar7 = iVar11 + 1; iVar7 < 3; iVar7 = iVar7 + 1) {\n                        if (auStack100[iVar7 + 1] != 0) goto code_r0x00443098;\n                    }\n                }\n                else {\ncode_r0x00443098:\n                    uVar10 = str.5_v_[0] + L'\\xffffffff' >> 0x1f & 0x1f;\n                    iVar4 = str.5_v_[0] + L'\\xffffffff' + uVar10;\n                    iVar15 = iVar4 >> 5;\n                    uVar3 = 1 << (0x1f - ((iVar4 & 0x1f) - uVar10) & 0x1f);\n                    uVar10 = auStack100[iVar15 + 1] + uVar3;\n                    if ((uVar10 < auStack100[iVar15 + 1]) || (uVar5 = uVar12,  uVar10 < uVar3)) {\n                        uVar5 = 1;\n                    }\n                    auStack100[iVar15 + 1] = uVar10;\n                    iVar7 = iVar15 + -1;\n                    if (-1 < iVar15 + -1) {\n                        do {\n                            if (uVar5 == 0) break;\n                            uVar10 = auStack100[iVar7 + 1] + 1;\n                            if ((uVar10 < auStack100[iVar7 + 1]) || (uVar5 = uVar12,  uVar10 == 0)) {\n                                uVar5 = 1;\n                            }\n                            auStack100[iVar7 + 1] = uVar10;\n                            iVar7 = iVar7 + -1;\n                        } while (-1 < iVar7);\n                    }\n                }\n            }\n            auStack100[iVar11 + 1] = auStack100[iVar11 + 1] & -1 << (uVar6 & 0x1f);\n            iVar7 = iVar11 + 1;\n            if (iVar7 < 3) {\n                fcn.0042f6c0(auStack100 + iVar7 + 1, 0, (3 - iVar7) * 4);\n            }\n            uVar10 = str.5_v_[1] + L'\\x01' >> 0x1f & 0x1f;\n            iVar11 = str.5_v_[1] + L'\\x01' + uVar10;\n            uVar6 = (iVar11 & 0x1f) - uVar10;\n            uVar5 = uVar12;\n            do {\n                uVar10 = auStack100[uVar12 + 1];\n                uVar12 = uVar12 + 1;\n                auStack100[uVar12] = uVar10 >> (uVar6 & 0x1f) | uVar5;\n                uVar5 = (~(-1 << (uVar6 & 0x1f)) & uVar10) << (0x20 - uVar6 & 0x1f);\n            } while (uVar12 < 3);\n            iVar14 = iVar11 >> 5;\n            iVar7 = 2;\n            puVar8 = auStack100 + (3 - iVar14);\n            do {\n                if (iVar7 < iVar14) {\n                    auStack100[iVar7 + 1] = 0;\n                }\n                else {\n                    auStack100[iVar7 + 1] = *puVar8;\n                }\n                puVar8 = puVar8 + -1;\n                iVar7 = iVar7 + -1;\n            } while (-1 < iVar7);\n            iVar4 = 0;\n            uVar12 = 2;\n        }\n    }\n    auStack100[1] = iVar4 << (0x1fU - str.5_v_[1] & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | auStack100[1];\n    if (str.5_v_[2] == L'@') {\n        arg2[1] = auStack100[1];\n        *arg2 = auStack100[2];\n        return uVar12;\n    }\n    if (str.5_v_[2] == L' ') {\n        *arg2 = auStack100[1];\n    }\n    return uVar12;\n}\n",
        "token_count": 3389
    },
    "004433f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint64_t fcn.004433f0(uint16_t *arg1, uint32_t *arg2)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    uint8_t uVar6;\n    int64_t iVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    uint64_t uVar12;\n    int32_t iVar13;\n    int64_t iVar14;\n    int32_t iVar15;\n    uint64_t uVar16;\n    int32_t iVar17;\n    uint32_t auStack100 [5];\n    uint32_t uStack80;\n    uint32_t uStack76;\n    int32_t iStack72;\n    \n    iVar4 = *0x467260;\n    uVar1 = arg1[5];\n    uVar10 = uVar1 & 0x7fff;\n    iVar11 = uVar10 - 0x3fff;\n    auStack100[1] = *(arg1 + 3);\n    auStack100[2] = *(arg1 + 1);\n    auStack100[3] = *arg1 << 0x10;\n    if (iVar11 == -0x3fff) {\n        uVar12 = 0;\n        iVar15 = 0;\n        uVar5 = uVar12;\n        do {\n            if (auStack100[uVar5 + 1] != 0) {\n                auStack100[1] = 0;\n                auStack100[2] = 0;\n                uVar12 = 2;\n                iVar15 = 0;\n                break;\n            }\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < 3);\n    }\n    else {\n        uStack80 = *(arg1 + 3);\n        uStack76 = *(arg1 + 1);\n        uVar12 = 0;\n        iVar15 = 0;\n        iStack72 = *arg1 << 0x10;\n        iVar3 = 0;\n        uVar9 = *0x467260 >> 0x1f & 0x1f;\n        uVar2 = *0x467260 + uVar9;\n        iVar17 = uVar2 >> 5;\n        uVar2 = 0x1f - ((uVar2 & 0x1f) - uVar9);\n        uVar6 = uVar2;\n        if ((auStack100[iVar17 + 1] >> (uVar2 & 0x1f) & 1) != 0) {\n            if ((auStack100[iVar17 + 1] & ~(-1 << (uVar6 & 0x1f))) == 0) {\n                for (iVar7 = iVar17 + 1; iVar7 < 3; iVar7 = iVar7 + 1) {\n                    if (auStack100[iVar7 + 1] != 0) goto code_r0x00443532;\n                }\n            }\n            else {\ncode_r0x00443532:\n                uVar2 = *0x467260 + -1 >> 0x1f & 0x1f;\n                iVar3 = *0x467260 + -1 + uVar2;\n                iVar13 = iVar3 >> 5;\n                uVar9 = 1 << (0x1f - ((iVar3 & 0x1f) - uVar2) & 0x1f);\n                uVar2 = auStack100[iVar13 + 1] + uVar9;\n                if ((uVar2 < auStack100[iVar13 + 1]) || (uVar5 = uVar12,  uVar2 < uVar9)) {\n                    uVar5 = 1;\n                }\n                iVar3 = uVar5;\n                auStack100[iVar13 + 1] = uVar2;\n                iVar7 = iVar13 + -1;\n                if (-1 < iVar13 + -1) {\n                    do {\n                        iVar3 = uVar5;\n                        if (iVar3 == 0) break;\n                        uVar2 = auStack100[iVar7 + 1] + 1;\n                        if ((uVar2 < auStack100[iVar7 + 1]) || (uVar5 = uVar12,  uVar2 == 0)) {\n                            uVar5 = 1;\n                        }\n                        iVar3 = uVar5;\n                        auStack100[iVar7 + 1] = uVar2;\n                        iVar7 = iVar7 + -1;\n                    } while (-1 < iVar7);\n                }\n            }\n        }\n        auStack100[iVar17 + 1] = auStack100[iVar17 + 1] & -1 << (uVar6 & 0x1f);\n        iVar7 = iVar17 + 1;\n        if (iVar7 < 3) {\n            fcn.0042f6c0(auStack100 + iVar7 + 1, 0, (3 - iVar7) * 4);\n        }\n        iVar17 = iVar11;\n        if (iVar3 != 0) {\n            iVar17 = uVar10 - 0x3ffe;\n        }\n        if (iVar17 < *0x46725c - iVar4) {\n            auStack100[1] = 0;\n            auStack100[2] = 0;\n            uVar12 = 2;\n        }\n        else if (*0x46725c < iVar17) {\n            if (iVar17 < *0x467258) {\n                auStack100[1] = auStack100[1] & 0x7fffffff;\n                iVar15 = *0x46726c + iVar17;\n                uVar10 = *0x467264 >> 0x1f & 0x1f;\n                iVar4 = *0x467264 + uVar10;\n                uVar6 = (iVar4 & 0x1f) - uVar10;\n                uVar5 = uVar12;\n                uVar16 = uVar12;\n                do {\n                    uVar10 = auStack100[uVar5 + 1];\n                    uVar5 = uVar5 + 1;\n                    auStack100[uVar5] = uVar10 >> (uVar6 & 0x1f) | uVar16;\n                    uVar16 = (~(-1 << (uVar6 & 0x1f)) & uVar10) << (0x20 - uVar6 & 0x1f);\n                } while (uVar5 < 3);\n                iVar7 = iVar4 >> 5;\n                iVar14 = 2;\n                puVar8 = auStack100 + (3 - iVar7);\n                do {\n                    if (iVar14 < iVar7) {\n                        auStack100[iVar14 + 1] = 0;\n                    }\n                    else {\n                        auStack100[iVar14 + 1] = *puVar8;\n                    }\n                    puVar8 = puVar8 + -1;\n                    iVar14 = iVar14 + -1;\n                } while (-1 < iVar14);\n            }\n            else {\n                auStack100[1] = 0x80000000;\n                auStack100[2] = 0;\n                auStack100[3] = 0;\n                uVar10 = *0x467264 >> 0x1f & 0x1f;\n                iVar4 = *0x467264 + uVar10;\n                uVar6 = (iVar4 & 0x1f) - uVar10;\n                uVar5 = uVar12;\n                do {\n                    uVar10 = auStack100[uVar12 + 1];\n                    uVar12 = uVar12 + 1;\n                    auStack100[uVar12] = uVar10 >> (uVar6 & 0x1f) | uVar5;\n                    uVar5 = (~(-1 << (uVar6 & 0x1f)) & uVar10) << (0x20 - uVar6 & 0x1f);\n                } while (uVar12 < 3);\n                iVar7 = iVar4 >> 5;\n                iVar14 = 2;\n                puVar8 = auStack100 + (3 - iVar7);\n                do {\n                    if (iVar14 < iVar7) {\n                        auStack100[iVar14 + 1] = 0;\n                    }\n                    else {\n                        auStack100[iVar14 + 1] = *puVar8;\n                    }\n                    puVar8 = puVar8 + -1;\n                    iVar14 = iVar14 + -1;\n                } while (-1 < iVar14);\n                uVar12 = 1;\n                iVar15 = *0x46726c + *0x467258;\n            }\n        }\n        else {\n            auStack100[1] = uStack80;\n            auStack100[2] = uStack76;\n            auStack100[3] = iStack72;\n            uVar10 = *0x46725c - iVar11 >> 0x1f & 0x1f;\n            iVar4 = (*0x46725c - iVar11) + uVar10;\n            uVar6 = (iVar4 & 0x1f) - uVar10;\n            uVar5 = uVar12;\n            uVar16 = uVar12;\n            do {\n                uVar10 = auStack100[uVar5 + 1];\n                uVar5 = uVar5 + 1;\n                auStack100[uVar5] = uVar10 >> (uVar6 & 0x1f) | uVar16;\n                uVar16 = (uVar10 & ~(-1 << (uVar6 & 0x1f))) << (-uVar6 & 0x1f);\n            } while (uVar5 < 3);\n            iVar14 = iVar4 >> 5;\n            iVar7 = 2;\n            puVar8 = auStack100 + (3 - iVar14);\n            do {\n                if (iVar7 < iVar14) {\n                    auStack100[iVar7 + 1] = 0;\n                }\n                else {\n                    auStack100[iVar7 + 1] = *puVar8;\n                }\n                puVar8 = puVar8 + -1;\n                iVar7 = iVar7 + -1;\n            } while (-1 < iVar7);\n            uVar2 = *0x467260 >> 0x1f & 0x1f;\n            uVar10 = *0x467260 + uVar2;\n            iVar4 = uVar10 >> 5;\n            uVar10 = 0x1f - ((uVar10 & 0x1f) - uVar2);\n            uVar6 = uVar10;\n            if ((auStack100[iVar4 + 1] >> (uVar10 & 0x1f) & 1) != 0) {\n                if ((auStack100[iVar4 + 1] & ~(-1 << (uVar6 & 0x1f))) == 0) {\n                    for (iVar7 = iVar4 + 1; iVar7 < 3; iVar7 = iVar7 + 1) {\n                        if (auStack100[iVar7 + 1] != 0) goto code_r0x00443748;\n                    }\n                }\n                else {\ncode_r0x00443748:\n                    uVar10 = *0x467260 + -1 >> 0x1f & 0x1f;\n                    iVar11 = *0x467260 + -1 + uVar10;\n                    iVar15 = iVar11 >> 5;\n                    uVar2 = 1 << (0x1f - ((iVar11 & 0x1f) - uVar10) & 0x1f);\n                    uVar10 = auStack100[iVar15 + 1] + uVar2;\n                    if ((uVar10 < auStack100[iVar15 + 1]) || (uVar5 = uVar12,  uVar10 < uVar2)) {\n                        uVar5 = 1;\n                    }\n                    auStack100[iVar15 + 1] = uVar10;\n                    iVar7 = iVar15 + -1;\n                    if (-1 < iVar15 + -1) {\n                        do {\n                            if (uVar5 == 0) break;\n                            uVar10 = auStack100[iVar7 + 1] + 1;\n                            if ((uVar10 < auStack100[iVar7 + 1]) || (uVar5 = uVar12,  uVar10 == 0)) {\n                                uVar5 = 1;\n                            }\n                            auStack100[iVar7 + 1] = uVar10;\n                            iVar7 = iVar7 + -1;\n                        } while (-1 < iVar7);\n                    }\n                }\n            }\n            auStack100[iVar4 + 1] = auStack100[iVar4 + 1] & -1 << (uVar6 & 0x1f);\n            iVar7 = iVar4 + 1;\n            if (iVar7 < 3) {\n                fcn.0042f6c0(auStack100 + iVar7 + 1, 0, (3 - iVar7) * 4);\n            }\n            uVar10 = *0x467264 + 1 >> 0x1f & 0x1f;\n            iVar4 = *0x467264 + 1 + uVar10;\n            uVar6 = (iVar4 & 0x1f) - uVar10;\n            uVar5 = uVar12;\n            do {\n                uVar10 = auStack100[uVar12 + 1];\n                uVar12 = uVar12 + 1;\n                auStack100[uVar12] = uVar10 >> (uVar6 & 0x1f) | uVar5;\n                uVar5 = (~(-1 << (uVar6 & 0x1f)) & uVar10) << (0x20 - uVar6 & 0x1f);\n            } while (uVar12 < 3);\n            iVar14 = iVar4 >> 5;\n            iVar7 = 2;\n            puVar8 = auStack100 + (3 - iVar14);\n            do {\n                if (iVar7 < iVar14) {\n                    auStack100[iVar7 + 1] = 0;\n                }\n                else {\n                    auStack100[iVar7 + 1] = *puVar8;\n                }\n                puVar8 = puVar8 + -1;\n                iVar7 = iVar7 + -1;\n            } while (-1 < iVar7);\n            iVar15 = 0;\n            uVar12 = 2;\n        }\n    }\n    auStack100[1] = iVar15 << (0x1fU - *0x467264 & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | auStack100[1];\n    if (*0x467268 == 0x40) {\n        arg2[1] = auStack100[1];\n        *arg2 = auStack100[2];\n        return uVar12;\n    }\n    if (*0x467268 == 0x20) {\n        *arg2 = auStack100[1];\n    }\n    return uVar12;\n}\n",
        "token_count": 3338
    },
    "00445750": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044563d)\n\nuint64_t fcn.00445750(int64_t arg1, int64_t arg2, uint64_t arg3)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint64_t uVar3;\n    int64_t iStack40;\n    int64_t iStack32;\n    int64_t iStack24;\n    char cStack16;\n    \n    cStack16 = '\\0';\n    iStack24 = fcn.004323c0();\n    iStack40 = *(iStack24 + 0xc0);\n    iStack32 = *(iStack24 + 0xb8);\n    if ((iStack40 != *0x466a00) && ((*0x466888 & *(iStack24 + 200)) == 0)) {\n        iStack40 = fcn.0043ab60();\n    }\n    if ((iStack32 != *0x466780) && ((*0x466888 & *(iStack24 + 200)) == 0)) {\n        iStack32 = fcn.00439f80();\n    }\n    if ((*(iStack24 + 200) & 2) == 0) {\n        *(iStack24 + 200) = *(iStack24 + 200) | 2;\n        cStack16 = '\\x01';\n    }\n    if (arg3 == 0) {\n        if (cStack16 != '\\0') {\n            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n        }\n        return 0;\n    }\n    if (((arg1 == 0) || (arg2 == 0)) || (0x7fffffff < arg3)) {\n        puVar2 = fcn.0042f5c0();\n        *puVar2 = 0x16;\n        fcn.004359b0(0, 0, 0, 0);\ncode_r0x0044569c:\n        if (cStack16 != '\\0') {\n            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n        }\n        uVar3 = 0x7fffffff;\n    }\n    else {\n        if (*(iStack32 + 8) == 0) {\n            uVar3 = fcn.00446420(arg1, arg2, arg3, 0);\n        }\n        else {\n            iVar1 = fcn.004462e0(&iStack40, *(iStack32 + 0xc), 0x1001, arg1);\n            if (iVar1 == 0) goto code_r0x0044569c;\n            uVar3 = iVar1 - 2;\n        }\n        if (cStack16 != '\\0') {\n            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 644
    },
    "00446e94": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00446e94(int32_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    \n    if (arg1 == NULL) {\ncode_r0x00446ea8:\n        uVar2 = 0x80070057;\n    }\n    else {\n        if (*arg1 != 0) {\n            if (*arg1 != 0x48) goto code_r0x00446ea8;\n            iVar4 = 0;\n            if (0 < arg1[0x10]) {\n                iVar3 = 0;\n                do {\n                    if ((iVar3 < 0) || (arg1[0x10] <= iVar4)) {\n                        (*_sym.imp.KERNEL32.dll_RaiseException)(0xc000008c, 1, 0);\n                        pcVar1 = swi(3);\n                        uVar2 = (*pcVar1)();\n                        return uVar2;\n                    }\n                    (*_sym.imp.USER32.dll_UnregisterClassA)(*(*(arg1 + 0xe) + iVar3));\n                    iVar4 = iVar4 + 1;\n                    iVar3 = iVar3 + 2;\n                } while (iVar4 < arg1[0x10]);\n            }\n            if (*(arg1 + 0xe) != 0) {\n                fcn.0042dcd0(*(arg1 + 0xe));\n                *(arg1 + 0xe) = 0;\n            }\n            arg1[0x10] = 0;\n            arg1[0x11] = 0;\n            (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(arg1 + 2);\n            *arg1 = 0;\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 398
    },
    "00446f80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00446f80(uint *arg1)\n\n{\n    int32_t iVar1;\n    uchar auStack232 [32];\n    uint uStack200;\n    uint32_t uStack196;\n    int32_t iStack192;\n    int32_t iStack184;\n    uint64_t uStack40;\n    \n    uStack40 = *0x465c38 ^ auStack232;\n    fcn.0042f6c0(arg1 + 10, 0, 0x28);\n    *(arg1 + 0x14) = 0;\n    arg1[0x16] = 0;\n    arg1[0x17] = 0;\n    *(arg1 + 4) = 0x400000;\n    *(arg1 + 2) = 0x400000;\n    *arg1 = 0x60;\n    *(arg1 + 6) = 0;\n    fcn.0042f6c0(&uStack200, 0, 0x94);\n    uStack200 = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&uStack200);\n    if (iStack184 == 2) {\n        if (uStack196 < 5) goto code_r0x0044702f;\n    }\n    else if ((iStack184 != 1) || ((uStack196 < 5 && ((uStack196 != 4 || (iStack192 == 0)))))) goto code_r0x0044702f;\n    *(arg1 + 6) = 1;\ncode_r0x0044702f:\n    arg1[7] = 0x800;\n    *(arg1 + 8) = 0x452ef8;\n    iVar1 = fcn.00446e3c(arg1 + 10);\n    if (iVar1 < 0) {\n        *0x4676e8 = 1;\n    }\n    fcn.0042dcb0(uStack40 ^ auStack232);\n    return;\n}\n",
        "token_count": 443
    },
    "00447404": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint fcn.00447404(ulong arg1, ulong arg2, ulong arg3, uint64_t arg4)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    \n    uVar3 = 0xffffffff;\n    piVar4 = fcn.004057c8();\n    iVar5 = fcn.00413c10();\n    piVar1 = *(iVar5 + 8);\n    iVar2 = fcn.004280b0(arg1, arg2, arg3, arg4 & 0xffffffff);\n    if ((iVar2 != 0) && ((piVar1 == NULL || (iVar2 = (**(*piVar1 + 0x120))(piVar1),  iVar2 != 0)))) {\n        iVar2 = (**(*piVar4 + 0xa0))(piVar4);\n        if (iVar2 == 0) {\n            if (piVar4[8] != 0) {\n                (**(*piVar4[8] + 0xc0))();\n            }\n            uVar3 = (**(*piVar4 + 0xd0))(piVar4);\n        }\n        else {\n            uVar3 = (**(*piVar4 + 0xa8))(piVar4);\n        }\n    }\n    fcn.00427380();\n    return uVar3;\n}\n",
        "token_count": 309
    },
    "00402700": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00402700(int64_t arg1)\n\n{\n    uint uVar1;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    uStack40 = 0;\n    uStack36 = 0;\n    uStack32 = 0;\n    uStack28 = 0;\n    uVar1 = 0;\n    fcn.00407f18(arg1 + 0x3b0, 0x50001000, &uStack40, arg1);\n    uStack24 = 0x50;\n    uStack20 = 0xa0;\n    uStack16 = 0xf0;\n    uStack12 = 0xffffffff;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(arg1 + 0x3f0), 0x404, 4, &uStack24, uVar1);\n    return;\n}\n",
        "token_count": 226
    },
    "00402780": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00402780(int64_t arg1)\n\n{\n    ulong uVar1;\n    uchar auStack120 [32];\n    uint uStack88;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar uStack48;\n    uchar uStack47;\n    ulong uStack32;\n    uint64_t uStack24;\n    \n    uStack24 = *0x465c38 ^ auStack120;\n    uVar1 = 0;\n    uStack72 = 0;\n    uStack68 = 0;\n    uStack64 = 0;\n    uStack60 = 0;\n    uStack88 = 0;\n    fcn.00407e60(arg1 + 0x2f0, 0x50800800, &uStack72, arg1);\n    if (arg1 != -0x398) {\n        uVar1 = *(arg1 + 0x3a0);\n    }\n    uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(arg1 + 0x330), 0x430, 0, uVar1);\n    fcn.00408728(uVar1);\n    uStack56 = 0;\n    uStack32 = 0;\n    uStack48 = 4;\n    uStack47 = 0;\n    uStack52 = 0x8004;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(arg1 + 0x330), 0x414, 1, &uStack56);\n    uStack56 = 1;\n    uStack52 = 0x8003;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(arg1 + 0x330), 0x414, 1, &uStack56);\n    fcn.0042dcb0(uStack24 ^ auStack120);\n    return;\n}\n",
        "token_count": 424
    },
    "004070b8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong * fcn.004070b8(ulong *arg1, uint64_t arg2, ulong arg3)\n\n{\n    fcn.0040b9b0(arg1);\n    *arg1 = 0x44ac18;\n    fcn.0042f6c0(arg1 + 0x15, 0, 0x40);\n    arg1[0x1a] = arg3;\n    arg1[0x16] = arg2 & 0xffff;\n    *(arg1 + 0x15) = arg2;\n    return arg1;\n}\n",
        "token_count": 127
    },
    "0040ce70": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0040ce70(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    int64_t arg1_00;\n    uint64_t X;\n    uint32_t uVar6;\n    uint32_t uStack136;\n    uint32_t uStack132;\n    int32_t iStack128;\n    int32_t iStack124;\n    int32_t iStack120;\n    int32_t iStack116;\n    int32_t iStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    int32_t iStack100;\n    int32_t iStack96;\n    int32_t iStack92;\n    uint auStack88 [5];\n    uchar auStack68 [36];\n    uint64_t Y;\n    \n    uVar1 = fcn.0041185c(arg1);\n    arg1_00 = 0;\n    if (arg2 == 0) {\n        if ((uVar1 >> 0x1e & 1) == 0) {\n            iVar4 = (*_sym.imp.USER32.dll_GetWindow)(*(arg1 + 0x40), 4);\n        }\n        else {\n            iVar4 = (*_sym.imp.USER32.dll_GetParent)();\n        }\n        if ((iVar4 != 0) && (iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(iVar4, 0x36b),  iVar2 != 0)) {\n            iVar4 = iVar2;\n        }\n    }\n    else {\n        iVar4 = *(arg2 + 0x40);\n    }\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(arg1 + 0x40), &iStack120);\n    if ((uVar1 >> 0x1e & 1) == 0) {\n        if ((iVar4 != 0) &&\n           ((uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar4, 0xfffffff0),  (uVar1 >> 0x1c & 1) == 0 ||\n            ((uVar1 >> 0x1d & 1) != 0)))) {\n            iVar4 = arg1_00;\n        }\n        auStack88[0] = 0x28;\n        if (iVar4 == 0) {\n            piVar3 = fcn.004057c8();\n            iVar4 = arg1_00;\n            if (piVar3 != NULL) {\n                iVar4 = (**(*piVar3 + 0xe8))(piVar3);\n            }\n            if (iVar4 != 0) {\n                arg1_00 = *(iVar4 + 0x40);\n            }\n            uVar5 = fcn.0040a100(arg1_00, 1);\n            fcn.0040a178(uVar5, auStack88);\n            (*_sym.imp.USER32.dll_CopyRect)(&iStack104, auStack68);\n        }\n        else {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar4, &iStack104);\n            uVar5 = fcn.0040a100(iVar4, 2);\n            fcn.0040a178(uVar5, auStack88);\n        }\n        (*_sym.imp.USER32.dll_CopyRect)();\n    }\n    else {\n        uVar5 = (*_sym.imp.USER32.dll_GetParent)(*(arg1 + 0x40));\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar5, &uStack136);\n        (*_sym.imp.USER32.dll_GetClientRect)(iVar4, &iStack104);\n        (*_sym.imp.USER32.dll_MapWindowPoints)();\n    }\n    uVar1 = (iStack96 + iStack104) / 2 - (iStack112 - iStack120) / 2;\n    X = uVar1;\n    uVar6 = (iStack92 + iStack100) / 2 - (iStack108 - iStack116) / 2;\n    Y = uVar6;\n    if (uVar1 < uStack136) {\n        X = uStack136;\n    }\n    else if (iStack128 < (iStack112 - iStack120) + uVar1) {\n        X = (iStack120 - iStack112) + iStack128;\n    }\n    if (uVar6 < uStack132) {\n        Y = uStack132;\n    }\n    else if (iStack124 < (iStack108 - iStack116) + uVar6) {\n        Y = (iStack116 - iStack108) + iStack124;\n    }\n    fcn.00411bd4(arg1, 0, X, Y);\n    return;\n}\n",
        "token_count": 1046
    },
    "00414108": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint64_t fcn.00414108(int64_t arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t aiStackX8 [4];\n    \n    fcn.004117e8(*(arg1 + 8), arg2, aiStackX8);\n    if ((aiStackX8[0] == 0) && (iVar2 = fcn.00411788(*(arg1 + 8)),  iVar2 == 0)) {\n        fcn.00412c84();\n        pcVar1 = swi(3);\n        iVar2 = (*pcVar1)();\n        return iVar2;\n    }\n    *(arg1 + 0x10) = arg2;\n    *(arg1 + 0x14) = 0;\n    return aiStackX8[0];\n}\n",
        "token_count": 183
    },
    "00414848": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00414848(int64_t hdc, uint *arg2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint32_t uStackX8;\n    uint32_t uStackX12;\n    uint32_t uStackX16;\n    uint32_t uStackX20;\n    \n    (*_sym.imp.GDI32.dll_GetWindowExtEx)(*(hdc + 0x10), &uStackX8);\n    (*_sym.imp.GDI32.dll_GetViewportExtEx)(*(hdc + 0x10), &uStackX16);\n    uVar1 = fcn.00430340(uStackX8);\n    uVar2 = fcn.00430340(uStackX16);\n    uVar1 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg2, uVar2, uVar1);\n    *arg2 = uVar1;\n    uVar1 = fcn.00430340(uStackX12);\n    uVar2 = fcn.00430340(uStackX20);\n    uVar1 = (*_sym.imp.KERNEL32.dll_MulDiv)(arg2[1], uVar2, uVar1);\n    arg2[1] = uVar1;\n    return;\n}\n",
        "token_count": 272
    },
    "004148c4": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.004148c4(int64_t hdc, uint *arg2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint32_t uStackX8;\n    uint32_t uStackX12;\n    uint32_t uStackX16;\n    uint32_t uStackX20;\n    \n    (*_sym.imp.GDI32.dll_GetWindowExtEx)(*(hdc + 0x10), &uStackX16);\n    (*_sym.imp.GDI32.dll_GetViewportExtEx)(*(hdc + 0x10), &uStackX8);\n    uVar1 = fcn.00430340(uStackX8);\n    uVar2 = fcn.00430340(uStackX16);\n    uVar1 = (*_sym.imp.KERNEL32.dll_MulDiv)(*arg2, uVar2, uVar1);\n    *arg2 = uVar1;\n    uVar1 = fcn.00430340(uStackX12);\n    uVar2 = fcn.00430340(uStackX20);\n    uVar1 = (*_sym.imp.KERNEL32.dll_MulDiv)(arg2[1], uVar2, uVar1);\n    arg2[1] = uVar1;\n    return;\n}\n",
        "token_count": 273
    },
    "00417578": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00417578(uint64_t lpBuffer, int64_t arg2, ulong arg3)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int64_t *piVar6;\n    int64_t iVar7;\n    int32_t iVar8;\n    uchar auStack488 [32];\n    uchar *puStack456;\n    uint32_t *puStack448;\n    ulong uStack440;\n    int32_t iStack432;\n    uint32_t auStack424 [2];\n    int64_t iStack416;\n    uint64_t uStack408;\n    uchar auStack400 [8];\n    ulong uStack392;\n    uchar auStack332 [276];\n    uint64_t uStack56;\n    \n    uStack392 = 0xfffffffffffffffe;\n    uStack56 = *0x465c38 ^ auStack488;\n    if (lpBuffer == 0) {\n        fcn.00412ca8();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (arg2 == 0) {\n        fcn.00412ca8();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    uVar4 = (*_sym.imp.KERNEL32.dll_GetFullPathNameA)(arg2, 0x104, lpBuffer, &uStack408);\n    if (uVar4 == 0) {\n        iVar5 = fcn.00430150(lpBuffer, 0x104, arg2, 0xffffffffffffffff);\n        if (iVar5 != 0) {\n            if (iVar5 == 0xc) {\n                fcn.00412c60();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if ((iVar5 == 0x16) || (iVar5 == 0x22)) {\n                fcn.00412ca8();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if (iVar5 != 0x50) {\n                fcn.00412ca8();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.00417528(arg3, arg2);\n        goto code_r0x00417812;\n    }\n    if (0x103 < uVar4) goto code_r0x00417812;\n    piVar6 = fcn.00413fdc();\n    if (piVar6 == NULL) {\n        fcn.00401cd0(0x80004005);\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    iStack416 = (**(*piVar6 + 0x18))(piVar6);\n    iStack416 = iStack416 + 0x18;\n    fcn.0041720c(lpBuffer, &iStack416);\n    iVar3 = iStack416;\n    iVar5 = (*_sym.imp.SHLWAPI.dll_PathIsUNCA)(iStack416);\n    if (iVar5 == 0) {\n        uStack440 = 0;\n        puStack448 = auStack424;\n        puStack456 = auStack400;\n        iStack432 = iVar5;\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationA)(iVar3, 0, 0, 0);\n        if (iVar5 == 0) {\n            fcn.00417528(arg3, arg2);\n            LOCK();\n            piVar1 = iVar3 + -8;\n            iVar5 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar5 + -1 < 1) {\n                (**(**(iVar3 + -0x18) + 8))();\n            }\n            goto code_r0x00417812;\n        }\n        if ((auStack424[0] & 2) == 0) {\n            (*_sym.imp.USER32.dll_CharUpperA)(lpBuffer);\n        }\n        if (((auStack424[0] & 4) == 0) && (iVar7 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(arg2),  iVar7 != -1)) {\n            (*_sym.imp.KERNEL32.dll_FindClose)(iVar7);\n            if ((uStack408 == 0) || (uStack408 <= lpBuffer)) {\n                LOCK();\n                piVar1 = iVar3 + -8;\n                iVar5 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar5 + -1 < 1) {\n                    (**(**(iVar3 + -0x18) + 8))();\n                }\n                goto code_r0x00417812;\n            }\n            iVar5 = (*_sym.imp.KERNEL32.dll_lstrlenA)(auStack332);\n            iVar8 = uStack408 - lpBuffer;\n            if (0x103 < iVar5 + iVar8) {\ncode_r0x004177ab:\n                LOCK();\n                piVar1 = iVar3 + -8;\n                iVar5 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar5 + -1 < 1) {\n                    (**(**(iVar3 + -0x18) + 8))();\n                }\n                goto code_r0x00417812;\n            }\n            iVar5 = fcn.0042f3a0(uStack408, 0x104 - iVar8, auStack332);\n            if (iVar5 != 0) {\n                if (iVar5 == 0xc) {\n                    fcn.00412c60();\n                    goto code_r0x004177ab;\n                }\n                if ((iVar5 == 0x16) || (iVar5 == 0x22)) {\n                    fcn.00412ca8();\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n                if (iVar5 != 0x50) {\n                    fcn.00412ca8();\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n            }\n        }\n    }\n    LOCK();\n    piVar1 = iVar3 + -8;\n    iVar5 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar5 + -1 < 1) {\n        (**(**(iVar3 + -0x18) + 8))();\n    }\ncode_r0x00417812:\n    fcn.0042dcb0(uStack56 ^ auStack488);\n    return;\n}\n",
        "token_count": 1466
    },
    "00417c50": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.00417c50(int64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    uint32_t *arg1_00;\n    ulong uVar5;\n    \n    *(arg1 + 1) = arg3;\n    if (arg3 <= arg3 + 0x40) {\n        iVar4 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40);\n        *arg1 = iVar4;\n        if (iVar4 != 0) {\n            arg1_00 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar4);\n            iVar2 = fcn.0042e220(arg1_00, *(arg1 + 1), arg2, *(arg1 + 1));\n            if (iVar2 != 0) {\n                if (iVar2 == 0xc) {\n                    fcn.00412c60();\n                    pcVar1 = swi(3);\n                    uVar5 = (*pcVar1)();\n                    return uVar5;\n                }\n                if ((iVar2 == 0x16) || (iVar2 == 0x22)) {\n                    fcn.00412ca8();\n                    pcVar1 = swi(3);\n                    uVar5 = (*pcVar1)();\n                    return uVar5;\n                }\n                if (iVar2 != 0x50) {\n                    fcn.00412ca8();\n                    pcVar1 = swi(3);\n                    uVar5 = (*pcVar1)();\n                    return uVar5;\n                }\n            }\n            if (*(arg1_00 + 2) == -1) {\n                uVar3 = arg1_00[3];\n            }\n            else {\n                uVar3 = *arg1_00;\n            }\n            *(arg1 + 0xc) = ~(uVar3 >> 6) & 1;\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*arg1);\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 454
    },
    "0041c20c": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0041c20c(int64_t arg1)\n\n{\n    ulong *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t *apiStackX8 [4];\n    \n    fcn.0042f6c0(arg1 + 0xb8, 0, 0x18);\n    puVar1 = *(arg1 + 0x80);\n    *(arg1 + 0xb8) = 0x18;\n    apiStackX8[0] = NULL;\n    if (puVar1 == NULL) {\n        fcn.00412ca8();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    iVar3 = (***puVar1)(puVar1, 0x4528a0, apiStackX8);\n    if (-1 < iVar3) {\n        (**(*apiStackX8[0] + 0x18))(apiStackX8[0], arg1 + 0xb8);\n        (**(*apiStackX8[0] + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 248
    },
    "0041f7b4": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0041f7b4(int64_t **arg1)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    ushort uVar5;\n    int64_t *apiStackX8 [4];\n    \n    if ((*(arg1 + 0xc) != -0x7ffeffff) && (piVar1 = *arg1,  piVar1 != NULL)) {\n        if (piVar1[0x10] == 0) {\n            fcn.00412ca8();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        iVar3 = (***piVar1[0x10])(piVar1[0x10], 0x452730, apiStackX8);\n        if (iVar3 < 0) {\n            iVar4 = fcn.0041d1b8(arg1);\n            if (iVar4 != 0) {\n                uVar5 = 0xd;\n                if (arg1[2][0x1b] != 0) {\n                    uVar5 = 0x800d;\n                }\n                (**(**arg1 + 0xe0))(*arg1, *(arg1 + 0xc), uVar5, iVar4);\n            }\n        }\n        else {\n            (**(*apiStackX8[0] + 0x18))(apiStackX8[0], *(arg1 + 0xc), arg1[2] != NULL, arg1 + 3);\n            (**(*apiStackX8[0] + 0x10))();\n        }\n    }\n    return;\n}\n",
        "token_count": 368
    },
    "00421518": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00421518(ulong noname_0, ulong *arg2, ulong arg3, int32_t *arg4)\n\n{\n    int16_t *piVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    uint32_t uVar6;\n    uint32_t in_stack_00000028;\n    uchar auStack152 [32];\n    int64_t **ppiStack120;\n    int64_t *piStack104;\n    int64_t *piStack96;\n    uint uStack88;\n    ulong uStack80;\n    ulong uStack68;\n    ulong uStack60;\n    uint64_t uStack48;\n    \n    uStack48 = *0x465c38 ^ auStack152;\n    if ((arg2 != NULL) && (arg4 != NULL)) {\n        piStack96 = NULL;\n        iVar3 = (***arg2)(arg2, 0x44e758, &piStack96);\n        if (in_stack_00000028 != 0) {\n            fcn.0042f6c0(arg4, 0, in_stack_00000028 << 2);\n        }\n        if (-1 < iVar3) {\n            ppiStack120 = &piStack104;\n            uStack88 = 0;\n            piStack104 = NULL;\n            uStack68 = *0x452ed8;\n            uStack60 = *0x452ee0;\n            uStack80 = arg3;\n            iVar3 = (**(*piStack96 + 0x18))(*0x452ed8);\n            if (-1 < iVar3) {\n                uVar6 = 0;\n                iVar5 = 0;\n                while( true ) {\n                    uVar4 = in_stack_00000028;\n                    if (*(piStack104 + 1) < in_stack_00000028) {\n                        uVar4 = *(piStack104 + 1);\n                    }\n                    iVar2 = *piStack104;\n                    if (uVar4 <= uVar6) break;\n                    piVar1 = iVar2 + 0x38 + iVar5;\n                    uVar6 = uVar6 + 1;\n                    iVar5 = iVar5 + 0x48;\n                    *arg4 = *piVar1;\n                    arg4 = arg4 + 1;\n                }\n                if (iVar2 != 0) {\n                    (*_sym.imp.ole32.dll_CoTaskMemFree)(iVar2);\n                }\n            }\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(piStack104);\n        }\n        if (piStack96 != NULL) {\n            (**(*piStack96 + 0x10))();\n        }\n    }\n    fcn.0042dcb0(uStack48 ^ auStack152);\n    return;\n}\n",
        "token_count": 613
    },
    "004222d4": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004222d4(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    uint64_t uVar4;\n    int64_t *piVar5;\n    ulong *puVar6;\n    code *pcVar7;\n    int32_t iVar8;\n    int64_t **ppiVar9;\n    int64_t arg1_00;\n    int64_t **ppiVar10;\n    int64_t **ppiVar11;\n    ulong noname_1;\n    int64_t **ppiVar12;\n    uint32_t uVar13;\n    int64_t arg3;\n    uchar auStack328 [32];\n    ulong uStack296;\n    ulong uStack288;\n    int64_t *piStack280;\n    int64_t **ppiStack272;\n    int64_t *piStack264;\n    int64_t **ppiStack256;\n    uint uStack248;\n    int64_t iStack240;\n    int64_t iStack232;\n    ulong uStack224;\n    int64_t **ppiStack216;\n    ulong uStack208;\n    uchar auStack200 [32];\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uchar auStack144 [32];\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint64_t uStack88;\n    \n    uStack208 = 0xfffffffffffffffe;\n    uStack88 = *0x465c38 ^ auStack328;\n    iVar1 = arg1[5];\n    iVar2 = arg1[4];\n    ppiVar12 = NULL;\n    if (arg1[0x12] == 0) {\n        piVar5 = arg1[2];\n        if ((piVar5 == NULL) || (iVar8 = (**(*piVar5 + 0x18))(piVar5, 0x452770, &piStack280, &ppiStack272),  iVar8 < 0))\n        goto code_r0x00422780;\n        fcn.0041d09c(arg1, auStack200, 0x452e28);\n        uStack168 = 0;\n        uStack164 = 0;\n        uStack156 = 0x20;\n        uStack160 = 0xffffffff;\n        uStack152 = 0;\n        uStack148 = 0x1fb;\n        fcn.0041d09c(arg1, auStack144, 0x452e08);\n        uStack112 = 0x28;\n        uStack108 = 0;\n        uStack100 = 0x30;\n        uStack104 = 0xffffffff;\n        uStack96 = 0;\n        uStack92 = 0x1e;\n        uStack296 = uStack296._4_4_ << 0x20;\n        iVar8 = (**(*piStack280 + 0x20))(piStack280, 2, auStack200);\n        if (iVar8 < 0) {\n            (**(*piStack280 + 0x10))();\n            goto code_r0x00422780;\n        }\n        ppiStack256 = ppiStack272;\n        uStack248 = 1;\n        iStack240 = 0;\n        iStack232 = 0;\n        uStack224 = 0;\n        iVar8 = (**(*piStack280 + 0x30))(piStack280, 0, &ppiStack256);\n        if (iVar8 < 0) {\n            (**(*piStack280 + 0x10))();\n            goto code_r0x00422780;\n        }\n        arg1[5] = iStack240;\n        ppiStack272 = ppiStack216;\n        arg1[0xd] = iStack232;\n        arg1[4] = ppiStack216;\n        (**(*piStack280 + 0x10))();\n    }\n    else {\n        iVar8 = (**(*arg1[0x13] + 0x28))(arg1[0x13], 0x452900, &piStack264);\n        if (iVar8 < 0) goto code_r0x00422780;\n        iVar8 = (***piStack264)(piStack264, 0x4528e0, &ppiStack272);\n        if (-1 < iVar8) {\n            piStack280 = NULL;\n            iVar8 = (*(*ppiStack272)[4])(ppiStack272, 0x452a20, &piStack280);\n            if (-1 < iVar8) {\n                (**(*piStack280 + 0x28))(piStack280, arg1[1] + 0x178, arg1 + 0x16);\n                (**(*piStack280 + 0x10))();\n            }\n            (*(*ppiStack272)[2])();\n        }\n        ppiVar9 = fcn.00403cc0(0x28);\n        piVar5 = piStack264;\n        ppiVar11 = ppiVar12;\n        ppiStack272 = ppiVar9;\n        if (ppiVar9 != NULL) {\n            *ppiVar9 = NULL;\n            ppiVar9[1] = NULL;\n            ppiVar9[4] = NULL;\n            ppiVar9[2] = NULL;\n            ppiVar9[3] = NULL;\n            ppiVar11 = ppiVar9;\n            if (*ppiVar9 != piStack264) {\n                if (piStack264 != NULL) {\n                    (**(*piStack264 + 8))(piStack264);\n                }\n                if (*ppiVar9 != NULL) {\n                    (**(**ppiVar9 + 0x10))();\n                }\n                *ppiVar9 = piVar5;\n            }\n        }\n        arg1[0x14] = ppiVar11;\n        (**(*piStack264 + 0x10))();\n        puVar3 = *arg1[0x14];\n        if (puVar3 != NULL) {\n            (***puVar3)(puVar3, 0x44e778, arg1[0x14] + 1);\n        }\n        ppiVar9 = fcn.00403cc0(0x48);\n        ppiVar11 = ppiVar12;\n        if (ppiVar9 != NULL) {\n            *ppiVar9 = NULL;\n            *(ppiVar9 + 1) = 0;\n            ppiVar9[2] = NULL;\n            ppiVar9[3] = NULL;\n            ppiVar9[5] = NULL;\n            ppiVar9[6] = NULL;\n            *(ppiVar9 + 0x3c) = 0;\n            ppiVar9[8] = 0x1f40;\n            ppiVar9[4] = NULL;\n            ppiVar11 = ppiVar9;\n        }\n        arg1[0x15] = ppiVar11;\n        fcn.00421658(ppiVar11, *arg1[0x14]);\n        *(arg1[0x14] + 0x10) = arg1[0x15];\n        uVar4 = *(arg1[0x15] + 0x18);\n        arg1[4] = uVar4;\n        if (0x1ffffff < uVar4) goto code_r0x00422780;\n        arg1_00 = (*_sym.imp.ole32.dll_CoTaskMemAlloc)();\n        arg1[5] = arg1_00;\n        if (arg1_00 == 0) {\n            fcn.00412c60();\n            pcVar7 = swi(3);\n            (*pcVar7)();\n            return;\n        }\n        arg3 = arg1[4] << 6;\n        noname_1 = 0;\n        fcn.0042f6c0(arg1_00, 0, arg3);\n        fcn.00421450(arg1[0x14], noname_1, arg3);\n        ppiVar11 = arg1[0x14] + 3;\n        if (*ppiVar11 != NULL) {\n            piVar5 = *arg1[0x14];\n            uStack288 = 0;\n            uStack296 = 0;\n            (**(*piVar5 + 0x30))(piVar5, 1, ppiVar11, 0);\n            *ppiVar11 = NULL;\n        }\n    }\n    ppiVar11 = ppiVar12;\n    ppiVar9 = ppiVar12;\n    if (0 < arg1[4]) {\n        do {\n            ppiStack272 = fcn.00403cc0(0x38);\n            ppiVar10 = ppiVar12;\n            if (ppiStack272 != NULL) {\n                ppiVar10 = fcn.00426ee8(ppiStack272, 10);\n            }\n            *(ppiVar9 + arg1[5] + 0x38) = ppiVar10;\n            uVar13 = ppiVar11 + 1;\n            ppiVar11 = uVar13;\n            ppiVar9 = ppiVar9 + 8;\n        } while (uVar13 < arg1[4]);\n    }\n    if (iVar1 != 0) {\n        if (0 < iVar2) {\n            ppiVar11 = iVar1 + 0x38;\n            do {\n                puVar3 = (*ppiVar11)[1];\n                while (puVar3 != NULL) {\n                    if (puVar3 == NULL) {\n                        fcn.00412ca8();\n                        pcVar7 = swi(3);\n                        (*pcVar7)();\n                        return;\n                    }\n                    puVar6 = *puVar3;\n                    (**(*arg1 + 0x10))(arg1, puVar3[2], 1);\n                    puVar3 = puVar6;\n                }\n                fcn.00426db8(*ppiVar11);\n                piVar5 = *ppiVar11;\n                if (piVar5 != NULL) {\n                    (**(*piVar5 + 8))(piVar5, 1);\n                }\n                uVar13 = ppiVar12 + 1;\n                ppiVar12 = uVar13;\n                ppiVar11 = ppiVar11 + 8;\n            } while (uVar13 < iVar2);\n        }\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(iVar1);\n    }\ncode_r0x00422780:\n    fcn.0042dcb0(uStack88 ^ auStack328);\n    return;\n}\n",
        "token_count": 2348
    },
    "004279e8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nushort * fcn.004279e8(ushort *arg1, int64_t lpString)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    int64_t iVar5;\n    ushort *puVar6;\n    int16_t in_R8W;\n    ulong auStack608 [3];\n    int64_t aiStack584 [71];\n    \n    *arg1 = 8;\n    *(arg1 + 4) = 0;\n    if (lpString != 0) {\n        if (in_R8W == 0xe) {\n            uVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n            iVar5 = (*_sym.imp.OLEAUT32.dll_DllRegisterServer)(lpString, uVar4);\n            *(arg1 + 4) = iVar5;\n            if (iVar5 == 0) {\n                fcn.00412c60();\n                pcVar3 = swi(3);\n                puVar6 = (*pcVar3)();\n                return puVar6;\n            }\n        }\n        else {\n            iVar5 = fcn.00427940(auStack608, lpString);\n            iVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocStringLen)(*(iVar5 + 0x18), *(*(iVar5 + 0x18) + -0x10));\n            if (iVar5 == 0) {\n                fcn.004125c4();\n                pcVar3 = swi(3);\n                puVar6 = (*pcVar3)();\n                return puVar6;\n            }\n            *(arg1 + 4) = iVar5;\n            auStack608[0] = 0x44f5a0;\n            fcn.004125d4(aiStack584);\n            LOCK();\n            piVar1 = aiStack584[0] + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 + -1 < 1) {\n                (**(**(aiStack584[0] + -0x18) + 8))();\n            }\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 484
    },
    "00427dc0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00427dc0(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    ulong auStackX24 [2];\n    \n    auStackX24[0] = arg3;\n    fcn.00427cc8(noname_0, noname_1, auStackX24, 1);\n    return;\n}\n",
        "token_count": 79
    },
    "004287fc": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong * fcn.004287fc(ulong *arg1, ulong lpFileTime, ulong arg3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ulong *puVar3;\n    ulong uVar4;\n    uchar auStackX32 [8];\n    ulong uStack56;\n    uint16_t uStack48;\n    uint16_t uStack46;\n    uint16_t uStack42;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)(lpFileTime, auStackX32);\n    if (iVar2 == 0) {\n        *arg1 = 0;\n        fcn.00401cd0(0x80070057);\n        pcVar1 = swi(3);\n        puVar3 = (*pcVar1)();\n        return puVar3;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)();\n    if (iVar2 == 0) {\n        *arg1 = 0;\n        fcn.00401cd0(0x80070057);\n        pcVar1 = swi(3);\n        puVar3 = (*pcVar1)();\n        return puVar3;\n    }\n    uVar4 = 0;\n    if (0x76b < uStack48) {\n        fcn.00428718(&uStack56, uStack48, uStack46, uStack42);\n        uVar4 = uStack56;\n    }\n    *arg1 = uVar4;\n    return arg1;\n}\n",
        "token_count": 330
    },
    "0042d024": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nulong fcn.0042d024(int64_t arg1)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uint uVar3;\n    int64_t aiStackX8 [4];\n    \n    if (*(arg1 + 0xd0) == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = *(*(arg1 + 0xd0) + 0x40);\n    }\n    uVar2 = fcn.00406bcc(uVar2, aiStackX8);\n    *(arg1 + 0xf8) = uVar2;\n    fcn.0040fad0(arg1);\n    iVar1 = sub.oledlg.dll_OleUIBusyA(arg1 + 0xf0);\n    fcn.0040d820();\n    fcn.0040d7d4(arg1);\n    if (aiStackX8[0] != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(aiStackX8[0], 1);\n    }\n    uVar2 = 2;\n    if (iVar1 != 2) {\n        if (iVar1 == 0x75) {\n            *(arg1 + 0x140) = 1;\n        }\n        else if (iVar1 == 0x76) {\n            *(arg1 + 0x140) = 2;\n        }\n        else if (iVar1 == 0x77) {\n            *(arg1 + 0x140) = 3;\n        }\n        else {\n            *(arg1 + 0xe8) = iVar1;\n            uVar3 = 0xffffffff;\n            if (iVar1 == 1) {\n                uVar3 = 1;\n            }\n            *(arg1 + 0x140) = uVar3;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 411
    },
    "00405618": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00405618(ulong noname_0, ulong arg2)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint uVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int64_t iVar8;\n    uint16_t uVar9;\n    uint8_t *puVar10;\n    int32_t iVar11;\n    uchar auStack232 [32];\n    uchar *puStack200;\n    uchar auStack184 [128];\n    uint64_t uStack56;\n    ulong var_4h;\n    \n    uStack56 = *0x465c38 ^ auStack232;\n    uVar3 = (*_sym.imp.USER32.dll_GetMenuCheckMarkDimensions)();\n    iVar6 = uVar3;\n    iVar7 = uVar3 >> 0x10;\n    if ((4 < iVar6) && (iVar8 = 5,  5 < iVar7)) {\n        if (0x20 < iVar6) {\n            iVar6 = 0x20;\n        }\n        iVar5 = iVar6 + 0xf >> 4;\n        iVar11 = (iVar5 * 0x10 + (iVar6 + -4) / 2) - iVar6;\n        if (0xc < iVar11) {\n            iVar11 = 0xc;\n        }\n        if (0x20 < iVar7) {\n            iVar7 = 0x20;\n        }\n        fcn.0042f6c0(auStack184, 0xff, 0x80);\n        puVar10 = 0x44a8d0;\n        puVar4 = auStack184 + (iVar7 + -6 >> 1) * iVar5 * 2;\n        do {\n            uVar1 = *puVar10;\n            puVar10 = puVar10 + 1;\n            uVar9 = ~(uVar1 << (iVar11 & 0x1f));\n            puVar4[1] = uVar9;\n            *puVar4 = uVar9 >> 8;\n            puVar4 = puVar4 + iVar5 * 2;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n        puStack200 = auStack184;\n        *0x46aff0 = (*_sym.imp.GDI32.dll_CreateBitmap)(iVar6, iVar7, 1);\n        if (*0x46aff0 == 0) {\n            *0x46aff0 = (*_sym.imp.USER32.dll_LoadBitmapA)(0, 0x7fe3);\n        }\n        fcn.0042dcb0(uStack56 ^ auStack232);\n        return;\n    }\n    fcn.00412ca8();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 640
    },
    "0040d5a8": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint64_t fcn.0040d5a8(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int64_t iVar3;\n    \n    iVar3 = fcn.00415eb0(0x46aaa8, 0x405abc);\n    if (iVar3 == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        iVar3 = (*pcVar1)();\n        return iVar3;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetMessageTime)();\n    *(iVar3 + 0xb8) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetMessagePos)();\n    *(iVar3 + 0xbc) = CONCAT44(uVar2 >> 0x10, uVar2);\n    return iVar3 + 0x98;\n}\n",
        "token_count": 189
    },
    "004109ac": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint64_t fcn.004109ac(ulong arg1, ulong arg2, ulong arg3, int64_t arg4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t *in_stack_00000028;\n    uchar auStack40 [8];\n    int64_t iStack32;\n    int32_t iStack24;\n    \n    if (arg2 < 0x2b) {\ncode_r0x004109fa:\n        if (arg2 - 0x132 < 7) {\n            iStack24 = arg2 - 0x132;\n            iStack32 = arg3;\n            uVar1 = fcn.0040fda4(arg1, 0xbc19, 0, auStack40);\n            return -(*in_stack_00000028 != 0) & uVar1;\n        }\ncode_r0x00410ad6:\n        uVar3 = 0;\n    }\n    else {\n        if ((0x2f < arg2) && (arg2 != 0x39)) {\n            if (arg2 == 0x4e) {\n                iStack32 = arg4;\n                uVar3 = fcn.00405180(arg1, 0, *(arg4 + 0x10) | 0xbc4e0000, auStack40);\n                return uVar3;\n            }\n            if (arg2 == 0x111) {\n                iVar2 = fcn.00405180(arg1, 0, arg3 >> 0x10 | 0xbd110000, 0);\n                if (iVar2 != 0) {\n                    if (in_stack_00000028 == NULL) {\n                        return 1;\n                    }\n                    *in_stack_00000028 = 1;\n                    return 1;\n                }\n                goto code_r0x00410ad6;\n            }\n            if ((arg2 < 0x114) || ((0x115 < arg2 && (arg2 != 0x210)))) goto code_r0x004109fa;\n        }\n        uVar3 = fcn.0040fda4(arg1, arg2 + 0xbc00, arg3, arg4);\n    }\n    return uVar3;\n}\n",
        "token_count": 494
    },
    "00425ac0": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint64_t fcn.00425ac0(int64_t hWnd)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    \n    uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(hWnd + 0x40), 0x400, 0, 0);\n    uVar2 = 1;\n    if (uVar1 >> 0x10 == 0x534b) {\n        uVar2 = uVar1 & 0xffff;\n    }\n    return uVar2;\n}\n",
        "token_count": 119
    },
    "004090c0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.004090c0(int64_t arg1, int64_t arg2, uint64_t arg3)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    \n    if ((arg3 != 0) && (arg2 == 0)) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if ((~*(arg1 + 0x20) & 1) == 0) {\n        if (arg3 != 0) {\n            do {\n                uVar4 = 0xfffffff;\n                if (arg3 < 0xfffffff) {\n                    uVar4 = arg3 & 0xffffffff;\n                }\n                uVar3 = uVar4 * 8;\n                uVar2 = fcn.00419048(arg1, arg2, uVar3);\n                if (uVar2 != uVar3) {\n                    fcn.00418f70(3, 0);\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n                arg2 = arg2 + uVar4 * 8;\n                arg3 = arg3 - uVar4;\n            } while (arg3 != 0);\n        }\n    }\n    else if (arg3 != 0) {\n        do {\n            uVar4 = 0xfffffff;\n            if (arg3 < 0xfffffff) {\n                uVar4 = arg3 & 0xffffffff;\n            }\n            fcn.00419564(arg1, arg2, uVar4 << 3);\n            arg2 = arg2 + uVar4 * 8;\n            arg3 = arg3 - uVar4;\n        } while (arg3 != 0);\n    }\n    return;\n}\n",
        "token_count": 409
    },
    "004121b4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.004121b4(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    bool bVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    int64_t *piVar8;\n    int64_t *piVar9;\n    int64_t *piVar10;\n    \n    iVar1 = *arg1;\n    piVar9 = arg1[1];\n    bVar5 = false;\n    do {\n        if (((piVar9 == NULL) || (piVar9 = *piVar9,  piVar9 == NULL)) ||\n           (uVar6 = fcn.00411b40(piVar9[2]),  (uVar6 >> 0x11 & 1) != 0)) {\n            piVar2 = arg1[1];\n            iVar3 = *arg1;\n            piVar10 = piVar2;\n            if (piVar2 == NULL) {\ncode_r0x0041221b:\n                piVar9 = piVar2;\n            }\n            else {\n                do {\n                    piVar8 = piVar2;\n                    uVar6 = fcn.00411b40(piVar8[2]);\n                    piVar9 = piVar8;\n                    if ((uVar6 >> 0x11 & 1) != 0) break;\n                    piVar9 = piVar8[1];\n                    piVar2 = piVar9;\n                    piVar10 = piVar8;\n                } while (piVar9 != NULL);\n                piVar2 = piVar10;\n                if (piVar9 == NULL) goto code_r0x0041221b;\n            }\n            if (iVar1 != iVar3) {\n                fcn.00412ca8();\n                pcVar4 = swi(3);\n                (*pcVar4)();\n                return;\n            }\n            if (piVar9 == NULL) {\n                return;\n            }\n            if (bVar5) {\n                return;\n            }\n            bVar5 = true;\n        }\n        piVar2 = piVar9[2];\n        iVar3 = *piVar2;\n        if (((iVar3 == 0) || (uVar7 = (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x87, 0, 0),  (uVar7 >> 8 & 1) == 0))\n           && ((uVar6 = fcn.00411b40(piVar2),  (uVar6 >> 0x1c & 1) != 0 && ((uVar6 >> 0x1b & 1) == 0)))) {\n            if (*arg1 == iVar1) {\n                arg1[1] = piVar9;\n                return;\n            }\n            fcn.00412ca8();\n            pcVar4 = swi(3);\n            (*pcVar4)();\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 652
    },
    "004159a0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint64_t fcn.004159a0(int64_t lpCriticalSection)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint8_t *puVar4;\n    uint64_t uVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 0x28);\n    iVar2 = *(lpCriticalSection + 4);\n    uVar8 = *(lpCriticalSection + 8);\n    if ((iVar2 <= uVar8) || ((*(*(lpCriticalSection + 0x10) + uVar8 * 0x10) & 1) != 0)) {\n        uVar8 = 1;\n        iVar7 = 1;\n        if (1 < iVar2) {\n            puVar4 = *(lpCriticalSection + 0x10);\n            do {\n                puVar4 = puVar4 + 0x10;\n                if ((*puVar4 & 1) == 0) break;\n                iVar7 = iVar7 + 1;\n                uVar8 = uVar8 + 1;\n            } while (iVar7 < iVar2);\n        }\n        if (iVar2 <= uVar8) {\n            uVar9 = iVar2 + 0x20;\n            if (*(lpCriticalSection + 0x10) == 0) {\n                if (0xffffffff < uVar9 << 4) {\n                    fcn.00401cd0(0x80070057);\n                    pcVar3 = swi(3);\n                    uVar5 = (*pcVar3)();\n                    return uVar5;\n                }\n                iVar7 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(2);\n            }\n            else {\n                uVar6 = (*_sym.imp.KERNEL32.dll_GlobalHandle)();\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar6);\n                if (0xffffffff < uVar9 << 4) {\n                    fcn.00401cd0(0x80070057);\n                    pcVar3 = swi(3);\n                    uVar5 = (*pcVar3)();\n                    return uVar5;\n                }\n                iVar7 = (*_sym.imp.KERNEL32.dll_GlobalReAlloc)(uVar6, uVar9 << 4 & 0xffffffff, 0x2002);\n            }\n            if (iVar7 == 0) {\n                if (*(lpCriticalSection + 0x10) != 0) {\n                    uVar6 = (*_sym.imp.KERNEL32.dll_GlobalHandle)();\n                    (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar6);\n                }\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 0x28);\n                fcn.00412c60();\n                pcVar3 = swi(3);\n                uVar5 = (*pcVar3)();\n                return uVar5;\n            }\n            iVar7 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar7);\n            fcn.0042f6c0(*(lpCriticalSection + 4) * 0x10 + iVar7, 0, uVar9 - *(lpCriticalSection + 4) << 4);\n            *(lpCriticalSection + 4) = uVar9;\n            *(lpCriticalSection + 0x10) = iVar7;\n        }\n    }\n    if (*(lpCriticalSection + 0xc) <= uVar8) {\n        *(lpCriticalSection + 0xc) = uVar8 + 1;\n    }\n    puVar1 = *(lpCriticalSection + 0x10) + uVar8 * 0x10;\n    *puVar1 = *puVar1 | 1;\n    *(lpCriticalSection + 8) = uVar8 + 1;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 0x28);\n    return uVar8;\n}\n",
        "token_count": 851
    },
    "00419470": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00419470(int64_t arg1, uint32_t *arg2)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    uchar auStack136 [32];\n    uchar auStack104 [64];\n    uint64_t uStack40;\n    \n    uStack40 = *0x465c38 ^ auStack136;\n    if (arg2 != NULL) {\n        if ((*(arg1 + 0x20) & 1) == 0) {\n            fcn.00418f70(4, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        uVar4 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar4 && uVar4 != *(arg1 + 0x40)) {\n            fcn.004192c8(arg1, (*(arg1 + 0x38) - *(arg1 + 0x40)) + 2);\n        }\n        uVar1 = **(arg1 + 0x38);\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 1;\n        *arg2 = uVar1;\n        if ((*(arg1 + 0x20) & 1) == 0) {\n            fcn.00418f70(4, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        uVar4 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar4 && uVar4 != *(arg1 + 0x40)) {\n            fcn.004192c8(arg1, (*(arg1 + 0x38) - *(arg1 + 0x40)) + 2);\n        }\n        uVar1 = **(arg1 + 0x38);\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 1;\n        if ((uVar1 < 0x40) && (uVar3 = fcn.00419048(arg1, auStack104, uVar1),  uVar3 == uVar1)) {\n            auStack104[uVar1] = 0;\n            fcn.00419410(auStack104);\n        }\n    }\n    fcn.0042dcb0(uStack40 ^ auStack136);\n    return;\n}\n",
        "token_count": 576
    },
    "004196c8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.004196c8(int64_t arg1, uint64_t arg2)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    \n    if (arg2 < 0xffff) {\n        if ((~*(arg1 + 0x20) & 1) == 0) {\n            fcn.00418f70(2, *(arg1 + 0x18));\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        uVar2 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar2 && uVar2 != *(arg1 + 0x40)) {\n            fcn.0041920c(arg1);\n        }\n        **(arg1 + 0x38) = arg2;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 2;\n    }\n    else {\n        if ((~*(arg1 + 0x20) & 1) == 0) {\n            fcn.00418f70(2, *(arg1 + 0x18));\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        uVar2 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar2 && uVar2 != *(arg1 + 0x40)) {\n            fcn.0041920c(arg1);\n        }\n        **(arg1 + 0x38) = 0xffff;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 2;\n        if (arg2 < 0xffffffff) {\n            if ((~*(arg1 + 0x20) & 1) == 0) {\n                fcn.00418f70(2, *(arg1 + 0x18));\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            uVar2 = *(arg1 + 0x38) + 4;\n            if (*(arg1 + 0x40) <= uVar2 && uVar2 != *(arg1 + 0x40)) {\n                fcn.0041920c(arg1);\n            }\n            **(arg1 + 0x38) = arg2;\n            *(arg1 + 0x38) = *(arg1 + 0x38) + 4;\n        }\n        else {\n            if ((~*(arg1 + 0x20) & 1) == 0) {\n                fcn.00418f70(2, *(arg1 + 0x18));\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            uVar2 = *(arg1 + 0x38) + 4;\n            if (*(arg1 + 0x40) <= uVar2 && uVar2 != *(arg1 + 0x40)) {\n                fcn.0041920c(arg1);\n            }\n            **(arg1 + 0x38) = 0xffffffff;\n            *(arg1 + 0x38) = *(arg1 + 0x38) + 4;\n            if ((~*(arg1 + 0x20) & 1) == 0) {\n                fcn.00418f70(2, *(arg1 + 0x18));\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            uVar2 = *(arg1 + 0x38) + 8;\n            if (*(arg1 + 0x40) <= uVar2 && uVar2 != *(arg1 + 0x40)) {\n                fcn.0041920c(arg1);\n            }\n            **(arg1 + 0x38) = arg2;\n            *(arg1 + 0x38) = *(arg1 + 0x38) + 8;\n        }\n    }\n    return;\n}\n",
        "token_count": 895
    },
    "00419808": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint64_t fcn.00419808(int64_t arg1)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint16_t *puVar3;\n    uint32_t *puVar4;\n    code *pcVar5;\n    uint64_t uVar6;\n    \n    if ((*(arg1 + 0x20) & 1) == 0) {\n        fcn.00418f70(4, *(arg1 + 0x18));\n        pcVar5 = swi(3);\n        uVar6 = (*pcVar5)();\n        return uVar6;\n    }\n    uVar6 = *(arg1 + 0x38) + 2;\n    if (*(arg1 + 0x40) <= uVar6 && uVar6 != *(arg1 + 0x40)) {\n        fcn.004192c8(arg1, (*(arg1 + 0x38) - *(arg1 + 0x40)) + 2);\n    }\n    puVar3 = *(arg1 + 0x38);\n    uVar1 = *puVar3;\n    *(arg1 + 0x38) = puVar3 + 1;\n    if (uVar1 == 0xffff) {\n        if ((*(arg1 + 0x20) & 1) == 0) {\n            fcn.00418f70(4, *(arg1 + 0x18));\n            pcVar5 = swi(3);\n            uVar6 = (*pcVar5)();\n            return uVar6;\n        }\n        if (*(arg1 + 0x40) <= puVar3 + 3 && puVar3 + 3 != *(arg1 + 0x40)) {\n            fcn.004192c8(arg1, (*(arg1 + 0x38) - *(arg1 + 0x40)) + 4);\n        }\n        puVar4 = *(arg1 + 0x38);\n        uVar2 = *puVar4;\n        uVar6 = uVar2;\n        *(arg1 + 0x38) = puVar4 + 1;\n        if (uVar2 == 0xffffffff) {\n            if ((*(arg1 + 0x20) & 1) == 0) {\n                fcn.00418f70(4, *(arg1 + 0x18));\n                pcVar5 = swi(3);\n                uVar6 = (*pcVar5)();\n                return uVar6;\n            }\n            if (*(arg1 + 0x40) <= puVar4 + 3 && puVar4 + 3 != *(arg1 + 0x40)) {\n                fcn.004192c8(arg1, (*(arg1 + 0x38) - *(arg1 + 0x40)) + 8);\n            }\n            uVar6 = **(arg1 + 0x38);\n            *(arg1 + 0x38) = *(arg1 + 0x38) + 1;\n        }\n    }\n    else {\n        uVar6 = uVar1;\n    }\n    return uVar6;\n}\n",
        "token_count": 683
    },
    "004198f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.004198f0(int64_t *lpString, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    ushort uVar2;\n    int64_t arg3;\n    code *pcVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    uint64_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    \n    uVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*lpString);\n    uVar2 = *(lpString + 0xc);\n    if ((~*(arg2 + 0x20) & 1) == 0) {\n        fcn.00418f70(2, *(arg2 + 0x18));\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    uVar6 = *(arg2 + 0x38) + 2;\n    if (*(arg2 + 0x40) <= uVar6 && uVar6 != *(arg2 + 0x40)) {\n        fcn.0041920c(arg2);\n    }\n    **(arg2 + 0x38) = uVar2;\n    *(arg2 + 0x38) = *(arg2 + 0x38) + 2;\n    if ((~*(arg2 + 0x20) & 1) == 0) {\n        fcn.00418f70(2, *(arg2 + 0x18));\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    uVar6 = *(arg2 + 0x38) + 2;\n    if (*(arg2 + 0x40) <= uVar6 && uVar6 != *(arg2 + 0x40)) {\n        fcn.0041920c(arg2);\n    }\n    uVar7 = uVar4;\n    **(arg2 + 0x38) = uVar4;\n    *(arg2 + 0x38) = *(arg2 + 0x38) + 2;\n    arg3 = *lpString;\n    if ((uVar7 != 0) && (arg3 != 0)) {\n        if ((~*(arg2 + 0x20) & 1) == 0) {\n            fcn.00418f70(2, *(arg2 + 0x18));\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        piVar1 = arg2 + 0x40;\n        uVar8 = *piVar1 - *(arg2 + 0x38);\n        if (uVar7 < uVar8) {\n            uVar8 = uVar7;\n        }\n        uVar6 = uVar8;\n        iVar5 = fcn.0042e220(*(arg2 + 0x38), *piVar1 - *(arg2 + 0x38), arg3, uVar6);\n        if (iVar5 != 0) {\n            if (iVar5 == 0xc) {\n                fcn.00412c60();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            if ((iVar5 == 0x16) || (iVar5 == 0x22)) {\n                fcn.00412ca8();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            if (iVar5 != 0x50) {\n                fcn.00412ca8();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n        }\n        *(arg2 + 0x38) = *(arg2 + 0x38) + uVar6;\n        uVar7 = uVar7 - uVar8;\n        if (uVar7 != 0) {\n            fcn.0041920c(arg2);\n            uVar8 = uVar7 - uVar7 % *(arg2 + 0x28);\n            (**(**(arg2 + 0x30) + 0x70))(*(arg2 + 0x30), arg3 + uVar6, uVar8);\n            uVar7 = uVar7 - uVar8;\n            if (*(arg2 + 0xc) != 0) {\n                (**(**(arg2 + 0x30) + 0xa0))(*(arg2 + 0x30), 1, *(arg2 + 0x28), arg2 + 0x48, piVar1);\n                *(arg2 + 0x38) = *(arg2 + 0x48);\n            }\n            if (*(arg2 + 0x28) <= uVar7) {\n                fcn.00412ca8();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            if (*(arg2 + 0x38) != *(arg2 + 0x48)) {\n                fcn.00412ca8();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            iVar5 = fcn.0042e220(*(arg2 + 0x38), uVar7, arg3 + uVar6 + uVar8, uVar7);\n            if (iVar5 != 0) {\n                if (iVar5 == 0xc) {\n                    fcn.00412c60();\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n                if ((iVar5 == 0x16) || (iVar5 == 0x22)) {\n                    fcn.00412ca8();\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n                if (iVar5 != 0x50) {\n                    fcn.00412ca8();\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n            }\n            *(arg2 + 0x38) = *(arg2 + 0x38) + uVar7;\n        }\n    }\n    return;\n}\n",
        "token_count": 1343
    },
    "0041be80": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nint32_t fcn.0041be80(int64_t arg1)\n\n{\n    if ((*(arg1 + 0xb0) >> 0xc & 1) != 0) {\n        return (-((*(arg1 + 0xac) & 1) != 0) & 0xfffffff0) + 0x20;\n    }\n    return 0;\n}\n",
        "token_count": 84
    },
    "0041bea0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.0041bea0(int64_t arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t *apiStackX8 [4];\n    \n    if ((*(arg1 + 0xb0) >> 0xc & 1) != 0) {\n        if ((*(arg1 + 0xac) & 1) != (arg2 != 0)) {\n            apiStackX8[0] = NULL;\n            *(arg1 + 0xac) = *(arg1 + 0xac) ^ 1;\n            puVar1 = *(arg1 + 0x80);\n            if (puVar1 == NULL) {\n                fcn.00412ca8();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            iVar3 = (***puVar1)(puVar1, 0x4528a0, apiStackX8);\n            if (-1 < iVar3) {\n                (**(*apiStackX8[0] + 0x28))(apiStackX8[0], 0xfffffd37);\n                (**(*apiStackX8[0] + 0x10))();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "0041d31c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.0041d31c(ulong *arg1, ulong arg2, ulong noname_2, ulong arg4)\n\n{\n    code *pcVar1;\n    uchar in_stack_00000028;\n    uchar in_stack_00000030;\n    uint in_stack_00000038;\n    ulong in_stack_00000040;\n    int64_t in_stack_00000048;\n    int64_t in_stack_00000050;\n    ulong in_stack_00000058;\n    \n    if (arg1 == NULL) {\n        fcn.00401cd0(0x80004005);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    *arg1 = arg2;\n    *(arg1 + 0x54) = noname_2;\n    *(arg1 + 10) = 0;\n    arg1[2] = 0;\n    arg1[3] = 0;\n    arg1[4] = 0;\n    *(arg1 + 0x3c) = noname_2 >> 0xe & 1;\n    arg1[6] = 0;\n    arg1[5] = in_stack_00000058;\n    arg1[9] = arg4;\n    *(arg1 + 8) = in_stack_00000038;\n    *(arg1 + 7) = 1;\n    *(arg1 + 0x56) = in_stack_00000028;\n    *(arg1 + 0x57) = in_stack_00000030;\n    arg1[1] = in_stack_00000040;\n    if (in_stack_00000048 != 0) {\n        *(arg1 + 7) = 3;\n        arg1[2] = in_stack_00000048;\n    }\n    if (in_stack_00000050 != 0) {\n        *(arg1 + 7) = *(arg1 + 7) | 4;\n        arg1[3] = in_stack_00000050;\n    }\n    return;\n}\n",
        "token_count": 449
    },
    "0042572c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint64_t fcn.0042572c(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    \n    if (arg2 == 0) {\ncode_r0x004257eb:\n        uVar3 = (*_sym.imp.USER32.dll_GetTopWindow)(*(arg1 + 0x40));\n        iVar4 = fcn.0040d71c(uVar3);\n        if (iVar4 == 0) {\n            return arg1;\n        }\n    }\n    else {\n        uVar3 = *(arg2 + 0x40);\n        while( true ) {\n            uVar3 = (*_sym.imp.USER32.dll_GetWindow)(uVar3, 2);\n            iVar4 = fcn.0040d71c(uVar3);\n            if (iVar4 != 0) break;\n            uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(arg2 + 0x40));\n            uVar3 = fcn.0040d71c(uVar3);\n            arg2 = fcn.004256bc(arg1, uVar3);\n            if ((arg2 == 0) || (arg2 == arg1)) goto code_r0x004257eb;\n            uVar3 = *(arg2 + 0x40);\n        }\n        uVar3 = (*_sym.imp.USER32.dll_GetWindow)(*(arg2 + 0x40), 2);\n        iVar4 = fcn.0040d71c(uVar3);\n    }\n    uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(*(iVar4 + 0x40));\n    if ((uVar1 >> 0x10 & 1) != 0) {\n        if ((((arg3 & 1) == 0) || (iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar4 + 0x40)),  iVar2 != 0)) &&\n           (((arg3 & 2) == 0 || (iVar2 = fcn.00411a08(iVar4),  iVar2 != 0)))) {\n            arg1 = iVar4;\n            iVar4 = 0;\n        }\n        iVar4 = fcn.0042572c(arg1, iVar4, arg3);\n    }\n    return iVar4;\n}\n",
        "token_count": 523
    },
    "0042c504": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0042c504(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint64_t uVar5;\n    uint64_t *puVar6;\n    \n    if (arg2 == 0) {\n        fcn.00418f70(6, *(arg1 + 0x18));\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if ((~*(arg1 + 0x20) & 1) == 0) {\n        fcn.00418f70(1, *(arg1 + 0x18));\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (*(arg2 + 0xc) == 0xffff) {\n        fcn.00412c84();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    fcn.0042c3ac(arg1, 0);\n    puVar4 = fcn.00418460(*(arg1 + 0x58), arg2);\n    uVar1 = *puVar4;\n    uVar3 = ~*(arg1 + 0x20);\n    if (uVar1 == 0) {\n        if ((uVar3 & 1) == 0) {\n            fcn.00418f70(2, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        uVar5 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar5 && uVar5 != *(arg1 + 0x40)) {\n            fcn.0041920c(arg1);\n        }\n        **(arg1 + 0x38) = 0xffff;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 2;\n        fcn.004198f0(arg2, arg1);\n        fcn.0042c388(arg1);\n        uVar1 = *(arg1 + 0x50);\n        puVar6 = fcn.00418460(*(arg1 + 0x58), arg2);\n        *puVar6 = uVar1;\n        *(arg1 + 0x50) = *(arg1 + 0x50) + 1;\n    }\n    else if (uVar1 < 0x7fff) {\n        if ((uVar3 & 1) == 0) {\n            fcn.00418f70(2, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        uVar5 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar5 && uVar5 != *(arg1 + 0x40)) {\n            fcn.0041920c(arg1);\n        }\n        **(arg1 + 0x38) = uVar1 | 0x8000;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 2;\n    }\n    else {\n        if ((uVar3 & 1) == 0) {\n            fcn.00418f70(2, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        uVar5 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar5 && uVar5 != *(arg1 + 0x40)) {\n            fcn.0041920c(arg1);\n        }\n        **(arg1 + 0x38) = 0x7fff;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 2;\n        if ((~*(arg1 + 0x20) & 1) == 0) {\n            fcn.00418f70(2, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        uVar5 = *(arg1 + 0x38) + 4;\n        if (*(arg1 + 0x40) <= uVar5 && uVar5 != *(arg1 + 0x40)) {\n            fcn.0041920c(arg1);\n        }\n        **(arg1 + 0x38) = uVar1 | 0x80000000;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 4;\n    }\n    return;\n}\n",
        "token_count": 1080
    },
    "0042c96c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0042c96c(int64_t arg1, int64_t *arg2)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    uint32_t *puVar4;\n    ulong arg2_00;\n    uint64_t *puVar5;\n    \n    if ((~*(arg1 + 0x20) & 1) == 0) {\n        fcn.00418f70(2, *(arg1 + 0x18));\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    fcn.0042c3ac(arg1, 0);\n    if (arg2 == NULL) {\n        if ((~*(arg1 + 0x20) & 1) == 0) {\n            fcn.00418f70(2, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        uVar3 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar3 && uVar3 != *(arg1 + 0x40)) {\n            fcn.0041920c(arg1);\n        }\n        **(arg1 + 0x38) = 0;\n    }\n    else {\n        puVar4 = fcn.00418460(*(arg1 + 0x58), arg2);\n        uVar1 = *puVar4;\n        if (uVar1 == 0) {\n            arg2_00 = (***arg2)(arg2);\n            fcn.0042c504(arg1, arg2_00);\n            fcn.0042c388(arg1);\n            uVar1 = *(arg1 + 0x50);\n            puVar5 = fcn.00418460(*(arg1 + 0x58), arg2);\n            *puVar5 = uVar1;\n            *(arg1 + 0x50) = *(arg1 + 0x50) + 1;\n            (**(*arg2 + 0x10))(arg2, arg1);\n            return;\n        }\n        if (0x7ffe < uVar1) {\n            if ((~*(arg1 + 0x20) & 1) == 0) {\n                fcn.00418f70(2, *(arg1 + 0x18));\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            uVar3 = *(arg1 + 0x38) + 2;\n            if (*(arg1 + 0x40) <= uVar3 && uVar3 != *(arg1 + 0x40)) {\n                fcn.0041920c(arg1);\n            }\n            **(arg1 + 0x38) = 0x7fff;\n            *(arg1 + 0x38) = *(arg1 + 0x38) + 2;\n            if ((~*(arg1 + 0x20) & 1) != 0) {\n                uVar3 = *(arg1 + 0x38) + 4;\n                if (*(arg1 + 0x40) <= uVar3 && uVar3 != *(arg1 + 0x40)) {\n                    fcn.0041920c(arg1);\n                }\n                **(arg1 + 0x38) = uVar1;\n                *(arg1 + 0x38) = *(arg1 + 0x38) + 4;\n                return;\n            }\n            fcn.00418f70(2, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        if ((~*(arg1 + 0x20) & 1) == 0) {\n            fcn.00418f70(2, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        uVar3 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar3 && uVar3 != *(arg1 + 0x40)) {\n            fcn.0041920c(arg1);\n        }\n        **(arg1 + 0x38) = uVar1;\n    }\n    *(arg1 + 0x38) = *(arg1 + 0x38) + 2;\n    return;\n}\n",
        "token_count": 1000
    },
    "00406ea0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00406ea0(uint64_t arg1, uint64_t arg2, ulong arg3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t hModule;\n    int64_t iStackX32;\n    \n    arg1 = arg1 & 0xffffffff;\n    piVar5 = fcn.00413fdc();\n    if (piVar5 == NULL) {\n        fcn.00401cd0(0x80004005);\n        pcVar3 = swi(3);\n        uVar6 = (*pcVar3)();\n        return uVar6;\n    }\n    iVar7 = (**(*piVar5 + 0x18))(piVar5);\n    iStackX32 = iVar7 + 0x18;\n    hModule = fcn.00413fc8(arg1);\n    iVar7 = iVar7 + 0x18;\n    if (hModule != 0) {\n        fcn.00402fc0(&iStackX32, hModule, arg1);\n        iVar7 = iStackX32;\n    }\n    if (arg3 == 0xffffffff) {\n        arg3._0_4_ = arg1;\n    }\n    uVar4 = fcn.00406e54(iVar7, arg2 & 0xffffffff, arg3);\n    LOCK();\n    piVar1 = iVar7 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar7 + -0x18) + 8))();\n    }\n    return uVar4;\n}\n",
        "token_count": 403
    },
    "004129c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.004129c0(int64_t *arg1, ulong hModule, ulong arg3)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint16_t *puVar5;\n    ulong uVar6;\n    uint32_t uVar7;\n    \n    iVar4 = (*_sym.imp.KERNEL32.dll_FindResourceA)(hModule, (arg3 >> 4) + 1);\n    if ((iVar4 == 0) || (puVar5 = fcn.00401cf0(hModule, iVar4, arg3),  puVar5 == NULL)) {\n        uVar6 = 0;\n    }\n    else {\n        uVar1 = *puVar5;\n        if ((1U - *(*arg1 + -8) | *(*arg1 + -0xc) - uVar1) < 0) {\n            fcn.00412720(arg1, uVar1);\n        }\n        uVar7 = *puVar5;\n        iVar4 = *arg1;\n        if (*puVar5 == 0xffffffff) {\n            iVar3 = fcn.00430170(puVar5 + 1);\n            uVar7 = iVar3 + 1;\n        }\n        iVar3 = fcn.0042e220(iVar4, uVar1 * 2, puVar5 + 1, uVar7 * 2);\n        if (iVar3 != 0) {\n            if (iVar3 == 0xc) {\n                fcn.00412c60();\n                pcVar2 = swi(3);\n                uVar6 = (*pcVar2)();\n                return uVar6;\n            }\n            if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                fcn.00412ca8();\n                pcVar2 = swi(3);\n                uVar6 = (*pcVar2)();\n                return uVar6;\n            }\n            if (iVar3 != 0x50) {\n                fcn.00412ca8();\n                pcVar2 = swi(3);\n                uVar6 = (*pcVar2)();\n                return uVar6;\n            }\n        }\n        if (*(*arg1 + -0xc) < uVar1) {\n            fcn.00401cd0(0x80070057);\n            pcVar2 = swi(3);\n            uVar6 = (*pcVar2)();\n            return uVar6;\n        }\n        *(*arg1 + -0x10) = uVar1;\n        uVar6 = 1;\n        *(uVar1 * 2 + *arg1) = 0;\n    }\n    return uVar6;\n}\n",
        "token_count": 592
    },
    "00415950": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * fcn.00415950(int32_t *arg1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    *(arg1 + 6) = 0;\n    *(arg1 + 8) = 8;\n    arg1[1] = 0;\n    arg1[2] = 1;\n    arg1[3] = 0;\n    *(arg1 + 4) = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    *arg1 = iVar2;\n    if (iVar2 == -1) {\n        fcn.00412c60();\n        pcVar1 = swi(3);\n        piVar3 = (*pcVar1)();\n        return piVar3;\n    }\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(arg1 + 10);\n    return arg1;\n}\n",
        "token_count": 205
    },
    "00416020": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00416020(int32_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t arg2;\n    ulong uVar2;\n    \n    arg2 = *(arg1 + 6);\n    while (arg2 != 0) {\n        iVar1 = *(arg2 + 8);\n        fcn.00415d68(arg1, arg2, 0);\n        arg2 = iVar1;\n    }\n    if (*arg1 != -1) {\n        (*_sym.imp.KERNEL32.dll_TlsFree)(*arg1);\n    }\n    if (*(arg1 + 4) != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GlobalHandle)();\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar2);\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar2);\n    }\n    // WARNING: Could not recover jumptable at 0x00416085. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(arg1 + 10);\n    return;\n}\n",
        "token_count": 242
    },
    "0042713c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0042713c(int64_t *arg1, ulong lpWideCharStr)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    \n    if (arg1 == NULL) {\n        return;\n    }\n    uVar3 = (*_sym.imp.OLEAUT32.dll_VariantInit)(lpWideCharStr);\n    uVar4 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, lpWideCharStr, uVar3, 0, 0, 0, 0);\n    if ((1U - *(*arg1 + -8) | *(*arg1 + -0xc) - uVar4) < 0) {\n        fcn.00402e50(arg1, uVar4);\n    }\n    iVar1 = *arg1;\n    if ((uVar4 < 0) || (*(iVar1 + -0xc) < uVar4)) {\n        fcn.00401cd0(0x80070057);\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    *(iVar1 + -0x10) = uVar4;\n    *(uVar4 + *arg1) = 0;\n    (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, lpWideCharStr, uVar3, iVar1, uVar4, 0, 0);\n    if (uVar4 == 0xffffffff) {\n        if (*arg1 != 0) {\n            uVar4 = fcn.0042f460(*arg1);\n            goto code_r0x00427210;\n        }\n        uVar4 = 0;\n    }\n    else {\ncode_r0x00427210:\n        if (uVar4 < 0) goto code_r0x00427232;\n    }\n    if (uVar4 <= *(*arg1 + -0xc)) {\n        *(*arg1 + -0x10) = uVar4;\n        *(uVar4 + *arg1) = 0;\n        return;\n    }\ncode_r0x00427232:\n    fcn.00401cd0(0x80070057);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 510
    },
    "00427ad0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00427ad0(char **arg1, char *arg2, int64_t arg3, ulong arg4)\n\n{\n    char cVar1;\n    char *arg1_00;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    uint64_t arg2_00;\n    \n    arg2_00 = 0;\n    if (arg2 == NULL) {\n        fcn.00412ca8();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (arg3 == 0) {\n        fcn.00412ca8();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    cVar1 = *arg2;\n    pcVar6 = arg2;\n    while (iVar5 = arg2_00,  cVar1 != '\\0') {\n        if (*pcVar6 == '%') {\n            cVar1 = pcVar6[1];\n            if ((cVar1 < '1') || ('9' < cVar1)) {\n                if ((cVar1 < 'A') || ('Z' < cVar1)) goto code_r0x00427b5a;\n                if (cVar1 < ':') goto code_r0x00427b35;\n                iVar4 = cVar1 + -0x38;\n            }\n            else {\ncode_r0x00427b35:\n                iVar4 = cVar1 + -0x31;\n            }\n            pcVar6 = pcVar6 + 2;\n            if (arg4 <= iVar4) goto code_r0x00427b72;\n            if (*(arg3 + iVar4 * 8) != 0) {\n                iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n                arg2_00 = iVar5 + iVar4;\n            }\n        }\n        else {\ncode_r0x00427b5a:\n            iVar4 = fcn.00430500(*pcVar6);\n            if (iVar4 != 0) {\n                iVar5 = iVar5 + 1;\n                pcVar6 = pcVar6 + 1;\n            }\n            pcVar6 = pcVar6 + 1;\ncode_r0x00427b72:\n            arg2_00 = iVar5 + 1;\n        }\n        cVar1 = *pcVar6;\n    }\n    if ((1U - *(*arg1 + -8) | *(*arg1 + -0xc) - iVar5) < 0) {\n        fcn.00402e50(arg1, arg2_00);\n    }\n    pcVar6 = *arg1;\n    while( true ) {\n        iVar4 = arg2_00;\n        iVar5 = 0;\n        if (*arg2 == '\\0') break;\n        if (*arg2 == '%') {\n            cVar1 = arg2[1];\n            if ((cVar1 < '1') || ('9' < cVar1)) {\n                if ((cVar1 < 'A') || ('Z' < cVar1)) goto code_r0x00427c32;\n                if (cVar1 < ':') goto code_r0x00427bce;\n                iVar5 = cVar1 + -0x38;\n            }\n            else {\ncode_r0x00427bce:\n                iVar5 = cVar1 + -0x31;\n            }\n            arg2 = arg2 + 2;\n            if (arg4 <= iVar5) {\n                *pcVar6 = '?';\n                goto code_r0x00427c56;\n            }\n            if (*(arg3 + iVar5 * 8) != 0) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n                iVar5 = fcn.0042f3a0(pcVar6, iVar4 + 1, *(arg3 + iVar5 * 8));\n                if (iVar5 != 0) {\n                    if (iVar5 == 0xc) {\n                        fcn.00412c60();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if ((iVar5 == 0x16) || (iVar5 == 0x22)) {\n                        fcn.00412ca8();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if (iVar5 != 0x50) {\n                        fcn.00412ca8();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n                arg2_00 = iVar4 - iVar3;\n                pcVar6 = pcVar6 + iVar3;\n            }\n        }\n        else {\ncode_r0x00427c32:\n            iVar5 = fcn.00430500(*arg2);\n            if (iVar5 != 0) {\n                cVar1 = *arg2;\n                arg2 = arg2 + 1;\n                *pcVar6 = cVar1;\n                pcVar6 = pcVar6 + 1;\n                iVar4 = iVar4 + -1;\n            }\n            cVar1 = *arg2;\n            arg2 = arg2 + 1;\n            *pcVar6 = cVar1;\ncode_r0x00427c56:\n            pcVar6 = pcVar6 + 1;\n            arg2_00 = iVar4 - 1;\n        }\n    }\n    arg1_00 = *arg1;\n    iVar4 = pcVar6 - arg1_00;\n    if (iVar4 == -1) {\n        if (arg1_00 != NULL) {\n            iVar4 = fcn.0042f460(arg1_00);\n            goto code_r0x00427c90;\n        }\n    }\n    else {\ncode_r0x00427c90:\n        iVar5 = iVar4;\n        if (iVar4 < 0) goto code_r0x00427cbd;\n    }\n    if (iVar5 <= *(*arg1 + -0xc)) {\n        *(*arg1 + -0x10) = iVar5;\n        (*arg1)[iVar5] = '\\0';\n        return;\n    }\ncode_r0x00427cbd:\n    fcn.00401cd0(0x80070057);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 1395
    },
    "004321a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.004321a0(ulong arg1)\n\n{\n    int64_t iVar1;\n    code *UNRECOVERED_JUMPTABLE;\n    ulong uVar2;\n    \n    if ((*0x465de8 == -1) || (iVar1 = (*_sym.imp.KERNEL32.dll_FlsGetValue)(),  iVar1 == 0)) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"KERNEL32.DLL\");\n        if (iVar1 == 0) {\n            return arg1;\n        }\n        UNRECOVERED_JUMPTABLE = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"DecodePointer\");\n    }\n    else {\n        UNRECOVERED_JUMPTABLE = *(iVar1 + 0x2b0);\n    }\n    if (UNRECOVERED_JUMPTABLE == NULL) {\n        return arg1;\n    }\n    // WARNING: Could not recover jumptable at 0x004321f7. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar2 = (*UNRECOVERED_JUMPTABLE)(arg1);\n    return uVar2;\n}\n",
        "token_count": 255
    },
    "00403580": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nvoid fcn.00403580(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    int64_t *piVar6;\n    uint32_t uVar7;\n    int64_t iStack40;\n    int64_t iStack32;\n    ulong uStack24;\n    \n    uStack24 = 0xfffffffffffffffe;\n    piVar6 = fcn.00413fdc();\n    if (piVar6 == NULL) {\n        fcn.00401cd0(0x80004005);\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    iStack40 = (**(*piVar6 + 0x18))(piVar6);\n    iStack40 = iStack40 + 0x18;\n    fcn.004032c0(&iStack40, \"%s %d\", \" Red : \", arg2);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(arg1 + 0x3f0), 0x401, 0);\n    fcn.004032c0(&iStack40, \"%s %d\", \" Green : \", arg3);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(arg1 + 0x3f0), 0x401, 1);\n    fcn.004032c0(&iStack40, \"%s %d\", \" Blue : \", arg4);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(arg1 + 0x3f0), 0x401, 2);\n    piVar6 = fcn.00413fdc();\n    if (piVar6 == NULL) {\n        fcn.00401cd0(0x80004005);\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    iStack32 = (**(*piVar6 + 0x18))(piVar6);\n    iStack32 = iStack32 + 0x18;\n    uVar7 = (arg3 & 0xff) << 8;\n    uVar5 = (arg4 & 0xff) << 0x10;\n    fcn.004032c0(&iStack32, \"%s 0x%0.8X\", \" Hex : \", arg2 & 0xff | uVar5 | uVar7);\n    iVar4 = iStack32;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(arg1 + 0x3f0), 0x401, 3, iStack32);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(arg1 + 0x498), 0x1001, 0, arg2 & 0xff | uVar5 | uVar7);\n    (*_sym.imp.USER32.dll_InvalidateRect)(*(arg1 + 0x498), 0, 1);\n    LOCK();\n    piVar1 = iVar4 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar4 + -0x18) + 8))();\n    }\n    LOCK();\n    piVar1 = iStack40 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iStack40 + -0x18) + 8))();\n    }\n    return;\n}\n",
        "token_count": 806
    },
    "0041fa34": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint fcn.0041fa34(int64_t arg1, ulong noname_1, ulong arg3, uint32_t *arg4)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uStack56;\n    uint uStack52;\n    ulong uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    uint uStack20;\n    uint uStack12;\n    \n    uStack12 = 1;\n    if ((((noname_1 & 1) != 0) || ((noname_1 & 2) != 0)) && (uVar2 = 0,  arg3 != 0)) {\n        do {\n            uVar1 = *arg4;\n            if (0x13 < uVar1) {\n                if (uVar1 == 0x14) {\ncode_r0x0041fae1:\n                    uStack12 = 5;\n                    goto code_r0x0041fae6;\n                }\n                if (uVar1 != 0x15) {\n                    if (uVar1 == 0x17) goto code_r0x0041fa78;\n                    if (uVar1 == 0x18) {\n                        uStack12 = 2;\n                        goto code_r0x0041fae6;\n                    }\n                    if (uVar1 == 0x19) goto code_r0x0041fae6;\n                    if (uVar1 == 0x1f) {\n                        uStack12 = 4;\n                        goto code_r0x0041fae6;\n                    }\n                    goto code_r0x0041faba;\n                }\ncode_r0x0041fa98:\n                uStack12 = 7;\ncode_r0x0041fae6:\n                uStack56 = 3;\n                uStack52 = 0xffffffff;\n                uStack48 = 0;\n                uStack40 = 0;\n                uStack32 = 0;\n                uStack20 = 0;\n                fcn.0041c510(arg1 + -0x170, &uStack56);\n                return uStack20;\n            }\n            if (uVar1 == 0x13) goto code_r0x0041fa98;\n            if (uVar1 < 9) {\n                if (5 < uVar1) goto code_r0x0041fa98;\n                if (uVar1 == 1) {\n                    uStack12 = 3;\n                    goto code_r0x0041fae6;\n                }\n                if (uVar1 == 2) goto code_r0x0041fae1;\n                if (uVar1 == 3) goto code_r0x0041fa78;\n            }\n            else if (8 < uVar1) {\n                if (uVar1 < 0xb) {\ncode_r0x0041fa78:\n                    uStack12 = 6;\n                    goto code_r0x0041fae6;\n                }\n                if ((uVar1 < 0xd) || ((0xe < uVar1 && (uVar1 < 0x11)))) goto code_r0x0041fa98;\n            }\ncode_r0x0041faba:\n            uVar2 = uVar2 + 1;\n            arg4 = arg4 + 0xe;\n        } while (uVar2 < arg3);\n    }\n    return 0;\n}\n",
        "token_count": 737
    },
    "00420454": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong fcn.00420454(int64_t arg1, uint64_t arg2, uint *arg3)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    ulong uVar3;\n    uint64_t *puVar4;\n    uint64_t uVar5;\n    \n    uVar5 = 0;\n    if (arg3 == NULL) {\n        fcn.00401cd0(0x80004005);\n        pcVar2 = swi(3);\n        uVar3 = (*pcVar2)();\n        return uVar3;\n    }\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar1 = *(*(arg1 + 0x28) + 0x10);\n        if (arg2 <= *(arg1 + 0x18) + -1 + iVar1) {\n            uVar5 = arg2 - iVar1;\ncode_r0x004204c0:\n            *arg3 = *((*(*(arg1 + 0x28) + 0x20 + uVar5 * 0x50) + 7 + *(*(arg1 + 0x28) + 8 + uVar5 * 0x50) &\n                      0xfffffffffffffff8U) + 8 + *(arg1 + 0x10));\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        puVar4 = *(arg1 + 0x28) + 0x10;\n        do {\n            if (*puVar4 == arg2) goto code_r0x004204c0;\n            uVar5 = uVar5 + 1;\n            puVar4 = puVar4 + 10;\n        } while (uVar5 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 401
    },
    "00428d80": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint64_t fcn.00428d80(uint8_t *arg1)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint64_t uVar3;\n    uint16_t in_DX;\n    int64_t iVar4;\n    \n    if (0x15 < in_DX) {\n        fcn.00412ca8();\n        pcVar2 = swi(3);\n        uVar3 = (*pcVar2)();\n        return uVar3;\n    }\n    uVar3 = *(in_DX * 4 + 0x44f870) + 0xfU & 0xfffffff8;\n    do {\n        uVar1 = *arg1;\n        if (uVar1 == 0) {\n            return uVar3;\n        }\n        if (uVar1 != 0xff) {\n            iVar4 = 0x44f810;\n            if ((uVar1 & 0x40) == 0) {\n                iVar4 = 0x44f7b0;\n            }\n            if (0x15 < (uVar1 & 0xbf)) {\n                fcn.00412ca8();\n                pcVar2 = swi(3);\n                uVar3 = (*pcVar2)();\n                return uVar3;\n            }\n            uVar3 = *(iVar4 + (uVar1 & 0xbf) * 4) + 7 + uVar3 & 0xfffffff8;\n        }\n        arg1 = arg1 + 1;\n    } while( true );\n}\n",
        "token_count": 331
    },
    "004086b0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint64_t fcn.004086b0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    iVar1 = *(arg1 + 8);\n    if (iVar1 != 0) {\n        iVar2 = fcn.00413c60();\n        if (*(iVar2 + 0x48) != 0) {\n            fcn.0041828c(*(iVar2 + 0x48) + 0x30, *(arg1 + 8));\n        }\n    }\n    *(arg1 + 8) = 0;\n    return iVar1;\n}\n",
        "token_count": 134
    },
    "0040874c": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040874c(ulong arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.00413c60();\n    if (*(iVar1 + 0x48) != 0) {\n        fcn.00418218(*(iVar1 + 0x48) + 0x30, arg1);\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "0040d758": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040d758(ulong arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.00413c60();\n    if (*(iVar1 + 0x28) != 0) {\n        fcn.00418218(*(iVar1 + 0x28) + 0x30, arg1);\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "0040d7d4": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint64_t fcn.0040d7d4(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    iVar1 = *(arg1 + 0x40);\n    if (iVar1 != 0) {\n        iVar2 = fcn.00413c60();\n        if (*(iVar2 + 0x28) != 0) {\n            fcn.0041828c(*(iVar2 + 0x28) + 0x30, *(arg1 + 0x40));\n        }\n        *(arg1 + 0x40) = 0;\n    }\n    *(arg1 + 0xa0) = 0;\n    return iVar1;\n}\n",
        "token_count": 156
    },
    "0040da4c": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint64_t fcn.0040da4c(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    \n    uVar4 = 0;\n    if (*(arg1 + 0x40) == 0) {\n        if (*(arg1 + 0xa0) == 0) {\n            return 0;\n        }\n        if (*(arg1 + 0x40) == 0) goto code_r0x0040da92;\n    }\n    iVar3 = fcn.00413c60();\n    if (*(iVar3 + 0x28) == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        uVar4 = (*pcVar1)();\n        return uVar4;\n    }\n    fcn.00418218(*(iVar3 + 0x28) + 0x30, *(arg1 + 0x40));\ncode_r0x0040da92:\n    if ((*(arg1 + 0x40) != 0) || (*(arg1 + 0xa0) != 0)) {\n        if (*(arg1 + 0xa0) == 0) {\n            uVar2 = (*_sym.imp.USER32.dll_DestroyWindow)();\n        }\n        else {\n            uVar2 = (**(**(arg1 + 0xa0) + 0xb0))();\n        }\n        uVar4 = uVar2;\n    }\n    return uVar4;\n}\n",
        "token_count": 339
    },
    "00413e58": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413e58(ulong arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.00413c60();\n    if (*(iVar1 + 0x30) != 0) {\n        fcn.00418218(*(iVar1 + 0x30) + 0x30, arg1);\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00413e84": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint64_t fcn.00413e84(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    iVar1 = *(arg1 + 8);\n    if (iVar1 != 0) {\n        iVar2 = fcn.00413c60();\n        if (*(iVar2 + 0x30) != 0) {\n            fcn.0041828c(*(iVar2 + 0x30) + 0x30, *(arg1 + 8));\n        }\n    }\n    *(arg1 + 8) = 0;\n    return iVar1;\n}\n",
        "token_count": 134
    },
    "00414b54": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint64_t fcn.00414b54(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    iVar1 = arg1[1];\n    if (iVar1 != 0) {\n        iVar2 = fcn.00413c60();\n        if (*(iVar2 + 0x38) != 0) {\n            fcn.0041828c(*(iVar2 + 0x38) + 0x30, arg1[1]);\n        }\n    }\n    (**(*arg1 + 0x28))(arg1);\n    arg1[1] = 0;\n    return iVar1;\n}\n",
        "token_count": 143
    },
    "00414f90": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint64_t fcn.00414f90(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    iVar1 = *(arg1 + 8);\n    if (iVar1 != 0) {\n        iVar2 = fcn.00413c60();\n        if (*(iVar2 + 0x40) != 0) {\n            fcn.0041828c(*(iVar2 + 0x40) + 0x30, *(arg1 + 8));\n        }\n    }\n    *(arg1 + 8) = 0;\n    return iVar1;\n}\n",
        "token_count": 134
    },
    "0041cf84": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nulong * fcn.0041cf84(ulong *arg1, ulong arg2)\n\n{\n    arg1[1] = arg2;\n    *arg1 = 0x44e718;\n    arg1[2] = 0;\n    arg1[3] = 0;\n    arg1[4] = 0;\n    arg1[5] = 0;\n    fcn.00426ee8(arg1 + 6, 10);\n    arg1[0xd] = 0;\n    arg1[0xe] = 0;\n    arg1[0xf] = 0;\n    arg1[0x10] = 0;\n    *(arg1 + 0x11) = 0;\n    arg1[0x12] = 0;\n    arg1[0x13] = 0;\n    arg1[0x14] = 0;\n    arg1[0x15] = 0;\n    *(arg1 + 0x16) = 0;\n    return arg1;\n}\n",
        "token_count": 227
    },
    "004088ec": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nuint64_t fcn.004088ec(uint32_t *arg1)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    int16_t *piVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    uVar4 = *arg1;\n    bVar5 = *(arg1 + 2) == -1;\n    if (bVar5) {\n        uVar4 = arg1[3];\n        piVar3 = arg1 + 0x1a;\n    }\n    else {\n        piVar3 = arg1 + 0x12;\n    }\n    if (*piVar3 == -1) {\n        piVar3 = piVar3 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar3;\n            piVar3 = piVar3 + 1;\n        } while (iVar1 != 0);\n    }\n    if (*piVar3 == -1) {\n        piVar3 = piVar3 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar3;\n            piVar3 = piVar3 + 1;\n        } while (iVar1 != 0);\n    }\n    do {\n        piVar2 = piVar3;\n        piVar3 = piVar2 + 1;\n    } while (*piVar2 != 0);\n    if ((uVar4 & 0x40) != 0) {\n        piVar3 = piVar2 + (-bVar5 & 2) + 2;\n        do {\n            iVar1 = *piVar3;\n            piVar3 = piVar3 + 1;\n        } while (iVar1 != 0);\n    }\n    return piVar3 + 3U & 0xfffffffffffffffc;\n}\n",
        "token_count": 389
    },
    "00417b70": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nuint64_t fcn.00417b70(uint32_t *arg1)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint16_t *puVar5;\n    int16_t iVar6;\n    bool bVar7;\n    \n    bVar7 = *(arg1 + 2) == -1;\n    iVar3 = fcn.00417b1c(arg1);\n    if (*(arg1 + 2) == -1) {\n        uVar2 = arg1[3];\n    }\n    else {\n        uVar2 = *arg1;\n    }\n    if ((uVar2 & 0x40) != 0) {\n        iVar3 = iVar3 + ((-bVar7 & 2) + 1) * 2;\n        iVar4 = fcn.00430170(iVar3);\n        iVar3 = iVar3 + 2 + iVar4 * 2;\n    }\n    if (bVar7) {\n        iVar6 = *(arg1 + 4);\n    }\n    else {\n        iVar6 = *(arg1 + 2);\n    }\n    if (iVar6 != 0) {\n        do {\n            puVar5 = (iVar3 + 3U & 0xfffffffffffffffc) + (-bVar7 & 6) + 0x12;\n            if (*puVar5 == 0xffff) {\n                puVar5 = puVar5 + 2;\n            }\n            else {\n                do {\n                    uVar1 = *puVar5;\n                    puVar5 = puVar5 + 1;\n                } while (uVar1 != 0);\n            }\n            if (*puVar5 == 0xffff) {\n                puVar5 = puVar5 + 2;\n            }\n            else {\n                do {\n                    uVar1 = *puVar5;\n                    puVar5 = puVar5 + 1;\n                } while (uVar1 != 0);\n            }\n            uVar1 = *puVar5;\n            if ((uVar1 != 0) && (!bVar7)) {\n                uVar1 = uVar1 - 2;\n            }\n            iVar6 = iVar6 + -1;\n            iVar3 = puVar5 + uVar1 + 2;\n        } while (iVar6 != 0);\n    }\n    return iVar3 - arg1 & 0xffffffff;\n}\n",
        "token_count": 525
    },
    "0041b96c": {
        "rules": [
            "check for kernel debugger via shared user data structure/3e5f0b53f7994283abe93631eebb775f"
        ],
        "decompiled_code": "\nuint fcn.0041b96c(int64_t arg1, int64_t arg2, int64_t arg3, ulong arg4)\n\n{\n    uint uVar1;\n    ulong *puVar2;\n    int64_t *in_stack_00000028;\n    \n    if (((arg1 == 0) || (arg3 == 0)) || (in_stack_00000028 == NULL)) {\n        uVar1 = 0x80004005;\n    }\n    else {\n        uVar1 = (**(*in_stack_00000028 + 0x20))\n                          (in_stack_00000028, (-(*(arg1 + 0x40) != 0) & 2U) + 2, arg2, arg1, arg4, arg3, 0);\n        if (arg2 != 0) {\n            puVar2 = arg1 + 0x28;\n            do {\n                fcn.00403cfc(*puVar2);\n                puVar2 = puVar2 + 0xb;\n                arg2 = arg2 + -1;\n            } while (arg2 != 0);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 254
    },
    "00409790": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid fcn.00409790(ulong noname_0, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t iVar7;\n    uint64_t arg2_00;\n    uint *puVar8;\n    uint32_t *puVar9;\n    int64_t iVar10;\n    uchar *puVar11;\n    uint *puVar12;\n    uint *in_stack_00000028;\n    int16_t in_stack_00000030;\n    uint32_t *in_stack_00000038;\n    uint32_t in_stack_00000040;\n    ulong *in_stack_00000048;\n    ulong var_98h;\n    uchar auStack408 [32];\n    uint uStack376;\n    int32_t *piStack368;\n    uint32_t uStack360;\n    uchar *puStack352;\n    uint32_t uStack344;\n    int64_t iStack336;\n    int64_t *piStack328;\n    ushort uStack312;\n    ushort uStack310;\n    int64_t iStack304;\n    uint64_t uStack296;\n    uint32_t uStack288;\n    uint uStack284;\n    uint32_t uStack280;\n    int64_t iStack272;\n    uint uStack264;\n    uint uStack260;\n    ushort uStack256;\n    ushort uStack254;\n    ushort uStack252;\n    int16_t iStack250;\n    ushort uStack248;\n    ulong *puStack240;\n    int32_t iStack232;\n    int32_t iStack228;\n    int32_t iStack224;\n    int32_t iStack220;\n    ulong uStack216;\n    int64_t iStack208;\n    ulong uStack200;\n    int64_t iStack192;\n    uchar auStack184 [80];\n    uchar auStack104 [16];\n    uint64_t uStack88;\n    \n    uStack200 = 0xfffffffffffffffe;\n    uStack88 = *0x465c38 ^ auStack408;\n    uStack216 = arg3;\n    iStack208 = arg2;\n    puStack240 = in_stack_00000048;\n    puVar12 = in_stack_00000028 + 0x12;\n    iVar5 = 0;\n    puVar8 = in_stack_00000028;\n    if (arg4 != 0) {\n        uStack264 = in_stack_00000028[2];\n        uStack260 = in_stack_00000028[1];\n        uStack256 = *(in_stack_00000028 + 3);\n        uStack254 = *(in_stack_00000028 + 0xe);\n        uStack252 = *(in_stack_00000028 + 4);\n        iStack250 = *puVar12;\n        uStack248 = *(in_stack_00000028 + 5);\n        puVar8 = &uStack264;\n        puVar12 = in_stack_00000028 + 6;\n    }\n    iStack228 = *(puVar8 + 10);\n    iStack220 = *(puVar8 + 0xe) + iStack228;\n    iStack232 = *(puVar8 + 2);\n    iStack224 = *(puVar8 + 3) + iStack232;\n    (*_sym.imp.USER32.dll_MapDialogRect)(*(arg2 + 0x40), &iStack232);\n    if (3 < in_stack_00000040) {\n        uVar3 = *in_stack_00000038;\n        in_stack_00000038 = in_stack_00000038 + 1;\n        in_stack_00000040 = in_stack_00000040 - 4;\n        if (uVar3 != 0) {\n            iVar5 = (*_sym.imp.OLEAUT32.dll_SysReAllocStringLen)(in_stack_00000038, uVar3);\n            in_stack_00000038 = in_stack_00000038 + uVar3 * 2;\n            in_stack_00000040 = in_stack_00000040 + uVar3 * -2;\n        }\n    }\n    uStack296 = 0;\n    piVar6 = fcn.00413fdc();\n    if (piVar6 != NULL) {\n        iVar7 = (**(*piVar6 + 0x18))();\n        iVar7 = iVar7 + 0x18;\n        uStack312 = 0;\n        uStack288 = 0;\n        uStack284 = 0;\n        iStack272 = iVar7;\n        if ((in_stack_00000030 == 0x37a) || (in_stack_00000030 == 0x37b)) {\n            uStack280 = *in_stack_00000038;\n            in_stack_00000038 = in_stack_00000038 + 3;\n            iVar4 = uStack280 - 0xc;\n            arg2_00 = uStack296;\n            while (iVar4 != 0) {\n                uStack296 = uStack296 & 0xffffffff00000000 | *in_stack_00000038;\n                uStack310 = *(in_stack_00000038 + 1);\n                puVar9 = in_stack_00000038 + 6;\n                if (*in_stack_00000038 == 0x80010001) {\n                    uStack288 = *puVar9;\n                    uStack284 = *(in_stack_00000038 + 10);\n                    iVar10 = in_stack_00000038 + 0x16;\n                    if (iVar10 == 0) {\n                        uVar3 = 0;\n                    }\n                    else {\n                        uVar3 = fcn.0042f460(iVar10);\n                    }\n                    fcn.00403160(&iStack272, iVar10, uVar3);\n                    iVar7 = iStack272;\n                    in_stack_00000038 = iVar10 + (*(iStack272 + -0x10) + 1);\n                    iVar4 = iVar4 + (-0x17 - *(iStack272 + -0x10));\n                    uStack312 = uStack310;\n                }\n                else {\n                    iStack192 = fcn.00403cc0(0x28);\n                    in_stack_00000038 = puVar9;\n                    if (iStack192 == 0) {\n                        arg2_00 = 0;\n                        iVar4 = iVar4 + -6;\n                    }\n                    else {\n                        arg2_00 = fcn.0041d18c(iStack192, arg2_00, uStack296 & 0xffffffff);\n                        iVar4 = iVar4 + -6;\n                    }\n                }\n            }\n            in_stack_00000040 = in_stack_00000040 - uStack280;\n            in_stack_00000030 = in_stack_00000030 + -4;\n            uStack296 = arg2_00;\n        }\n        if (*puVar12 == 0x7b) {\n            iVar4 = (*_sym.imp.ole32.dll_CLSIDFromString)(puVar12, auStack104);\n        }\n        else {\n            iVar4 = (*_sym.imp.ole32.dll_CLSIDFromProgID)(puVar12, auStack104);\n        }\n        fcn.00426564(auStack184, in_stack_00000038, in_stack_00000040, 0);\n        iVar10 = iStack208;\n        puVar11 = auStack184;\n        if (in_stack_00000030 == 0x378) {\n            puVar11 = NULL;\n        }\n        iStack304 = 0;\n        if ((-1 < iVar4) && (iVar4 = fcn.0041a16c(iStack208, 1),  iVar4 != 0)) {\n            piStack328 = &iStack304;\n            uStack344 = in_stack_00000030 == 0x377;\n            uStack360 = *(puVar8 + 4);\n            piStack368 = &iStack232;\n            uStack376 = *puVar8;\n            puStack352 = puVar11;\n            iStack336 = iVar5;\n            iVar4 = fcn.0041aa78(*(iVar10 + 0x98), 0, auStack104, 0);\n            if (iVar4 != 0) {\n                fcn.0041c3d4(iStack304, 1);\n                uStack360 = 0x13;\n                piStack368 = piStack368 & 0xffffffff00000000;\n                uStack376 = 0;\n                (*_sym.imp.USER32.dll_SetWindowPos)(*(iStack304 + 0x48), uStack216, 0, 0);\n                *(iStack304 + 0xe0) = uStack296;\n                fcn.004096a8(iStack304 + 0xf8, &iStack272);\n                *(iStack304 + 0xe8) = uStack312;\n                *(iStack304 + 0xf0) = uStack288;\n                *(iStack304 + 0xf4) = uStack284;\n            }\n        }\n        if (iVar5 != 0) {\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(iVar5);\n        }\n        if (iStack304 == 0) {\n            *puStack240 = 0;\n            fcn.004269d8(auStack184);\n            LOCK();\n            piVar1 = iVar7 + -8;\n            iVar4 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar4 + -1 < 1) {\n                (**(**(iVar7 + -0x18) + 8))();\n            }\n        }\n        else {\n            *puStack240 = *(iStack304 + 0x48);\n            fcn.004269d8(auStack184);\n            LOCK();\n            piVar1 = iVar7 + -8;\n            iVar4 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar4 + -1 < 1) {\n                (**(**(iVar7 + -0x18) + 8))();\n            }\n        }\n        fcn.0042dcb0(uStack88 ^ auStack408);\n        return;\n    }\n    fcn.00401cd0(0x80004005);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 2280
    },
    "0041a16c": {
        "rules": [
            "check for trap flag exception/195424436e83481b9cb8f317a67cc52a",
            "check for trap flag exception/195424436e83481b9cb8f317a67cc52a"
        ],
        "decompiled_code": "\nbool fcn.0041a16c(int64_t *arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    ulong in_R8;\n    ulong in_R9;\n    \n    if (arg1[0x13] == 0) {\n        iVar2 = (**(*arg1 + 0x248))(arg1, arg1 + 0x13, in_R8, in_R9, 0xfffffffffffffffe);\n        if ((iVar2 != 0) && (arg1[0x13] == 0)) {\n            iVar4 = fcn.00413c10();\n            iVar4 = (**(**(iVar4 + 0x68) + 0x10))(*(iVar4 + 0x68), arg1);\n            arg1[0x13] = iVar4;\n        }\n        if (arg2 == 0) {\n            iVar4 = *arg1[0x13];\n            uVar5 = (**(*arg1 + 0x260))(arg1);\n            (**(iVar4 + 0x140))(arg1[0x13], uVar5);\n        }\n    }\n    piVar1 = arg1 + 0x13;\n    if (*piVar1 != 0) {\n        while ((*(arg1 + 0xf) >> 8 & 1) == 0) {\n            *(arg1 + 0xf) = *(arg1 + 0xf) | 0x100;\n            uVar5 = (*_sym.imp.USER32.dll_GetParent)(arg1[8]);\n            arg1 = fcn.0040d71c(uVar5);\n            iVar4 = 0;\n            if (arg1 != NULL) {\n                iVar4 = arg1[8];\n            }\n            uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar4, 0xfffffff0);\n            if (((uVar3 >> 0x1e & 1) == 0) || (arg1 == NULL)) break;\n        }\n    }\n    return *piVar1 != 0;\n}\n",
        "token_count": 478
    },
    "00427460": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nushort * fcn.00427460(ushort *arg1, ulong arg2)\n\n{\n    int16_t in_R8W;\n    \n    if (in_R8W == 10) {\n        *arg1 = 10;\n    }\n    else {\n        if (in_R8W == 0xb) {\n            *arg1 = 0xb;\n            arg1[4] = -(arg2 != 0);\n            return arg1;\n        }\n        if (in_R8W == 0x16) {\n            *arg1 = 0x16;\n        }\n        else if (in_R8W == 0x17) {\n            *arg1 = 0x17;\n        }\n        else if (in_R8W == 0x19) {\n            *arg1 = 0x19;\n        }\n        else if (in_R8W == 0x13) {\n            *arg1 = 0x13;\n        }\n        else {\n            *arg1 = 3;\n        }\n    }\n    *(arg1 + 4) = arg2;\n    return arg1;\n}\n",
        "token_count": 238
    },
    "0042f6c0": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.0042f6c0(uint64_t *arg1, uint64_t noname_1, uint64_t arg3)\n\n{\n    uint32_t uVar1;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    \n    uVar3 = arg3;\n    if (7 < arg3) {\n        noname_1 = (noname_1 & 0xff) * 0x101010101010101;\n        if (0x3f < arg3) {\n            uVar1 = -arg1 & 7;\n            if (uVar1 != 0) {\n                uVar3 = arg3 - uVar1;\n                *arg1 = noname_1;\n            }\n            arg1 = uVar1 + arg1;\n            arg3 = uVar3 & 0x3f;\n            uVar3 = uVar3 >> 6;\n            if (uVar3 != 0) {\n                puVar2 = arg1;\n                if (uVar3 < 0x1c00) {\n                    do {\n                        *puVar2 = noname_1;\n                        puVar2[1] = noname_1;\n                        puVar2[2] = noname_1;\n                        arg1 = puVar2 + 8;\n                        puVar2[3] = noname_1;\n                        puVar2[4] = noname_1;\n                        uVar3 = uVar3 - 1;\n                        puVar2[5] = noname_1;\n                        puVar2[6] = noname_1;\n                        puVar2[7] = noname_1;\n                        puVar2 = arg1;\n                    } while (uVar3 != 0);\n                }\n                else {\n                    do {\n                        *puVar2 = noname_1;\n                        puVar2[1] = noname_1;\n                        puVar2[2] = noname_1;\n                        arg1 = puVar2 + 8;\n                        puVar2[3] = noname_1;\n                        puVar2[4] = noname_1;\n                        uVar3 = uVar3 - 1;\n                        puVar2[5] = noname_1;\n                        puVar2[6] = noname_1;\n                        puVar2[7] = noname_1;\n                        puVar2 = arg1;\n                    } while (uVar3 != 0);\n                    LOCK();\n                }\n            }\n        }\n        uVar3 = arg3 & 7;\n        for (arg3 = arg3 >> 3; arg3 != 0; arg3 = arg3 - 1) {\n            *arg1 = noname_1;\n            arg1 = arg1 + 1;\n        }\n    }\n    for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *arg1 = noname_1;\n        arg1 = arg1 + 1;\n    }\n    return;\n}\n",
        "token_count": 651
    },
    "00428718": {
        "rules": [
            "parse credit card information/e6f146abe79f47cd84115fe8b7938431"
        ],
        "decompiled_code": "\nint64_t * fcn.00428718(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    uint32_t in_stack_00000028;\n    uint32_t in_stack_00000030;\n    uint32_t in_stack_00000038;\n    uchar auStack56 [12];\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t iStack36;\n    \n    if (arg2 < 0x76c) {\n        fcn.00401cd0(0x80004005);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    if (0xb < arg3 - 1U) {\n        fcn.00401cd0(0x80004005);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    if (0x1e < arg4 - 1U) {\n        fcn.00401cd0(0x80004005);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    if (0x17 < in_stack_00000028) {\n        fcn.00401cd0(0x80004005);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    if (0x3b < in_stack_00000030) {\n        fcn.00401cd0(0x80004005);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    if (0x3b < in_stack_00000038) {\n        fcn.00401cd0(0x80004005);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    iStack40 = arg3 + -1;\n    iStack36 = arg2 + -0x76c;\n    iStack44 = arg4;\n    iVar3 = fcn.00431a20(auStack56);\n    *arg1 = iVar3;\n    if (iVar3 == -1) {\n        fcn.00401cd0(0x80070057);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    return arg1;\n}\n",
        "token_count": 584
    },
    "0042bd38": {
        "rules": [
            "PEB access/35f28d23090149119036cdb16976bf66"
        ],
        "decompiled_code": "\nbool fcn.0042bd38(int64_t lpMessageFilter)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.ole32.dll_CoRegisterMessageFilter)(lpMessageFilter + 0x60, 0);\n    if (iVar1 == 0) {\n        *(lpMessageFilter + 0x40) = 1;\n    }\n    return iVar1 == 0;\n}\n",
        "token_count": 91
    },
    "00401010": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.00401010(ulong *arg1)\n\n{\n    fcn.00404d68(arg1, 0);\n    *arg1 = 0x448c98;\n    return arg1;\n}\n",
        "token_count": 48
    },
    "004053e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004053e0(int64_t arg1)\n\n{\n    if (*(arg1 + 0x20) != 0) {\n        (**(*(arg1 + 0x20) + 0x38))();\n    }\n    *(arg1 + 0x38) = 0;\n    return;\n}\n",
        "token_count": 70
    },
    "0042dcd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042dcd0(int64_t lpMem)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    if ((lpMem != 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x46b6a0, 0, lpMem),  iVar2 == 0)) {\n        puVar1 = fcn.0042f5c0();\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uVar4 = fcn.0042f570(uVar3);\n        *puVar1 = uVar4;\n    }\n    return;\n}\n",
        "token_count": 157
    },
    "004013d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.004013d0(ulong *arg1)\n\n{\n    fcn.004070b8(arg1, 100, 0);\n    *arg1 = 0x448e68;\n    return arg1;\n}\n",
        "token_count": 52
    },
    "00401450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00401450(uint16_t *arg1, uint16_t *arg2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint16_t uVar9;\n    uint16_t uVar10;\n    uint16_t *puVar11;\n    uint64_t uVar12;\n    \n    puVar11 = arg2;\n    iVar5 = fcn.00401430(arg1);\n    iVar6 = fcn.00401430(arg2);\n    if (iVar5 != iVar6) {\n        return 1;\n    }\n    uVar12 = 0;\n    iVar7 = fcn.00401430(arg1);\n    iVar4 = *0x4640d0;\n    iVar3 = *0x4640cc;\n    iVar2 = *0x4640c8;\n    iVar1 = *0x4640c4;\n    iVar6 = *0x4640c0;\n    iVar5 = *0x4640bc;\n    if (iVar7 != 0) {\n        do {\n            uVar10 = *arg1;\n            uVar9 = *puVar11;\n            if ((0x40 < uVar10) &&\n               (uVar10 <= (iVar1 * 4 + -4) * iVar3 + 0x5a + ((iVar1 - (iVar6 + 1 + iVar3) * iVar2) - iVar4) * 4)) {\n                uVar10 = uVar10 + 0x20;\n            }\n            if ((0x40 < uVar9) && (uVar9 <= (((iVar5 + 1) * iVar4 + 1 + iVar1) * iVar3 + iVar2) * 2 + 0x5a)) {\n                uVar9 = uVar9 + 0x20;\n            }\n            if (uVar10 != uVar9) {\n                return 1;\n            }\n            arg1 = arg1 + 1;\n            uVar12 = uVar12 + 1;\n            puVar11 = puVar11 + 1;\n            uVar8 = fcn.00401430(arg1);\n        } while (uVar12 < uVar8);\n    }\n    return 0;\n}\n",
        "token_count": 524
    },
    "00401b10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00401b10(void)\n\n{\n    int64_t lpMem;\n    ulong uVar1;\n    uint64_t uVar2;\n    \n    lpMem = fcn.0042dd10(100000000);\n    if (lpMem == 0) {\n        return 3;\n    }\n    uVar2 = 0;\n    do {\n        *(uVar2 + lpMem) = uVar2;\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 100000000);\n    fcn.0042dcd0(lpMem);\n    uVar1 = 3;\n    if (uVar2 == 100000000) {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 167
    },
    "00401cf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint16_t * fcn.00401cf0(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    uint16_t *puVar2;\n    uint64_t uVar3;\n    uint16_t *puVar4;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)();\n    if (iVar1 == 0) {\n        return NULL;\n    }\n    puVar2 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar1);\n    if (puVar2 != NULL) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_SizeofResource)(arg1, arg2);\n        puVar4 = (uVar3 & 0xffffffff) + puVar2;\n        for (arg3._0_4_ = arg3 & 0xf; arg3 != 0; arg3._0_4_ = arg3 - 1) {\n            if (puVar4 <= puVar2) {\n                return NULL;\n            }\n            puVar2 = puVar2 + *puVar2 + 1;\n        }\n        if (puVar2 < puVar4) {\n            if (*puVar2 == 0) {\n                return NULL;\n            }\n            return puVar2;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 283
    },
    "00401fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401fa0(int64_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    if ((*(*arg1 + -0xc) < arg2) && (0 < arg2)) {\n        iVar2 = (**(**(*arg1 + -0x18) + 0x10))();\n        if (iVar2 == 0) {\n            fcn.00401ed0();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        *arg1 = iVar2 + 0x18;\n        return;\n    }\n    fcn.00401ed0();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 168
    },
    "00402040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.00402040(ulong *arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    fcn.004070b8(arg1, 0x66, arg2);\n    *arg1 = 0x449bf8;\n    fcn.0040b9b0(arg1 + 0x1d);\n    arg1[0x1d] = 0x449948;\n    fcn.0040b9b0(arg1 + 0x32);\n    arg1[0x32] = 0x449948;\n    fcn.0040b9b0(arg1 + 0x47);\n    arg1[0x47] = 0x449948;\n    fcn.0040b9b0(arg1 + 0x5e);\n    arg1[0x5e] = 0x4491d8;\n    fcn.00408234(arg1 + 0x73);\n    fcn.0040b9b0(arg1 + 0x76);\n    arg1[0x76] = 0x449448;\n    fcn.0040b9b0(arg1 + 0x8b);\n    arg1[0x8b] = 0x4496c8;\n    fcn.00413c10();\n    iVar1 = fcn.00413c10();\n    uVar2 = (*_sym.imp.USER32.dll_LoadIconA)(*(iVar1 + 0x18), 0x80);\n    arg1[0xa3] = uVar2;\n    return arg1;\n}\n",
        "token_count": 358
    },
    "004025f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "capture webcam video/bb0855a130d0439699d2d4184eb39c47"
        ],
        "decompiled_code": "\nvoid fcn.004025f0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    \n    fcn.004081f0(arg1 + 0xe8, 0, 0xff, 0);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(arg1 + 0x128), 0x414, 0x10);\n    iVar1 = fcn.004117b0(arg1, 0x3ef);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(iVar1 + 0x40), 0x1001, 0);\n    fcn.004081f0(arg1 + 400, 0, 0xff, 0);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(arg1 + 0x1d0), 0x414, 0x10);\n    iVar1 = fcn.004117b0(arg1, 0x3f0);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(iVar1 + 0x40), 0x1001, 0);\n    fcn.004081f0(arg1 + 0x238, 0, 0xff, 0);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(arg1 + 0x278), 0x414, 0x10);\n    iVar1 = fcn.004117b0(arg1, 0x3f1);\n    // WARNING: Could not recover jumptable at 0x004026f7. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.USER32.dll_SendMessageA)(*(iVar1 + 0x40), 0x1001, 0, 0xff0000);\n    return;\n}\n",
        "token_count": 391
    },
    "0040d610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040d610(int64_t *arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.00415eb0(0x46aaa8, 0x405abc);\n    if (iVar2 == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040d65a. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(*arg1 + 0x220))(arg1, *(iVar2 + 0xa0), *(iVar2 + 0xa8), *(iVar2 + 0xb0));\n    return;\n}\n",
        "token_count": 176
    },
    "00402d90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402d90(int64_t *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    iVar3 = *arg1;\n    LOCK();\n    piVar1 = iVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar3 + -0x18) + 8))();\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "00402eb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00402eb0(int64_t arg1)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    \n    fcn.00413c10();\n    fcn.00408854(arg1 + 0x398, 0x18, 0x18, 9);\n    iVar2 = fcn.00413c10();\n    uVar3 = (*_sym.imp.USER32.dll_LoadIconA)(*(iVar2 + 0x18), 0x8a);\n    uVar1 = *(arg1 + 0x3a0);\n    iVar2 = fcn.00413c10();\n    fcn.00402c40(**(iVar2 + 200), uVar1, 0xffffffff, uVar3);\n    iVar2 = fcn.00413c10();\n    uVar3 = (*_sym.imp.USER32.dll_LoadIconA)(*(iVar2 + 0x18), 0x89);\n    uVar1 = *(arg1 + 0x3a0);\n    iVar2 = fcn.00413c10();\n    fcn.00402c40(**(iVar2 + 200), uVar1, 0xffffffff, uVar3);\n    return 1;\n}\n",
        "token_count": 276
    },
    "00402f90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402f90(int64_t *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    iVar3 = *arg1;\n    LOCK();\n    piVar1 = iVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar3 + -0x18) + 8))();\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "00402fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nulong fcn.00402fc0(int64_t *arg1, ulong hModule, ulong arg3)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint16_t *puVar7;\n    uint64_t uVar8;\n    ulong uVar9;\n    uint16_t *puVar10;\n    \n    iVar5 = (*_sym.imp.KERNEL32.dll_FindResourceA)(hModule, (arg3 >> 4) + 1, 6);\n    if (((iVar5 != 0) && (iVar6 = (*_sym.imp.KERNEL32.dll_LoadResource)(hModule, iVar5),  iVar6 != 0)) &&\n       (puVar7 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar6),  puVar7 != NULL)) {\n        uVar8 = (*_sym.imp.KERNEL32.dll_SizeofResource)(hModule, iVar5);\n        puVar10 = (uVar8 & 0xffffffff) + puVar7;\n        for (arg3._0_4_ = arg3 & 0xf; arg3 != 0; arg3._0_4_ = arg3 - 1) {\n            if (puVar10 <= puVar7) {\n                return 0;\n            }\n            puVar7 = puVar7 + *puVar7 + 1;\n        }\n        if ((puVar7 < puVar10) && (uVar1 = *puVar7,  uVar1 != 0)) {\n            uVar3 = (**0x467540)();\n            uVar4 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(uVar3, 0, puVar7 + 1, uVar1, 0, 0, 0, 0);\n            if ((1U - *(*arg1 + -8) | *(*arg1 + -0xc) - uVar4) < 0) {\n                fcn.00402e50(arg1, uVar4);\n            }\n            iVar5 = *arg1;\n            uVar1 = *puVar7;\n            uVar3 = (**0x467540)();\n            (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(uVar3, 0, puVar7 + 1, uVar1, iVar5, uVar4, 0, 0);\n            if ((-1 < uVar4) && (uVar4 <= *(*arg1 + -0xc))) {\n                *(*arg1 + -0x10) = uVar4;\n                *(uVar4 + *arg1) = 0;\n                return 1;\n            }\n            fcn.00401cd0(0x80070057);\n            pcVar2 = swi(3);\n            uVar9 = (*pcVar2)();\n            return uVar9;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 650
    },
    "00403160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403160(int64_t *arg1, int64_t arg2, ulong arg3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t arg1_00;\n    code *pcVar6;\n    int64_t iVar7;\n    \n    iVar7 = arg3;\n    if (arg3 == 0) {\n        iVar7 = *arg1;\n        piVar4 = *(iVar7 + -0x18);\n        if (*(iVar7 + -0x10) != 0) {\n            if (-1 < *(iVar7 + -8)) {\n                LOCK();\n                piVar1 = iVar7 + -8;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar2 + -1 < 1) {\n                    (**(**(iVar7 + -0x18) + 8))();\n                }\n                iVar7 = (**(*piVar4 + 0x18))(piVar4);\n                *arg1 = iVar7 + 0x18;\n                return;\n            }\n            if (*(iVar7 + -0xc) < 0) {\n                fcn.00401cd0(0x80070057);\n                pcVar6 = swi(3);\n                (*pcVar6)();\n                return;\n            }\n            *(iVar7 + -0x10) = 0;\n            **arg1 = 0;\n            return;\n        }\n    }\n    else {\n        if (arg2 == 0) {\n            fcn.00401cd0(0x80070057);\n            pcVar6 = swi(3);\n            (*pcVar6)();\n            return;\n        }\n        iVar5 = *arg1;\n        uVar3 = *(iVar5 + -0x10);\n        if ((1U - *(iVar5 + -8) | *(iVar5 + -0xc) - arg3) < 0) {\n            fcn.00402e50(arg1, arg3);\n        }\n        arg1_00 = *arg1;\n        if (uVar3 < arg2 - iVar5) {\n            fcn.0042e220(arg1_00, iVar7, arg2, iVar7);\n        }\n        else {\n            fcn.0042e300(arg1_00, iVar7, arg1_00 + (arg2 - iVar5), iVar7);\n        }\n        if ((arg3 < 0) || (*(*arg1 + -0xc) < arg3)) {\n            fcn.00401cd0(0x80070057);\n            pcVar6 = swi(3);\n            (*pcVar6)();\n            return;\n        }\n        *(*arg1 + -0x10) = arg3;\n        *(iVar7 + *arg1) = 0;\n    }\n    return;\n}\n",
        "token_count": 639
    },
    "004032c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004032c0(int64_t *arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    ulong uStackX24;\n    ulong uStackX32;\n    \n    uStackX24 = arg3;\n    uStackX32 = arg4;\n    if (arg2 == 0) {\n        fcn.00401cd0(0x80070057);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    uVar2 = fcn.0042dde0(arg2, &uStackX24);\n    if ((1U - *(*arg1 + -8) | *(*arg1 + -0xc) - uVar2) < 0) {\n        fcn.00402e50(arg1, uVar2);\n    }\n    fcn.0042e000(*arg1, uVar2 + 1, arg2, &uStackX24);\n    if ((-1 < uVar2) && (uVar2 <= *(*arg1 + -0xc))) {\n        *(*arg1 + -0x10) = uVar2;\n        *(uVar2 + *arg1) = 0;\n        return;\n    }\n    fcn.00401cd0(0x80070057);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 317
    },
    "00403380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403380(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t iStackX16;\n    ulong uVar6;\n    \n    uVar6 = 0xfffffffffffffffe;\n    piVar5 = fcn.00413fdc();\n    if (piVar5 == NULL) {\n        fcn.00401cd0(0x80004005);\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    iStackX16 = (**(*piVar5 + 0x18))(piVar5);\n    iStackX16 = iStackX16 + 0x18;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(arg1 + 0x128), 0x405, 1, 0x61, uVar6);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(arg1 + 0x1d0), 0x405, 1, 0x92);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(arg1 + 0x278), 0x405, 1, 0xc2);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(arg1 + 0x498), 0x1001, 0, 0xc29261);\n    fcn.004032c0(&iStackX16, \"%s %d\", \" Red : \", 0x61);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(arg1 + 0x3f0), 0x401, 0, iStackX16);\n    fcn.004032c0(&iStackX16, \"%s %d\", \" Green : \", 0x92);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(arg1 + 0x3f0), 0x401, 1, iStackX16);\n    fcn.004032c0(&iStackX16, \"%s %d\", \" Blue : \", 0xc2);\n    (*_sym.imp.USER32.dll_SendMessageA)(*(arg1 + 0x3f0), 0x401, 2, iStackX16);\n    fcn.004032c0(&iStackX16, \"%s 0x%0.8X\", \" Hex : \", 0xc29261);\n    iVar4 = iStackX16;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(arg1 + 0x3f0), 0x401, 3, iStackX16);\n    LOCK();\n    piVar1 = iVar4 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar4 + -0x18) + 8))();\n    }\n    return;\n}\n",
        "token_count": 665
    },
    "00403cc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00403cc0(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    \n    while( true ) {\n        iVar2 = fcn.0042dd10(arg1);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        if (*0x4641f8 == NULL) break;\n        iVar1 = (**0x4641f8)(arg1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 123
    },
    "004041d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004041d8(ulong arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.004057c8();\n    if ((iVar1 != 0) && (*(iVar1 + 0x78) != NULL)) {\n        (**(iVar1 + 0x78))(1, 1);\n    }\n    // WARNING: Could not recover jumptable at 0x00404203. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.USER32.dll_PostQuitMessage)(arg1);\n    return;\n}\n",
        "token_count": 128
    },
    "00404ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00404ed0(int64_t *arg1, uint64_t arg2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    \n    piVar3 = fcn.00413fdc();\n    if (piVar3 == NULL) {\n        fcn.00401cd0(0x80004005);\n        pcVar1 = swi(3);\n        piVar3 = (*pcVar1)();\n        return piVar3;\n    }\n    iVar4 = (**(*piVar3 + 0x18))(piVar3);\n    *arg1 = iVar4 + 0x18;\n    if (arg2 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        if ((arg2 & 0xffffffffffff0000) == 0) {\n            iVar4 = fcn.00413fc8(arg2 & 0xffff);\n            if (iVar4 == 0) {\n                return arg1;\n            }\n            fcn.00402fc0(arg1, iVar4, arg2 & 0xffff);\n            return arg1;\n        }\n        uVar2 = fcn.0042f460(arg2);\n    }\n    fcn.00403160(arg1, arg2, uVar2);\n    return arg1;\n}\n",
        "token_count": 299
    },
    "00405000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00405000(int64_t arg1, uint64_t arg2, ulong noname_2, code *arg4)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    ulong *in_stack_00000028;\n    uint64_t in_stack_00000030;\n    int64_t *in_stack_00000038;\n    \n    if (arg1 == 0) {\n        fcn.00412ca8();\n        pcVar2 = swi(3);\n        uVar4 = (*pcVar2)();\n        return uVar4;\n    }\n    if (in_stack_00000038 != NULL) {\n        *in_stack_00000038 = arg1;\n        in_stack_00000038[1] = arg4;\n        return 1;\n    }\n    if (in_stack_00000030 < 0x3f) {\n        if (in_stack_00000030 == 0x3e) {\n            if (in_stack_00000028 == NULL) {\n                fcn.00412ca8();\n                pcVar2 = swi(3);\n                uVar4 = (*pcVar2)();\n                return uVar4;\n            }\n            (*arg4)(arg1, arg2, in_stack_00000028[1], *in_stack_00000028);\n            return 1;\n        }\n        if (in_stack_00000030 == 0x38) {\n            (*arg4)();\n            return 1;\n        }\n        if (in_stack_00000030 == 0x39) {\n            uVar3 = (*arg4)();\n        }\n        else {\n            if (in_stack_00000030 == 0x3a) {\n                (*arg4)();\n                return 1;\n            }\n            if (in_stack_00000030 == 0x3b) {\n                uVar3 = (*arg4)();\n            }\n            else {\n                if (in_stack_00000030 == 0x3c) {\n                    if (in_stack_00000028 == NULL) {\n                        fcn.00412ca8();\n                        pcVar2 = swi(3);\n                        uVar4 = (*pcVar2)();\n                        return uVar4;\n                    }\n                    (*arg4)(arg1, in_stack_00000028[1], *in_stack_00000028);\n                    return 1;\n                }\n                if (in_stack_00000030 != 0x3d) {\n                    return 0;\n                }\n                if (in_stack_00000028 == NULL) {\n                    fcn.00412ca8();\n                    pcVar2 = swi(3);\n                    uVar4 = (*pcVar2)();\n                    return uVar4;\n                }\n                uVar3 = (*arg4)(arg1, in_stack_00000028[1], *in_stack_00000028);\n            }\n        }\n    }\n    else if (in_stack_00000030 == 0x3f) {\n        if (in_stack_00000028 == NULL) {\n            fcn.00412ca8();\n            pcVar2 = swi(3);\n            uVar4 = (*pcVar2)();\n            return uVar4;\n        }\n        uVar3 = (*arg4)(arg1, arg2, in_stack_00000028[1], *in_stack_00000028);\n    }\n    else {\n        if (in_stack_00000030 == 0x40) {\n            if (in_stack_00000028 == NULL) {\n                fcn.00412ca8();\n                pcVar2 = swi(3);\n                uVar4 = (*pcVar2)();\n                return uVar4;\n            }\n            (*arg4)(arg1, in_stack_00000028);\n        }\n        else {\n            if (in_stack_00000030 != 0x41) {\n                if (in_stack_00000030 == 0x42) {\n                    (*arg4)(arg1, in_stack_00000028);\n                    return 1;\n                }\n                if (in_stack_00000030 != 0x43) {\n                    return 0;\n                }\n                uVar3 = (*arg4)(arg1, in_stack_00000028);\n                goto code_r0x00405173;\n            }\n            if (in_stack_00000028 == NULL) {\n                fcn.00412ca8();\n                pcVar2 = swi(3);\n                uVar4 = (*pcVar2)();\n                return uVar4;\n            }\n            (*arg4)(arg1, in_stack_00000028, arg2 & 0xffffffff);\n        }\n        iVar1 = *(in_stack_00000028 + 0x2c);\n        *(in_stack_00000028 + 0x2c) = 0;\n        uVar3 = iVar1 == 0;\n    }\ncode_r0x00405173:\n    return uVar3;\n}\n",
        "token_count": 1074
    },
    "004053a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004053a8(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    uVar1 = fcn.00413c10();\n    *(arg1 + 0x38) = uVar1;\n    *(arg1 + 8) = 1;\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 0x18) = 0;\n    *(arg1 + 0x20) = 0;\n    *(arg1 + 0x30) = 0;\n    *(arg1 + 0x28) = 1;\n    return arg1;\n}\n",
        "token_count": 141
    },
    "00405408": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405408(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.00413c10();\n    // WARNING: Could not recover jumptable at 0x00405421. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(iVar1 + 8) + 0x138))(*(iVar1 + 8), 1);\n    return;\n}\n",
        "token_count": 94
    },
    "00405428": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405428(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.00413c10();\n    // WARNING: Could not recover jumptable at 0x00405441. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(iVar1 + 8) + 0x138))(*(iVar1 + 8), 0xffffffff);\n    return;\n}\n",
        "token_count": 95
    },
    "004057dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004057dc(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.00413268();\n    return iVar1 + 0x58;\n}\n",
        "token_count": 43
    },
    "00405820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405820(ulong arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.00413c60();\n    piVar1 = *(iVar2 + 8);\n    if (piVar1 == NULL) {\n        fcn.004057f0(arg1, arg2);\n    }\n    else {\n        (**(*piVar1 + 0xd8))(piVar1, arg1, arg2);\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "00405860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405860(int64_t arg1)\n\n{\n    int64_t iVar1;\n    \n    *(arg1 + 0x40) = 0;\n    *(arg1 + 0x48) = 0;\n    *(arg1 + 0x58) = 0;\n    *(arg1 + 0x60) = 0;\n    iVar1 = fcn.00413268();\n    *(iVar1 + 0x60) = 0;\n    *(iVar1 + 0x90) = 0;\n    (*_sym.imp.USER32.dll_GetCursorPos)(iVar1 + 0x88);\n    *(arg1 + 0x50) = 1;\n    *(arg1 + 0x80) = 0;\n    *(arg1 + 0x78) = 0;\n    return;\n}\n",
        "token_count": 184
    },
    "00405bb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405bb0(ulong arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.00413c60();\n    piVar1 = *(iVar2 + 8);\n    if (piVar1 == NULL) {\n        fcn.00405b14(arg1);\n    }\n    else {\n        (**(*piVar1 + 0xb0))(piVar1, arg1);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00405be4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00405be4(int64_t arg1)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    \n    iVar1 = *(arg1 + 8);\n    if ((iVar1 == 0x200) || (iVar1 == 0xa0)) {\n        iVar3 = fcn.00413268();\n        uVar2 = *(arg1 + 0x24);\n        if ((*(iVar3 + 0x88) == uVar2) && ((*(iVar3 + 0x8c) == uVar2 >> 0x20 && (*(arg1 + 8) == *(iVar3 + 0x90))))) {\n            return 0;\n        }\n        *(iVar3 + 0x88) = uVar2;\n        *(iVar3 + 0x90) = *(arg1 + 8);\n    }\n    else if ((iVar1 == 0xf) || (iVar1 == 0x118)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 230
    },
    "00405c5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405c5c(ulong arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.00413c60();\n    piVar1 = *(iVar2 + 8);\n    if (piVar1 == NULL) {\n        fcn.00405be4(arg1);\n    }\n    else {\n        (**(*piVar1 + 200))(piVar1, arg1);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "00405d5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00405d5c(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    \n    iVar2 = fcn.00413268();\n    uVar3 = (*_sym.imp.USER32.dll_GetMessageA)(iVar2 + 0x58, 0, 0, 0);\n    if (uVar3 != 0) {\n        if (*(iVar2 + 0x60) != 0x36a) {\n            iVar1 = fcn.00405bb0(iVar2 + 0x58);\n            if (iVar1 == 0) {\n                (*_sym.imp.USER32.dll_TranslateMessage)(iVar2 + 0x58);\n                (*_sym.imp.USER32.dll_DispatchMessageA)(iVar2 + 0x58);\n            }\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 200
    },
    "00405db8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405db8(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.00413c60();\n    if (*(iVar1 + 8) == NULL) {\n        fcn.00405d5c();\n    }\n    else {\n        (**(**(iVar1 + 8) + 0xb8))();\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "00406248": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406248(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t arg1_00;\n    code *pcVar1;\n    int64_t arg2_00;\n    uint32_t uVar2;\n    int32_t in_stack_00000028;\n    \n    arg2_00 = arg3;\n    uVar2 = arg3 + in_stack_00000028;\n    if ((1U - *(*arg1 + -8) | *(*arg1 + -0xc) - uVar2) < 0) {\n        fcn.00402e50(arg1, uVar2);\n    }\n    arg1_00 = *arg1;\n    fcn.0042e220(arg1_00, arg2_00, arg2, arg2_00);\n    fcn.0042e220(arg2_00 + arg1_00, in_stack_00000028, arg4, in_stack_00000028);\n    if ((-1 < uVar2) && (uVar2 <= *(*arg1 + -0xc))) {\n        *(*arg1 + -0x10) = uVar2;\n        *(uVar2 + *arg1) = 0;\n        return;\n    }\n    fcn.00401cd0(0x80070057);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 311
    },
    "004062ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004062ec(int64_t *arg1, int64_t arg2, ulong arg3)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    \n    iVar2 = *arg1;\n    uVar1 = *(iVar2 + -0x10);\n    uVar4 = uVar1 + arg3;\n    if ((1U - *(iVar2 + -8) | *(iVar2 + -0xc) - uVar4) < 0) {\n        fcn.00402e50(arg1, uVar4);\n    }\n    if (arg2 - iVar2 <= uVar1) {\n        arg2 = *arg1 + (arg2 - iVar2);\n    }\n    fcn.0042e220(uVar1 + *arg1, arg3, arg2, arg3);\n    if ((-1 < uVar4) && (uVar4 <= *(*arg1 + -0xc))) {\n        *(*arg1 + -0x10) = uVar4;\n        *(uVar4 + *arg1) = 0;\n        return;\n    }\n    fcn.00401cd0(0x80070057);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 290
    },
    "00406380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00406380(int64_t *arg1, int64_t *arg2, int64_t arg3)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    piVar2 = NULL;\n    if (*(*arg2 + -0x18) != NULL) {\n        piVar2 = (**(**(*arg2 + -0x18) + 0x20))();\n    }\n    if (piVar2 == NULL) {\n        piVar2 = fcn.00413fdc();\n        piVar2 = (**(*piVar2 + 0x20))();\n    }\n    if (piVar2 != NULL) {\n        iVar3 = (**(*piVar2 + 0x18))(piVar2);\n        *arg1 = iVar3 + 0x18;\n        if (arg3 != 0) {\n            fcn.0042f460(arg3);\n        }\n        fcn.00406248(arg1, *arg2, *(*arg2 + -0x10), arg3);\n        return arg1;\n    }\n    fcn.00401cd0(0x80004005);\n    pcVar1 = swi(3);\n    piVar2 = (*pcVar1)();\n    return piVar2;\n}\n",
        "token_count": 285
    },
    "004163c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004163c8(ulong arg1)\n\n{\n    code *pcVar1;\n    \n    if (0x10 < arg1) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x004163ed. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg1 * 0x28 + 0x46ac60);\n    return;\n}\n",
        "token_count": 129
    },
    "00406bcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00406bcc(int64_t arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    iVar4 = arg1;\n    if (arg1 != 0) goto code_r0x00406c26;\n    iVar4 = fcn.00413268();\n    if (*(iVar4 + 0x158) == 0) {\n        piVar5 = fcn.004057c8();\n        if (piVar5 == NULL) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = (**(*piVar5 + 0xe8))(piVar5);\n        }\n        if (iVar4 == 0) {\n            iVar4 = 0;\n            iVar6 = iVar4;\n            iVar7 = iVar4;\n            goto joined_r0x00406c54;\n        }\n        iVar4 = *(iVar4 + 0x40);\n    }\n    else {\n        iVar4 = *(*(iVar4 + 0x158) + 0x40);\n    }\n    for (; iVar6 = iVar4,  iVar7 = iVar4,  iVar4 != 0; iVar4 = (*_sym.imp.USER32.dll_GetParent)(iVar4)) {\ncode_r0x00406c26:\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar4, 0xfffffff0);\n        iVar6 = iVar4;\n        iVar7 = iVar4;\n        if ((uVar2 >> 0x1e & 1) == 0) break;\n    }\njoined_r0x00406c54:\n    while (iVar1 = iVar6,  iVar1 != 0) {\n        iVar6 = (*_sym.imp.USER32.dll_GetParent)(iVar1);\n        iVar4 = iVar1;\n    }\n    if ((arg1 == 0) && (iVar7 != 0)) {\n        iVar7 = (*_sym.imp.USER32.dll_GetLastActivePopup)(iVar7);\n    }\n    if (arg2 != NULL) {\n        if (((iVar4 == 0) || (iVar3 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar4),  iVar3 == 0)) || (iVar4 == iVar7))\n        {\n            *arg2 = 0;\n        }\n        else {\n            *arg2 = iVar4;\n            (*_sym.imp.USER32.dll_EnableWindow)(iVar4, 0);\n        }\n    }\n    return iVar7;\n}\n",
        "token_count": 576
    },
    "00406e54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406e54(ulong arg1, uint64_t arg2, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.00413c10();\n    if (*(iVar1 + 8) == NULL) {\n        fcn.00406cc4(0, arg1, arg2 & 0xffffffff, arg3 & 0xffffffff);\n    }\n    else {\n        (**(**(iVar1 + 8) + 0x130))();\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "00406f68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00406f68(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    ulong arg2_00;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    if (arg2 == 0x110) {\n        arg2_00 = fcn.0040d758(arg1);\n        piVar2 = fcn.004156f8(0x44abe0, arg2_00);\n        if (piVar2 == NULL) {\n            iVar3 = 1;\n        }\n        else {\n            iVar1 = (**(*piVar2 + 0x290))(piVar2);\n            iVar3 = iVar1;\n        }\n    }\n    else {\n        iVar3 = 0;\n    }\n    return iVar3;\n}\n",
        "token_count": 174
    },
    "00407008": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407008(ulong arg1)\n\n{\n    int32_t iVar1;\n    uchar auStack184 [32];\n    ulong uStack152;\n    uchar auStack136 [112];\n    uint64_t uStack24;\n    \n    uStack152 = 0xfffffffffffffffe;\n    uStack24 = *0x465c38 ^ auStack184;\n    fcn.00414d88(auStack136, arg1);\n    iVar1 = fcn.00411760(arg1);\n    if (iVar1 == 0) {\n        fcn.0040d610(arg1);\n        fcn.00414e10(auStack136);\n    }\n    else {\n        fcn.00414e10(auStack136);\n    }\n    fcn.0042dcb0(uStack24 ^ auStack184);\n    return;\n}\n",
        "token_count": 183
    },
    "00407110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407110(int64_t *arg1, ulong arg2)\n\n{\n    if ((*(arg1 + 0xf) & 0x18) != 0) {\n        (**(*arg1 + 0x108))(arg1, arg2 & 0xffffffff);\n    }\n    // WARNING: Could not recover jumptable at 0x0040713b. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.USER32.dll_EndDialog)(arg1[8], arg2);\n    return;\n}\n",
        "token_count": 122
    },
    "00407350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00407350(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    iVar1 = fcn.00413c10();\n    uVar2 = 0;\n    if (*(iVar1 + 8) != 0) {\n        fcn.00406cbc(*(iVar1 + 8), 0);\n    }\n    if (*(arg1 + 0xd0) != 0) {\n        uVar2 = *(*(arg1 + 0xd0) + 0x40);\n    }\n    uVar2 = fcn.00406bcc(uVar2, arg1 + 0xd8);\n    fcn.0040fad0(arg1);\n    return uVar2;\n}\n",
        "token_count": 162
    },
    "004073a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004073a8(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    \n    fcn.0040d820();\n    fcn.0040d7d4(arg1);\n    iVar2 = (*_sym.imp.USER32.dll_IsWindow)(*(arg1 + 0xd8));\n    if (iVar2 != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(*(arg1 + 0xd8), 1);\n    }\n    *(arg1 + 0xd8) = 0;\n    iVar1 = fcn.00413c10();\n    if (*(iVar1 + 8) != 0) {\n        fcn.00406cbc(*(iVar1 + 8), 1);\n    }\n    return;\n}\n",
        "token_count": 174
    },
    "0040756c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040756c(int64_t arg1)\n\n{\n    int32_t iVar1;\n    int64_t hWnd;\n    \n    if (*(arg1 + 200) == 0) {\n        iVar1 = fcn.004116ac(arg1, *(arg1 + 0xb0));\n    }\n    else {\n        iVar1 = fcn.0041112c(arg1, *(arg1 + 200));\n    }\n    if ((iVar1 != 0) && (iVar1 = fcn.0040cd70(arg1, 0),  iVar1 != 0)) {\n        hWnd = fcn.004117b0(arg1, 0xe146);\n        if (hWnd != 0) {\n            iVar1 = fcn.004074e4();\n            fcn.004119d8(hWnd, -(iVar1 != 0) & 5);\n        }\n        return 1;\n    }\n    fcn.00407110(arg1, 0xffffffff);\n    return 0;\n}\n",
        "token_count": 219
    },
    "00407708": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00407708(int64_t *arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    int32_t *piVar1;\n    int64_t *piVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    bool bVar9;\n    int16_t aiStackX32 [4];\n    int64_t iStack152;\n    int64_t iStack144;\n    int64_t iStack136;\n    int64_t *piStack128;\n    uchar auStack120 [24];\n    ulong uStack96;\n    uchar auStack88 [32];\n    \n    uStack96 = 0xfffffffffffffffe;\n    iVar8 = 0;\n    if (arg4 == 0) {\n        iVar5 = fcn.00413c10();\n        arg4 = *(iVar5 + 0x18);\n    }\n    iVar5 = fcn.00413c10();\n    piVar2 = *(iVar5 + 0x68);\n    iStack144 = 0;\n    iStack136 = 0;\n    piStack128 = piVar2;\n    fcn.004112e4(0x10);\n    fcn.004112e4(0x7c000);\n    if (piVar2 != NULL) {\n        iVar4 = (**(*arg1 + 600))(arg1, auStack88);\n        if (iVar4 == 0) {\n            return 0;\n        }\n        arg2 = (**(*piVar2 + 0x28))(piVar2, auStack88, arg2);\n    }\n    if (arg2 == 0) {\n        return 0;\n    }\n    piVar6 = fcn.00413fdc();\n    if (piVar6 == NULL) {\n        fcn.00401cd0(0x80004005);\n        pcVar3 = swi(3);\n        uVar7 = (*pcVar3)();\n        return uVar7;\n    }\n    iStack152 = (**(*piVar6 + 0x18))(piVar6);\n    iStack152 = iStack152 + 0x18;\n    aiStackX32[0] = 0;\n    iVar4 = fcn.00418018(arg2, &iStack152, aiStackX32);\n    bVar9 = iVar4 == 0;\n    if (*0x46aff8 == 0) {\ncode_r0x0040785e:\n        iVar5 = 0;\n        if (!bVar9) goto code_r0x004078af;\n    }\n    else if (!bVar9) {\n        iVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x2a);\n        iVar5 = iVar8;\n        if (iVar4 == 0) goto code_r0x004078af;\n        iVar4 = fcn.0042ff10(iStack152, \"MS Shell Dlg\");\n        bVar9 = iVar4 == 0;\n        if (!bVar9) goto code_r0x004078af;\n        if (aiStackX32[0] == 8) {\n            aiStackX32[0] = 0;\n        }\n        goto code_r0x0040785e;\n    }\n    fcn.00417fd0(auStack120, arg2);\n    fcn.00417ef4(auStack120);\n    iVar5 = fcn.00417b10(auStack120);\n    iStack144 = iVar5;\n    fcn.00417af8(auStack120);\n    if (iVar5 != 0) {\n        arg2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar5);\n    }\ncode_r0x004078af:\n    *(arg1 + 0x11) = 0xffffffff;\n    *(arg1 + 0xf) = *(arg1 + 0xf) | 0x10;\n    fcn.0040fad0(arg1);\n    if (arg3 != 0) {\n        iVar8 = *(arg3 + 0x40);\n    }\n    iVar8 = (*_sym.imp.USER32.dll_CreateDialogIndirectParamA)(arg4, arg2, iVar8, fcn.00406f68, 0);\n    LOCK();\n    piVar1 = iStack152 + -8;\n    iVar4 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    iStack136 = iVar8;\n    if (iVar4 + -1 < 1) {\n        (**(**(iStack152 + -0x18) + 8))();\n    }\n    if ((piVar2 != NULL) && ((**(*piVar2 + 0x30))(piVar2, auStack88),  iVar8 != 0)) {\n        (**(*arg1 + 600))(arg1, 0);\n    }\n    iVar4 = fcn.0040d820();\n    if (iVar4 == 0) {\n        (**(*arg1 + 0x228))(arg1);\n    }\n    if ((iVar8 != 0) && ((*(arg1 + 0xf) & 0x10) == 0)) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(iVar8);\n        iVar8 = 0;\n    }\n    if (iVar5 != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar5);\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar5);\n    }\n    return iVar8 != 0;\n}\n",
        "token_count": 1226
    },
    "00407d28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00407d28(int64_t *arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t *piVar8;\n    bool bVar9;\n    int16_t iStackX32;\n    int64_t in_stack_00000028;\n    int64_t iStack152;\n    int64_t iStack144;\n    int64_t iStack136;\n    int64_t *piStack128;\n    uchar auStack120 [24];\n    ulong uStack96;\n    uchar auStack88 [24];\n    ulong uStack64;\n    \n    if (arg3 == 0) {\n        uStack64 = 0x407d46;\n        piVar8 = fcn.004057c8();\n        if (piVar8 == NULL) {\n            arg3 = 0;\n        }\n        else {\n            uStack64 = 0x407d58;\n            arg3 = (**(*piVar8 + 0xe8))(piVar8);\n        }\n    }\n    arg1[0x19] = arg4;\n    uStack96 = 0xfffffffffffffffe;\n    iVar7 = 0;\n    if (in_stack_00000028 == 0) {\n        iVar4 = fcn.00413c10();\n        in_stack_00000028 = *(iVar4 + 0x18);\n    }\n    iVar4 = fcn.00413c10();\n    piVar8 = *(iVar4 + 0x68);\n    iStack144 = 0;\n    iStack136 = 0;\n    piStack128 = piVar8;\n    fcn.004112e4(0x10);\n    fcn.004112e4(0x7c000);\n    if (piVar8 != NULL) {\n        iVar3 = (**(*arg1 + 600))(arg1, &stack0xffffffffffffffa8);\n        if (iVar3 == 0) {\n            return 0;\n        }\n        arg2 = (**(*piVar8 + 0x28))(piVar8, &stack0xffffffffffffffa8, arg2);\n    }\n    if (arg2 == 0) {\n        return 0;\n    }\n    piVar5 = fcn.00413fdc();\n    if (piVar5 == NULL) {\n        fcn.00401cd0(0x80004005);\n        pcVar2 = swi(3);\n        uVar6 = (*pcVar2)();\n        return uVar6;\n    }\n    iStack152 = (**(*piVar5 + 0x18))(piVar5);\n    iStack152 = iStack152 + 0x18;\n    iStackX32 = 0;\n    iVar3 = fcn.00418018(arg2, &stack0xffffffffffffff68, &stack0x00000020);\n    bVar9 = iVar3 == 0;\n    if (*0x46aff8 == 0) {\ncode_r0x0040785e:\n        iVar4 = 0;\n        if (!bVar9) goto code_r0x004078af;\n    }\n    else if (!bVar9) {\n        iVar3 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x2a);\n        iVar4 = iVar7;\n        if (iVar3 == 0) goto code_r0x004078af;\n        iVar3 = fcn.0042ff10(iStack152, \"MS Shell Dlg\");\n        bVar9 = iVar3 == 0;\n        if (!bVar9) goto code_r0x004078af;\n        if (iStackX32 == 8) {\n            iStackX32 = 0;\n        }\n        goto code_r0x0040785e;\n    }\n    fcn.00417fd0(&stack0xffffffffffffff88, arg2);\n    fcn.00417ef4(&stack0xffffffffffffff88);\n    iVar4 = fcn.00417b10(&stack0xffffffffffffff88);\n    iStack144 = iVar4;\n    fcn.00417af8(&stack0xffffffffffffff88);\n    if (iVar4 != 0) {\n        arg2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar4);\n    }\ncode_r0x004078af:\n    *(arg1 + 0x11) = 0xffffffff;\n    *(arg1 + 0xf) = *(arg1 + 0xf) | 0x10;\n    fcn.0040fad0(arg1);\n    if (arg3 != 0) {\n        iVar7 = *(arg3 + 0x40);\n    }\n    iVar7 = (*_sym.imp.USER32.dll_CreateDialogIndirectParamA)(in_stack_00000028, arg2, iVar7, fcn.00406f68, 0);\n    LOCK();\n    piVar1 = iStack152 + -8;\n    iVar3 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    iStack136 = iVar7;\n    if (iVar3 + -1 < 1) {\n        (**(**(iStack152 + -0x18) + 8))();\n    }\n    if ((piVar8 != NULL) && ((**(*piVar8 + 0x30))(piVar8, &stack0xffffffffffffffa8),  iVar7 != 0)) {\n        (**(*arg1 + 600))(arg1, 0);\n    }\n    iVar3 = fcn.0040d820();\n    if (iVar3 == 0) {\n        (**(*arg1 + 0x228))(arg1);\n    }\n    if ((iVar7 != 0) && ((*(arg1 + 0xf) & 0x10) == 0)) {\n        (*_sym.imp.USER32.dll_DestroyWindow)(iVar7);\n        iVar7 = 0;\n    }\n    if (iVar4 != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar4);\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar4);\n    }\n    return iVar7 != 0;\n}\n",
        "token_count": 1374
    },
    "00407e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407e60(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint in_stack_00000028;\n    \n    fcn.004112e4(0x1000);\n    (**(*arg1 + 0xa8))(arg1, \"ToolbarWindow32\", 0, arg2, arg3, arg4, in_stack_00000028, 0);\n    return;\n}\n",
        "token_count": 98
    },
    "00407f18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407f18(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint in_stack_00000028;\n    \n    fcn.004112e4(0x1000);\n    (**(*arg1 + 0xa8))(arg1, \"msctls_statusbar32\", 0, arg2, arg3, arg4, in_stack_00000028, 0);\n    return;\n}\n",
        "token_count": 101
    },
    "004081f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004081f0(int64_t hWnd, ulong lParam, ulong arg3, ulong wParam)\n\n{\n    (*_sym.imp.USER32.dll_SendMessageA)(*(hWnd + 0x40), 0x407, wParam, lParam);\n    // WARNING: Could not recover jumptable at 0x0040822c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.USER32.dll_SendMessageA)(*(hWnd + 0x40), 0x408, wParam, arg3);\n    return;\n}\n",
        "token_count": 124
    },
    "004085f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004085f8(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong arg1_00;\n    int64_t arg1_01;\n    ulong uVar2;\n    \n    iVar1 = fcn.00413c60();\n    uVar2 = 0;\n    if ((*(iVar1 + 0x48) == 0) && (arg1 != 0)) {\n        arg1_00 = fcn.00403cb0(0x4154b8);\n        arg1_01 = fcn.00403cc0(0xb8);\n        if (arg1_01 != 0) {\n            uVar2 = fcn.00416580(arg1_01, 0x44b1b0, 0x40827c, 0x413ce4);\n        }\n        *(iVar1 + 0x48) = uVar2;\n        fcn.00403cb0(arg1_00);\n    }\n    return *(iVar1 + 0x48);\n}\n",
        "token_count": 224
    },
    "00408728": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00408728(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong arg1_00;\n    int64_t iVar3;\n    int64_t *piVar4;\n    \n    iVar1 = fcn.004085f8(1);\n    if (arg1 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.00418218(iVar1 + 0x30, arg1);\n        if (iVar2 == 0) {\n            iVar2 = fcn.00418218(iVar1 + 0x68, arg1);\n            if (iVar2 == 0) {\n                arg1_00 = fcn.00403cb0(0x4154b8);\n                iVar2 = fcn.004286bc(iVar1 + 8);\n                iVar3 = iVar2;\n                if (iVar2 == 0) {\n                    iVar3 = fcn.00412c60();\n                }\n                (**(iVar1 + 0x20))(iVar3);\n                piVar4 = fcn.00418460(iVar1 + 0x68, arg1);\n                *piVar4 = iVar2;\n                fcn.00403cb0(arg1_00);\n                iVar3 = *(iVar1 + 0xa8);\n                *(iVar2 + iVar3) = arg1;\n                if (*(iVar1 + 0xb0) == 2) {\n                    *(iVar2 + 8 + iVar3) = arg1;\n                }\n            }\n            else {\n                iVar3 = *(iVar1 + 0xa8);\n                *(iVar2 + iVar3) = arg1;\n                if (*(iVar1 + 0xb0) == 2) {\n                    *(iVar2 + 8 + iVar3) = arg1;\n                }\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 416
    },
    "00408854": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00408854(int64_t arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    iVar3 = fcn.00413c10();\n    iVar3 = fcn.00408300(**(iVar3 + 200), arg2 & 0xffffffff, arg3 & 0xffffffff, arg4 & 0xffffffff);\n    if (iVar3 != 0) {\n        iVar1 = fcn.004085f8(1);\n        *(arg1 + 8) = iVar3;\n        piVar2 = fcn.00418460(iVar1 + 0x30, iVar3);\n        *piVar2 = arg1;\n    }\n    return iVar3 != 0;\n}\n",
        "token_count": 187
    },
    "004087c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004087c0(int64_t hWnd, ulong wParam)\n\n{\n    ulong arg1;\n    int64_t iVar1;\n    \n    arg1 = (*_sym.imp.USER32.dll_SendMessageA)(*(hWnd + 0x40), 0x1002, wParam, 0);\n    iVar1 = fcn.0040874c(arg1);\n    if (iVar1 != 0) {\n        (*_sym.imp.USER32.dll_SendMessageA)(*(hWnd + 0x40), 0x1003, wParam, 0);\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "00408978": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00408978(int64_t arg1, ulong arg2)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    \n    if (arg2 == 0) {\n        puVar2 = arg1 + 0x12;\n    }\n    else {\n        puVar2 = arg1 + 0x18;\n    }\n    if (*puVar2 == 0xffff) {\n        puVar2 = puVar2 + 2;\n    }\n    else {\n        do {\n            uVar1 = *puVar2;\n            puVar2 = puVar2 + 1;\n        } while (uVar1 != 0);\n    }\n    if (*puVar2 == 0xffff) {\n        puVar2 = puVar2 + 2;\n    }\n    else {\n        do {\n            uVar1 = *puVar2;\n            puVar2 = puVar2 + 1;\n        } while (uVar1 != 0);\n    }\n    uVar1 = *puVar2;\n    if ((uVar1 != 0) && (arg2 == 0)) {\n        uVar1 = uVar1 - 2;\n    }\n    return uVar1 + 5 + puVar2 & 0xfffffffffffffffc;\n}\n",
        "token_count": 279
    },
    "00408d84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408d84(int64_t arg1)\n\n{\n    ulong *puVar1;\n    \n    for (puVar1 = *(arg1 + 8); puVar1 != NULL; puVar1 = *puVar1) {\n    }\n    *(arg1 + 0x18) = 0;\n    *(arg1 + 0x20) = 0;\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 8) = 0;\n    fcn.00418c7c(*(arg1 + 0x28));\n    *(arg1 + 0x28) = 0;\n    return;\n}\n",
        "token_count": 146
    },
    "0040901c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0040901c(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    \n    puVar3 = *(arg1 + 0x10);\n    iVar2 = 0;\n    do {\n        if (puVar3 == NULL) {\n            return iVar2;\n        }\n        piVar1 = puVar3[2];\n        puVar3 = *puVar3;\n    } while ((piVar1 == NULL) || (iVar2 = (**(*piVar1 + 8))(piVar1, arg2, arg3),  iVar2 == 0));\n    return iVar2;\n}\n",
        "token_count": 159
    },
    "00409088": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.00409088(int64_t arg1, int64_t arg2, ulong *arg3)\n\n{\n    code *pcVar1;\n    ulong *puVar2;\n    \n    if (arg3 == NULL) {\n        arg3 = *(arg1 + 8);\n    }\n    else {\n        arg3 = *arg3;\n    }\n    while( true ) {\n        if (arg3 == NULL) {\n            return NULL;\n        }\n        if (arg3 + 2 == NULL) break;\n        if (arg3[2] == arg2) {\n            return arg3;\n        }\n        arg3 = *arg3;\n    }\n    fcn.00412ca8();\n    pcVar1 = swi(3);\n    puVar2 = (*pcVar1)();\n    return puVar2;\n}\n",
        "token_count": 177
    },
    "004093d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004093d4(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.0040916c(arg1, 0, *(arg1 + 8));\n    *(iVar1 + 0x10) = arg2;\n    if (*(arg1 + 8) == 0) {\n        *(arg1 + 0x10) = iVar1;\n    }\n    else {\n        *(*(arg1 + 8) + 8) = iVar1;\n    }\n    *(arg1 + 8) = iVar1;\n    return;\n}\n",
        "token_count": 134
    },
    "00409410": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409410(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.0040916c(arg1, *(arg1 + 0x10), 0);\n    *(iVar1 + 0x10) = arg2;\n    if (*(arg1 + 0x10) == NULL) {\n        *(arg1 + 8) = iVar1;\n    }\n    else {\n        **(arg1 + 0x10) = iVar1;\n    }\n    *(arg1 + 0x10) = iVar1;\n    return;\n}\n",
        "token_count": 134
    },
    "004094d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004094d0(int64_t arg1, int64_t arg2)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    \n    if (arg2 == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    iVar3 = fcn.00409088(arg1 + 8, arg2, 0);\n    if (iVar3 == 0) {\n        fcn.004093d4(arg1 + 8, arg2);\n    }\n    return 0;\n}\n",
        "token_count": 147
    },
    "00409510": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409510(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    if (arg1 == 0) {\n        arg1 = fcn.004157f8(0x467740, 0x409390);\n        if (arg1 == 0) {\n            fcn.00412ca8();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    iVar2 = fcn.00413c10();\n    *(iVar2 + 0x68) = arg1;\n    return;\n}\n",
        "token_count": 135
    },
    "00409f3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00409f3c(void)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    if (*0x46a798 == 0) {\n        *0x46a79c = fcn.00409edc();\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"USER32\");\n        if (((((iVar1 == 0) || (*0x46a760 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x44b730),  *0x46a760 == 0))\n             || (*0x46a768 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"MonitorFromWindow\"),  *0x46a768 == 0)) ||\n            ((*0x46a770 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"MonitorFromRect\"),  *0x46a770 == 0 ||\n             (*0x46a778 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"MonitorFromPoint\"),  *0x46a778 == 0)))) ||\n           ((*0x46a788 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"EnumDisplayMonitors\"),  *0x46a788 == 0 ||\n            ((*0x46a780 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"GetMonitorInfoA\"),  *0x46a780 == 0 ||\n             (*0x46a790 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"EnumDisplayDevicesA\"),  *0x46a790 == 0)))))) {\n            *0x46a760 = 0;\n            *0x46a768 = 0;\n            *0x46a770 = 0;\n            *0x46a778 = 0;\n            *0x46a780 = 0;\n            *0x46a788 = 0;\n            *0x46a790 = 0;\n        }\n        else {\n            bVar2 = true;\n        }\n        *0x46a798 = 1;\n        return bVar2;\n    }\n    return *0x46a780 != 0;\n}\n",
        "token_count": 493
    },
    "0040a100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040a100(ulong arg1, uint64_t arg2)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uchar auStack44 [28];\n    \n    iVar1 = fcn.00409f3c();\n    if (iVar1 == 0) {\n        if ((arg2 & 3) == 0) {\n            iVar1 = (*_sym.imp.USER32.dll_IsIconic)(arg1);\n            if (iVar1 == 0) {\n                iVar1 = (*_sym.imp.USER32.dll_GetWindowRect)(arg1);\n            }\n            else {\n                iVar1 = (*_sym.imp.USER32.dll_GetWindowPlacement)();\n            }\n            if (iVar1 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = fcn.0040a098(auStack44, arg2 & 0xffffffff);\n            }\n        }\n        else {\n            uVar2 = 0x12340042;\n        }\n    }\n    else {\n        uVar2 = (**0x46a768)(arg1, arg2 & 0xffffffff);\n    }\n    return uVar2;\n}\n",
        "token_count": 252
    },
    "0040a178": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040a178(int64_t arg1, uint32_t *arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    ulong uVar3;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    \n    iVar1 = fcn.00409f3c();\n    if (iVar1 == 0) {\n        if ((((arg1 == 0x12340042) && (arg2 != NULL)) && (0x27 < *arg2)) &&\n           (iVar1 = (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &uStack40),  iVar1 != 0)) {\n            arg2[1] = 0;\n            arg2[2] = 0;\n            uVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0);\n            arg2[3] = uVar2;\n            uVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(1);\n            arg2[9] = 1;\n            arg2[5] = uStack40;\n            arg2[6] = uStack36;\n            arg2[7] = uStack32;\n            arg2[8] = uStack28;\n            arg2[4] = uVar2;\n            if (0x47 < *arg2) {\n                fcn.0042ff60(arg2 + 10, 0x20, \"DISPLAY\", 0x1f);\n            }\n            return 1;\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = (**0x46a780)(arg1, arg2);\n    }\n    return uVar3;\n}\n",
        "token_count": 389
    },
    "0040aae8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040aae8(ulong noname_0, ulong *arg2, ulong arg3)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    ulong *puVar5;\n    int64_t iVar6;\n    uint *in_stack_00000028;\n    \n    uVar3 = 0;\n    if (arg3 != 0) {\n        do {\n            bVar1 = false;\n            puVar4 = 0x4645d0;\n            puVar5 = 0x464530;\n            iVar6 = 0x13;\n            do {\n                iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(*arg2, *puVar5);\n                if (iVar2 == 0) {\n                    bVar1 = true;\n                    *in_stack_00000028 = *puVar4;\n                }\n                puVar5 = puVar5 + 1;\n                puVar4 = puVar4 + 1;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n            if (!bVar1) {\n                return 0x80020006;\n            }\n            uVar3 = uVar3 + 1;\n            arg2 = arg2 + 1;\n            in_stack_00000028 = in_stack_00000028 + 1;\n        } while (uVar3 < arg3);\n    }\n    return 0;\n}\n",
        "token_count": 323
    },
    "0040ab7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.0040ab7c(ulong *arg1, ulong arg2)\n\n{\n    fcn.004053a8(arg1);\n    *arg1 = 0x44ba88;\n    arg1[0xc] = 0x44b968;\n    arg1[0xd] = 0x44ba50;\n    arg1[8] = arg2;\n    *(arg1 + 9) = 0;\n    arg1[0xb] = 0;\n    arg1[0xe] = 0;\n    *(arg1 + 0xf) = 0;\n    arg1[0x10] = 0;\n    *(arg1 + 0x11) = 0;\n    arg1[0x12] = 0;\n    arg1[0x13] = 0;\n    arg1[0x14] = 0;\n    return arg1;\n}\n",
        "token_count": 200
    },
    "0040abf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040abf0(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    uint32_t in_stack_00000028;\n    \n    uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)();\n    arg4._0_4_ = ~arg3 & uVar1 | arg4;\n    if (uVar1 == arg4) {\n        uVar2 = 0;\n    }\n    else {\n        (*_sym.imp.USER32.dll_SetWindowLongA)(arg1, arg2, arg4);\n        if (in_stack_00000028 != 0) {\n            (*_sym.imp.USER32.dll_SetWindowPos)(arg1, 0, 0, 0, 0, 0, in_stack_00000028 | 0x17);\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 212
    },
    "0040ac6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ac6c(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    fcn.0040abf0(arg1, 0xfffffff0, arg2, arg3);\n    return;\n}\n",
        "token_count": 56
    },
    "0040ac8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ac8c(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    fcn.0040abf0(arg1, 0xffffffec, arg2, arg3);\n    return;\n}\n",
        "token_count": 55
    },
    "0040ad4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040ad4c(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.00413c10();\n    if (*(iVar1 + 0x60) != NULL) {\n        (**(iVar1 + 0x60))(arg2, arg1);\n    }\n    return 0;\n}\n",
        "token_count": 80
    },
    "0040ae8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.0040ae8c(ulong *arg1)\n\n{\n    fcn.00405370(arg1);\n    *(arg1 + 8) = 1;\n    *arg1 = 0x44bcf8;\n    return arg1;\n}\n",
        "token_count": 59
    },
    "0040b36c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040b36c(ulong noname_0, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    \n    uVar1 = *(arg2 + 8);\n    if (((uVar1 < 0x100) || (0x109 < uVar1)) && ((uVar1 < 0x200 || (0x209 < uVar1)))) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.00411820(noname_0, arg2);\n    }\n    return uVar2;\n}\n",
        "token_count": 135
    },
    "0040b41c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0040b41c(ulong lpMultiByteStr, ulong cbMultiByte)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int64_t iVar3;\n    \n    uVar1 = (**0x467540)();\n    uVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(uVar1, 0, lpMultiByteStr, cbMultiByte, 0, 0);\n    iVar3 = (*_sym.imp.OLEAUT32.dll_SysReAllocStringLen)(0, uVar1);\n    if (iVar3 != 0) {\n        uVar2 = (**0x467540)();\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(uVar2, 0, lpMultiByteStr, cbMultiByte, iVar3, uVar1);\n    }\n    return iVar3;\n}\n",
        "token_count": 192
    },
    "0040b9b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.0040b9b0(ulong *arg1)\n\n{\n    fcn.004053a8(arg1);\n    *arg1 = 0x44ba88;\n    arg1[0xc] = 0x44b968;\n    arg1[0xd] = 0x44ba50;\n    arg1[8] = 0;\n    *(arg1 + 9) = 0;\n    arg1[0xb] = 0;\n    arg1[10] = 0;\n    arg1[0xe] = 0;\n    *(arg1 + 0xf) = 0;\n    arg1[0x10] = 0;\n    *(arg1 + 0x11) = 0;\n    arg1[0x12] = 0;\n    arg1[0x13] = 0;\n    arg1[0x14] = 0;\n    return arg1;\n}\n",
        "token_count": 207
    },
    "0040bb68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040bb68(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int16_t iVar3;\n    int64_t iVar4;\n    \n    iVar4 = fcn.00413c60();\n    if ((*(iVar4 + 0x78) != 0) && (iVar1 = *(*(iVar4 + 0x78) + 0x40),  iVar1 != 0)) {\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar1, 0x401, 0, 0);\n    }\n    piVar2 = *(iVar4 + 0xa0);\n    if ((arg1 != 0) && (piVar2 != NULL)) {\n        iVar3 = (*_sym.imp.USER32.dll_GetKeyState)(1);\n        if (-1 < iVar3) {\n            (**(*piVar2 + 0x2d0))(piVar2, 0xffffffffffffffff);\n        }\n    }\n    return;\n}\n",
        "token_count": 220
    },
    "0040bbd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0040bbd8(int64_t hMenu, uint64_t arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    ulong arg1;\n    int32_t iVar5;\n    \n    arg2 = arg2 & 0xffffffff;\n    if (hMenu == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        iVar4 = (*pcVar1)();\n        return iVar4;\n    }\n    iVar2 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(hMenu + 8));\n    iVar5 = 0;\n    if (0 < iVar2) {\n        do {\n            arg1 = (*_sym.imp.USER32.dll_GetSubMenu)(*(hMenu + 8));\n            iVar4 = fcn.00413e34(arg1);\n            if (iVar4 == 0) {\n                iVar3 = (*_sym.imp.USER32.dll_GetMenuItemID)(*(hMenu + 8));\n                if (iVar3 == arg2) goto code_r0x0040bc55;\n            }\n            else {\n                if (*(iVar4 + 8) == arg2) {\ncode_r0x0040bc55:\n                    iVar4 = fcn.00413e58(*(hMenu + 8));\n                    return iVar4;\n                }\n                iVar4 = fcn.0040bbd8(iVar4, arg2);\n                if (iVar4 != 0) {\n                    return iVar4;\n                }\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < iVar2);\n    }\n    return 0;\n}\n",
        "token_count": 368
    },
    "0040bc60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040bc60(ulong *arg1)\n\n{\n    *arg1 = 0x44bd40;\n    if (arg1[1] != 0) {\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "0040cd58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040cd58(int64_t **arg1)\n\n{\n    if (*arg1 != NULL) {\n        (**(**arg1 + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 44
    },
    "0040cd70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040cd70(int64_t *arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    ulong in_R9;\n    ulong uVar3;\n    uint auStack56 [2];\n    int64_t *piStack48;\n    uint uStack40;\n    \n    uVar3 = 0xfffffffffffffffe;\n    uStack40 = 0;\n    auStack56[0] = arg2;\n    piStack48 = arg1;\n    iVar2 = fcn.00413268();\n    uVar1 = *(iVar2 + 0x138);\n    *(iVar2 + 0x138) = arg1[8];\n    (**(*arg1 + 0x1e8))(arg1, auStack56, *arg1, in_R9, uVar3);\n    *(iVar2 + 0x138) = uVar1;\n    return 1;\n}\n",
        "token_count": 202
    },
    "0040d0b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040d0b8(int64_t *arg1, uint64_t arg2)\n\n{\n    bool bVar1;\n    bool bVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t arg1_00;\n    int64_t iVar6;\n    int32_t iVar7;\n    \n    iVar7 = 0;\n    bVar1 = true;\n    bVar2 = true;\n    if (((arg2 & 4) == 0) || (uVar3 = fcn.0041185c(arg1),  (uVar3 >> 0x1c & 1) != 0)) {\n        bVar1 = false;\n    }\n    iVar5 = (*_sym.imp.USER32.dll_GetParent)();\n    *(arg1 + 0xf) = *(arg1 + 0xf) | 0x18;\n    arg1_00 = fcn.004057dc();\ncode_r0x0040d190:\n    while ((!bVar2 || (iVar4 = (*_sym.imp.USER32.dll_PeekMessageA)(arg1_00, 0, 0, 0, 0),  iVar4 != 0))) {\n        do {\n            iVar4 = fcn.00405db8();\n            if (iVar4 == 0) {\n                fcn.004041d8(0);\n                return 0xffffffff;\n            }\n            if ((bVar1) && ((*(arg1_00 + 8) == 0x118 || (*(arg1_00 + 8) == 0x104)))) {\n                fcn.004119d8(arg1, 1);\n                (*_sym.imp.USER32.dll_UpdateWindow)(arg1[8]);\n                bVar1 = false;\n            }\n            iVar4 = (**(*arg1 + 0x100))(arg1);\n            if (iVar4 == 0) {\n                *(arg1 + 0xf) = *(arg1 + 0xf) & 0xffffffe7;\n                return *(arg1 + 0x11);\n            }\n            iVar4 = fcn.00405c5c(arg1_00);\n            if (iVar4 != 0) {\n                iVar7 = 0;\n                bVar2 = true;\n            }\n            iVar4 = (*_sym.imp.USER32.dll_PeekMessageA)();\n        } while (iVar4 != 0);\n    }\n    if (bVar1) {\n        fcn.004119d8(arg1, 1);\n        (*_sym.imp.USER32.dll_UpdateWindow)();\n        bVar1 = false;\n    }\n    if ((((arg2 & 1) == 0) && (iVar5 != 0)) && (iVar7 == 0)) {\n        (*_sym.imp.USER32.dll_SendMessageA)();\n    }\n    if ((arg2 & 2) == 0) goto code_r0x0040d171;\n    goto code_r0x0040d18e;\ncode_r0x0040d171:\n    iVar6 = (*_sym.imp.USER32.dll_SendMessageA)();\n    iVar7 = iVar7 + 1;\n    if (iVar6 == 0) {\ncode_r0x0040d18e:\n        bVar2 = false;\n    }\n    goto code_r0x0040d190;\n}\n",
        "token_count": 727
    },
    "0040d584": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040d584(uint32_t *arg1)\n\n{\n    if (*arg1 != 0x7fffffff) {\n        fcn.004163c8(*arg1);\n        *arg1 = 0x7fffffff;\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "0040d664": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040d664(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong arg1_00;\n    int64_t arg1_01;\n    ulong uVar2;\n    \n    iVar1 = fcn.00413c60();\n    uVar2 = 0;\n    if ((*(iVar1 + 0x28) == 0) && (arg1 != 0)) {\n        arg1_00 = fcn.00403cb0(0x4154b8);\n        arg1_01 = fcn.00403cc0(0xb8);\n        if (arg1_01 != 0) {\n            uVar2 = fcn.00416580(arg1_01, 0x44b680, 0x40d2c8, 0x413ce4);\n        }\n        *(iVar1 + 0x28) = uVar2;\n        fcn.00403cb0(arg1_00);\n    }\n    return *(iVar1 + 0x28);\n}\n",
        "token_count": 224
    },
    "0040d71c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040d71c(ulong arg1)\n\n{\n    ulong arg1_00;\n    ulong hWnd;\n    \n    arg1_00 = fcn.0040d664(1);\n    hWnd = fcn.004166ac(arg1_00, arg1);\n    fcn.00411c4c(hWnd, arg1_00);\n    return hWnd;\n}\n",
        "token_count": 82
    },
    "0040d784": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.0040d784(int64_t arg1, int64_t arg2)\n\n{\n    int64_t arg2_00;\n    int64_t *piVar1;\n    \n    if (arg2 != 0) {\n        arg2_00 = fcn.0040d664(1);\n        *(arg1 + 0x40) = arg2;\n        piVar1 = fcn.00418460(arg2_00 + 0x30, arg2);\n        *piVar1 = arg1;\n        fcn.00411c4c(arg1, arg2_00);\n    }\n    return arg2 != 0;\n}\n",
        "token_count": 142
    },
    "0040db30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0040db30(ulong arg1, uint64_t arg2, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    arg3 = arg3 & 0xffffffff;\n    iVar1 = (*_sym.imp.USER32.dll_GetDlgItem)();\n    if (iVar1 != 0) {\n        iVar2 = (*_sym.imp.USER32.dll_GetTopWindow)(iVar1);\n        if ((iVar2 != 0) && (iVar2 = fcn.0040db30(iVar1, arg2 & 0xffffffff, arg3),  iVar2 != 0)) {\n            return iVar2;\n        }\n        if (arg3 == 0) {\n            iVar1 = fcn.0040d71c(iVar1);\n            return iVar1;\n        }\n        iVar1 = fcn.0040d758(iVar1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n    }\n    iVar1 = (*_sym.imp.USER32.dll_GetTopWindow)(arg1);\n    while( true ) {\n        if (iVar1 == 0) {\n            return 0;\n        }\n        iVar2 = fcn.0040db30(iVar1, arg2 & 0xffffffff, arg3);\n        if (iVar2 != 0) break;\n        iVar1 = (*_sym.imp.USER32.dll_GetWindow)(iVar1);\n    }\n    return iVar2;\n}\n",
        "token_count": 316
    },
    "0040dbc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040dbc4(int64_t arg1, int64_t *arg2)\n\n{\n    int32_t iVar1;\n    int64_t *piVar2;\n    int64_t arg1_00;\n    \n    arg1_00 = *arg2;\n    while( true ) {\n        if (arg1_00 == 0) {\n            return 0;\n        }\n        piVar2 = fcn.0040d758(arg1_00);\n        if ((piVar2 != NULL) && (iVar1 = (**(*piVar2 + 0x200))(piVar2, arg2),  iVar1 != 0)) break;\n        if (arg1_00 == arg1) {\n            return 0;\n        }\n        arg1_00 = (*_sym.imp.USER32.dll_GetParent)(arg1_00);\n    }\n    return 1;\n}\n",
        "token_count": 190
    },
    "0040dc24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040dc24(int64_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.00415eb0(0x46aaa8, 0x405abc);\n    if (iVar2 == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    (**(*arg1 + 0x230))(arg1, *(iVar2 + 0xa0), *(iVar2 + 0xa8), *(iVar2 + 0xb0), arg2);\n    return;\n}\n",
        "token_count": 148
    },
    "0040de70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0040de70(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint32_t uVar4;\n    uchar auStackX24 [16];\n    \n    uVar4 = 0;\n    iVar2 = fcn.00413c10();\n    piVar3 = fcn.0040d420(**(iVar2 + 200), auStackX24);\n    if (*piVar3 == 0) {\n        if ((arg2 & 0x3fc0) == arg2) {\n            iVar2 = fcn.00413c10();\n            fcn.0040d380(**(iVar2 + 200));\n            uVar4 = 0x3fc0;\n        }\n    }\n    else {\n        iVar2 = fcn.00413c10();\n        iVar1 = fcn.0040d48c(**(iVar2 + 200), arg1);\n        if (iVar1 != 0) {\n            uVar4 = arg2;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 247
    },
    "0040deec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0040deec(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    \n    puVar3 = (**(*arg1 + 0x1e0))();\n    (*_sym.imp.USER32.dll_SetWindowLongPtrA)(arg1[8], 0xfffffffc, *puVar3);\n    *puVar3 = 0;\n    iVar1 = arg1[8];\n    if (iVar1 != 0) {\n        iVar2 = fcn.00413c60();\n        if (*(iVar2 + 0x28) != 0) {\n            fcn.0041828c(*(iVar2 + 0x28) + 0x30, arg1[8]);\n        }\n        arg1[8] = 0;\n    }\n    arg1[0x14] = 0;\n    return iVar1;\n}\n",
        "token_count": 204
    },
    "0040df54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040df54(int64_t *arg1, int32_t *arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    ulong arg1_00;\n    int64_t hWnd;\n    int32_t iStack40;\n    int32_t iStack36;\n    \n    if (((((arg3 >> 0x1c & 1) == 0) && (uVar2 = fcn.0041185c(arg1),  (uVar2 & 0x50000000) == 0)) &&\n        ((*_sym.imp.USER32.dll_GetWindowRect)(arg1[8], &iStack40),  *arg2 == iStack40)) && (arg2[1] == iStack36)) {\n        arg1_00 = (*_sym.imp.USER32.dll_GetWindow)(arg1[8]);\n        hWnd = fcn.0040d71c(arg1_00);\n        if (((hWnd == 0) || (iVar1 = fcn.00411a08(hWnd),  iVar1 == 0)) &&\n           (iVar1 = (**(*arg1 + 0x238))(arg1),  iVar1 != 0)) {\n            fcn.0040ce70(arg1, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 287
    },
    "0040e3b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.0040e3b4(int64_t arg1)\n\n{\n    int32_t iVar1;\n    ulong arg1_00;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    if ((arg1 != 0) && (iVar3 = *(arg1 + 0x40),  iVar3 != 0)) {\n        while( true ) {\n            arg1_00 = (*_sym.imp.USER32.dll_GetParent)(iVar3);\n            piVar2 = fcn.0040d71c(arg1_00);\n            if (piVar2 == NULL) break;\n            iVar1 = (**(*piVar2 + 0x240))(piVar2);\n            if (iVar1 != 0) {\n                return piVar2;\n            }\n            iVar3 = piVar2[8];\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 193
    },
    "0040e458": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040e458(ulong hWnd, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t arg1;\n    int64_t iVar1;\n    int32_t in_stack_00000028;\n    int32_t in_stack_00000030;\n    \n    for (arg1 = (*_sym.imp.USER32.dll_GetTopWindow)(); arg1 != 0; arg1 = (*_sym.imp.USER32.dll_GetWindow)(arg1)) {\n        if (in_stack_00000030 == 0) {\n            (*_sym.imp.USER32.dll_SendMessageA)();\n        }\n        else {\n            iVar1 = fcn.0040d758(arg1);\n            if (iVar1 != 0) {\n                fcn.0040dfe4(iVar1, *(iVar1 + 0x40), arg2, arg3);\n            }\n        }\n        if ((in_stack_00000028 != 0) && (iVar1 = (*_sym.imp.USER32.dll_GetTopWindow)(arg1),  iVar1 != 0)) {\n            fcn.0040e458(arg1, arg2, arg3, arg4);\n        }\n    }\n    return;\n}\n",
        "token_count": 259
    },
    "0040e520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0040e520(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t arg1_00;\n    ulong arg2_00;\n    uint64_t uVar3;\n    uchar auStack216 [64];\n    ulong uStack152;\n    int64_t iStack56;\n    \n    iVar2 = fcn.00413c60();\n    if (*(iVar2 + 0x28) == 0) {\n        uVar3 = 0;\n    }\n    else {\n        iVar2 = *(iVar2 + 0x28) + 0x30;\n        arg1_00 = fcn.00418218(iVar2, arg1);\n        if (arg1_00 == 0) {\n            arg2_00 = (*_sym.imp.USER32.dll_GetParent)(arg1);\n            iVar2 = fcn.00418218(iVar2, arg2_00);\n            if (((iVar2 != 0) && (*(iVar2 + 0x98) != 0)) &&\n               (iStack56 = fcn.00418218(*(iVar2 + 0x98) + 0x48, arg1),  iStack56 != 0)) {\n                fcn.0040ab7c(auStack216, arg1);\n                iVar1 = fcn.0040dc24(auStack216, arg2);\n                uStack152 = 0;\n                fcn.0040e1e0(auStack216);\n                return iVar1 != 0;\n            }\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.0040dc24(arg1_00, arg2);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 387
    },
    "0040f05c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040f05c(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int64_t arg1_00;\n    ulong uVar3;\n    \n    iVar2 = fcn.0040d758(arg1);\n    uVar3 = 0;\n    if (iVar2 == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(arg1, 0xfffffff0);\n        if ((uVar1 >> 0x1e & 1) == 0) {\n            uVar3 = (*_sym.imp.USER32.dll_GetWindow)(arg1, 4);\n        }\n        else {\n            uVar3 = (*_sym.imp.USER32.dll_GetParent)();\n        }\n    }\n    else {\n        arg1_00 = *(iVar2 + 0x70);\n        if (arg1_00 == 0) {\n            arg1_00 = (*_sym.imp.USER32.dll_GetParent)(*(iVar2 + 0x40));\n        }\n        iVar2 = fcn.0040d71c(arg1_00);\n        if (iVar2 != 0) {\n            uVar3 = *(iVar2 + 0x40);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 280
    },
    "0040f0cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040f0cc(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t arg1_00;\n    \n    if ((arg1 == 0) || (iVar1 = *(arg1 + 0x40),  *(arg1 + 0x40) == 0)) {\n        uVar2 = 0;\n    }\n    else {\n        do {\n            arg1_00 = iVar1;\n            iVar1 = fcn.0040f05c(arg1_00);\n        } while (iVar1 != 0);\n        uVar2 = fcn.0040d71c(arg1_00);\n    }\n    return uVar2;\n}\n",
        "token_count": 157
    },
    "0040f438": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.0040f438(int64_t *arg1)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    int64_t *piVar4;\n    uchar in_DL;\n    uint32_t uVar5;\n    \n    iVar2 = *arg1;\n    uVar1 = *(iVar2 + -0x10);\n    uVar5 = uVar1 + 1;\n    if ((1U - *(iVar2 + -8) | *(iVar2 + -0xc) - uVar5) < 0) {\n        fcn.00402e50(arg1, uVar5);\n    }\n    *(uVar1 + *arg1) = in_DL;\n    if ((-1 < uVar5) && (uVar5 <= *(*arg1 + -0xc))) {\n        *(*arg1 + -0x10) = uVar5;\n        *(uVar5 + *arg1) = 0;\n        return arg1;\n    }\n    fcn.00401cd0(0x80070057);\n    pcVar3 = swi(3);\n    piVar4 = (*pcVar3)();\n    return piVar4;\n}\n",
        "token_count": 265
    },
    "0040f4a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f4a4(int64_t arg1, ulong arg2, int64_t arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong uStack56;\n    int64_t iStack48;\n    \n    uVar1 = fcn.0041185c(arg1);\n    if ((((uVar1 >> 0x1e & 1) == 0) && (iVar3 = fcn.0040f0cc(arg1),  iVar3 != 0)) &&\n       ((arg3 == 0 ||\n        ((iVar2 = (*_sym.imp.USER32.dll_IsWindow)(*(arg3 + 0x40)),  iVar2 == 0 ||\n         (iVar4 = fcn.0040f0cc(arg3),  iVar3 != iVar4)))))) {\n        uStack56 = *(arg1 + 0x40);\n        iStack48 = arg3;\n        if (arg3 != 0) {\n            iStack48 = *(arg3 + 0x40);\n        }\n        (*_sym.imp.USER32.dll_SendMessageA)(*(iVar3 + 0x40), 0x36e, arg2, &uStack56);\n    }\n    return;\n}\n",
        "token_count": 284
    },
    "0040f530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040f530(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    \n    if (((arg2 == -2) && (((arg3 == 0x201 || (arg3 == 0x207)) || (arg3 == 0x204)))) &&\n       (iVar2 = fcn.0040f0cc(arg1),  iVar2 != 0)) {\n        uVar3 = (*_sym.imp.USER32.dll_GetLastActivePopup)(*(iVar2 + 0x40));\n        iVar2 = fcn.0040d71c(uVar3);\n        if (iVar2 != 0) {\n            uVar3 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n            iVar4 = fcn.0040d71c(uVar3);\n            if ((iVar2 != iVar4) && (iVar1 = fcn.00411a08(iVar2),  iVar1 != 0)) {\n                (*_sym.imp.USER32.dll_SetForegroundWindow)(*(iVar2 + 0x40));\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 269
    },
    "0040fcdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040fcdc(int64_t *arg1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    \n    iVar2 = (**(*arg1 + 0x240))();\n    if (iVar2 != 0) {\n        (**(*arg1 + 0x2e0))(arg1);\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(arg1[8]);\n    fcn.0040e458(arg1[8], 0x1f, 0, 0);\n    iVar3 = fcn.0040f0cc(arg1);\n    if (iVar3 == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(*(iVar3 + 0x40));\n    uVar5 = 1;\n    uVar4 = 1;\n    fcn.0040e458(*(iVar3 + 0x40), 0x1f, 0, 0);\n    iVar3 = (*_sym.imp.USER32.dll_GetCapture)();\n    if (iVar3 != 0) {\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x1f, 0, 0, uVar4, uVar5);\n    }\n    return;\n}\n",
        "token_count": 322
    },
    "00410b24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00410b24(ulong *arg1)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    uint uVar3;\n    \n    puVar2 = NULL;\n    if (arg1 == NULL) {\n        uVar3 = 0x80004003;\n    }\n    else {\n        *arg1 = 0;\n        puVar1 = fcn.00403cc0(0x30);\n        if (puVar1 != NULL) {\n            *(puVar1 + 5) = 0;\n            puVar1[2] = 0;\n            puVar1[3] = 0;\n            *puVar1 = 0x44c398;\n            puVar1[1] = 0x44c370;\n            puVar1[4] = 0x44c340;\n            fcn.004160e0();\n            puVar2 = puVar1;\n        }\n        uVar3 = 0x8007000e;\n        if (puVar2 != NULL) {\n            uVar3 = 0;\n        }\n        *arg1 = puVar2;\n    }\n    return uVar3;\n}\n",
        "token_count": 254
    },
    "00410c2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00410c2c(void)\n\n{\n    int64_t iVar1;\n    uchar auStack616 [64];\n    ulong uStack552;\n    uint64_t uStack24;\n    \n    uStack552 = 0xfffffffffffffffe;\n    uStack24 = *0x465c38 ^ auStack616;\n    iVar1 = fcn.00413c10();\n    fcn.00405428(*(iVar1 + 8));\n    fcn.0042dcb0(uStack24 ^ auStack616);\n    return;\n}\n",
        "token_count": 117
    },
    "00411054": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00411054(int64_t arg1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    uint64_t arg3;\n    uchar auStack120 [96];\n    \n    iVar2 = fcn.0040b56c(*(arg1 + 0x18), *(arg1 + 0x40), auStack120);\n    arg3 = 0;\n    if (iVar2 == 0) {\n        iVar1 = fcn.0040b490(arg1);\n        if (iVar1 == 0) {\n            uVar6 = 0;\n        }\n        else {\n            iVar4 = fcn.00413c10();\n            if (*(iVar4 + 0x28) != '\\0') {\n                fcn.0041633c(1);\n                iVar5 = fcn.00413c10();\n                iVar4 = *(arg1 + 0x40);\n                if (iVar4 != 0) {\n                    uVar3 = fcn.0042f460(iVar4);\n                    arg3 = uVar3;\n                }\n                fcn.004062ec(iVar5 + 0x58, iVar4, arg3);\n                fcn.0040f438(iVar5 + 0x58);\n                fcn.004163c8(1);\n            }\n            uVar6 = 1;\n        }\n    }\n    else {\n        uVar6 = 1;\n    }\n    return uVar6;\n}\n",
        "token_count": 345
    },
    "0041112c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041112c(int64_t arg1, int16_t *arg2)\n\n{\n    int32_t *piVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int16_t iVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    int64_t aiStackX16 [3];\n    uint auStack120 [2];\n    ulong uStack112;\n    int64_t iStack104;\n    \n    iVar7 = 1;\n    if (arg2 != NULL) {\n        do {\n            iVar2 = *arg2;\n            if (iVar2 == 0) break;\n            iVar5 = arg2[1];\n            uVar3 = *(arg2 + 2);\n            if (iVar5 == 0x1234) {\ncode_r0x004111c8:\n                fcn.0042f6c0(&uStack112, 0, 0x30);\n                auStack120[0] = 1;\n                uStack112 = 0xffffffffffffffff;\n                fcn.00404ed0(aiStackX16, arg2 + 4);\n                iStack104 = aiStackX16[0];\n                iVar6 = (*_sym.imp.USER32.dll_SendDlgItemMessageA)(*(arg1 + 0x40), iVar2, 0x401, 0, auStack120);\n                if (iVar6 == -1) {\n                    iVar7 = 0;\n                }\n                LOCK();\n                piVar1 = aiStackX16[0] + -8;\n                iVar4 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar4 + -1 < 1) {\n                    (**(**(aiStackX16[0] + -0x18) + 8))();\n                }\n            }\n            else if (iVar5 == 0x401) {\ncode_r0x004111a2:\n                iVar6 = (*_sym.imp.USER32.dll_SendDlgItemMessageA)(*(arg1 + 0x40));\n                if (iVar6 == -1) {\n                    iVar7 = 0;\n                }\n            }\n            else {\n                if (iVar5 == 0x403) {\n                    iVar5 = 0x143;\n                }\n                if (iVar5 == 0x401) goto code_r0x004111c8;\n                if ((iVar5 == 0x180) || (iVar5 == 0x143)) goto code_r0x004111a2;\n            }\n            arg2 = arg2 + 4 + uVar3;\n        } while (iVar7 != 0);\n        if (iVar7 == 0) {\n            return 0;\n        }\n    }\n    fcn.0040e458(*(arg1 + 0x40), 0x364, 0, 0);\n    return iVar7;\n}\n",
        "token_count": 632
    },
    "00411298": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00411298(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    uint64_t arg3_00;\n    uchar auStack120 [56];\n    ulong uStack64;\n    \n    *(arg1 + 0x40) = arg2;\n    uStack64 = 0x4112ae;\n    iVar5 = fcn.00413c10();\n    uStack64 = 0x4112bb;\n    iVar5 = (*_sym.imp.USER32.dll_LoadIconA)(*(iVar5 + 0x18), arg3);\n    *(arg1 + 0x20) = iVar5;\n    if (iVar5 == 0) {\n        uStack64 = 0x4112d1;\n        uVar6 = (*_sym.imp.USER32.dll_LoadIconA)(0, 0x7f00);\n        *(arg1 + 0x20) = uVar6;\n    }\n    iVar2 = fcn.0040b56c(*(arg1 + 0x18), *(arg1 + 0x40), &stack0xffffffffffffff88);\n    arg3_00 = 0;\n    if (iVar2 == 0) {\n        iVar1 = fcn.0040b490(arg1);\n        if (iVar1 == 0) {\n            uVar6 = 0;\n        }\n        else {\n            iVar5 = fcn.00413c10();\n            if (*(iVar5 + 0x28) != '\\0') {\n                fcn.0041633c(1);\n                iVar4 = fcn.00413c10();\n                iVar5 = *(arg1 + 0x40);\n                if (iVar5 != 0) {\n                    uVar3 = fcn.0042f460(iVar5);\n                    arg3_00 = uVar3;\n                }\n                fcn.004062ec(iVar4 + 0x58, iVar5, arg3_00);\n                fcn.0040f438(iVar4 + 0x58);\n                fcn.004163c8(1);\n            }\n            uVar6 = 1;\n        }\n    }\n    else {\n        uVar6 = 1;\n    }\n    return uVar6;\n}\n",
        "token_count": 526
    },
    "004112e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.004112e4(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    uint uStackX16;\n    uint uStackX20;\n    uint32_t auStack120 [2];\n    ulong uStack112;\n    ulong uStack96;\n    ulong uStack80;\n    ulong uStack72;\n    char *pcStack56;\n    \n    iVar3 = fcn.00413c10();\n    arg1._0_4_ = arg1 & ~*(iVar3 + 0x2c);\n    if (arg1 == 0) {\n        bVar6 = true;\n    }\n    else {\n        fcn.0042f6c0(auStack120, 0, 0x48);\n        uStack112 = _sym.imp.USER32.dll_DefWindowProcA;\n        iVar4 = fcn.00413c10();\n        uStack96 = *(iVar4 + 0x10);\n        uStack80 = *0x46afd0;\n        uStackX16 = 8;\n        uVar5 = 0;\n        if ((arg1 & 1) != 0) {\n            auStack120[0] = 0xb;\n            pcStack56 = \"AfxWnd80s\";\n            iVar1 = fcn.00411054(auStack120);\n            uVar5 = 0;\n            if (iVar1 != 0) {\n                uVar5 = 1;\n            }\n        }\n        if ((arg1 & 0x20) != 0) {\n            auStack120[0] = auStack120[0] | 0x8b;\n            pcStack56 = \"AfxOleControl80s\";\n            iVar1 = fcn.00411054(auStack120);\n            if (iVar1 != 0) {\n                uVar5 = uVar5 | 0x20;\n            }\n        }\n        if ((arg1 & 2) != 0) {\n            auStack120[0] = 0;\n            pcStack56 = \"AfxControlBar80s\";\n            uStack72 = 0x10;\n            iVar1 = fcn.00411054(auStack120);\n            if (iVar1 != 0) {\n                uVar5 = uVar5 | 2;\n            }\n        }\n        if ((arg1 & 4) != 0) {\n            auStack120[0] = 8;\n            uStack72 = 0;\n            iVar1 = fcn.00411298(auStack120, \"AfxMDIFrame80s\", 0x7a01);\n            if (iVar1 != 0) {\n                uVar5 = uVar5 | 4;\n            }\n        }\n        if ((arg1 & 8) != 0) {\n            auStack120[0] = 0xb;\n            uStack72 = 6;\n            iVar1 = fcn.00411298(auStack120, \"AfxFrameOrView80s\", 0x7a02);\n            if (iVar1 != 0) {\n                uVar5 = uVar5 | 8;\n            }\n        }\n        if ((arg1 & 0x10) != 0) {\n            uStackX20 = 0xff;\n            uVar2 = fcn.0040de70(&uStackX16, 0x3fc0);\n            uVar5 = uVar5 | uVar2;\n            arg1._0_4_ = arg1 & 0xffffc03f;\n        }\n        if ((arg1 & 0x40) != 0) {\n            uStackX20 = 0x10;\n            uVar2 = fcn.0040de70(&uStackX16, 0x40);\n            uVar5 = uVar5 | uVar2;\n        }\n        if (arg1 < '\\0') {\n            uStackX20 = 2;\n            uVar2 = fcn.0040de70(&uStackX16, 0x80);\n            uVar5 = uVar5 | uVar2;\n        }\n        if ((arg1 >> 8 & 1) != 0) {\n            uStackX20 = 8;\n            uVar2 = fcn.0040de70(&uStackX16, 0x100);\n            uVar5 = uVar5 | uVar2;\n        }\n        if ((arg1 >> 9 & 1) != 0) {\n            uStackX20 = 0x20;\n            uVar2 = fcn.0040de70(&uStackX16, 0x200);\n            uVar5 = uVar5 | uVar2;\n        }\n        if ((arg1 >> 10 & 1) != 0) {\n            uStackX20 = 1;\n            uVar2 = fcn.0040de70(&uStackX16, 0x400);\n            uVar5 = uVar5 | uVar2;\n        }\n        if ((arg1 >> 0xb & 1) != 0) {\n            uStackX20 = 0x40;\n            uVar2 = fcn.0040de70(&uStackX16, 0x800);\n            uVar5 = uVar5 | uVar2;\n        }\n        if ((arg1 >> 0xc & 1) != 0) {\n            uStackX20 = 4;\n            uVar2 = fcn.0040de70(&uStackX16, 0x1000);\n            uVar5 = uVar5 | uVar2;\n        }\n        if ((arg1 >> 0xd & 1) != 0) {\n            uStackX20 = 0x80;\n            uVar2 = fcn.0040de70(&uStackX16, 0x2000);\n            uVar5 = uVar5 | uVar2;\n        }\n        if ((arg1 >> 0xe & 1) != 0) {\n            uStackX20 = 0x800;\n            uVar2 = fcn.0040de70(&uStackX16, 0x4000);\n            uVar5 = uVar5 | uVar2;\n        }\n        if ((arg1 >> 0xf & 1) != 0) {\n            uStackX20 = 0x400;\n            uVar2 = fcn.0040de70(&uStackX16, 0x8000);\n            uVar5 = uVar5 | uVar2;\n        }\n        if ((arg1 >> 0x10 & 1) != 0) {\n            uStackX20 = 0x200;\n            uVar2 = fcn.0040de70(&uStackX16, 0x10000);\n            uVar5 = uVar5 | uVar2;\n        }\n        if ((arg1 >> 0x11 & 1) != 0) {\n            uStackX20 = 0x100;\n            uVar2 = fcn.0040de70(&uStackX16, 0x20000);\n            uVar5 = uVar5 | uVar2;\n        }\n        if ((arg1 >> 0x12 & 1) != 0) {\n            uStackX20 = 0x8000;\n            uVar2 = fcn.0040de70(&uStackX16, 0x40000);\n            uVar5 = uVar5 | uVar2;\n        }\n        *(iVar3 + 0x2c) = *(iVar3 + 0x2c) | uVar5;\n        if ((*(iVar3 + 0x2c) & 0x3fc0) == 0x3fc0) {\n            uVar5 = uVar5 | 0x10;\n            *(iVar3 + 0x2c) = *(iVar3 + 0x2c) | 0x10;\n        }\n        bVar6 = (uVar5 & arg1) == arg1;\n    }\n    return bVar6;\n}\n",
        "token_count": 1785
    },
    "004116ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004116ac(ulong arg1, int64_t arg2)\n\n{\n    ulong uVar1;\n    uint uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t arg2_00;\n    \n    arg2_00 = 0;\n    iVar4 = 0;\n    if (arg2 != 0) {\n        iVar3 = fcn.00413c10();\n        uVar1 = *(iVar3 + 0x18);\n        iVar3 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar1, arg2, 0xf0);\n        if (iVar3 != 0) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar1, iVar3);\n            if (iVar4 == 0) {\n                return 0;\n            }\n            arg2_00 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar4);\n        }\n    }\n    uVar2 = fcn.0041112c(arg1, arg2_00);\n    if ((arg2_00 != 0) && (iVar4 != 0)) {\n        (*_sym.imp.KERNEL32.dll_FreeResource)(iVar4);\n    }\n    return uVar2;\n}\n",
        "token_count": 274
    },
    "00411820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411820(int64_t hDlg, ulong arg2)\n\n{\n    int64_t iVar1;\n    \n    if ((*(hDlg + 0x78) >> 8 & 1) == 0) {\n        (*_sym.imp.USER32.dll_IsDialogMessageA)(*(hDlg + 0x40));\n    }\n    else {\n        iVar1 = fcn.00413c10();\n        (**(**(iVar1 + 0x68) + 0x50))(*(iVar1 + 0x68), hDlg, arg2);\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "00411aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411aa0(int64_t arg1)\n\n{\n    if (*(arg1 + 0xa0) != NULL) {\n        (**(**(arg1 + 0xa0) + 0xc0))();\n    }\n    return;\n}\n",
        "token_count": 56
    },
    "00411bd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411bd4(int64_t hWnd, int64_t arg2, ulong X, ulong Y)\n\n{\n    ulong uVar1;\n    \n    uVar1 = 0;\n    if (*(hWnd + 0xa0) == 0) {\n        if (arg2 != 0) {\n            uVar1 = *(arg2 + 0x40);\n        }\n        (*_sym.imp.USER32.dll_SetWindowPos)(*(hWnd + 0x40), uVar1);\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0x138))(*(hWnd + 0xa0), arg2);\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "0041210c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.0041210c(int64_t arg1, int64_t arg2)\n\n{\n    ulong *puVar1;\n    \n    if (*(arg1 + 0x98) != 0) {\n        for (puVar1 = *(*(arg1 + 0x98) + 0x88); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[2] == arg2) {\n                return puVar1;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 117
    },
    "0041213c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.0041213c(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    \n    if (*(arg1 + 0x98) != 0) {\n        for (puVar3 = *(*(arg1 + 0x98) + 0x88); puVar3 != NULL; puVar3 = *puVar3) {\n            piVar1 = puVar3[2];\n            if (piVar1[1] == 0) {\n                iVar4 = *piVar1;\n            }\n            else {\n                iVar4 = *(piVar1[1] + 0x48);\n            }\n            if ((iVar4 != 0) && (iVar2 = (*_sym.imp.USER32.dll_GetFocus)(),  iVar4 == iVar2)) {\n                return puVar3;\n            }\n            if ((piVar1[1] != 0) && (piVar1[1] == *(*(arg1 + 0x98) + 0xd8))) {\n                return puVar3;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 258
    },
    "00412544": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412544(int64_t *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    iVar3 = *arg1;\n    LOCK();\n    piVar1 = iVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar3 + -0x18) + 8))();\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "00412598": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412598(int64_t *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    iVar3 = *arg1;\n    LOCK();\n    piVar1 = iVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar3 + -0x18) + 8))();\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "004125d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004125d4(int64_t *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    code *pcVar4;\n    int64_t iVar5;\n    \n    iVar5 = *arg1;\n    piVar3 = *(iVar5 + -0x18);\n    if (*(iVar5 + -0x10) != 0) {\n        if (*(iVar5 + -8) < 0) {\n            if (*(iVar5 + -0xc) < 0) {\n                fcn.00401cd0(0x80070057);\n                pcVar4 = swi(3);\n                (*pcVar4)();\n                return;\n            }\n            *(iVar5 + -0x10) = 0;\n            **arg1 = 0;\n        }\n        else {\n            LOCK();\n            piVar1 = iVar5 + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 + -1 < 1) {\n                (**(**(iVar5 + -0x18) + 8))();\n            }\n            iVar5 = (**(*piVar3 + 0x18))(piVar3);\n            *arg1 = iVar5 + 0x18;\n        }\n    }\n    return;\n}\n",
        "token_count": 296
    },
    "00412640": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412640(int64_t *arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t arg3;\n    code *pcVar3;\n    int64_t arg2_00;\n    ulong *puVar4;\n    int64_t iVar5;\n    \n    arg3 = *arg1;\n    iVar2 = *(arg3 + -0x10);\n    puVar4 = (**(**(arg3 + -0x18) + 0x20))();\n    iVar5 = (***puVar4)(puVar4, arg2, 2);\n    if (iVar5 == 0) {\n        fcn.004125c4();\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    if (iVar2 < arg2) {\n        arg2._0_4_ = iVar2;\n    }\n    arg2_00 = (arg2 + 1) * 2;\n    fcn.0042e220(iVar5 + 0x18, arg2_00, arg3, arg2_00);\n    *(iVar5 + 8) = iVar2;\n    LOCK();\n    piVar1 = arg3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(arg3 + -0x18) + 8))(*(arg3 + -0x18), arg3 + -0x18);\n    }\n    *arg1 = iVar5 + 0x18;\n    return;\n}\n",
        "token_count": 363
    },
    "004126d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004126d4(int64_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    if ((*(*arg1 + -0xc) < arg2) && (0 < arg2)) {\n        iVar2 = (**(**(*arg1 + -0x18) + 0x10))();\n        if (iVar2 == 0) {\n            fcn.004125c4();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        *arg1 = iVar2 + 0x18;\n        return;\n    }\n    fcn.004125c4();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 168
    },
    "00412768": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00412768(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int64_t *piVar5;\n    uint32_t uVar6;\n    \n    if (arg2 == 0) {\n        uVar6 = 0;\n    }\n    else {\n        uVar3 = (**0x467540)();\n        iVar4 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(uVar3, 0, arg2, 0xffffffff, 0, 0, 0, 0);\n        uVar6 = iVar4 - 1;\n    }\n    if (uVar6 < 1) {\n        fcn.00402dc0(arg1);\n    }\n    else {\n        if ((1U - *(*arg1 + -8) | *(*arg1 + -0xc) - uVar6) < 0) {\n            fcn.00402e50(arg1, uVar6);\n        }\n        iVar1 = *arg1;\n        uVar3 = (**0x467540)();\n        (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(uVar3, 0, arg2, 0xffffffff, iVar1, uVar6, 0, 0);\n        if (*(*arg1 + -0xc) < uVar6) {\n            fcn.00401cd0(0x80070057);\n            pcVar2 = swi(3);\n            piVar5 = (*pcVar2)();\n            return piVar5;\n        }\n        *(*arg1 + -0x10) = uVar6;\n        *(uVar6 + *arg1) = 0;\n    }\n    return arg1;\n}\n",
        "token_count": 397
    },
    "00412850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00412850(int64_t *arg1, uint64_t arg2)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    piVar2 = fcn.00413fdc();\n    if (piVar2 == NULL) {\n        fcn.00401cd0(0x80004005);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    iVar3 = (**(*piVar2 + 0x18))(piVar2);\n    *arg1 = iVar3 + 0x18;\n    if ((arg2 == 0) || ((arg2 & 0xffffffffffff0000) != 0)) {\n        fcn.00412768(arg1, arg2);\n    }\n    else {\n        iVar3 = fcn.00413fc8(arg2 & 0xffff);\n        if (iVar3 != 0) {\n            fcn.00402fc0(arg1, iVar3, arg2 & 0xffff);\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 249
    },
    "004128f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.004128f8(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int64_t *piVar5;\n    uint32_t uVar6;\n    \n    if (arg2 == 0) {\n        uVar6 = 0;\n    }\n    else {\n        uVar3 = (**0x467540)();\n        iVar4 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(uVar3, 0, arg2, 0xffffffff, 0, 0);\n        uVar6 = iVar4 - 1;\n    }\n    if (uVar6 < 1) {\n        fcn.004125d4(arg1);\n    }\n    else {\n        if ((1U - *(*arg1 + -8) | *(*arg1 + -0xc) - uVar6) < 0) {\n            fcn.00412720(arg1, uVar6);\n        }\n        iVar1 = *arg1;\n        uVar3 = (**0x467540)();\n        (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(uVar3, 0, arg2, 0xffffffff, iVar1, uVar6);\n        if (*(*arg1 + -0xc) < uVar6) {\n            fcn.00401cd0(0x80070057);\n            pcVar2 = swi(3);\n            piVar5 = (*pcVar2)();\n            return piVar5;\n        }\n        *(*arg1 + -0x10) = uVar6;\n        *(*arg1 + uVar6 * 2) = 0;\n    }\n    return arg1;\n}\n",
        "token_count": 387
    },
    "00412ac8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00412ac8(int64_t *arg1, uint64_t arg2)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    piVar2 = fcn.00413fdc();\n    if (piVar2 == NULL) {\n        fcn.00401cd0(0x80004005);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    iVar3 = (**(*piVar2 + 0x18))(piVar2);\n    *arg1 = iVar3 + 0x18;\n    if ((arg2 == 0) || ((arg2 & 0xffffffffffff0000) != 0)) {\n        fcn.004128f8(arg1, arg2);\n    }\n    else {\n        iVar3 = fcn.00413fc8(arg2 & 0xffff);\n        if (iVar3 != 0) {\n            fcn.004129c0(arg1, iVar3, arg2 & 0xffff);\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 251
    },
    "00412c28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00412c28(int64_t arg1)\n\n{\n    int32_t iVar1;\n    \n    *(arg1 + 0x14) = 1;\n    iVar1 = fcn.00413f1c(*(arg1 + 0x9c), arg1 + 0x1c, 0x80);\n    *(arg1 + 0x18) = iVar1 != 0;\n    return;\n}\n",
        "token_count": 95
    },
    "00415fd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415fd0(uint32_t *arg1)\n\n{\n    if ((*arg1 != 0) && (*0x46abf0 != 0)) {\n        fcn.00415b18(*0x46abf0, *arg1);\n    }\n    *arg1 = 0;\n    return;\n}\n",
        "token_count": 73
    },
    "00412e8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412e8c(void)\n\n{\n    if (*0x46aa90 != NULL) {\n        (**0x46aa90)();\n    }\n    return;\n}\n",
        "token_count": 39
    },
    "00412ea8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00412ea8(ulong noname_0, int64_t arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    \n    if (arg2 == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        uVar3 = (*pcVar1)();\n        return uVar3;\n    }\n    if (*0x46aa88 == NULL) {\n        uVar3 = 2;\n    }\n    else {\n        iVar2 = (**0x46aa88)();\n        uVar3 = iVar2 != 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 151
    },
    "0041302c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041302c(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    \n    LOCK();\n    piVar1 = arg1 + 0x30;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        if (*(arg1 + 0x28) != NULL) {\n            (**(**(arg1 + 0x28) + 0x10))();\n            *(arg1 + 0x28) = 0;\n        }\n        if (*(arg1 + 0x10) != NULL) {\n            (**(**(arg1 + 0x10) + 0x10))();\n            *(arg1 + 0x10) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "004130a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004130a0(ulong *arg1)\n\n{\n    *arg1 = 0x44cde8;\n    if (arg1[10] != 0) {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)();\n    }\n    if (arg1[9] != 0) {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)();\n    }\n    if (arg1[3] != 0) {\n        fcn.0042dcd0(arg1[3]);\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "00413268": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413268(void)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.00415eb0(0x46aaa8, 0x405abc);\n    if (iVar2 == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "00413448": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong * fcn.00413448(ulong *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t aiStackX8 [4];\n    \n    fcn.00404ed0(aiStackX8, \"comctl32.dll\");\n    *arg1 = 0x44ce40;\n    iVar3 = fcn.004061d8(aiStackX8[0] + -0x18);\n    arg1[3] = iVar3 + 0x18;\n    arg1[1] = 0;\n    *(arg1 + 2) = 0;\n    LOCK();\n    piVar1 = aiStackX8[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(aiStackX8[0] + -0x18) + 8))();\n    }\n    *arg1 = 0x44ce78;\n    arg1[4] = 0;\n    arg1[5] = 0;\n    arg1[6] = 0;\n    arg1[7] = 0;\n    arg1[8] = 0;\n    arg1[9] = 0;\n    arg1[10] = 0;\n    arg1[0xb] = 0;\n    arg1[0xc] = 0;\n    arg1[0xd] = 0;\n    arg1[0xe] = 0;\n    arg1[0xf] = 0;\n    arg1[0x10] = 0;\n    arg1[0x11] = 0;\n    arg1[0x12] = 0;\n    arg1[0x13] = 0;\n    arg1[0x14] = 0;\n    arg1[0x15] = 0;\n    arg1[0x16] = 0;\n    arg1[0x17] = 0;\n    arg1[0x18] = 0;\n    arg1[0x19] = 0;\n    arg1[0x1a] = 0;\n    arg1[0x1b] = 0;\n    arg1[0x1c] = 0;\n    arg1[0x1d] = 0;\n    arg1[0x1e] = 0;\n    arg1[0x1f] = 0;\n    arg1[0x20] = 0;\n    arg1[0x21] = 0;\n    arg1[0x22] = 0;\n    arg1[0x23] = 0;\n    arg1[0x24] = 0;\n    arg1[0x25] = 0;\n    arg1[0x26] = 0;\n    arg1[0x27] = 0;\n    arg1[0x28] = 0;\n    arg1[0x29] = 0;\n    arg1[0x2a] = 0;\n    arg1[0x2b] = 0;\n    arg1[0x2c] = 0;\n    arg1[0x2d] = 0;\n    arg1[0x2e] = 0;\n    arg1[0x2f] = 0;\n    arg1[0x30] = 0;\n    arg1[0x31] = 0;\n    arg1[0x32] = 0;\n    arg1[0x33] = 0;\n    arg1[0x34] = 0;\n    arg1[0x35] = 0;\n    arg1[0x36] = 0;\n    arg1[0x37] = 0;\n    arg1[0x38] = 0;\n    arg1[0x39] = 0;\n    arg1[0x3a] = 0;\n    arg1[0x3b] = 0;\n    arg1[0x3c] = 0;\n    arg1[0x3d] = 0;\n    arg1[0x3e] = 0;\n    arg1[0x3f] = 0;\n    arg1[0x40] = 0;\n    arg1[0x41] = 0;\n    arg1[0x42] = 0;\n    arg1[0x43] = 0;\n    arg1[0x44] = 0;\n    arg1[0x45] = 0;\n    arg1[0x46] = 0;\n    arg1[0x47] = 0;\n    arg1[0x48] = 0;\n    arg1[0x49] = 0;\n    arg1[0x4a] = 0;\n    arg1[0x4b] = 0;\n    arg1[0x4c] = 0;\n    arg1[0x4d] = 0;\n    arg1[0x4e] = 0;\n    arg1[0x4f] = 0;\n    arg1[0x50] = 0;\n    arg1[0x51] = 0;\n    arg1[0x52] = 0;\n    arg1[0x53] = 0;\n    arg1[0x54] = 0;\n    arg1[0x55] = 0;\n    arg1[0x56] = 0;\n    arg1[0x57] = 0;\n    arg1[0x58] = 0;\n    arg1[0x59] = 0;\n    arg1[0x5a] = 0;\n    arg1[0x5b] = 0;\n    arg1[0x5c] = 0;\n    arg1[0x5d] = 0;\n    arg1[0x5e] = 0;\n    arg1[0x5f] = 0;\n    arg1[0x60] = 0;\n    arg1[0x61] = 0;\n    return arg1;\n}\n",
        "token_count": 1379
    },
    "004137c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong * fcn.004137c0(ulong *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t aiStackX8 [4];\n    \n    fcn.00404ed0(aiStackX8, 0x44cec8);\n    *arg1 = 0x44ce40;\n    iVar3 = fcn.004061d8(aiStackX8[0] + -0x18);\n    arg1[3] = iVar3 + 0x18;\n    arg1[1] = 0;\n    *(arg1 + 2) = 0;\n    LOCK();\n    piVar1 = aiStackX8[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(aiStackX8[0] + -0x18) + 8))();\n    }\n    *arg1 = 0x44cec0;\n    arg1[4] = 0;\n    arg1[5] = 0;\n    arg1[6] = 0;\n    arg1[7] = 0;\n    arg1[8] = 0;\n    arg1[9] = 0;\n    arg1[10] = 0;\n    arg1[0xb] = 0;\n    arg1[0xc] = 0;\n    arg1[0xd] = 0;\n    arg1[0xe] = 0;\n    arg1[0xf] = 0;\n    arg1[0x10] = 0;\n    arg1[0x11] = 0;\n    arg1[0x12] = 0;\n    arg1[0x13] = 0;\n    arg1[0x14] = 0;\n    arg1[0x15] = 0;\n    arg1[0x16] = 0;\n    arg1[0x17] = 0;\n    arg1[0x18] = 0;\n    return arg1;\n}\n",
        "token_count": 475
    },
    "00413c10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413c10(void)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.00415eb0(0x46aaa8, 0x405abc);\n    if (iVar2 == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if (*(iVar2 + 8) == 0) {\n        iVar2 = fcn.004157f8(0x46aaa0, 0x413ba8);\n        if (iVar2 == 0) {\n            fcn.00412ca8();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00413c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413c60(void)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.00413c10();\n    iVar2 = fcn.00415eb0(iVar2 + 0xc0, 0x404434);\n    if (iVar2 == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "00413c8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00413c8c(int64_t arg1, int64_t arg2)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.00413c10();\n    uVar1 = 0;\n    if (((*(iVar2 + 0xd0) != 0) && (*(arg2 + 0xd8) != -1)) && (*0x46aa88 != NULL)) {\n        uVar1 = (**0x46aa88)(*(arg2 + 0xd8), arg1);\n    }\n    *(arg1 + 8) = uVar1;\n    return arg1;\n}\n",
        "token_count": 145
    },
    "00413d7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00413d7c(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong arg1_00;\n    int64_t arg1_01;\n    ulong uVar2;\n    \n    iVar1 = fcn.00413c60();\n    uVar2 = 0;\n    if ((*(iVar1 + 0x30) == 0) && (arg1 != 0)) {\n        arg1_00 = fcn.00403cb0(0x4154b8);\n        arg1_01 = fcn.00403cc0(0xb8);\n        if (arg1_01 != 0) {\n            uVar2 = fcn.00416580(arg1_01, 0x44cf40, 0x413d30, 0x413ce4);\n        }\n        *(iVar1 + 0x30) = uVar2;\n        fcn.00403cb0(arg1_00);\n    }\n    return *(iVar1 + 0x30);\n}\n",
        "token_count": 223
    },
    "00413e34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00413e34(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong arg1_00;\n    int64_t iVar3;\n    int64_t *piVar4;\n    \n    iVar1 = fcn.00413d7c(1);\n    if (arg1 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.00418218(iVar1 + 0x30, arg1);\n        if (iVar2 == 0) {\n            iVar2 = fcn.00418218(iVar1 + 0x68, arg1);\n            if (iVar2 == 0) {\n                arg1_00 = fcn.00403cb0(0x4154b8);\n                iVar2 = fcn.004286bc(iVar1 + 8);\n                iVar3 = iVar2;\n                if (iVar2 == 0) {\n                    iVar3 = fcn.00412c60();\n                }\n                (**(iVar1 + 0x20))(iVar3);\n                piVar4 = fcn.00418460(iVar1 + 0x68, arg1);\n                *piVar4 = iVar2;\n                fcn.00403cb0(arg1_00);\n                iVar3 = *(iVar1 + 0xa8);\n                *(iVar2 + iVar3) = arg1;\n                if (*(iVar1 + 0xb0) == 2) {\n                    *(iVar2 + 8 + iVar3) = arg1;\n                }\n            }\n            else {\n                iVar3 = *(iVar1 + 0xa8);\n                *(iVar2 + iVar3) = arg1;\n                if (*(iVar1 + 0xb0) == 2) {\n                    *(iVar2 + 8 + iVar3) = arg1;\n                }\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 418
    },
    "00413f1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00413f1c(uint64_t arg1, uchar *arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    ushort *puVar3;\n    ulong uVar4;\n    \n    if ((arg2 == NULL) || (arg3 == 0)) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        uVar4 = (*pcVar1)();\n        return uVar4;\n    }\n    iVar2 = fcn.00413c10();\n    uVar4 = *(iVar2 + 0x18);\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar4, ((arg1 & 0xffffffff) >> 4) + 1);\n    if ((iVar2 != 0) && (puVar3 = fcn.00401cf0(uVar4, iVar2, arg1 & 0xffffffff),  puVar3 != NULL)) {\n        uVar4 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, puVar3 + 1, *puVar3, arg2, arg3 + -1, 0, 0);\n        arg2[uVar4] = 0;\n        return uVar4;\n    }\n    *arg2 = 0;\n    return 0;\n}\n",
        "token_count": 299
    },
    "00413fc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00413fc8(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.00413c10();\n    return *(iVar1 + 0x18);\n}\n",
        "token_count": 44
    },
    "00414074": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00414074(int64_t *arg1, int64_t arg2, ulong arg3, ulong *arg4)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    uint64_t arg2_00;\n    \n    arg2_00 = arg3;\n    if (arg4 == NULL) {\n        fcn.00401cd0(0x80004005);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    if ((arg2 == 0) && (arg3 != 0)) {\n        fcn.00401cd0(0x80070057);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    iVar3 = (***arg4)(arg4, arg2_00 & 0xffffffff, 1);\n    if (iVar3 == 0) {\n        fcn.00401ed0();\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    *arg1 = iVar3 + 0x18;\n    if ((-1 < arg3) && (arg3 <= *(iVar3 + 0xc))) {\n        *(iVar3 + 8) = arg3;\n        *(arg2_00 + *arg1) = 0;\n        fcn.0042e220(*arg1, arg2_00, arg2, arg2_00);\n        return arg1;\n    }\n    fcn.00401cd0(0x80070057);\n    pcVar1 = swi(3);\n    piVar2 = (*pcVar1)();\n    return piVar2;\n}\n",
        "token_count": 397
    },
    "004147ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004147ec(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    \n    uVar2 = 0;\n    uVar1 = uVar2;\n    if (*(arg1 + 8) != *(arg1 + 0x10)) {\n        if (arg2 != 0) {\n            uVar1 = *(arg2 + 8);\n        }\n        uVar1 = (*_sym.imp.GDI32.dll_ExtSelectClipRgn)(*(arg1 + 8), uVar1);\n    }\n    if (*(arg1 + 0x10) != 0) {\n        if (arg2 != 0) {\n            uVar2 = *(arg2 + 8);\n        }\n        uVar1 = (*_sym.imp.GDI32.dll_ExtSelectClipRgn)(*(arg1 + 0x10), uVar2, arg3);\n    }\n    return uVar1;\n}\n",
        "token_count": 217
    },
    "00414a2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00414a2c(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong arg1_00;\n    int64_t arg1_01;\n    ulong uVar2;\n    \n    iVar1 = fcn.00413c60();\n    uVar2 = 0;\n    if ((*(iVar1 + 0x38) == 0) && (arg1 != 0)) {\n        arg1_00 = fcn.00403cb0(0x4154b8);\n        arg1_01 = fcn.00403cc0(0xb8);\n        if (arg1_01 != 0) {\n            uVar2 = fcn.00416580(arg1_01, 0x44d0f8, 0x4149a4, 0x413ce4);\n        }\n        *(iVar1 + 0x38) = uVar2;\n        fcn.00403cb0(arg1_00);\n    }\n    return *(iVar1 + 0x38);\n}\n",
        "token_count": 226
    },
    "00414ae4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00414ae4(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong arg1_00;\n    int64_t iVar3;\n    int64_t *piVar4;\n    \n    iVar1 = fcn.00414a2c(1);\n    if (arg1 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.00418218(iVar1 + 0x30, arg1);\n        if (iVar2 == 0) {\n            iVar2 = fcn.00418218(iVar1 + 0x68, arg1);\n            if (iVar2 == 0) {\n                arg1_00 = fcn.00403cb0(0x4154b8);\n                iVar2 = fcn.004286bc(iVar1 + 8);\n                iVar3 = iVar2;\n                if (iVar2 == 0) {\n                    iVar3 = fcn.00412c60();\n                }\n                (**(iVar1 + 0x20))(iVar3);\n                piVar4 = fcn.00418460(iVar1 + 0x68, arg1);\n                *piVar4 = iVar2;\n                fcn.00403cb0(arg1_00);\n                iVar3 = *(iVar1 + 0xa8);\n                *(iVar2 + iVar3) = arg1;\n                if (*(iVar1 + 0xb0) == 2) {\n                    *(iVar2 + 8 + iVar3) = arg1;\n                }\n            }\n            else {\n                iVar3 = *(iVar1 + 0xa8);\n                *(iVar2 + iVar3) = arg1;\n                if (*(iVar1 + 0xb0) == 2) {\n                    *(iVar2 + 8 + iVar3) = arg1;\n                }\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 418
    },
    "00414b08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00414b08(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    int64_t **ppiVar2;\n    \n    if (arg2 != 0) {\n        arg1[1] = arg2;\n        iVar1 = fcn.00414a2c(1);\n        ppiVar2 = fcn.00418460(iVar1 + 0x30, arg1[1]);\n        *ppiVar2 = arg1;\n        (**(*arg1 + 0x18))(arg1, arg1[1]);\n    }\n    return arg2 != 0;\n}\n",
        "token_count": 140
    },
    "00414e78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00414e78(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong arg1_00;\n    int64_t arg1_01;\n    ulong uVar2;\n    \n    iVar1 = fcn.00413c60();\n    uVar2 = 0;\n    if ((*(iVar1 + 0x40) == 0) && (arg1 != 0)) {\n        arg1_00 = fcn.00403cb0(0x4154b8);\n        arg1_01 = fcn.00403cc0(0xb8);\n        if (arg1_01 != 0) {\n            uVar2 = fcn.00416580(arg1_01, 0x44d1b8, 0x4149c4, 0x413ce4);\n        }\n        *(iVar1 + 0x40) = uVar2;\n        fcn.00403cb0(arg1_00);\n    }\n    return *(iVar1 + 0x40);\n}\n",
        "token_count": 225
    },
    "00414f30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00414f30(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong arg1_00;\n    int64_t iVar3;\n    int64_t *piVar4;\n    \n    iVar1 = fcn.00414e78(1);\n    if (arg1 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.00418218(iVar1 + 0x30, arg1);\n        if (iVar2 == 0) {\n            iVar2 = fcn.00418218(iVar1 + 0x68, arg1);\n            if (iVar2 == 0) {\n                arg1_00 = fcn.00403cb0(0x4154b8);\n                iVar2 = fcn.004286bc(iVar1 + 8);\n                iVar3 = iVar2;\n                if (iVar2 == 0) {\n                    iVar3 = fcn.00412c60();\n                }\n                (**(iVar1 + 0x20))(iVar3);\n                piVar4 = fcn.00418460(iVar1 + 0x68, arg1);\n                *piVar4 = iVar2;\n                fcn.00403cb0(arg1_00);\n                iVar3 = *(iVar1 + 0xa8);\n                *(iVar2 + iVar3) = arg1;\n                if (*(iVar1 + 0xb0) == 2) {\n                    *(iVar2 + 8 + iVar3) = arg1;\n                }\n            }\n            else {\n                iVar3 = *(iVar1 + 0xa8);\n                *(iVar2 + iVar3) = arg1;\n                if (*(iVar1 + 0xb0) == 2) {\n                    *(iVar2 + 8 + iVar3) = arg1;\n                }\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 417
    },
    "00414f54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00414f54(int64_t arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    \n    if (arg2 != 0) {\n        *(arg1 + 8) = arg2;\n        iVar1 = fcn.00414e78(1);\n        piVar2 = fcn.00418460(iVar1 + 0x30, *(arg1 + 8));\n        *piVar2 = arg1;\n    }\n    return arg2 != 0;\n}\n",
        "token_count": 122
    },
    "0041513c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041513c(int64_t arg1)\n\n{\n    int32_t iVar1;\n    uchar auStackX16 [8];\n    int64_t iStackX24;\n    int64_t iStackX32;\n    int64_t *piVar2;\n    uint64_t uVar3;\n    ulong auStack24 [2];\n    \n    piVar2 = &iStackX24;\n    auStack24[0] = 0;\n    iStackX24 = 0;\n    iStackX32 = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0xffffffff80000001, \"software\", 0, 0x2001f, piVar2);\n    if (iVar1 == 0) {\n        uVar3 = piVar2 & 0xffffffff00000000;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                          (iStackX24, *(arg1 + 0xa8), 0, 0, uVar3, 0x2001f, 0, &iStackX32, auStackX16);\n        if (iVar1 == 0) {\n            (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                      (iStackX32, *(arg1 + 0xd0), 0, 0, uVar3 & 0xffffffff00000000, 0x2001f, 0, auStack24, auStackX16);\n        }\n    }\n    if (iStackX24 != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n    }\n    if (iStackX32 != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n    }\n    return auStack24[0];\n}\n",
        "token_count": 397
    },
    "00415258": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00415258(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    uchar auStackX24 [8];\n    int64_t iStackX32;\n    \n    iStackX32 = 0;\n    iVar1 = fcn.0041513c(arg1);\n    if (iVar1 != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(iVar1, arg2, 0, 0, 0, 0x2001f, 0, &iStackX32, auStackX24);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n        iVar1 = iStackX32;\n    }\n    return iVar1;\n}\n",
        "token_count": 165
    },
    "004152d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004152d8(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    uchar auStack120 [32];\n    uint *puStack88;\n    uint uStack80;\n    uint auStack72 [2];\n    uchar auStack64 [16];\n    uint64_t uStack48;\n    \n    uStack48 = *0x465c38 ^ auStack120;\n    auStack72[0] = arg4;\n    if (*(arg1 + 0xa8) == 0) {\n        fcn.0042f510(auStack64, 0x10, 0x44d018, arg4);\n        (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(arg2, arg3, auStack64, *(arg1 + 0xd0));\n    }\n    else {\n        iVar1 = fcn.00415258(arg1, arg2);\n        if (iVar1 != 0) {\n            puStack88 = auStack72;\n            uStack80 = 4;\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(iVar1, arg3, 0);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n        }\n    }\n    fcn.0042dcb0(uStack48 ^ auStack120);\n    return;\n}\n",
        "token_count": 300
    },
    "00415398": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415398(int64_t arg1, int64_t lpString)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uchar auStack328 [32];\n    uchar uStack296;\n    uchar auStack295 [255];\n    uint64_t uStack40;\n    \n    uStack40 = *0x465c38 ^ auStack328;\n    if (arg1 == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if (lpString == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n    uStack296 = 0;\n    fcn.0042f6c0(auStack295, 0, 0xff);\n    if (uVar2 < 0x101) {\n        uVar3 = (*_sym.imp.USER32.dll_GetWindowTextA)(arg1, &uStack296);\n        if (uVar3 == uVar2) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(&uStack296, lpString);\n            if (iVar4 == 0) goto code_r0x0041542e;\n        }\n    }\n    (*_sym.imp.USER32.dll_SetWindowTextA)(arg1, lpString);\ncode_r0x0041542e:\n    fcn.0042dcb0(uStack40 ^ auStack328);\n    return;\n}\n",
        "token_count": 372
    },
    "0041547c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041547c(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    \n    if (arg1 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GlobalFlags)();\n        uVar2 = uVar1;\n        if (uVar1 != 0) {\n            do {\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(arg1);\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(arg1);\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "0041568c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041568c(int64_t arg1, int64_t arg2)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    \n    if (arg1 == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    if (arg2 != 0) {\n        do {\n            if (arg1 == arg2) {\n                return 1;\n            }\n            arg1 = *(arg1 + 0x18);\n        } while (arg1 != 0);\n        return 0;\n    }\n    fcn.00412ca8();\n    pcVar1 = swi(3);\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 179
    },
    "004156c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004156c4(ulong *arg1, int64_t arg2)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    \n    if (arg1 == NULL) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    iVar3 = (***arg1)();\n    if (iVar3 == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    if (iVar3 == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    if (arg2 != 0) {\n        do {\n            if (iVar3 == arg2) {\n                return 1;\n            }\n            iVar3 = *(iVar3 + 0x18);\n        } while (iVar3 != 0);\n        return 0;\n    }\n    fcn.00412ca8();\n    pcVar1 = swi(3);\n    uVar2 = (*pcVar1)();\n    return uVar2;\n}\n",
        "token_count": 288
    },
    "004156f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004156f8(ulong arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    \n    if ((arg2 == 0) || (iVar1 = fcn.004156c4(arg2, arg1),  iVar1 == 0)) {\n        arg2 = 0;\n    }\n    return arg2;\n}\n",
        "token_count": 81
    },
    "00415758": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415758(ulong uBytes)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, uBytes);\n    if (iVar2 == 0) {\n        fcn.00412c60();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "00415790": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00415790(int32_t *arg1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    \n    puVar2 = *0x46abf0;\n    iVar1 = *arg1;\n    uVar4 = 0;\n    if ((iVar1 == 0) || (*0x46abf0 == NULL)) {\n        uVar4 = 0;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(*0x46abf0 + 10);\n        if ((0 < iVar1) && (iVar1 < puVar2[3])) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*puVar2);\n            if ((iVar3 != 0) && (uVar4 = 0,  iVar1 < *(iVar3 + 0x10))) {\n                uVar4 = *(*(iVar3 + 0x18) + iVar1 * 8);\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar2 + 10);\n    }\n    return uVar4;\n}\n",
        "token_count": 256
    },
    "004157f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004157f8(int64_t *arg1, code *arg2)\n\n{\n    int64_t iVar1;\n    \n    if (*arg1 == 0) {\n        fcn.0041633c(0x10);\n        if (*arg1 == 0) {\n            iVar1 = (*arg2)();\n            *arg1 = iVar1;\n        }\n        fcn.004163c8(0x10);\n    }\n    return *arg1;\n}\n",
        "token_count": 105
    },
    "004158ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004158ac(int64_t *arg1, int64_t arg2)\n\n{\n    code *pcVar1;\n    \n    if (arg2 == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    *(arg2 + arg1[1]) = *arg1;\n    *arg1 = arg2;\n    return;\n}\n",
        "token_count": 97
    },
    "004158d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004158d4(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    \n    iVar4 = *arg1;\n    uVar3 = 0;\n    if (iVar4 == 0) {\n        uVar3 = 0;\n    }\n    else if (iVar4 == arg2) {\n        if (arg2 == 0) {\n            fcn.00412ca8();\n            pcVar2 = swi(3);\n            uVar3 = (*pcVar2)();\n            return uVar3;\n        }\n        *arg1 = *(arg2 + arg1[1]);\ncode_r0x0041593c:\n        uVar3 = 1;\n    }\n    else {\n        if (iVar4 == 0) {\n            fcn.00412ca8();\n            pcVar2 = swi(3);\n            uVar3 = (*pcVar2)();\n            return uVar3;\n        }\n        do {\n            iVar1 = arg1[1];\n            if (*(iVar1 + iVar4) == arg2) {\n                if (arg2 == 0) {\n                    fcn.00412ca8();\n                    pcVar2 = swi(3);\n                    uVar3 = (*pcVar2)();\n                    return uVar3;\n                }\n                *(iVar1 + iVar4) = *(iVar1 + arg2);\n                goto code_r0x0041593c;\n            }\n            iVar4 = *(iVar1 + iVar4);\n        } while (iVar4 != 0);\n    }\n    return uVar3;\n}\n",
        "token_count": 360
    },
    "00415b18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00415b18(int64_t lpCriticalSection, ulong arg2)\n\n{\n    uint32_t *puVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    \n    iVar4 = arg2;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 0x28);\n    if ((0 < arg2) && (arg2 < *(lpCriticalSection + 0xc))) {\n        for (iVar3 = *(lpCriticalSection + 0x18); iVar3 != 0; iVar3 = *(iVar3 + 8)) {\n            if (arg2 < *(iVar3 + 0x10)) {\n                puVar2 = *(*(iVar3 + 0x18) + iVar4 * 8);\n                if (puVar2 != NULL) {\n                    (***puVar2)(puVar2, 1);\n                }\n                *(*(iVar3 + 0x18) + iVar4 * 8) = 0;\n            }\n        }\n        puVar1 = *(lpCriticalSection + 0x10) + iVar4 * 0x10;\n        *puVar1 = *puVar1 & 0xfffffffe;\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 0x28);\n    }\n    return;\n}\n",
        "token_count": 288
    },
    "00415e40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "get thread local storage value"
        ],
        "decompiled_code": "\nvoid fcn.00415e40(uint *lpCriticalSection, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 10);\n    if (arg3 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*lpCriticalSection);\n        if (iVar2 != 0) {\n            fcn.00415d68(lpCriticalSection, iVar2, arg2);\n        }\n    }\n    else {\n        iVar2 = *(lpCriticalSection + 6);\n        while (iVar2 != 0) {\n            iVar1 = *(iVar2 + 8);\n            fcn.00415d68(lpCriticalSection, iVar2, arg2);\n            iVar2 = iVar1;\n        }\n    }\n    // WARNING: Could not recover jumptable at 0x00415ea9. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 10);\n    return;\n}\n",
        "token_count": 236
    },
    "00415ffc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415ffc(ulong arg1, ulong arg2)\n\n{\n    if (*0x46abf0 != 0) {\n        fcn.00415e40(*0x46abf0, arg1, arg2);\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "004160c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool fcn.004160c8(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.00413c10();\n    return *(iVar1 + 0x50) == 0;\n}\n",
        "token_count": 48
    },
    "004160e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004160e0(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.00413c10();\n    LOCK();\n    *(iVar1 + 0x50) = *(iVar1 + 0x50) + 1;\n    return;\n}\n",
        "token_count": 63
    },
    "004160f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004160f4(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.00413c10();\n    return *(iVar1 + 0x54);\n}\n",
        "token_count": 44
    },
    "0041616c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041616c(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.00413c10();\n    LOCK();\n    piVar1 = iVar2 + 0x50;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        fcn.00416108();\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "00416188": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416188(int64_t arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    \n    for (iVar2 = (*_sym.imp.USER32.dll_GetCapture)(); iVar2 != 0; iVar2 = fcn.0040f05c(iVar2)) {\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(iVar2, 0x365, 0, 0);\n        if (iVar3 != 0) {\n            return;\n        }\n    }\n    for (iVar2 = (*_sym.imp.USER32.dll_GetFocus)(); iVar2 != 0; iVar2 = fcn.0040f05c(iVar2)) {\n        iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(iVar2, 0x365, 0, 0);\n        if (iVar3 != 0) {\n            return;\n        }\n    }\n    iVar2 = fcn.0040f0cc(arg1);\n    if (iVar2 != 0) {\n        iVar2 = (*_sym.imp.USER32.dll_GetLastActivePopup)(*(iVar2 + 0x40));\n        while( true ) {\n            if (iVar2 == 0) {\n                (*_sym.imp.USER32.dll_SendMessageA)(*(arg1 + 0x40), 0x111, 0xe147, 0);\n                return;\n            }\n            iVar3 = (*_sym.imp.USER32.dll_SendMessageA)(iVar2, 0x365, 0, 0);\n            if (iVar3 != 0) break;\n            iVar2 = fcn.0040f05c(iVar2);\n        }\n        return;\n    }\n    fcn.00412ca8();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 404
    },
    "00416260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416260(int64_t arg1)\n\n{\n    int64_t iVar1;\n    \n    if (*(arg1 + 0xc0) == 0) {\n        fcn.00416188(arg1);\n    }\n    else if (*(arg1 + 0xc0) != 0x3f107) {\n        iVar1 = fcn.00413c10();\n        (**(**(iVar1 + 8) + 0x158))(*(iVar1 + 8), *(arg1 + 0xc0), 1);\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "004162a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004162a8(void)\n\n{\n    if (*0x46ac54 == 0) {\n        *0x46ac54 = 1;\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x46af08);\n    }\n    return *0x46ac54;\n}\n",
        "token_count": 69
    },
    "004163f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004163f4(int64_t arg1)\n\n{\n    ulong uVar1;\n    uint uVar2;\n    \n    uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0xf);\n    *(arg1 + 0x30) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0x10);\n    *(arg1 + 0x34) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0x14);\n    *(arg1 + 0x38) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0x12);\n    *(arg1 + 0x3c) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(6);\n    *(arg1 + 0x40) = uVar2;\n    uVar1 = (*_sym.imp.USER32.dll_GetSysColorBrush)(0xf);\n    *(arg1 + 0x28) = uVar1;\n    uVar1 = (*_sym.imp.USER32.dll_GetSysColorBrush)(6);\n    *(arg1 + 0x20) = uVar1;\n    return;\n}\n",
        "token_count": 273
    },
    "00416468": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416468(int64_t arg1)\n\n{\n    uint uVar1;\n    ulong uVar2;\n    \n    uVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xb);\n    *(arg1 + 8) = uVar1;\n    uVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xc);\n    *(arg1 + 0xc) = uVar1;\n    *0x46af80 = (*_sym.imp.USER32.dll_GetSystemMetrics)(2);\n    *0x46af80 = *0x46af80 + 1;\n    *0x46af84 = (*_sym.imp.USER32.dll_GetSystemMetrics)(3);\n    *0x46af84 = *0x46af84 + 1;\n    uVar2 = (*_sym.imp.USER32.dll_GetDC)(0);\n    uVar1 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar2, 0x58);\n    *(arg1 + 0x18) = uVar1;\n    uVar1 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar2, 0x5a);\n    *(arg1 + 0x1c) = uVar1;\n    // WARNING: Could not recover jumptable at 0x004164ee. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar2);\n    return;\n}\n",
        "token_count": 326
    },
    "004164f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get OS version"
        ],
        "decompiled_code": "\nint64_t fcn.004164f8(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n    *(arg1 + 0x78) = uVar1 >> 0x1f;\n    fcn.00416468(arg1);\n    *(arg1 + 0x28) = 0;\n    fcn.004163f4(arg1);\n    uVar2 = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f02);\n    *(arg1 + 0x48) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f00);\n    *(arg1 + 0x70) = 0;\n    *(arg1 + 0x50) = uVar2;\n    *(arg1 + 0x58) = 0;\n    *(arg1 + 0x10) = 2;\n    *(arg1 + 0x14) = 2;\n    return arg1;\n}\n",
        "token_count": 247
    },
    "0041656c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041656c(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.00413c60();\n    *(iVar1 + 0x20) = *(iVar1 + 0x20) + 1;\n    return;\n}\n",
        "token_count": 60
    },
    "00416a50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00416a50(int64_t *arg1, int64_t *arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    uint64_t arg4_00;\n    int64_t *piVar4;\n    uint64_t arg3_00;\n    \n    arg4_00 = 0;\n    if (arg3 < 0) {\n        arg3._0_4_ = 0;\n    }\n    arg3_00 = arg4;\n    if (arg4 < 0) {\n        arg3_00 = arg4_00;\n    }\n    if (0x7fffffff - arg3 < arg3_00) {\n        fcn.00401cd0(0x80070057);\n        pcVar2 = swi(3);\n        piVar4 = (*pcVar2)();\n        return piVar4;\n    }\n    iVar3 = *arg1;\n    iVar1 = *(iVar3 + -0x10);\n    if (iVar1 < arg3 + arg3_00) {\n        arg3_00 = iVar1 - arg3;\n    }\n    if (iVar1 < arg3) {\n        arg3_00 = arg4_00;\n    }\n    if ((arg3 == 0) && (arg3_00 == iVar1)) {\n        iVar3 = fcn.004061d8(iVar3 + -0x18);\n        *arg2 = iVar3 + 0x18;\n    }\n    else {\n        if (*(iVar3 + -0x18) != NULL) {\n            arg4_00 = (**(**(iVar3 + -0x18) + 0x20))();\n        }\n        if (arg4_00 == 0) {\n            piVar4 = fcn.00413fdc();\n            arg4_00 = (**(*piVar4 + 0x20))(piVar4);\n        }\n        fcn.00414074(arg2, arg3 + *arg1, arg3_00, arg4_00);\n    }\n    return arg2;\n}\n",
        "token_count": 463
    },
    "00416b10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00416b10(int64_t *arg1, uint64_t arg2, int64_t *arg3)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    \n    if (arg3 == NULL) {\n        fcn.00401cd0(0x80004005);\n        pcVar1 = swi(3);\n        piVar3 = (*pcVar1)();\n        return piVar3;\n    }\n    iVar4 = (**(*arg3 + 0x18))(arg3);\n    *arg1 = iVar4 + 0x18;\n    if (arg2 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        if ((arg2 & 0xffffffffffff0000) == 0) {\n            iVar4 = fcn.00413fc8(arg2 & 0xffff);\n            if (iVar4 == 0) {\n                return arg1;\n            }\n            fcn.00402fc0(arg1, iVar4, arg2 & 0xffff);\n            return arg1;\n        }\n        uVar2 = fcn.0042f460(arg2);\n    }\n    fcn.00403160(arg1, arg2, uVar2);\n    return arg1;\n}\n",
        "token_count": 291
    },
    "00416fc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416fc4(ulong arg1, uchar *arg2, ulong arg3)\n\n{\n    int16_t iVar1;\n    uchar *puVar2;\n    uchar auStack360 [32];\n    uchar auStack328 [272];\n    uint64_t uStack56;\n    \n    uStack56 = *0x465c38 ^ auStack360;\n    puVar2 = arg2;\n    if (arg2 == NULL) {\n        puVar2 = auStack328;\n        arg3._0_4_ = 0x104;\n    }\n    iVar1 = (*_sym.imp.comdlg32.dll_GetFileTitleA)(arg1, puVar2);\n    if (iVar1 == 0) {\n        if (arg2 == NULL) {\n            (*_sym.imp.KERNEL32.dll_lstrlenA)(puVar2);\n        }\n    }\n    else {\n        fcn.00427de0(arg1, arg2, arg3);\n    }\n    fcn.0042dcb0(uStack56 ^ auStack360);\n    return;\n}\n",
        "token_count": 228
    },
    "00417054": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417054(int64_t arg1)\n\n{\n    ulong arg2;\n    int32_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    \n    bVar3 = false;\n    if (*(arg1 + 8) != -1) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        bVar3 = iVar1 == 0;\n    }\n    *(arg1 + 8) = 0xffffffffffffffff;\n    *(arg1 + 0x10) = 0;\n    fcn.00402dc0(arg1 + 0x18);\n    if (bVar3) {\n        arg2 = *(arg1 + 0x18);\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        fcn.00428634(uVar2, arg2);\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "004170e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.004170e0(ulong *arg1)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    \n    *arg1 = 0x44da88;\n    piVar2 = fcn.00413fdc();\n    if (piVar2 == NULL) {\n        fcn.00401cd0(0x80004005);\n        pcVar1 = swi(3);\n        puVar3 = (*pcVar1)();\n        return puVar3;\n    }\n    iVar4 = (**(*piVar2 + 0x18))(piVar2);\n    arg1[3] = iVar4 + 0x18;\n    arg1[1] = 0xffffffffffffffff;\n    *(arg1 + 2) = 0;\n    return arg1;\n}\n",
        "token_count": 189
    },
    "0041720c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041720c(ulong arg1, int64_t *arg2)\n\n{\n    int64_t arg1_00;\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if ((1U - *(*arg2 + -8) | *(*arg2 + -0xc) - 0x104U) < 0) {\n        fcn.00402e50(arg2, 0x104);\n    }\n    arg1_00 = *arg2;\n    fcn.0042f6c0(arg1_00, 0, 0x104);\n    iVar2 = fcn.00430150(arg1_00, 0x104, arg1, 0xffffffffffffffff);\n    if (iVar2 != 0) {\n        if (iVar2 == 0xc) {\n            fcn.00412c60();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        if ((iVar2 == 0x16) || (iVar2 == 0x22)) {\n            fcn.00412ca8();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        if (iVar2 != 0x50) {\n            fcn.00412ca8();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    (*_sym.imp.SHLWAPI.dll_PathStripToRootA)(arg1_00);\n    if (*arg2 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.0042f460(*arg2);\n        if (iVar2 < 0) goto code_r0x004172cc;\n    }\n    if (iVar2 <= *(*arg2 + -0xc)) {\n        *(*arg2 + -0x10) = iVar2;\n        *(iVar2 + *arg2) = 0;\n        return;\n    }\ncode_r0x004172cc:\n    fcn.00401cd0(0x80070057);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 474
    },
    "00417528": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417528(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if (arg1 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        *(arg1 + 0x14) = uVar1;\n        uVar2 = fcn.00428158(uVar1);\n        *(arg1 + 0x10) = uVar2;\n        if (arg2 != 0) {\n            uVar3 = fcn.0042f460(arg2);\n        }\n        fcn.00403160(arg1 + 0x18, arg2, uVar3);\n    }\n    return;\n}\n",
        "token_count": 178
    },
    "00417850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nulong * fcn.00417850(ulong *arg1, ulong arg2, ulong arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    ulong *puVar4;\n    int64_t iVar5;\n    uint64_t arg3_00;\n    \n    fcn.00412ccc(arg1);\n    *arg1 = 0x44db60;\n    piVar3 = fcn.00413fdc();\n    arg3_00 = 0;\n    if (piVar3 == NULL) {\n        fcn.00401cd0(0x80004005);\n        pcVar1 = swi(3);\n        puVar4 = (*pcVar1)();\n        return puVar4;\n    }\n    iVar5 = (**(*piVar3 + 0x18))(piVar3);\n    arg1[3] = iVar5 + 0x18;\n    *(arg1 + 2) = arg2;\n    *(arg1 + 0x14) = arg3;\n    if (arg4 != 0) {\n        uVar2 = fcn.0042f460(arg4);\n        arg3_00 = uVar2;\n    }\n    fcn.00403160(arg1 + 3, arg4, arg3_00);\n    return arg1;\n}\n",
        "token_count": 298
    },
    "00417b1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * fcn.00417b1c(int64_t arg1)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    piVar2 = arg1 + 0x1a;\n    if (*(arg1 + 2) != -1) {\n        piVar2 = arg1 + 0x12;\n    }\n    if (*piVar2 == -1) {\n        piVar2 = piVar2 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    if (*piVar2 == -1) {\n        piVar2 = piVar2 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    do {\n        iVar1 = *piVar2;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 != 0);\n    return piVar2;\n}\n",
        "token_count": 249
    },
    "00417ef4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417ef4(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    char *arg2;\n    uchar auStack152 [32];\n    int32_t aiStack120 [7];\n    char acStack92 [36];\n    uint64_t uStack56;\n    \n    uStack56 = *0x465c38 ^ auStack152;\n    arg2 = \"System\";\n    iVar3 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n    if (((iVar3 != 0) || (iVar3 = (*_sym.imp.GDI32.dll_GetStockObject)(0xd),  iVar3 != 0)) &&\n       (iVar1 = (*_sym.imp.GDI32.dll_GetObjectA)(iVar3, 0x3c, aiStack120),  iVar1 != 0)) {\n        arg2 = acStack92;\n        uVar4 = (*_sym.imp.USER32.dll_GetDC)();\n        if (aiStack120[0] < 0) {\n            aiStack120[0] = -aiStack120[0];\n        }\n        uVar2 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar4, 0x5a);\n        (*_sym.imp.KERNEL32.dll_MulDiv)(aiStack120[0], 0x48, uVar2);\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar4);\n    }\n    fcn.00417d00(arg1, arg2);\n    fcn.0042dcb0(uStack56 ^ auStack152);\n    return;\n}\n",
        "token_count": 363
    },
    "00417fd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.00417fd0(ulong *arg1, int64_t arg2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ulong *puVar4;\n    \n    if (arg2 == 0) {\n        *arg1 = 0;\n        *(arg1 + 1) = 0;\n        *(arg1 + 0xc) = 0;\n    }\n    else {\n        uVar2 = fcn.00417b70(arg2);\n        iVar3 = fcn.00417c50(arg1, arg2, uVar2);\n        if (iVar3 == 0) {\n            fcn.00412c60();\n            pcVar1 = swi(3);\n            puVar4 = (*pcVar1)();\n            return puVar4;\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 192
    },
    "00418018": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00418018(uint32_t *arg1, int64_t *arg2, ushort *arg3)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    ushort *puVar5;\n    ulong uVar6;\n    int16_t iVar7;\n    \n    iVar7 = -1;\n    if (*(arg1 + 2) == -1) {\n        uVar3 = arg1[3];\n    }\n    else {\n        uVar3 = *arg1;\n    }\n    if ((uVar3 & 0x40) == 0) {\n        uVar6 = 0;\n    }\n    else {\n        puVar5 = fcn.00417b1c(arg1);\n        *arg3 = *puVar5;\n        iVar4 = 1;\n        if (*(arg1 + 2) == iVar7) {\n            iVar4 = 3;\n        }\n        if ((1U - *(*arg2 + -8) | *(*arg2 + -0xc) - 0x20U) < 0) {\n            fcn.00402e50(arg2, 0x20);\n        }\n        iVar1 = *arg2;\n        if (*(iVar1 + -0xc) < 0x20) {\n            fcn.00401cd0(0x80070057);\n            pcVar2 = swi(3);\n            uVar6 = (*pcVar2)();\n            return uVar6;\n        }\n        *(iVar1 + -0x10) = 0x20;\n        *(*arg2 + 0x20) = 0;\n        (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, puVar5 + iVar4 * 2, 0xffffffff, iVar1, 0x20, 0, 0);\n        if (*arg2 == 0) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = fcn.0042f460(*arg2);\n            if (iVar4 < 0) goto code_r0x00418117;\n        }\n        if (*(*arg2 + -0xc) < iVar4) {\ncode_r0x00418117:\n            fcn.00401cd0(0x80070057);\n            pcVar2 = swi(3);\n            uVar6 = (*pcVar2)();\n            return uVar6;\n        }\n        *(*arg2 + -0x10) = iVar4;\n        *(iVar4 + *arg2) = 0;\n        uVar6 = 1;\n    }\n    return uVar6;\n}\n",
        "token_count": 578
    },
    "00418124": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418124(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    \n    uVar2 = arg2;\n    if (arg2 == 0) {\n        uVar2 = 0x11;\n    }\n    if (*(arg1 + 8) != 0) {\n        fcn.00403cfc(*(arg1 + 8));\n        *(arg1 + 8) = 0;\n    }\n    if (arg3 != 0) {\n        uVar1 = SUB168(ZEXT816(8) * ZEXT816(uVar2), 0);\n        if (SUB168(ZEXT816(8) * ZEXT816(uVar2) >> 0x40, 0) != 0) {\n            uVar1 = 0xffffffffffffffff;\n        }\n        uVar1 = fcn.00403cc0(uVar1);\n        *(arg1 + 8) = uVar1;\n        fcn.0042f6c0(uVar1, 0, uVar2 << 3);\n    }\n    *(arg1 + 0x10) = uVar2;\n    return;\n}\n",
        "token_count": 264
    },
    "00418198": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418198(int64_t arg1)\n\n{\n    if (*(arg1 + 8) != 0) {\n        fcn.00403cfc(*(arg1 + 8));\n        *(arg1 + 8) = 0;\n    }\n    *(arg1 + 0x18) = 0;\n    *(arg1 + 0x20) = 0;\n    fcn.00418c7c(*(arg1 + 0x28));\n    *(arg1 + 0x28) = 0;\n    return;\n}\n",
        "token_count": 122
    },
    "00418218": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00418218(int64_t arg1, uint64_t arg2)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    \n    if (arg1 == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    if (*(arg1 + 8) != 0) {\n        for (puVar3 = *(*(arg1 + 8) + ((arg2 >> 4 & 0xffffffff) % *(arg1 + 0x10)) * 8); puVar3 != NULL; puVar3 = *puVar3\n            ) {\n            if (puVar3[1] == arg2) {\n                return puVar3[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 196
    },
    "00418260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00418260(ulong arg1, ulong arg2, ulong *arg3)\n\n{\n    int64_t iVar1;\n    uchar auStackX32 [8];\n    uchar auStack24 [24];\n    \n    iVar1 = fcn.004181e0(arg1, arg2, auStack24, auStackX32);\n    if (iVar1 != 0) {\n        *arg3 = *(iVar1 + 0x10);\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 115
    },
    "0041828c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041828c(int64_t arg1, uint64_t arg2)\n\n{\n    int64_t *piVar1;\n    ulong *puVar2;\n    ulong *puVar3;\n    ulong *puVar4;\n    \n    if (*(arg1 + 8) != 0) {\n        puVar4 = *(arg1 + 8) + ((arg2 >> 4 & 0xffffffff) % *(arg1 + 0x10)) * 8;\n        puVar2 = *puVar4;\n        while (puVar3 = puVar2,  puVar3 != NULL) {\n            if (puVar3[1] == arg2) {\n                *puVar4 = *puVar3;\n                *puVar3 = *(arg1 + 0x20);\n                piVar1 = arg1 + 0x18;\n                *piVar1 = *piVar1 + -1;\n                *(arg1 + 0x20) = puVar3;\n                if (*piVar1 == 0) {\n                    fcn.00418198(arg1);\n                }\n                return 1;\n            }\n            puVar4 = puVar3;\n            puVar2 = *puVar3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 275
    },
    "004182f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004182f4(int64_t arg1, int64_t **arg2, int64_t *arg3, int64_t *arg4)\n\n{\n    code *pcVar1;\n    int64_t **ppiVar2;\n    int64_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int64_t *piVar6;\n    \n    piVar6 = *arg2;\n    if (piVar6 != NULL) {\n        if ((piVar6 == 0xffffffffffffffff) && (uVar5 = 0,  *(arg1 + 0x10) != 0)) {\n            ppiVar2 = *(arg1 + 8);\n            while (piVar6 = *ppiVar2,  piVar6 == NULL) {\n                uVar5 = uVar5 + 1;\n                ppiVar2 = ppiVar2 + 1;\n                if (*(arg1 + 0x10) <= uVar5) {\n                    fcn.00412ca8();\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n            }\n        }\n        piVar3 = *piVar6;\n        if (piVar3 == NULL) {\n            uVar5 = *(arg1 + 0x10);\n            uVar4 = (piVar6[1] >> 4 & 0xffffffff) % uVar5 + 1;\n            if (uVar4 < uVar5) {\n                ppiVar2 = *(arg1 + 8) + uVar4 * 8;\n                do {\n                    piVar3 = *ppiVar2;\n                    if (piVar3 != NULL) break;\n                    uVar4 = uVar4 + 1;\n                    ppiVar2 = ppiVar2 + 1;\n                } while (uVar4 < uVar5);\n            }\n        }\n        *arg2 = piVar3;\n        *arg3 = piVar6[1];\n        *arg4 = piVar6[2];\n    }\n    return;\n}\n",
        "token_count": 451
    },
    "00418460": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.00418460(int64_t arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    int64_t arg1_00;\n    uint32_t auStackX24 [2];\n    uchar auStackX32 [8];\n    \n    arg1_00 = arg1;\n    puVar1 = fcn.004181e0(arg1, arg2, auStackX24, auStackX32);\n    if (puVar1 == NULL) {\n        if (*(arg1_00 + 8) == 0) {\n            fcn.00418124(arg1_00, *(arg1_00 + 0x10), 1);\n        }\n        puVar1 = fcn.004183ec(arg1);\n        puVar1[1] = arg2;\n        *puVar1 = *(*(arg1 + 8) + auStackX24[0] * 8);\n        *(*(arg1 + 8) + auStackX24[0] * 8) = puVar1;\n    }\n    return puVar1 + 2;\n}\n",
        "token_count": 237
    },
    "00418844": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00418844(int64_t *arg1, ulong arg2, int32_t *arg3)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    uint64_t uVar4;\n    \n    if (arg3 == NULL) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        iVar2 = (*pcVar1)();\n        return iVar2;\n    }\n    puVar3 = (**(*arg1 + 0x78))();\n    do {\n        if (puVar3 == NULL) {\n            return 0;\n        }\n        iVar2 = puVar3[1];\n        uVar4 = *(iVar2 + 0x30);\n        if (uVar4 != 0xffffffffffffffff) {\n            do {\n                if ((*(iVar2 + 8) == arg3[1]) && (uVar4 == (*arg3 != 0))) {\n                    if (*(iVar2 + 0x44) == -1) {\n                        if (*(iVar2 + 0x40) == -1) {\n                            return iVar2;\n                        }\n                        if (*(iVar2 + 0x40) == arg2) {\n                            return iVar2;\n                        }\n                    }\n                    else if ((*(iVar2 + 0x40) < arg2 || *(iVar2 + 0x40) == arg2) &&\n                            (arg2 < *(iVar2 + 0x44) || arg2 == *(iVar2 + 0x44))) {\n                        return iVar2;\n                    }\n                }\n                uVar4 = *(iVar2 + 0x78);\n                iVar2 = iVar2 + 0x48;\n            } while (uVar4 != 0xffffffffffffffff);\n        }\n        puVar3 = *puVar3;\n    } while( true );\n}\n",
        "token_count": 399
    },
    "00418c44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418c44(ulong *arg1, int64_t arg2, int64_t arg3)\n\n{\n    code *pcVar1;\n    ulong *puVar2;\n    \n    if ((arg2 != 0) && (arg3 != 0)) {\n        puVar2 = fcn.00403cc0(arg2 * arg3 + 8);\n        *puVar2 = *arg1;\n        *arg1 = puVar2;\n        return;\n    }\n    fcn.00412ca8();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 135
    },
    "00418c7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418c7c(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    \n    if (arg1 != NULL) {\n        do {\n            piVar1 = *arg1;\n            fcn.00403cfc(arg1);\n            arg1 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "00419410": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.00419410(int64_t arg1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    \n    if (arg1 == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        puVar3 = (*pcVar1)();\n        return puVar3;\n    }\n    iVar4 = fcn.00413c10();\n    fcn.0041633c(0);\n    puVar3 = *(iVar4 + 0x30);\n    while( true ) {\n        if (puVar3 == NULL) {\n            fcn.004163c8(0);\n            return NULL;\n        }\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(arg1, *puVar3);\n        if (iVar2 == 0) break;\n        puVar3 = puVar3[4];\n    }\n    fcn.004163c8(0);\n    return puVar3;\n}\n",
        "token_count": 228
    },
    "00419c24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00419c24(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    \n    piVar1 = *(arg1 + 8);\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1, 1);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00419f00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00419f00(ulong arg1, int64_t arg2)\n\n{\n    int32_t iVar1;\n    \n    if (arg2 != 0) {\n        do {\n            iVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(arg2);\n            if (iVar1 == arg1) {\n                return arg2;\n            }\n            arg2 = (*_sym.imp.USER32.dll_GetWindow)(arg2, 2);\n        } while (arg2 != 0);\n    }\n    return arg2;\n}\n",
        "token_count": 118
    },
    "0041a09c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a09c(ulong arg1, ulong arg2)\n\n{\n    fcn.00426fd8(arg1, arg2);\n    return;\n}\n",
        "token_count": 38
    },
    "0041a104": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a104(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    fcn.00427014(arg1, arg2, arg3);\n    return;\n}\n",
        "token_count": 43
    },
    "00426db8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426db8(int64_t arg1)\n\n{\n    *(arg1 + 0x18) = 0;\n    *(arg1 + 0x20) = 0;\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 8) = 0;\n    fcn.00418c7c(*(arg1 + 0x28));\n    *(arg1 + 0x28) = 0;\n    return;\n}\n",
        "token_count": 106
    },
    "0041a514": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a514(ulong arg1, ulong arg2, uint *noname_2, ulong arg4)\n\n{\n    uchar auStack184 [32];\n    ulong uStack152;\n    uint auStack72 [2];\n    ulong uStack64;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint64_t uStack40;\n    \n    uStack40 = *0x465c38 ^ auStack184;\n    uStack56 = *noname_2;\n    uStack52 = noname_2[1];\n    uStack48 = noname_2[2];\n    uStack44 = noname_2[3];\n    auStack72[0] = 2;\n    uStack64 = 0;\n    uStack152 = arg4;\n    fcn.0041a2ac(arg1, arg2, noname_2, auStack72);\n    fcn.0042dcb0(uStack40 ^ auStack184);\n    return;\n}\n",
        "token_count": 226
    },
    "0041aa78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041aa78(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong in_stack_00000030;\n    uchar auStack56 [24];\n    \n    (*_sym.imp.USER32.dll_CopyRect)(auStack56, in_stack_00000030);\n    fcn.0041a514(arg1, arg2, arg3, arg4);\n    return;\n}\n",
        "token_count": 91
    },
    "0041ab9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041ab9c(int64_t arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    ulong *puVar3;\n    \n    puVar3 = *(arg1 + 0x88);\n    while( true ) {\n        if (puVar3 == NULL) {\n            return;\n        }\n        if (puVar3 == NULL) break;\n        piVar1 = puVar3 + 2;\n        puVar3 = *puVar3;\n        if (*(*piVar1 + 8) != 0) {\n            fcn.0041c3d4(*(*piVar1 + 8), arg2);\n        }\n    }\n    fcn.00412ca8();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 184
    },
    "0041b248": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.0041b248(ulong *arg1, ulong arg2)\n\n{\n    fcn.004053a8(arg1);\n    *arg1 = 0x44e218;\n    arg1[8] = arg2;\n    fcn.004183a4(arg1 + 9, 10);\n    fcn.00426ee8(arg1 + 0x10, 10);\n    arg1[0x10] = 0x44e1a0;\n    *(arg1 + 0x17) = 0xffffffff;\n    *(arg1 + 0xbc) = 0xffffffff;\n    arg1[0x18] = 0;\n    arg1[0x19] = 0;\n    arg1[0x1a] = 0;\n    arg1[0x1b] = 0;\n    *(arg1 + 0x1c) = 0;\n    arg1[0x1d] = 0x44e3c8;\n    arg1[0x1e] = 0x44e390;\n    return arg1;\n}\n",
        "token_count": 244
    },
    "0041b9ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041b9ec(uint16_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    if ((param_1 >> 0xe & 1) != 0) {\n        return 8;\n    }\n    if ((param_1 >> 0xd & 1) != 0) {\n        return 8;\n    }\n    if ((param_1 >> 0xc & 1) != 0) {\n        return 8;\n    }\n    uVar1 = param_1;\n    if (param_1 < 0x49) {\n        if (param_1 == 0x48) {\n            return 4;\n        }\n        uVar1 = param_1;\n        if (uVar1 != 0xb && 10 < param_1) {\n            if (uVar1 == 0xc) {\n                return 8;\n            }\n            if (uVar1 == 0xd) {\n                return 8;\n            }\n            if (uVar1 == 0xe) {\n                return 8;\n            }\n            if (uVar1 == 0x10) {\n                return 1;\n            }\n            if (uVar1 == 0x11) {\n                return 1;\n            }\n            if (uVar1 != 0x12) {\n                if (uVar1 == 0x13) {\n                    return 4;\n                }\n                if (uVar1 == 0x14) {\n                    return 1;\n                }\n                if (uVar1 != 0x15) {\n                    return 8;\n                }\n                return 1;\n            }\n        }\n        else if ((uVar1 != 0xb) && (uVar1 != 2)) {\n            if (uVar1 == 3) {\n                return 4;\n            }\n            if (uVar1 == 4) {\n                return 4;\n            }\n            if (uVar1 == 5) {\n                return 8;\n            }\n            if (uVar1 == 6) {\n                return 8;\n            }\n            if (uVar1 == 7) {\n                return 8;\n            }\n            if (uVar1 == 8) {\n                return 8;\n            }\n            iVar2 = uVar1 - 9;\n            if (iVar2 == 0) {\n                return 8;\n            }\ncode_r0x0041baa7:\n            if (iVar2 != 1) {\n                return 8;\n            }\n            return 4;\n        }\n    }\n    else {\n        if (uVar1 == 0x80) {\n            return 1;\n        }\n        if (uVar1 == 0x81) {\n            return 1;\n        }\n        if (uVar1 != 0x82) {\n            if (uVar1 == 0x83) {\n                return 1;\n            }\n            if ((uVar1 != 0x85) && (iVar2 = uVar1 - 0x86,  iVar2 != 0)) goto code_r0x0041baa7;\n        }\n    }\n    return 2;\n}\n",
        "token_count": 685
    },
    "0041babc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041babc(int16_t *arg1, ulong *arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    ulong uVar4;\n    int16_t iStack56;\n    int16_t iStack54;\n    int16_t iStack50;\n    int16_t iStack48;\n    int16_t iStack46;\n    int16_t iStack44;\n    \n    uVar3 = 0;\n    uVar4 = 0;\n    if (arg2 == NULL) {\n        fcn.00401cd0(0x80004005);\n        pcVar1 = swi(3);\n        uVar3 = (*pcVar1)();\n        return uVar3;\n    }\n    iVar2 = (*_sym.imp.OLEAUT32.dll_VariantTimeToSystemTime)();\n    fcn.0042f6c0(&iStack56, 0, 0x10);\n    if (iVar2 != 0) {\n        iVar2 = (*_sym.imp.OLEAUT32.dll_UnRegisterTypeLib)(*arg2);\n        if ((((iVar2 != 0) && (*arg1 == iStack56)) && (uVar3 = uVar4,  arg1[1] == iStack54)) &&\n           (((arg1[3] == iStack50 && (arg1[4] == iStack48)) && ((arg1[5] == iStack46 && (arg1[6] == iStack44)))))) {\n            uVar3 = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 346
    },
    "0041bb60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041bb60(int64_t arg1)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    ulong unaff_RBX;\n    ulong in_R9;\n    \n    fcn.00403cfc(*(arg1 + 0x18));\n    if ((*(arg1 + 0x48) != 0) &&\n       (iVar2 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x46b6a0, 0, *(arg1 + 0x48), in_R9, unaff_RBX),  iVar2 == 0)) {\n        puVar1 = fcn.0042f5c0();\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uVar4 = fcn.0042f570(uVar3);\n        *puVar1 = uVar4;\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "0041bd24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid fcn.0041bd24(int64_t *arg1, ulong noname_1, int64_t arg3, ulong arg4)\n\n{\n    (**(*arg1 + 0x188))(arg1, noname_1, arg3 + 0x10, arg3, 0, arg4);\n    return;\n}\n",
        "token_count": 73
    },
    "0041bd90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041bd90(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    ulong in_stack_00000028;\n    ulong in_stack_00000030;\n    int64_t *apiStack56 [2];\n    \n    iVar1 = (*_sym.imp.OLEAUT32.dll_VariantInit)(in_stack_00000030);\n    apiStack56[0] = NULL;\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.ole32.dll_CoGetClassObject)();\n        if (iVar1 < 0) {\n            return iVar1;\n        }\n        iVar1 = (**(*apiStack56[0] + 0x18))(apiStack56[0], arg2, arg4, in_stack_00000028);\n    }\n    else {\n        iVar1 = (*_sym.imp.ole32.dll_CoGetClassObject)(arg1, arg3, 0, 0x4528d0, apiStack56);\n        if (iVar1 < 0) {\n            return iVar1;\n        }\n        iVar1 = (**(*apiStack56[0] + 0x38))(apiStack56[0], arg2, 0, arg4);\n    }\n    (**(*apiStack56[0] + 0x10))();\n    return iVar1;\n}\n",
        "token_count": 300
    },
    "0041c288": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0041c288(int64_t arg1, int64_t arg2)\n\n{\n    code *pcVar1;\n    uchar auVar2 [16];\n    int32_t iVar3;\n    ulong arg1_00;\n    uint8_t *arg1_01;\n    uint8_t uVar4;\n    uint8_t *puVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    iVar6 = 0;\n    if ((*(arg1 + 200) == 0) || (*(arg1 + 0xc0) == 0)) {\n        iVar6 = 0;\n    }\n    else {\n        auVar2 = ZEXT416(6) * ZEXT216(*(arg1 + 200));\n        arg1_00 = SUB168(auVar2, 0);\n        if (SUB168(auVar2 >> 0x40, 0) != 0) {\n            arg1_00 = 0xffffffffffffffff;\n        }\n        arg1_01 = fcn.00403cc0(arg1_00);\n        iVar3 = (*_sym.imp.USER32.dll_CopyAcceleratorTableA)(*(arg1 + 0xc0), arg1_01, *(arg1 + 200));\n        puVar5 = arg1_01;\n        iVar7 = iVar6;\n        if (0 < iVar3) {\n            do {\n                if (arg2 == 0) {\n                    fcn.00412ca8();\n                    pcVar1 = swi(3);\n                    iVar6 = (*pcVar1)();\n                    return iVar6;\n                }\n                uVar4 = 0;\n                if (*(arg2 + 8) == 0x106) {\n                    uVar4 = 0x10;\n                }\n                if (((*puVar5 & 0xfd) == uVar4) && (*(puVar5 + 2) == *(arg2 + 0x10))) {\n                    iVar6 = 1;\n                    break;\n                }\n                iVar7 = iVar7 + 1;\n                puVar5 = puVar5 + 6;\n            } while (iVar7 < iVar3);\n        }\n        fcn.00403cfc(arg1_01);\n    }\n    return iVar6;\n}\n",
        "token_count": 487
    },
    "0041c43c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041c43c(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t aiStackX8 [4];\n    \n    piVar1 = *(arg1 + 0x88);\n    if (piVar1 == NULL) {\n        fcn.00412ca8();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    aiStackX8[0] = 0;\n    iVar3 = (**(*piVar1 + 0x18))(piVar1, aiStackX8);\n    if ((-1 < iVar3) && (*(arg1 + 0x48) != aiStackX8[0])) {\n        *(arg1 + 0x48) = aiStackX8[0];\n        if (*(arg1 + 0x50) != 0) {\n            fcn.0040d784(*(arg1 + 0x50), aiStackX8[0]);\n            *(*(arg1 + 0x50) + 0xa0) = arg1;\n        }\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "0041d20c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041d20c(int64_t arg1, ulong arg2, ulong *arg3, ulong *arg4)\n\n{\n    ulong uVar1;\n    int64_t arg1_00;\n    \n    if (arg4 != NULL) {\n        *arg4 = 0;\n    }\n    arg1_00 = *(arg1 + 0xe0);\n    while( true ) {\n        if (arg1_00 == 0) {\n            return 0;\n        }\n        if (*(arg1_00 + 0xc) == arg2) break;\n        arg1_00 = *(arg1_00 + 0x20);\n    }\n    uVar1 = fcn.0041d1b8(arg1_00);\n    *arg3 = uVar1;\n    return 0;\n}\n",
        "token_count": 177
    },
    "0041d3c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041d3c0(int64_t **arg1)\n\n{\n    if (*arg1 != NULL) {\n        (**(**arg1 + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 46
    },
    "0041d3d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041d3d8(int64_t arg1, uint64_t arg2, ushort *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar3 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar3 + 0x10)) {\n            uVar2 = arg2 - *(iVar3 + 0x10);\ncode_r0x0041d42d:\n            *arg3 = *(iVar3 + 0x28 + uVar2 * 0x50);\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar3 = *(arg1 + 0x28);\n        puVar1 = iVar3 + 0x10;\n        do {\n            if (*puVar1 == arg2) goto code_r0x0041d42d;\n            uVar2 = uVar2 + 1;\n            puVar1 = puVar1 + 10;\n        } while (uVar2 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 295
    },
    "0041d444": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041d444(int64_t **arg1)\n\n{\n    if (*arg1 != NULL) {\n        (**(**arg1 + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 44
    },
    "0041d45c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0041d45c(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    ulong in_R9;\n    int32_t iStackX8;\n    int32_t iStackX12;\n    ulong uVar6;\n    uchar auStack64 [40];\n    \n    uVar6 = 0xfffffffffffffffe;\n    iStackX12 = *(arg1 + 0x68) - *(arg1 + 0x60);\n    iStackX8 = *(arg1 + 100) - *(arg1 + 0x5c);\n    fcn.00414bc8(auStack64, 0);\n    fcn.004184fc(auStack64, &iStackX8);\n    piVar1 = *(arg1 + 0x80);\n    if (piVar1 == NULL) {\n        fcn.00412ca8();\n        pcVar2 = swi(3);\n        uVar5 = (*pcVar2)();\n        return uVar5;\n    }\n    iVar3 = (**(*piVar1 + 0x88))(piVar1, 1, &iStackX8, in_R9, uVar6);\n    if (-1 < iVar3) {\n        iVar4 = (**(**(arg1 + 0x80) + 0x90))(*(arg1 + 0x80), 1, &iStackX8);\n        if (-1 < iVar4) {\n            fcn.004185ac(auStack64, &iStackX8);\n            *(arg1 + 100) = iStackX8 + *(arg1 + 0x5c);\n            *(arg1 + 0x68) = *(arg1 + 0x60) + iStackX12;\n        }\n    }\n    fcn.00414c50(auStack64);\n    return -1 < iVar3;\n}\n",
        "token_count": 438
    },
    "0041fbbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041fbbc(int64_t **arg1)\n\n{\n    if (*arg1 != NULL) {\n        (**(**arg1 + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 44
    },
    "0041fbd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041fbd4(int64_t **arg1)\n\n{\n    if (*arg1 != NULL) {\n        (**(**arg1 + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 45
    },
    "0041fcc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041fcc4(int64_t arg1, uint64_t arg2, ulong *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    \n    uVar2 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar4 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar4 + 0x10)) {\n            uVar2 = arg2 - *(iVar4 + 0x10);\ncode_r0x0041fd1b:\n            puVar3 = *(iVar4 + 8 + uVar2 * 0x50) + *(arg1 + 0x10);\n            *arg3 = *puVar3;\n            arg3[1] = puVar3[1];\n            *(arg3 + 2) = *(puVar3 + 2);\n            *(arg3 + 0x12) = *(puVar3 + 0x12);\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar4 = *(arg1 + 0x28);\n        puVar1 = iVar4 + 0x10;\n        do {\n            if (*puVar1 == arg2) goto code_r0x0041fd1b;\n            uVar2 = uVar2 + 1;\n            puVar1 = puVar1 + 10;\n        } while (uVar2 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 369
    },
    "0041fd4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041fd4c(int64_t arg1, uint64_t arg2, uint *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint *puVar3;\n    int64_t iVar4;\n    \n    uVar2 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar4 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar4 + 0x10)) {\n            uVar2 = arg2 - *(iVar4 + 0x10);\ncode_r0x0041fda3:\n            puVar3 = *(iVar4 + 8 + uVar2 * 0x50) + *(arg1 + 0x10);\n            *arg3 = *puVar3;\n            *(arg3 + 1) = *(puVar3 + 1);\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar4 = *(arg1 + 0x28);\n        puVar1 = iVar4 + 0x10;\n        do {\n            if (*puVar1 == arg2) goto code_r0x0041fda3;\n            uVar2 = uVar2 + 1;\n            puVar1 = puVar1 + 10;\n        } while (uVar2 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 336
    },
    "0041fdc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041fdc4(int64_t arg1, uint64_t arg2, uint *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint *puVar3;\n    int64_t iVar4;\n    \n    uVar2 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar4 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar4 + 0x10)) {\n            uVar2 = arg2 - *(iVar4 + 0x10);\ncode_r0x0041fe1b:\n            puVar3 = *(iVar4 + 8 + uVar2 * 0x50) + *(arg1 + 0x10);\n            *arg3 = *puVar3;\n            *(arg3 + 1) = *(puVar3 + 1);\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar4 = *(arg1 + 0x28);\n        puVar1 = iVar4 + 0x10;\n        do {\n            if (*puVar1 == arg2) goto code_r0x0041fe1b;\n            uVar2 = uVar2 + 1;\n            puVar1 = puVar1 + 10;\n        } while (uVar2 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 335
    },
    "0041fe3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041fe3c(int64_t arg1, uint64_t arg2, uint *arg3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint64_t *puVar4;\n    uint64_t uVar5;\n    uint *puVar6;\n    int64_t iVar7;\n    \n    uVar5 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar7 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar7 + 0x10)) {\n            uVar5 = arg2 - *(iVar7 + 0x10);\ncode_r0x0041fe93:\n            puVar6 = *(iVar7 + 8 + uVar5 * 0x50) + *(arg1 + 0x10);\n            uVar1 = puVar6[1];\n            uVar2 = puVar6[2];\n            uVar3 = puVar6[3];\n            *arg3 = *puVar6;\n            arg3[1] = uVar1;\n            arg3[2] = uVar2;\n            arg3[3] = uVar3;\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar7 = *(arg1 + 0x28);\n        puVar4 = iVar7 + 0x10;\n        do {\n            if (*puVar4 == arg2) goto code_r0x0041fe93;\n            uVar5 = uVar5 + 1;\n            puVar4 = puVar4 + 10;\n        } while (uVar5 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 401
    },
    "0041feb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041feb0(int64_t arg1, uint64_t arg2, ushort *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar3 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar3 + 0x10)) {\n            uVar2 = arg2 - *(iVar3 + 0x10);\ncode_r0x0041ff06:\n            *(*(iVar3 + 8 + uVar2 * 0x50) + *(arg1 + 0x10)) = *arg3;\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar3 = *(arg1 + 0x28);\n        puVar1 = iVar3 + 0x10;\n        do {\n            if (*puVar1 == arg2) goto code_r0x0041ff06;\n            uVar2 = uVar2 + 1;\n            puVar1 = puVar1 + 10;\n        } while (uVar2 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 301
    },
    "0041ff24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041ff24(int64_t arg1, uint64_t arg2, uint *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar3 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar3 + 0x10)) {\n            uVar2 = arg2 - *(iVar3 + 0x10);\ncode_r0x0041ff7a:\n            *(*(iVar3 + 8 + uVar2 * 0x50) + *(arg1 + 0x10)) = *arg3;\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar3 = *(arg1 + 0x28);\n        puVar1 = iVar3 + 0x10;\n        do {\n            if (*puVar1 == arg2) goto code_r0x0041ff7a;\n            uVar2 = uVar2 + 1;\n            puVar1 = puVar1 + 10;\n        } while (uVar2 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 303
    },
    "0041ff94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041ff94(int64_t arg1, uint64_t arg2, uint *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar3 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar3 + 0x10)) {\n            uVar2 = arg2 - *(iVar3 + 0x10);\ncode_r0x0041ffea:\n            *(*(iVar3 + 8 + uVar2 * 0x50) + *(arg1 + 0x10)) = *arg3;\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar3 = *(arg1 + 0x28);\n        puVar1 = iVar3 + 0x10;\n        do {\n            if (*puVar1 == arg2) goto code_r0x0041ffea;\n            uVar2 = uVar2 + 1;\n            puVar1 = puVar1 + 10;\n        } while (uVar2 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 301
    },
    "00420004": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00420004(int64_t arg1, uint64_t arg2, ulong *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar3 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar3 + 0x10)) {\n            uVar2 = arg2 - *(iVar3 + 0x10);\ncode_r0x0042005a:\n            *(*(iVar3 + 8 + uVar2 * 0x50) + *(arg1 + 0x10)) = *arg3;\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar3 = *(arg1 + 0x28);\n        puVar1 = iVar3 + 0x10;\n        do {\n            if (*puVar1 == arg2) goto code_r0x0042005a;\n            uVar2 = uVar2 + 1;\n            puVar1 = puVar1 + 10;\n        } while (uVar2 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 300
    },
    "00420078": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00420078(int64_t arg1, uint64_t arg2, ulong *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar3 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar3 + 0x10)) {\n            uVar2 = arg2 - *(iVar3 + 0x10);\ncode_r0x004200ce:\n            *arg3 = *(*(iVar3 + 8 + uVar2 * 0x50) + *(arg1 + 0x10));\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar3 = *(arg1 + 0x28);\n        puVar1 = iVar3 + 0x10;\n        do {\n            if (*puVar1 == arg2) goto code_r0x004200ce;\n            uVar2 = uVar2 + 1;\n            puVar1 = puVar1 + 10;\n        } while (uVar2 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 297
    },
    "004200ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004200ec(int64_t arg1, uint64_t arg2, ulong *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar3 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar3 + 0x10)) {\n            uVar2 = arg2 - *(iVar3 + 0x10);\ncode_r0x00420142:\n            *(*(iVar3 + 8 + uVar2 * 0x50) + *(arg1 + 0x10)) = *arg3;\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar3 = *(arg1 + 0x28);\n        puVar1 = iVar3 + 0x10;\n        do {\n            if (*puVar1 == arg2) goto code_r0x00420142;\n            uVar2 = uVar2 + 1;\n            puVar1 = puVar1 + 10;\n        } while (uVar2 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 298
    },
    "00420160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00420160(int64_t arg1, uint64_t arg2, uint *arg3)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint64_t *puVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    \n    uVar6 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar7 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar7 + 0x10)) {\n            uVar6 = arg2 - *(iVar7 + 0x10);\ncode_r0x004201b6:\n            uVar2 = arg3[1];\n            uVar3 = arg3[2];\n            uVar4 = arg3[3];\n            puVar1 = *(iVar7 + 8 + uVar6 * 0x50) + *(arg1 + 0x10);\n            *puVar1 = *arg3;\n            puVar1[1] = uVar2;\n            puVar1[2] = uVar3;\n            puVar1[3] = uVar4;\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar7 = *(arg1 + 0x28);\n        puVar5 = iVar7 + 0x10;\n        do {\n            if (*puVar5 == arg2) goto code_r0x004201b6;\n            uVar6 = uVar6 + 1;\n            puVar5 = puVar5 + 10;\n        } while (uVar6 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 399
    },
    "004201d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004201d4(int64_t arg1, uint64_t arg2, uchar *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar3 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar3 + 0x10)) {\n            uVar2 = arg2 - *(iVar3 + 0x10);\ncode_r0x0042022a:\n            *(*(iVar3 + 8 + uVar2 * 0x50) + *(arg1 + 0x10)) = *arg3;\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar3 = *(arg1 + 0x28);\n        puVar1 = iVar3 + 0x10;\n        do {\n            if (*puVar1 == arg2) goto code_r0x0042022a;\n            uVar2 = uVar2 + 1;\n            puVar1 = puVar1 + 10;\n        } while (uVar2 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 301
    },
    "00420244": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00420244(int64_t arg1, uint64_t arg2, uchar *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar3 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar3 + 0x10)) {\n            uVar2 = arg2 - *(iVar3 + 0x10);\ncode_r0x0042029a:\n            *(*(iVar3 + 8 + uVar2 * 0x50) + *(arg1 + 0x10)) = *arg3;\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar3 = *(arg1 + 0x28);\n        puVar1 = iVar3 + 0x10;\n        do {\n            if (*puVar1 == arg2) goto code_r0x0042029a;\n            uVar2 = uVar2 + 1;\n            puVar1 = puVar1 + 10;\n        } while (uVar2 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 300
    },
    "004202b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004202b4(int64_t arg1, uint64_t arg2, ushort *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar3 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar3 + 0x10)) {\n            uVar2 = arg2 - *(iVar3 + 0x10);\ncode_r0x0042030a:\n            *(*(iVar3 + 8 + uVar2 * 0x50) + *(arg1 + 0x10)) = *arg3;\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar3 = *(arg1 + 0x28);\n        puVar1 = iVar3 + 0x10;\n        do {\n            if (*puVar1 == arg2) goto code_r0x0042030a;\n            uVar2 = uVar2 + 1;\n            puVar1 = puVar1 + 10;\n        } while (uVar2 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 301
    },
    "00420328": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00420328(int64_t arg1, uint64_t arg2, uint *arg3)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    \n    uVar2 = 0;\n    if (*(arg1 + 0x38) == '\\0') {\n        iVar3 = *(arg1 + 0x28);\n        if (arg2 <= *(arg1 + 0x18) + -1 + *(iVar3 + 0x10)) {\n            uVar2 = arg2 - *(iVar3 + 0x10);\ncode_r0x0042037e:\n            *(*(iVar3 + 8 + uVar2 * 0x50) + *(arg1 + 0x10)) = *arg3;\n            return 1;\n        }\n    }\n    else if (*(arg1 + 0x18) != 0) {\n        iVar3 = *(arg1 + 0x28);\n        puVar1 = iVar3 + 0x10;\n        do {\n            if (*puVar1 == arg2) goto code_r0x0042037e;\n            uVar2 = uVar2 + 1;\n            puVar1 = puVar1 + 10;\n        } while (uVar2 < *(arg1 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 300
    },
    "004205a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004205a4(int64_t arg1)\n\n{\n    int64_t arg1_00;\n    ulong uVar1;\n    ulong uStack56;\n    uint uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    ulong uStack24;\n    \n    if (*(arg1 + 0x90) == 0) {\n        if (*(arg1 + 0x70) != 0) {\n            uStack40 = *(arg1 + 0x80);\n            uStack32 = 0;\n            uStack24 = 0;\n            uStack48 = 0;\n            uStack56 = 1;\n            uVar1 = (**(**(arg1 + 0x10) + 0x40))(*(arg1 + 0x10), 1, 0x452e00, 0, &uStack56);\n            return uVar1;\n        }\n    }\n    else {\n        arg1_00 = *(arg1 + 0xa0);\n        if ((arg1_00 != 0) && (*(arg1_00 + 0x18) != 0)) {\n            uVar1 = fcn.0041fb4c(arg1_00);\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 279
    },
    "0042062c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042062c(int64_t arg1, int64_t arg2)\n\n{\n    if (*(arg1 + 0x10) != arg2) {\n        *(arg1 + 0x10) = arg2;\n        fcn.0041f7b4(arg1);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00420fdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00420fdc(ulong noname_0, int64_t **pvargDest, ulong *arg3)\n\n{\n    uint32_t uVar1;\n    int64_t *apiStackX16 [3];\n    \n    if (pvargDest == NULL) {\n        return;\n    }\n    uVar1 = noname_0;\n    if ((noname_0 >> 0xd & 1) == 0) {\n        if (uVar1 == 8) {\n            (*_sym.imp.OLEAUT32.dll_SysStringLen)(*pvargDest);\n        }\n        else {\n            if (uVar1 != 9) {\n                if (uVar1 == 0xc) {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(pvargDest);\n                    goto code_r0x004210a3;\n                }\n                if (uVar1 != 0xd) {\n                    if ((((uVar1 == 0x88) && (apiStackX16[0] = NULL,  arg3 != NULL)) &&\n                        ((***arg3)(arg3, 0x44ee88, apiStackX16),  apiStackX16[0] != NULL)) &&\n                       ((**(*apiStackX16[0] + 0x20))(apiStackX16[0], *pvargDest, 0),  apiStackX16[0] != NULL)) {\n                        (**(*apiStackX16[0] + 0x10))();\n                    }\n                    goto code_r0x004210a3;\n                }\n            }\n            if (*pvargDest == NULL) goto code_r0x004210a3;\n            (**(**pvargDest + 0x10))();\n        }\n    }\n    else {\n        if (*pvargDest == NULL) goto code_r0x004210a3;\n        (*_sym.imp.OLEAUT32.dll_SafeArrayGetDim)();\n    }\n    *pvargDest = NULL;\ncode_r0x004210a3:\n    if (((noname_0 >> 0xc & 1) != 0) && ((uVar1 & 0x4000) != 0xffffffff)) {\n        (*_sym.imp.ole32.dll_CoTaskMemFree)(pvargDest[1]);\n    }\n    return;\n}\n",
        "token_count": 495
    },
    "004214b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004214b4(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    int64_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    \n    iVar3 = 0;\n    uVar4 = 0;\n    uVar1 = *(*(arg1 + 0x10) + 8);\n    if (uVar1 != 0) {\n        iVar5 = 0;\n        do {\n            piVar2 = *(arg1 + 8);\n            if (piVar2 == NULL) {\n                iVar3 = -0x7fffbffe;\n            }\n            else {\n                iVar3 = (**(*piVar2 + 0x20))(piVar2, *(arg1 + 0x18), *(iVar5 + **(arg1 + 0x10)), (*(arg1 + 0x10))[2]);\n            }\n            if (iVar3 < 0) {\n                return iVar3;\n            }\n            uVar4 = uVar4 + 1;\n            iVar5 = iVar5 + 0x10;\n        } while (uVar4 < uVar1);\n    }\n    return iVar3;\n}\n",
        "token_count": 268
    },
    "004235cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004235cc(int64_t **arg1)\n\n{\n    int64_t *piVar1;\n    int64_t *arg2;\n    \n    piVar1 = arg1[4];\n    if (piVar1 != NULL) {\n        arg2 = *arg1;\n        if (arg2 != NULL) {\n            fcn.004210cc(piVar1, arg2);\n            fcn.00420398(piVar1, arg2);\n        }\n        piVar1 = arg1[4];\n        if (piVar1 != NULL) {\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(piVar1[5]);\n            piVar1[5] = 0;\n            (*_sym.imp.ole32.dll_CoTaskMemFree)(piVar1[6]);\n            piVar1[6] = 0;\n            fcn.00403cfc(piVar1[2]);\n            piVar1[2] = 0;\n            fcn.00403cfc(piVar1[4]);\n            piVar1[4] = 0;\n            piVar1[3] = 0;\n            fcn.00403cfc(piVar1);\n        }\n        arg1[4] = NULL;\n    }\n    piVar1 = *arg1;\n    if (piVar1 != NULL) {\n        if (arg1[3] != NULL) {\n            (**(*piVar1 + 0x30))(piVar1, 1, arg1 + 3, 0, 0, 0);\n            arg1[3] = NULL;\n        }\n        piVar1 = *arg1;\n        if (piVar1 != NULL) {\n            *arg1 = NULL;\n            (**(*piVar1 + 0x10))();\n        }\n        piVar1 = arg1[1];\n        if (piVar1 != NULL) {\n            arg1[1] = NULL;\n            (**(*piVar1 + 0x10))();\n        }\n    }\n    return;\n}\n",
        "token_count": 438
    },
    "0042558c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042558c(int64_t hWnd, int64_t lParam)\n\n{\n    ulong uVar1;\n    \n    uVar1 = 0;\n    if (hWnd == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (lParam != 0) {\n            uVar1 = *(lParam + 0x10);\n        }\n        uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(hWnd + 0x40), 0x87, uVar1, lParam);\n    }\n    return uVar1;\n}\n",
        "token_count": 129
    },
    "004255bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004255bc(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    \n    if (arg1 != NULL) {\n        piVar1 = arg1[1];\n        if (piVar1 == NULL) {\n            iVar4 = *arg1;\n        }\n        else {\n            iVar4 = piVar1[9];\n        }\n        if (iVar4 == 0) {\n            if ((piVar1 == NULL) || (uVar3 = (**(*piVar1 + 0xf0))(piVar1),  (uVar3 >> 0x1b & 1) == 0))\n            goto code_r0x0042560b;\n        }\n        else {\n            iVar2 = (*_sym.imp.USER32.dll_IsWindowEnabled)();\n            if (iVar2 != 0) {\ncode_r0x0042560b:\n                if (arg1[1] == 0) {\n                    return 0;\n                }\n                if ((*(arg1[1] + 0xb0) >> 0xd & 1) == 0) {\n                    return 0;\n                }\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 283
    },
    "0042562c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0042562c(int64_t hWnd)\n\n{\n    uint32_t uVar1;\n    uint64_t uVar2;\n    \n    if (hWnd == 0) {\n        uVar2 = 0;\n    }\n    else if (*(hWnd + 0xa0) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(hWnd + 0x40), 0x87, 0, 0);\n        uVar2 = uVar1 & 0x30;\n    }\n    else {\n        uVar2 = fcn.0041be80(*(hWnd + 0xa0));\n    }\n    return uVar2;\n}\n",
        "token_count": 156
    },
    "0042566c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042566c(int64_t hWnd)\n\n{\n    ulong arg1;\n    uint64_t uVar1;\n    \n    uVar1 = 0;\n    if (hWnd != 0) {\n        uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(hWnd + 0x40), 0x87, 0, 0);\n    }\n    if ((uVar1 & 8) != 0) {\n        (*_sym.imp.USER32.dll_SendMessageA)(*(hWnd + 0x40), 0xb1, 0, 0xffffffffffffffff);\n    }\n    if (*(hWnd + 0xa0) == 0) {\n        arg1 = (*_sym.imp.USER32.dll_SetFocus)(*(hWnd + 0x40));\n        fcn.0040d71c(arg1);\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0x160))();\n    }\n    return;\n}\n",
        "token_count": 217
    },
    "004256bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004256bc(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    ulong arg1_00;\n    int64_t iVar2;\n    int64_t iVar3;\n    \n    iVar2 = 0;\n    iVar3 = iVar2;\n    if (arg2 != 0) {\n        do {\n            iVar2 = arg2;\n            uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(*(iVar2 + 0x40), 0xfffffff0);\n            if ((uVar1 & 0xc0000000) != 0x40000000) {\n                return iVar3;\n            }\n            if (iVar2 == arg1) {\n                return iVar3;\n            }\n            arg1_00 = (*_sym.imp.USER32.dll_GetParent)(*(iVar2 + 0x40));\n            arg2 = fcn.0040d71c(arg1_00);\n            uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(*(arg2 + 0x40), 0xffffffec);\n            iVar3 = iVar2;\n        } while ((uVar1 >> 0x10 & 1) == 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 274
    },
    "00425828": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00425828(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    \n    if (arg1 != 0) {\n        piVar5 = NULL;\n        iVar4 = arg1;\n        do {\n            iVar1 = *(iVar4 + 0x98);\n            if ((iVar1 != 0) || (piVar5 = *(iVar4 + 0xa0),  piVar5 != NULL)) break;\n            uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(iVar4 + 0x40));\n            iVar4 = fcn.0040d71c(uVar3);\n        } while (iVar4 != 0);\n        if ((iVar4 != 0) && (iVar1 == 0)) {\n            (**(*piVar5 + 0x160))(piVar5);\n            uVar3 = (*_sym.imp.USER32.dll_GetFocus)();\n            iVar4 = fcn.0040d71c(uVar3);\n            if ((iVar4 != arg1) && (iVar2 = (*_sym.imp.USER32.dll_IsWindow)(*(arg1 + 0x40)),  iVar2 != 0)) {\n                fcn.00411a68(arg1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 302
    },
    "004258b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004258b8(int64_t hWnd, int64_t arg2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    ulong arg1;\n    int64_t iVar4;\n    \n    if (((hWnd != 0) && (iVar3 = (*_sym.imp.USER32.dll_IsWindow)(*(hWnd + 0x40)),  iVar3 != 0)) && (hWnd != arg2)) {\n        do {\n            piVar1 = *(hWnd + 0x98);\n            if (piVar1 != NULL) {\n                iVar2 = piVar1[0x19];\n                iVar4 = 0;\n                if (((iVar2 != 0) && (*(iVar2 + 0xb4) == 0)) && (iVar4 = fcn.0040d71c(*(iVar2 + 0x48)),  iVar4 == 0)) {\n                    return;\n                }\n                if ((arg2 != 0) && (iVar4 != 0)) {\n                    if (arg2 == iVar4) {\n                        return;\n                    }\n                    iVar3 = (*_sym.imp.USER32.dll_IsChild)(*(iVar4 + 0x40), *(arg2 + 0x40));\n                    if (iVar3 != 0) {\n                        return;\n                    }\n                }\n                (**(*piVar1 + 0xc0))(piVar1, 0);\n                return;\n            }\n            arg1 = (*_sym.imp.USER32.dll_GetParent)(*(hWnd + 0x40));\n            hWnd = fcn.0040d71c(arg1);\n        } while (hWnd != 0);\n    }\n    return;\n}\n",
        "token_count": 369
    },
    "00425968": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00425968(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    \n    iVar2 = fcn.004117b0(arg1, arg2);\n    if (iVar2 == 0) {\n        iVar3 = fcn.0042572c(arg1, 0, 1);\n        iVar2 = iVar3;\n        if (iVar3 != arg1) {\n            do {\n                iVar1 = fcn.00411960(iVar2);\n                if (iVar1 == arg2) {\n                    return iVar2;\n                }\n                iVar2 = fcn.0042572c(arg1, iVar2, 1);\n            } while ((iVar2 != 0) && (iVar2 != iVar3));\n        }\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 196
    },
    "004259d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004259d8(int64_t arg1, ulong arg2)\n\n{\n    uint8_t uVar1;\n    \n    if (*(arg1 + 0xa0) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(arg1 + 0x40), 0x87, 0, 0);\n        if ((uVar1 & (-(arg2 != 0) & 0x10U) + 0x10) != 0) {\n            (*_sym.imp.USER32.dll_SendMessageA)(*(arg1 + 0x40), 0xf4, arg2 != 0, 1);\n        }\n    }\n    else {\n        fcn.0041bea0(*(arg1 + 0xa0), arg2);\n    }\n    return;\n}\n",
        "token_count": 183
    },
    "00425a44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00425a44(ulong arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int64_t arg1_00;\n    \n    if ((arg2 == 0) || (uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(*(arg2 + 0x40)),  (uVar1 >> 0x10 & 1) != 0)) {\n        iVar2 = fcn.0042572c(arg1, 0, 3);\n    }\n    else {\n        iVar2 = fcn.004256bc(arg1, arg2);\n    }\n    arg1_00 = iVar2;\n    if (iVar2 != 0) {\n        do {\n            fcn.004259d8(arg1_00, 0);\n            arg1_00 = fcn.0042572c(arg1, arg1_00, 0);\n            if (arg1_00 == 0) {\n                return;\n            }\n        } while (arg1_00 != iVar2);\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "00425af8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00425af8(int64_t hWndParent, int64_t arg2, int64_t arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    \n    uVar2 = 0;\n    iVar1 = (*_sym.imp.USER32.dll_IsChild)(*(hWndParent + 0x40));\n    if (iVar1 == 0) {\n        return;\n    }\n    if (arg3 != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(*(arg3 + 0x40));\n        if ((uVar2 >> 0x10 & 1) != 0) {\n            return;\n        }\n        uVar2 = fcn.0042562c(arg3);\n    }\n    if (arg2 == arg3) {\n        if ((uVar2 & 0x20) == 0) {\n            return;\n        }\n        if (arg2 == 0) goto code_r0x00425bf3;\n        uVar3 = fcn.00425ac0(hWndParent);\n        iVar4 = fcn.00425968(hWndParent, uVar3);\n        if (((iVar4 == 0) || (iVar4 == arg3)) || (uVar3 = fcn.0042562c(iVar4),  (uVar3 & 0x10) == 0))\n        goto code_r0x00425bf3;\ncode_r0x00425bb8:\n        fcn.00425a44(hWndParent, iVar4);\n    }\n    else {\n        iVar4 = arg3;\n        if (((arg2 != 0) && (iVar1 = fcn.0042562c(arg2),  iVar1 != 0)) || ((arg3 != 0 && (uVar2 != 0))))\n        goto code_r0x00425bb8;\n    }\n    if ((uVar2 & 0x30) == 0) {\n        uVar2 = fcn.00425ac0(hWndParent);\n        arg3 = fcn.00425968(hWndParent, uVar2);\n        uVar2 = fcn.0042562c(arg3);\n        if ((uVar2 & 0x20) == 0) {\n            return;\n        }\n        iVar1 = fcn.00411a08(arg3);\n        if (iVar1 == 0) {\n            return;\n        }\n    }\ncode_r0x00425bf3:\n    fcn.004259d8(arg3, 1);\n    return;\n}\n",
        "token_count": 566
    },
    "00425c0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00425c0c(ulong arg1, int64_t arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    ulong *puVar4;\n    \n    iVar2 = fcn.0040b40c(arg1);\n    if (iVar2 == 0) {\ncode_r0x00425c58:\n        piVar3 = NULL;\n    }\n    else {\n        puVar4 = *(iVar2 + 0x88);\n        do {\n            if (puVar4 == NULL) goto code_r0x00425c58;\n            if (puVar4 == NULL) {\n                fcn.00412ca8();\n                pcVar1 = swi(3);\n                piVar3 = (*pcVar1)();\n                return piVar3;\n            }\n            piVar3 = puVar4[2];\n            puVar4 = *puVar4;\n        } while (((piVar3[1] == 0) || (*(piVar3[1] + 0x48) != *(arg2 + 0x40))) && (*piVar3 != *(arg2 + 0x40)));\n    }\n    return piVar3;\n}\n",
        "token_count": 268
    },
    "00425c6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00425c6c(int64_t arg1, int64_t *arg2, ulong arg3)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int64_t *piVar5;\n    ulong arg2_00;\n    int64_t iVar6;\n    int64_t iVar7;\n    int64_t **ppiVar8;\n    int64_t **ppiVar9;\n    int32_t iVar10;\n    \n    if (arg1 == 0) {\n        fcn.00412ca8();\n        pcVar2 = swi(3);\n        piVar5 = (*pcVar2)();\n        return piVar5;\n    }\n    iVar3 = 0;\n    piVar5 = arg2;\n    iVar10 = 0;\n    if (arg2 != NULL) {\n        if (arg2[1] == 0) {\n            iVar6 = *arg2;\n        }\n        else {\n            iVar6 = *(arg2[1] + 0x48);\n        }\n        iVar10 = iVar3;\n        if (iVar6 != 0) {\n            arg2_00 = fcn.0040d71c(iVar6);\n            iVar6 = fcn.004256bc(arg1, arg2_00);\n            if (iVar6 != 0) {\n                piVar5 = fcn.00425c0c(arg1, iVar6);\n            }\n        }\n    }\n    while (((piVar5 = fcn.004123b4(arg1, piVar5),  piVar5 != NULL && (iVar10 = iVar10 + 1,  piVar5 != arg2)) &&\n           (iVar10 < 0x3d))) {\n        if ((piVar5[1] != 0) && (iVar3 = fcn.0041c288(piVar5[1], arg3),  iVar3 != 0)) {\n            return piVar5;\n        }\n    }\n    iVar6 = fcn.0040b40c(arg1);\n    if (iVar6 != 0) {\n        ppiVar8 = *(iVar6 + 0x88);\n        if (arg2 == NULL) {\n            if (ppiVar8 == NULL) {\n                fcn.00412ca8();\n                pcVar2 = swi(3);\n                piVar5 = (*pcVar2)();\n                return piVar5;\n            }\n            piVar5 = ppiVar8[2];\n            ppiVar9 = *ppiVar8;\n            arg2 = piVar5;\n        }\n        else {\n            piVar5 = NULL;\n            if (ppiVar8 == NULL) {\n                return NULL;\n            }\n            do {\n                ppiVar9 = ppiVar8;\n                if (piVar5 == arg2) break;\n                if (ppiVar8 == NULL) {\n                    fcn.00412ca8();\n                    pcVar2 = swi(3);\n                    piVar5 = (*pcVar2)();\n                    return piVar5;\n                }\n                ppiVar9 = *ppiVar8;\n                piVar5 = ppiVar8[2];\n                ppiVar8 = ppiVar9;\n            } while (ppiVar9 != NULL);\n        }\n        if ((ppiVar9 != NULL) && (piVar1 = arg2,  piVar5 != NULL)) {\n            while (piVar1 != NULL) {\n                if (ppiVar9 == NULL) {\n                    ppiVar9 = *(iVar6 + 0x88);\n                }\n                if (ppiVar9 == NULL) {\n                    fcn.00412ca8();\n                    pcVar2 = swi(3);\n                    piVar5 = (*pcVar2)();\n                    return piVar5;\n                }\n                piVar5 = ppiVar9[2];\n                ppiVar9 = *ppiVar9;\n                if ((piVar5[1] != 0) && (iVar10 = fcn.0041c288(piVar5[1], arg3),  iVar10 != 0)) {\n                    piVar1 = piVar5[1];\n                    if (piVar1 == NULL) {\n                        iVar7 = *piVar5;\n                    }\n                    else {\n                        iVar7 = piVar1[9];\n                    }\n                    if (iVar7 == 0) {\n                        if (piVar1 == NULL) {\n                            fcn.00412ca8();\n                            pcVar2 = swi(3);\n                            piVar5 = (*pcVar2)();\n                            return piVar5;\n                        }\n                        uVar4 = (**(*piVar1 + 0xf0))(piVar1);\n                        if ((uVar4 >> 0x1b & 1) == 0) {\n                            return piVar5;\n                        }\n                    }\n                    else {\n                        iVar10 = (*_sym.imp.USER32.dll_IsWindowEnabled)();\n                        if (iVar10 != 0) {\n                            return piVar5;\n                        }\n                    }\n                }\n                piVar1 = piVar5 - arg2;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 1106
    },
    "00426564": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.00426564(ulong *arg1, int64_t arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    ulong *puVar2;\n    uint64_t uVar3;\n    \n    fcn.004170e0(arg1);\n    *arg1 = 0x44f388;\n    if ((arg2 == 0) && (arg3 != 0)) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        puVar2 = (*pcVar1)();\n        return puVar2;\n    }\n    arg1[4] = arg4;\n    arg1[5] = 0;\n    arg1[6] = arg3;\n    uVar3 = 0;\n    if (arg4 == 0) {\n        uVar3 = arg3;\n    }\n    arg1[7] = uVar3;\n    arg1[8] = arg2;\n    *(arg1 + 9) = 0;\n    return arg1;\n}\n",
        "token_count": 228
    },
    "00426ac4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00426ac4(int64_t **arg1)\n\n{\n    ulong uVar1;\n    \n    if (*arg1 == NULL) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = (**(**arg1 + 0x10))();\n        *arg1 = NULL;\n    }\n    return uVar1;\n}\n",
        "token_count": 78
    },
    "00426cfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00426cfc(ulong arg1, ulong arg2, int64_t *arg3)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.00426aec(arg1, arg2);\n    *arg3 = iVar2;\n    if (iVar2 == 0) {\n        iVar2 = fcn.00426bb8(arg1, arg2);\n        *arg3 = iVar2;\n        uVar1 = ~-(iVar2 != 0) & 0x80004002;\n    }\n    else {\n        fcn.00426c34(arg1);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 157
    },
    "00426df8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426df8(int64_t arg1, ulong *arg2)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    \n    if (arg2 == NULL) {\n        fcn.00412ca8();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    *arg2 = *(arg1 + 0x20);\n    piVar1 = arg1 + 0x18;\n    *piVar1 = *piVar1 + -1;\n    *(arg1 + 0x20) = arg2;\n    if (*piVar1 == 0) {\n        fcn.00426db8(arg1);\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "00426e24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00426e24(int64_t arg1)\n\n{\n    int64_t *arg2;\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    \n    if (arg1 == 0) {\n        fcn.00412ca8();\n        pcVar2 = swi(3);\n        iVar3 = (*pcVar2)();\n        return iVar3;\n    }\n    arg2 = *(arg1 + 8);\n    if (arg2 == NULL) {\n        fcn.00412ca8();\n        pcVar2 = swi(3);\n        iVar3 = (*pcVar2)();\n        return iVar3;\n    }\n    iVar3 = *arg2;\n    iVar1 = arg2[2];\n    *(arg1 + 8) = iVar3;\n    if (iVar3 == 0) {\n        *(arg1 + 0x10) = 0;\n    }\n    else {\n        *(iVar3 + 8) = 0;\n    }\n    fcn.00426df8(arg1, arg2);\n    return iVar1;\n}\n",
        "token_count": 240
    },
    "00426e74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426e74(int64_t arg1, int64_t *arg2)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    \n    if (arg2 == NULL) {\n        fcn.00412ca8();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (arg2 == *(arg1 + 8)) {\n        *(arg1 + 8) = *arg2;\n    }\n    else {\n        *arg2[1] = *arg2;\n    }\n    if (arg2 == *(arg1 + 0x10)) {\n        *(arg1 + 0x10) = arg2[1];\n    }\n    else {\n        *(*arg2 + 8) = arg2[1];\n    }\n    if (arg2 == NULL) {\n        fcn.00412ca8();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    *arg2 = *(arg1 + 0x20);\n    piVar1 = arg1 + 0x18;\n    *piVar1 = *piVar1 + -1;\n    *(arg1 + 0x20) = arg2;\n    if (*piVar1 == 0) {\n        fcn.00426db8(arg1);\n    }\n    return;\n}\n",
        "token_count": 300
    },
    "00426f9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426f9c(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.00426f20(arg1, 0, *(arg1 + 8));\n    *(iVar1 + 0x10) = arg2;\n    if (*(arg1 + 8) == 0) {\n        *(arg1 + 0x10) = iVar1;\n    }\n    else {\n        *(*(arg1 + 8) + 8) = iVar1;\n    }\n    *(arg1 + 8) = iVar1;\n    return;\n}\n",
        "token_count": 135
    },
    "00426fd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00426fd8(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.00426f20(arg1, *(arg1 + 0x10), 0);\n    *(iVar1 + 0x10) = arg2;\n    if (*(arg1 + 0x10) == NULL) {\n        *(arg1 + 8) = iVar1;\n    }\n    else {\n        **(arg1 + 0x10) = iVar1;\n    }\n    *(arg1 + 0x10) = iVar1;\n    return;\n}\n",
        "token_count": 135
    },
    "00427014": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00427014(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    \n    if (arg2 == 0) {\n        fcn.00426f9c(arg1, arg3);\n    }\n    else {\n        iVar1 = fcn.00426f20(arg1, *(arg2 + 8), arg2);\n        *(iVar1 + 0x10) = arg3;\n        if (*(arg2 + 8) == NULL) {\n            *(arg1 + 8) = iVar1;\n        }\n        else {\n            **(arg2 + 8) = iVar1;\n        }\n        *(arg2 + 8) = iVar1;\n    }\n    return;\n}\n",
        "token_count": 164
    },
    "00427098": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00427098(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    int64_t iVar4;\n    \n    if (arg1 == 0) {\n        iVar4 = 0;\n    }\n    else {\n        uVar2 = (*_sym.imp.OLEAUT32.dll_VariantInit)();\n        uVar3 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, arg1, uVar2, 0, 0, 0, 0);\n        iVar4 = (*_sym.imp.OLEAUT32.dll_DllRegisterServer)(0, uVar3);\n        if (iVar4 == 0) {\n            fcn.00412c60();\n            pcVar1 = swi(3);\n            iVar4 = (*pcVar1)();\n            return iVar4;\n        }\n        (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, arg1, uVar2, iVar4, uVar3, 0, 0);\n    }\n    return iVar4;\n}\n",
        "token_count": 246
    },
    "00427418": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00427418(ulong arg1)\n\n{\n    code *pcVar1;\n    \n    if (-1 < arg1) {\n        return;\n    }\n    if (arg1 == -0x7ff8fff2) {\n        fcn.00412c60();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.00412420(arg1);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 112
    },
    "004274c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004274c4(int16_t *arg1, ulong noname_1, int16_t *arg3)\n\n{\n    uint32_t uVar1;\n    \n    if (arg3 == NULL) {\n        arg3 = arg1;\n    }\n    if ((arg3 != arg1) || (noname_1 != *arg1)) {\n        uVar1 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(arg1, arg3, 0, noname_1);\n        fcn.00427418(uVar1);\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "004274f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004274f8(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    \n    if (arg1 != arg2) {\n        uVar1 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)();\n        fcn.00427418(uVar1);\n    }\n    return arg1;\n}\n",
        "token_count": 81
    },
    "0042751c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0042751c(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    \n    if (arg1 != arg2) {\n        uVar1 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)();\n        fcn.00427418(uVar1);\n    }\n    return arg1;\n}\n",
        "token_count": 81
    },
    "00427738": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00427738(ulong arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    \n    fcn.0042f6c0(arg1, 0, 0x18);\n    uVar1 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(arg1, arg2);\n    fcn.00427418(uVar1);\n    return arg1;\n}\n",
        "token_count": 90
    },
    "00427770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00427770(ulong arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    \n    fcn.0042f6c0(arg1, 0, 0x18);\n    uVar1 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(arg1, arg2);\n    fcn.00427418(uVar1);\n    return arg1;\n}\n",
        "token_count": 90
    },
    "004277a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004277a8(ulong arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    \n    fcn.0042f6c0(arg1, 0, 0x18);\n    uVar1 = (*_sym.imp.OLEAUT32.dll_VariantCopyInd)(arg1, arg2);\n    fcn.00427418(uVar1);\n    return arg1;\n}\n",
        "token_count": 91
    },
    "004277e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004277e0(ulong *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    *arg1 = 0x44f5a0;\n    fcn.004125d4(arg1 + 3);\n    iVar3 = arg1[3];\n    LOCK();\n    piVar1 = iVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar3 + -0x18) + 8))();\n    }\n    *arg1 = 0x44f568;\n    return;\n}\n",
        "token_count": 162
    },
    "00427898": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00427898(int64_t *arg1, uint64_t arg2, int64_t *arg3)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    if (arg3 == NULL) {\n        fcn.00401cd0(0x80004005);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    iVar3 = (**(*arg3 + 0x18))(arg3);\n    *arg1 = iVar3 + 0x18;\n    if ((arg2 == 0) || ((arg2 & 0xffffffffffff0000) != 0)) {\n        fcn.004128f8(arg1, arg2);\n    }\n    else {\n        iVar3 = fcn.00413fc8(arg2 & 0xffff);\n        if (iVar3 != 0) {\n            fcn.004129c0(arg1, iVar3, arg2 & 0xffff);\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 242
    },
    "00427940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.00427940(ulong *arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    \n    uVar1 = fcn.00413fdc();\n    *arg1 = 0x44f568;\n    arg1[1] = uVar1;\n    arg1[2] = arg1 + 4;\n    *(arg1 + 6) = 0xffffffff;\n    *(arg1[2] + 8) = 0;\n    *(arg1[2] + 0xc) = 0x100;\n    *arg1[2] = arg1;\n    *(arg1[2] + 0x18) = 0;\n    fcn.00427898(arg1 + 3, arg2, arg1);\n    *arg1 = 0x44f5a0;\n    return arg1;\n}\n",
        "token_count": 188
    },
    "00427de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00427de0(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    ulong uVar4;\n    \n    if (arg1 == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        uVar3 = (*pcVar1)();\n        return uVar3;\n    }\n    uVar4 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameA)();\n    if (arg2 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(uVar4);\n        uVar3 = iVar2 + 1;\n    }\n    else {\n        iVar2 = fcn.00430150(arg2, arg3, uVar4, 0xffffffffffffffff);\n        if (iVar2 != 0) {\n            if (iVar2 == 0xc) {\n                fcn.00412c60();\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n            if ((iVar2 == 0x16) || (iVar2 == 0x22)) {\n                fcn.00412ca8();\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n            if (iVar2 != 0x50) {\n                fcn.00412ca8();\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n        }\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 379
    },
    "00428634": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00428634(uint64_t arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    \n    uVar3 = arg1 & 0xffffffff;\n    if (arg1 != 0) {\n        uVar2 = fcn.00428158(arg1);\n        fcn.004285bc(uVar2, uVar3 & 0xffffffff, arg2);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "0042868c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042868c(int64_t arg1)\n\n{\n    fcn.00418c7c(*(arg1 + 8));\n    *(arg1 + 8) = 0;\n    *(arg1 + 0x10) = 0;\n    return;\n}\n",
        "token_count": 62
    },
    "004288b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004288b0(int64_t arg1, int64_t *arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    ulong uVar4;\n    int64_t *piVar5;\n    uchar uVar6;\n    uchar auStackX8 [8];\n    uchar auStackX16 [8];\n    uchar auStackX24 [8];\n    uchar auStackX32 [8];\n    uchar auStack56 [24];\n    \n    fcn.0042f6c0(arg2, 0, 0x128);\n    iVar2 = fcn.00430150(arg2 + 0x22, 0x104, *(arg1 + 0x18), 0xffffffffffffffff);\n    if (iVar2 != 0) {\n        if (iVar2 == 0xc) {\n            fcn.00412c60();\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n        if ((iVar2 == 0x16) || (iVar2 == 0x22)) {\n            fcn.00412ca8();\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n        if (iVar2 != 0x50) {\n            fcn.00412ca8();\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n    }\n    if (*(arg1 + 8) == *0x44da48) {\ncode_r0x00428a78:\n        uVar4 = 1;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetFileTime)(*(arg1 + 8), auStackX8, auStackX16, auStackX24);\n        if (iVar2 != 0) {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetFileSize)(*(arg1 + 8), 0);\n            arg2[3] = uVar3;\n            if (uVar3 != 0xffffffff) {\n                if (*(*(arg1 + 0x18) + -0x10) == 0) {\n                    *(arg2 + 4) = 0;\n                }\n                else {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)();\n                    uVar6 = iVar2;\n                    if (iVar2 == -1) {\n                        uVar6 = 0;\n                    }\n                    *(arg2 + 4) = uVar6;\n                }\n                iVar2 = (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)(auStackX8, auStackX32);\n                if (iVar2 == 0) {\ncode_r0x004289c7:\n                    *arg2 = 0;\n                }\n                else {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)(auStackX32, auStack56);\n                    if (iVar2 == 0) goto code_r0x004289c7;\n                    piVar5 = fcn.004287fc(auStackX32, auStackX8, 0xffffffff);\n                    *arg2 = *piVar5;\n                }\n                iVar2 = (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)(auStackX16, auStackX32);\n                if (iVar2 == 0) {\ncode_r0x00428a10:\n                    arg2[2] = 0;\n                }\n                else {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)(auStackX32, auStack56);\n                    if (iVar2 == 0) goto code_r0x00428a10;\n                    piVar5 = fcn.004287fc(auStackX32, auStackX16, 0xffffffff);\n                    arg2[2] = *piVar5;\n                }\n                iVar2 = (*_sym.imp.KERNEL32.dll_FileTimeToLocalFileTime)(auStackX24, auStackX32);\n                if (iVar2 == 0) {\ncode_r0x00428a5a:\n                    arg2[1] = 0;\n                }\n                else {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_FileTimeToSystemTime)(auStackX32, auStack56);\n                    if (iVar2 == 0) goto code_r0x00428a5a;\n                    piVar5 = fcn.004287fc(auStackX32, auStackX24, 0xffffffff);\n                    arg2[1] = *piVar5;\n                }\n                if (*arg2 == 0) {\n                    *arg2 = arg2[1];\n                }\n                if (arg2[2] == 0) {\n                    arg2[2] = arg2[1];\n                }\n                goto code_r0x00428a78;\n            }\n        }\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 1097
    },
    "00428e7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00428e7c(int64_t arg1, int64_t arg2, int64_t arg3)\n\n{\n    ulong *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ulong arg1_00;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    \n    uVar6 = 0;\n    if (arg2 < 0) {\n        fcn.00412ca8();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (-1 < arg3) {\n        *(arg1 + 0x20) = arg3;\n    }\n    if (arg2 == 0) {\n        if (*(arg1 + 8) != 0) {\n            uVar9 = uVar6;\n            if (0 < *(arg1 + 0x10)) {\n                do {\n                    if (*(uVar6 + 0x10 + *(arg1 + 8)) != 0) {\n                        fcn.00403cfc(*(uVar6 + *(arg1 + 8)));\n                    }\n                    uVar8 = uVar9 + 1;\n                    uVar6 = uVar6 + 0x18;\n                    uVar9 = uVar8;\n                } while (uVar8 < *(arg1 + 0x10));\n            }\n            fcn.00403cfc(*(arg1 + 8));\n            *(arg1 + 8) = 0;\n        }\n        *(arg1 + 0x18) = 0;\n        *(arg1 + 0x10) = 0;\n        return;\n    }\n    if (*(arg1 + 8) == 0) {\n        iVar4 = *(arg1 + 0x20);\n        if (*(arg1 + 0x20) < arg2) {\n            iVar4 = arg2;\n        }\n        arg1_00 = fcn.00403cc0(iVar4 * 0x18);\n        *(arg1 + 8) = arg1_00;\n        fcn.0042f6c0(arg1_00, 0, iVar4 * 0x18);\n        uVar9 = uVar6;\n        if (0 < arg2) {\n            do {\n                puVar1 = uVar6 + *(arg1 + 8);\n                if (puVar1 != NULL) {\n                    *puVar1 = 0;\n                    puVar1[1] = 0;\n                }\n                uVar8 = uVar9 + 1;\n                uVar6 = uVar6 + 0x18;\n                uVar9 = uVar8;\n            } while (uVar8 < arg2);\n        }\n    }\n    else {\n        iVar7 = *(arg1 + 0x18);\n        if (arg2 <= iVar7) {\n            iVar7 = *(arg1 + 0x10);\n            if (iVar7 < arg2) {\n                fcn.0042f6c0(*(arg1 + 8) + iVar7 * 0x18, 0, (arg2 - iVar7) * 0x18);\n                uVar9 = uVar6;\n                if (0 < arg2 - *(arg1 + 0x10)) {\n                    do {\n                        puVar1 = *(arg1 + 8) + (uVar6 + *(arg1 + 0x10)) * 0x18;\n                        if (puVar1 != NULL) {\n                            *puVar1 = 0;\n                            puVar1[1] = 0;\n                        }\n                        uVar8 = uVar9 + 1;\n                        uVar9 = uVar8;\n                        uVar6 = uVar6 + 1;\n                    } while (uVar8 < arg2 - *(arg1 + 0x10));\n                }\n            }\n            else if ((arg2 < iVar7) && (0 < iVar7 - arg2)) {\n                iVar7 = arg2 * 0x18;\n                do {\n                    if (*(iVar7 + 0x10 + *(arg1 + 8)) != 0) {\n                        fcn.00403cfc(*(iVar7 + *(arg1 + 8)));\n                    }\n                    uVar8 = uVar6 + 1;\n                    uVar6 = uVar8;\n                    iVar7 = iVar7 + 0x18;\n                } while (uVar8 < *(arg1 + 0x10) - arg2);\n            }\n            goto code_r0x00429157;\n        }\n        iVar5 = *(arg1 + 0x20);\n        if (iVar5 == 0) {\n            iVar4 = *(arg1 + 0x10) + (*(arg1 + 0x10) >> 0x3f & 7) >> 3;\n            iVar5 = iVar4;\n            if (0x400 < iVar4) {\n                iVar5 = 0x400;\n            }\n            if (iVar4 < 4) {\n                iVar5 = 4;\n            }\n        }\n        iVar4 = arg2;\n        if (arg2 < iVar5 + iVar7) {\n            iVar4 = iVar5 + iVar7;\n        }\n        if (iVar4 < iVar7) {\n            fcn.00412ca8();\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        iVar7 = fcn.00403cc0(iVar4 * 0x18);\n        iVar3 = fcn.0042e220(iVar7, iVar4 * 0x18, *(arg1 + 8), *(arg1 + 0x10) * 0x18);\n        if (iVar3 != 0) {\n            if (iVar3 == 0xc) {\n                fcn.00412c60();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                fcn.00412ca8();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if (iVar3 != 0x50) {\n                fcn.00412ca8();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.0042f6c0(iVar7 + *(arg1 + 0x10) * 0x18, 0, (arg2 - *(arg1 + 0x10)) * 0x18);\n        uVar9 = uVar6;\n        if (0 < arg2 - *(arg1 + 0x10)) {\n            do {\n                puVar1 = iVar7 + (uVar6 + *(arg1 + 0x10)) * 0x18;\n                if (puVar1 != NULL) {\n                    *puVar1 = 0;\n                    puVar1[1] = 0;\n                }\n                uVar8 = uVar9 + 1;\n                uVar9 = uVar8;\n                uVar6 = uVar6 + 1;\n            } while (uVar8 < arg2 - *(arg1 + 0x10));\n        }\n        fcn.00403cfc(*(arg1 + 8));\n        *(arg1 + 8) = iVar7;\n    }\n    *(arg1 + 0x18) = iVar4;\ncode_r0x00429157:\n    *(arg1 + 0x10) = arg2;\n    return;\n}\n",
        "token_count": 1672
    },
    "00429220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429220(int64_t arg1)\n\n{\n    int32_t *piVar1;\n    int16_t *piVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    \n    iVar4 = *(arg1 + 0x10);\n    iVar7 = 0;\n    iVar6 = 0;\n    if (0 < iVar4) {\n        iVar5 = 0;\n        do {\n            if ((iVar5 < 0) || (iVar4 <= iVar6)) {\n                fcn.00412ca8();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            piVar1 = *(*(arg1 + 8) + iVar5);\n            if ((piVar1 == NULL) || (piVar2 = *(*(arg1 + 8) + 8 + iVar5),  piVar2 == NULL)) {\n                fcn.00412ca8();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            iVar7 = iVar7 + 1;\n            iVar6 = iVar6 + 1;\n            *piVar2 = -(*piVar1 != 0);\n            iVar4 = *(arg1 + 0x10);\n            iVar5 = iVar5 + 0x18;\n        } while (iVar7 < iVar4);\n    }\n    return;\n}\n",
        "token_count": 324
    },
    "004293dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004293dc(ulong *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    iVar3 = arg1[6];\n    *arg1 = 0x44f920;\n    LOCK();\n    piVar1 = iVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar3 + -0x18) + 8))();\n    }\n    iVar3 = arg1[5];\n    LOCK();\n    piVar1 = iVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar3 + -0x18) + 8))();\n    }\n    iVar3 = arg1[3];\n    LOCK();\n    piVar1 = iVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar3 + -0x18) + 8))();\n    }\n    return;\n}\n",
        "token_count": 289
    },
    "0042a328": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042a328(int64_t arg1, ulong arg2)\n\n{\n    int64_t arg2_00;\n    code *pcVar1;\n    int32_t iVar2;\n    ulong uVar3;\n    \n    if (*(arg1 + 0x58) < *(arg1 + 0x5c)) {\n        arg2_00 = *(arg1 + 0x40);\n        iVar2 = fcn.0042e220(arg2, arg2_00, *(arg1 + 0x58) * arg2_00 + *(arg1 + 0x50), arg2_00);\n        if (iVar2 != 0) {\n            if (iVar2 == 0xc) {\n                fcn.00412c60();\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n            if ((iVar2 == 0x16) || (iVar2 == 0x22)) {\n                fcn.00412ca8();\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n            if (iVar2 != 0x50) {\n                fcn.00412ca8();\n                pcVar1 = swi(3);\n                uVar3 = (*pcVar1)();\n                return uVar3;\n            }\n        }\n        uVar3 = 1;\n        *(arg1 + 0x58) = *(arg1 + 0x58) + 1;\n    }\n    else {\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 358
    },
    "0042a684": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.0042a684(ulong *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint in_stack_00000028;\n    \n    fcn.004053a8(arg1);\n    *arg1 = 0x44f9f8;\n    arg1[0xd] = 0x44fb68;\n    *(arg1 + 0xc) = in_stack_00000028;\n    arg1[8] = arg2;\n    arg1[9] = 0;\n    *(arg1 + 0xb) = 0;\n    *(arg1 + 0x5c) = arg4;\n    arg1[10] = arg3;\n    return arg1;\n}\n",
        "token_count": 160
    },
    "0042a79c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042a79c(int64_t *arg1)\n\n{\n    if (*arg1 != 0) {\n        fcn.00403cfc(*arg1);\n        *arg1 = 0;\n    }\n    return;\n}\n",
        "token_count": 54
    },
    "0042a7c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042a7c0(ulong *arg1, ulong arg2, ulong arg3)\n\n{\n    fcn.0042a770(arg1);\n    *arg1 = arg2;\n    *(arg1 + 1) = arg3;\n    return;\n}\n",
        "token_count": 61
    },
    "0042a7e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042a7e4(int64_t arg1)\n\n{\n    uint32_t *puVar1;\n    int16_t *piVar2;\n    code *pcVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    \n    iVar4 = *(arg1 + 0x10);\n    iVar7 = 0;\n    iVar6 = 0;\n    if (0 < iVar4) {\n        iVar5 = 0;\n        do {\n            if ((iVar5 < 0) || (iVar4 <= iVar6)) {\n                fcn.00412ca8();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            puVar1 = *(*(arg1 + 8) + iVar5);\n            if ((puVar1 == NULL) || (piVar2 = *(*(arg1 + 8) + 8 + iVar5),  piVar2 == NULL)) {\n                fcn.00412ca8();\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            iVar7 = iVar7 + 1;\n            iVar6 = iVar6 + 1;\n            *puVar1 = *piVar2 != 0;\n            iVar4 = *(arg1 + 0x10);\n            iVar5 = iVar5 + 0x18;\n        } while (iVar7 < iVar4);\n    }\n    return;\n}\n",
        "token_count": 326
    },
    "0042b4e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042b4e0(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    \n    iVar2 = fcn.00413268();\n    iVar3 = fcn.00413c10();\n    uVar4 = 0;\n    if (*(iVar3 + 0x28) == '\\0') {\n        iVar1 = (*_sym.imp.ole32.dll_OleInitialize)();\n        if (iVar1 < 0) {\n            fcn.0042b410(0);\n            uVar4 = 0;\n        }\n        else {\n            *(iVar2 + 0x17c) = 1;\n            iVar2 = fcn.004057c8();\n            *(iVar2 + 0x78) = 0x42b488;\n            if (*(iVar2 + 0x80) == 0) {\n                iVar3 = fcn.00403cc0(0x68);\n                if (iVar3 != 0) {\n                    uVar4 = fcn.0042c330(iVar3);\n                }\n                *(iVar2 + 0x80) = uVar4;\n                iVar2 = fcn.004057c8();\n                fcn.0042bd38(*(iVar2 + 0x80));\n            }\n            uVar4 = 1;\n        }\n    }\n    else {\n        *(iVar2 + 0x17c) = 0xffffffff;\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 338
    },
    "0042b5c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b5c0(int64_t arg1, uint64_t arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ulong arg1_00;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t arg1_01;\n    \n    if (arg2 < 0) {\n        fcn.00412ca8();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (-1 < arg3) {\n        *(arg1 + 0x20) = arg3;\n    }\n    iVar5 = *(arg1 + 8);\n    if (arg2 == 0) {\n        fcn.00403cfc(iVar5);\n        *(arg1 + 8) = 0;\n        *(arg1 + 0x18) = 0;\n        *(arg1 + 0x10) = 0;\n    }\n    else {\n        if (iVar5 == 0) {\n            if (0xffffffff < arg2) {\n                fcn.00412ca8();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            arg1_00 = fcn.00403cc0(arg2);\n            *(arg1 + 8) = arg1_00;\n            fcn.0042f6c0(arg1_00, 0, arg2);\n            *(arg1 + 0x18) = arg2;\n        }\n        else {\n            iVar1 = *(arg1 + 0x18);\n            if (iVar1 < arg2) {\n                iVar5 = *(arg1 + 0x20);\n                if (*(arg1 + 0x20) == 0) {\n                    iVar4 = *(arg1 + 0x10) + (*(arg1 + 0x10) >> 0x3f & 7) >> 3;\n                    if (((iVar4 < 4) || (iVar5 = 0x400,  iVar4 < 0x401)) && (iVar5 = iVar4,  iVar4 < 4)) {\n                        iVar5 = 4;\n                    }\n                }\n                arg1_01 = arg2;\n                if (arg2 < iVar5 + iVar1) {\n                    arg1_01 = iVar5 + iVar1;\n                }\n                if (arg1_01 < iVar1) {\n                    fcn.00412ca8();\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n                iVar5 = fcn.00403cc0(arg1_01);\n                iVar3 = fcn.0042e220(iVar5, arg1_01, *(arg1 + 8), *(arg1 + 0x10));\n                if (iVar3 != 0) {\n                    if (iVar3 == 0xc) {\n                        fcn.00412c60();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                        fcn.00412ca8();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if (iVar3 != 0x50) {\n                        fcn.00412ca8();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n                fcn.0042f6c0(*(arg1 + 0x10) + iVar5, 0, arg2 - *(arg1 + 0x10));\n                fcn.00403cfc(*(arg1 + 8));\n                *(arg1 + 8) = iVar5;\n                *(arg1 + 0x18) = arg1_01;\n            }\n            else {\n                iVar1 = *(arg1 + 0x10);\n                if (iVar1 < arg2) {\n                    fcn.0042f6c0(iVar5 + iVar1, 0, arg2 - iVar1);\n                }\n            }\n        }\n        *(arg1 + 0x10) = arg2;\n    }\n    return;\n}\n",
        "token_count": 927
    },
    "0042b87c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b87c(int64_t arg1, int64_t arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ulong arg1_00;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (arg2 < 0) {\n        fcn.00412ca8();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (-1 < arg3) {\n        *(arg1 + 0x20) = arg3;\n    }\n    iVar5 = *(arg1 + 8);\n    if (arg2 == 0) {\n        fcn.00403cfc(iVar5);\n        *(arg1 + 8) = 0;\n        *(arg1 + 0x18) = 0;\n        *(arg1 + 0x10) = 0;\n    }\n    else {\n        if (iVar5 == 0) {\n            arg1_00 = fcn.00403cc0(arg2 << 3);\n            *(arg1 + 8) = arg1_00;\n            fcn.0042f6c0(arg1_00, 0, arg2 << 3);\n            *(arg1 + 0x18) = arg2;\n        }\n        else {\n            iVar1 = *(arg1 + 0x18);\n            if (iVar1 < arg2) {\n                iVar5 = *(arg1 + 0x20);\n                if (*(arg1 + 0x20) == 0) {\n                    iVar4 = *(arg1 + 0x10) + (*(arg1 + 0x10) >> 0x3f & 7) >> 3;\n                    if (((iVar4 < 4) || (iVar5 = 0x400,  iVar4 < 0x401)) && (iVar5 = iVar4,  iVar4 < 4)) {\n                        iVar5 = 4;\n                    }\n                }\n                iVar4 = arg2;\n                if (arg2 < iVar5 + iVar1) {\n                    iVar4 = iVar5 + iVar1;\n                }\n                if (iVar4 < iVar1) {\n                    fcn.00412ca8();\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n                iVar5 = fcn.00403cc0(iVar4 << 3);\n                iVar3 = fcn.0042e220(iVar5, iVar4 << 3, *(arg1 + 8), *(arg1 + 0x10) << 3);\n                if (iVar3 != 0) {\n                    if (iVar3 == 0xc) {\n                        fcn.00412c60();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                        fcn.00412ca8();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if (iVar3 != 0x50) {\n                        fcn.00412ca8();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n                fcn.0042f6c0(iVar5 + *(arg1 + 0x10) * 8, 0, (arg2 - *(arg1 + 0x10)) * 8);\n                fcn.00403cfc(*(arg1 + 8));\n                *(arg1 + 8) = iVar5;\n                *(arg1 + 0x18) = iVar4;\n            }\n            else {\n                iVar1 = *(arg1 + 0x10);\n                if (iVar1 < arg2) {\n                    fcn.0042f6c0(iVar5 + iVar1 * 8, 0, (arg2 - iVar1) * 8);\n                }\n            }\n        }\n        *(arg1 + 0x10) = arg2;\n    }\n    return;\n}\n",
        "token_count": 899
    },
    "0042bb94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004163d1)\n\nvoid fcn.0042bb94(void)\n\n{\n    ulong *arg2;\n    int64_t iVar1;\n    \n    iVar1 = fcn.00413c10();\n    fcn.0041633c(0xb);\n    while (arg2 = *(iVar1 + 0x70),  arg2 != NULL) {\n        fcn.004158d4(iVar1 + 0x70, arg2);\n        if (arg2 != NULL) {\n            (***arg2)(arg2, 1);\n        }\n    }\n    // WARNING: Could not recover jumptable at 0x004163ed. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x46ae18);\n    return;\n}\n",
        "token_count": 189
    },
    "0042bc14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004163d1)\n\nvoid fcn.0042bc14(void)\n\n{\n    int64_t arg1;\n    \n    arg1 = fcn.00413c10();\n    fcn.0041633c(0);\n    while (arg1 = *(arg1 + 0x40),  arg1 != 0) {\n        fcn.0042bbe4(arg1);\n    }\n    // WARNING: Could not recover jumptable at 0x004163ed. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x46ac60);\n    return;\n}\n",
        "token_count": 151
    },
    "0042bca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042bca0(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    \n    iVar3 = fcn.004157f8(0x46b080, 0x42bc48);\n    if (iVar3 == 0) {\n        fcn.00412ca8();\n        pcVar1 = swi(3);\n        uVar4 = (*pcVar1)();\n        return uVar4;\n    }\n    if (*(iVar3 + 0x10) != 0) {\n        uVar4 = fcn.00426aec(*(iVar3 + 0x10), 0x4527c0);\n        iVar2 = (*_sym.imp.ole32.dll_OleIsCurrentClipboard)(uVar4);\n        if (iVar2 == 0) {\n            return *(iVar3 + 0x10);\n        }\n        *(iVar3 + 0x10) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 224
    },
    "0042bd04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042bd04(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.0042bca0();\n    if (iVar1 != 0) {\n        (*_sym.imp.ole32.dll_OleFlushClipboard)();\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "0042bef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042bef0(ulong *arg1)\n\n{\n    *arg1 = 0x44fe78;\n    fcn.0042bd64(arg1);\n    if (arg1[4] != 0) {\n        (**(arg1[4] + 0x38))();\n    }\n    arg1[7] = 0;\n    return;\n}\n",
        "token_count": 83
    },
    "0042c330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.0042c330(ulong *arg1)\n\n{\n    fcn.004053a8(arg1);\n    *arg1 = 0x44fe78;\n    arg1[0xc] = 0x44fff0;\n    *(arg1 + 9) = 1;\n    *(arg1 + 0x4c) = 1;\n    *(arg1 + 0x44) = 0;\n    *(arg1 + 0xb) = 2;\n    *(arg1 + 0x54) = 10000;\n    *(arg1 + 0x5c) = 8000;\n    *(arg1 + 10) = 0;\n    *(arg1 + 8) = 0;\n    return arg1;\n}\n",
        "token_count": 170
    },
    "0042c388": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c388(int64_t arg1)\n\n{\n    code *pcVar1;\n    \n    if (0x3ffffffd < *(arg1 + 0x50)) {\n        fcn.00418f70(5, *(arg1 + 0x18));\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "0042c3ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c3ac(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    ulong *puVar5;\n    uint64_t *puVar6;\n    \n    if ((~*(arg1 + 0x20) & 1) == 0) {\n        uVar4 = 0;\n        if (*(arg1 + 0x58) == 0) {\n            iVar3 = fcn.00403cc0(0x28);\n            if (iVar3 != 0) {\n                uVar4 = fcn.0042cc38(iVar3);\n            }\n            *(arg1 + 0x58) = uVar4;\n            fcn.0042cc58(uVar4, 1, *(arg1 + 0x68));\n            if (*(*(arg1 + 0x58) + 0x10) < 1) {\n                fcn.00412ca8();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            **(*(arg1 + 0x58) + 8) = 0;\n            *(arg1 + 0x50) = 1;\n        }\n        if (arg2 != 0) {\n            fcn.0042c388(arg1);\n            uVar1 = *(arg1 + 0x50);\n            *(arg1 + 0x50) = uVar1 + 1;\n            fcn.0042cde4(*(arg1 + 0x58), uVar1, arg2, 1);\n        }\n    }\n    else {\n        uVar4 = 0;\n        if (*(arg1 + 0x58) == 0) {\n            iVar3 = fcn.00403cc0(0x38);\n            if (iVar3 != 0) {\n                uVar4 = fcn.004183a4(iVar3, *(arg1 + 0x68));\n            }\n            *(arg1 + 0x58) = uVar4;\n            fcn.00418124(uVar4, *(arg1 + 0x6c), 1);\n            puVar5 = fcn.00418460(*(arg1 + 0x58), 0);\n            *puVar5 = 0;\n            *(arg1 + 0x50) = 1;\n        }\n        if (arg2 != 0) {\n            fcn.0042c388(arg1);\n            uVar1 = *(arg1 + 0x50);\n            puVar6 = fcn.00418460(*(arg1 + 0x58), arg2);\n            *puVar6 = uVar1;\n            *(arg1 + 0x50) = *(arg1 + 0x50) + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 637
    },
    "0042cc58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042cc58(int64_t arg1, int64_t arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ulong arg1_00;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (arg2 < 0) {\n        fcn.00412ca8();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (-1 < arg3) {\n        *(arg1 + 0x20) = arg3;\n    }\n    iVar5 = *(arg1 + 8);\n    if (arg2 == 0) {\n        fcn.00403cfc(iVar5);\n        *(arg1 + 8) = 0;\n        *(arg1 + 0x18) = 0;\n        *(arg1 + 0x10) = 0;\n    }\n    else {\n        if (iVar5 == 0) {\n            arg1_00 = fcn.00403cc0(arg2 << 3);\n            *(arg1 + 8) = arg1_00;\n            fcn.0042f6c0(arg1_00, 0, arg2 << 3);\n            *(arg1 + 0x18) = arg2;\n        }\n        else {\n            iVar1 = *(arg1 + 0x18);\n            if (iVar1 < arg2) {\n                iVar5 = *(arg1 + 0x20);\n                if (*(arg1 + 0x20) == 0) {\n                    iVar4 = *(arg1 + 0x10) + (*(arg1 + 0x10) >> 0x3f & 7) >> 3;\n                    if (((iVar4 < 4) || (iVar5 = 0x400,  iVar4 < 0x401)) && (iVar5 = iVar4,  iVar4 < 4)) {\n                        iVar5 = 4;\n                    }\n                }\n                iVar4 = arg2;\n                if (arg2 < iVar5 + iVar1) {\n                    iVar4 = iVar5 + iVar1;\n                }\n                if (iVar4 < iVar1) {\n                    fcn.00412ca8();\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n                iVar5 = fcn.00403cc0(iVar4 << 3);\n                iVar3 = fcn.0042e220(iVar5, iVar4 << 3, *(arg1 + 8), *(arg1 + 0x10) << 3);\n                if (iVar3 != 0) {\n                    if (iVar3 == 0xc) {\n                        fcn.00412c60();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                        fcn.00412ca8();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if (iVar3 != 0x50) {\n                        fcn.00412ca8();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n                fcn.0042f6c0(iVar5 + *(arg1 + 0x10) * 8, 0, (arg2 - *(arg1 + 0x10)) * 8);\n                fcn.00403cfc(*(arg1 + 8));\n                *(arg1 + 8) = iVar5;\n                *(arg1 + 0x18) = iVar4;\n            }\n            else {\n                iVar1 = *(arg1 + 0x10);\n                if (iVar1 < arg2) {\n                    fcn.0042f6c0(iVar5 + iVar1 * 8, 0, (arg2 - iVar1) * 8);\n                }\n            }\n        }\n        *(arg1 + 0x10) = arg2;\n    }\n    return;\n}\n",
        "token_count": 898
    },
    "0042cde4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042cde4(int64_t arg1, int64_t arg2, ulong arg3, int64_t arg4)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    \n    if ((arg2 < 0) || (arg4 < 1)) {\n        fcn.00412ca8();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (arg2 < *(arg1 + 0x10)) {\n        iVar1 = *(arg1 + 0x10);\n        fcn.0042cc58(arg1, iVar1 + arg4, 0xffffffffffffffff);\n        iVar3 = fcn.0042e300(*(arg1 + 8) + (arg2 + arg4) * 8, ((*(arg1 + 0x10) - arg2) - arg4) * 8, \n                             *(arg1 + 8) + arg2 * 8, (iVar1 - arg2) * 8);\n        if (iVar3 != 0) {\n            if (iVar3 == 0xc) {\n                fcn.00412c60();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                fcn.00412ca8();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if (iVar3 != 0x50) {\n                fcn.00412ca8();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        fcn.0042f6c0(*(arg1 + 8) + arg2 * 8, 0, arg4 << 3);\n    }\n    else {\n        fcn.0042cc58(arg1, arg2 + arg4, 0xffffffffffffffff);\n    }\n    arg2 = arg2 << 3;\n    do {\n        *(arg2 + *(arg1 + 8)) = arg3;\n        arg2 = arg2 + 8;\n        arg4 = arg4 + -1;\n    } while (arg4 != 0);\n    return;\n}\n",
        "token_count": 505
    },
    "0042cf88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.0042cf88(ulong *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong in_stack_00000028;\n    \n    fcn.004070b8(arg1, 0, in_stack_00000028);\n    *(arg1 + 0x1d) = 0xffffffff;\n    *arg1 = 0x4506e8;\n    fcn.0042f6c0(arg1 + 0x1e, 0, 0x50);\n    *(arg1 + 0x1e) = 0x50;\n    *(arg1 + 0xf4) = arg4;\n    if (arg3 != 0) {\n        *(arg1 + 0xf4) = arg4 | 8;\n    }\n    arg1[0x26] = arg2;\n    arg1[0x21] = 0x42cf38;\n    return arg1;\n}\n",
        "token_count": 210
    },
    "004378f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00437911)\n// WARNING: Removing unreachable block (ram,0x00437919)\n// WARNING: Removing unreachable block (ram,0x0043791b)\n\nvoid fcn.004378f0(void)\n\n{\n    return;\n}\n",
        "token_count": 62
    },
    "0043d0a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0043d0a0(uint *arg1)\n\n{\n    uint *puVar1;\n    \n    if (arg1 == NULL) {\n        puVar1 = fcn.0042f5c0();\n        *puVar1 = 0x16;\n        fcn.004359b0(0, 0, 0, 0);\n        return 0x16;\n    }\n    *arg1 = *0x466a34;\n    return 0;\n}\n",
        "token_count": 107
    },
    "0043d0f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0043d0f0(uint *arg1)\n\n{\n    uint *puVar1;\n    \n    if (arg1 == NULL) {\n        puVar1 = fcn.0042f5c0();\n        *puVar1 = 0x16;\n        fcn.004359b0(0, 0, 0, 0);\n        return 0x16;\n    }\n    *arg1 = *0x466a38;\n    return 0;\n}\n",
        "token_count": 107
    },
    "0043d140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0043d140(uint *arg1)\n\n{\n    uint *puVar1;\n    \n    if (arg1 == NULL) {\n        puVar1 = fcn.0042f5c0();\n        *puVar1 = 0x16;\n        fcn.004359b0(0, 0, 0, 0);\n        return 0x16;\n    }\n    *arg1 = *0x466a30;\n    return 0;\n}\n",
        "token_count": 105
    },
    "00446e3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00446e3c(ulong lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)();\n    return 0;\n}\n",
        "token_count": 35
    },
    "0042dba0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0042dba0(ulong arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.0042da70(arg1);\n    return (iVar1 != 0) - 1;\n}\n",
        "token_count": 53
    },
    "00401cd0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00401cd0(ulong arg1)\n\n{\n    code *pcVar1;\n    \n    if (arg1 == -0x7ff8fff2) {\n        fcn.00412c60();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.00412420(arg1);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 99
    },
    "00403bf0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00403bf0(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    uchar *puVar2;\n    ulong var_8h;\n    ulong var_18h;\n    ulong var_bp_20h;\n    uchar auStack72 [32];\n    uchar auStack40 [8];\n    uint64_t uStack32;\n    \n    puVar2 = &stack0xffffffffffffffb8;\n    uStack32 = *0x465c38 ^ &stack0xffffffffffffffd8;\n    if (-arg1 - 1U < 0x4000) {\n        auStack40[0] = 0;\n    }\n    else {\n        uVar1 = arg1 + 0x400f;\n        if (uVar1 <= arg1 + 0x4000U) {\n            uVar1 = 0xffffffffffffff0;\n        }\n        uVar1 = uVar1 & 0xfffffffffffffff0;\n        fcn.00447500();\n        puVar2 = &stack0xffffffffffffffb8 + -uVar1;\n    }\n    uVar1 = uStack32 ^ &stack0xffffffffffffffd8;\n    *(puVar2 + -8) = 0x403c6c;\n    fcn.0042dcb0(uVar1);\n    return;\n}\n",
        "token_count": 284
    },
    "00418f70": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00418f70(ulong arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    ulong uStackX24;\n    int64_t iStackX32;\n    \n    iStackX32 = fcn.00403cc0(0x20);\n    uStackX24 = 0;\n    if (iStackX32 != 0) {\n        uStackX24 = fcn.00418e64(iStackX32, arg1, arg2);\n    }\n    fcn.00430080(&uStackX24, 0x461278);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 147
    },
    "00401420": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nulong fcn.00401420(void)\n\n{\n    int64_t in_GS_OFFSET;\n    \n    return *(in_GS_OFFSET + 0x60);\n}\n",
        "token_count": 35
    },
    "00408dec": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00408dec(ulong *arg1)\n\n{\n    ulong *puVar1;\n    \n    *arg1 = 0x44b440;\n    for (puVar1 = arg1[1]; puVar1 != NULL; puVar1 = *puVar1) {\n    }\n    arg1[3] = 0;\n    arg1[4] = 0;\n    arg1[2] = 0;\n    arg1[1] = 0;\n    fcn.00418c7c(arg1[5]);\n    arg1[5] = 0;\n    return;\n}\n",
        "token_count": 133
    },
    "0040ae04": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * fcn.0040ae04(int32_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    while( true ) {\n        if (*(arg1 + 4) == 0) {\n            return NULL;\n        }\n        if ((((*arg1 == arg2) && (arg1[1] == arg3)) && (arg1[2] <= arg4)) && (arg4 < arg1[3] || arg4 == arg1[3])) break;\n        arg1 = arg1 + 8;\n    }\n    return arg1;\n}\n",
        "token_count": 129
    },
    "004181e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong * fcn.004181e0(int64_t arg1, uint64_t arg2, uint *arg3, uint *arg4)\n\n{\n    uint64_t uVar1;\n    ulong *puVar2;\n    \n    *arg4 = arg2 >> 4;\n    uVar1 = (arg2 >> 4 & 0xffffffff) % *(arg1 + 0x10);\n    *arg3 = uVar1;\n    if (*(arg1 + 8) != 0) {\n        for (puVar2 = *(*(arg1 + 8) + uVar1 * 8); puVar2 != NULL; puVar2 = *puVar2) {\n            if (puVar2[1] == arg2) {\n                return puVar2;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 179
    },
    "00426ec0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00426ec0(int64_t arg1, int64_t arg2, ulong *arg3)\n\n{\n    if (arg3 == NULL) {\n        arg3 = *(arg1 + 8);\n    }\n    else {\n        arg3 = *arg3;\n    }\n    for (; (arg3 != NULL && (arg3[2] != arg2)); arg3 = *arg3) {\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "00427540": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042f6e0)\n// WARNING: Removing unreachable block (ram,0x0042f6e8)\n// WARNING: Removing unreachable block (ram,0x0042f6ee)\n// WARNING: Removing unreachable block (ram,0x0042f737)\n// WARNING: Removing unreachable block (ram,0x0042f770)\n// WARNING: Removing unreachable block (ram,0x0042f7a0)\n// WARNING: Removing unreachable block (ram,0x0042f740)\n// WARNING: Removing unreachable block (ram,0x0042f768)\n// WARNING: Removing unreachable block (ram,0x0042f721)\n\nvoid fcn.00427540(ulong *arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = 3;\n    do {\n        *arg1 = 0;\n        arg1 = arg1 + 1;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 226
    },
    "00429368": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00429368(ulong *arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    \n    *arg1 = 0x44f900;\n    if (arg1[1] != 0) {\n        iVar1 = 0;\n        if (0 < arg1[2]) {\n            iVar2 = 0;\n            do {\n                if (*(iVar2 + 0x10 + arg1[1]) != 0) {\n                    fcn.00403cfc(*(iVar2 + arg1[1]));\n                }\n                iVar1 = iVar1 + 1;\n                iVar2 = iVar2 + 0x18;\n            } while (iVar1 < arg1[2]);\n        }\n        fcn.00403cfc(arg1[1]);\n    }\n    return;\n}\n",
        "token_count": 178
    },
    "0042f300": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042f285)\n// WARNING: Removing unreachable block (ram,0x0042f212)\n// WARNING: Removing unreachable block (ram,0x0042f240)\n// WARNING: Removing unreachable block (ram,0x0042f24e)\n// WARNING: Removing unreachable block (ram,0x0042f256)\n// WARNING: Removing unreachable block (ram,0x0042f258)\n// WARNING: Removing unreachable block (ram,0x0042f25a)\n// WARNING: Removing unreachable block (ram,0x0042f2ae)\n\nvoid fcn.0042f300(ulong arg1)\n\n{\n    code *pcVar1;\n    \n    fcn.00437ce0(8);\n    if (*0x46b104 != 1) {\n        *0x46b100 = 1;\n        *0x46b0bc = 0;\n        fcn.0042eff0(0x448c28, 0x448c38);\n    }\n    *0x46b104 = 1;\n    fcn.00437bb0(8);\n    fcn.0042ef90(arg1);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 278
    },
    "00437da0": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nulong fcn.00437da0(void)\n\n{\n    int64_t iVar1;\n    code *UNRECOVERED_JUMPTABLE;\n    ulong uVar2;\n    \n    uVar2 = *0x46bd30;\n    if ((*0x465de8 == -1) || (iVar1 = (*_sym.imp.KERNEL32.dll_FlsGetValue)(),  iVar1 == 0)) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"KERNEL32.DLL\");\n        if (iVar1 == 0) {\n            return uVar2;\n        }\n        UNRECOVERED_JUMPTABLE = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"DecodePointer\");\n    }\n    else {\n        UNRECOVERED_JUMPTABLE = *(iVar1 + 0x2b0);\n    }\n    if (UNRECOVERED_JUMPTABLE == NULL) {\n        return uVar2;\n    }\n    // WARNING: Could not recover jumptable at 0x004321f7. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar2 = (*UNRECOVERED_JUMPTABLE)(uVar2);\n    return uVar2;\n}\n",
        "token_count": 267
    }
}