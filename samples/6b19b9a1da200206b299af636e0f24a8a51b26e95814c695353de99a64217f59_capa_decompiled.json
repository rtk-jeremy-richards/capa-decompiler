{
    "null": {
        "rules": [
            "parse credit card information/4eef9ae1278b42f592aee8ead6d8bf37"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "0047fa60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.0047fa60(void)\n\n{\n    uint var_12eh;\n    uint var_4h;\n    \n    return *(*0x4966a4 + -4);\n}\n",
        "token_count": 41
    },
    "0047fd90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0047fd90(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    uint var_19h;\n    \n    return CONCAT44(param_2, in_EAX);\n}\n",
        "token_count": 49
    },
    "0047e2a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.0047e2a0(void)\n\n{\n    int32_t in_EAX;\n    uint unaff_retaddr;\n    \n    *(&stack0x00000000 + -in_EAX) = unaff_retaddr;\n    return;\n}\n",
        "token_count": 67
    },
    "0047e240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047e240(uint arg_8h, uint arg_ch)\n\n{\n    uint var_38h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    return;\n}\n",
        "token_count": 53
    },
    "0047e2b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x0047e442) overlaps instruction at (ram,0x0047e441)\n// \n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Type propagation algorithm not settling\n\nchar * __fastcall fcn.0047e2b0(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint16_t uVar3;\n    char cVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    uint16_t uVar8;\n    int16_t iVar9;\n    uint8_t *puVar10;\n    uint32_t uVar11;\n    int32_t *piVar12;\n    uint8_t *puVar13;\n    uint16_t *puVar14;\n    char cVar16;\n    char *extraout_ECX;\n    char *pcVar15;\n    ushort uVar17;\n    char **ppcVar18;\n    int32_t iVar19;\n    uint8_t uVar20;\n    uint8_t uVar21;\n    uint32_t unaff_EBX;\n    char *pcVar22;\n    int32_t *piVar23;\n    uint *puVar24;\n    uint *puVar25;\n    uint32_t uVar26;\n    uchar *puVar27;\n    uchar *puVar28;\n    uint32_t uVar29;\n    uchar *puVar30;\n    char **ppcVar31;\n    uint uVar32;\n    uint32_t *unaff_ESI;\n    uint *unaff_EDI;\n    int32_t iVar33;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    char in_AF;\n    char in_ZF;\n    ulong uVar34;\n    uint uStack8;\n    \n    puVar25 = &stack0xfffffffc;\n    if (param_1 != 1 && in_ZF != '\\0') {\n        pcVar15 = in(0x5d);\n        return pcVar15;\n    }\n    uVar34 = func_0x296e05dc();\n    piVar12 = uVar34 >> 0x20;\n    pcVar15 = uVar34;\n    cVar16 = uVar34;\n    *pcVar15 = *pcVar15 + cVar16;\n    *pcVar15 = *pcVar15 + cVar16;\n    *0x4a464340 = *0x4a464340 + (unaff_EBX >> 8);\n    *pcVar15 = *pcVar15 + cVar16;\n    *pcVar15 = *pcVar15 + cVar16;\n    uVar26 = &stack0xfffffffc & 0xffff0000 | *0x10 - 8U;\n    puVar24 = segment(in_SS, *0x10 - 8U);\n    *puVar24 = 0;\n    *pcVar15 = *pcVar15 + cVar16;\n    cVar4 = *pcVar15;\n    *pcVar15 = *pcVar15 + cVar16;\n    if (*pcVar15 != '\\0' && SCARRY1(cVar4, cVar16) == *pcVar15 < '\\0') {\n        uVar6 = uVar34 >> 8;\n        uVar20 = unaff_EBX << 1 | CARRY1(uVar6, extraout_ECX);\n        pcVar22 = unaff_EBX & 0xffffff00 | uVar20;\n        cVar4 = -(unaff_EBX < '\\0');\n        pcVar15 = CONCAT31(CONCAT21(uVar34 >> 0x10, uVar6 + extraout_ECX), cVar4);\n        *pcVar15 = *pcVar15 + cVar4;\n        *pcVar15 = *pcVar15 + cVar4;\n        out(0xea, cVar4);\n        puVar10 = in(uVar34 >> 0x20);\n        LOCK();\n        uVar5 = puVar10;\n        *puVar10 = *puVar10 + uVar5;\n        *puVar10 = *puVar10 + uVar5;\n        *(unaff_EDI + puVar10) = *(unaff_EDI + puVar10) + puVar10;\n        uVar5 = uVar5 | *puVar10;\n        puVar10 = puVar10 & 0xffffff00 | uVar5;\n        *puVar10 = *puVar10 + uVar5;\n        *pcVar22 = *pcVar22 + uVar20;\n        *(uVar26 - 4) = in_DS;\n        _pe_dos_header = _pe_dos_header & uVar26 - 4;\n        uVar20 = *puVar10;\n        uVar6 = *puVar10;\n        *puVar10 = *puVar10 + uVar5;\n        pcVar15 = extraout_ECX;\n        puVar28 = uVar26 - 4;\n        puVar30 = &stack0xfffffffc;\n        if (!SCARRY1(uVar6, uVar5)) {\n            if (CARRY1(uVar20, uVar5) || *puVar10 == 0) {\n                *puVar10 = *puVar10 | uVar5;\n                *puVar10 = *puVar10 + uVar5;\n                puVar28 = uVar26 - 4;\n                puVar30 = &stack0xfffffffc;\n            }\n            else {\n                if (SCARRY1(uVar6, uVar5) == *puVar10 < '\\0') {\n                    puVar24 = uVar26 - 8;\n                    *(uVar26 - 8) = &stack0xfffffffc;\n                    cVar4 = '\\x1b';\n                    do {\n                        puVar25 = puVar25 + -1;\n                        puVar24 = puVar24 + -1;\n                        *puVar24 = *puVar25;\n                        cVar4 = cVar4 + -1;\n                    } while ('\\0' < cVar4);\n                    *(uVar26 - 0x78) = uVar26 - 8;\n                    if (piVar12 < *(uVar26 - 0x14)) {\n                        return *(uVar26 - 0xc);\n                    }\n                    return *(uVar26 - 0x14);\n                }\n                *puVar10 = *puVar10 + uVar5;\n                *puVar10 = *puVar10 + uVar5;\n                *puVar10 = *puVar10 + uVar5;\n                *(uVar26 - 6) = in_CS;\n                puVar27 = uVar26 - 10;\n                *(uVar26 - 10) = 0x47e315;\n                uVar34 = func_0xa7a4a19d();\n                pcVar15 = uVar34;\n                cVar16 = uVar34;\n                *pcVar15 = *pcVar15 + cVar16;\n                cVar4 = *pcVar15;\n                *pcVar15 = *pcVar15 + cVar16;\n                pcVar1 = swi(4);\n                if (SCARRY1(cVar4, cVar16) == true) {\n                    uVar34 = (*pcVar1)();\n                }\n                pcVar15 = uVar34;\n                cVar4 = uVar34;\n                *pcVar15 = *pcVar15 + cVar4;\n                *pcVar15 = *pcVar15 + cVar4;\n                *pcVar15 = *pcVar15 + cVar4;\n                uVar11 = in(0xe8);\n                uVar17 = uVar34 >> 0x20;\n                uVar6 = in(uVar17);\n                pcVar15 = uVar11 & 0xffffff00 | uVar6;\n                out(uVar17, pcVar15);\n                *pcVar15 = *pcVar15 + uVar6;\n                *pcVar15 = *pcVar15 + uVar6;\n                pcVar15 = pcVar15 | 0x10;\n                _pe_dos_header = (_pe_dos_header - pcVar22) - CARRY4(uVar34 >> 0x20, *0xcbc8c5c1);\n                *pcVar15 = *pcVar15 + pcVar15;\n                pcVar15 = (uVar11 & 0xffffff00 | uVar6 | 0x10) ^ 0x37;\n                *pcVar15 = *pcVar15 + pcVar15;\n                *pcVar15 = *pcVar15 + pcVar15;\n                unaff_EDI = *(puVar27 + 8);\n                unaff_ESI = *(puVar27 + 0xc);\n                puVar30 = *(puVar27 + 0x10);\n                pcVar22 = *(puVar27 + 0x18);\n                puVar10 = *(puVar27 + 0x1c);\n                piVar12 = *(puVar27 + 0x24);\n                *(puVar27 + 0x24) = 0x6b;\n                *piVar12 = *piVar12 + piVar12;\n                puVar10[-0x7073777b] = puVar10[-0x7073777b] + piVar12;\n                uVar20 = puVar10;\n                *puVar10 = *puVar10 + uVar20;\n                *puVar10 = *puVar10 + uVar20;\n                *puVar10 = *puVar10 + uVar20;\n                uVar6 = *puVar10;\n                *puVar10 = *puVar10 + uVar20;\n                uVar11 = CONCAT11((puVar10 >> 8) << 1 | CARRY1(uVar6, uVar20), uVar20);\n                puVar10 = puVar10 & 0xffff0000 | uVar11 & 0xffffff00 | pcVar22[uVar11 & 0xff];\n                pcVar15 = 0xffffffff;\n                *puVar10 = *puVar10 + pcVar22[uVar11 & 0xff];\n                puVar28 = puVar27 + 0x24;\n            }\n        }\n        *puVar10 = *puVar10 + puVar10;\n        cVar4 = piVar12 >> 8;\n        uVar21 = pcVar22;\n        uVar11 = CONCAT11((pcVar22 >> 8) + cVar4, uVar21);\n        piVar23 = pcVar22 & 0xffff0000 | uVar11;\n        *pcVar15 = *pcVar15 + '\\x01';\n        puVar10 = puVar10 + 8;\n        uVar7 = puVar10;\n        *puVar10 = *puVar10 + uVar7;\n        *unaff_EDI = *unaff_EDI + uVar21;\n        uVar2 = CONCAT11(puVar10 >> 8 & *0x2f2c28, uVar7);\n        puVar13 = puVar10 & 0xffff0000 | uVar2;\n        *puVar13 = *puVar13 + uVar7;\n        *puVar13 = *puVar13 + uVar7;\n        *(unaff_ESI + 0x49) = *(unaff_ESI + 0x49) + uVar7;\n        *(puVar28 + -5) = puVar13;\n        *(puVar28 + -9) = piVar23;\n        *(puVar28 + -0xd) = unaff_ESI;\n        *puVar13 = *puVar13 + uVar7;\n        *puVar13 = *puVar13 + uVar7;\n        uVar6 = *puVar13;\n        uVar20 = *puVar13;\n        *puVar13 = *puVar13 + uVar7;\n        uVar5 = *puVar13;\n        uVar32 = in(piVar12);\n        *unaff_EDI = uVar32;\n        if (SCARRY1(uVar20, uVar7)) {\n            pcVar15 = pcVar15 & 0xffff0000 | CONCAT11((pcVar15 >> 8) + cVar4, pcVar15);\n            *piVar12 = *piVar12 + 1;\n            uVar6 = *puVar13;\n            *puVar13 = *puVar13 + uVar7;\n            puVar13 = puVar10 & 0xffff0000 | uVar2 & 0xffffff00 | (uVar7 - 0x1f) - CARRY1(uVar6, uVar7);\n        }\n        else if (CARRY1(uVar6, uVar7) || uVar5 == 0) {\n            *puVar13 = *puVar13 + uVar7;\n            *puVar13 = *puVar13 + uVar7;\n            puVar13[piVar23 * 4 + -0x5a5e6165] = puVar13[piVar23 * 4 + -0x5a5e6165] + piVar12;\n            *puVar13 = *puVar13 + uVar7;\n            *puVar13 = *puVar13 + uVar7;\n            *puVar13 = *puVar13 + uVar7;\n            pcVar1 = swi(3);\n            pcVar15 = (*pcVar1)();\n            return pcVar15;\n        }\n        uVar5 = puVar13;\n        *puVar13 = *puVar13 + uVar5;\n        *puVar13 = *puVar13 + uVar5;\n        *(unaff_EDI + 1 + piVar23) = *(unaff_EDI + 1 + piVar23) + uVar21;\n        uVar29 = puVar28 + -0xd & *unaff_ESI;\n        *(puVar13 * 2) = *(puVar13 * 2) - puVar30;\n        *puVar13 = *puVar13 + uVar5;\n        *puVar13 = *puVar13 + uVar5;\n        *(piVar23 + 0x47) = *(piVar23 + 0x47) + uVar5;\n        ppcVar18 = piVar12 + -1;\n        uVar8 = puVar30 - 1;\n        *(uVar29 - 4) = puVar13;\n        *(uVar29 - 8) = uVar29 - 4;\n        *puVar13 = *puVar13 + uVar5;\n        *puVar13 = *puVar13 + uVar5;\n        uVar20 = *puVar13;\n        *puVar13 = *puVar13 + uVar5;\n        uVar6 = *puVar13;\n        *(uVar29 - 0xc) = 0x6e;\n        iVar9 = puVar13;\n        if (SCARRY1(uVar20, uVar5)) {\n            if (-1 < uVar6) {\n                *puVar13 = *puVar13 + uVar5;\n                *puVar13 = *puVar13 + uVar5;\n                uVar6 = *puVar13;\n                *puVar13 = *puVar13 + uVar5;\n                uVar3 = uVar8 & 0xff;\n                pcVar15 = CONCAT22(uVar8 >> 0xf, \n                                   uVar3 | ((*puVar13 < '\\0') << 7 | (*puVar13 == 0) << 6 | in_AF << 4 |\n                                            ((POPCOUNT(*puVar13) & 1U) == 0) << 2 | 2U | CARRY1(uVar6, uVar5)) << 8);\n                while( true ) {\n                    uVar6 = uVar3;\n                    _pe_dos_header = _pe_dos_header & 0xffffff00 | uVar6;\n                    *pcVar15 = *pcVar15 + uVar6;\n                    ppcVar31 = *ppcVar18;\n                    *pcVar15 = *pcVar15 + uVar6;\n                    *pcVar15 = *pcVar15 + uVar6;\n                    *pcVar15 = *pcVar15 + uVar6;\n                    if (*pcVar15 == '\\0') break;\n                    *pcVar15 = *pcVar15 + uVar6;\n                    puVar13[-0x6064676b] = puVar13[-0x6064676b] + uVar5;\n                    ppcVar18 = ppcVar31;\n                }\n                out(0xea, pcVar15);\n                pcVar22 = in(iVar9);\n                LOCK();\n                cVar4 = pcVar22;\n                *pcVar22 = *pcVar22 + cVar4;\n                *pcVar22 = *pcVar22 + cVar4;\n                *pcVar22 = *pcVar22 + cVar4;\n                *(pcVar22 + piVar23) = *(pcVar22 + piVar23) + puVar13;\n                *pcVar22 = *pcVar22 + cVar4;\n                *pcVar22 = *pcVar22 + cVar4;\n                *pcVar22 = *pcVar22 + cVar4;\n                *pcVar22 = *pcVar22 + cVar4;\n                *pcVar22 = *pcVar22 + cVar4;\n                puVar10 = unaff_ESI + 0x59;\n                uVar6 = *puVar10;\n                *puVar10 = *puVar10 + uVar5;\n                iVar33 = *(ppcVar18[2] + 4);\n                *unaff_ESI = *unaff_ESI + CARRY1(uVar6, uVar5) * ((ppcVar18[2] + 8U & 3) - (*unaff_ESI & 3));\n                *pcVar22 = *pcVar22 + cVar4;\n                *pcVar22 = *pcVar22 + cVar4;\n                ppcVar31 = ppcVar31 + -0x20;\n                *ppcVar31 = *ppcVar31 + (uVar11 >> 8);\n                puVar25 = iVar33 + 0x8d8a;\n                *puVar25 = *puVar25;\n                *pcVar22 = *pcVar22 + cVar4;\n                pcVar15 = iVar33 + -0x4b4e5155;\n                *pcVar15 = *pcVar15 + (pcVar22 >> 8);\n                *pcVar22 = *pcVar22 + cVar4;\n                *pcVar22 = *pcVar22 + cVar4;\n                *pcVar22 = *pcVar22 + cVar4;\n                return pcVar22;\n            }\n            *puVar13 = *puVar13 + uVar5;\n            uVar6 = *ppcVar18;\n            *ppcVar18 = *ppcVar18 + uVar21;\n            puVar13 = puVar13 + (-0x2a272320 - CARRY1(uVar6, uVar21));\n        }\n        else {\n            uVar8 = iVar9 / pcVar15 & 0xff;\n            puVar13 = puVar13 & 0xffff0000 | uVar8 | iVar9 % pcVar15 << 8;\n            *piVar23 = *piVar23 + 1;\n            uVar20 = uVar8;\n            *puVar13 = *puVar13 + uVar20;\n            *puVar13 = *puVar13 + uVar20;\n            uVar6 = *puVar13;\n            *puVar13 = *puVar13 + uVar20;\n            piVar23 = pcVar22 & 0xffff0000 | uVar11 & 0xffffff00 | (uVar21 - *0x2a272320) - CARRY1(uVar6, uVar20);\n        }\n        cVar4 = puVar13;\n        *puVar13 = *puVar13 + cVar4;\n        *puVar13 = *puVar13 + cVar4;\n        *puVar13 = *puVar13 + cVar4;\n        pcVar15 = pcVar15 + 1;\n        iVar33 = piVar23 + -1;\n        *(uVar29 - 0xf) = pcVar15;\n        *puVar13 = *puVar13 + cVar4;\n        *puVar13 = *puVar13 + cVar4;\n        *puVar13 = *puVar13 + cVar4;\n        *(uVar29 - 0x13) = 0x75726e6b;\n        *puVar13 = *puVar13 + cVar4;\n        *puVar13 = *puVar13 + cVar4;\n        do {\n            puVar10 = unaff_EDI + -0x63666969;\n            uVar6 = *puVar10;\n            uVar20 = pcVar15;\n            *puVar10 = *puVar10 + uVar20;\n            cVar4 = puVar13;\n            puVar13 = puVar13 & 0xffff0000 |\n                      CONCAT11((*puVar10 < '\\0') << 7 | (*puVar10 == 0) << 6 | in_AF << 4 |\n                               ((POPCOUNT(*puVar10) & 1U) == 0) << 2 | 2U | CARRY1(uVar6, uVar20), cVar4);\n            *puVar13 = *puVar13 + cVar4;\n            *puVar13 = *puVar13 + cVar4;\n            *puVar13 = *puVar13 + cVar4;\n            uVar6 = ppcVar18;\n            ppcVar18 = CONCAT11(0xba, uVar6);\n            *puVar13 = *puVar13 + cVar4;\n            *puVar13 = *puVar13 + cVar4;\n            cVar16 = (pcVar15 >> 8) + iVar33;\n            pcVar15 = (pcVar15 & 0xffff0000 | CONCAT11(cVar16, uVar20)) - 1;\n        } while (pcVar15 != NULL && cVar16 == '\\0');\n        out(0xeb, puVar13);\n        out(CONCAT11(0xba, uVar6), cVar4);\n        *puVar13 = *puVar13 + cVar4;\n        *puVar13 = *puVar13 + cVar4;\n        *puVar13 = *puVar13 + cVar4;\n        puVar13 = puVar13 + (0xedf1f4f7 < puVar13) + 0x120e0b08;\n        *puVar13 = *puVar13 + puVar13;\n        uVar5 = puVar13 - 0x2f;\n        puVar14 = puVar13 & 0xffffff00 | uVar5;\n        *puVar14 = *puVar14 + uVar5;\n        *puVar14 = *puVar14 + uVar5;\n        puVar10 = piVar23 + 0x55;\n        uVar20 = *puVar10;\n        *puVar10 = *puVar10 + uVar6;\n        iVar19 = *(uVar29 - 0x13);\n        uVar32 = *(uVar29 - 0xf);\n        *(uVar29 - 0xf) = puVar14;\n        *(uVar29 - 0x13) = pcVar15;\n        *(uVar29 - 0x17) = iVar19;\n        *(uVar29 - 0x1b) = iVar33;\n        *(uVar29 - 0x1f) = uVar29 - 0xb;\n        *(uVar29 - 0x23) = uVar32;\n        *(uVar29 - 0x27) = unaff_ESI + -1;\n        *(uVar29 - 0x2b) = unaff_EDI + 5;\n        *puVar14 = *puVar14 + CARRY1(uVar20, uVar6) * ((puVar14 & 3) - (*puVar14 & 3));\n        *puVar14 = *puVar14 + uVar5;\n        *puVar14 = *puVar14 + uVar5;\n        pcVar15 = iVar19 + 0x7d;\n        *pcVar15 = *pcVar15 + (iVar33 >> 8);\n        unaff_EDI[puVar14 + 0x12] = unaff_EDI[puVar14 + 0x12] + -0x5f000000;\n        *(unaff_EDI + 5) = *(unaff_ESI + -1);\n        *puVar14 = *puVar14 + uVar5;\n        *puVar14 = *puVar14 + uVar5;\n        pcVar1 = swi(3);\n        pcVar15 = (*pcVar1)();\n        return pcVar15;\n    }\n    *(uVar26 - 4) = &stack0xfffffffd;\n    *(uVar26 - 8) = uVar26 - 4;\n    pcVar15[0x69] = pcVar15[0x69] + (extraout_ECX >> 8);\n    if (extraout_ECX == 0x1) {\n        *(uVar26 - 0xc121) = 0x47e27f;\n        return pcVar15;\n    }\n    pcVar1 = swi(3);\n    pcVar15 = (*pcVar1)();\n    return pcVar15;\n}\n",
        "token_count": 5576
    },
    "0047fe80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047fe80(uint arg_8h)\n\n{\n    uint var_44h;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *0x496664 = fcn.0047fa60(0x1a8);\n    return;\n}\n",
        "token_count": 84
    }
}