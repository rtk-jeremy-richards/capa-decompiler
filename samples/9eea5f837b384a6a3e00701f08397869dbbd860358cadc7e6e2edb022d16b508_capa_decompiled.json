{
    "0040640f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040640f(uint *param_1)\n\n{\n    *param_1 = 0x4013dc;\n    if (param_1[2] != 0) {\n        fcn.00406e0b(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 66
    },
    "0040510a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040510a(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint var_ch;\n    \n    if (arg_8h == 0) {\n        arg_8h = 0;\n    }\n    else if (0xffffffff / arg_8h == 0) {\n        fcn.00403bc2(0);\n        fcn.0040694d(&var_ch, 0x417d10);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.004068e8(arg_8h);\n    return;\n}\n",
        "token_count": 140
    },
    "00405202": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00405202(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00405006();\n    if (uVar1 < 2) {\n        return 1;\n    }\n    return uVar1 - 1;\n}\n",
        "token_count": 62
    },
    "004052c1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.004052c1(int32_t param_1, char param_2, int32_t param_3)\n\n{\n    uint arg_10h;\n    uint in_stack_fffffff0;\n    \n    if ((param_2 != '\\0') && (0xf < *(param_1 + 0x18))) {\n        arg_10h = *(param_1 + 4);\n        if (param_3 != 0) {\n            in_stack_fffffff0 = arg_10h;\n            fcn.00405261(param_1 + 4, 0x10, arg_10h, param_3);\n        }\n        fcn.00404f86(arg_10h, *(param_1 + 0x18) + 1);\n    }\n    *(param_1 + 0x18) = 0xf;\n    fcn.004051c5(in_stack_fffffff0);\n    return;\n}\n",
        "token_count": 204
    },
    "004053cb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl\nfcn.004053cb(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint arg_8h_00;\n    uint arg_10h;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint uVar4;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00406d80();\n    *(unaff_EBP + -0x10) = &var_18h;\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    uVar3 = *(unaff_EBP + 8) | 0xf;\n    uVar2 = fcn.00405202();\n    *(unaff_EBP + -0x1c) = uVar2;\n    if (uVar2 < uVar3) {\n        uVar3 = *(unaff_EBP + 8);\n    }\n    else {\n        uVar2 = *(extraout_ECX + 0x18);\n        *(unaff_EBP + -0x14) = uVar2;\n        *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) >> 1;\n        uVar1 = *(unaff_EBP + -0x14);\n        if ((uVar3 / 3 < uVar1) && (uVar2 <= *(unaff_EBP + -0x1c) - uVar1)) {\n            uVar3 = uVar1 + uVar2;\n        }\n    }\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = fcn.00405253(uVar3 + 1);\n    if (*(unaff_EBP + 0xc) != 0) {\n        uVar4 = *(unaff_EBP + 0xc);\n        arg_10h = fcn.00404f73();\n        fcn.00405261(arg_8h_00, uVar3 + 1, arg_10h, uVar4);\n    }\n    fcn.004052c1(1, 0);\n    uVar4 = *(unaff_EBP + 0xc);\n    *(extraout_ECX + 4) = arg_8h_00;\n    *(extraout_ECX + 0x18) = uVar3;\n    fcn.004051c5(uVar4);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 695
    },
    "0040553e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __thiscall fcn.0040553e(int32_t param_1, uint32_t param_2, uint param_3, uint param_4)\n\n{\n    uint32_t uVar1;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    char cVar2;\n    \n    uVar1 = fcn.00405202();\n    if (uVar1 < param_2) {\n        fcn.004062a4();\n    }\n    if (*(param_1 + 0x18) < param_2) {\n        fcn.004053cb(param_2, *(param_1 + 0x14), unaff_EDI, unaff_ESI, unaff_retaddr, param_2, param_3, param_4);\n    }\n    else if ((cVar2 == '\\0') || (0xf < param_2)) {\n        if (param_2 == 0) {\n            fcn.004051c5(0);\n        }\n    }\n    else {\n        uVar1 = *(param_1 + 0x14);\n        if (param_2 < *(param_1 + 0x14)) {\n            uVar1 = param_2;\n        }\n        fcn.004052c1(1, uVar1);\n    }\n    return param_2 != 0;\n}\n",
        "token_count": 297
    },
    "00405b62": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_2\n\nvoid __cdecl fcn.00405b62(uint noname_0, uint noname_1, uint noname_2, uint arg_14h, uint noname_4, uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_8h;\n    uint var_ch;\n    uint var_4h;\n    uint var_14h;\n    uint var_ch_2;\n    \n    fcn.00406d80();\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = &stack0xffffffec;\n    *(unaff_EBP + -0x14) = *(unaff_EBP + 8);\n    while (*(unaff_EBP + 0xc) != 0) {\n        fcn.00405a57(*(unaff_EBP + 8), *(unaff_EBP + 0x10));\n        *(unaff_EBP + 0xc) = *(unaff_EBP + 0xc) + -1;\n        *(unaff_EBP + 8) = *(unaff_EBP + 8) + 0x1c;\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 305
    },
    "00406a8f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00406a8f(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x406b3a;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.00406b66;\n        uStack36 = *0x44d450 ^ &fcn.00406a8f::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00406a8f::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.004093e2();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.00406a8f::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 728
    },
    "null": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004071db": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004071db(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x44d450) {\n        return;\n    }\n    *0x579058 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x57905c = &arg_8h;\n    *0x578f98 = 0x10001;\n    *0x578f40 = 0xc0000409;\n    *0x578f44 = 1;\n    var_328h = *0x44d450;\n    var_324h = *0x44d454;\n    *0x578f4c = unaff_retaddr;\n    *0x579024 = in_GS;\n    *0x579028 = in_FS;\n    *0x57902c = in_ES;\n    *0x579030 = in_DS;\n    *0x579034 = unaff_EDI;\n    *0x579038 = unaff_ESI;\n    *0x57903c = unaff_EBX;\n    *0x579040 = in_EDX;\n    *0x579044 = in_ECX;\n    *0x579048 = in_EAX;\n    *0x57904c = unaff_EBP;\n    *0x579050 = unaff_retaddr;\n    *0x579054 = in_CS;\n    *0x579060 = in_SS;\n    *0x578f90 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.00409113(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x40252c);\n    if (*0x578f90 == 0) {\n        fcn.00409113(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 812
    },
    "00409925": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00409925(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040b8ac(0x4181f8, 0x10);\n    iVar1 = *(unaff_EBP + 0x10);\n    iVar2 = *(unaff_EBP + 8);\n    if (*(iVar1 + 4) < 0x81) {\n        iVar5 = *(iVar2 + 8);\n    }\n    else {\n        iVar5 = *(iVar2 + 8);\n    }\n    *(unaff_EBP + -0x1c) = iVar5;\n    iVar3 = fcn.004093e2();\n    *(iVar3 + 0x90) = *(iVar3 + 0x90) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (iVar5 != *(unaff_EBP + 0x14)) {\n        if ((iVar5 < 0) || (*(iVar1 + 4) <= iVar5)) {\n            fcn.0040a532();\n        }\n        iVar3 = iVar5 * 8;\n        piVar4 = *(iVar1 + 8) + iVar3;\n        iVar5 = *piVar4;\n        *(unaff_EBP + -0x20) = iVar5;\n        *(unaff_EBP + -4) = 1;\n        if (piVar4[1] != 0) {\n            *(iVar2 + 8) = iVar5;\n            fcn.0040a580(*(*(iVar1 + 8) + 4 + iVar3), iVar2, 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        *(unaff_EBP + -0x1c) = iVar5;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.004099eb();\n    if (iVar5 != *(unaff_EBP + 0x14)) {\n        fcn.0040a532();\n    }\n    *(iVar2 + 8) = iVar5;\n    fcn.0040b8f1();\n    return;\n}\n",
        "token_count": 569
    },
    "004099eb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004099eb(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004093e2();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.004093e2();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "00409cb3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409cb3(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.00406ccd(*(unaff_EBP + -0x28));\n    iVar1 = fcn.004093e2();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.004093e2();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.00406ca6(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.00409a4b(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 382
    },
    "0040cb23": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0040cc16: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0040cc1b)\n// WARNING: Removing unreachable block (ram,0x0040cc49)\n// WARNING: Removing unreachable block (ram,0x0040cc21)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040cb23(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040b8ac(0x4183b8, 0x18);\n    fcn.0040adb2(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x578a10 != 1) {\n        *0x578a0c = 1;\n        *0x578a08 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.00409196(*0x579508);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.00409196(*0x579504);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.0040918d();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.00409196(*piVar2);\n                        iVar3 = fcn.0040918d();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.00409196(*0x579508);\n                        piVar1 = fcn.00409196(*0x579504);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.0040ca5d(0x401224);\n        }\n        fcn.0040ca5d(0x40122c);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0040acd8(8);\n    }\n    return;\n}\n",
        "token_count": 794
    },
    "0040e785": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040e785(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x44d450 ^ &stack0xfffffffc;\n    fcn.00407cb5(arg_10h);\n    var_14h = fcn.004126b8(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00411c30(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040e7de:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040e81e;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040e810:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040e81e;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040e810;\n        goto code_r0x0040e7de;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040e81e:\n    fcn.004071db(unaff_EBX);\n    return;\n}\n",
        "token_count": 507
    },
    "0040e82d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040e82d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x44d450 ^ &stack0xfffffffc;\n    fcn.00407cb5(arg_10h);\n    var_14h = fcn.004126b8(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00412174(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040e886:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040e8c6;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040e8b8:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040e8c6;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040e8b8;\n        goto code_r0x0040e886;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040e8c6:\n    fcn.004071db(unaff_EBX);\n    return;\n}\n",
        "token_count": 512
    },
    "00410f63": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00410f63(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.0040acd8(0);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00410fbd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00410fbd(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.0040918d();\n    var_4h = 0;\n    if (*0x579318 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x402e58);\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x402e4c);\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x579318 = fcn.0040911b(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, 0x402e3c);\n        *0x57931c = fcn.0040911b(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x402e28);\n        *0x579320 = fcn.0040911b(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x402e0c);\n        *0x579328 = fcn.0040911b(uVar3);\n        if (*0x579328 != 0) {\n            uVar3 = (*pcVar4)(iVar2, 0x402df4);\n            *0x579324 = fcn.0040911b(uVar3);\n        }\n    }\n    if ((*0x579324 != iVar1) && (*0x579328 != iVar1)) {\n        pcVar4 = fcn.00409196(*0x579324);\n        pcVar5 = fcn.00409196(*0x579328);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x004110ff;\n        }\n    }\n    if ((((*0x57931c != iVar1) && (pcVar4 = fcn.00409196(*0x57931c),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x579320 != iVar1 && (pcVar4 = fcn.00409196(*0x579320),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x004110ff:\n    pcVar4 = fcn.00409196(*0x579318);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 812
    },
    "00411c30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00411c30(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00412131;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x00411d65;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x00411d6c;\ncode_r0x00411d65:\n                        do {\n                            var_4h = 1;\ncode_r0x00411d6c:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x00411d7a;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x00411d7a:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x44e204 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x44e204 < iVar12) {\n                if (iVar12 < *0x44e200) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x44e200;\n                    uVar5 = 1;\n                }\n                goto code_r0x00412131;\n            }\n            var_10h = *0x44e204 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x00411f1d;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x00411f1d:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00412131:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3667
    },
    "00412174": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412174(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00412675;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x44e220 - 1;\n        iVar4 = *0x44e220 + (*0x44e220 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x44e220 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x004122a9;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x004122b0;\ncode_r0x004122a9:\n                        do {\n                            var_4h = 1;\ncode_r0x004122b0:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x004122be;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x004122be:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x44e21c - *0x44e220) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x44e21c < iVar12) {\n                if (iVar12 < *0x44e218) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x44e22c;\n                    iVar4 = *0x44e224 + (*0x44e224 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x44e224 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x44e224 + (*0x44e224 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x44e224 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x44e22c + *0x44e218;\n                    uVar5 = 1;\n                }\n                goto code_r0x00412675;\n            }\n            var_10h = *0x44e21c - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x44e220 - 1;\n            iVar12 = *0x44e220 + (*0x44e220 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x44e220 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x00412461;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x00412461:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x44e224 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00412675:\n    var_20h = iVar12 << (0x1fU - *0x44e224 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x44e228 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x44e228 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3635
    },
    "004126b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041297a)\n// WARNING: Removing unreachable block (ram,0x00412943)\n// WARNING: Removing unreachable block (ram,0x00412d2b)\n// WARNING: Removing unreachable block (ram,0x00412952)\n// WARNING: Removing unreachable block (ram,0x0041295a)\n// WARNING: Removing unreachable block (ram,0x00412960)\n// WARNING: Removing unreachable block (ram,0x00412963)\n// WARNING: Removing unreachable block (ram,0x0041296a)\n// WARNING: Removing unreachable block (ram,0x00412974)\n// WARNING: Removing unreachable block (ram,0x004129cf)\n// WARNING: Removing unreachable block (ram,0x004129c9)\n// WARNING: Removing unreachable block (ram,0x004129d5)\n// WARNING: Removing unreachable block (ram,0x004129f2)\n// WARNING: Removing unreachable block (ram,0x004129f4)\n// WARNING: Removing unreachable block (ram,0x004129fc)\n// WARNING: Removing unreachable block (ram,0x004129ff)\n// WARNING: Removing unreachable block (ram,0x00412a04)\n// WARNING: Removing unreachable block (ram,0x00412a07)\n// WARNING: Removing unreachable block (ram,0x00412d34)\n// WARNING: Removing unreachable block (ram,0x00412a12)\n// WARNING: Removing unreachable block (ram,0x00412d4b)\n// WARNING: Removing unreachable block (ram,0x00412d52)\n// WARNING: Removing unreachable block (ram,0x00412a1d)\n// WARNING: Removing unreachable block (ram,0x00412a30)\n// WARNING: Removing unreachable block (ram,0x00412a32)\n// WARNING: Removing unreachable block (ram,0x00412a3f)\n// WARNING: Removing unreachable block (ram,0x00412a44)\n// WARNING: Removing unreachable block (ram,0x00412a4a)\n// WARNING: Removing unreachable block (ram,0x00412a53)\n// WARNING: Removing unreachable block (ram,0x00412a5a)\n// WARNING: Removing unreachable block (ram,0x00412a72)\n// WARNING: Removing unreachable block (ram,0x00412a83)\n// WARNING: Removing unreachable block (ram,0x00412a91)\n// WARNING: Removing unreachable block (ram,0x00412ad0)\n// WARNING: Removing unreachable block (ram,0x00412ad9)\n// WARNING: Removing unreachable block (ram,0x00412cf1)\n// WARNING: Removing unreachable block (ram,0x00412ae7)\n// WARNING: Removing unreachable block (ram,0x00412af1)\n// WARNING: Removing unreachable block (ram,0x00412d0c)\n// WARNING: Removing unreachable block (ram,0x00412afe)\n// WARNING: Removing unreachable block (ram,0x00412b05)\n// WARNING: Removing unreachable block (ram,0x00412b0f)\n// WARNING: Removing unreachable block (ram,0x00412b14)\n// WARNING: Removing unreachable block (ram,0x00412b24)\n// WARNING: Removing unreachable block (ram,0x00412b29)\n// WARNING: Removing unreachable block (ram,0x00412b33)\n// WARNING: Removing unreachable block (ram,0x00412b38)\n// WARNING: Removing unreachable block (ram,0x00412b4a)\n// WARNING: Removing unreachable block (ram,0x00412b57)\n// WARNING: Removing unreachable block (ram,0x00412b66)\n// WARNING: Removing unreachable block (ram,0x00412b73)\n// WARNING: Removing unreachable block (ram,0x00412b90)\n// WARNING: Removing unreachable block (ram,0x00412b94)\n// WARNING: Removing unreachable block (ram,0x00412b9b)\n// WARNING: Removing unreachable block (ram,0x00412ba4)\n// WARNING: Removing unreachable block (ram,0x00412ba7)\n// WARNING: Removing unreachable block (ram,0x00412bb8)\n// WARNING: Removing unreachable block (ram,0x00412bc6)\n// WARNING: Removing unreachable block (ram,0x00412bd1)\n// WARNING: Removing unreachable block (ram,0x00412bd8)\n// WARNING: Removing unreachable block (ram,0x00412c03)\n// WARNING: Removing unreachable block (ram,0x00412c08)\n// WARNING: Removing unreachable block (ram,0x00412c13)\n// WARNING: Removing unreachable block (ram,0x00412c1c)\n// WARNING: Removing unreachable block (ram,0x00412c22)\n// WARNING: Removing unreachable block (ram,0x00412c25)\n// WARNING: Removing unreachable block (ram,0x00412c4b)\n// WARNING: Removing unreachable block (ram,0x00412c50)\n// WARNING: Removing unreachable block (ram,0x00412c55)\n// WARNING: Removing unreachable block (ram,0x00412c62)\n// WARNING: Removing unreachable block (ram,0x00412c73)\n// WARNING: Removing unreachable block (ram,0x00412ca4)\n// WARNING: Removing unreachable block (ram,0x00412c79)\n// WARNING: Removing unreachable block (ram,0x00412c9f)\n// WARNING: Removing unreachable block (ram,0x00412c83)\n// WARNING: Removing unreachable block (ram,0x00412c99)\n// WARNING: Removing unreachable block (ram,0x00412c92)\n// WARNING: Removing unreachable block (ram,0x00412ca7)\n// WARNING: Removing unreachable block (ram,0x00412cd4)\n// WARNING: Removing unreachable block (ram,0x00412cb1)\n// WARNING: Removing unreachable block (ram,0x00412b3c)\n// WARNING: Removing unreachable block (ram,0x00412b19)\n// WARNING: Removing unreachable block (ram,0x00412d0f)\n// WARNING: Removing unreachable block (ram,0x00412a55)\n// WARNING: Removing unreachable block (ram,0x00412d19)\n// WARNING: Removing unreachable block (ram,0x00412d5a)\n// WARNING: Variable defined which should be unmapped: var_7ch\n\nvoid __cdecl\nfcn.004126b8(uint arg_8h, uint arg_ch, char *arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h, \n            int32_t arg_24h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_3ch;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_9h;\n    uint var_4h;\n    \n    if (arg_24h == 0) {\n        puVar2 = fcn.00407907();\n        *puVar2 = 0x16;\n        fcn.00406897(0, 0, 0, 0, 0);\n        fcn.004071db(var_7ch);\n        return;\n    }\n    for (; (((cVar1 = *arg_10h,  cVar1 == ' ' || (cVar1 == '\\t')) || (cVar1 == '\\n')) || (cVar1 == '\\r'));\n        arg_10h = arg_10h + 1) {\n    }\n    // WARNING: Could not recover jumptable at 0x0041274b. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (12 cases) at 0x412d80\n    (**0x412d80)();\n    return;\n}\n",
        "token_count": 1831
    },
    "004055cb": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __thiscall fcn.004055cb(uint param_1, uint8_t param_2)\n\n{\n    fcn.00405510();\n    if ((param_2 & 1) != 0) {\n        fcn.004064a4(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 68
    },
    "0040627d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040627d(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4013a8;\n    fcn.004055e7();\n    if ((arg_8h & 1) != 0) {\n        fcn.004064a4();\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00406432": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406432(uint32_t arg_8h)\n\n{\n    fcn.0040640f();\n    if ((arg_8h & 1) != 0) {\n        fcn.004064a4();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "00406463": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406463(uint32_t arg_8h)\n\n{\n    fcn.00406453();\n    if ((arg_8h & 1) != 0) {\n        fcn.004064a4();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "00409856": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409856(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x401e34;\n    fcn.0040640f();\n    if ((arg_8h & 1) != 0) {\n        fcn.004064a4();\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "00414d64": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00414d64(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040b8ac(0x4185a0, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0040791a();\n        *puVar2 = 0;\n        puVar2 = fcn.00407907();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x5793f4)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x579400;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.004159c8(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00407907();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0040791a();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00414631(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00414e36(0x4185a0);\n                goto code_r0x00414e30;\n            }\n        }\n        puVar2 = fcn.0040791a();\n        *puVar2 = 0;\n        puVar2 = fcn.00407907();\n        *puVar2 = 9;\n        fcn.00406897(0, 0, 0, 0, 0);\n    }\ncode_r0x00414e30:\n    fcn.0040b8f1();\n    return;\n}\n",
        "token_count": 632
    },
    "004043c0": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004043c0(uint32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t *puVar5;\n    uint32_t uVar6;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    puVar5 = arg_8h;\n    iVar1 = *arg_ch;\n    var_4h = *arg_8h;\n    iVar2 = arg_ch[1];\n    uVar6 = arg_8h[1];\n    iVar3 = arg_ch[2];\n    iVar4 = arg_ch[3];\n    var_ch = 0x20;\n    do {\n        arg_8h = var_4h * 0x10 + iVar3;\n        arg_ch = (var_4h >> 5) + iVar4;\n        *0x5778bc = 0xffcf03fc;\n        fcn.00403d2e(&arg_8h, var_4h + 0xc6ef3720);\n        arg_ch = arg_ch ^ arg_8h;\n        *0x5778bc = 0;\n        uVar6 = uVar6 - arg_ch;\n        arg_8h = uVar6 * 0x10 + iVar1;\n        if (*0x578414 == 0x1be) {\n            (*_sym.imp.KERNEL32.dll_RequestWakeupLatency)(0);\n        }\n        *0x5778c4 = 0xffffffff;\n        arg_8h = arg_8h ^ uVar6 + 0xc6ef3720;\n        arg_ch = (uVar6 >> 5) + iVar2;\n        *0x5778c0 = 0xff6b3619;\n        fcn.00403d2e(&arg_8h, arg_ch);\n        var_4h = var_4h - arg_8h;\n        fcn.00403d03();\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    puVar5[1] = uVar6;\n    *puVar5 = var_4h;\n    return;\n}\n",
        "token_count": 531
    },
    "004044bb": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.004044bb(int32_t param_1, uint32_t param_2, uint param_3)\n\n{\n    for (param_2 = param_2 >> 3; param_2 != 0; param_2 = param_2 - 1) {\n        fcn.004043c0(param_1, param_3);\n        param_1 = param_1 + 8;\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "004045f3": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.004045f3(void)\n\n{\n    uint uStack144;\n    uint uStack140;\n    \n    uStack140 = 0x44e768;\n    *0x44e76e = 0x33;\n    *0x44e76f = 0x32;\n    *0x44e773 = 0x6c;\n    *0x44e772 = 0x6c;\n    *0x44e76b = 0x6e;\n    *0x44e76d = 0x6c;\n    *0x44e768 = 0x6b;\n    *0x44e76c = 0x65;\n    *0x44e76a = 0x72;\n    *0x44e770 = 0x2e;\n    *0x44e771 = 100;\n    *0x44e769 = 0x65;\n    *0x44e774 = 0;\n    uStack144 = 0x404661;\n    *0x578410 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n    uStack144 = 0x44e768;\n    *0x44e773 = 0x65;\n    *0x44e769 = 0x69;\n    *0x44e76c = 0x75;\n    *0x44e76e = 0x6c;\n    *0x44e76d = 0x61;\n    *0x44e771 = 0x6f;\n    *0x44e775 = 0x74;\n    *0x44e768 = 0x56;\n    *0x44e774 = 99;\n    *0x44e76f = 0x50;\n    *0x44e776 = 0;\n    *0x44e76b = 0x74;\n    *0x44e772 = 0x74;\n    *0x44e76a = 0x72;\n    *0x44e770 = 0x72;\n    *0x44e764 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x578410);\n    (**0x44e764)(*0x5778b8, *0x578414, 0x40, &stack0xffffff70);\n    return;\n}\n",
        "token_count": 515
    },
    "00404ab6": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nuint fcn.00404ab6(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint lpszLongPath;\n    uint lpConsoleTitle;\n    uint lpReturnedString;\n    uint lpFindFileData;\n    uint lpVersionInformation;\n    uint pActCtx;\n    int32_t var_28h;\n    uint lpConsoleCursorInfo;\n    uint lpFilePart;\n    int32_t ResourceState;\n    \n    uVar3 = 0;\n    do {\n        if (uVar3 < 0x1ef75) {\n            (*_sym.imp.USER32.dll_GetComboBoxInfo)(0, 0);\n            (*_sym.imp.KERNEL32.dll_SetLastError)(0);\n        }\n    } while ((((uVar3 < 0x1ea05600) || (ResourceState == 0xacef98)) || (var_28h == 0xad6910c)) &&\n            (uVar3 = uVar3 + 1,  uVar3 < 0x8deecc68));\n    iVar2 = 0;\n    do {\n        if (iVar2 == 0x13e6) {\n            *0x578414 = *0x578414 + 0x38d6;\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x31a652);\n    fcn.00404aa2();\n    uVar3 = 0x962a52;\n    do {\n        if (*0x578414 == 0x139) {\n            (*_sym.imp.KERNEL32.dll_FindNextFileW)(0, &lpFindFileData);\n        }\n        if (*0x578414 == 0x71f) {\n            (*_sym.imp.KERNEL32.dll_EnumCalendarInfoW)(0, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_VerifyVersionInfoA)(&lpVersionInformation, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_EnumTimeFormatsA)(0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_GetLongPathNameW)(0x40127c, &lpszLongPath, 0);\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(0, 0);\n            (*_sym.imp.KERNEL32.dll_QueryMemoryResourceNotification)(0, &ResourceState);\n        }\n        uVar3 = uVar3 - 1;\n    } while (uVar3 != 0);\n    if (*0x578414 != 0) {\n        do {\n            if (*0x578414 == 0xfe) {\n                (*_sym.imp.KERNEL32.dll_GetUserDefaultLangID)();\n                (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringA)(0, 0, 0, 0);\n                (*_sym.imp.KERNEL32.dll_AddRefActCtx)(0);\n            }\n            fcn.004044e3(uVar3);\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < *0x578414);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_DeleteVolumeMountPointA;\n    if (*0x578414 == 0x19c) {\n        (*_sym.imp.KERNEL32.dll_DeleteVolumeMountPointA)(0);\n        (*_sym.imp.KERNEL32.dll_CreateActCtxA)(&pActCtx);\n        (*_sym.imp.KERNEL32.dll_EnumTimeFormatsW)(0, 0, 0);\n        (*_sym.imp.KERNEL32.dll__hwrite)(0, 0x401290, 0);\n        (*_sym.imp.KERNEL32.dll_SetHandleInformation)(0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_EnumResourceLanguagesA)(0, 0, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_CreateNamedPipeA)(0, 0, 0, 0, 0, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)();\n        (*_sym.imp.KERNEL32.dll_GetComputerNameA)(&lpReturnedString, &ResourceState);\n        (*_sym.imp.KERNEL32.dll_GetLocaleInfoW)(0, 0, &lpszLongPath, 0);\n        (*_sym.imp.KERNEL32.dll_HeapAlloc)(0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n        (*_sym.imp.KERNEL32.dll_SetVolumeMountPointW)(0, 0);\n        fcn.00403bb0(&lpFilePart, 0);\n        (*_sym.imp.KERNEL32.dll_FindResourceW)(0, 0, 0);\n        (*pcVar1)(0);\n        (*_sym.imp.KERNEL32.dll_GetConsoleAliasesLengthW)(0);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_LoadLibraryA;\n    ResourceState = 0;\n    do {\n        if (ResourceState == 0xab9d) {\n            *0x578410 = (*pcVar1)(0x44e768);\n        }\n        ResourceState = ResourceState + 1;\n    } while (ResourceState < 0x2594b);\n    *0x44e768 = 0;\n    ResourceState = 0;\n    do {\n        if (ResourceState == 0x148) {\n            fcn.004045f3();\n        }\n        ResourceState = ResourceState + 1;\n    } while (ResourceState < 0x71761d);\n    fcn.004044bb(*0x5778b8, *0x578414, 0x41a010);\n    ResourceState = 0;\n    do {\n        (*_sym.imp.KERNEL32.dll_GlobalFlags)(0);\n        if (ResourceState == 0x30f4) {\n            fcn.004045e4();\n        }\n        ResourceState = ResourceState + 1;\n    } while (ResourceState < 0x48122);\n    ResourceState = 0xdd7b3;\n    do {\n        if (*0x578414 == 0x21) {\n            (*_sym.imp.KERNEL32.dll_WritePrivateProfileSectionW)(0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasW)(0, &lpszLongPath, 0, 0);\n            (*_sym.imp.KERNEL32.dll_SetConsoleCursorInfo)(0, &lpConsoleCursorInfo);\n            (*_sym.imp.KERNEL32.dll_GetProfileSectionA)(0x4012e0, &lpReturnedString, 0);\n        }\n        ResourceState = ResourceState + -1;\n    } while (ResourceState != 0);\n    *0x44e769 = 0x73;\n    *0x44e76b = 0x6d;\n    *0x44e76c = 0x67;\n    *0x44e76a = 0x69;\n    *0x44e772 = 0x6c;\n    *0x44e76e = 0x32;\n    *0x44e771 = 0x6c;\n    *0x44e773 = 0;\n    *0x44e76d = 0x33;\n    *0x44e770 = 100;\n    *0x44e768 = 0x6d;\n    *0x44e76f = 0x2e;\n    (*pcVar1)(0x44e768);\n    iVar2 = 0x1ef75;\n    do {\n        (*_sym.imp.KERNEL32.dll_GetLastError)();\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    if (*0x578414 == 0x58c) {\n        (*_sym.imp.KERNEL32.dll_UpdateResourceA)(0, 0, 0, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0x4012f4);\n        (*_sym.imp.KERNEL32.dll_FreeConsole)();\n        (*_sym.imp.KERNEL32.dll_FindResourceW)(0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_SearchPathA)(0, 0, 0, 0, &lpReturnedString, &lpFilePart);\n        (*_sym.imp.KERNEL32.dll_GetConsoleTitleA)(&lpConsoleTitle, 0);\n        (*_sym.imp.KERNEL32.dll_OpenMutexW)(0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_GetUserDefaultLangID)();\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)(0);\n        (*_sym.imp.KERNEL32.dll_GetBinaryTypeW)(0, &ResourceState);\n        (*_sym.imp.KERNEL32.dll_GetCommandLineW)();\n    }\n    fcn.004045dd();\n    return 0;\n}\n",
        "token_count": 1947
    },
    "00405ed8": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_54h\n\nvoid fcn.00405ed8(void)\n\n{\n    uint32_t arg_ch;\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint32_t uVar7;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch_2;\n    uint var_10h_2;\n    uint var_14h;\n    uint var_10h;\n    uint var_54h;\n    uint var_38h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h_2;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00406d80();\n    *(unaff_EBP + -0x10) = &stack0xffffffac;\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    uVar1 = fcn.00404f4d();\n    arg_ch = *(unaff_EBP + 0x10);\n    if (arg_ch != 0) {\n        uVar2 = fcn.00404f63();\n        *(unaff_EBP + -0x18) = uVar2;\n        iVar3 = fcn.004051ec();\n        iVar5 = *(unaff_EBP + -0x18);\n        if (iVar3 - iVar5 < arg_ch) {\n            iVar3 = fcn.00405941();\n            iVar5 = extraout_ECX_00;\n        }\n        uVar7 = iVar5 + arg_ch;\n        if (uVar1 < uVar7) {\n            if (iVar3 - (uVar1 >> 1) < uVar1) {\n                uVar1 = 0;\n            }\n            else {\n                uVar1 = uVar1 + (uVar1 >> 1);\n            }\n            *(unaff_EBP + -0x14) = uVar1;\n            if (uVar1 < uVar7) {\n                *(unaff_EBP + -0x14) = uVar7;\n                uVar1 = uVar7;\n            }\n            uVar4 = fcn.004051f4(uVar1);\n            *(unaff_EBP + -4) = 0;\n            uVar2 = *(extraout_ECX + 0xc);\n            *(unaff_EBP + -0x18) = uVar4;\n            *(unaff_EBP + 0x10) = uVar4;\n            uVar2 = fcn.00405e55(uVar2, *(unaff_EBP + 0xc), uVar4);\n            *(unaff_EBP + 0x10) = uVar2;\n            uVar4 = fcn.00405dd0(uVar2, arg_ch, *(unaff_EBP + 0x14));\n            uVar2 = *(extraout_ECX + 0x10);\n            *(unaff_EBP + 0x10) = uVar4;\n            fcn.00405e55(*(unaff_EBP + 0xc), uVar2, uVar4);\n            iVar5 = fcn.00404f63();\n            if (*(extraout_ECX + 0xc) != 0) {\n                fcn.00405cc0(*(extraout_ECX + 0xc), *(extraout_ECX + 0x10));\n                fcn.00404f86(*(extraout_ECX + 0xc), (*(extraout_ECX + 0x14) - *(extraout_ECX + 0xc)) / 0x1c);\n            }\n            iVar3 = *(unaff_EBP + -0x18);\n            *(extraout_ECX + 0x14) = uVar1 * 0x1c + iVar3;\n            *(extraout_ECX + 0x10) = (arg_ch + iVar5) * 0x1c + iVar3;\n            *(extraout_ECX + 0xc) = iVar3;\n        }\n        else {\n            if ((*(extraout_ECX + 0x10) - *(unaff_EBP + 0xc)) / 0x1c < arg_ch) {\n                fcn.00405754(*(unaff_EBP + 0x14));\n                uVar2 = *(extraout_ECX + 0x10);\n                *(unaff_EBP + -4) = 2;\n                fcn.00405e55(*(unaff_EBP + 0xc), uVar2, arg_ch * 0x1c + *(unaff_EBP + 0xc));\n                iVar5 = *(extraout_ECX + 0x10);\n                *(unaff_EBP + -4) = 3;\n                fcn.00405dd0(*(extraout_ECX + 0x10), arg_ch - (iVar5 - *(unaff_EBP + 0xc)) / 0x1c, unaff_EBP + -0x38);\n                *(extraout_ECX + 0x10) = *(extraout_ECX + 0x10) + arg_ch * 0x1c;\n                iVar5 = *(extraout_ECX + 0x10);\n                *(unaff_EBP + -4) = 2;\n                fcn.00405b3d(*(unaff_EBP + 0xc), iVar5 + arg_ch * -0x1c, unaff_EBP + -0x38);\n            }\n            else {\n                fcn.00405754(*(unaff_EBP + 0x14));\n                uVar2 = *(extraout_ECX + 0x10);\n                *(unaff_EBP + 0x14) = uVar2;\n                *(unaff_EBP + 0x14) = *(unaff_EBP + 0x14) + arg_ch * -0x1c;\n                *(unaff_EBP + -4) = 5;\n                uVar6 = fcn.00405e55(*(unaff_EBP + 0x14), uVar2, uVar2);\n                uVar4 = *(unaff_EBP + 0x14);\n                *(extraout_ECX + 0x10) = uVar6;\n                fcn.00405e6d(*(unaff_EBP + 0xc), uVar4, uVar2);\n                fcn.00405b3d(*(unaff_EBP + 0xc), arg_ch * 0x1c + *(unaff_EBP + 0xc), unaff_EBP + -0x54);\n            }\n            fcn.00405510();\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 1511
    },
    "00403d2e": {
        "rules": [
            "hash data using fnv/71d430608aea45068f0f63fc2cdc3004",
            "contain obfuscated stackstrings",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403d2e(uint32_t *param_1, uint32_t param_2)\n\n{\n    *param_1 = *param_1 ^ param_2;\n    return;\n}\n",
        "token_count": 45
    },
    "004045e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004045e4(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "00404fc6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __thiscall fcn.00404fc6(int32_t param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((param_2 != 0) && (in_EAX = fcn.00404f73(),  in_EAX <= param_2)) {\n        iVar1 = fcn.00404f73();\n        in_EAX = iVar1 + *(param_1 + 0x14);\n        if (param_2 < in_EAX) {\n            return CONCAT31(in_EAX >> 8, 1);\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 151
    },
    "0040500a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040500a(int32_t param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    \n    cVar2 = fcn.00403c9b();\n    if (cVar2 == '\\0') {\n        fcn.004068bd();\n    }\n    uVar1 = *(param_1 + 4) + param_2 * 0x1c;\n    iVar3 = fcn.00403c7d();\n    if (uVar1 < *(iVar3 + 0x10) || uVar1 == *(iVar3 + 0x10)) {\n        iVar3 = fcn.00403c7d();\n        if (*(iVar3 + 0xc) <= uVar1) goto code_r0x00405047;\n    }\n    fcn.004068bd();\ncode_r0x00405047:\n    *(param_1 + 4) = *(param_1 + 4) + param_2 * 0x1c;\n    return param_1;\n}\n",
        "token_count": 245
    },
    "00405161": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405161(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    fcn.00403c26(param_1, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 57
    },
    "00405183": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405183(uint param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    fcn.00403c42(param_1, param_2, param_3, param_4);\n    return;\n}\n",
        "token_count": 57
    },
    "004051c5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004051c5(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_1h;\n    \n    *(in_ECX + 0x14) = arg_8h;\n    iVar1 = fcn.00404f73(&var_1h);\n    fcn.00403c08(iVar1 + arg_8h);\n    return;\n}\n",
        "token_count": 114
    },
    "004051ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004051ec(void)\n\n{\n    return 0x9249249;\n}\n",
        "token_count": 21
    },
    "0040530f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __thiscall fcn.0040530f(int32_t param_1, uint32_t param_2, uint32_t param_3)\n\n{\n    uint32_t uVar1;\n    int32_t arg_14h;\n    int32_t iVar2;\n    int32_t arg_ch;\n    int32_t iVar3;\n    \n    if (*(param_1 + 0x14) < param_2) {\n        fcn.004062dc();\n    }\n    uVar1 = *(param_1 + 0x14) - param_2;\n    if (uVar1 < param_3) {\n        param_3 = uVar1;\n    }\n    if (param_3 != 0) {\n        arg_14h = uVar1 - param_3;\n        iVar2 = fcn.00404f73();\n        iVar2 = iVar2 + param_2 + param_3;\n        arg_ch = *(param_1 + 0x18) - param_2;\n        iVar3 = fcn.00404f73();\n        fcn.00405285(iVar3 + param_2, arg_ch, iVar2, arg_14h);\n        fcn.004051c5(*(param_1 + 0x14) - param_3);\n    }\n    return param_1;\n}\n",
        "token_count": 287
    },
    "00405629": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405629(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint arg_ch_00;\n    uint32_t arg_14h;\n    \n    uVar2 = fcn.00404f49();\n    if (uVar2 < arg_ch) {\n        fcn.004062dc();\n    }\n    iVar3 = fcn.00404f49();\n    uVar2 = iVar3 - arg_ch;\n    if (arg_10h < iVar3 - arg_ch) {\n        uVar2 = arg_10h;\n    }\n    if (in_ECX == arg_8h) {\n        fcn.0040530f(uVar2 + arg_ch, 0xffffffff);\n        fcn.0040530f(0, arg_ch);\n    }\n    else {\n        cVar1 = fcn.0040553e(uVar2, 0);\n        if (cVar1 != '\\0') {\n            arg_14h = uVar2;\n            iVar3 = fcn.00404f73();\n            iVar3 = iVar3 + arg_ch;\n            arg_ch_00 = *(in_ECX + 0x18);\n            arg_8h_00 = fcn.00404f73();\n            fcn.00405261(arg_8h_00, arg_ch_00, iVar3, arg_14h);\n            fcn.004051c5(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 364
    },
    "0040579c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040579c(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    for (; arg_8h != arg_ch; arg_8h = arg_8h + 0x1c) {\n        fcn.00405792();\n        arg_10h = arg_10h + 0x1c;\n    }\n    return arg_10h;\n}\n",
        "token_count": 99
    },
    "0040597a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint * __cdecl fcn.0040597a(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00406d80();\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.004063b2(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = 0x40136c;\n    fcn.00405754(arg_8h_00 + 0xc);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 249
    },
    "004059d5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004059d5(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint arg_10h_00;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_10h_00 = fcn.004052a9(&arg_10h);\n    fcn.0040579c(arg_8h, arg_ch, arg_10h_00);\n    return ((arg_ch - arg_8h) / 0x1c) * 0x1c + arg_10h;\n}\n",
        "token_count": 135
    },
    "00405a1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405a1c(int32_t param_1, int32_t param_2)\n\n{\n    for (; param_1 != param_2; param_1 = param_1 + 0x1c) {\n        fcn.00405797();\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00405a3a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405a3a(int32_t param_1, int32_t param_2)\n\n{\n    for (; param_1 != param_2; param_1 = param_1 + 0x1c) {\n        fcn.00405792();\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "00405a6a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00405a6a(int32_t param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0;\n    if (param_2 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar2 = fcn.004051ec();\n        if (uVar2 < param_2) {\n            fcn.00405941();\n        }\n        iVar3 = fcn.004051f4(param_2);\n        *(param_1 + 0xc) = iVar3;\n        *(param_1 + 0x10) = iVar3;\n        *(param_1 + 0x14) = param_2 * 0x1c + iVar3;\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 238
    },
    "00405ab1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00405ab1(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint arg_10h_00;\n    uint32_t var_9h;\n    uint32_t var_5h;\n    uint var_1h;\n    \n    var_5h = var_5h & 0xffffff00;\n    uVar1 = fcn.0040517c(&arg_8h, &arg_10h);\n    var_9h = var_9h & 0xffffff00 | uVar1;\n    fcn.0040519e(&var_1h, &arg_8h, &arg_10h, var_9h, var_5h);\n    arg_10h_00 = arg_10h;\n    arg_ch_00 = fcn.004052a9(&arg_ch);\n    arg_8h_00 = fcn.004052a9(&arg_8h);\n    fcn.004059d5(arg_8h_00, arg_ch_00, arg_10h_00);\n    return;\n}\n",
        "token_count": 281
    },
    "00405b3d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405b3d(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    uVar3 = param_3;\n    uVar1 = fcn.004052a9(&param_2);\n    uVar2 = fcn.004052a9(&param_1);\n    fcn.00405a3a(uVar2, uVar1, uVar3);\n    return;\n}\n",
        "token_count": 113
    },
    "00405bcb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00405bcb(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint arg_10h)\n\n{\n    int32_t unaff_EBP;\n    int32_t arg_8h;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h_2;\n    uint var_14h_2;\n    uint var_10h;\n    uint var_30h_2;\n    uint var_14h;\n    uint var_ch_2;\n    uint var_4h;\n    uint var_30h;\n    \n    fcn.00406d80();\n    arg_8h = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x10) = &stack0xffffffd0;\n    *(unaff_EBP + -0x14) = arg_8h;\n    fcn.004054ef();\n    *(unaff_EBP + -4) = 0;\n    iVar1 = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 1;\n    for (; iVar1 != *(unaff_EBP + 0xc); iVar1 = iVar1 + 0x1c) {\n        fcn.00405a57(arg_8h, unaff_EBP + -0x30);\n        fcn.00405a5c(arg_8h, iVar1);\n        arg_8h = arg_8h + 0x1c;\n        *(unaff_EBP + 0x10) = arg_8h;\n    }\n    fcn.00405510();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return arg_8h;\n}\n",
        "token_count": 466
    },
    "00405cc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00405cc0(int32_t param_1, uint param_2, uint param_3)\n\n{\n    fcn.00405b12(param_2, param_3, param_1 + 8);\n    return;\n}\n",
        "token_count": 57
    },
    "00405d4f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405d4f(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint noname_3, uint arg_18h)\n\n{\n    uint arg_10h_00;\n    uint var_4h;\n    \n    arg_10h_00 = fcn.004052a9(&arg_10h);\n    fcn.00405c57(arg_8h, arg_ch, arg_10h_00);\n    return arg_10h + ((arg_ch - arg_8h) / 0x1c) * -0x1c;\n}\n",
        "token_count": 141
    },
    "00405dd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405dd0(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.00405cd4(arg_8h, arg_ch, arg_10h, in_ECX + 8);\n    return arg_ch * 0x1c + arg_8h;\n}\n",
        "token_count": 88
    },
    "00405df2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405df2(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t in_ECX;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = in_ECX;\n    fcn.004055b6(arg_8h, arg_ch, arg_10h);\n    fcn.004055b6(&var_8h, arg_14h, arg_18h);\n    cVar1 = fcn.00405232(&var_8h);\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.00405ab1(var_4h, *(in_ECX + 0x10), *(arg_8h + 4));\n        fcn.00405cc0(uVar2, *(in_ECX + 0x10));\n        *(in_ECX + 0x10) = uVar2;\n    }\n    return arg_8h;\n}\n",
        "token_count": 248
    },
    "00405e55": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.00405e55(int32_t param_1, uint param_2, uint param_3, uint param_4)\n\n{\n    fcn.00405d0b(param_2, param_3, param_4, param_1 + 8);\n    return;\n}\n",
        "token_count": 67
    },
    "00405e6d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00405e6d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint32_t noname_3;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint arg_10h_00;\n    uint32_t var_9h;\n    uint32_t var_5h;\n    uint var_1h;\n    \n    var_5h = var_5h & 0xffffff00;\n    uVar1 = fcn.004051a3(&arg_10h);\n    var_9h = var_9h & 0xffffff00 | uVar1;\n    puVar2 = fcn.0040519e(&var_1h, &arg_8h, &arg_10h, var_9h, var_5h);\n    noname_3 = *puVar2;\n    arg_10h_00 = arg_10h;\n    arg_ch_00 = fcn.004052a9(&arg_ch);\n    arg_8h_00 = fcn.004052a9(&arg_8h);\n    fcn.00405d4f(arg_8h_00, arg_ch_00, arg_10h_00, noname_3, var_9h);\n    return;\n}\n",
        "token_count": 320
    },
    "00405ec8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405ec8(uint *param_1)\n\n{\n    fcn.00405d95();\n    fcn.00404f86(*param_1, 1);\n    return;\n}\n",
        "token_count": 47
    },
    "00406ed4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00406ed4(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint arg_10h;\n    uint var_4h;\n    \n    fcn.0040b8ac(0x418100, 0xc);\n    if (*(unaff_EBP + 8) == 0) {\n        puVar1 = fcn.00407907();\n        *puVar1 = 0x16;\n        fcn.00406897(0, 0, 0, 0, 0);\n    }\n    else {\n        iVar2 = fcn.0040ba9c();\n        fcn.0040bbb4(1, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.0040ba9c();\n        arg_8h_00 = fcn.0040bc51(iVar2 + 0x20);\n        iVar2 = unaff_EBP + 0xc;\n        arg_10h = 0;\n        uVar4 = *(unaff_EBP + 8);\n        iVar3 = fcn.0040ba9c();\n        uVar4 = fcn.0040bdc7(iVar3 + 0x20, uVar4, arg_10h, iVar2);\n        *(unaff_EBP + -0x1c) = uVar4;\n        iVar2 = fcn.0040ba9c();\n        fcn.0040bced(arg_8h_00, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00406f70();\n    }\n    fcn.0040b8f1();\n    return;\n}\n",
        "token_count": 468
    },
    "00406f70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406f70(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040ba9c();\n    fcn.0040bc22(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 56
    },
    "004090d7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.004090d7(uint arg_8h, uint noname_1, uint arg_10h, uint arg_14h)\n\n{\n    float10 in_ST0;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    \n    fcn.0040ff0b();\n    return in_ST0;\n}\n",
        "token_count": 90
    },
    "0040cc4f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cc4f(uint arg_8h)\n\n{\n    fcn.0040cb23(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 42
    },
    "0040d5ff": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040d613)\n// WARNING: Removing unreachable block (ram,0x0040d619)\n// WARNING: Removing unreachable block (ram,0x0040d61b)\n\nvoid fcn.0040d5ff(void)\n\n{\n    return;\n}\n",
        "token_count": 66
    },
    "00406a26": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406a26(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0040a400(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "004044e3": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "create directory",
            "write file on Windows",
            "get geographical location",
            "manipulate console buffer"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004044e3(int32_t arg_8h)\n\n{\n    uint lpszVolumeMountPoint;\n    uint ReturnedData;\n    uint lpBuffer;\n    uint lpOverlapped;\n    uint var_28h;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint NumberOfPages;\n    uint lpNumberOfEventsRead;\n    uint lpNumberOfAttrsWritten;\n    uint lpNumberOfEventsWritten;\n    uint lpNumberOfBytesWritten;\n    uint dwWriteCoord;\n    \n    if (*0x578414 == 0x37) {\n        (*_sym.imp.KERNEL32.dll_GetLocaleInfoA)(0, 0, 0, 0);\n        dwWriteCoord = 0;\n        (*_sym.imp.KERNEL32.dll_WriteConsoleOutputAttribute)(0, 0, 0, 0, &lpNumberOfAttrsWritten);\n        (*_sym.imp.KERNEL32.dll_FreeUserPhysicalPages)(0, &NumberOfPages, 0);\n        (*_sym.imp.KERNEL32.dll_GetProcessId)(0);\n        (*_sym.imp.KERNEL32.dll_ReadConsoleInputA)(0, &lpBuffer, 0, &lpNumberOfEventsRead);\n        (*_sym.imp.KERNEL32.dll_WaitForMultipleObjects)(0, 0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_LocalSize)(0);\n        (*_sym.imp.KERNEL32.dll_CreateDirectoryExA)(0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_FindFirstVolumeMountPointW)(0, &lpszVolumeMountPoint, 0);\n        lpOverlapped = 0;\n        var_28h = 0;\n        uStack40 = 0;\n        uStack36 = 0;\n        uStack32 = 0;\n        (*_sym.imp.KERNEL32.dll_WriteFile)(0, 0, 0, &lpNumberOfBytesWritten, &lpOverlapped);\n        (*_sym.imp.KERNEL32.dll_ClearCommBreak)(0);\n        (*_sym.imp.KERNEL32.dll_WriteConsoleInputA)(0, 0, 0, &lpNumberOfEventsWritten);\n        (*_sym.imp.KERNEL32.dll_FindActCtxSectionStringA)(0, 0, 0, 0x401260, &ReturnedData);\n        (*_sym.imp.KERNEL32.dll_CreateFileA)(0, 0, 0, 0, 0, 0, 0);\n    }\n    *(*0x5778b8 + arg_8h) = *(*0x578828 + 0x38d6 + arg_8h);\n    return;\n}\n",
        "token_count": 568
    },
    "004057fe": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.004057fe(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_28h;\n    uint var_1ch;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00406d80();\n    iVar1 = *(unaff_EBP + 8);\n    if (extraout_ECX != iVar1) {\n        cVar3 = fcn.004051b3(extraout_ECX, iVar1);\n        if (cVar3 == '\\0') {\n            fcn.00405754(extraout_ECX);\n            *(unaff_EBP + -4) = 0;\n            fcn.00405792(iVar1);\n            fcn.00405792(unaff_EBP + -0x28);\n            fcn.00405510();\n        }\n        else {\n            iVar1 = *(unaff_EBP + 8);\n            *(unaff_EBP + -0x1c) = *(extraout_ECX + 4);\n            *(unaff_EBP + -0x18) = *(extraout_ECX + 8);\n            *(unaff_EBP + -0x14) = *(extraout_ECX + 0xc);\n            *(unaff_EBP + -0x10) = *(extraout_ECX + 0x10);\n            *(extraout_ECX + 4) = *(iVar1 + 4);\n            *(extraout_ECX + 8) = *(iVar1 + 8);\n            *(extraout_ECX + 0xc) = *(iVar1 + 0xc);\n            *(extraout_ECX + 0x10) = *(iVar1 + 0x10);\n            *(iVar1 + 4) = *(unaff_EBP + -0x1c);\n            *(iVar1 + 8) = *(unaff_EBP + -0x18);\n            *(iVar1 + 0xc) = *(unaff_EBP + -0x14);\n            *(iVar1 + 0x10) = *(unaff_EBP + -0x10);\n            uVar2 = *(extraout_ECX + 0x14);\n            *(extraout_ECX + 0x14) = *(iVar1 + 0x14);\n            *(iVar1 + 0x14) = uVar2;\n            uVar2 = *(extraout_ECX + 0x18);\n            *(extraout_ECX + 0x18) = *(iVar1 + 0x18);\n            *(iVar1 + 0x18) = uVar2;\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 649
    },
    "00405c57": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405c57(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    if (arg_8h != arg_ch) {\n        do {\n            arg_10h = arg_10h + -0x1c;\n            arg_ch = arg_ch + -0x1c;\n            fcn.00405a5c(arg_10h, arg_ch);\n        } while (arg_ch != arg_8h);\n    }\n    return arg_10h;\n}\n",
        "token_count": 120
    },
    "00406179": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406179(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *puVar4;\n    int32_t in_ECX;\n    uint var_10h;\n    uint var_8h;\n    \n    uVar1 = fcn.00404f4d();\n    uVar2 = fcn.00404f63();\n    if (uVar2 < uVar1) {\n        uVar3 = fcn.00405dd0(*(in_ECX + 0x10), 1, arg_8h);\n        *(in_ECX + 0x10) = uVar3;\n    }\n    else {\n        puVar4 = fcn.004056af(&var_8h);\n        fcn.00406104(&var_10h, *puVar4, puVar4[1], arg_8h);\n    }\n    return;\n}\n",
        "token_count": 211
    },
    "00415af1": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00415af1(void)\n\n{\n    *0x44e754 = (*_sym.imp.KERNEL32.dll_CreateFileA)(0x403874, 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 63
    },
    "00405d95": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405d95(int32_t param_1)\n\n{\n    if (*(param_1 + 0xc) != 0) {\n        fcn.00405cc0(*(param_1 + 0xc), *(param_1 + 0x10));\n        fcn.00404f86(*(param_1 + 0xc), (*(param_1 + 0x14) - *(param_1 + 0xc)) / 0x1c);\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 156
    },
    "00403c15": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00403c15(char *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    \n    pcVar1 = param_1 + 1;\n    do {\n        cVar2 = *param_1;\n        param_1 = param_1 + 1;\n    } while (cVar2 != '\\0');\n    return param_1 - pcVar1;\n}\n",
        "token_count": 91
    },
    "004073d4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.004073d4(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040b8ac(0x418168, 0xc);\n    fcn.0040adb2(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x578860;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x57885c;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x00407418;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00406e0b(arg_8h_00);\ncode_r0x00407418:\n        fcn.00406e0b(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040743b();\n    fcn.0040b8f1();\n    return;\n}\n",
        "token_count": 398
    },
    "00406e99": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00406e99(uint lpFileName)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(lpFileName);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n        fcn.0040792d(iVar1);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 118
    },
    "00406ec9": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint fcn.00406ec9(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(param_1);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n        fcn.0040792d(iVar1);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 118
    }
}