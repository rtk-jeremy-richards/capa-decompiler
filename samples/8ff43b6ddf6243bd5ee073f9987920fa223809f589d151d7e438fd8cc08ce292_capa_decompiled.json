{
    "10001000": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nvoid fcn.10001000(void)\n\n{\n    // [00] -r-x section size 262144 named .text\n    *0x10095250 = *0x10048164 + 0x400f46f0;\n    return;\n}\n",
        "token_count": 56
    },
    "10040310": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint16_t __cdecl fcn.10040310(int32_t arg_8h)\n\n{\n    uint16_t uVar1;\n    uint var_10h;\n    int32_t var_ch;\n    int32_t var_8h;\n    uint var_4h;\n    \n    if (*0x100817cc - *0x100817c4 == 0x233) {\n        var_4h._0_2_ = *0x100817d4 + 7 + var_4h;\n        *0x100817d4 = *0x100817d4 - (arg_8h + -0x53 + var_4h);\n    }\n    else {\n        var_4h._0_2_ = *0x100817c5 * var_4h - arg_8h;\n        *0x100817d4 = (var_4h - 0x4b) + var_4h;\n    }\n    uVar1 = var_4h - (*0x100817d0 + -0x53 + var_8h);\n    *0x100817d4 = uVar1 + 0x96f2 + *0x100817b8 + *0x100817d4 * 2;\n    if (*0x100817c5 == 0x1d10) {\n        *0x100817b6 = *0x100817b6 - *0x100817c9;\n        *0x100817d4 = *0x100817b6 + 0x96f2 + *0x100817b6 + *0x100817d4 * 2;\n    }\n    *0x100817b6 = fcn.100407f0();\n    if (*0x100817cc - *0x100817c4 == 0x233) {\n        var_4h._0_2_ = *0x100817d4 + 7 + uVar1;\n        *0x100817d4 = *0x100817d4 - (*0x100817d0 + -0x53 + var_4h);\n    }\n    else {\n        var_4h._0_2_ = *0x100817c5 * uVar1 - *0x100817d0;\n        *0x100817d4 = (var_4h - 0x4b) + var_4h;\n    }\n    var_4h._0_2_ = var_4h + (-var_8h - *0x100817d0) + 0xe9;\n    *0x100817b8 = *0x100817d4 * *0x100817b8 - var_4h;\n    if (*0x100817c5 == 0x1d10) {\n        *0x100817b6 = *0x100817b6 - *0x100817c9;\n        *0x100817d4 = *0x100817b6 + 0x96f2 + *0x100817b6 + *0x100817d4 * 2;\n    }\n    *0x100817b6 = fcn.100406c0();\n    if (*0x100817c4 == 0) {\n        *0x100817d0 = (*0x100817d4 + 0x4a) - var_4h;\n    }\n    else {\n        var_4h._0_2_ = *0x100817d0 + -0x690e + *0x100817d4 + var_4h * 2;\n    }\n    if (var_4h <= *0x100817b8) {\n        *0x100817c2 = *0x100817c2 * arg_8h;\n        var_4h._0_2_ = *0x100817b8 + 7 + arg_8h;\n    }\n    var_ch = 0x2e;\n    for (; (1 < var_ch && (var_8h != *0x100817e4)); var_8h = *0x100817d4 + 0x43 + var_8h * 2) {\n        *0x100817d4 = 0x4a;\n        *(var_ch * 4 + 0x100817e0) = *(var_ch * 4 + 0x100817e0) + var_8h;\n        var_ch = var_ch + -2;\n    }\n    *0x100817d4 = var_4h + *0x100817d4 + 0x43 + *0x100817b8;\n    return var_4h;\n}\n",
        "token_count": 1035
    },
    "10001e01": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.10001e01(int32_t **arg_8h)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint uVar4;\n    \n    piVar1 = *arg_8h;\n    if (((*piVar1 == -0x1f928c9d) && (piVar1[4] == 3)) &&\n       ((iVar2 = piVar1[5],  iVar2 == 0x19930520 ||\n        (((iVar2 == 0x19930521 || (iVar2 == 0x19930522)) || (iVar2 == 0x1994000)))))) {\n        fcn.1000cc6a();\n        pcVar3 = swi(3);\n        uVar4 = (*pcVar3)();\n        return uVar4;\n    }\n    return 0;\n}\n",
        "token_count": 196
    },
    "1000a0a8": {
        "rules": [
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.1000a0a8(uint noname_0, uint arg_ch)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t *unaff_EDI;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    \n    *(*(unaff_EBP + 0xc) + -4) = *(unaff_EBP + -0x30);\n    fcn.10008ec7(*(unaff_EBP + -0x34));\n    iVar1 = fcn.10008454();\n    *(iVar1 + 0x10) = *(unaff_EBP + -0x38);\n    iVar1 = fcn.10008454();\n    *(iVar1 + 0x14) = *(unaff_EBP + -0x3c);\n    if ((((*unaff_EDI == -0x1f928c9d) && (unaff_EDI[4] == 3)) &&\n        ((unaff_EDI[5] == 0x19930520 || ((unaff_EDI[5] == 0x19930521 || (unaff_EDI[5] == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x40) == 0 && (unaff_EBX != 0)))) {\n        iVar1 = fcn.1000a5d9(unaff_EDI[6]);\n        if (iVar1 != 0) {\n            fcn.1000a528(unaff_EDI);\n        }\n    }\n    return;\n}\n",
        "token_count": 378
    },
    "1001a8c5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.1001a8c5(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x100822f8, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.10016fba();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.10016f41(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 159
    },
    "100042d6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.100042d6(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    uint8_t *puVar1;\n    uint arg_10h;\n    int32_t *piVar2;\n    uint8_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    int32_t var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    if (**0x10081cac == 0) {\n        fcn.10002d10(arg_8h, 1, arg_ch);\n        return arg_8h;\n    }\n    puVar1 = *0x10081cac + 1;\n    uVar5 = **0x10081cac;\n    uVar4 = 0xffffffff;\n    var_1h._0_1_ = 0;\n    var_ch = 0;\n    var_8h = 0;\n    if (0x4e < uVar5) {\n        if (uVar5 == 0x4f) {\n            *0x10081cac = puVar1;\n            fcn.10002c29(\"long \");\n            puVar1 = *0x10081cac;\n            goto code_r0x10004568;\n        }\n        if (uVar5 < 0x50) goto code_r0x10004535;\n        if (uVar5 < 0x54) {\n            uVar4 = uVar5 & 3;\n            *0x10081cac = puVar1;\n            goto code_r0x10004575;\n        }\n        if (uVar5 == 0x58) {\n            pcVar6 = \"void\";\n            goto code_r0x10004331;\n        }\n        if (uVar5 != 0x5f) goto code_r0x10004535;\n        uVar3 = *puVar1;\n        puVar1 = *0x10081cac + 2;\n        uVar4 = uVar3;\n        if (uVar4 < 0x4f) {\n            if (uVar4 == 0x4e) {\n                pcVar6 = \"bool\";\n            }\n            else if (uVar4 < 0x48) {\n                if (uVar4 < 0x46) {\n                    if (uVar4 == 0) {\n                        *0x10081cac = *0x10081cac + 1;\n                        fcn.10002c54(1);\n                        goto code_r0x10004581;\n                    }\n                    if (uVar4 == 0x24) {\n                        *0x10081cac = puVar1;\n                        arg_10h = fcn.100042d6(&var_1ch, arg_ch);\n                        fcn.10002cee(arg_8h, \"__w64 \", arg_10h);\n                        return arg_8h;\n                    }\n                    if (uVar4 - 0x44 < 2) {\n                        pcVar6 = \"__int8\";\n                    }\n                    else {\ncode_r0x1000448e:\n                        pcVar6 = \"UNKNOWN\";\n                    }\n                }\n                else {\n                    pcVar6 = \"__int16\";\n                }\n            }\n            else if (uVar4 < 0x4a) {\n                pcVar6 = \"__int32\";\n            }\n            else if (uVar4 < 0x4c) {\n                pcVar6 = \"__int64\";\n            }\n            else {\n                if (0x4d < uVar4) goto code_r0x1000448e;\n                pcVar6 = \"__int128\";\n            }\n        }\n        else {\n            if (uVar4 == 0x4f) {\n                uVar4 = 0xfffffffe;\n                *0x10081cac = puVar1;\n                goto code_r0x100044c3;\n            }\n            if (uVar4 == 0x52) {\n                pcVar6 = \"<unknown>\";\n            }\n            else if (uVar4 == 0x53) {\n                pcVar6 = \"char16_t\";\n            }\n            else if (uVar4 == 0x55) {\n                pcVar6 = \"char32_t\";\n            }\n            else {\n                if (uVar4 != 0x57) {\n                    if ((uVar4 < 0x58) || (0x59 < uVar3)) goto code_r0x1000448e;\n                    *0x10081cac = *0x10081cac + 1;\n                    piVar2 = fcn.10005325(&var_1ch);\n                    var_14h = *piVar2;\n                    var_10h = piVar2[1];\n                    goto joined_r0x1000447b;\n                }\n                pcVar6 = \"wchar_t\";\n            }\n        }\n        *0x10081cac = puVar1;\n        fcn.10002c29(pcVar6);\n        goto code_r0x10004581;\n    }\n    // switch table (11 cases) at 0x10004692\n    switch(uVar5) {\n    case 0x43:\n    case 0x44:\n    case 0x45:\n        pcVar6 = \"char\";\n        break;\n    case 0x46:\n    case 0x47:\n        pcVar6 = \"short\";\n        break;\n    case 0x48:\n    case 0x49:\n        pcVar6 = 0x10041c84;\n        break;\n    case 0x4a:\n    case 0x4b:\n        pcVar6 = \"long\";\n        break;\n    case 0x4c:\ncode_r0x10004535:\n        piVar2 = fcn.10005325(&var_1ch);\n        var_14h = *piVar2;\n        var_10h = piVar2[1];\n        uVar3 = var_1h;\njoined_r0x1000447b:\n        var_ch = var_14h;\n        var_8h = var_10h;\n        if (var_14h == 0) goto code_r0x10004481;\n        goto code_r0x10004581;\n    case 0x4d:\n        pcVar6 = \"float\";\n        break;\n    default:\ncode_r0x10004568:\n        *0x10081cac = puVar1;\n        fcn.10002ed2(\"double\");\ncode_r0x10004575:\n        uVar3 = var_1h;\n        if (uVar4 != 0xffffffff) {\ncode_r0x100044c3:\n            var_ch = 0;\n            var_8h = 0;\n            var_1ch = *arg_ch;\n            var_18h = arg_ch[1];\n            if (uVar4 != 0xfffffffe) {\n                if (var_1ch == 0) {\n                    if ((uVar4 & 1) == 0) {\n                        if ((uVar4 & 2) != 0) {\n                            fcn.10002c29(\"volatile\");\n                        }\n                    }\n                    else {\n                        fcn.10002c29(\"const\");\n                        if ((uVar4 & 2) != 0) {\n                            fcn.10002ed2(\" volatile\");\n                        }\n                    }\n                }\n                fcn.100066c6(arg_8h, &var_ch, &var_1ch, 0x100414c4);\n                return arg_8h;\n            }\n            var_18h = var_18h | 0x800;\n            fcn.100066c6(&var_14h, &var_ch, &var_1ch, 0x10041486);\n            if ((var_10h & 0x800) == 0) {\n                fcn.10002ed2(0x100414b0);\n            }\ncode_r0x10004481:\n            *arg_8h = var_14h;\n            arg_8h[1] = var_10h;\n            return arg_8h;\n        }\n        goto code_r0x10004581;\n    }\ncode_r0x10004331:\n    *0x10081cac = puVar1;\n    fcn.10002c29(pcVar6);\n    uVar3 = var_1h;\ncode_r0x10004581:\n    if (uVar5 == 0x43) {\n        pcVar6 = \"signed \";\n    }\n    else {\n        if (((((uVar5 != 0x45) && (uVar5 != 0x47)) && (uVar5 != 0x49)) && (uVar5 != 0x4b)) &&\n           ((uVar5 != 0x5f ||\n            (((uVar3 != 0x45 && (uVar3 != 0x47)) && ((uVar3 != 0x49 && ((uVar3 != 0x4b && (uVar3 != 0x4d))))))))))\n        goto code_r0x100045e5;\n        pcVar6 = \"unsigned \";\n    }\n    fcn.10002943(pcVar6);\n    fcn.10002d32(&var_1ch, &var_ch);\n    var_ch = var_1ch;\n    var_8h = var_18h;\ncode_r0x100045e5:\n    if (*arg_ch != 0) {\n        fcn.100028d6(0x20);\n        fcn.10002d32(&var_1ch, arg_ch);\n        fcn.10002ddc(&var_1ch);\n    }\n    *arg_8h = var_ch;\n    arg_8h[1] = var_8h;\n    return arg_8h;\n}\n",
        "token_count": 2203
    },
    "10009584": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nint32_t __cdecl fcn.10009584(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint32_t *puVar1;\n    uint32_t uVar2;\n    uint8_t *puVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    int32_t unaff_EBP;\n    int32_t *piVar8;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint uVar9;\n    uint var_4h;\n    \n    fcn.10001eb0(0x1007f278, 0x10);\n    iVar7 = 0;\n    puVar1 = *(unaff_EBP + 0x10);\n    if (((puVar1[1] == 0) || (*(puVar1[1] + 8) == '\\0')) || ((puVar1[2] == 0 && (-1 < *puVar1)))) {\n        iVar7 = 0;\n        goto code_r0x100096ad;\n    }\n    uVar2 = *puVar1;\n    piVar8 = *(unaff_EBP + 0xc);\n    if (-1 < uVar2) {\n        piVar8 = piVar8 + puVar1[2] + 0xc;\n    }\n    *(unaff_EBP + -4) = 0;\n    iVar5 = *0x10081d44;\n    puVar3 = *(unaff_EBP + 0x14);\n    if (((uVar2 < '\\0') && ((*puVar3 & 0x10) != 0)) && (*(unaff_EBP + -0x1c) = *0x10081d44,  iVar5 != 0)) {\n        (**0x100411ec)();\n        iVar5 = (**(unaff_EBP + -0x1c))();\ncode_r0x100095fb:\n        if ((iVar5 == 0) || (piVar8 == NULL)) {\ncode_r0x100096bd:\n            fcn.1000cc6a();\n            pcVar4 = swi(3);\n            iVar7 = (*pcVar4)();\n            return iVar7;\n        }\n        *piVar8 = iVar5;\ncode_r0x1000964b:\n        iVar5 = fcn.1000a60c(iVar5, puVar3 + 8);\n        *piVar8 = iVar5;\n    }\n    else {\n        iVar5 = *(unaff_EBP + 8);\n        if ((uVar2 & 8) != 0) {\n            iVar5 = *(iVar5 + 0x18);\n            goto code_r0x100095fb;\n        }\n        if ((*puVar3 & 1) != 0) {\n            if ((*(iVar5 + 0x18) == 0) || (piVar8 == NULL)) goto code_r0x100096bd;\n            fcn.1000a880(piVar8, *(iVar5 + 0x18), *(puVar3 + 0x14));\n            if ((*(puVar3 + 0x14) != 4) || (*piVar8 == 0)) goto code_r0x10009697;\n            iVar5 = *piVar8;\n            goto code_r0x1000964b;\n        }\n        if (*(puVar3 + 0x18) == 0) {\n            if ((*(iVar5 + 0x18) == 0) || (piVar8 == NULL)) goto code_r0x100096bd;\n            uVar9 = *(puVar3 + 0x14);\n            uVar6 = fcn.1000a60c(*(iVar5 + 0x18), puVar3 + 8);\n            fcn.1000a880(piVar8, uVar6, uVar9);\n        }\n        else {\n            if ((*(iVar5 + 0x18) == 0) || (piVar8 == NULL)) goto code_r0x100096bd;\n            iVar7 = ((*puVar3 & 4) != 0) + 1;\n            *(unaff_EBP + -0x20) = iVar7;\n        }\n    }\ncode_r0x10009697:\n    *(unaff_EBP + -4) = 0xfffffffe;\ncode_r0x100096ad:\n    *in_FS_OFFSET = *(unaff_EBP + -0x10);\n    return iVar7;\n}\n",
        "token_count": 1034
    },
    "1000a1c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.1000a1c0(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    int32_t iVar1;\n    uint arg_10h_00;\n    code *pcVar2;\n    int32_t arg_10h_01;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint *in_FS_OFFSET;\n    uint var_20h;\n    uint var_1ch;\n    uint var_10h;\n    uint var_4h;\n    \n    fcn.10001eb0(0x1007f1d0, 0x10);\n    arg_10h_01 = fcn.1000a4fd(*(unaff_EBP + 8), *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n    *(unaff_EBP + -0x1c) = arg_10h_01;\n    iVar3 = fcn.10008454();\n    *(iVar3 + 0x18) = *(iVar3 + 0x18) + 1;\n    *(unaff_EBP + -4) = 0;\n    while (arg_10h_01 != *(unaff_EBP + 0x14)) {\n        if ((arg_10h_01 < 0) || (iVar3 = *(unaff_EBP + 0x10),  *(iVar3 + 4) <= arg_10h_01)) goto code_r0x1000a2a2;\n        iVar1 = *(iVar3 + 8);\n        arg_10h_00 = *(iVar1 + arg_10h_01 * 8);\n        *(unaff_EBP + -0x20) = arg_10h_00;\n        *(unaff_EBP + -4) = 1;\n        if (*(iVar1 + 4 + arg_10h_01 * 8) != 0) {\n            fcn.1000a51a(*(unaff_EBP + 8), iVar3, arg_10h_00);\n            fcn.1000a450(*(*(iVar3 + 8) + 4 + arg_10h_01 * 8), *(unaff_EBP + 8), 0x103);\n        }\n        *(unaff_EBP + -4) = 0;\n        arg_10h_01 = *(unaff_EBP + -0x20);\n        *(unaff_EBP + -0x1c) = arg_10h_01;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.1000a28e();\n    if (arg_10h_01 == *(unaff_EBP + 0x14)) {\n        fcn.1000a51a(*(unaff_EBP + 8), *(unaff_EBP + 0x10), arg_10h_01);\n        *in_FS_OFFSET = *(unaff_EBP + -0x10);\n        return;\n    }\ncode_r0x1000a2a2:\n    fcn.1000cc6a();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 740
    },
    "1000a28e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.1000a28e(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.10008454();\n    if (0 < *(iVar1 + 0x18)) {\n        iVar1 = fcn.10008454();\n        *(iVar1 + 0x18) = *(iVar1 + 0x18) + -1;\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "10009c7b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.10009c7b(uint8_t *arg_8h, uint8_t *arg_ch, uint8_t *arg_10h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint uVar6;\n    bool bVar7;\n    \n    iVar2 = *(arg_8h + 4);\n    if (((iVar2 == 0) || (puVar5 = iVar2 + 8,  *puVar5 == 0)) || (((*arg_8h & 0x80) != 0 && ((*arg_ch & 0x10) != 0)))) {\n        uVar6 = 1;\n    }\n    else {\n        uVar6 = 0;\n        if (iVar2 != *(arg_ch + 4)) {\n            puVar3 = *(arg_ch + 4) + 8;\n            do {\n                uVar1 = *puVar5;\n                bVar7 = uVar1 < *puVar3;\n                if (uVar1 != *puVar3) {\ncode_r0x10009ccc:\n                    uVar4 = -bVar7 | 1;\n                    goto code_r0x10009cd1;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = puVar5[1];\n                bVar7 = uVar1 < puVar3[1];\n                if (uVar1 != puVar3[1]) goto code_r0x10009ccc;\n                puVar5 = puVar5 + 2;\n                puVar3 = puVar3 + 2;\n            } while (uVar1 != 0);\n            uVar4 = 0;\ncode_r0x10009cd1:\n            if (uVar4 != 0) {\n                return 0;\n            }\n        }\n        if ((((*arg_ch & 2) == 0) || ((*arg_8h & 8) != 0)) &&\n           ((((*arg_10h & 1) == 0 || ((*arg_8h & 1) != 0)) && (((*arg_10h & 2) == 0 || ((*arg_8h & 2) != 0)))))) {\n            uVar6 = 1;\n        }\n    }\n    return uVar6;\n}\n",
        "token_count": 529
    },
    "1000bf8f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.1000bf8f(int32_t arg_8h)\n\n{\n    uint *puVar1;\n    int32_t *piVar2;\n    char *arg_8h_00;\n    int32_t iVar3;\n    int32_t *piVar4;\n    uint var_ch;\n    int32_t *var_8h;\n    int32_t var_4h;\n    \n    if ((arg_8h == 2) || (arg_8h == 1)) {\n        fcn.1001b86a();\n        iVar3 = 0;\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, 0x10081d58, 0x104);\n        *0x100822f0 = 0x10081d58;\n        if ((*0x100822e8 == NULL) || (arg_8h_00 = *0x100822e8,  **0x100822e8 == '\\0')) {\n            arg_8h_00 = 0x10081d58;\n        }\n        var_4h = 0;\n        var_ch = 0;\n        fcn.1000bb9f(arg_8h_00, 0, 0, &var_4h, &var_ch);\n        piVar2 = fcn.1000bf3a(var_4h, var_ch, 1);\n        piVar4 = piVar2;\n        if (piVar2 == NULL) {\n            puVar1 = fcn.10016fba();\n            iVar3 = 0xc;\n            *puVar1 = 0xc;\n        }\n        else {\n            fcn.1000bb9f(arg_8h_00, piVar2, piVar2 + var_4h, &var_4h, &var_ch);\n            if (arg_8h == 1) {\n                *0x100822dc = var_4h + -1;\n                piVar4 = NULL;\n                *0x100822e0 = piVar2;\n            }\n            else {\n                var_8h = NULL;\n                iVar3 = fcn.1001b37a(piVar2, &var_8h);\n                piVar2 = var_8h;\n                if (iVar3 == 0) {\n                    *0x100822dc = 0;\n                    iVar3 = *var_8h;\n                    while (iVar3 != 0) {\n                        var_8h = var_8h + 1;\n                        *0x100822dc = *0x100822dc + 1;\n                        iVar3 = *var_8h;\n                    }\n                    var_8h = NULL;\n                    iVar3 = 0;\n                    *0x100822e0 = piVar2;\n                }\n                fcn.1001a8c5(var_8h);\n                var_8h = NULL;\n            }\n        }\n        fcn.1001a8c5(piVar4);\n    }\n    else {\n        puVar1 = fcn.10016fba();\n        iVar3 = 0x16;\n        *puVar1 = 0x16;\n        fcn.1001a732();\n    }\n    return iVar3;\n}\n",
        "token_count": 705
    },
    "1000c049": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.1000c049(void)\n\n{\n    int32_t arg_8h;\n    int32_t arg_8h_00;\n    uint uVar1;\n    \n    if (*0x1008206c != 0) {\n        return 0;\n    }\n    fcn.1001b86a();\n    arg_8h = fcn.1001c0b4();\n    if (arg_8h == 0) {\n        uVar1 = 0xffffffff;\n    }\n    else {\n        arg_8h_00 = fcn.1000c171(arg_8h);\n        if (arg_8h_00 == 0) {\n            uVar1 = 0xffffffff;\n        }\n        else {\n            *0x10082078 = arg_8h_00;\n            fcn.1000c610(arg_8h_00);\n            uVar1 = 0;\n        }\n        fcn.1001a8c5(0);\n    }\n    fcn.1001a8c5(arg_8h);\n    return uVar1;\n}\n",
        "token_count": 237
    },
    "1000d180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.1000d180(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    if ((arg_10h == 0) || (arg_14h == 0)) {\n        puVar1 = fcn.10016fba();\n        *puVar1 = 0x16;\n        fcn.1001a732();\n        uVar2 = 0xffffffff;\n    }\n    else {\n        var_14h = &arg_10h;\n        var_10h = &arg_18h;\n        var_ch = &arg_8h;\n        var_8h = &arg_14h;\n        var_4h = &arg_1ch;\n        uVar2 = fcn.1000d158(arg_10h, &var_14h);\n    }\n    return uVar2;\n}\n",
        "token_count": 263
    },
    "1000d1d9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.1000d1d9(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    if ((arg_10h == 0) || (arg_14h == 0)) {\n        puVar1 = fcn.10016fba();\n        *puVar1 = 0x16;\n        fcn.1001a732();\n        uVar2 = 0xffffffff;\n    }\n    else {\n        var_14h = &arg_10h;\n        var_10h = &arg_18h;\n        var_ch = &arg_8h;\n        var_8h = &arg_14h;\n        var_4h = &arg_1ch;\n        uVar2 = fcn.1000d090(arg_10h, &var_14h);\n    }\n    return uVar2;\n}\n",
        "token_count": 265
    },
    "1000d232": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.1000d232(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    if ((arg_10h == 0) || (arg_14h == 0)) {\n        puVar1 = fcn.10016fba();\n        *puVar1 = 0x16;\n        fcn.1001a732();\n        uVar2 = 0xffffffff;\n    }\n    else {\n        var_14h = &arg_10h;\n        var_10h = &arg_18h;\n        var_ch = &arg_8h;\n        var_8h = &arg_14h;\n        var_4h = &arg_1ch;\n        uVar2 = fcn.1000d0b8(arg_10h, &var_14h);\n    }\n    return uVar2;\n}\n",
        "token_count": 265
    },
    "1000d28b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.1000d28b(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    if ((arg_10h == 0) || (arg_14h == 0)) {\n        puVar1 = fcn.10016fba();\n        *puVar1 = 0x16;\n        fcn.1001a732();\n        uVar2 = 0xffffffff;\n    }\n    else {\n        var_14h = &arg_10h;\n        var_10h = &arg_18h;\n        var_ch = &arg_8h;\n        var_8h = &arg_14h;\n        var_4h = &arg_1ch;\n        uVar2 = fcn.1000d130(arg_10h, &var_14h);\n    }\n    return uVar2;\n}\n",
        "token_count": 264
    },
    "1000d2e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.1000d2e4(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    if ((arg_10h == 0) || (arg_14h == 0)) {\n        puVar1 = fcn.10016fba();\n        *puVar1 = 0x16;\n        fcn.1001a732();\n        uVar2 = 0xffffffff;\n    }\n    else {\n        var_14h = &arg_10h;\n        var_10h = &arg_18h;\n        var_ch = &arg_8h;\n        var_8h = &arg_14h;\n        var_4h = &arg_1ch;\n        uVar2 = fcn.1000d108(arg_10h, &var_14h);\n    }\n    return uVar2;\n}\n",
        "token_count": 265
    },
    "1000d33d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.1000d33d(uint arg_8h, uint noname_1, int32_t arg_10h, int32_t arg_14h, uint arg_18h, uint arg_1ch)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *var_14h;\n    uint *var_10h;\n    uint *var_ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    if ((arg_10h == 0) || (arg_14h == 0)) {\n        puVar1 = fcn.10016fba();\n        *puVar1 = 0x16;\n        fcn.1001a732();\n        uVar2 = 0xffffffff;\n    }\n    else {\n        var_14h = &arg_10h;\n        var_10h = &arg_18h;\n        var_ch = &arg_8h;\n        var_8h = &arg_14h;\n        var_4h = &arg_1ch;\n        uVar2 = fcn.1000d0e0(arg_10h, &var_14h);\n    }\n    return uVar2;\n}\n",
        "token_count": 266
    },
    "1000d5a2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.1000d5a2(uint32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_stack_fffffb5c;\n    int32_t var_484h;\n    uint var_480h;\n    uint var_478h;\n    uint32_t var_474h;\n    uint *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x10081004 ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        puVar1 = fcn.10016fba();\n        *puVar1 = 0x16;\n        fcn.1001a732();\n        goto code_r0x1000d6f3;\n    }\n    fcn.1000b094(arg_1ch);\n    puVar1 = var_460h;\n    var_474h = arg_8h & 2;\n    var_470h = var_460h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if ((var_474h != 0) || (var_464h = 0,  var_460h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.1000f238(&var_460h, arg_8h, arg_ch, arg_18h, &var_480h, arg_20h);\n    iVar2 = fcn.10010191();\n    if (puVar1 != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if (var_474h == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h != arg_14h) goto code_r0x1000d6cb;\ncode_r0x1000d718:\n                    *(puVar1 + arg_14h + -1) = 0;\n                }\n            }\n            else if (arg_14h != 0) {\n                if (-1 < iVar2) {\n                    if (var_468h == arg_14h) goto code_r0x1000d718;\n                    goto code_r0x1000d6cb;\n                }\n                *puVar1 = 0;\n            }\n        }\n        else if (((arg_14h != 0) || (iVar2 == 0)) && (var_468h != arg_14h)) {\ncode_r0x1000d6cb:\n            *(puVar1 + var_468h) = 0;\n        }\n    }\n    fcn.1000f36f();\n    in_stack_fffffb5c = arg_18h;\n    if (var_478h != '\\0') {\n        *(var_484h + 0x350) = *(var_484h + 0x350) & 0xfffffffd;\n    }\ncode_r0x1000d6f3:\n    fcn.10001112(in_stack_fffffb5c);\n    return;\n}\n",
        "token_count": 809
    },
    "1000d71e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.1000d71e(uint32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_stack_fffffb5c;\n    int32_t var_484h;\n    uint var_480h;\n    uint var_478h;\n    uint32_t var_474h;\n    uint *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x10081004 ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        puVar1 = fcn.10016fba();\n        *puVar1 = 0x16;\n        fcn.1001a732();\n        goto code_r0x1000d875;\n    }\n    fcn.1000b094(arg_1ch);\n    puVar1 = var_460h;\n    var_474h = arg_8h & 2;\n    var_470h = var_460h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if ((var_474h != 0) || (var_464h = 0,  var_460h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.1000f29c(&var_460h, arg_8h, arg_ch, arg_18h, &var_480h, arg_20h);\n    iVar2 = fcn.100108e1();\n    if (puVar1 != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if (var_474h == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h != arg_14h) goto code_r0x1000d84a;\ncode_r0x1000d89a:\n                    *(puVar1 + arg_14h * 2 + -2) = 0;\n                }\n            }\n            else if (arg_14h != 0) {\n                if (-1 < iVar2) {\n                    if (var_468h == arg_14h) goto code_r0x1000d89a;\n                    goto code_r0x1000d84a;\n                }\n                *puVar1 = 0;\n            }\n        }\n        else if (((arg_14h != 0) || (iVar2 == 0)) && (var_468h != arg_14h)) {\ncode_r0x1000d84a:\n            *(puVar1 + var_468h * 2) = 0;\n        }\n    }\n    fcn.1000f36f();\n    in_stack_fffffb5c = arg_18h;\n    if (var_478h != '\\0') {\n        *(var_484h + 0x350) = *(var_484h + 0x350) & 0xfffffffd;\n    }\ncode_r0x1000d875:\n    fcn.10001112(in_stack_fffffb5c);\n    return;\n}\n",
        "token_count": 814
    },
    "1000dc26": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.1000dc26(uint32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_stack_fffffb5c;\n    int32_t var_484h;\n    uint var_480h;\n    uint var_478h;\n    uint32_t var_474h;\n    uint *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x10081004 ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        puVar1 = fcn.10016fba();\n        *puVar1 = 0x16;\n        fcn.1001a732();\n        goto code_r0x1000dd77;\n    }\n    fcn.1000b094(arg_1ch);\n    puVar1 = var_460h;\n    var_474h = arg_8h & 2;\n    var_470h = var_460h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if ((var_474h != 0) || (var_464h = 0,  var_460h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.1000f238(&var_460h, arg_8h, arg_ch, arg_18h, &var_480h, arg_20h);\n    iVar2 = fcn.10010415();\n    if (puVar1 != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if (var_474h == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h != arg_14h) goto code_r0x1000dd4f;\ncode_r0x1000dd9c:\n                    *(puVar1 + arg_14h + -1) = 0;\n                }\n            }\n            else if (arg_14h != 0) {\n                if (-1 < iVar2) {\n                    if (var_468h == arg_14h) goto code_r0x1000dd9c;\n                    goto code_r0x1000dd4f;\n                }\n                *puVar1 = 0;\n            }\n        }\n        else if (((arg_14h != 0) || (iVar2 == 0)) && (var_468h != arg_14h)) {\ncode_r0x1000dd4f:\n            *(puVar1 + var_468h) = 0;\n        }\n    }\n    fcn.1000f36f();\n    in_stack_fffffb5c = arg_18h;\n    if (var_478h != '\\0') {\n        *(var_484h + 0x350) = *(var_484h + 0x350) & 0xfffffffd;\n    }\ncode_r0x1000dd77:\n    fcn.10001112(in_stack_fffffb5c);\n    return;\n}\n",
        "token_count": 805
    },
    "1000dda2": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl\nfcn.1000dda2(uint32_t arg_8h, uint arg_ch, uint *arg_10h, int32_t arg_14h, int32_t arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    int32_t in_stack_fffffb5c;\n    int32_t var_484h;\n    uint var_480h;\n    uint var_478h;\n    uint32_t var_474h;\n    uint *var_470h;\n    int32_t var_46ch;\n    int32_t var_468h;\n    uint var_464h;\n    uint *var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x10081004 ^ &stack0xfffffffc;\n    var_460h = arg_10h;\n    if ((arg_18h == 0) || ((arg_14h != 0 && (arg_10h == NULL)))) {\n        puVar1 = fcn.10016fba();\n        *puVar1 = 0x16;\n        fcn.1001a732();\n        goto code_r0x1000def9;\n    }\n    fcn.1000b094(arg_1ch);\n    puVar1 = var_460h;\n    var_474h = arg_8h & 2;\n    var_470h = var_460h;\n    var_46ch = arg_14h;\n    var_468h = 0;\n    if ((var_474h != 0) || (var_464h = 0,  var_460h == NULL)) {\n        var_464h = 1;\n    }\n    var_460h = &var_470h;\n    fcn.1000f29c(&var_460h, arg_8h, arg_ch, arg_18h, &var_480h, arg_20h);\n    iVar2 = fcn.10010b71();\n    if (puVar1 != NULL) {\n        if ((arg_8h & 1) == 0) {\n            if (var_474h == 0) {\n                if (arg_14h != 0) {\n                    if (var_468h != arg_14h) goto code_r0x1000dece;\ncode_r0x1000df1e:\n                    *(puVar1 + arg_14h * 2 + -2) = 0;\n                }\n            }\n            else if (arg_14h != 0) {\n                if (-1 < iVar2) {\n                    if (var_468h == arg_14h) goto code_r0x1000df1e;\n                    goto code_r0x1000dece;\n                }\n                *puVar1 = 0;\n            }\n        }\n        else if (((arg_14h != 0) || (iVar2 == 0)) && (var_468h != arg_14h)) {\ncode_r0x1000dece:\n            *(puVar1 + var_468h * 2) = 0;\n        }\n    }\n    fcn.1000f36f();\n    in_stack_fffffb5c = arg_18h;\n    if (var_478h != '\\0') {\n        *(var_484h + 0x350) = *(var_484h + 0x350) & 0xfffffffd;\n    }\ncode_r0x1000def9:\n    fcn.10001112(in_stack_fffffb5c);\n    return;\n}\n",
        "token_count": 810
    },
    "1000e0c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.1000e0c4(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        cVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        iVar2 = *(in_ECX + 0xaa8);\n        if ((iVar2 < 0) || (99 < iVar2)) {\n            puVar4 = fcn.10016fba();\n            *puVar4 = 0x16;\n            uVar3 = fcn.1001a732();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.10014710(in_ECX + 0x464 + iVar2 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        cVar1 = **(in_ECX + 0x46c + iVar2 * 0x10);\n    }\n    *arg_8h = cVar1;\n    arg_8h[1] = cVar1 >> 0x1f;\n    return CONCAT31(cVar1 >> 7, 1);\n}\n",
        "token_count": 361
    },
    "1000e143": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.1000e143(int32_t *arg_8h)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        cVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        iVar2 = *(in_ECX + 0xaa8);\n        if ((iVar2 < 0) || (99 < iVar2)) {\n            puVar4 = fcn.10016fba();\n            *puVar4 = 0x16;\n            uVar3 = fcn.1001a732();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.1001475b(in_ECX + 0x464 + iVar2 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        cVar1 = **(in_ECX + 0x46c + iVar2 * 0x10);\n    }\n    *arg_8h = cVar1;\n    arg_8h[1] = cVar1 >> 0x1f;\n    return CONCAT31(cVar1 >> 7, 1);\n}\n",
        "token_count": 360
    },
    "1000e1e1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.1000e1e1(uint32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        uVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        iVar2 = *(in_ECX + 0xaa8);\n        if ((iVar2 < 0) || (99 < iVar2)) {\n            puVar4 = fcn.10016fba();\n            *puVar4 = 0x16;\n            uVar3 = fcn.1001a732();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.10014710(in_ECX + 0x464 + iVar2 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        uVar1 = **(in_ECX + 0x46c + iVar2 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return 1;\n}\n",
        "token_count": 347
    },
    "1000e260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.1000e260(uint32_t *arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        uVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        iVar2 = *(in_ECX + 0xaa8);\n        if ((iVar2 < 0) || (99 < iVar2)) {\n            puVar4 = fcn.10016fba();\n            *puVar4 = 0x16;\n            uVar3 = fcn.1001a732();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.1001475b(in_ECX + 0x464 + iVar2 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        uVar1 = **(in_ECX + 0x46c + iVar2 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return 1;\n}\n",
        "token_count": 346
    },
    "1000e2fe": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.1000e2fe(int32_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        iVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        iVar2 = *(in_ECX + 0xaa8);\n        if ((iVar2 < 0) || (99 < iVar2)) {\n            puVar4 = fcn.10016fba();\n            *puVar4 = 0x16;\n            uVar3 = fcn.1001a732();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.10014710(in_ECX + 0x464 + iVar2 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        iVar1 = **(in_ECX + 0x46c + iVar2 * 0x10);\n    }\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 357
    },
    "1000e37d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.1000e37d(int32_t *arg_8h)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        iVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        iVar2 = *(in_ECX + 0xaa8);\n        if ((iVar2 < 0) || (99 < iVar2)) {\n            puVar4 = fcn.10016fba();\n            *puVar4 = 0x16;\n            uVar3 = fcn.1001a732();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.1001475b(in_ECX + 0x464 + iVar2 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        iVar1 = **(in_ECX + 0x46c + iVar2 * 0x10);\n    }\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 358
    },
    "1000e41b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.1000e41b(uchar *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        iVar1 = *(in_ECX + 0xaa8);\n        if ((iVar1 < 0) || (99 < iVar1)) {\n            puVar3 = fcn.10016fba();\n            *puVar3 = 0x16;\n            fcn.1001a732();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar2 = fcn.10014710(in_ECX + 0x464 + iVar1 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar2;\n        }\n        *arg_8h = **(in_ECX + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 304
    },
    "1000e4b3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.1000e4b3(uint32_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        uVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        iVar2 = *(in_ECX + 0xaa8);\n        if ((iVar2 < 0) || (99 < iVar2)) {\n            puVar4 = fcn.10016fba();\n            *puVar4 = 0x16;\n            uVar3 = fcn.1001a732();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.10014710(in_ECX + 0x464 + iVar2 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        uVar1 = **(in_ECX + 0x46c + iVar2 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return CONCAT31(uVar1 >> 8, 1);\n}\n",
        "token_count": 356
    },
    "1000e532": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.1000e532(uint32_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        uVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        iVar2 = *(in_ECX + 0xaa8);\n        if ((iVar2 < 0) || (99 < iVar2)) {\n            puVar4 = fcn.10016fba();\n            *puVar4 = 0x16;\n            uVar3 = fcn.1001a732();\n            return uVar3 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.1001475b(in_ECX + 0x464 + iVar2 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar3;\n        }\n        uVar1 = **(in_ECX + 0x46c + iVar2 * 0x10);\n    }\n    *arg_8h = uVar1;\n    arg_8h[1] = 0;\n    return CONCAT31(uVar1 >> 8, 1);\n}\n",
        "token_count": 355
    },
    "1000e5d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.1000e5d0(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        iVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        iVar1 = *(in_ECX + 0xaa8);\n        if ((iVar1 < 0) || (99 < iVar1)) {\n            puVar3 = fcn.10016fba();\n            *puVar3 = 0x16;\n            uVar2 = fcn.1001a732();\n            return uVar2 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar2 = fcn.10014710(in_ECX + 0x464 + iVar1 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar2;\n        }\n        iVar1 = **(in_ECX + 0x46c + iVar1 * 0x10);\n    }\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 351
    },
    "1000e64d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.1000e64d(int32_t *arg_8h)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        iVar1 = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        iVar1 = *(in_ECX + 0xaa8);\n        if ((iVar1 < 0) || (99 < iVar1)) {\n            puVar3 = fcn.10016fba();\n            *puVar3 = 0x16;\n            uVar2 = fcn.1001a732();\n            return uVar2 & 0xffffff00;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar2 = fcn.1001475b(in_ECX + 0x464 + iVar1 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar2;\n        }\n        iVar1 = **(in_ECX + 0x46c + iVar1 * 0x10);\n    }\n    *arg_8h = iVar1;\n    arg_8h[1] = iVar1 >> 0x1f;\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 351
    },
    "1000e6e8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.1000e6e8(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        uVar2 = *(*(in_ECX + 0x14) + -4);\n        arg_8h[1] = 0;\n        *arg_8h = uVar2;\n    }\n    else {\n        iVar1 = *(in_ECX + 0xaa8);\n        if ((iVar1 < 0) || (99 < iVar1)) {\n            puVar3 = fcn.10016fba();\n            *puVar3 = 0x16;\n            fcn.1001a732();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar2 = fcn.10014710(in_ECX + 0x464 + iVar1 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar2;\n        }\n        uVar2 = **(in_ECX + 0x46c + iVar1 * 0x10);\n        arg_8h[1] = 0;\n        *arg_8h = uVar2;\n    }\n    return 1;\n}\n",
        "token_count": 346
    },
    "1000e76e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.1000e76e(uint *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        uVar2 = *(*(in_ECX + 0x14) + -4);\n        arg_8h[1] = 0;\n        *arg_8h = uVar2;\n    }\n    else {\n        iVar1 = *(in_ECX + 0xaa8);\n        if ((iVar1 < 0) || (99 < iVar1)) {\n            puVar3 = fcn.10016fba();\n            *puVar3 = 0x16;\n            fcn.1001a732();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar2 = fcn.1001475b(in_ECX + 0x464 + iVar1 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar2;\n        }\n        uVar2 = **(in_ECX + 0x46c + iVar1 * 0x10);\n        arg_8h[1] = 0;\n        *arg_8h = uVar2;\n    }\n    return 1;\n}\n",
        "token_count": 346
    },
    "1000e928": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.1000e928(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n        uVar3 = 1;\n        uVar1 = *(*(in_ECX + 0x14) + -8);\n        arg_8h[1] = *(*(in_ECX + 0x14) + -4);\n        *arg_8h = uVar1;\n    }\n    else {\n        iVar2 = *(in_ECX + 0xaa8);\n        if ((iVar2 < 0) || (99 < iVar2)) {\n            puVar4 = fcn.10016fba();\n            *puVar4 = 0x16;\n            fcn.1001a732();\n            uVar3 = 0;\n        }\n        else if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.10014710(in_ECX + 0x464 + iVar2 * 0x10, 4, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n        }\n        else {\n            puVar4 = *(in_ECX + 0x46c + iVar2 * 0x10);\n            uVar3 = puVar4[1];\n            *arg_8h = *puVar4;\n            arg_8h[1] = uVar3;\n            uVar3 = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 394
    },
    "1000e9b6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.1000e9b6(uint *arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n        uVar3 = 1;\n        uVar1 = *(*(in_ECX + 0x14) + -8);\n        arg_8h[1] = *(*(in_ECX + 0x14) + -4);\n        *arg_8h = uVar1;\n    }\n    else {\n        iVar2 = *(in_ECX + 0xaa8);\n        if ((iVar2 < 0) || (99 < iVar2)) {\n            puVar4 = fcn.10016fba();\n            *puVar4 = 0x16;\n            fcn.1001a732();\n            uVar3 = 0;\n        }\n        else if (*(in_ECX + 0x458) == 1) {\n            uVar3 = fcn.1001475b(in_ECX + 0x464 + iVar2 * 0x10, 4, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n        }\n        else {\n            puVar4 = *(in_ECX + 0x46c + iVar2 * 0x10);\n            uVar3 = puVar4[1];\n            *arg_8h = *puVar4;\n            arg_8h[1] = uVar3;\n            uVar3 = 1;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 397
    },
    "1000eba0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.1000eba0(ushort *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        iVar1 = *(in_ECX + 0xaa8);\n        if ((iVar1 < 0) || (99 < iVar1)) {\n            puVar3 = fcn.10016fba();\n            *puVar3 = 0x16;\n            fcn.1001a732();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar2 = fcn.10014710(in_ECX + 0x464 + iVar1 * 0x10, 1, *(in_ECX + 0x31), *(in_ECX + 0x2c));\n            return uVar2;\n        }\n        *arg_8h = **(in_ECX + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 303
    },
    "1000ec22": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.1000ec22(ushort *arg_8h)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    \n    if (*(in_ECX + 0x45c) == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        *arg_8h = *(*(in_ECX + 0x14) + -4);\n    }\n    else {\n        iVar1 = *(in_ECX + 0xaa8);\n        if ((iVar1 < 0) || (99 < iVar1)) {\n            puVar3 = fcn.10016fba();\n            *puVar3 = 0x16;\n            fcn.1001a732();\n            return 0;\n        }\n        if (*(in_ECX + 0x458) == 1) {\n            uVar2 = fcn.1001475b(in_ECX + 0x464 + iVar1 * 0x10, 1, *(in_ECX + 0x32), *(in_ECX + 0x2c));\n            return uVar2;\n        }\n        *arg_8h = **(in_ECX + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 304
    },
    "1000f3b6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.1000f3b6(uint *param_1)\n\n{\n    uint arg_8h;\n    uint8_t uVar1;\n    uint arg_10h;\n    int32_t var_478h;\n    uint var_474h;\n    uint var_46ch;\n    uint32_t var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x10081004 ^ &stack0xfffffffc;\n    arg_8h = **param_1;\n    uVar1 = fcn.1001d499(arg_8h);\n    var_464h = var_464h & 0xffffff00 | uVar1;\n    fcn.1000b094(*param_1[1]);\n    var_460h = **param_1;\n    arg_10h = param_1[2][1];\n    fcn.1000f29c(&var_460h, *param_1[2], arg_10h, *param_1[3], &var_474h, *param_1[4]);\n    fcn.10010531();\n    fcn.1000f36f();\n    if (var_46ch != '\\0') {\n        *(var_478h + 0x350) = *(var_478h + 0x350) & 0xfffffffd;\n    }\n    fcn.1001d54e(var_464h, arg_8h);\n    fcn.10001112(arg_10h);\n    return;\n}\n",
        "token_count": 366
    },
    "1000f47c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.1000f47c(uint *param_1)\n\n{\n    uint arg_8h;\n    uint8_t uVar1;\n    uint *arg_10h;\n    uint32_t var_ae0h;\n    int32_t var_adch;\n    uint var_ad8h;\n    uint var_ad0h;\n    uint var_acch;\n    uint var_ac8h;\n    uint var_ac4h;\n    uint *var_ac0h;\n    uint var_abch;\n    uint var_ab8h;\n    uint var_ab4h;\n    uint var_aa8h;\n    uint var_a74h;\n    uint32_t var_4h;\n    \n    var_4h = *0x10081004 ^ &stack0xfffffffc;\n    arg_8h = **param_1;\n    uVar1 = fcn.1001d499(arg_8h);\n    var_ae0h = var_ae0h & 0xffffff00 | uVar1;\n    fcn.1000b094(*param_1[1]);\n    var_ab8h = **param_1;\n    var_abch = *param_1[4];\n    var_ac0h = &var_ad8h;\n    var_ac4h = *param_1[3];\n    var_acch = *param_1[2];\n    var_ac8h = param_1[2][1];\n    arg_10h = &var_ac4h;\n    fcn.1000cd8d(&var_ab8h, &var_acch, arg_10h, &var_ac0h, &var_abch);\n    var_aa8h = fcn.10016fba();\n    fcn.1000ff19();\n    fcn.1000f36f();\n    if (var_ad0h != '\\0') {\n        *(var_adch + 0x350) = *(var_adch + 0x350) & 0xfffffffd;\n    }\n    fcn.1001d54e(var_ae0h, arg_8h);\n    fcn.10001112(arg_10h);\n    return;\n}\n",
        "token_count": 473
    },
    "1000f57d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.1000f57d(uint *param_1)\n\n{\n    uint arg_8h;\n    uint8_t uVar1;\n    uint arg_10h;\n    int32_t var_478h;\n    uint var_474h;\n    uint var_46ch;\n    uint32_t var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x10081004 ^ &stack0xfffffffc;\n    arg_8h = **param_1;\n    uVar1 = fcn.1001d499(arg_8h);\n    var_464h = var_464h & 0xffffff00 | uVar1;\n    fcn.1000b094(*param_1[1]);\n    var_460h = **param_1;\n    arg_10h = param_1[2][1];\n    fcn.1000f29c(&var_460h, *param_1[2], arg_10h, *param_1[3], &var_474h, *param_1[4]);\n    fcn.100107c1();\n    fcn.1000f36f();\n    if (var_46ch != '\\0') {\n        *(var_478h + 0x350) = *(var_478h + 0x350) & 0xfffffffd;\n    }\n    fcn.1001d54e(var_464h, arg_8h);\n    fcn.10001112(arg_10h);\n    return;\n}\n",
        "token_count": 366
    },
    "1000f63a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.1000f63a(uint *param_1)\n\n{\n    uint arg_8h;\n    uint8_t uVar1;\n    uint arg_10h;\n    int32_t var_478h;\n    uint var_474h;\n    uint var_46ch;\n    uint32_t var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x10081004 ^ &stack0xfffffffc;\n    arg_8h = **param_1;\n    uVar1 = fcn.1001d499(arg_8h);\n    var_464h = var_464h & 0xffffff00 | uVar1;\n    fcn.1000b094(*param_1[1]);\n    var_460h = **param_1;\n    arg_10h = param_1[2][1];\n    fcn.1000f238(&var_460h, *param_1[2], arg_10h, *param_1[3], &var_474h, *param_1[4]);\n    fcn.10010075();\n    fcn.1000f36f();\n    if (var_46ch != '\\0') {\n        *(var_478h + 0x350) = *(var_478h + 0x350) & 0xfffffffd;\n    }\n    fcn.1001d54e(var_464h, arg_8h);\n    fcn.10001112(arg_10h);\n    return;\n}\n",
        "token_count": 364
    },
    "1000f6f7": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.1000f6f7(uint *param_1)\n\n{\n    uint arg_8h;\n    uint8_t uVar1;\n    uint *arg_10h;\n    uint32_t var_ae0h;\n    int32_t var_adch;\n    uint var_ad8h;\n    uint var_ad0h;\n    uint var_acch;\n    uint var_ac8h;\n    uint var_ac4h;\n    uint *var_ac0h;\n    uint var_abch;\n    uint var_ab8h;\n    uint var_ab4h;\n    uint var_aa8h;\n    uint var_a74h;\n    uint32_t var_4h;\n    \n    var_4h = *0x10081004 ^ &stack0xfffffffc;\n    arg_8h = **param_1;\n    uVar1 = fcn.1001d499(arg_8h);\n    var_ae0h = var_ae0h & 0xffffff00 | uVar1;\n    fcn.1000b094(*param_1[1]);\n    var_ab8h = **param_1;\n    var_abch = *param_1[4];\n    var_ac0h = &var_ad8h;\n    var_ac4h = *param_1[3];\n    var_acch = *param_1[2];\n    var_ac8h = param_1[2][1];\n    arg_10h = &var_ac4h;\n    fcn.1000ce2d(&var_ab8h, &var_acch, arg_10h, &var_ac0h, &var_abch);\n    var_aa8h = fcn.10016fba();\n    fcn.10010661();\n    fcn.1000f36f();\n    if (var_ad0h != '\\0') {\n        *(var_adch + 0x350) = *(var_adch + 0x350) & 0xfffffffd;\n    }\n    fcn.1001d54e(var_ae0h, arg_8h);\n    fcn.10001112(arg_10h);\n    return;\n}\n",
        "token_count": 473
    },
    "1000f7f8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.1000f7f8(uint *param_1)\n\n{\n    uint arg_8h;\n    uint8_t uVar1;\n    uint arg_10h;\n    int32_t var_478h;\n    uint var_474h;\n    uint var_46ch;\n    uint32_t var_464h;\n    uint var_460h;\n    uint var_45ch;\n    uint var_41ch;\n    uint32_t var_4h;\n    \n    var_4h = *0x10081004 ^ &stack0xfffffffc;\n    arg_8h = **param_1;\n    uVar1 = fcn.1001d499(arg_8h);\n    var_464h = var_464h & 0xffffff00 | uVar1;\n    fcn.1000b094(*param_1[1]);\n    var_460h = **param_1;\n    arg_10h = param_1[2][1];\n    fcn.1000f238(&var_460h, *param_1[2], arg_10h, *param_1[3], &var_474h, *param_1[4]);\n    fcn.1000fdf1();\n    fcn.1000f36f();\n    if (var_46ch != '\\0') {\n        *(var_478h + 0x350) = *(var_478h + 0x350) & 0xfffffffd;\n    }\n    fcn.1001d54e(var_464h, arg_8h);\n    fcn.10001112(arg_10h);\n    return;\n}\n",
        "token_count": 366
    },
    "1000fad4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __cdecl fcn.1000fad4(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint *in_ECX;\n    char cVar5;\n    char cVar6;\n    bool bVar7;\n    uint var_8h;\n    uint var_1h;\n    \n    uVar1 = *(arg_8h + 1);\n    uVar4 = in_ECX & 0xffffff00 | uVar1;\n    cVar2 = arg_10h;\n    if ((uVar1 == 0x70) || (cVar2 == 'p')) {\n        bVar7 = (uVar1 == 0x70) == (cVar2 == 'p');\ncode_r0x1000fbf6:\n        return bVar7;\n    }\n    uVar3 = 0;\n    cVar5 = '\\0';\n    if ((uVar1 == 0x73) || (var_1h._0_1_ = '\\0',  uVar1 == 0x53)) {\n        var_1h._0_1_ = '\\x01';\n    }\n    if ((cVar2 == 's') || (cVar6 = cVar5,  cVar2 == 'S')) {\n        cVar6 = '\\x01';\n    }\n    if ((uVar1 == 99) || (uVar1 == 0x43)) {\n        cVar5 = '\\x01';\n    }\n    if ((cVar2 == 'c') || (cVar2 == 'C')) {\n        uVar3 = 1;\n    }\n    if (var_1h == '\\0') {\n        if (cVar6 != '\\0') goto code_r0x1000fbee;\n        if (cVar5 == '\\0') {\n            if (uVar3 == '\\0') {\n                cVar2 = fcn.1000ecf9(uVar4);\n                uVar3 = fcn.1000ecf9(arg_10h);\n                if (cVar2 == '\\0') {\n                    if (uVar3 == '\\0') {\n                        bVar7 = *arg_8h == arg_ch;\n                        goto code_r0x1000fbf6;\n                    }\n                }\n                else if ((cVar2 == uVar3) && (uVar3 = arg_14h == 9,  (arg_8h[3] == 9) == uVar3)) {\n                    uVar4 = fcn.10012fd0(arg_8h[3]);\n                    uVar3 = fcn.10012fd0(arg_14h);\n                    return uVar3 & 0xffffff00 | 1 - (uVar4 != uVar3);\n                }\n            }\n            goto code_r0x1000fbee;\n        }\n    }\n    else if (var_1h != cVar6) goto code_r0x1000fbee;\n    if (cVar5 == uVar3) {\n        cVar2 = fcn.1000edb8(*in_ECX, in_ECX[1], arg_10h, arg_14h);\n        uVar4 = fcn.1000edb8(*in_ECX, in_ECX[1], uVar4, arg_8h[3]);\n        return uVar4 & 0xffffff00 | uVar4 == cVar2;\n    }\ncode_r0x1000fbee:\n    return uVar3 & 0xffffff00;\n}\n",
        "token_count": 827
    },
    "1000fdf1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __thiscall\nfcn.1000fdf1(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7)\n\n{\n    uint arg_ch;\n    char cVar1;\n    uint *puVar2;\n    uint32_t arg_8h;\n    uint uVar3;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    cVar1 = fcn.100146d4();\n    if (cVar1 == '\\0') {\n        return 0xffffffff;\n    }\n    if (*(param_1 + 0x10) == 0) {\ncode_r0x1000fe16:\n        puVar2 = fcn.10016fba();\n        *puVar2 = 0x16;\n        fcn.1001a732();\n    }\n    else {\n        do {\n            *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n            if (*(param_1 + 0x450) == 2) {\n                return *(param_1 + 0x18);\n            }\n            *(param_1 + 0x38) = 0;\n            *(param_1 + 0x1c) = 0;\ncode_r0x1000febe:\n            cVar1 = **(param_1 + 0x10);\n            *(param_1 + 0x31) = cVar1;\n            if (cVar1 != '\\0') {\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n                if (*(param_1 + 0x18) < 0) goto code_r0x1000fed1;\n                arg_ch = *(param_1 + 0x1c);\n                arg_8h = *(param_1 + 0x31);\n                uVar3 = fcn.1000f989(arg_8h, arg_ch);\n                *(param_1 + 0x1c) = uVar3;\n    // switch table (8 cases) at 0x1000fef9\n                switch(uVar3) {\n                case 0:\n                    cVar1 = fcn.10010d76();\n                    break;\n                case 1:\n                    *(param_1 + 0x28) = 0xffffffff;\n                    *(param_1 + 0x24) = 0;\n                    *(param_1 + 0x30) = 0;\n                    *(param_1 + 0x20) = 0;\n                    *(param_1 + 0x2c) = 0;\n                    *(param_1 + 0x3c) = 0;\n                    goto code_r0x1000febe;\n                case 2:\n                    cVar1 = fcn.10010cfc();\n                    break;\n                case 3:\n                    cVar1 = fcn.10012ee1();\n                    break;\n                case 4:\n                    goto code_r0x1000fe98;\n                case 5:\n                    cVar1 = fcn.10011023();\n                    break;\n                case 6:\n                    cVar1 = fcn.100110e9();\n                    break;\n                case 7:\n                    cVar1 = fcn.10011c7d(arg_8h, arg_ch, arg_8h, unaff_ESI, unaff_retaddr, param_2, param_3, param_4, \n                                         param_5, param_6, param_7);\n                    break;\n                case 0xbad1abe1:\n                    goto code_r0x1000fef6;\n                default:\n                    goto code_r0x1000fe16;\n                }\n                if (cVar1 == '\\0') {\n                    return 0xffffffff;\n                }\n                goto code_r0x1000febe;\n            }\n            *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\ncode_r0x1000fed1:\n            cVar1 = fcn.100149a2();\n        } while (cVar1 != '\\0');\n    }\ncode_r0x1000fef6:\n    return 0xffffffff;\ncode_r0x1000fe98:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x1000febe;\n}\n",
        "token_count": 961
    },
    "10010075": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __thiscall\nfcn.10010075(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint32_t arg_8h;\n    uint uVar4;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    cVar1 = fcn.100146d4();\n    if (cVar1 == '\\0') {\n        return 0xffffffff;\n    }\n    if (*(param_1 + 0x10) == 0) {\ncode_r0x1001009a:\n        puVar2 = fcn.10016fba();\n        *puVar2 = 0x16;\n        fcn.1001a732();\ncode_r0x100100aa:\n        uVar3 = 0xffffffff;\n    }\n    else {\ncode_r0x10010155:\n        *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n        if (*(param_1 + 0x450) != 2) {\n            *(param_1 + 0x38) = 0;\n            *(param_1 + 0x1c) = 0;\ncode_r0x10010142:\n            cVar1 = **(param_1 + 0x10);\n            *(param_1 + 0x31) = cVar1;\n            if (cVar1 != '\\0') {\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n                if (*(param_1 + 0x18) < 0) goto code_r0x10010155;\n                uVar3 = *(param_1 + 0x1c);\n                arg_8h = *(param_1 + 0x31);\n                uVar4 = fcn.1000f9be(arg_8h, uVar3);\n                *(param_1 + 0x1c) = uVar4;\n    // switch table (8 cases) at 0x10010171\n                switch(uVar4) {\n                case 0:\n                    cVar1 = fcn.10010d76();\n                    break;\n                case 1:\n                    *(param_1 + 0x28) = 0xffffffff;\n                    *(param_1 + 0x24) = 0;\n                    *(param_1 + 0x30) = 0;\n                    *(param_1 + 0x20) = 0;\n                    *(param_1 + 0x2c) = 0;\n                    *(param_1 + 0x3c) = 0;\n                    goto code_r0x10010142;\n                case 2:\n                    cVar1 = fcn.10010cfc();\n                    break;\n                case 3:\n                    cVar1 = fcn.10012ee1();\n                    break;\n                case 4:\n                    goto code_r0x1001011c;\n                case 5:\n                    cVar1 = fcn.10011023();\n                    break;\n                case 6:\n                    cVar1 = fcn.100110e9();\n                    break;\n                case 7:\n                    cVar1 = fcn.10011c7d(arg_8h, uVar3, arg_8h, unaff_ESI, unaff_retaddr, param_2, param_3, param_4, \n                                         param_5, param_6, param_7);\n                    break;\n                case 0xbad1abe1:\n                    goto code_r0x100100aa;\n                default:\n                    goto code_r0x1001009a;\n                }\n                if (cVar1 == '\\0') goto code_r0x100100aa;\n                goto code_r0x10010142;\n            }\n            *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n            goto code_r0x10010155;\n        }\n        uVar3 = *(param_1 + 0x18);\n    }\n    return uVar3;\ncode_r0x1001011c:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x10010142;\n}\n",
        "token_count": 951
    },
    "10010191": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __thiscall\nfcn.10010191(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6, uint param_7)\n\n{\n    uint arg_ch;\n    char cVar1;\n    uint *puVar2;\n    uint32_t arg_8h;\n    uint uVar3;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    cVar1 = fcn.100146f5();\n    if (cVar1 == '\\0') {\n        return 0xffffffff;\n    }\n    if (*(param_1 + 0x10) == 0) {\ncode_r0x100101b6:\n        puVar2 = fcn.10016fba();\n        *puVar2 = 0x16;\n        fcn.1001a732();\n    }\n    else {\n        do {\n            *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n            if (*(param_1 + 0x450) == 2) {\n                return *(param_1 + 0x18);\n            }\n            *(param_1 + 0x38) = 0;\n            *(param_1 + 0x1c) = 0;\ncode_r0x1001025e:\n            cVar1 = **(param_1 + 0x10);\n            *(param_1 + 0x31) = cVar1;\n            if (cVar1 != '\\0') {\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n                if (*(param_1 + 0x18) < 0) goto code_r0x10010271;\n                arg_ch = *(param_1 + 0x1c);\n                arg_8h = *(param_1 + 0x31);\n                uVar3 = fcn.1000f989(arg_8h, arg_ch);\n                *(param_1 + 0x1c) = uVar3;\n    // switch table (8 cases) at 0x10010299\n                switch(uVar3) {\n                case 0:\n                    cVar1 = fcn.10010dc6();\n                    break;\n                case 1:\n                    *(param_1 + 0x28) = 0xffffffff;\n                    *(param_1 + 0x24) = 0;\n                    *(param_1 + 0x30) = 0;\n                    *(param_1 + 0x20) = 0;\n                    *(param_1 + 0x2c) = 0;\n                    *(param_1 + 0x3c) = 0;\n                    goto code_r0x1001025e;\n                case 2:\n                    cVar1 = fcn.10010cfc();\n                    break;\n                case 3:\n                    cVar1 = fcn.10012ee1();\n                    break;\n                case 4:\n                    goto code_r0x10010238;\n                case 5:\n                    cVar1 = fcn.10011023();\n                    break;\n                case 6:\n                    cVar1 = fcn.100113bb();\n                    break;\n                case 7:\n                    cVar1 = fcn.100120e6(arg_8h, arg_ch, arg_8h, unaff_ESI, unaff_retaddr, param_2, param_3, param_4, \n                                         param_5, param_6, param_7);\n                    break;\n                case 0xbad1abe1:\n                    goto code_r0x10010296;\n                default:\n                    goto code_r0x100101b6;\n                }\n                if (cVar1 == '\\0') {\n                    return 0xffffffff;\n                }\n                goto code_r0x1001025e;\n            }\n            *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\ncode_r0x10010271:\n            cVar1 = fcn.100149a2();\n        } while (cVar1 != '\\0');\n    }\ncode_r0x10010296:\n    return 0xffffffff;\ncode_r0x10010238:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x1001025e;\n}\n",
        "token_count": 951
    },
    "10010531": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.10010531(int32_t param_1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    cVar2 = fcn.100146f5();\n    if (cVar2 == '\\0') {\n        return 0xffffffff;\n    }\n    if (*(param_1 + 0x10) == 0) {\ncode_r0x10010556:\n        puVar3 = fcn.10016fba();\n        *puVar3 = 0x16;\n        fcn.1001a732();\n    }\n    else {\n        do {\n            *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n            if (*(param_1 + 0x450) == 2) {\n                return *(param_1 + 0x18);\n            }\n            *(param_1 + 0x38) = 0;\n            *(param_1 + 0x1c) = 0;\ncode_r0x100105ff:\n            iVar1 = **(param_1 + 0x10);\n            *(param_1 + 0x32) = iVar1;\n            if (iVar1 != 0) {\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n                if (*(param_1 + 0x18) < 0) goto code_r0x10010616;\n                uVar4 = fcn.1000f9f0(*(param_1 + 0x32), *(param_1 + 0x1c));\n                *(param_1 + 0x1c) = uVar4;\n    // switch table (8 cases) at 0x10010641\n                switch(uVar4) {\n                case 0:\n                    cVar2 = fcn.10010e16();\n                    break;\n                case 1:\n                    *(param_1 + 0x28) = 0xffffffff;\n                    *(param_1 + 0x24) = 0;\n                    *(param_1 + 0x30) = 0;\n                    *(param_1 + 0x20) = 0;\n                    *(param_1 + 0x2c) = 0;\n                    *(param_1 + 0x3c) = 0;\n                    goto code_r0x100105ff;\n                case 2:\n                    cVar2 = fcn.10010d39();\n                    break;\n                case 3:\n                    cVar2 = fcn.10012f4c();\n                    break;\n                case 4:\n                    goto code_r0x100105d9;\n                case 5:\n                    cVar2 = fcn.10011085();\n                    break;\n                case 6:\n                    cVar2 = fcn.1001168d();\n                    break;\n                case 7:\n                    cVar2 = fcn.1001254f();\n                    break;\n                case 0xbad1abe1:\n                    goto code_r0x1001063b;\n                default:\n                    goto code_r0x10010556;\n                }\n                if (cVar2 == '\\0') {\n                    return 0xffffffff;\n                }\n                goto code_r0x100105ff;\n            }\n            *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\ncode_r0x10010616:\n            cVar2 = fcn.100149a2();\n        } while (cVar2 != '\\0');\n    }\ncode_r0x1001063b:\n    return 0xffffffff;\ncode_r0x100105d9:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x100105ff;\n}\n",
        "token_count": 832
    },
    "100107c1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.100107c1(int32_t param_1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    cVar2 = fcn.100146f5();\n    if (cVar2 == '\\0') {\n        return 0xffffffff;\n    }\n    if (*(param_1 + 0x10) == 0) {\ncode_r0x100107e6:\n        puVar3 = fcn.10016fba();\n        *puVar3 = 0x16;\n        fcn.1001a732();\ncode_r0x100107f6:\n        uVar4 = 0xffffffff;\n    }\n    else {\ncode_r0x100108a6:\n        *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n        if (*(param_1 + 0x450) != 2) {\n            *(param_1 + 0x38) = 0;\n            *(param_1 + 0x1c) = 0;\ncode_r0x1001088f:\n            iVar1 = **(param_1 + 0x10);\n            *(param_1 + 0x32) = iVar1;\n            if (iVar1 != 0) {\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n                if (*(param_1 + 0x18) < 0) goto code_r0x100108a6;\n                uVar4 = fcn.1000fa27(*(param_1 + 0x32), *(param_1 + 0x1c));\n                *(param_1 + 0x1c) = uVar4;\n    // switch table (8 cases) at 0x100108c1\n                switch(uVar4) {\n                case 0:\n                    cVar2 = fcn.10010e16();\n                    break;\n                case 1:\n                    *(param_1 + 0x28) = 0xffffffff;\n                    *(param_1 + 0x24) = 0;\n                    *(param_1 + 0x30) = 0;\n                    *(param_1 + 0x20) = 0;\n                    *(param_1 + 0x2c) = 0;\n                    *(param_1 + 0x3c) = 0;\n                    goto code_r0x1001088f;\n                case 2:\n                    cVar2 = fcn.10010d39();\n                    break;\n                case 3:\n                    cVar2 = fcn.10012f4c();\n                    break;\n                case 4:\n                    goto code_r0x10010869;\n                case 5:\n                    cVar2 = fcn.10011085();\n                    break;\n                case 6:\n                    cVar2 = fcn.1001168d();\n                    break;\n                case 7:\n                    cVar2 = fcn.1001254f();\n                    break;\n                case 0xbad1abe1:\n                    goto code_r0x100107f6;\n                default:\n                    goto code_r0x100107e6;\n                }\n                if (cVar2 == '\\0') goto code_r0x100107f6;\n                goto code_r0x1001088f;\n            }\n            *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n            goto code_r0x100108a6;\n        }\n        uVar4 = *(param_1 + 0x18);\n    }\n    return uVar4;\ncode_r0x10010869:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x1001088f;\n}\n",
        "token_count": 835
    },
    "100108e1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.100108e1(int32_t param_1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    cVar2 = fcn.100146f5();\n    if (cVar2 == '\\0') {\n        return 0xffffffff;\n    }\n    if (*(param_1 + 0x10) == 0) {\ncode_r0x10010906:\n        puVar3 = fcn.10016fba();\n        *puVar3 = 0x16;\n        fcn.1001a732();\n    }\n    else {\n        do {\n            *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n            if (*(param_1 + 0x450) == 2) {\n                return *(param_1 + 0x18);\n            }\n            *(param_1 + 0x38) = 0;\n            *(param_1 + 0x1c) = 0;\ncode_r0x100109af:\n            iVar1 = **(param_1 + 0x10);\n            *(param_1 + 0x32) = iVar1;\n            if (iVar1 != 0) {\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n                if (*(param_1 + 0x18) < 0) goto code_r0x100109c6;\n                uVar4 = fcn.1000f9f0(*(param_1 + 0x32), *(param_1 + 0x1c));\n                *(param_1 + 0x1c) = uVar4;\n    // switch table (8 cases) at 0x100109f1\n                switch(uVar4) {\n                case 0:\n                    cVar2 = fcn.10010e66();\n                    break;\n                case 1:\n                    *(param_1 + 0x28) = 0xffffffff;\n                    *(param_1 + 0x24) = 0;\n                    *(param_1 + 0x30) = 0;\n                    *(param_1 + 0x20) = 0;\n                    *(param_1 + 0x2c) = 0;\n                    *(param_1 + 0x3c) = 0;\n                    goto code_r0x100109af;\n                case 2:\n                    cVar2 = fcn.10010d39();\n                    break;\n                case 3:\n                    cVar2 = fcn.10012f4c();\n                    break;\n                case 4:\n                    goto code_r0x10010989;\n                case 5:\n                    cVar2 = fcn.10011085();\n                    break;\n                case 6:\n                    cVar2 = fcn.10011985();\n                    break;\n                case 7:\n                    cVar2 = fcn.10012a18();\n                    break;\n                case 0xbad1abe1:\n                    goto code_r0x100109eb;\n                default:\n                    goto code_r0x10010906;\n                }\n                if (cVar2 == '\\0') {\n                    return 0xffffffff;\n                }\n                goto code_r0x100109af;\n            }\n            *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\ncode_r0x100109c6:\n            cVar2 = fcn.100149a2();\n        } while (cVar2 != '\\0');\n    }\ncode_r0x100109eb:\n    return 0xffffffff;\ncode_r0x10010989:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x100109af;\n}\n",
        "token_count": 831
    },
    "10010b71": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.10010b71(int32_t param_1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    cVar2 = fcn.100146f5();\n    if (cVar2 == '\\0') {\n        return 0xffffffff;\n    }\n    if (*(param_1 + 0x10) == 0) {\ncode_r0x10010b96:\n        puVar3 = fcn.10016fba();\n        *puVar3 = 0x16;\n        fcn.1001a732();\ncode_r0x10010ba6:\n        uVar4 = 0xffffffff;\n    }\n    else {\ncode_r0x10010c56:\n        *(param_1 + 0x450) = *(param_1 + 0x450) + 1;\n        if (*(param_1 + 0x450) != 2) {\n            *(param_1 + 0x38) = 0;\n            *(param_1 + 0x1c) = 0;\ncode_r0x10010c3f:\n            iVar1 = **(param_1 + 0x10);\n            *(param_1 + 0x32) = iVar1;\n            if (iVar1 != 0) {\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n                if (*(param_1 + 0x18) < 0) goto code_r0x10010c56;\n                uVar4 = fcn.1000fa27(*(param_1 + 0x32), *(param_1 + 0x1c));\n                *(param_1 + 0x1c) = uVar4;\n    // switch table (8 cases) at 0x10010c71\n                switch(uVar4) {\n                case 0:\n                    cVar2 = fcn.10010e66();\n                    break;\n                case 1:\n                    *(param_1 + 0x28) = 0xffffffff;\n                    *(param_1 + 0x24) = 0;\n                    *(param_1 + 0x30) = 0;\n                    *(param_1 + 0x20) = 0;\n                    *(param_1 + 0x2c) = 0;\n                    *(param_1 + 0x3c) = 0;\n                    goto code_r0x10010c3f;\n                case 2:\n                    cVar2 = fcn.10010d39();\n                    break;\n                case 3:\n                    cVar2 = fcn.10012f4c();\n                    break;\n                case 4:\n                    goto code_r0x10010c19;\n                case 5:\n                    cVar2 = fcn.10011085();\n                    break;\n                case 6:\n                    cVar2 = fcn.10011985();\n                    break;\n                case 7:\n                    cVar2 = fcn.10012a18();\n                    break;\n                case 0xbad1abe1:\n                    goto code_r0x10010ba6;\n                default:\n                    goto code_r0x10010b96;\n                }\n                if (cVar2 == '\\0') goto code_r0x10010ba6;\n                goto code_r0x10010c3f;\n            }\n            *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n            goto code_r0x10010c56;\n        }\n        uVar4 = *(param_1 + 0x18);\n    }\n    return uVar4;\ncode_r0x10010c19:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x10010c3f;\n}\n",
        "token_count": 840
    },
    "1001104b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.1001104b(int32_t param_1)\n\n{\n    uchar uVar1;\n    char cVar2;\n    \n    if (*(param_1 + 0x31) != '*') {\n        uVar1 = fcn.1000fd37(param_1 + 0x28);\n        return uVar1;\n    }\n    cVar2 = fcn.10014557();\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    cVar2 = fcn.10010ca0();\n    if ((cVar2 != '\\0') && (*(param_1 + 0x28) < 0)) {\n        *(param_1 + 0x28) = 0xffffffff;\n    }\n    return 1;\n}\n",
        "token_count": 170
    },
    "100110ae": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.100110ae(int32_t param_1)\n\n{\n    uchar uVar1;\n    char cVar2;\n    \n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar1 = fcn.1000fd93(param_1 + 0x28);\n        return uVar1;\n    }\n    cVar2 = fcn.1001460d();\n    if (cVar2 == '\\0') {\n        return 0;\n    }\n    cVar2 = fcn.10010ca0();\n    if ((cVar2 != '\\0') && (*(param_1 + 0x28) < 0)) {\n        *(param_1 + 0x28) = 0xffffffff;\n    }\n    return 1;\n}\n",
        "token_count": 174
    },
    "100110e9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.100110e9(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    char *pcVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    char cVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint arg_8h;\n    uint arg_ch;\n    uint uStack8;\n    \n    cVar4 = *(param_1 + 0x31);\n    if (cVar4 != 'F') {\n        if (cVar4 == 'N') {\n            if ((*param_1 & 8) == 0) {\n                param_1[7] = 8;\ncode_r0x10011121:\n                puVar5 = fcn.10016fba();\n                *puVar5 = 0x16;\n                fcn.1001a732();\n                return 0;\n            }\n        }\n        else {\n            if (param_1[0xb] != 0) goto code_r0x10011121;\n            if (cVar4 < 'k') {\n                if (cVar4 == 'j') {\n                    param_1[0xb] = 5;\n                }\n                else if (cVar4 == 'I') {\n                    pcVar1 = param_1[4];\n                    cVar4 = *pcVar1;\n                    if ((cVar4 == '3') && (pcVar1[1] == '2')) {\n                        param_1[0xb] = 10;\n                        param_1[4] = pcVar1 + 2;\n                    }\n                    else if ((cVar4 == '6') && (pcVar1[1] == '4')) {\n                        param_1[0xb] = 0xb;\n                        param_1[4] = pcVar1 + 2;\n                    }\n                    else if (((((cVar4 == 'd') || (cVar4 == 'i')) || (cVar4 == 'o')) ||\n                             ((cVar4 == 'u' || (cVar4 == 'x')))) || (cVar4 == 'X')) {\n                        param_1[0xb] = 9;\n                    }\n                }\n                else if (cVar4 == 'L') {\n                    param_1[0xb] = 8;\n                }\n                else if (cVar4 == 'T') {\n                    param_1[0xb] = 0xd;\n                }\n                else if (cVar4 == 'h') {\n                    if (*param_1[4] == 'h') {\n                        param_1[0xb] = 1;\n                        param_1[4] = param_1[4] + 1;\n                    }\n                    else {\n                        param_1[0xb] = 2;\n                    }\n                }\n            }\n            else if (cVar4 == 'l') {\n                if (*param_1[4] == 'l') {\n                    param_1[0xb] = 4;\n                    param_1[4] = param_1[4] + 1;\n                }\n                else {\n                    param_1[0xb] = 3;\n                }\n            }\n            else if (cVar4 == 't') {\n                param_1[0xb] = 7;\n            }\n            else if (cVar4 == 'w') {\n                param_1[0xb] = 0xc;\n            }\n            else if (cVar4 == 'z') {\n                param_1[0xb] = 6;\n            }\n        }\n        return 1;\n    }\n    if ((*param_1 & 8) != 0) {\n        return 1;\n    }\n    param_1[7] = 7;\n    iVar6 = 1;\n    cVar4 = *(param_1 + 0x31);\n    uStack8 = param_1;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x10011d2e:\n            param_1[8] = param_1[8] | 0x10;\n            goto code_r0x10011d32;\n        }\n        if ('X' < cVar4) {\n            if (cVar4 == 'Z') {\n                cVar4 = fcn.1001304a();\n                goto code_r0x10011cca;\n            }\n            if (cVar4 != 'a') {\n                if (cVar4 != 'c') {\n                    return 0;\n                }\ncode_r0x10011cee:\n                cVar4 = fcn.10013804(0);\n                goto code_r0x10011cca;\n            }\ncode_r0x10011d3e:\n            cVar4 = fcn.1001320e();\n            goto code_r0x10011cca;\n        }\n        if (cVar4 != 'X') {\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x10011cee;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x10011cc3;\n                }\n            }\n            goto code_r0x10011d3e;\n        }\n        arg_ch = 1;\ncode_r0x10011cda:\n        arg_8h = 0x10;\n    }\n    else {\n        if (cVar4 < 'q') {\n            if (cVar4 == 'p') {\n                cVar4 = fcn.1001410e();\n                goto code_r0x10011cca;\n            }\n            if (cVar4 < 'h') goto code_r0x10011d3e;\n            if (cVar4 != 'i') {\n                if (cVar4 == 'n') {\n                    cVar4 = fcn.10013f0b();\n                }\n                else {\n                    if (cVar4 != 'o') {\n                        return 0;\n                    }\n                    cVar4 = fcn.100140b1();\n                }\n                goto code_r0x10011cca;\n            }\n            goto code_r0x10011d2e;\n        }\n        if (cVar4 == 's') {\ncode_r0x10011cc3:\n            cVar4 = fcn.10014156();\n            goto code_r0x10011cca;\n        }\n        if (cVar4 != 'u') {\n            if (cVar4 != 'x') {\n                return 0;\n            }\n            arg_ch = 0;\n            goto code_r0x10011cda;\n        }\ncode_r0x10011d32:\n        arg_ch = 0;\n        arg_8h = 10;\n    }\n    cVar4 = fcn.10013ac5(arg_8h, arg_ch);\ncode_r0x10011cca:\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    if (*(param_1 + 0xc) != '\\0') {\n        return 1;\n    }\n    uVar2 = param_1[8];\n    uStack8 = (uStack8 >> 0x10 & 0xff00) << 0x10;\n    iVar7 = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        uStack8._1_3_ = uStack8 >> 8;\n        iVar7 = iVar6;\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                iVar7 = 0;\n                if ((uVar2 >> 1 & 1) != 0) {\n                    uStack8 = CONCAT31(uStack8._1_3_, 0x20);\n                    iVar7 = iVar6;\n                }\n            }\n            else {\n                uStack8 = CONCAT31(uStack8._1_3_, 0x2b);\n            }\n        }\n        else {\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2d);\n        }\n    }\n    cVar4 = *(param_1 + 0x31);\n    if (((cVar4 != 'x') && (cVar4 != 'X')) || ((uVar2 >> 5 & 1) == 0)) {\n        iVar6 = 0;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar6 != '\\0') || (bVar3)) {\n        *(&uStack8 + iVar7) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&uStack8 + iVar7 + 1) = (!bVar3 - 1U & 0xe0) + 0x78;\n        iVar7 = iVar7 + 2;\n    }\n    iVar6 = (param_1[9] - param_1[0xe]) - iVar7;\n    if ((uVar2 & 0xc) == 0) {\n        fcn.1000f04b(param_1 + 0x112, 0x20, iVar6, param_1 + 6);\n    }\n    fcn.10014eda(&uStack8, iVar7, param_1 + 6, param_1[3]);\n    arg_14h = param_1 + 6;\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.1000f04b(param_1 + 0x112, 0x30, iVar6, arg_14h);\n    }\n    fcn.10014c76(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.1000f04b(param_1 + 0x112, 0x20, iVar6, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 2295
    },
    "10011c7d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.10011c7d(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_14h;\n    uint32_t uVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_8h;\n    uint arg_ch;\n    int32_t var_4h;\n    \n    iVar4 = 1;\n    cVar3 = *(in_ECX + 0x31);\n    var_4h = in_ECX;\n    if (cVar3 < 'e') {\n        if (cVar3 == 'd') {\ncode_r0x10011d2e:\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x10;\n            goto code_r0x10011d32;\n        }\n        if ('X' < cVar3) {\n            if (cVar3 == 'Z') {\n                cVar3 = fcn.1001304a();\n                goto code_r0x10011cca;\n            }\n            if (cVar3 != 'a') {\n                if (cVar3 != 'c') {\n                    return 0;\n                }\ncode_r0x10011cee:\n                cVar3 = fcn.10013804(0);\n                goto code_r0x10011cca;\n            }\ncode_r0x10011d3e:\n            cVar3 = fcn.1001320e();\n            goto code_r0x10011cca;\n        }\n        if (cVar3 != 'X') {\n            if (cVar3 != 'A') {\n                if (cVar3 == 'C') goto code_r0x10011cee;\n                if (cVar3 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar3) {\n                    if (cVar3 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x10011cc3;\n                }\n            }\n            goto code_r0x10011d3e;\n        }\n        arg_ch = 1;\ncode_r0x10011cda:\n        arg_8h = 0x10;\n    }\n    else {\n        if (cVar3 < 'q') {\n            if (cVar3 == 'p') {\n                cVar3 = fcn.1001410e();\n                goto code_r0x10011cca;\n            }\n            if (cVar3 < 'h') goto code_r0x10011d3e;\n            if (cVar3 != 'i') {\n                if (cVar3 == 'n') {\n                    cVar3 = fcn.10013f0b();\n                }\n                else {\n                    if (cVar3 != 'o') {\n                        return 0;\n                    }\n                    cVar3 = fcn.100140b1();\n                }\n                goto code_r0x10011cca;\n            }\n            goto code_r0x10011d2e;\n        }\n        if (cVar3 == 's') {\ncode_r0x10011cc3:\n            cVar3 = fcn.10014156();\n            goto code_r0x10011cca;\n        }\n        if (cVar3 != 'u') {\n            if (cVar3 != 'x') {\n                return 0;\n            }\n            arg_ch = 0;\n            goto code_r0x10011cda;\n        }\ncode_r0x10011d32:\n        arg_ch = 0;\n        arg_8h = 10;\n    }\n    cVar3 = fcn.10013ac5(arg_8h, arg_ch);\ncode_r0x10011cca:\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    if (*(in_ECX + 0x30) != '\\0') {\n        return 1;\n    }\n    uVar1 = *(in_ECX + 0x20);\n    var_4h = var_4h._3_1_ << 0x18;\n    iVar5 = 0;\n    if ((uVar1 >> 4 & 1) != 0) {\n        iVar5 = iVar4;\n        if ((uVar1 >> 6 & 1) == 0) {\n            if ((uVar1 & 1) == 0) {\n                iVar5 = 0;\n                if ((uVar1 >> 1 & 1) != 0) {\n                    var_4h = CONCAT31(var_4h._1_3_, 0x20);\n                    iVar5 = iVar4;\n                }\n            }\n            else {\n                var_4h = CONCAT31(var_4h._1_3_, 0x2b);\n            }\n        }\n        else {\n            var_4h = CONCAT31(var_4h._1_3_, 0x2d);\n        }\n    }\n    cVar3 = *(in_ECX + 0x31);\n    if (((cVar3 != 'x') && (cVar3 != 'X')) || ((uVar1 >> 5 & 1) == 0)) {\n        iVar4 = 0;\n    }\n    if ((cVar3 == 'a') || (cVar3 == 'A')) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((iVar4 != '\\0') || (bVar2)) {\n        *(&var_4h + iVar5) = 0x30;\n        if ((cVar3 == 'X') || (cVar3 == 'A')) {\n            bVar2 = true;\n        }\n        else {\n            bVar2 = false;\n        }\n        *(&var_4h + iVar5 + 1) = (!bVar2 - 1U & 0xe0) + 0x78;\n        iVar5 = iVar5 + 2;\n    }\n    iVar4 = (*(in_ECX + 0x24) - *(in_ECX + 0x38)) - iVar5;\n    if ((uVar1 & 0xc) == 0) {\n        fcn.1000f04b(in_ECX + 0x448, 0x20, iVar4, in_ECX + 0x18);\n    }\n    fcn.10014eda(&var_4h, iVar5, in_ECX + 0x18, *(in_ECX + 0xc));\n    arg_14h = in_ECX + 0x18;\n    if (((*(in_ECX + 0x20) >> 3 & 1) != 0) && ((*(in_ECX + 0x20) >> 2 & 1) == 0)) {\n        fcn.1000f04b(in_ECX + 0x448, 0x30, iVar4, arg_14h);\n    }\n    fcn.10014c76(0);\n    if ((-1 < *arg_14h) && ((*(in_ECX + 0x20) >> 2 & 1) != 0)) {\n        fcn.1000f04b(in_ECX + 0x448, 0x20, iVar4, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 1651
    },
    "10011252": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.10011252(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    char *pcVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    char cVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint arg_8h;\n    uint arg_ch;\n    uint uStack8;\n    \n    cVar4 = *(param_1 + 0x31);\n    if (cVar4 != 'F') {\n        if (cVar4 == 'N') {\n            if ((*param_1 & 8) == 0) {\n                param_1[7] = 8;\ncode_r0x1001128a:\n                puVar5 = fcn.10016fba();\n                *puVar5 = 0x16;\n                fcn.1001a732();\n                return 0;\n            }\n        }\n        else {\n            if (param_1[0xb] != 0) goto code_r0x1001128a;\n            if (cVar4 < 'k') {\n                if (cVar4 == 'j') {\n                    param_1[0xb] = 5;\n                }\n                else if (cVar4 == 'I') {\n                    pcVar1 = param_1[4];\n                    cVar4 = *pcVar1;\n                    if ((cVar4 == '3') && (pcVar1[1] == '2')) {\n                        param_1[0xb] = 10;\n                        param_1[4] = pcVar1 + 2;\n                    }\n                    else if ((cVar4 == '6') && (pcVar1[1] == '4')) {\n                        param_1[0xb] = 0xb;\n                        param_1[4] = pcVar1 + 2;\n                    }\n                    else if (((((cVar4 == 'd') || (cVar4 == 'i')) || (cVar4 == 'o')) ||\n                             ((cVar4 == 'u' || (cVar4 == 'x')))) || (cVar4 == 'X')) {\n                        param_1[0xb] = 9;\n                    }\n                }\n                else if (cVar4 == 'L') {\n                    param_1[0xb] = 8;\n                }\n                else if (cVar4 == 'T') {\n                    param_1[0xb] = 0xd;\n                }\n                else if (cVar4 == 'h') {\n                    if (*param_1[4] == 'h') {\n                        param_1[0xb] = 1;\n                        param_1[4] = param_1[4] + 1;\n                    }\n                    else {\n                        param_1[0xb] = 2;\n                    }\n                }\n            }\n            else if (cVar4 == 'l') {\n                if (*param_1[4] == 'l') {\n                    param_1[0xb] = 4;\n                    param_1[4] = param_1[4] + 1;\n                }\n                else {\n                    param_1[0xb] = 3;\n                }\n            }\n            else if (cVar4 == 't') {\n                param_1[0xb] = 7;\n            }\n            else if (cVar4 == 'w') {\n                param_1[0xb] = 0xc;\n            }\n            else if (cVar4 == 'z') {\n                param_1[0xb] = 6;\n            }\n        }\n        return 1;\n    }\n    if ((*param_1 & 8) != 0) {\n        return 1;\n    }\n    param_1[7] = 7;\n    iVar6 = 1;\n    cVar4 = *(param_1 + 0x31);\n    uStack8 = param_1;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x10011f5d:\n            param_1[8] = param_1[8] | 0x10;\n            goto code_r0x10011f61;\n        }\n        if ('X' < cVar4) {\n            if (cVar4 == 'Z') {\n                cVar4 = fcn.100130ad();\n                goto code_r0x10011ef9;\n            }\n            if (cVar4 != 'a') {\n                if (cVar4 != 'c') {\n                    return 0;\n                }\ncode_r0x10011f1d:\n                cVar4 = fcn.10013894(0);\n                goto code_r0x10011ef9;\n            }\ncode_r0x10011f6d:\n            cVar4 = fcn.10013368();\n            goto code_r0x10011ef9;\n        }\n        if (cVar4 != 'X') {\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x10011f1d;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x10011ef2;\n                }\n            }\n            goto code_r0x10011f6d;\n        }\n        arg_ch = 1;\ncode_r0x10011f09:\n        arg_8h = 0x10;\n    }\n    else {\n        if (cVar4 < 'q') {\n            if (cVar4 == 'p') {\n                cVar4 = fcn.10014126();\n                goto code_r0x10011ef9;\n            }\n            if (cVar4 < 'h') goto code_r0x10011f6d;\n            if (cVar4 != 'i') {\n                if (cVar4 == 'n') {\n                    cVar4 = fcn.10013f7f();\n                }\n                else {\n                    if (cVar4 != 'o') {\n                        return 0;\n                    }\n                    cVar4 = fcn.100140d0();\n                }\n                goto code_r0x10011ef9;\n            }\n            goto code_r0x10011f5d;\n        }\n        if (cVar4 == 's') {\ncode_r0x10011ef2:\n            cVar4 = fcn.100141c9();\n            goto code_r0x10011ef9;\n        }\n        if (cVar4 != 'u') {\n            if (cVar4 != 'x') {\n                return 0;\n            }\n            arg_ch = 0;\n            goto code_r0x10011f09;\n        }\ncode_r0x10011f61:\n        arg_ch = 0;\n        arg_8h = 10;\n    }\n    cVar4 = fcn.10013c0f(arg_8h, arg_ch);\ncode_r0x10011ef9:\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    cVar4 = fcn.10010cde();\n    if ((cVar4 == '\\0') && (*(param_1 + 0xc) == '\\0')) {\n        uVar2 = param_1[8];\n        uStack8 = (uStack8 >> 0x10 & 0xff00) << 0x10;\n        iVar7 = 0;\n        if ((uVar2 >> 4 & 1) != 0) {\n            uStack8._1_3_ = uStack8 >> 8;\n            iVar7 = iVar6;\n            if ((uVar2 >> 6 & 1) == 0) {\n                if ((uVar2 & 1) == 0) {\n                    iVar7 = 0;\n                    if ((uVar2 >> 1 & 1) != 0) {\n                        uStack8 = CONCAT31(uStack8._1_3_, 0x20);\n                        iVar7 = iVar6;\n                    }\n                }\n                else {\n                    uStack8 = CONCAT31(uStack8._1_3_, 0x2b);\n                }\n            }\n            else {\n                uStack8 = CONCAT31(uStack8._1_3_, 0x2d);\n            }\n        }\n        cVar4 = *(param_1 + 0x31);\n        if (((cVar4 != 'x') && (cVar4 != 'X')) || ((uVar2 >> 5 & 1) == 0)) {\n            iVar6 = 0;\n        }\n        if ((cVar4 == 'a') || (cVar4 == 'A')) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        if ((iVar6 != '\\0') || (bVar3)) {\n            *(&uStack8 + iVar7) = 0x30;\n            if ((cVar4 == 'X') || (cVar4 == 'A')) {\n                bVar3 = true;\n            }\n            else {\n                bVar3 = false;\n            }\n            *(&uStack8 + iVar7 + 1) = (!bVar3 - 1U & 0xe0) + 0x78;\n            iVar7 = iVar7 + 2;\n        }\n        iVar6 = (param_1[9] - param_1[0xe]) - iVar7;\n        if ((uVar2 & 0xc) == 0) {\n            fcn.1000f04b(param_1 + 0x112, 0x20, iVar6, param_1 + 6);\n        }\n        fcn.10014eda(&uStack8, iVar7, param_1 + 6, param_1[3]);\n        arg_14h = param_1 + 6;\n        if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n            fcn.1000f04b(param_1 + 0x112, 0x30, iVar6, arg_14h);\n        }\n        fcn.10014c76(0);\n        if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n            fcn.1000f04b(param_1 + 0x112, 0x20, iVar6, arg_14h);\n        }\n        return 1;\n    }\n    return 1;\n}\n",
        "token_count": 2328
    },
    "10011eac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.10011eac(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_14h;\n    uint32_t uVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_8h;\n    uint arg_ch;\n    int32_t var_4h;\n    \n    iVar4 = 1;\n    cVar3 = *(in_ECX + 0x31);\n    var_4h = in_ECX;\n    if (cVar3 < 'e') {\n        if (cVar3 == 'd') {\ncode_r0x10011f5d:\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x10;\n            goto code_r0x10011f61;\n        }\n        if ('X' < cVar3) {\n            if (cVar3 == 'Z') {\n                cVar3 = fcn.100130ad();\n                goto code_r0x10011ef9;\n            }\n            if (cVar3 != 'a') {\n                if (cVar3 != 'c') {\n                    return 0;\n                }\ncode_r0x10011f1d:\n                cVar3 = fcn.10013894(0);\n                goto code_r0x10011ef9;\n            }\ncode_r0x10011f6d:\n            cVar3 = fcn.10013368();\n            goto code_r0x10011ef9;\n        }\n        if (cVar3 != 'X') {\n            if (cVar3 != 'A') {\n                if (cVar3 == 'C') goto code_r0x10011f1d;\n                if (cVar3 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar3) {\n                    if (cVar3 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x10011ef2;\n                }\n            }\n            goto code_r0x10011f6d;\n        }\n        arg_ch = 1;\ncode_r0x10011f09:\n        arg_8h = 0x10;\n    }\n    else {\n        if (cVar3 < 'q') {\n            if (cVar3 == 'p') {\n                cVar3 = fcn.10014126();\n                goto code_r0x10011ef9;\n            }\n            if (cVar3 < 'h') goto code_r0x10011f6d;\n            if (cVar3 != 'i') {\n                if (cVar3 == 'n') {\n                    cVar3 = fcn.10013f7f();\n                }\n                else {\n                    if (cVar3 != 'o') {\n                        return 0;\n                    }\n                    cVar3 = fcn.100140d0();\n                }\n                goto code_r0x10011ef9;\n            }\n            goto code_r0x10011f5d;\n        }\n        if (cVar3 == 's') {\ncode_r0x10011ef2:\n            cVar3 = fcn.100141c9();\n            goto code_r0x10011ef9;\n        }\n        if (cVar3 != 'u') {\n            if (cVar3 != 'x') {\n                return 0;\n            }\n            arg_ch = 0;\n            goto code_r0x10011f09;\n        }\ncode_r0x10011f61:\n        arg_ch = 0;\n        arg_8h = 10;\n    }\n    cVar3 = fcn.10013c0f(arg_8h, arg_ch);\ncode_r0x10011ef9:\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    cVar3 = fcn.10010cde();\n    if ((cVar3 == '\\0') && (*(in_ECX + 0x30) == '\\0')) {\n        uVar1 = *(in_ECX + 0x20);\n        var_4h = var_4h._3_1_ << 0x18;\n        iVar5 = 0;\n        if ((uVar1 >> 4 & 1) != 0) {\n            iVar5 = iVar4;\n            if ((uVar1 >> 6 & 1) == 0) {\n                if ((uVar1 & 1) == 0) {\n                    iVar5 = 0;\n                    if ((uVar1 >> 1 & 1) != 0) {\n                        var_4h = CONCAT31(var_4h._1_3_, 0x20);\n                        iVar5 = iVar4;\n                    }\n                }\n                else {\n                    var_4h = CONCAT31(var_4h._1_3_, 0x2b);\n                }\n            }\n            else {\n                var_4h = CONCAT31(var_4h._1_3_, 0x2d);\n            }\n        }\n        cVar3 = *(in_ECX + 0x31);\n        if (((cVar3 != 'x') && (cVar3 != 'X')) || ((uVar1 >> 5 & 1) == 0)) {\n            iVar4 = 0;\n        }\n        if ((cVar3 == 'a') || (cVar3 == 'A')) {\n            bVar2 = true;\n        }\n        else {\n            bVar2 = false;\n        }\n        if ((iVar4 != '\\0') || (bVar2)) {\n            *(&var_4h + iVar5) = 0x30;\n            if ((cVar3 == 'X') || (cVar3 == 'A')) {\n                bVar2 = true;\n            }\n            else {\n                bVar2 = false;\n            }\n            *(&var_4h + iVar5 + 1) = (!bVar2 - 1U & 0xe0) + 0x78;\n            iVar5 = iVar5 + 2;\n        }\n        iVar4 = (*(in_ECX + 0x24) - *(in_ECX + 0x38)) - iVar5;\n        if ((uVar1 & 0xc) == 0) {\n            fcn.1000f04b(in_ECX + 0x448, 0x20, iVar4, in_ECX + 0x18);\n        }\n        fcn.10014eda(&var_4h, iVar5, in_ECX + 0x18, *(in_ECX + 0xc));\n        arg_14h = in_ECX + 0x18;\n        if (((*(in_ECX + 0x20) >> 3 & 1) != 0) && ((*(in_ECX + 0x20) >> 2 & 1) == 0)) {\n            fcn.1000f04b(in_ECX + 0x448, 0x30, iVar4, arg_14h);\n        }\n        fcn.10014c76(0);\n        if ((-1 < *arg_14h) && ((*(in_ECX + 0x20) >> 2 & 1) != 0)) {\n            fcn.1000f04b(in_ECX + 0x448, 0x20, iVar4, arg_14h);\n        }\n        return 1;\n    }\n    return 1;\n}\n",
        "token_count": 1682
    },
    "100113bb": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.100113bb(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    char *pcVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    char cVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint arg_8h;\n    uint arg_ch;\n    uint uStack8;\n    \n    cVar4 = *(param_1 + 0x31);\n    if (cVar4 != 'F') {\n        if (cVar4 == 'N') {\n            if ((*param_1 & 8) == 0) {\n                param_1[7] = 8;\ncode_r0x100113f3:\n                puVar5 = fcn.10016fba();\n                *puVar5 = 0x16;\n                fcn.1001a732();\n                return 0;\n            }\n        }\n        else {\n            if (param_1[0xb] != 0) goto code_r0x100113f3;\n            if (cVar4 < 'k') {\n                if (cVar4 == 'j') {\n                    param_1[0xb] = 5;\n                }\n                else if (cVar4 == 'I') {\n                    pcVar1 = param_1[4];\n                    cVar4 = *pcVar1;\n                    if ((cVar4 == '3') && (pcVar1[1] == '2')) {\n                        param_1[0xb] = 10;\n                        param_1[4] = pcVar1 + 2;\n                    }\n                    else if ((cVar4 == '6') && (pcVar1[1] == '4')) {\n                        param_1[0xb] = 0xb;\n                        param_1[4] = pcVar1 + 2;\n                    }\n                    else if (((((cVar4 == 'd') || (cVar4 == 'i')) || (cVar4 == 'o')) ||\n                             ((cVar4 == 'u' || (cVar4 == 'x')))) || (cVar4 == 'X')) {\n                        param_1[0xb] = 9;\n                    }\n                }\n                else if (cVar4 == 'L') {\n                    param_1[0xb] = 8;\n                }\n                else if (cVar4 == 'T') {\n                    param_1[0xb] = 0xd;\n                }\n                else if (cVar4 == 'h') {\n                    if (*param_1[4] == 'h') {\n                        param_1[0xb] = 1;\n                        param_1[4] = param_1[4] + 1;\n                    }\n                    else {\n                        param_1[0xb] = 2;\n                    }\n                }\n            }\n            else if (cVar4 == 'l') {\n                if (*param_1[4] == 'l') {\n                    param_1[0xb] = 4;\n                    param_1[4] = param_1[4] + 1;\n                }\n                else {\n                    param_1[0xb] = 3;\n                }\n            }\n            else if (cVar4 == 't') {\n                param_1[0xb] = 7;\n            }\n            else if (cVar4 == 'w') {\n                param_1[0xb] = 0xc;\n            }\n            else if (cVar4 == 'z') {\n                param_1[0xb] = 6;\n            }\n        }\n        return 1;\n    }\n    if ((*param_1 & 8) != 0) {\n        return 1;\n    }\n    param_1[7] = 7;\n    iVar6 = 1;\n    cVar4 = *(param_1 + 0x31);\n    uStack8 = param_1;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x10012197:\n            param_1[8] = param_1[8] | 0x10;\n            goto code_r0x1001219b;\n        }\n        if ('X' < cVar4) {\n            if (cVar4 == 'Z') {\n                cVar4 = fcn.1001304a();\n                goto code_r0x10012133;\n            }\n            if (cVar4 != 'a') {\n                if (cVar4 != 'c') {\n                    return 0;\n                }\ncode_r0x10012157:\n                cVar4 = fcn.10013804(0);\n                goto code_r0x10012133;\n            }\ncode_r0x100121a7:\n            cVar4 = fcn.1001320e();\n            goto code_r0x10012133;\n        }\n        if (cVar4 != 'X') {\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x10012157;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x1001212c;\n                }\n            }\n            goto code_r0x100121a7;\n        }\n        arg_ch = 1;\ncode_r0x10012143:\n        arg_8h = 0x10;\n    }\n    else {\n        if (cVar4 < 'q') {\n            if (cVar4 == 'p') {\n                cVar4 = fcn.1001410e();\n                goto code_r0x10012133;\n            }\n            if (cVar4 < 'h') goto code_r0x100121a7;\n            if (cVar4 != 'i') {\n                if (cVar4 == 'n') {\n                    cVar4 = fcn.10013f0b();\n                }\n                else {\n                    if (cVar4 != 'o') {\n                        return 0;\n                    }\n                    cVar4 = fcn.100140b1();\n                }\n                goto code_r0x10012133;\n            }\n            goto code_r0x10012197;\n        }\n        if (cVar4 == 's') {\ncode_r0x1001212c:\n            cVar4 = fcn.10014156();\n            goto code_r0x10012133;\n        }\n        if (cVar4 != 'u') {\n            if (cVar4 != 'x') {\n                return 0;\n            }\n            arg_ch = 0;\n            goto code_r0x10012143;\n        }\ncode_r0x1001219b:\n        arg_ch = 0;\n        arg_8h = 10;\n    }\n    cVar4 = fcn.10013ac5(arg_8h, arg_ch);\ncode_r0x10012133:\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    if (*(param_1 + 0xc) != '\\0') {\n        return 1;\n    }\n    uVar2 = param_1[8];\n    uStack8 = (uStack8 >> 0x10 & 0xff00) << 0x10;\n    iVar7 = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        uStack8._1_3_ = uStack8 >> 8;\n        iVar7 = iVar6;\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                iVar7 = 0;\n                if ((uVar2 >> 1 & 1) != 0) {\n                    uStack8 = CONCAT31(uStack8._1_3_, 0x20);\n                    iVar7 = iVar6;\n                }\n            }\n            else {\n                uStack8 = CONCAT31(uStack8._1_3_, 0x2b);\n            }\n        }\n        else {\n            uStack8 = CONCAT31(uStack8._1_3_, 0x2d);\n        }\n    }\n    cVar4 = *(param_1 + 0x31);\n    if (((cVar4 != 'x') && (cVar4 != 'X')) || ((uVar2 >> 5 & 1) == 0)) {\n        iVar6 = 0;\n    }\n    if ((cVar4 == 'a') || (cVar4 == 'A')) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar6 != '\\0') || (bVar3)) {\n        *(&uStack8 + iVar7) = 0x30;\n        if ((cVar4 == 'X') || (cVar4 == 'A')) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&uStack8 + iVar7 + 1) = (!bVar3 - 1U & 0xe0) + 0x78;\n        iVar7 = iVar7 + 2;\n    }\n    iVar6 = (param_1[9] - param_1[0xe]) - iVar7;\n    if ((uVar2 & 0xc) == 0) {\n        fcn.1000f0a8(param_1 + 0x112, 0x20, iVar6, param_1 + 6);\n    }\n    fcn.10014ff1(&uStack8, iVar7, param_1 + 6, param_1[3]);\n    arg_14h = param_1 + 6;\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.1000f0a8(param_1 + 0x112, 0x30, iVar6, arg_14h);\n    }\n    fcn.10014d1d(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.1000f0a8(param_1 + 0x112, 0x20, iVar6, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 2292
    },
    "100120e6": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.100120e6(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_14h;\n    uint32_t uVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_8h;\n    uint arg_ch;\n    int32_t var_4h;\n    \n    iVar4 = 1;\n    cVar3 = *(in_ECX + 0x31);\n    var_4h = in_ECX;\n    if (cVar3 < 'e') {\n        if (cVar3 == 'd') {\ncode_r0x10012197:\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x10;\n            goto code_r0x1001219b;\n        }\n        if ('X' < cVar3) {\n            if (cVar3 == 'Z') {\n                cVar3 = fcn.1001304a();\n                goto code_r0x10012133;\n            }\n            if (cVar3 != 'a') {\n                if (cVar3 != 'c') {\n                    return 0;\n                }\ncode_r0x10012157:\n                cVar3 = fcn.10013804(0);\n                goto code_r0x10012133;\n            }\ncode_r0x100121a7:\n            cVar3 = fcn.1001320e();\n            goto code_r0x10012133;\n        }\n        if (cVar3 != 'X') {\n            if (cVar3 != 'A') {\n                if (cVar3 == 'C') goto code_r0x10012157;\n                if (cVar3 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar3) {\n                    if (cVar3 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x1001212c;\n                }\n            }\n            goto code_r0x100121a7;\n        }\n        arg_ch = 1;\ncode_r0x10012143:\n        arg_8h = 0x10;\n    }\n    else {\n        if (cVar3 < 'q') {\n            if (cVar3 == 'p') {\n                cVar3 = fcn.1001410e();\n                goto code_r0x10012133;\n            }\n            if (cVar3 < 'h') goto code_r0x100121a7;\n            if (cVar3 != 'i') {\n                if (cVar3 == 'n') {\n                    cVar3 = fcn.10013f0b();\n                }\n                else {\n                    if (cVar3 != 'o') {\n                        return 0;\n                    }\n                    cVar3 = fcn.100140b1();\n                }\n                goto code_r0x10012133;\n            }\n            goto code_r0x10012197;\n        }\n        if (cVar3 == 's') {\ncode_r0x1001212c:\n            cVar3 = fcn.10014156();\n            goto code_r0x10012133;\n        }\n        if (cVar3 != 'u') {\n            if (cVar3 != 'x') {\n                return 0;\n            }\n            arg_ch = 0;\n            goto code_r0x10012143;\n        }\ncode_r0x1001219b:\n        arg_ch = 0;\n        arg_8h = 10;\n    }\n    cVar3 = fcn.10013ac5(arg_8h, arg_ch);\ncode_r0x10012133:\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    if (*(in_ECX + 0x30) != '\\0') {\n        return 1;\n    }\n    uVar1 = *(in_ECX + 0x20);\n    var_4h = var_4h._3_1_ << 0x18;\n    iVar5 = 0;\n    if ((uVar1 >> 4 & 1) != 0) {\n        iVar5 = iVar4;\n        if ((uVar1 >> 6 & 1) == 0) {\n            if ((uVar1 & 1) == 0) {\n                iVar5 = 0;\n                if ((uVar1 >> 1 & 1) != 0) {\n                    var_4h = CONCAT31(var_4h._1_3_, 0x20);\n                    iVar5 = iVar4;\n                }\n            }\n            else {\n                var_4h = CONCAT31(var_4h._1_3_, 0x2b);\n            }\n        }\n        else {\n            var_4h = CONCAT31(var_4h._1_3_, 0x2d);\n        }\n    }\n    cVar3 = *(in_ECX + 0x31);\n    if (((cVar3 != 'x') && (cVar3 != 'X')) || ((uVar1 >> 5 & 1) == 0)) {\n        iVar4 = 0;\n    }\n    if ((cVar3 == 'a') || (cVar3 == 'A')) {\n        bVar2 = true;\n    }\n    else {\n        bVar2 = false;\n    }\n    if ((iVar4 != '\\0') || (bVar2)) {\n        *(&var_4h + iVar5) = 0x30;\n        if ((cVar3 == 'X') || (cVar3 == 'A')) {\n            bVar2 = true;\n        }\n        else {\n            bVar2 = false;\n        }\n        *(&var_4h + iVar5 + 1) = (!bVar2 - 1U & 0xe0) + 0x78;\n        iVar5 = iVar5 + 2;\n    }\n    iVar4 = (*(in_ECX + 0x24) - *(in_ECX + 0x38)) - iVar5;\n    if ((uVar1 & 0xc) == 0) {\n        fcn.1000f0a8(in_ECX + 0x448, 0x20, iVar4, in_ECX + 0x18);\n    }\n    fcn.10014ff1(&var_4h, iVar5, in_ECX + 0x18, *(in_ECX + 0xc));\n    arg_14h = in_ECX + 0x18;\n    if (((*(in_ECX + 0x20) >> 3 & 1) != 0) && ((*(in_ECX + 0x20) >> 2 & 1) == 0)) {\n        fcn.1000f0a8(in_ECX + 0x448, 0x30, iVar4, arg_14h);\n    }\n    fcn.10014d1d(0);\n    if ((-1 < *arg_14h) && ((*(in_ECX + 0x20) >> 2 & 1) != 0)) {\n        fcn.1000f0a8(in_ECX + 0x448, 0x20, iVar4, arg_14h);\n    }\n    return 1;\n}\n",
        "token_count": 1646
    },
    "10011524": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.10011524(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    char *pcVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    char cVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    uint arg_8h;\n    uint arg_ch;\n    uint uStack8;\n    \n    cVar4 = *(param_1 + 0x31);\n    if (cVar4 != 'F') {\n        if (cVar4 == 'N') {\n            if ((*param_1 & 8) == 0) {\n                param_1[7] = 8;\ncode_r0x1001155c:\n                puVar5 = fcn.10016fba();\n                *puVar5 = 0x16;\n                fcn.1001a732();\n                return 0;\n            }\n        }\n        else {\n            if (param_1[0xb] != 0) goto code_r0x1001155c;\n            if (cVar4 < 'k') {\n                if (cVar4 == 'j') {\n                    param_1[0xb] = 5;\n                }\n                else if (cVar4 == 'I') {\n                    pcVar1 = param_1[4];\n                    cVar4 = *pcVar1;\n                    if ((cVar4 == '3') && (pcVar1[1] == '2')) {\n                        param_1[0xb] = 10;\n                        param_1[4] = pcVar1 + 2;\n                    }\n                    else if ((cVar4 == '6') && (pcVar1[1] == '4')) {\n                        param_1[0xb] = 0xb;\n                        param_1[4] = pcVar1 + 2;\n                    }\n                    else if (((((cVar4 == 'd') || (cVar4 == 'i')) || (cVar4 == 'o')) ||\n                             ((cVar4 == 'u' || (cVar4 == 'x')))) || (cVar4 == 'X')) {\n                        param_1[0xb] = 9;\n                    }\n                }\n                else if (cVar4 == 'L') {\n                    param_1[0xb] = 8;\n                }\n                else if (cVar4 == 'T') {\n                    param_1[0xb] = 0xd;\n                }\n                else if (cVar4 == 'h') {\n                    if (*param_1[4] == 'h') {\n                        param_1[0xb] = 1;\n                        param_1[4] = param_1[4] + 1;\n                    }\n                    else {\n                        param_1[0xb] = 2;\n                    }\n                }\n            }\n            else if (cVar4 == 'l') {\n                if (*param_1[4] == 'l') {\n                    param_1[0xb] = 4;\n                    param_1[4] = param_1[4] + 1;\n                }\n                else {\n                    param_1[0xb] = 3;\n                }\n            }\n            else if (cVar4 == 't') {\n                param_1[0xb] = 7;\n            }\n            else if (cVar4 == 'w') {\n                param_1[0xb] = 0xc;\n            }\n            else if (cVar4 == 'z') {\n                param_1[0xb] = 6;\n            }\n        }\n        return 1;\n    }\n    if ((*param_1 & 8) != 0) {\n        return 1;\n    }\n    param_1[7] = 7;\n    iVar6 = 1;\n    cVar4 = *(param_1 + 0x31);\n    uStack8 = param_1;\n    if (cVar4 < 'e') {\n        if (cVar4 == 'd') {\ncode_r0x100123c6:\n            param_1[8] = param_1[8] | 0x10;\n            goto code_r0x100123ca;\n        }\n        if ('X' < cVar4) {\n            if (cVar4 == 'Z') {\n                cVar4 = fcn.100130ad();\n                goto code_r0x10012362;\n            }\n            if (cVar4 != 'a') {\n                if (cVar4 != 'c') {\n                    return 0;\n                }\ncode_r0x10012386:\n                cVar4 = fcn.10013894(0);\n                goto code_r0x10012362;\n            }\ncode_r0x100123d6:\n            cVar4 = fcn.10013368();\n            goto code_r0x10012362;\n        }\n        if (cVar4 != 'X') {\n            if (cVar4 != 'A') {\n                if (cVar4 == 'C') goto code_r0x10012386;\n                if (cVar4 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar4) {\n                    if (cVar4 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x1001235b;\n                }\n            }\n            goto code_r0x100123d6;\n        }\n        arg_ch = 1;\ncode_r0x10012372:\n        arg_8h = 0x10;\n    }\n    else {\n        if (cVar4 < 'q') {\n            if (cVar4 == 'p') {\n                cVar4 = fcn.10014126();\n                goto code_r0x10012362;\n            }\n            if (cVar4 < 'h') goto code_r0x100123d6;\n            if (cVar4 != 'i') {\n                if (cVar4 == 'n') {\n                    cVar4 = fcn.10013f7f();\n                }\n                else {\n                    if (cVar4 != 'o') {\n                        return 0;\n                    }\n                    cVar4 = fcn.100140d0();\n                }\n                goto code_r0x10012362;\n            }\n            goto code_r0x100123c6;\n        }\n        if (cVar4 == 's') {\ncode_r0x1001235b:\n            cVar4 = fcn.100141c9();\n            goto code_r0x10012362;\n        }\n        if (cVar4 != 'u') {\n            if (cVar4 != 'x') {\n                return 0;\n            }\n            arg_ch = 0;\n            goto code_r0x10012372;\n        }\ncode_r0x100123ca:\n        arg_ch = 0;\n        arg_8h = 10;\n    }\n    cVar4 = fcn.10013c0f(arg_8h, arg_ch);\ncode_r0x10012362:\n    if (cVar4 == '\\0') {\n        return 0;\n    }\n    cVar4 = fcn.10010cde();\n    if ((cVar4 == '\\0') && (*(param_1 + 0xc) == '\\0')) {\n        uVar2 = param_1[8];\n        uStack8 = (uStack8 >> 0x10 & 0xff00) << 0x10;\n        iVar7 = 0;\n        if ((uVar2 >> 4 & 1) != 0) {\n            uStack8._1_3_ = uStack8 >> 8;\n            iVar7 = iVar6;\n            if ((uVar2 >> 6 & 1) == 0) {\n                if ((uVar2 & 1) == 0) {\n                    iVar7 = 0;\n                    if ((uVar2 >> 1 & 1) != 0) {\n                        uStack8 = CONCAT31(uStack8._1_3_, 0x20);\n                        iVar7 = iVar6;\n                    }\n                }\n                else {\n                    uStack8 = CONCAT31(uStack8._1_3_, 0x2b);\n                }\n            }\n            else {\n                uStack8 = CONCAT31(uStack8._1_3_, 0x2d);\n            }\n        }\n        cVar4 = *(param_1 + 0x31);\n        if (((cVar4 != 'x') && (cVar4 != 'X')) || ((uVar2 >> 5 & 1) == 0)) {\n            iVar6 = 0;\n        }\n        if ((cVar4 == 'a') || (cVar4 == 'A')) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        if ((iVar6 != '\\0') || (bVar3)) {\n            *(&uStack8 + iVar7) = 0x30;\n            if ((cVar4 == 'X') || (cVar4 == 'A')) {\n                bVar3 = true;\n            }\n            else {\n                bVar3 = false;\n            }\n            *(&uStack8 + iVar7 + 1) = (!bVar3 - 1U & 0xe0) + 0x78;\n            iVar7 = iVar7 + 2;\n        }\n        iVar6 = (param_1[9] - param_1[0xe]) - iVar7;\n        if ((uVar2 & 0xc) == 0) {\n            fcn.1000f0a8(param_1 + 0x112, 0x20, iVar6, param_1 + 6);\n        }\n        fcn.10014ff1(&uStack8, iVar7, param_1 + 6, param_1[3]);\n        arg_14h = param_1 + 6;\n        if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n            fcn.1000f0a8(param_1 + 0x112, 0x30, iVar6, arg_14h);\n        }\n        fcn.10014d1d(0);\n        if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n            fcn.1000f0a8(param_1 + 0x112, 0x20, iVar6, arg_14h);\n        }\n        return 1;\n    }\n    return 1;\n}\n",
        "token_count": 2313
    },
    "10012315": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.10012315(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint arg_30h)\n\n{\n    int32_t *arg_14h;\n    uint32_t uVar1;\n    bool bVar2;\n    char cVar3;\n    int32_t in_ECX;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_8h;\n    uint arg_ch;\n    int32_t var_4h;\n    \n    iVar4 = 1;\n    cVar3 = *(in_ECX + 0x31);\n    var_4h = in_ECX;\n    if (cVar3 < 'e') {\n        if (cVar3 == 'd') {\ncode_r0x100123c6:\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x10;\n            goto code_r0x100123ca;\n        }\n        if ('X' < cVar3) {\n            if (cVar3 == 'Z') {\n                cVar3 = fcn.100130ad();\n                goto code_r0x10012362;\n            }\n            if (cVar3 != 'a') {\n                if (cVar3 != 'c') {\n                    return 0;\n                }\ncode_r0x10012386:\n                cVar3 = fcn.10013894(0);\n                goto code_r0x10012362;\n            }\ncode_r0x100123d6:\n            cVar3 = fcn.10013368();\n            goto code_r0x10012362;\n        }\n        if (cVar3 != 'X') {\n            if (cVar3 != 'A') {\n                if (cVar3 == 'C') goto code_r0x10012386;\n                if (cVar3 < 'E') {\n                    return 0;\n                }\n                if ('G' < cVar3) {\n                    if (cVar3 != 'S') {\n                        return 0;\n                    }\n                    goto code_r0x1001235b;\n                }\n            }\n            goto code_r0x100123d6;\n        }\n        arg_ch = 1;\ncode_r0x10012372:\n        arg_8h = 0x10;\n    }\n    else {\n        if (cVar3 < 'q') {\n            if (cVar3 == 'p') {\n                cVar3 = fcn.10014126();\n                goto code_r0x10012362;\n            }\n            if (cVar3 < 'h') goto code_r0x100123d6;\n            if (cVar3 != 'i') {\n                if (cVar3 == 'n') {\n                    cVar3 = fcn.10013f7f();\n                }\n                else {\n                    if (cVar3 != 'o') {\n                        return 0;\n                    }\n                    cVar3 = fcn.100140d0();\n                }\n                goto code_r0x10012362;\n            }\n            goto code_r0x100123c6;\n        }\n        if (cVar3 == 's') {\ncode_r0x1001235b:\n            cVar3 = fcn.100141c9();\n            goto code_r0x10012362;\n        }\n        if (cVar3 != 'u') {\n            if (cVar3 != 'x') {\n                return 0;\n            }\n            arg_ch = 0;\n            goto code_r0x10012372;\n        }\ncode_r0x100123ca:\n        arg_ch = 0;\n        arg_8h = 10;\n    }\n    cVar3 = fcn.10013c0f(arg_8h, arg_ch);\ncode_r0x10012362:\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    cVar3 = fcn.10010cde();\n    if ((cVar3 == '\\0') && (*(in_ECX + 0x30) == '\\0')) {\n        uVar1 = *(in_ECX + 0x20);\n        var_4h = var_4h._3_1_ << 0x18;\n        iVar5 = 0;\n        if ((uVar1 >> 4 & 1) != 0) {\n            iVar5 = iVar4;\n            if ((uVar1 >> 6 & 1) == 0) {\n                if ((uVar1 & 1) == 0) {\n                    iVar5 = 0;\n                    if ((uVar1 >> 1 & 1) != 0) {\n                        var_4h = CONCAT31(var_4h._1_3_, 0x20);\n                        iVar5 = iVar4;\n                    }\n                }\n                else {\n                    var_4h = CONCAT31(var_4h._1_3_, 0x2b);\n                }\n            }\n            else {\n                var_4h = CONCAT31(var_4h._1_3_, 0x2d);\n            }\n        }\n        cVar3 = *(in_ECX + 0x31);\n        if (((cVar3 != 'x') && (cVar3 != 'X')) || ((uVar1 >> 5 & 1) == 0)) {\n            iVar4 = 0;\n        }\n        if ((cVar3 == 'a') || (cVar3 == 'A')) {\n            bVar2 = true;\n        }\n        else {\n            bVar2 = false;\n        }\n        if ((iVar4 != '\\0') || (bVar2)) {\n            *(&var_4h + iVar5) = 0x30;\n            if ((cVar3 == 'X') || (cVar3 == 'A')) {\n                bVar2 = true;\n            }\n            else {\n                bVar2 = false;\n            }\n            *(&var_4h + iVar5 + 1) = (!bVar2 - 1U & 0xe0) + 0x78;\n            iVar5 = iVar5 + 2;\n        }\n        iVar4 = (*(in_ECX + 0x24) - *(in_ECX + 0x38)) - iVar5;\n        if ((uVar1 & 0xc) == 0) {\n            fcn.1000f0a8(in_ECX + 0x448, 0x20, iVar4, in_ECX + 0x18);\n        }\n        fcn.10014ff1(&var_4h, iVar5, in_ECX + 0x18, *(in_ECX + 0xc));\n        arg_14h = in_ECX + 0x18;\n        if (((*(in_ECX + 0x20) >> 3 & 1) != 0) && ((*(in_ECX + 0x20) >> 2 & 1) == 0)) {\n            fcn.1000f0a8(in_ECX + 0x448, 0x30, iVar4, arg_14h);\n        }\n        fcn.10014d1d(0);\n        if ((-1 < *arg_14h) && ((*(in_ECX + 0x20) >> 2 & 1) != 0)) {\n            fcn.1000f0a8(in_ECX + 0x448, 0x20, iVar4, arg_14h);\n        }\n        return 1;\n    }\n    return 1;\n}\n",
        "token_count": 1666
    },
    "1001168d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.1001168d(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    int16_t iVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uint16_t *puVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    int32_t arg_ch;\n    uint unaff_ESI;\n    int32_t arg_10h;\n    uint16_t uVar9;\n    uint arg_8h;\n    uint arg_ch_00;\n    uint uStack16;\n    ushort uStack12;\n    uint32_t uStack8;\n    \n    puVar6 = *(param_1 + 0x32);\n    if (puVar6 != 0x46) {\n        if (puVar6 == 0x4e) {\n            puVar6 = *param_1 & 8;\n            if (puVar6 == NULL) {\n                param_1[7] = 8;\ncode_r0x100116c8:\n                puVar7 = fcn.10016fba();\n                *puVar7 = 0x16;\n                uVar8 = fcn.1001a732();\n                return uVar8 & 0xffffff00;\n            }\n        }\n        else {\n            if (param_1[0xb] != 0) goto code_r0x100116c8;\n            if (puVar6 < 0x6b) {\n                if (puVar6 == 0x6a) {\n                    param_1[0xb] = 5;\n                }\n                else if (puVar6 == 0x49) {\n                    puVar2 = param_1[4];\n                    puVar6 = *puVar2;\n                    if ((puVar6 == 0x33) && (puVar2[1] == 0x32)) {\n                        puVar6 = puVar2 + 2;\n                        param_1[0xb] = 10;\n                        param_1[4] = puVar6;\n                    }\n                    else if ((puVar6 == 0x36) && (puVar2[1] == 0x34)) {\n                        puVar6 = puVar2 + 2;\n                        param_1[0xb] = 0xb;\n                        param_1[4] = puVar6;\n                    }\n                    else if (((((puVar6 == 0x64) || (puVar6 == 0x69)) || (puVar6 == 0x6f)) ||\n                             ((puVar6 == 0x75 || (puVar6 == 0x78)))) || (puVar6 == 0x58)) {\n                        param_1[0xb] = 9;\n                    }\n                }\n                else if (puVar6 == 0x4c) {\n                    param_1[0xb] = 8;\n                }\n                else if (puVar6 == 0x54) {\n                    param_1[0xb] = 0xd;\n                }\n                else if (puVar6 == 0x68) {\n                    puVar6 = param_1[4];\n                    if (*puVar6 == 0x68) {\n                        puVar6 = puVar6 + 1;\n                        param_1[0xb] = 1;\n                        param_1[4] = puVar6;\n                    }\n                    else {\n                        param_1[0xb] = 2;\n                    }\n                }\n            }\n            else if (puVar6 == 0x6c) {\n                puVar6 = param_1[4];\n                if (*puVar6 == 0x6c) {\n                    puVar6 = puVar6 + 1;\n                    param_1[0xb] = 4;\n                    param_1[4] = puVar6;\n                }\n                else {\n                    param_1[0xb] = 3;\n                }\n            }\n            else if (puVar6 == 0x74) {\n                param_1[0xb] = 7;\n            }\n            else if (puVar6 == 0x77) {\n                param_1[0xb] = 0xc;\n            }\n            else if (puVar6 == 0x7a) {\n                param_1[0xb] = 6;\n            }\n        }\ncode_r0x10011806:\n        return CONCAT31(puVar6 >> 8, 1);\n    }\n    puVar6 = *param_1 & 8;\n    if (puVar6 != NULL) goto code_r0x10011806;\n    param_1[7] = 7;\n    uStack8 = *0x10081004 ^ &stack0xfffffffc;\n    uVar9 = *(param_1 + 0x32);\n    if (uVar9 < 0x65) {\n        if (uVar9 == 100) {\ncode_r0x1001260e:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x10012612:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x10012615:\n            cVar5 = fcn.10013ac5(arg_8h, arg_ch_00);\n        }\n        else if (uVar9 < 0x59) {\n            if (uVar9 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x100125ba:\n                arg_8h = 0x10;\n                goto code_r0x10012615;\n            }\n            if (uVar9 != 0x41) {\n                if (uVar9 == 0x43) goto code_r0x100125ce;\n                if (uVar9 < 0x45) goto code_r0x1001279c;\n                if (0x47 < uVar9) {\n                    if (uVar9 != 0x53) goto code_r0x1001279c;\n                    goto code_r0x100125a2;\n                }\n            }\ncode_r0x1001261e:\n            cVar5 = fcn.100134e1();\n        }\n        else if (uVar9 == 0x5a) {\n            cVar5 = fcn.1001312c();\n        }\n        else {\n            if (uVar9 == 0x61) goto code_r0x1001261e;\n            if (uVar9 != 99) goto code_r0x1001279c;\ncode_r0x100125ce:\n            cVar5 = fcn.10013954(0);\n        }\n    }\n    else if (uVar9 < 0x71) {\n        if (uVar9 == 0x70) {\n            cVar5 = fcn.1001410e();\n        }\n        else {\n            if (uVar9 < 0x68) goto code_r0x1001261e;\n            if (uVar9 == 0x69) goto code_r0x1001260e;\n            if (uVar9 == 0x6e) {\n                cVar5 = fcn.10013f0b();\n            }\n            else {\n                if (uVar9 != 0x6f) goto code_r0x1001279c;\n                cVar5 = fcn.100140b1();\n            }\n        }\n    }\n    else {\n        if (uVar9 != 0x73) {\n            if (uVar9 != 0x75) {\n                if (uVar9 != 0x78) goto code_r0x1001279c;\n                arg_ch_00 = 0;\n                goto code_r0x100125ba;\n            }\n            goto code_r0x10012612;\n        }\ncode_r0x100125a2:\n        cVar5 = fcn.10014245();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0xc) != '\\0')) goto code_r0x1001279c;\n    uVar8 = param_1[8];\n    uStack16 = 0;\n    uStack12 = 0;\n    arg_ch = 0;\n    if ((uVar8 >> 4 & 1) != 0) {\n        if ((uVar8 >> 6 & 1) == 0) {\n            if ((uVar8 & 1) == 0) {\n                if ((uVar8 >> 1 & 1) != 0) {\n                    uStack16 = 0x20;\n                    arg_ch = 1;\n                }\n                goto code_r0x1001269c;\n            }\n            uVar9 = 0x2b;\n        }\n        else {\n            uVar9 = 0x2d;\n        }\n        uStack16 = uVar9;\n        arg_ch = 1;\n    }\ncode_r0x1001269c:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar8 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&uStack16 + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (iVar1 == 0x41)) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&uStack16 + arg_ch * 2 + 2) = (!bVar3 - 1U & 0xe0) + 0x78;\n        arg_ch = arg_ch + 2;\n    }\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((uVar8 & 0xc) == 0) {\n        fcn.1000f077(param_1 + 0x112, 0x20, arg_10h, param_1 + 6);\n    }\n    fcn.10014f64(&uStack16, arg_ch, param_1 + 6, param_1[3]);\n    arg_14h = param_1 + 6;\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.1000f077(param_1 + 0x112, 0x30, arg_10h, arg_14h);\n    }\n    fcn.10014dc4(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.1000f077(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n    }\ncode_r0x1001279c:\n    uVar8 = fcn.10001112(unaff_ESI);\n    return uVar8;\n}\n",
        "token_count": 2503
    },
    "1001254f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.1001254f(int32_t param_1)\n\n{\n    int32_t *arg_14h;\n    int16_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t arg_ch;\n    uint unaff_ESI;\n    int32_t arg_10h;\n    uint16_t uVar6;\n    uint arg_8h;\n    uint arg_ch_00;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x10081004 ^ &stack0xfffffffc;\n    uVar6 = *(param_1 + 0x32);\n    if (uVar6 < 0x65) {\n        if (uVar6 == 100) {\ncode_r0x1001260e:\n            *(param_1 + 0x20) = *(param_1 + 0x20) | 0x10;\ncode_r0x10012612:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x10012615:\n            cVar5 = fcn.10013ac5(arg_8h, arg_ch_00);\n        }\n        else if (uVar6 < 0x59) {\n            if (uVar6 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x100125ba:\n                arg_8h = 0x10;\n                goto code_r0x10012615;\n            }\n            if (uVar6 != 0x41) {\n                if (uVar6 == 0x43) goto code_r0x100125ce;\n                if (uVar6 < 0x45) goto code_r0x1001279c;\n                if (0x47 < uVar6) {\n                    if (uVar6 != 0x53) goto code_r0x1001279c;\n                    goto code_r0x100125a2;\n                }\n            }\ncode_r0x1001261e:\n            cVar5 = fcn.100134e1();\n        }\n        else if (uVar6 == 0x5a) {\n            cVar5 = fcn.1001312c();\n        }\n        else {\n            if (uVar6 == 0x61) goto code_r0x1001261e;\n            if (uVar6 != 99) goto code_r0x1001279c;\ncode_r0x100125ce:\n            cVar5 = fcn.10013954(0);\n        }\n    }\n    else if (uVar6 < 0x71) {\n        if (uVar6 == 0x70) {\n            cVar5 = fcn.1001410e();\n        }\n        else {\n            if (uVar6 < 0x68) goto code_r0x1001261e;\n            if (uVar6 == 0x69) goto code_r0x1001260e;\n            if (uVar6 == 0x6e) {\n                cVar5 = fcn.10013f0b();\n            }\n            else {\n                if (uVar6 != 0x6f) goto code_r0x1001279c;\n                cVar5 = fcn.100140b1();\n            }\n        }\n    }\n    else {\n        if (uVar6 != 0x73) {\n            if (uVar6 != 0x75) {\n                if (uVar6 != 0x78) goto code_r0x1001279c;\n                arg_ch_00 = 0;\n                goto code_r0x100125ba;\n            }\n            goto code_r0x10012612;\n        }\ncode_r0x100125a2:\n        cVar5 = fcn.10014245();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0x30) != '\\0')) goto code_r0x1001279c;\n    uVar2 = *(param_1 + 0x20);\n    var_ch = 0;\n    var_8h._0_2_ = 0;\n    arg_ch = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    arg_ch = 1;\n                }\n                goto code_r0x1001269c;\n            }\n            uVar6 = 0x2b;\n        }\n        else {\n            uVar6 = 0x2d;\n        }\n        var_ch = uVar6;\n        arg_ch = 1;\n    }\ncode_r0x1001269c:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&var_ch + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (iVar1 == 0x41)) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&var_ch + arg_ch * 2 + 2) = (!bVar3 - 1U & 0xe0) + 0x78;\n        arg_ch = arg_ch + 2;\n    }\n    arg_10h = (*(param_1 + 0x24) - *(param_1 + 0x38)) - arg_ch;\n    if ((uVar2 & 0xc) == 0) {\n        fcn.1000f077(param_1 + 0x448, 0x20, arg_10h, param_1 + 0x18);\n    }\n    fcn.10014f64(&var_ch, arg_ch, param_1 + 0x18, *(param_1 + 0xc));\n    arg_14h = param_1 + 0x18;\n    if (((*(param_1 + 0x20) >> 3 & 1) != 0) && ((*(param_1 + 0x20) >> 2 & 1) == 0)) {\n        fcn.1000f077(param_1 + 0x448, 0x30, arg_10h, arg_14h);\n    }\n    fcn.10014dc4(0);\n    if ((-1 < *arg_14h) && ((*(param_1 + 0x20) >> 2 & 1) != 0)) {\n        fcn.1000f077(param_1 + 0x448, 0x20, arg_10h, arg_14h);\n    }\ncode_r0x1001279c:\n    fcn.10001112(unaff_ESI);\n    return;\n}\n",
        "token_count": 1655
    },
    "10011809": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.10011809(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    int16_t iVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uint16_t *puVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    int32_t arg_ch;\n    uint unaff_ESI;\n    int32_t arg_10h;\n    uint16_t uVar9;\n    uint arg_8h;\n    uint arg_ch_00;\n    uint uStack16;\n    ushort uStack12;\n    uint32_t uStack8;\n    \n    puVar6 = *(param_1 + 0x32);\n    if (puVar6 != 0x46) {\n        if (puVar6 == 0x4e) {\n            puVar6 = *param_1 & 8;\n            if (puVar6 == NULL) {\n                param_1[7] = 8;\ncode_r0x10011844:\n                puVar7 = fcn.10016fba();\n                *puVar7 = 0x16;\n                uVar8 = fcn.1001a732();\n                return uVar8 & 0xffffff00;\n            }\n        }\n        else {\n            if (param_1[0xb] != 0) goto code_r0x10011844;\n            if (puVar6 < 0x6b) {\n                if (puVar6 == 0x6a) {\n                    param_1[0xb] = 5;\n                }\n                else if (puVar6 == 0x49) {\n                    puVar2 = param_1[4];\n                    puVar6 = *puVar2;\n                    if ((puVar6 == 0x33) && (puVar2[1] == 0x32)) {\n                        puVar6 = puVar2 + 2;\n                        param_1[0xb] = 10;\n                        param_1[4] = puVar6;\n                    }\n                    else if ((puVar6 == 0x36) && (puVar2[1] == 0x34)) {\n                        puVar6 = puVar2 + 2;\n                        param_1[0xb] = 0xb;\n                        param_1[4] = puVar6;\n                    }\n                    else if (((((puVar6 == 0x64) || (puVar6 == 0x69)) || (puVar6 == 0x6f)) ||\n                             ((puVar6 == 0x75 || (puVar6 == 0x78)))) || (puVar6 == 0x58)) {\n                        param_1[0xb] = 9;\n                    }\n                }\n                else if (puVar6 == 0x4c) {\n                    param_1[0xb] = 8;\n                }\n                else if (puVar6 == 0x54) {\n                    param_1[0xb] = 0xd;\n                }\n                else if (puVar6 == 0x68) {\n                    puVar6 = param_1[4];\n                    if (*puVar6 == 0x68) {\n                        puVar6 = puVar6 + 1;\n                        param_1[0xb] = 1;\n                        param_1[4] = puVar6;\n                    }\n                    else {\n                        param_1[0xb] = 2;\n                    }\n                }\n            }\n            else if (puVar6 == 0x6c) {\n                puVar6 = param_1[4];\n                if (*puVar6 == 0x6c) {\n                    puVar6 = puVar6 + 1;\n                    param_1[0xb] = 4;\n                    param_1[4] = puVar6;\n                }\n                else {\n                    param_1[0xb] = 3;\n                }\n            }\n            else if (puVar6 == 0x74) {\n                param_1[0xb] = 7;\n            }\n            else if (puVar6 == 0x77) {\n                param_1[0xb] = 0xc;\n            }\n            else if (puVar6 == 0x7a) {\n                param_1[0xb] = 6;\n            }\n        }\ncode_r0x10011982:\n        return CONCAT31(puVar6 >> 8, 1);\n    }\n    puVar6 = *param_1 & 8;\n    if (puVar6 != NULL) goto code_r0x10011982;\n    param_1[7] = 7;\n    uStack8 = *0x10081004 ^ &stack0xfffffffc;\n    uVar9 = *(param_1 + 0x32);\n    if (uVar9 < 0x65) {\n        if (uVar9 == 100) {\ncode_r0x1001286b:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x1001286f:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x10012872:\n            cVar5 = fcn.10013d8d(arg_8h, arg_ch_00);\n        }\n        else if (uVar9 < 0x59) {\n            if (uVar9 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x10012817:\n                arg_8h = 0x10;\n                goto code_r0x10012872;\n            }\n            if (uVar9 != 0x41) {\n                if (uVar9 == 0x43) goto code_r0x1001282b;\n                if (uVar9 < 0x45) goto code_r0x10012a08;\n                if (0x47 < uVar9) {\n                    if (uVar9 != 0x53) goto code_r0x10012a08;\n                    goto code_r0x100127ff;\n                }\n            }\ncode_r0x1001287b:\n            cVar5 = fcn.10013653();\n        }\n        else if (uVar9 == 0x5a) {\n            cVar5 = fcn.1001318f();\n        }\n        else {\n            if (uVar9 == 0x61) goto code_r0x1001287b;\n            if (uVar9 != 99) goto code_r0x10012a08;\ncode_r0x1001282b:\n            cVar5 = fcn.100139ec(0);\n        }\n    }\n    else if (uVar9 < 0x71) {\n        if (uVar9 == 0x70) {\n            cVar5 = fcn.1001413e();\n        }\n        else {\n            if (uVar9 < 0x68) goto code_r0x1001287b;\n            if (uVar9 == 0x69) goto code_r0x1001286b;\n            if (uVar9 == 0x6e) {\n                cVar5 = fcn.10014018();\n            }\n            else {\n                if (uVar9 != 0x6f) goto code_r0x10012a08;\n                cVar5 = fcn.100140ef();\n            }\n        }\n    }\n    else {\n        if (uVar9 != 0x73) {\n            if (uVar9 != 0x75) {\n                if (uVar9 != 0x78) goto code_r0x10012a08;\n                arg_ch_00 = 0;\n                goto code_r0x10012817;\n            }\n            goto code_r0x1001286f;\n        }\ncode_r0x100127ff:\n        cVar5 = fcn.100142b9();\n    }\n    if (((cVar5 == '\\0') || (cVar5 = fcn.10010cde(),  cVar5 != '\\0')) || (*(param_1 + 0xc) != '\\0'))\n    goto code_r0x10012a08;\n    uVar8 = param_1[8];\n    uStack16 = 0;\n    uStack12 = 0;\n    arg_ch = 0;\n    if ((uVar8 >> 4 & 1) != 0) {\n        if ((uVar8 >> 6 & 1) == 0) {\n            if ((uVar8 & 1) == 0) {\n                if ((uVar8 >> 1 & 1) != 0) {\n                    uStack16 = 0x20;\n                    arg_ch = 1;\n                }\n                goto code_r0x10012908;\n            }\n            uVar9 = 0x2b;\n        }\n        else {\n            uVar9 = 0x2d;\n        }\n        uStack16 = uVar9;\n        arg_ch = 1;\n    }\ncode_r0x10012908:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar8 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&uStack16 + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (iVar1 == 0x41)) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&uStack16 + arg_ch * 2 + 2) = (!bVar3 - 1U & 0xe0) + 0x78;\n        arg_ch = arg_ch + 2;\n    }\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((uVar8 & 0xc) == 0) {\n        fcn.1000f077(param_1 + 0x112, 0x20, arg_10h, param_1 + 6);\n    }\n    fcn.10014f64(&uStack16, arg_ch, param_1 + 6, param_1[3]);\n    arg_14h = param_1 + 6;\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.1000f077(param_1 + 0x112, 0x30, arg_10h, arg_14h);\n    }\n    fcn.10014dc4(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.1000f077(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n    }\ncode_r0x10012a08:\n    uVar8 = fcn.10001112(unaff_ESI);\n    return uVar8;\n}\n",
        "token_count": 2521
    },
    "100127ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.100127ac(int32_t param_1)\n\n{\n    int32_t *arg_14h;\n    int16_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t arg_ch;\n    uint unaff_ESI;\n    int32_t arg_10h;\n    uint16_t uVar6;\n    uint arg_8h;\n    uint arg_ch_00;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x10081004 ^ &stack0xfffffffc;\n    uVar6 = *(param_1 + 0x32);\n    if (uVar6 < 0x65) {\n        if (uVar6 == 100) {\ncode_r0x1001286b:\n            *(param_1 + 0x20) = *(param_1 + 0x20) | 0x10;\ncode_r0x1001286f:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x10012872:\n            cVar5 = fcn.10013d8d(arg_8h, arg_ch_00);\n        }\n        else if (uVar6 < 0x59) {\n            if (uVar6 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x10012817:\n                arg_8h = 0x10;\n                goto code_r0x10012872;\n            }\n            if (uVar6 != 0x41) {\n                if (uVar6 == 0x43) goto code_r0x1001282b;\n                if (uVar6 < 0x45) goto code_r0x10012a08;\n                if (0x47 < uVar6) {\n                    if (uVar6 != 0x53) goto code_r0x10012a08;\n                    goto code_r0x100127ff;\n                }\n            }\ncode_r0x1001287b:\n            cVar5 = fcn.10013653();\n        }\n        else if (uVar6 == 0x5a) {\n            cVar5 = fcn.1001318f();\n        }\n        else {\n            if (uVar6 == 0x61) goto code_r0x1001287b;\n            if (uVar6 != 99) goto code_r0x10012a08;\ncode_r0x1001282b:\n            cVar5 = fcn.100139ec(0);\n        }\n    }\n    else if (uVar6 < 0x71) {\n        if (uVar6 == 0x70) {\n            cVar5 = fcn.1001413e();\n        }\n        else {\n            if (uVar6 < 0x68) goto code_r0x1001287b;\n            if (uVar6 == 0x69) goto code_r0x1001286b;\n            if (uVar6 == 0x6e) {\n                cVar5 = fcn.10014018();\n            }\n            else {\n                if (uVar6 != 0x6f) goto code_r0x10012a08;\n                cVar5 = fcn.100140ef();\n            }\n        }\n    }\n    else {\n        if (uVar6 != 0x73) {\n            if (uVar6 != 0x75) {\n                if (uVar6 != 0x78) goto code_r0x10012a08;\n                arg_ch_00 = 0;\n                goto code_r0x10012817;\n            }\n            goto code_r0x1001286f;\n        }\ncode_r0x100127ff:\n        cVar5 = fcn.100142b9();\n    }\n    if (((cVar5 == '\\0') || (cVar5 = fcn.10010cde(),  cVar5 != '\\0')) || (*(param_1 + 0x30) != '\\0'))\n    goto code_r0x10012a08;\n    uVar2 = *(param_1 + 0x20);\n    var_ch = 0;\n    var_8h._0_2_ = 0;\n    arg_ch = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    arg_ch = 1;\n                }\n                goto code_r0x10012908;\n            }\n            uVar6 = 0x2b;\n        }\n        else {\n            uVar6 = 0x2d;\n        }\n        var_ch = uVar6;\n        arg_ch = 1;\n    }\ncode_r0x10012908:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&var_ch + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (iVar1 == 0x41)) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&var_ch + arg_ch * 2 + 2) = (!bVar3 - 1U & 0xe0) + 0x78;\n        arg_ch = arg_ch + 2;\n    }\n    arg_10h = (*(param_1 + 0x24) - *(param_1 + 0x38)) - arg_ch;\n    if ((uVar2 & 0xc) == 0) {\n        fcn.1000f077(param_1 + 0x448, 0x20, arg_10h, param_1 + 0x18);\n    }\n    fcn.10014f64(&var_ch, arg_ch, param_1 + 0x18, *(param_1 + 0xc));\n    arg_14h = param_1 + 0x18;\n    if (((*(param_1 + 0x20) >> 3 & 1) != 0) && ((*(param_1 + 0x20) >> 2 & 1) == 0)) {\n        fcn.1000f077(param_1 + 0x448, 0x30, arg_10h, arg_14h);\n    }\n    fcn.10014dc4(0);\n    if ((-1 < *arg_14h) && ((*(param_1 + 0x20) >> 2 & 1) != 0)) {\n        fcn.1000f077(param_1 + 0x448, 0x20, arg_10h, arg_14h);\n    }\ncode_r0x10012a08:\n    fcn.10001112(unaff_ESI);\n    return;\n}\n",
        "token_count": 1675
    },
    "10011985": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.10011985(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    int16_t iVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uint16_t *puVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    int32_t arg_ch;\n    uint unaff_ESI;\n    int32_t arg_10h;\n    uint16_t uVar9;\n    uint arg_8h;\n    uint arg_ch_00;\n    uint uStack16;\n    ushort uStack12;\n    uint32_t uStack8;\n    \n    puVar6 = *(param_1 + 0x32);\n    if (puVar6 != 0x46) {\n        if (puVar6 == 0x4e) {\n            puVar6 = *param_1 & 8;\n            if (puVar6 == NULL) {\n                param_1[7] = 8;\ncode_r0x100119c0:\n                puVar7 = fcn.10016fba();\n                *puVar7 = 0x16;\n                uVar8 = fcn.1001a732();\n                return uVar8 & 0xffffff00;\n            }\n        }\n        else {\n            if (param_1[0xb] != 0) goto code_r0x100119c0;\n            if (puVar6 < 0x6b) {\n                if (puVar6 == 0x6a) {\n                    param_1[0xb] = 5;\n                }\n                else if (puVar6 == 0x49) {\n                    puVar2 = param_1[4];\n                    puVar6 = *puVar2;\n                    if ((puVar6 == 0x33) && (puVar2[1] == 0x32)) {\n                        puVar6 = puVar2 + 2;\n                        param_1[0xb] = 10;\n                        param_1[4] = puVar6;\n                    }\n                    else if ((puVar6 == 0x36) && (puVar2[1] == 0x34)) {\n                        puVar6 = puVar2 + 2;\n                        param_1[0xb] = 0xb;\n                        param_1[4] = puVar6;\n                    }\n                    else if (((((puVar6 == 0x64) || (puVar6 == 0x69)) || (puVar6 == 0x6f)) ||\n                             ((puVar6 == 0x75 || (puVar6 == 0x78)))) || (puVar6 == 0x58)) {\n                        param_1[0xb] = 9;\n                    }\n                }\n                else if (puVar6 == 0x4c) {\n                    param_1[0xb] = 8;\n                }\n                else if (puVar6 == 0x54) {\n                    param_1[0xb] = 0xd;\n                }\n                else if (puVar6 == 0x68) {\n                    puVar6 = param_1[4];\n                    if (*puVar6 == 0x68) {\n                        puVar6 = puVar6 + 1;\n                        param_1[0xb] = 1;\n                        param_1[4] = puVar6;\n                    }\n                    else {\n                        param_1[0xb] = 2;\n                    }\n                }\n            }\n            else if (puVar6 == 0x6c) {\n                puVar6 = param_1[4];\n                if (*puVar6 == 0x6c) {\n                    puVar6 = puVar6 + 1;\n                    param_1[0xb] = 4;\n                    param_1[4] = puVar6;\n                }\n                else {\n                    param_1[0xb] = 3;\n                }\n            }\n            else if (puVar6 == 0x74) {\n                param_1[0xb] = 7;\n            }\n            else if (puVar6 == 0x77) {\n                param_1[0xb] = 0xc;\n            }\n            else if (puVar6 == 0x7a) {\n                param_1[0xb] = 6;\n            }\n        }\ncode_r0x10011afe:\n        return CONCAT31(puVar6 >> 8, 1);\n    }\n    puVar6 = *param_1 & 8;\n    if (puVar6 != NULL) goto code_r0x10011afe;\n    param_1[7] = 7;\n    uStack8 = *0x10081004 ^ &stack0xfffffffc;\n    uVar9 = *(param_1 + 0x32);\n    if (uVar9 < 0x65) {\n        if (uVar9 == 100) {\ncode_r0x10012ad7:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x10012adb:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x10012ade:\n            cVar5 = fcn.10013ac5(arg_8h, arg_ch_00);\n        }\n        else if (uVar9 < 0x59) {\n            if (uVar9 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x10012a83:\n                arg_8h = 0x10;\n                goto code_r0x10012ade;\n            }\n            if (uVar9 != 0x41) {\n                if (uVar9 == 0x43) goto code_r0x10012a97;\n                if (uVar9 < 0x45) goto code_r0x10012c65;\n                if (0x47 < uVar9) {\n                    if (uVar9 != 0x53) goto code_r0x10012c65;\n                    goto code_r0x10012a6b;\n                }\n            }\ncode_r0x10012ae7:\n            cVar5 = fcn.100134e1();\n        }\n        else if (uVar9 == 0x5a) {\n            cVar5 = fcn.1001312c();\n        }\n        else {\n            if (uVar9 == 0x61) goto code_r0x10012ae7;\n            if (uVar9 != 99) goto code_r0x10012c65;\ncode_r0x10012a97:\n            cVar5 = fcn.10013954(0);\n        }\n    }\n    else if (uVar9 < 0x71) {\n        if (uVar9 == 0x70) {\n            cVar5 = fcn.1001410e();\n        }\n        else {\n            if (uVar9 < 0x68) goto code_r0x10012ae7;\n            if (uVar9 == 0x69) goto code_r0x10012ad7;\n            if (uVar9 == 0x6e) {\n                cVar5 = fcn.10013f0b();\n            }\n            else {\n                if (uVar9 != 0x6f) goto code_r0x10012c65;\n                cVar5 = fcn.100140b1();\n            }\n        }\n    }\n    else {\n        if (uVar9 != 0x73) {\n            if (uVar9 != 0x75) {\n                if (uVar9 != 0x78) goto code_r0x10012c65;\n                arg_ch_00 = 0;\n                goto code_r0x10012a83;\n            }\n            goto code_r0x10012adb;\n        }\ncode_r0x10012a6b:\n        cVar5 = fcn.10014245();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0xc) != '\\0')) goto code_r0x10012c65;\n    uVar8 = param_1[8];\n    uStack16 = 0;\n    uStack12 = 0;\n    arg_ch = 0;\n    if ((uVar8 >> 4 & 1) != 0) {\n        if ((uVar8 >> 6 & 1) == 0) {\n            if ((uVar8 & 1) == 0) {\n                if ((uVar8 >> 1 & 1) != 0) {\n                    uStack16 = 0x20;\n                    arg_ch = 1;\n                }\n                goto code_r0x10012b65;\n            }\n            uVar9 = 0x2b;\n        }\n        else {\n            uVar9 = 0x2d;\n        }\n        uStack16 = uVar9;\n        arg_ch = 1;\n    }\ncode_r0x10012b65:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar8 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&uStack16 + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (iVar1 == 0x41)) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&uStack16 + arg_ch * 2 + 2) = (!bVar3 - 1U & 0xe0) + 0x78;\n        arg_ch = arg_ch + 2;\n    }\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((uVar8 & 0xc) == 0) {\n        fcn.1000f0d4(param_1 + 0x112, 0x20, arg_10h, param_1 + 6);\n    }\n    fcn.10015084(&uStack16, arg_ch, param_1 + 6, param_1[3]);\n    arg_14h = param_1 + 6;\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.1000f0d4(param_1 + 0x112, 0x30, arg_10h, arg_14h);\n    }\n    fcn.10014e4f(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.1000f0d4(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n    }\ncode_r0x10012c65:\n    uVar8 = fcn.10001112(unaff_ESI);\n    return uVar8;\n}\n",
        "token_count": 2514
    },
    "10012a18": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.10012a18(int32_t param_1)\n\n{\n    int32_t *arg_14h;\n    int16_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t arg_ch;\n    uint unaff_ESI;\n    int32_t arg_10h;\n    uint16_t uVar6;\n    uint arg_8h;\n    uint arg_ch_00;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x10081004 ^ &stack0xfffffffc;\n    uVar6 = *(param_1 + 0x32);\n    if (uVar6 < 0x65) {\n        if (uVar6 == 100) {\ncode_r0x10012ad7:\n            *(param_1 + 0x20) = *(param_1 + 0x20) | 0x10;\ncode_r0x10012adb:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x10012ade:\n            cVar5 = fcn.10013ac5(arg_8h, arg_ch_00);\n        }\n        else if (uVar6 < 0x59) {\n            if (uVar6 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x10012a83:\n                arg_8h = 0x10;\n                goto code_r0x10012ade;\n            }\n            if (uVar6 != 0x41) {\n                if (uVar6 == 0x43) goto code_r0x10012a97;\n                if (uVar6 < 0x45) goto code_r0x10012c65;\n                if (0x47 < uVar6) {\n                    if (uVar6 != 0x53) goto code_r0x10012c65;\n                    goto code_r0x10012a6b;\n                }\n            }\ncode_r0x10012ae7:\n            cVar5 = fcn.100134e1();\n        }\n        else if (uVar6 == 0x5a) {\n            cVar5 = fcn.1001312c();\n        }\n        else {\n            if (uVar6 == 0x61) goto code_r0x10012ae7;\n            if (uVar6 != 99) goto code_r0x10012c65;\ncode_r0x10012a97:\n            cVar5 = fcn.10013954(0);\n        }\n    }\n    else if (uVar6 < 0x71) {\n        if (uVar6 == 0x70) {\n            cVar5 = fcn.1001410e();\n        }\n        else {\n            if (uVar6 < 0x68) goto code_r0x10012ae7;\n            if (uVar6 == 0x69) goto code_r0x10012ad7;\n            if (uVar6 == 0x6e) {\n                cVar5 = fcn.10013f0b();\n            }\n            else {\n                if (uVar6 != 0x6f) goto code_r0x10012c65;\n                cVar5 = fcn.100140b1();\n            }\n        }\n    }\n    else {\n        if (uVar6 != 0x73) {\n            if (uVar6 != 0x75) {\n                if (uVar6 != 0x78) goto code_r0x10012c65;\n                arg_ch_00 = 0;\n                goto code_r0x10012a83;\n            }\n            goto code_r0x10012adb;\n        }\ncode_r0x10012a6b:\n        cVar5 = fcn.10014245();\n    }\n    if ((cVar5 == '\\0') || (*(param_1 + 0x30) != '\\0')) goto code_r0x10012c65;\n    uVar2 = *(param_1 + 0x20);\n    var_ch = 0;\n    var_8h._0_2_ = 0;\n    arg_ch = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    arg_ch = 1;\n                }\n                goto code_r0x10012b65;\n            }\n            uVar6 = 0x2b;\n        }\n        else {\n            uVar6 = 0x2d;\n        }\n        var_ch = uVar6;\n        arg_ch = 1;\n    }\ncode_r0x10012b65:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&var_ch + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (iVar1 == 0x41)) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&var_ch + arg_ch * 2 + 2) = (!bVar3 - 1U & 0xe0) + 0x78;\n        arg_ch = arg_ch + 2;\n    }\n    arg_10h = (*(param_1 + 0x24) - *(param_1 + 0x38)) - arg_ch;\n    if ((uVar2 & 0xc) == 0) {\n        fcn.1000f0d4(param_1 + 0x448, 0x20, arg_10h, param_1 + 0x18);\n    }\n    fcn.10015084(&var_ch, arg_ch, param_1 + 0x18, *(param_1 + 0xc));\n    arg_14h = param_1 + 0x18;\n    if (((*(param_1 + 0x20) >> 3 & 1) != 0) && ((*(param_1 + 0x20) >> 2 & 1) == 0)) {\n        fcn.1000f0d4(param_1 + 0x448, 0x30, arg_10h, arg_14h);\n    }\n    fcn.10014e4f(0);\n    if ((-1 < *arg_14h) && ((*(param_1 + 0x20) >> 2 & 1) != 0)) {\n        fcn.1000f0d4(param_1 + 0x448, 0x20, arg_10h, arg_14h);\n    }\ncode_r0x10012c65:\n    fcn.10001112(unaff_ESI);\n    return;\n}\n",
        "token_count": 1667
    },
    "10011b01": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.10011b01(uint32_t *param_1)\n\n{\n    uint32_t *arg_14h;\n    int16_t iVar1;\n    uint16_t *puVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    uint16_t *puVar6;\n    uint *puVar7;\n    uint32_t uVar8;\n    int32_t arg_ch;\n    uint unaff_ESI;\n    int32_t arg_10h;\n    uint16_t uVar9;\n    uint arg_8h;\n    uint arg_ch_00;\n    uint uStack16;\n    ushort uStack12;\n    uint32_t uStack8;\n    \n    puVar6 = *(param_1 + 0x32);\n    if (puVar6 != 0x46) {\n        if (puVar6 == 0x4e) {\n            puVar6 = *param_1 & 8;\n            if (puVar6 == NULL) {\n                param_1[7] = 8;\ncode_r0x10011b3c:\n                puVar7 = fcn.10016fba();\n                *puVar7 = 0x16;\n                uVar8 = fcn.1001a732();\n                return uVar8 & 0xffffff00;\n            }\n        }\n        else {\n            if (param_1[0xb] != 0) goto code_r0x10011b3c;\n            if (puVar6 < 0x6b) {\n                if (puVar6 == 0x6a) {\n                    param_1[0xb] = 5;\n                }\n                else if (puVar6 == 0x49) {\n                    puVar2 = param_1[4];\n                    puVar6 = *puVar2;\n                    if ((puVar6 == 0x33) && (puVar2[1] == 0x32)) {\n                        puVar6 = puVar2 + 2;\n                        param_1[0xb] = 10;\n                        param_1[4] = puVar6;\n                    }\n                    else if ((puVar6 == 0x36) && (puVar2[1] == 0x34)) {\n                        puVar6 = puVar2 + 2;\n                        param_1[0xb] = 0xb;\n                        param_1[4] = puVar6;\n                    }\n                    else if (((((puVar6 == 0x64) || (puVar6 == 0x69)) || (puVar6 == 0x6f)) ||\n                             ((puVar6 == 0x75 || (puVar6 == 0x78)))) || (puVar6 == 0x58)) {\n                        param_1[0xb] = 9;\n                    }\n                }\n                else if (puVar6 == 0x4c) {\n                    param_1[0xb] = 8;\n                }\n                else if (puVar6 == 0x54) {\n                    param_1[0xb] = 0xd;\n                }\n                else if (puVar6 == 0x68) {\n                    puVar6 = param_1[4];\n                    if (*puVar6 == 0x68) {\n                        puVar6 = puVar6 + 1;\n                        param_1[0xb] = 1;\n                        param_1[4] = puVar6;\n                    }\n                    else {\n                        param_1[0xb] = 2;\n                    }\n                }\n            }\n            else if (puVar6 == 0x6c) {\n                puVar6 = param_1[4];\n                if (*puVar6 == 0x6c) {\n                    puVar6 = puVar6 + 1;\n                    param_1[0xb] = 4;\n                    param_1[4] = puVar6;\n                }\n                else {\n                    param_1[0xb] = 3;\n                }\n            }\n            else if (puVar6 == 0x74) {\n                param_1[0xb] = 7;\n            }\n            else if (puVar6 == 0x77) {\n                param_1[0xb] = 0xc;\n            }\n            else if (puVar6 == 0x7a) {\n                param_1[0xb] = 6;\n            }\n        }\ncode_r0x10011c7a:\n        return CONCAT31(puVar6 >> 8, 1);\n    }\n    puVar6 = *param_1 & 8;\n    if (puVar6 != NULL) goto code_r0x10011c7a;\n    param_1[7] = 7;\n    uStack8 = *0x10081004 ^ &stack0xfffffffc;\n    uVar9 = *(param_1 + 0x32);\n    if (uVar9 < 0x65) {\n        if (uVar9 == 100) {\ncode_r0x10012d34:\n            param_1[8] = param_1[8] | 0x10;\ncode_r0x10012d38:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x10012d3b:\n            cVar5 = fcn.10013d8d(arg_8h, arg_ch_00);\n        }\n        else if (uVar9 < 0x59) {\n            if (uVar9 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x10012ce0:\n                arg_8h = 0x10;\n                goto code_r0x10012d3b;\n            }\n            if (uVar9 != 0x41) {\n                if (uVar9 == 0x43) goto code_r0x10012cf4;\n                if (uVar9 < 0x45) goto code_r0x10012ed1;\n                if (0x47 < uVar9) {\n                    if (uVar9 != 0x53) goto code_r0x10012ed1;\n                    goto code_r0x10012cc8;\n                }\n            }\ncode_r0x10012d44:\n            cVar5 = fcn.10013653();\n        }\n        else if (uVar9 == 0x5a) {\n            cVar5 = fcn.1001318f();\n        }\n        else {\n            if (uVar9 == 0x61) goto code_r0x10012d44;\n            if (uVar9 != 99) goto code_r0x10012ed1;\ncode_r0x10012cf4:\n            cVar5 = fcn.100139ec(0);\n        }\n    }\n    else if (uVar9 < 0x71) {\n        if (uVar9 == 0x70) {\n            cVar5 = fcn.1001413e();\n        }\n        else {\n            if (uVar9 < 0x68) goto code_r0x10012d44;\n            if (uVar9 == 0x69) goto code_r0x10012d34;\n            if (uVar9 == 0x6e) {\n                cVar5 = fcn.10014018();\n            }\n            else {\n                if (uVar9 != 0x6f) goto code_r0x10012ed1;\n                cVar5 = fcn.100140ef();\n            }\n        }\n    }\n    else {\n        if (uVar9 != 0x73) {\n            if (uVar9 != 0x75) {\n                if (uVar9 != 0x78) goto code_r0x10012ed1;\n                arg_ch_00 = 0;\n                goto code_r0x10012ce0;\n            }\n            goto code_r0x10012d38;\n        }\ncode_r0x10012cc8:\n        cVar5 = fcn.100142b9();\n    }\n    if (((cVar5 == '\\0') || (cVar5 = fcn.10010cde(),  cVar5 != '\\0')) || (*(param_1 + 0xc) != '\\0'))\n    goto code_r0x10012ed1;\n    uVar8 = param_1[8];\n    uStack16 = 0;\n    uStack12 = 0;\n    arg_ch = 0;\n    if ((uVar8 >> 4 & 1) != 0) {\n        if ((uVar8 >> 6 & 1) == 0) {\n            if ((uVar8 & 1) == 0) {\n                if ((uVar8 >> 1 & 1) != 0) {\n                    uStack16 = 0x20;\n                    arg_ch = 1;\n                }\n                goto code_r0x10012dd1;\n            }\n            uVar9 = 0x2b;\n        }\n        else {\n            uVar9 = 0x2d;\n        }\n        uStack16 = uVar9;\n        arg_ch = 1;\n    }\ncode_r0x10012dd1:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar8 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&uStack16 + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (iVar1 == 0x41)) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&uStack16 + arg_ch * 2 + 2) = (!bVar3 - 1U & 0xe0) + 0x78;\n        arg_ch = arg_ch + 2;\n    }\n    arg_10h = (param_1[9] - param_1[0xe]) - arg_ch;\n    if ((uVar8 & 0xc) == 0) {\n        fcn.1000f0d4(param_1 + 0x112, 0x20, arg_10h, param_1 + 6);\n    }\n    fcn.10015084(&uStack16, arg_ch, param_1 + 6, param_1[3]);\n    arg_14h = param_1 + 6;\n    if (((param_1[8] >> 3 & 1) != 0) && ((param_1[8] >> 2 & 1) == 0)) {\n        fcn.1000f0d4(param_1 + 0x112, 0x30, arg_10h, arg_14h);\n    }\n    fcn.10014e4f(0);\n    if ((-1 < *arg_14h) && ((param_1[8] >> 2 & 1) != 0)) {\n        fcn.1000f0d4(param_1 + 0x112, 0x20, arg_10h, arg_14h);\n    }\ncode_r0x10012ed1:\n    uVar8 = fcn.10001112(unaff_ESI);\n    return uVar8;\n}\n",
        "token_count": 2546
    },
    "10012c75": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.10012c75(int32_t param_1)\n\n{\n    int32_t *arg_14h;\n    int16_t iVar1;\n    uint32_t uVar2;\n    bool bVar3;\n    bool bVar4;\n    char cVar5;\n    int32_t arg_ch;\n    uint unaff_ESI;\n    int32_t arg_10h;\n    uint16_t uVar6;\n    uint arg_8h;\n    uint arg_ch_00;\n    uint32_t var_ch;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x10081004 ^ &stack0xfffffffc;\n    uVar6 = *(param_1 + 0x32);\n    if (uVar6 < 0x65) {\n        if (uVar6 == 100) {\ncode_r0x10012d34:\n            *(param_1 + 0x20) = *(param_1 + 0x20) | 0x10;\ncode_r0x10012d38:\n            arg_ch_00 = 0;\n            arg_8h = 10;\ncode_r0x10012d3b:\n            cVar5 = fcn.10013d8d(arg_8h, arg_ch_00);\n        }\n        else if (uVar6 < 0x59) {\n            if (uVar6 == 0x58) {\n                arg_ch_00 = 1;\ncode_r0x10012ce0:\n                arg_8h = 0x10;\n                goto code_r0x10012d3b;\n            }\n            if (uVar6 != 0x41) {\n                if (uVar6 == 0x43) goto code_r0x10012cf4;\n                if (uVar6 < 0x45) goto code_r0x10012ed1;\n                if (0x47 < uVar6) {\n                    if (uVar6 != 0x53) goto code_r0x10012ed1;\n                    goto code_r0x10012cc8;\n                }\n            }\ncode_r0x10012d44:\n            cVar5 = fcn.10013653();\n        }\n        else if (uVar6 == 0x5a) {\n            cVar5 = fcn.1001318f();\n        }\n        else {\n            if (uVar6 == 0x61) goto code_r0x10012d44;\n            if (uVar6 != 99) goto code_r0x10012ed1;\ncode_r0x10012cf4:\n            cVar5 = fcn.100139ec(0);\n        }\n    }\n    else if (uVar6 < 0x71) {\n        if (uVar6 == 0x70) {\n            cVar5 = fcn.1001413e();\n        }\n        else {\n            if (uVar6 < 0x68) goto code_r0x10012d44;\n            if (uVar6 == 0x69) goto code_r0x10012d34;\n            if (uVar6 == 0x6e) {\n                cVar5 = fcn.10014018();\n            }\n            else {\n                if (uVar6 != 0x6f) goto code_r0x10012ed1;\n                cVar5 = fcn.100140ef();\n            }\n        }\n    }\n    else {\n        if (uVar6 != 0x73) {\n            if (uVar6 != 0x75) {\n                if (uVar6 != 0x78) goto code_r0x10012ed1;\n                arg_ch_00 = 0;\n                goto code_r0x10012ce0;\n            }\n            goto code_r0x10012d38;\n        }\ncode_r0x10012cc8:\n        cVar5 = fcn.100142b9();\n    }\n    if (((cVar5 == '\\0') || (cVar5 = fcn.10010cde(),  cVar5 != '\\0')) || (*(param_1 + 0x30) != '\\0'))\n    goto code_r0x10012ed1;\n    uVar2 = *(param_1 + 0x20);\n    var_ch = 0;\n    var_8h._0_2_ = 0;\n    arg_ch = 0;\n    if ((uVar2 >> 4 & 1) != 0) {\n        if ((uVar2 >> 6 & 1) == 0) {\n            if ((uVar2 & 1) == 0) {\n                if ((uVar2 >> 1 & 1) != 0) {\n                    var_ch = 0x20;\n                    arg_ch = 1;\n                }\n                goto code_r0x10012dd1;\n            }\n            uVar6 = 0x2b;\n        }\n        else {\n            uVar6 = 0x2d;\n        }\n        var_ch = uVar6;\n        arg_ch = 1;\n    }\ncode_r0x10012dd1:\n    iVar1 = *(param_1 + 0x32);\n    if (((iVar1 == 0x78) || (iVar1 == 0x58)) && ((uVar2 >> 5 & 1) != 0)) {\n        bVar3 = true;\n    }\n    else {\n        bVar3 = false;\n    }\n    if ((iVar1 == 0x61) || (iVar1 == 0x41)) {\n        bVar4 = true;\n    }\n    else {\n        bVar4 = false;\n    }\n    if ((bVar3) || (bVar4)) {\n        *(&var_ch + arg_ch * 2) = 0x30;\n        if ((iVar1 == 0x58) || (iVar1 == 0x41)) {\n            bVar3 = true;\n        }\n        else {\n            bVar3 = false;\n        }\n        *(&var_ch + arg_ch * 2 + 2) = (!bVar3 - 1U & 0xe0) + 0x78;\n        arg_ch = arg_ch + 2;\n    }\n    arg_10h = (*(param_1 + 0x24) - *(param_1 + 0x38)) - arg_ch;\n    if ((uVar2 & 0xc) == 0) {\n        fcn.1000f0d4(param_1 + 0x448, 0x20, arg_10h, param_1 + 0x18);\n    }\n    fcn.10015084(&var_ch, arg_ch, param_1 + 0x18, *(param_1 + 0xc));\n    arg_14h = param_1 + 0x18;\n    if (((*(param_1 + 0x20) >> 3 & 1) != 0) && ((*(param_1 + 0x20) >> 2 & 1) == 0)) {\n        fcn.1000f0d4(param_1 + 0x448, 0x30, arg_10h, arg_14h);\n    }\n    fcn.10014e4f(0);\n    if ((-1 < *arg_14h) && ((*(param_1 + 0x20) >> 2 & 1) != 0)) {\n        fcn.1000f0d4(param_1 + 0x448, 0x20, arg_10h, arg_14h);\n    }\ncode_r0x10012ed1:\n    fcn.10001112(unaff_ESI);\n    return;\n}\n",
        "token_count": 1692
    },
    "10013368": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.10013368(uint *param_1)\n\n{\n    char *pcVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint *puVar5;\n    uint arg_18h;\n    uint arg_14h;\n    uint arg_10h;\n    char *pcVar6;\n    char *pcVar7;\n    uint arg_20h;\n    uint arg_24h;\n    uint noname_8;\n    uint arg_2ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    param_1[8] = param_1[8] | 0x10;\n    var_8h = param_1;\n    var_4h = param_1;\n    uVar3 = fcn.10014a44();\n    if (uVar3 != '\\0') {\n        uVar3 = fcn.10010ca0();\n        if (uVar3 == '\\0') {\n            uVar3 = uVar3 & 0xffffff00 | 1;\n        }\n        else {\n            if (param_1[10] < 0) {\n                if ((*(param_1 + 0x31) == 'a') || (*(param_1 + 0x31) == 'A')) {\n                    param_1[10] = 0xd;\n                }\n                else {\n                    param_1[10] = 6;\n                }\n            }\n            else if ((param_1[10] == 0) && ((*(param_1 + 0x31) == 'g' || (*(param_1 + 0x31) == 'G')))) {\n                param_1[10] = 1;\n            }\n            cVar2 = fcn.1000e03e(param_1[10] + 0x15d);\n            if (cVar2 == '\\0') {\n                iVar4 = fcn.1000e019();\n                param_1[10] = iVar4 + -0x15d;\n            }\n            puVar5 = param_1[0x111];\n            if (param_1[0x111] == NULL) {\n                puVar5 = param_1 + 0x10;\n            }\n            var_8h = NULL;\n            var_4h = NULL;\n            param_1[0xd] = puVar5;\n            uVar3 = fcn.1000e928(&var_8h);\n            if (uVar3 != '\\0') {\n                arg_18h = fcn.1000e019();\n                puVar5 = param_1[0x111];\n                if (param_1[0x111] == NULL) {\n                    puVar5 = param_1 + 0x10;\n                }\n                arg_2ch = param_1[2];\n                iVar4 = *(param_1 + 0x31);\n                noname_8 = param_1[1];\n                arg_24h = *param_1;\n                arg_20h = param_1[10];\n                arg_14h = fcn.1000eef4();\n                arg_10h = fcn.1000e019();\n                fcn.1001f1dc(&var_8h, puVar5, arg_10h, arg_14h, arg_18h, iVar4, arg_20h, arg_24h, noname_8, arg_2ch);\n                if (((param_1[8] >> 5 & 1) != 0) && (param_1[10] == 0)) {\n                    fcn.1000fa5b(param_1[0xd], param_1[2]);\n                }\n                if (((*(param_1 + 0x31) == 'g') || (*(param_1 + 0x31) == 'G')) && ((param_1[8] >> 5 & 1) == 0)) {\n                    fcn.1000f932(param_1[0xd], param_1[2]);\n                }\n                pcVar6 = param_1[0xd];\n                if (*pcVar6 == '-') {\n                    param_1[8] = param_1[8] | 0x40;\n                    pcVar6 = pcVar6 + 1;\n                    param_1[0xd] = pcVar6;\n                }\n                pcVar7 = param_1[0xd];\n                cVar2 = *pcVar7;\n                if (((cVar2 == 'i') || (cVar2 == 'I')) || ((cVar2 == 'n' || (cVar2 == 'N')))) {\n                    *(param_1 + 0x31) = 0x73;\n                }\n                pcVar1 = pcVar7 + 1;\n                do {\n                    cVar2 = *pcVar7;\n                    pcVar7 = pcVar7 + 1;\n                } while (cVar2 != '\\0');\n                uVar3 = CONCAT31(pcVar6 >> 8, 1);\n                param_1[0xe] = pcVar7 - pcVar1;\n            }\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 1133
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "10013ac5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.10013ac5(uint arg_8h, uint arg_ch)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    char *pcVar4;\n    int32_t in_ECX;\n    uint32_t arg_ch_00;\n    bool bVar5;\n    \n    iVar1 = fcn.10012fd0(*(in_ECX + 0x2c));\n    if (iVar1 == 1) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else if (iVar1 == 2) {\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n        else {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n        }\n    }\n    else {\n        if (iVar1 != 4) {\n            if (iVar1 != 8) {\n                puVar2 = fcn.10016fba();\n                *puVar2 = 0x16;\n                uVar3 = fcn.1001a732();\n                return uVar3 & 0xffffff00;\n            }\n            *(in_ECX + 0x14) = *(in_ECX + 0x14) + 8;\n            uVar3 = *(*(in_ECX + 0x14) + -8);\n            arg_ch_00 = *(*(in_ECX + 0x14) + -4);\n            goto code_r0x10013b76;\n        }\n        *(in_ECX + 0x14) = *(in_ECX + 0x14) + 4;\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            uVar3 = *(*(in_ECX + 0x14) + -4);\n            arg_ch_00 = 0;\n            goto code_r0x10013b76;\n        }\n        uVar3 = *(*(in_ECX + 0x14) + -4);\n    }\n    arg_ch_00 = uVar3 >> 0x1f;\ncode_r0x10013b76:\n    if ((((*(in_ECX + 0x20) >> 4 & 1) != 0) && (arg_ch_00 < 1)) && (arg_ch_00 < 0)) {\n        bVar5 = uVar3 != 0;\n        uVar3 = -uVar3;\n        arg_ch_00 = -(arg_ch_00 + bVar5);\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x40;\n    }\n    if (*(in_ECX + 0x28) < 0) {\n        *(in_ECX + 0x28) = 1;\n    }\n    else {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xfffffff7;\n        if (0x200 < *(in_ECX + 0x28)) {\n            *(in_ECX + 0x28) = 0x200;\n        }\n    }\n    if ((uVar3 | arg_ch_00) == 0) {\n        *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n    }\n    if (iVar1 == 8) {\n        fcn.1000efc3(uVar3, arg_ch_00, arg_8h, arg_ch);\n    }\n    else {\n        fcn.1000ef4e(uVar3, arg_8h, arg_ch);\n    }\n    pcVar4 = *(in_ECX + 0x20) >> 7;\n    if (((pcVar4 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (pcVar4 = *(in_ECX + 0x34),  *pcVar4 != '0')))) {\n        *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n        **(in_ECX + 0x34) = 0x30;\n        *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n    }\n    return CONCAT31(pcVar4 >> 8, 1);\n}\n",
        "token_count": 1104
    },
    "10013c0f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.10013c0f(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    uint32_t arg_ch_00;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar2 = fcn.10012fd0(*(in_ECX + 0x2c));\n    var_8h = 0;\n    var_4h = 0;\n    if (iVar2 == 1) {\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.1000e1e1(&var_8h);\n        }\n        else {\n            cVar1 = fcn.1000e0c4(&var_8h);\n        }\n    }\n    else if (iVar2 == 2) {\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.1000e4b3(&var_8h);\n        }\n        else {\n            cVar1 = fcn.1000e2fe(&var_8h);\n        }\n    }\n    else if (iVar2 == 4) {\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.1000e6e8(&var_8h);\n        }\n        else {\n            cVar1 = fcn.1000e5d0(&var_8h);\n        }\n    }\n    else {\n        if (iVar2 != 8) {\n            puVar3 = fcn.10016fba();\n            *puVar3 = 0x16;\n            fcn.1001a732();\n            return 0;\n        }\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.1000ea64(&var_8h);\n        }\n        else {\n            cVar1 = fcn.1000ea64(&var_8h);\n        }\n    }\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    cVar1 = fcn.10010ca0();\n    if (cVar1 != '\\0') {\n        arg_8h_00 = var_8h;\n        arg_ch_00 = var_4h;\n        if ((((*(in_ECX + 0x20) >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x40;\n            arg_8h_00 = -var_8h;\n            arg_ch_00 = -(var_4h + (var_8h != 0));\n        }\n        if (*(in_ECX + 0x28) < 0) {\n            *(in_ECX + 0x28) = 1;\n        }\n        else {\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xfffffff7;\n            if (0x200 < *(in_ECX + 0x28)) {\n                *(in_ECX + 0x28) = 0x200;\n            }\n        }\n        if ((arg_8h_00 | arg_ch_00) == 0) {\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n        }\n        if (iVar2 == 8) {\n            fcn.1000efc3(arg_8h_00, arg_ch_00, arg_8h, arg_ch);\n        }\n        else {\n            fcn.1000ef4e(arg_8h_00, arg_8h, arg_ch);\n        }\n        if (((*(in_ECX + 0x20) >> 7 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (**(in_ECX + 0x34) != '0')))) {\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n            **(in_ECX + 0x34) = 0x30;\n            *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1044
    },
    "10013d8d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.10013d8d(uint arg_8h, uint arg_ch)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t in_ECX;\n    uint32_t arg_8h_00;\n    uint32_t arg_ch_00;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    iVar2 = fcn.10012fd0(*(in_ECX + 0x2c));\n    var_8h = 0;\n    var_4h = 0;\n    if (iVar2 == 1) {\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.1000e260(&var_8h);\n        }\n        else {\n            cVar1 = fcn.1000e143(&var_8h);\n        }\n    }\n    else if (iVar2 == 2) {\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.1000e532(&var_8h);\n        }\n        else {\n            cVar1 = fcn.1000e37d(&var_8h);\n        }\n    }\n    else if (iVar2 == 4) {\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.1000e76e(&var_8h);\n        }\n        else {\n            cVar1 = fcn.1000e64d(&var_8h);\n        }\n    }\n    else {\n        if (iVar2 != 8) {\n            puVar3 = fcn.10016fba();\n            *puVar3 = 0x16;\n            fcn.1001a732();\n            return 0;\n        }\n        if ((*(in_ECX + 0x20) >> 4 & 1) == 0) {\n            cVar1 = fcn.1000eaf2(&var_8h);\n        }\n        else {\n            cVar1 = fcn.1000eaf2(&var_8h);\n        }\n    }\n    if (cVar1 == '\\0') {\n        return 0;\n    }\n    cVar1 = fcn.10010ca0();\n    if (cVar1 != '\\0') {\n        arg_8h_00 = var_8h;\n        arg_ch_00 = var_4h;\n        if ((((*(in_ECX + 0x20) >> 4 & 1) != 0) && (var_4h < 1)) && (var_4h < 0)) {\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) | 0x40;\n            arg_8h_00 = -var_8h;\n            arg_ch_00 = -(var_4h + (var_8h != 0));\n        }\n        if (*(in_ECX + 0x28) < 0) {\n            *(in_ECX + 0x28) = 1;\n        }\n        else {\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xfffffff7;\n            if (0x200 < *(in_ECX + 0x28)) {\n                *(in_ECX + 0x28) = 0x200;\n            }\n        }\n        if ((arg_8h_00 | arg_ch_00) == 0) {\n            *(in_ECX + 0x20) = *(in_ECX + 0x20) & 0xffffffdf;\n        }\n        if (iVar2 == 8) {\n            fcn.1000efc3(arg_8h_00, arg_ch_00, arg_8h, arg_ch);\n        }\n        else {\n            fcn.1000ef4e(arg_8h_00, arg_8h, arg_ch);\n        }\n        if (((*(in_ECX + 0x20) >> 7 & 1) != 0) && ((*(in_ECX + 0x38) == 0 || (**(in_ECX + 0x34) != '0')))) {\n            *(in_ECX + 0x34) = *(in_ECX + 0x34) + -1;\n            **(in_ECX + 0x34) = 0x30;\n            *(in_ECX + 0x38) = *(in_ECX + 0x38) + 1;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1038
    },
    "100141c9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nchar __fastcall fcn.100141c9(uint *param_1)\n\n{\n    char16_t **arg_8h;\n    char cVar1;\n    uint uVar2;\n    int32_t arg_ch;\n    \n    arg_8h = param_1 + 0xd;\n    cVar1 = fcn.1000e812(arg_8h);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.10010ca0();\n        if (cVar1 != '\\0') {\n            arg_ch = param_1[10];\n            if (arg_ch == -1) {\n                arg_ch = 0x7fffffff;\n            }\n            cVar1 = fcn.1000edb8(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n            if (cVar1 == '\\0') {\n                if (*arg_8h == NULL) {\n                    *arg_8h = 0x1004220c;\n                }\n                uVar2 = fcn.1001e628(*arg_8h, arg_ch);\n            }\n            else {\n                if (*arg_8h == NULL) {\n                    *arg_8h = L\"(null)\";\n                }\n                *(param_1 + 0xf) = 1;\n                uVar2 = fcn.1001e74f(*arg_8h, arg_ch);\n            }\n            param_1[0xe] = uVar2;\n        }\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 346
    },
    "100142b9": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nchar __fastcall fcn.100142b9(uint *param_1)\n\n{\n    char16_t **arg_8h;\n    char cVar1;\n    uint uVar2;\n    int32_t arg_8h_00;\n    \n    arg_8h = param_1 + 0xd;\n    cVar1 = fcn.1000e890(arg_8h);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.10010ca0();\n        if (cVar1 != '\\0') {\n            arg_8h_00 = param_1[10];\n            if (arg_8h_00 == -1) {\n                arg_8h_00 = 0x7fffffff;\n            }\n            cVar1 = fcn.1000edf8(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n            if (cVar1 == '\\0') {\n                if (*arg_8h == NULL) {\n                    *arg_8h = 0x1004220c;\n                }\n                uVar2 = fcn.1001434d(arg_8h_00);\n            }\n            else {\n                if (*arg_8h == NULL) {\n                    *arg_8h = L\"(null)\";\n                }\n                *(param_1 + 0xf) = 1;\n                uVar2 = fcn.1001e74f(*arg_8h, arg_8h_00);\n            }\n            param_1[0xe] = uVar2;\n        }\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 365
    },
    "100143da": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.100143da(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    char *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n        *(param_1 + 0x24) = *(*(param_1 + 0x14) + -4);\n    }\n    else {\n        var_4h = NULL;\n        iVar1 = fcn.1001dcdf(*(param_1 + 0x10), &var_4h, 10);\n        iVar1 = iVar1 + -1;\n        *(param_1 + 0x10) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar1) && (*var_4h == '$')) && (iVar1 < 100)) {\n                iVar2 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar1) {\n                    iVar2 = iVar1;\n                }\n                *(param_1 + 0xaa4) = iVar2;\n                uVar3 = fcn.10014710(param_1 + 0x464 + iVar1 * 0x10, 1, *(param_1 + 0x31), *(param_1 + 0x2c));\n                return uVar3;\n            }\n            puVar4 = fcn.10016fba();\n            *puVar4 = 0x16;\n            fcn.1001a732();\n            return 0;\n        }\n        *(param_1 + 0x24) = **(param_1 + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 437
    },
    "10014490": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.10014490(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    int16_t *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n        *(param_1 + 0x24) = *(*(param_1 + 0x14) + -4);\n    }\n    else {\n        var_4h = NULL;\n        iVar1 = fcn.1001dd37(*(param_1 + 0x10), &var_4h, 10);\n        iVar1 = iVar1 + -1;\n        *(param_1 + 0x10) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar1) && (*var_4h == 0x24)) && (iVar1 < 100)) {\n                iVar2 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar1) {\n                    iVar2 = iVar1;\n                }\n                *(param_1 + 0xaa4) = iVar2;\n                uVar3 = fcn.1001475b(param_1 + 0x464 + iVar1 * 0x10, 1, *(param_1 + 0x32), *(param_1 + 0x2c));\n                return uVar3;\n            }\n            puVar4 = fcn.10016fba();\n            *puVar4 = 0x16;\n            fcn.1001a732();\n            return 0;\n        }\n        *(param_1 + 0x24) = **(param_1 + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 443
    },
    "10014557": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.10014557(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    char *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n        *(param_1 + 0x28) = *(*(param_1 + 0x14) + -4);\n    }\n    else {\n        var_4h = NULL;\n        iVar1 = fcn.1001dcdf(*(param_1 + 0x10), &var_4h, 10);\n        iVar1 = iVar1 + -1;\n        *(param_1 + 0x10) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar1) && (*var_4h == '$')) && (iVar1 < 100)) {\n                iVar2 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar1) {\n                    iVar2 = iVar1;\n                }\n                *(param_1 + 0xaa4) = iVar2;\n                uVar3 = fcn.10014710(param_1 + 0x464 + iVar1 * 0x10, 1, *(param_1 + 0x31), *(param_1 + 0x2c));\n                return uVar3;\n            }\n            puVar4 = fcn.10016fba();\n            *puVar4 = 0x16;\n            fcn.1001a732();\n            return 0;\n        }\n        *(param_1 + 0x28) = **(param_1 + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 437
    },
    "1001460d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.1001460d(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    uint *puVar4;\n    int16_t *var_4h;\n    \n    if (*(param_1 + 0x45c) == 1) {\n        *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n        *(param_1 + 0x28) = *(*(param_1 + 0x14) + -4);\n    }\n    else {\n        var_4h = NULL;\n        iVar1 = fcn.1001dd37(*(param_1 + 0x10), &var_4h, 10);\n        iVar1 = iVar1 + -1;\n        *(param_1 + 0x10) = var_4h + 1;\n        if (*(param_1 + 0x458) == 1) {\n            if (((-1 < iVar1) && (*var_4h == 0x24)) && (iVar1 < 100)) {\n                iVar2 = *(param_1 + 0xaa4);\n                if (*(param_1 + 0xaa4) < iVar1) {\n                    iVar2 = iVar1;\n                }\n                *(param_1 + 0xaa4) = iVar2;\n                uVar3 = fcn.1001475b(param_1 + 0x464 + iVar1 * 0x10, 1, *(param_1 + 0x32), *(param_1 + 0x2c));\n                return uVar3;\n            }\n            puVar4 = fcn.10016fba();\n            *puVar4 = 0x16;\n            fcn.1001a732();\n            return 0;\n        }\n        *(param_1 + 0x28) = **(param_1 + 0x46c + iVar1 * 0x10);\n    }\n    return 1;\n}\n",
        "token_count": 444
    },
    "10014710": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.10014710(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    \n    if (*arg_8h == 0) {\n        *arg_8h = arg_ch;\n        *(arg_8h + 1) = arg_10h;\n        arg_8h[3] = arg_14h;\n    }\n    else {\n        cVar1 = fcn.1000fad4(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (cVar1 == '\\0') {\n            puVar2 = fcn.10016fba();\n            *puVar2 = 0x16;\n            fcn.1001a732();\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 200
    },
    "1001475b": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __cdecl fcn.1001475b(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    \n    if (*arg_8h == 0) {\n        *arg_8h = arg_ch;\n        *(arg_8h + 1) = arg_10h;\n        arg_8h[3] = arg_14h;\n    }\n    else {\n        cVar1 = fcn.1000fc02(arg_8h, arg_ch, arg_10h, arg_14h);\n        if (cVar1 == '\\0') {\n            puVar2 = fcn.10016fba();\n            *puVar2 = 0x16;\n            fcn.1001a732();\n            return 0;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 201
    },
    "100149c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.100149c4(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    char cVar3;\n    uint *puVar4;\n    int32_t *piVar5;\n    \n    cVar3 = fcn.100149a2();\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    if ((*(param_1 + 0x45c) == 2) && (*(param_1 + 0x458) == 1)) {\n        iVar1 = *(param_1 + 0xaa4);\n        for (piVar5 = param_1 + 0x464; piVar5 != param_1 + 0x474 + iVar1 * 0x10; piVar5 = piVar5 + 4) {\n            piVar5[2] = *(param_1 + 0x14);\n            iVar2 = *piVar5;\n            if (iVar2 == 1) {\ncode_r0x10014a23:\n                *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n            }\n            else {\n                if (iVar2 != 2) {\n                    if (iVar2 == 3) goto code_r0x10014a23;\n                    if (iVar2 != 4) {\n                        puVar4 = fcn.10016fba();\n                        *puVar4 = 0x16;\n                        fcn.1001a732();\n                        return 0;\n                    }\n                }\n                *(param_1 + 0x14) = *(param_1 + 0x14) + 8;\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 380
    },
    "10014a44": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.10014a44(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    \n    if ((*(param_1 + 0x45c) != 2) || (*(param_1 + 0x458) != 1)) {\n        return 1;\n    }\n    iVar1 = *(param_1 + 0xaa8);\n    if ((-1 < iVar1) && (iVar1 < 100)) {\n        uVar2 = fcn.10014710(param_1 + 0x464 + iVar1 * 0x10, 4, *(param_1 + 0x31), *(param_1 + 0x2c));\n        return uVar2;\n    }\n    puVar3 = fcn.10016fba();\n    *puVar3 = 0x16;\n    fcn.1001a732();\n    return 0;\n}\n",
        "token_count": 212
    },
    "10014a97": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint __fastcall fcn.10014a97(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *puVar3;\n    \n    if ((*(param_1 + 0x45c) != 2) || (*(param_1 + 0x458) != 1)) {\n        return 1;\n    }\n    iVar1 = *(param_1 + 0xaa8);\n    if ((-1 < iVar1) && (iVar1 < 100)) {\n        uVar2 = fcn.1001475b(param_1 + 0x464 + iVar1 * 0x10, 4, *(param_1 + 0x32), *(param_1 + 0x2c));\n        return uVar2;\n    }\n    puVar3 = fcn.10016fba();\n    *puVar3 = 0x16;\n    fcn.1001a732();\n    return 0;\n}\n",
        "token_count": 213
    },
    "1001c8db": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.1001c8db(char *lpValue, int32_t arg_ch)\n\n{\n    uint32_t arg_ch_00;\n    char cVar1;\n    code *pcVar2;\n    uint *puVar3;\n    char *pcVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    char *pcVar8;\n    uint uVar9;\n    char *pcVar10;\n    bool bVar11;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (lpValue == NULL) {\n        puVar3 = fcn.10016fba();\n        *puVar3 = 0x16;\n        return 0xffffffff;\n    }\n    pcVar4 = fcn.10030380(lpValue, 0x3d);\n    pcVar10 = lpValue;\n    if ((pcVar4 == NULL) || (pcVar4 == lpValue)) {\ncode_r0x1001c20a:\n        puVar3 = fcn.10016fba();\n        *puVar3 = 0x16;\n    }\n    else {\n        bVar11 = pcVar4[1] == '\\0';\n        if (*0x1008206c == *0x10082078) {\n            *0x1008206c = fcn.1001c5ff(*0x1008206c);\n        }\n        uVar9 = 0;\n        if (*0x1008206c == NULL) {\n            if ((arg_ch != 0) && (*0x10082070 != 0)) {\n                iVar5 = fcn.1000c641();\n                if (iVar5 != 0) goto code_r0x1001c27e;\n                goto code_r0x1001c20a;\n            }\n            if (bVar11) {\n                uVar9 = 0;\n                goto code_r0x1001c218;\n            }\n            *0x1008206c = fcn.1001a7df(1, 4);\n            fcn.1001a8c5(0);\n            if (*0x1008206c != NULL) {\n                if (*0x10082070 == 0) {\n                    *0x10082070 = fcn.1001a7df(1, 4);\n                    fcn.1001a8c5(0);\n                    if (*0x10082070 == 0) goto code_r0x1001c215;\n                }\ncode_r0x1001c27e:\n                if (*0x1008206c != NULL) goto code_r0x1001c282;\n            }\n        }\n        else {\ncode_r0x1001c282:\n            piVar6 = *0x1008206c;\n            iVar5 = fcn.1001c76e(lpValue, pcVar4 - lpValue);\n            if ((-1 < iVar5) && (*piVar6 != 0)) {\n                fcn.1001a8c5(piVar6[iVar5]);\n                if (bVar11) {\n                    for (; piVar6[iVar5] != 0; iVar5 = iVar5 + 1) {\n                        piVar6[iVar5] = piVar6[iVar5 + 1];\n                    }\n                    piVar6 = fcn.1001c8f1(piVar6, iVar5, 4);\n                    fcn.1001a8c5(0);\n                    if (piVar6 != NULL) {\ncode_r0x1001c331:\n                        *0x1008206c = piVar6;\n                    }\n                }\n                else {\n                    piVar6[iVar5] = lpValue;\n                    pcVar10 = NULL;\n                }\n                if (arg_ch != 0) {\n                    pcVar8 = lpValue;\n                    do {\n                        cVar1 = *pcVar8;\n                        pcVar8 = pcVar8 + 1;\n                    } while (cVar1 != '\\0');\n                    iVar5 = fcn.1001a7df(pcVar8 + (2 - (lpValue + 1)), 1);\n                    if (iVar5 != 0) {\n                        iVar7 = fcn.1000cd10(iVar5, pcVar8 + (2 - (lpValue + 1)), lpValue);\n                        if (iVar7 != 0) {\n                            fcn.1001a75f(0, 0, 0, 0, 0);\n                            pcVar2 = swi(3);\n                            uVar9 = (*pcVar2)();\n                            return uVar9;\n                        }\n                        (pcVar4 + (iVar5 - lpValue) + 1)[-1] = '\\0';\n                        iVar7 = (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableA)\n                                          (iVar5, ~-bVar11 & pcVar4 + (iVar5 - lpValue) + 1);\n                        if (iVar7 == 0) {\n                            puVar3 = fcn.10016fba();\n                            uVar9 = 0xffffffff;\n                            *puVar3 = 0x2a;\n                        }\n                    }\n                    fcn.1001a8c5(iVar5);\n                }\n                goto code_r0x1001c218;\n            }\n            if (bVar11) goto code_r0x1001c218;\n            arg_ch_00 = -iVar5 + 2;\n            if ((-iVar5 <= arg_ch_00) && (arg_ch_00 < 0x3fffffff)) {\n                piVar6 = fcn.1001c8f1(piVar6, arg_ch_00, 4);\n                fcn.1001a8c5(0);\n                if (piVar6 != NULL) {\n                    piVar6[-iVar5] = lpValue;\n                    piVar6[1 - iVar5] = 0;\n                    pcVar10 = NULL;\n                    goto code_r0x1001c331;\n                }\n            }\n        }\n    }\ncode_r0x1001c215:\n    uVar9 = 0xffffffff;\ncode_r0x1001c218:\n    fcn.1001a8c5(pcVar10);\n    return uVar9;\n}\n",
        "token_count": 1369
    },
    "1001d18f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nvoid fcn.1001d18f(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1dh;\n    \n    if (*(unaff_EBP + -0x1d) != '\\0') {\n        fcn.100192ae(3);\n    }\n    return;\n}\n",
        "token_count": 65
    },
    "1002b45e": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nfloat10 fcn.1002b45e(double param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_14h;\n    double dVar6;\n    double dVar7;\n    uchar in_XMM0 [16];\n    double dVar8;\n    double dVar9;\n    double dVar10;\n    double dVar11;\n    double dStack12;\n    \n    iVar4 = 0;\n    while( true ) {\n        uVar2 = SUB162(in_XMM0 >> 0x30, 0) >> 4;\n        dVar6 = SUB168(in_XMM0, 0) & *0x10047450 | *0x100474c0;\n        dVar7 = SUB168(in_XMM0, 0) & *0x10047458 | *0x100474c8;\n        uVar1 = SUB82(*0x10047470 + dVar6, 0) & 0x7f0;\n        dVar11 = *0x10047488 & dVar7;\n        dVar9 = (*0x10047480 & dVar6) * *(uVar1 + 0x10047b20) - *0x10047460;\n        dVar6 = (dVar6 - (*0x10047480 & dVar6)) * *(uVar1 + 0x10047b20);\n        dVar8 = (dVar7 - dVar11) * *(uVar1 + 0x10047b28);\n        dVar7 = dVar6 + dVar9;\n        dVar11 = dVar8 + (dVar11 * *(uVar1 + 0x10047b28) - *0x10047468);\n        uVar3 = uVar2 - 1;\n        if (uVar3 < 0x7fe) {\n            iVar4 = (uVar2 - 0x3ff) + iVar4;\n            dVar10 = iVar4;\n            iVar5 = 0;\n            if (uVar1 + iVar4 * 0x400 == 0) {\n                iVar5 = 0x10;\n            }\n            return ((*0x10047518 * dVar11 + *0x10047528) * dVar11 + *0x10047538) * dVar11 * dVar11 +\n                   ((*0x10047510 * dVar7 + *0x10047520) * dVar7 + *0x10047530) * dVar7 * dVar7 * dVar7 * dVar7 * dVar7 +\n                   *0x10047540 * dVar7 + *(uVar1 + 0x10047718) + dVar10 * *0x10047498 + (dVar8 & *(iVar5 + 0x100474a8))\n                   + *(uVar1 + 0x10047710) + dVar9 + dVar10 * *0x10047490 + (dVar6 & *(iVar5 + 0x100474a0));\n        }\n        dStack12 = -(*0x100474d0 == param_1);\n        if (SUB82(dStack12, 0) != 0) break;\n        if (uVar3 != 0xffffffff) {\n            if (uVar3 < 0x7ff) {\n                if (*0x100474c0 == (param_1 & *0x10047450 | *0x100474c0)) {\n                    return *0x100474f8;\n                }\n                arg_14h = 0x3e9;\n                dStack12 = *0x10047450;\n            }\n            else if (((uVar2 & 0x7ff) < 0x7ff) || ((SUB84(param_1, 0) | param_1 >> 0x20 & 0xfffff) == 0)) {\n                dStack12 = -NAN;\n                arg_14h = 9;\n            }\n            else {\n                arg_14h = 0x3e9;\n            }\n            goto code_r0x1002b66a;\n        }\n        in_XMM0 = CONCAT88(dVar11, param_1 * *0x100474e0);\n        iVar4 = -0x34;\n    }\n    arg_14h = 8;\n    dStack12 = *0x100474f0;\ncode_r0x1002b66a:\n    fcn.1002bcc3(&param_1, &param_1, &dStack12, arg_14h);\n    return dStack12;\n}\n",
        "token_count": 1030
    },
    "10030d20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint fcn.10030d20(void)\n\n{\n    uint32_t uVar1;\n    int32_t *piVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint32_t unaff_EDI;\n    uint32_t uStack8;\n    \n    if (uStack8 <= *0x100817d0) {\n        uStack8 = *0x100817d0 + 0xce;\n        *0x100817c2 = *0x100817c2 * -0x39;\n    }\n    if (*0x100817c4 == '\\0') {\n        *0x100817d0 = (uStack8 - *0x100817d4) + 0x4a;\n    }\n    iVar4 = *0x100817b8 * *0x100817b0 - uStack8;\n    uVar3 = (*0x100817b4 + 7) * 0x1c89 + iVar4 * 0x1c88;\n    *0x100817b8 = iVar4 + 0x51;\n    *0x100817d4 = ((uStack8 - 0x2ffc) + (uVar3 & 0xffff) & 0xffff) * uVar3 - *0x100817b8;\n    *0x100817b4 = ((iVar4 + uVar3) * 4 - *0x100817d4) + *0x100817b8 + -0x3bb0 + (uVar3 & 0xffff) * 2;\n    *0x100817b0 = *0x100817d4 + 0xce;\n    (*_sym.imp.KERNEL32.dll_GetEnvironmentVariableA)(\"Past \", 0x10094d60, 0x875);\n    iVar4 = 1;\n    do {\n        if ((*0x100817d4 == *0x100817fc) || (*0x100817b0 = unaff_EDI + 7 + *0x100817d4,  unaff_EDI == *0x100817f8))\n        break;\n        iVar4 = iVar4 + 2;\n    } while (iVar4 < 0x25);\n    if (*0x100817f4 == 0x1d10) {\n        unaff_EDI = unaff_EDI - *0x10081804;\n    }\n    *0x100817b6 = *0x100817b6 + unaff_EDI + '\\n';\n    iVar4 = *0x100817b8 * *0x100817b0 - unaff_EDI;\n    uVar3 = (*0x100817b4 + 7) * 0x1c89 + iVar4 * 0x1c88;\n    *0x100817b8 = iVar4 + 0x51;\n    uVar1 = (((iVar4 + uVar3) * 4 + (*0x100817b8 * 3 - ((unaff_EDI - 0x2ffc) + (uVar3 & 0xffff) & 0xffff) * uVar3)) -\n            (*0x100817b8 & 0xffff)) + -0x13bb0 + (uVar3 & 0xffff) * 2;\n    uVar3 = unaff_EDI - 0x7056;\n    *0x100817d4 = (uVar1 & 0xffff) + 0xf;\n    *0x100817b4 = uVar1;\n    *0x100817b0 = uVar3;\n    fcn.10030fe0();\n    *0x100817d4 = *0x100817d4 + -0x6f97;\n    if (unaff_EDI <= uVar3) {\n        *0x100817e8 = *0x100817b6 * *0x100817e8;\n        unaff_EDI = *0x100817b6 + 7 + uVar3;\n    }\n    *0x100817d0 = fcn.10031110();\n    *0x100817d4 = *0x100817b0 - 0x7d;\n    if (*0x100817c4 == '\\0') {\n        *0x100817d0 = (unaff_EDI - *0x100817d4) + 0x4a;\n    }\n    else {\n        *0x100817d4 = *0x100817d0 + (*0x100817b0 + 0x4afc) * 2 + unaff_EDI;\n    }\n    *0x10094d50 = 0x2e;\n    do {\n        if (*0x100817d0 == *0x100817e4) break;\n        piVar2 = *0x10094d50 * 4 + 0x100817e0;\n        *piVar2 = *piVar2 + 199;\n        unaff_EDI = *0x100817d0 - 0x7d;\n        *0x10094d50 = *0x10094d50 + -2;\n        *0x100817d0 = *0x100817d0 + 0x10a + unaff_EDI;\n    } while (1 < *0x10094d50);\n    fcn.100312a0();\n    *0x100817b0 = *0x100817b0 + ((0x53 - *0x100817d4) - *0x100817d0);\n    *0x100817d4 = *0x100817d4 * unaff_EDI - *0x100817b6;\n    (*_sym.imp.KERNEL32.dll_CreateSemaphoreA)(0, 6, 7, 0);\n    *0x100817d4 = unaff_EDI + 0x2b;\n    return 1;\n}\n",
        "token_count": 1295
    },
    "10030fe0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t __fastcall fcn.10030fe0(int32_t param_1)\n\n{\n    char cVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    char cVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    uint var_4bh;\n    int32_t iStack4;\n    \n    uVar5 = 0x1d07;\n    iStack4 = *0x100817d4;\n    iVar6 = 0x2e;\n    uVar2 = *0x100817d4 + 0xbc;\n    do {\n        if (uVar5 == *0x100817c1) break;\n        *(iVar6 + 0x100817c0) = *(iVar6 + 0x100817c0) + param_1;\n        uVar2 = (uVar5 - param_1) + 0x4a;\n        iVar6 = iVar6 + -2;\n        uVar5 = uVar5 + 0x43 + uVar2 + param_1;\n    } while (1 < iVar6);\n    iVar6 = *0x100817b0;\n    iVar8 = *0x100817b0 + -0x4b + *0x100817d4;\n    if (*0x100817c4 == '\\0') {\n        param_1 = (uVar5 - *0x100817d4) + 0x4a;\n    }\n    else {\n        iStack4 = param_1 + (*0x100817d4 + 0x4b79) * 2 + uVar5;\n    }\n    iVar7 = 0x2e;\n    iVar3 = uVar2 * iStack4 - uVar5;\n    cVar1 = iVar3;\n    cVar4 = uVar5;\n    do {\n        iStack4._0_1_ = iVar3;\n        if (uVar5 == *0x100817c1) break;\n        *(iVar7 + 0x100817c0) = *(iVar7 + 0x100817c0) + param_1;\n        iVar3 = (uVar5 - param_1) + 0x4a;\n        iStack4._0_1_ = iVar3;\n        iVar7 = iVar7 + -2;\n        uVar5 = uVar5 + 0x43 + iVar3 + param_1;\n    } while (1 < iVar7);\n    *0x100817d4 = (iVar8 - iVar6) + 0x4a;\n    *0x100817b6 = uVar5 * '\\x02' + *0x100817d4 + cVar1 + ';' + cVar4 + iStack4;\n    if (*0x100817c4 != '\\0') {\n        *0x100817b6 = *0x100817b6 * '\\x02' + -0xe + uVar5 + param_1;\n    }\n    return *0x100817d4 + iVar6 + (iVar8 + 0x4b79) * 2;\n}\n",
        "token_count": 706
    },
    "100312a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Instruction at (ram,0x10032042) overlaps instruction at (ram,0x10032040)\n// \n// WARNING: Could not reconcile some variable overlaps\n\nuint8_t __fastcall fcn.100312a0(uint32_t param_1)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t extraout_ECX;\n    int32_t iVar5;\n    uint32_t uVar6;\n    uint8_t uVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    char cVar11;\n    char cVar12;\n    uint64_t uVar13;\n    uint16_t uStack68;\n    uint32_t uStack64;\n    uint32_t uStack60;\n    uint32_t uStack56;\n    uint32_t uStack52;\n    uint32_t uStack48;\n    uint32_t uStack44;\n    int32_t iStack40;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    \n    uVar10 = *0x100817d0;\n    if (str.._AVDNameNode__._0_4_ <= param_1) {\n        *0x100817e8 = *0x100817b6;\n        *0x100817b6 = *0x100817b6 + param_1 + -0x5e;\n    }\n    iVar3 = 1;\n    iVar9 = *0x100817b0 + 7 + *0x100817d4;\n    do {\n        if ((*0x100817d4 == *0x100817c7) || (iVar9 = *0x100817d0 + 7 + *0x100817d4,  *0x100817d0 == *0x100817c6)) break;\n        iVar3 = iVar3 + 2;\n    } while (iVar3 < 0x25);\n    *0x10094d54 = 0x100831f0;\n    *0x100817b0 = (CONCAT11(*0x100817c6, *0x100817b6) & 0xff) + iVar9 + (*0x100817b0 + 0x4b79) * 2;\n    uVar2 = fcn.10032610();\n    if (*0x100817cc - *0x100817c4 == 0x233) {\n        iVar5 = *0x100817d4 + 7 + iVar9;\n        iVar3 = ((iVar9 - iVar5) - uVar10) + 0x5a;\n    }\n    else {\n        iVar5 = *0x100817c5 * *0x100817d4 - uVar10;\n        iVar3 = iVar5 * 2 + -0x44;\n    }\n    iVar3 = iVar5 + iVar3;\n    *0x100817b6 = *0x100817b6 + iVar3 + -0x5e;\n    iVar9 = iVar3 + *0x100817b6 + 7;\n    if (*0x100817cc - *0x100817c4 == 0x233) {\n        *0x100817d4 = iVar9 + 7 + iVar5;\n        iVar9 = ((iVar9 - *0x100817d4) - (uVar2 & 0xffff)) + 0x53;\n    }\n    else {\n        *0x100817d4 = *0x100817c5 * iVar5 - (uVar2 & 0xffff);\n        iVar9 = *0x100817d4 * 2 + -0x4b;\n    }\n    *0x100817b0 = iVar9;\n    uVar2 = fcn.10032610();\n    *0x100817b6 = (iVar9 - iVar3) + 0x4a;\n    fcn.10032370();\n    uVar10 = *0x100817d0;\n    uVar6 = *0x100817b6 + 7 + iVar3;\n    if (*0x100817d0 < (*0x100817d0 >> 0x10 & 0xff)) {\n        uVar8 = *0x100817c2;\n    }\n    else {\n        iVar3 = iVar3 + 0x96;\n        *0x100817c2 = *0x100817d4;\n        uVar8 = *0x100817d4;\n        *0x100817d4 = (*0x100817d0 - 0x705e) + *0x100817d4;\n    }\n    uStack36 = 0x215b0fb;\n    iVar3 = iVar3 + -0x705e + *0x100817d4;\n    if (*0x100817d4 <= uVar6) {\n        uStack64._0_1_ = uVar2 & 0xffff;\n        *0x100817c2 = uVar8 * uStack64;\n        *0x100817d4 = (uVar2 & 0xffff) + 7 + uVar6;\n    }\n    *0x100817b6 = iVar3 + '\\a' + uVar6;\n    *0x100817b0 = uVar6;\n    uStack64 = fcn.10032610();\n    uStack64 = uStack64 & 0xffff;\n    iStack20 = 0xb;\n    uStack32 = 0x8e;\n    iStack40 = 1;\n    iVar5 = iVar3 * 2 + 0x43 + *0x100817d4;\n    iVar3 = (uVar6 - *0x100817d4) - iVar5;\n    uStack48 = *0x100817b6 + 0x43 + uVar10 + iVar5;\n    iVar9 = iVar3 + 0x53;\n    uVar7 = iVar5 + '\\a' + uStack48;\n    do {\n        if ((*0x100817d4 == *0x100817c7) || (uStack48 == *0x100817c6)) break;\n        iStack40 = iStack40 + 2;\n    } while (iStack40 < 0x25);\n    iVar5 = 0x2e;\n    uStack44 = 0x7d;\n    uVar10 = iVar3 + 0x5a + *0x100817d4;\n    iStack40 = 0;\n    *0x100817b6 = uVar7;\n    *0x100817d0 = uStack48;\n    do {\n        if (uVar10 == *0x100817c1) break;\n        *(iVar5 + 0x100817c0) = *(iVar5 + 0x100817c0) + uStack48;\n        iVar5 = iVar5 + -2;\n        *0x100817d4 = (uVar10 - uStack48) + 0x4a;\n        uVar10 = uVar10 + 0x43 + uStack48 + *0x100817d4;\n    } while (1 < iVar5);\n    iVar3 = *0x100817d4 + uVar10 * 3 + 0x96f2;\n    if (*0x100817d2 <= uStack64) {\n        *0x100817c2 = *0x100817d4;\n        *0x100817b6 = uVar7 + 0x96;\n        *0x100817d4 = (*0x100817d4 - 0x705e) + uStack64;\n        uVar7 = *0x100817b6;\n    }\n    uStack52 = uVar7;\n    if (*0x100817cc - *0x100817c4 == 0x233) {\n        *0x100817d4 = *0x100817d4 + 7 + iVar3;\n        iVar3 = ((iVar3 - *0x100817d4) - uStack48) + 0x5a;\n    }\n    else {\n        *0x100817d4 = *0x100817c5 * *0x100817d4 - uStack48;\n        iVar3 = *0x100817d4 * 2 + -0x44;\n    }\n    iVar3 = *0x100817d4 + iVar3;\n    if (*0x100817c4 == 0) {\n        uStack64._0_2_ = (uVar7 - *0x100817d4) + 0x4a;\n        uStack64 = uStack64;\n    }\n    else {\n        *0x100817d4 = uStack52 + 0x96f2 + *0x100817d4 * 2 + uStack64;\n    }\n    iVar3 = iVar3 * iVar3 - *0x100817d4;\n    while( true ) {\n        uVar2 = uStack52 + (iVar9 + 0x4b79) * 2 + iVar3;\n        uVar10 = *0x100817d4 + iVar3 * 3 + 0x96f2;\n        if (uStack64 < uVar10) {\n            *0x100817d0 = uVar10 + 7 + *0x100817d4;\n            uVar10 = uVar10 * 2 + 0x43 + *0x100817d4;\n            uVar2 = uStack64 == 0;\n            uStack48 = *0x100817d0;\n            if ((uStack64 == 0) && (uVar2 = uStack52 + 7 + uVar10,  (*0x100817d0 >> 0x10 & 0xff) <= *0x100817d4)) {\n                *0x100817c2 = *0x100817d0;\n                *0x100817d0 = (*0x100817d0 - 0x705e) + *0x100817d4;\n                uVar2 = uVar2 + 0x96;\n                uStack48 = *0x100817d0;\n            }\n        }\n        uVar10 = *0x100817d4 + uVar10 * 3 + 0x96f2;\n        if (uVar2 < uVar10) {\n            cVar12 = uVar10;\n            uVar10 = uVar10 * 2 + 0x43 + *0x100817d4;\n            *0x100817b6 = uVar10 + cVar12 + uStack52 + 'D';\n            uStack52 = *0x100817b6;\n        }\n        else if (*0x100817c4 == 0) {\n            uStack64 = (uVar2 - *0x100817d4) + 0x4a & 0xffff;\n        }\n        else {\n            *0x100817d4 = uStack64 + uVar2 + (*0x100817d4 + 0x4b79) * 2;\n        }\n        if (uStack36 == 0) break;\n        iVar3 = uVar10 + *0x100817d4 + 7;\n        *0x100817b0 = uStack52 + uVar2 + uVar10 + *0x100817d4 + 0x4a;\n        fcn.100326e0();\n        uStack52 = *0x100817b6;\n        if (*0x100817c4 == 0) {\n            iVar3 = (*0x100817b0 - uStack52) + 0x4a;\n        }\n        else {\n            *0x100817b6 = *0x100817b6 * '\\x02' + -0xe + iVar3 + *0x100817b0;\n            uStack52 = *0x100817b6;\n        }\n        uStack48 = *0x100817d0;\n        iVar3 = (*0x100817d4 - 0x4b) + iVar3;\n        iVar9 = uStack52 + iVar3 + *0x100817b0 * 2 + 0x96f2;\n        uStack36 = uStack36 + -1;\n    }\n    if (*0x100817cc - *0x100817c4 == 0x233) {\n        uStack60 = uVar2 + uStack52 + 7;\n        iVar3 = ((uVar2 - uStack60) - uVar10) + 0x53;\n    }\n    else {\n        uStack60 = *0x100817c5 * uStack52 - uVar10;\n        iVar3 = uStack60 * 2 + -0x4b;\n    }\n    uStack36 = ((iVar3 - uStack60) - uVar10) + 0x53;\n    if (uVar10 < uStack36) {\n        uVar7 = uStack60 * uStack36 - uVar10;\n        uStack36 = (uVar7 - 0x4b) + uVar10;\n        uStack60 = uVar7;\n    }\n    if (*0x100817cc - *0x100817c4 == 0x233) {\n        iVar9 = uVar10 + 7 + *0x100817d4;\n        iVar3 = uVar10 + ((0x53 - uStack48) - iVar9);\n    }\n    else {\n        iVar9 = *0x100817c5 * *0x100817d4 - uStack48;\n        iVar3 = iVar9 * 2 + -0x4b;\n    }\n    iStack24 = 0x215b0fb;\n    uStack56 = iVar3 * iVar3 - iVar9;\n    uStack52 = uStack36 * 2 + 0x96f9 + uStack64 + iVar3 * iVar3;\n    if (str.._AVDNameNode__._0_4_ <= uStack48) {\n        *0x100817e8 = uStack60;\n        uStack56 = uStack56 + 0x96;\n        uStack60 = uStack48 + uStack60 + -0x5e;\n    }\n    uVar10 = (uStack60 - 0x4b) + uStack56;\n    if (str.._AVDNameNode__._0_4_ <= uVar10) {\n        *0x100817e8 = uStack60;\n        uStack56 = uStack56 + 0x96;\n        uStack60 = uVar10 + uStack60 + -0x5e;\n    }\n    uStack48 = ((uStack48 - uStack60) - uStack56) + 0x53;\n    uVar10 = uVar10 + 0x10031b48;\n    if (uStack60 <= uVar10) {\n        *0x100817e8 = *0x100817e8 * uStack56;\n        uStack60 = uStack56 + '\\a' + uVar10;\n    }\n    while( true ) {\n        *0x100817d0 = uStack48;\n        iStack40 = iStack40 + 1;\n        if (*0x100817cc - *0x100817c4 == 0x233) {\n            *0x100817b6 = uVar10 + '\\a' + uStack60;\n            uVar2 = ((uVar10 - *0x100817b6) - uStack56) + 0x53;\n        }\n        else {\n            *0x100817b6 = *0x100817c5 * uStack60 - uStack56;\n            uVar2 = *0x100817b6 * 2 - 0x4b;\n        }\n        if (0x10d4a < uVar2) {\n            uVar2 = ((uVar2 - (uVar10 + 7 + uStack52 & 0xffff)) - uStack52) + 0x53;\n        }\n        if (*0x100817c4 == 0) {\n            uStack52 = (uVar2 - uStack56) + 0x4a;\n        }\n        else {\n            uStack56 = uVar2 + (uStack56 + 0x4b79) * 2 + uStack52;\n        }\n        cVar12 = uStack56;\n        if (iStack40 < 0x4a) {\n            cVar11 = iStack40;\n            if (*0x100817b6 <= uStack56) {\n                *0x100817c2 = cVar11 * *0x100817c2;\n                *0x100817b6 = cVar12 + '\\a' + cVar11;\n            }\n            *0x100817b0 = ((uVar2 - (uStack52 + 7 + uVar2 & 0xffff)) - uStack52) + 0x53;\n            *0x100817d4 = uStack52;\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetTempPathA)(0x875, 0x10082b80);\n            if (*0x100817c4 == 0) {\n                iStack40 = (uStack56 - *0x100817b6) + 0x4a;\n                uStack52 = *0x100817d4;\n            }\n            else {\n                *0x100817b6 = cVar12 + *0x100817b6 * '\\x02' + -0xe + cVar11;\n                uStack52 = *0x100817d4;\n            }\n        }\n        if (*0x100817d0 <= uVar2) {\n            *0x100817c2 = uStack52 * *0x100817c2;\n            *0x100817d0 = uStack52 + 7 + uVar2;\n        }\n        uVar10 = *0x100817d0;\n        uStack28 = *0x100817d0 >> 0x10 & 0xff;\n        uStack64 = uVar2 + 7 + uStack52;\n        uVar7 = *0x100817b6;\n        if (uStack28 <= uStack56) {\n            uVar7 = *0x100817b6 + cVar12 + -0x5e;\n            *0x100817c2 = *0x100817b6;\n        }\n        *0x100817b6 = uVar7;\n        if (uStack32 < 5) {\n            uStack32 = uStack32 - 1;\n            uStack64 = (*0x100817d0 - uStack32) + 0x4a;\n        }\n        uStack64 = uStack64 & 0xffff;\n        iVar3 = (uStack64 - 0x4b) + uStack52;\n        if (*0x100817c4 == 0) {\n            uStack56 = (iVar3 - *0x100817b6) + 0x4a;\n        }\n        else {\n            *0x100817b6 = *0x100817b6 * '\\x02' + -0xe + cVar12 + iVar3;\n        }\n        iVar9 = *0x100817cc - (CONCAT11(*0x100817cc, *0x100817c4) & 0xff);\n        if (iVar9 == 0x233) {\n            uStack48 = uStack56 + 7 + iVar3;\n            uVar2 = ((iVar3 - uStack52) - uStack48) + 0x53;\n        }\n        else {\n            uStack48 = *0x100817c5 * uStack56 - uStack52;\n            uVar2 = uStack48 * 2 - 0x4b;\n        }\n        uStack64 = uStack64 + (uStack44 - 0x705e);\n        if (0x1077 < uStack64) {\n            if (*0x100817d0 == uStack48) {\n                if (iVar9 == 0x233) {\n                    *0x100817b6 = uVar2 + '\\a' + *0x100817b6;\n                }\n                else {\n                    *0x100817b6 = *0x100817c5 * *0x100817b6 - uStack48;\n                }\n                *0x100817d4 = uStack52;\n                fcn.10032150();\n                uVar2 = (uStack48 - 0x4b) + *0x100817b6;\n                uStack52 = *0x100817d4;\n            }\n            uStack28 = *0x100817d0 >> 0x10 & 0xff;\n            if (uStack28 <= uStack52) {\n                uStack48 = (uStack48 - 0x705e) + uStack52;\n                uVar2 = uVar2 + 0x96;\n                *0x100817c2 = uStack48;\n            }\n        }\n        if (*0x100817d2 <= uStack64) {\n            *0x100817c2 = uStack52;\n            uStack52 = (uStack52 - 0x705e) + (uStack64 & 0xffff);\n            uVar2 = uVar2 + 0x96;\n        }\n        if (uStack44 < 0x12) {\n            uVar7 = uStack52;\n            if ((uStack64 & 0xffff) <= uVar2) {\n                *0x100817c2 = uVar7 * *0x100817c2;\n                uStack64 = uStack52 + 7 + uVar2 & 0xffff;\n            }\n            if (uStack28 <= uVar2) {\n                uVar10 = uVar10 + 0x96;\n                uStack52 = uStack52 + (uVar2 - 0x705e);\n                *0x100817c2 = uVar7;\n            }\n            uStack44 = uStack44 - 1;\n            if (*0x100817cc - *0x100817c4 == 0x233) {\n                uStack64 = uStack64 + 7 + uVar10;\n                uVar10 = uVar10 + ((0x53 - (uStack64 & 0xffff)) - uStack44);\n                *0x100817d0 = uVar10;\n            }\n            else {\n                uStack64 = *0x100817c5 * uStack64 - uStack44;\n                uVar10 = uStack64 * 2 - 0x4b;\n                *0x100817d0 = uVar10;\n            }\n        }\n        if (*0x100817cc - *0x100817c4 == 0x233) {\n            uVar6 = uStack52 + 7 + uVar2;\n            *0x100817b0 = ((uVar2 - uVar6) - (uStack64 & 0xffff)) + 0x53;\n        }\n        else {\n            uVar6 = *0x100817c5 * uStack52 - (uStack64 & 0xffff);\n            *0x100817b0 = uVar6 * 2 - 0x4b;\n        }\n        if (*0x100817d2 <= *0x100817b6) {\n            uStack48 = uStack48 + 0x96;\n            *0x100817c2 = uStack64;\n            uStack64 = uStack64 + *0x100817b6 + 0x8fa2;\n        }\n        if (uStack48 <= *0x100817b0) {\n            *0x100817c2 = uVar6 * *0x100817c2;\n        }\n        if (iStack24 == 0) break;\n        *0x100817d4 = ((uVar6 - uVar10) - iStack24) + 0x53;\n        fcn.100326e0();\n        iStack24 = iStack24 + -1;\n        uStack56 = iStack20 + 7 + *0x100817d0;\n        uStack48 = *0x100817d0;\n        uVar10 = *0x100817b0;\n        if (iStack20 == 0) {\n            if ((*0x100817d0 >> 0x10 & 0xff) <= *0x100817d4) {\n                uVar10 = *0x100817b0 + 0x96;\n                *0x100817c2 = uStack64;\n                uStack64 = (uStack64 - 0x705e) + *0x100817d4;\n            }\n            iStack20 = -1;\n            if (uStack56 <= uVar10) {\n                *0x100817c2 = *0x100817d4 * *0x100817c2;\n                uStack56 = *0x100817d4 + 7 + uVar10;\n            }\n            uStack48 = ((uStack64 & 0xffff) - 1) + (*0x100817d0 + 0x4b79) * 2;\n            uStack60 = *0x100817b6;\n        }\n        else if (*0x100817c4 == 0) {\n            uStack60 = *0x100817b6;\n            uStack44 = (*0x100817b0 - uStack60) + 0x4a;\n        }\n        else {\n            uStack60 = *0x100817b6 * '\\x02' + -0xe + uStack44 + *0x100817b0;\n        }\n        uStack52 = *0x100817d4 * 2 + 0x96fb + uStack56;\n    }\n    uVar10 = ((*0x100817b0 & 0xffff) - uVar6) + 0x4a & 0xffff;\n    iVar3 = uVar10 + 7 + param_1;\n    if (*0x100817b6 <= uVar6) {\n        *0x100817c2 = iVar3 * *0x100817c2;\n        *0x100817b6 = iVar3 + '\\a' + uVar6;\n    }\n    *0x100817d4 = uVar6 + iVar3 + -0x705e;\n    if (*0x100817c4 != 0) {\n        *0x100817d4 = *0x100817b6 + (((uVar10 - param_1) - iVar3) + 0x53 & 0xffff) + (uVar6 + iVar3) * 2 + -0x49ca;\n    }\n    iVar9 = 0x4e7;\n    uVar10 = (*0x100817b0 & 0xffff) + 0x4ee;\n    uVar2 = uVar10 & 0xffff;\n    uVar13 = CONCAT44(uVar10, *0x100817d4) & 0xffffffffff;\n    iVar3 = 0x2e;\ncode_r0x10032040:\n    do {\n        *0x100817d4 = uVar13;\n        cVar12 = SBORROW4(iVar9, *0x100817c1);\n        iVar5 = iVar9 - *0x100817c1;\n        if (iVar5 != 0) {\n            *(iVar3 + 0x100817c0) = *(iVar3 + 0x100817c0) + (uVar13 >> 0x20);\n            iVar4 = iVar3 + -2;\n            *0x100817d4 = (iVar9 - uVar2) + 0x4a;\n            uVar13 = uVar13 & 0xffffffff00000000 | *0x100817d4;\n            iVar9 = iVar9 + 0x43 + *0x100817d4 + uVar2;\n            cVar12 = SBORROW4(iVar4, 1);\n            iVar5 = iVar3 + -3;\n            iVar3 = iVar4;\n            if (iVar5 != 0 && 0 < iVar4) goto code_r0x10032040;\n        }\n        cVar11 = iVar5 < 0;\n        uVar13 = fcn.1003ff70();\n        *0x100817d4 = uVar13;\n        iVar3 = extraout_ECX;\n    } while (cVar12 == cVar11);\n    iVar3 = 1;\n    iStack20 = (uVar2 + 4) * iVar9 - *0x100817b0;\n    while (*0x100817d4 != *0x100817c7) {\n        iStack20 = *0x100817d4 + 7 + uVar2 + 4;\n        if ((uStack68 == *0x100817c6) || (iVar3 = iVar3 + 2,  0x24 < iVar3)) break;\n    }\n    uVar1 = *0x100817b0 + uStack68 * 2 + iStack20 + -0x690e;\n    iVar3 = 1;\n    do {\n        if ((*0x100817d4 == *0x100817c7) || (uVar1 == *0x100817c6)) break;\n        iVar3 = iVar3 + 2;\n    } while (iVar3 < 0x25);\n    iVar3 = 1;\n    while( true ) {\n        if (*0x100817d4 == *0x100817c7) {\n            return *0x100817b6;\n        }\n        if (uVar1 == *0x100817c6) break;\n        iVar3 = iVar3 + 2;\n        if (0x24 < iVar3) {\n            return *0x100817b6;\n        }\n    }\n    return *0x100817b6;\n}\n",
        "token_count": 6623
    },
    "10032150": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint32_t __fastcall fcn.10032150(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    char cVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t uStack8;\n    \n    uStack8 = *0x100817b8;\n    iVar7 = param_1 + 7 + *0x100817b6;\n    uVar4 = iVar7 + *0x100817b6 + param_1 + 0x43;\n    iVar5 = 0x2e;\n    do {\n        cVar3 = param_1;\n        if (uStack8 == *0x100817c1) break;\n        *(iVar5 + 0x100817c0) = *(iVar5 + 0x100817c0) + cVar3;\n        *0x100817b6 = (uStack8 - cVar3) + 0x4a;\n        iVar5 = iVar5 + -2;\n        uStack8 = *0x100817b6 + uStack8 + 0x43 + param_1;\n    } while (1 < iVar5);\n    iVar5 = 0x2e;\n    do {\n        if (uStack8 == *0x100817c1) break;\n        *(iVar5 + 0x100817c0) = *(iVar5 + 0x100817c0) + cVar3;\n        iVar5 = iVar5 + -2;\n        *0x100817b6 = (uStack8 - cVar3) + 0x4a;\n        uStack8 = param_1 + 0x43 + *0x100817b6 + uStack8;\n    } while (1 < iVar5);\n    if (*0x100817cc - *0x100817c4 == 0x233) {\n        *0x100817b8 = (0x4c - iVar7) - param_1;\n    }\n    else {\n        *0x100817b8 = (*0x100817c5 * iVar7 - param_1) * 2 - 0x4b;\n    }\n    uVar6 = *0x100817b6 * 2 + -0x7057 + *0x100817b8;\n    if (uVar6 <= uVar4) {\n        *0x100817c2 = *0x100817d0 * *0x100817c2;\n        uVar6 = *0x100817d0 + 7 + uVar4;\n    }\n    uVar2 = CONCAT11(cVar3, *0x100817b6);\n    if ((*0x100817d0 >> 0x10 & 0xff) <= param_1) {\n        *0x100817b8 = *0x100817b8 + 0x96;\n        uVar2 = CONCAT11(cVar3, *0x100817b6 + (uVar2 >> 8) + -0x5e);\n        *0x100817c2 = *0x100817b6;\n    }\n    iVar5 = 0x2e;\n    do {\n        uStack8 = *0x100817b8;\n        if (*0x100817b8 == *0x100817c1) break;\n        *(iVar5 + 0x100817c0) = *(iVar5 + 0x100817c0) + cVar3;\n        iVar5 = iVar5 + -2;\n        uVar1 = (*0x100817b8 - cVar3) + 0x4a;\n        uVar2 = uVar2 & 0xffffff00 | uVar1;\n        *0x100817b8 = *0x100817b8 + uVar1 + 0x43 + param_1;\n        uStack8 = *0x100817b8;\n    } while (1 < iVar5);\n    iVar5 = uVar4 + uVar6 + -0xe0bc + uStack8;\n    if (*0x100817c4 == 0) {\n        param_1 = (uStack8 - (uVar2 & 0xff)) + 0x4a;\n    }\n    else {\n        uVar2 = uVar2 * '\\x02' + -0xe + (uVar2 >> 8) + uStack8;\n    }\n    uVar6 = (uVar4 - 0x4b) + iVar5 & 0xffff;\n    iVar5 = uVar6 * iVar5 - uVar4;\n    *0x100817b8 = uStack8;\n    if ((*0x100817d0 >> 0x10 & 0xff) <= param_1) {\n        *0x100817b8 = uStack8 + 0x96;\n        *0x100817c2 = iVar5;\n        iVar5 = iVar5 + -0x705e + param_1;\n    }\n    uStack8 = iVar5;\n    *0x100817b6 = uVar2 + (('S' - *0x100817b8) - uStack8);\n    *0x100817d4 = uStack8;\n    return uVar6;\n}\n",
        "token_count": 1179
    },
    "10032370": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __fastcall fcn.10032370(int16_t param_1)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint16_t uVar5;\n    uint8_t uVar6;\n    char cVar7;\n    int32_t iVar8;\n    uint32_t uStack28;\n    char cStack24;\n    char cStack12;\n    \n    uVar1 = (0x9f - *0x100817b4) - param_1;\n    iVar8 = 0x1d4e;\n    iVar3 = *0x100817b6 + *0x100817d4 * 2 + 0x96f2 + *0x100817b4;\n    iVar4 = 0x2e;\n    uVar6 = *0x100817b6;\n    uVar5 = uVar1;\n    do {\n        if (uVar5 == *0x100817c1) break;\n        uStack28._0_1_ = uVar5;\n        *(iVar4 + 0x100817c0) = *(iVar4 + 0x100817c0) + '\\x05';\n        uVar6 = uStack28 + 0x45;\n        iVar4 = iVar4 + -2;\n        uVar5 = uVar5 + uVar6 + 0x48;\n    } while (1 < iVar4);\n    uVar1 = uVar1 + 0x8fec;\n    if (uVar6 <= uVar5) {\n        *0x100817c2 = *0x100817c2 * '\\x05';\n    }\n    uVar2 = uVar1 * 2 & 0xffff;\n    fcn.10009010(0x100831f0, 0x10048190, 0x1d4e);\n    do {\n        iVar8 = iVar8 + -1;\n    } while (iVar8 != 0);\n    uStack28 = uVar1 * 5 - iVar3;\n    if (*0x100817c4 == 0) {\n        uStack28 = (*0x100817b8 - iVar3) + 0x4a;\n    }\n    else {\n        iVar3 = *0x100817b8 + (iVar3 + 0x4b79) * 2 + uStack28;\n    }\n    cStack12 = uVar2;\n    cStack24 = iVar3;\n    cVar7 = cStack12 + -0x4b + cStack24;\n    if (*0x100817cc - *0x100817c4 == 0x233) {\n        uVar6 = cVar7 + '\\a' + *0x100817b8;\n        *0x100817b8 = ((*0x100817b8 - uVar6) - uStack28) + 0x53;\n    }\n    else {\n        uVar6 = cVar7 * *0x100817c5 - uStack28;\n        *0x100817b8 = uVar6 * 2 - 0x4b;\n    }\n    *0x10094d50 = 0x2e;\n    *0x100817b6 = uVar6 * '\\x02' + cStack12 + -0xe + cStack24;\n    do {\n        if (*0x100817b8 == *0x100817c1) break;\n        *(*0x10094d50 + 0x100817c0) = *(*0x10094d50 + 0x100817c0) + uStack28;\n        *0x10094d50 = *0x10094d50 + -2;\n        *0x100817b6 = (*0x100817b8 - uStack28) + 0x4a;\n        *0x100817b8 = uStack28 + 0x43 + *0x100817b6 + *0x100817b8;\n    } while (1 < *0x10094d50);\n    *0x100817d4 = (iVar3 + -0x4b + uVar2 & 0xffff) + 7 + *0x100817b8;\n    *0x100817b4 = *0x100817d4 + *0x100817b8 + -0x4b;\n    return 0x100831f0;\n}\n",
        "token_count": 985
    },
    "10032610": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.10032610(int32_t param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iStack4;\n    \n    uVar2 = 0x3bd;\n    iStack4 = *0x100817d4;\n    iVar3 = 0x2e;\n    do {\n        cVar1 = param_1;\n        if (uVar2 == *0x100817c1) break;\n        *(iVar3 + 0x100817c0) = *(iVar3 + 0x100817c0) + cVar1;\n        iStack4 = (uVar2 - param_1) + 0x4a;\n        iVar3 = iVar3 + -2;\n        uVar2 = uVar2 + 0x43 + iStack4 + param_1;\n    } while (1 < iVar3);\n    *0x100817b6 = (*0x100817b6 * '\\x02' + uVar2) * '\\x02' + iStack4 * '\\x03' + -0x2a + *0x100817b0;\n    if (*0x100817b6 <= uVar2) {\n        *0x100817b6 = uVar2 + '\\a' + cVar1;\n        *0x100817c2 = cVar1 * *0x100817c2;\n        *0x100817d4 = iStack4 + -0x705e + uVar2;\n        return *0x100817b0;\n    }\n    *0x100817d4 = iStack4 + -0x705e + uVar2;\n    return *0x100817b0;\n}\n",
        "token_count": 385
    },
    "100326e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t fcn.100326e0(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t *piVar5;\n    uint32_t uVar6;\n    bool bVar7;\n    uint32_t uStack16;\n    int32_t iStack12;\n    \n    bVar7 = false;\n    uVar3 = 0x1e;\n    uVar6 = 0x36;\n    uVar4 = 0x80U - *0x100817d0 & 0xffff;\n    if (*0x100817c4 == '\\0') {\n        uVar4 = uVar4 + 0x14;\n    }\n    else {\n        uVar6 = 0x80U - *0x100817d0 & 0xffff;\n        bVar7 = 0xffffb450 < uVar6;\n        uVar6 = (uVar6 + 0x4baf) * 2;\n    }\n    iVar2 = *0x100817b6 + *0x100817d4;\n    uStack16 = *0x100817c2;\n    iStack12 = 0x3e;\n    piVar5 = *0x10094d54;\n    do {\n        if ((!bVar7) && ((!bVar7 && bVar7 || (uVar6 <= uVar3)))) {\n            uStack16 = (uStack16 & 0xff) * (uVar4 & 0xff);\n            bVar7 = false;\n            *0x100817c2 = uStack16;\n            uVar6 = uVar3 + 7 + (uVar4 & 0xffff);\n        }\n        *0x100817d0 = *0x100817d0 + iVar2 + 0x43;\n        iVar1 = *piVar5;\n        uVar3 = *0x100817d4 + '\\a' + uVar4;\n        *piVar5 = iVar1 + 0x100e104;\n        piVar5 = piVar5 + 1;\n        iStack12 = iStack12 + -1;\n    } while (iStack12 != 0);\n    *0x100831ec = iVar1 + 0x100e104;\n    return uVar3;\n}\n",
        "token_count": 514
    },
    "1003ff70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __fastcall fcn.1003ff70(uint32_t param_1)\n\n{\n    int16_t iVar1;\n    int16_t iVar2;\n    int16_t iVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    int16_t iVar6;\n    uint16_t uVar7;\n    uint32_t uVar8;\n    uint var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint var_1h;\n    \n    if (*0x100817d4 <= *0x100817d0) {\n        *0x100817c2 = *0x100817b4 * *0x100817c2;\n        *0x100817d4 = *0x100817b4 + 7 + *0x100817d0;\n    }\n    uVar7 = *0x100817b6 + *0x100817b4 + 0xe6ba;\n    if (uVar7 + 7 + param_1 <= *0x100817d0) {\n        *0x100817c2 = *0x100817c2 * *0x100817b6;\n    }\n    iVar5 = uVar7 + *0x100817b0 + 7;\n    *0x100831e4 = *0x10094d54;\n    iVar6 = param_1;\n    *0x100817b4 = uVar7 * iVar5 - iVar6;\n    if (*0x100817d2 <= *0x100817b6) {\n        *0x100817d0 = *0x100817d0 + 0x96;\n        *0x100817c2 = iVar5;\n    }\n    var_ch = (*_sym.imp.KERNEL32.dll_GetTempPathA)(0x875, 0x10094d60);\n    uVar8 = *0x100817b6;\n    *0x100817b0 = *0x100817b0 * 3 + 0x96f2 + uVar8;\n    if (*0x10081810 - *0x100817f0 == 0x233) {\n        var_ch = *0x100817d0 + 7 + var_ch;\n        *0x100817d0 = ((*0x100817d0 - uVar8) - var_ch) + 0x53;\n    }\n    else {\n        var_ch = *0x100817f4 * var_ch - uVar8;\n        *0x100817d0 = var_ch * 2 - 0x4b;\n    }\n    *0x100817b4 = *0x100817b6 + *0x100817b0 + -0x4b;\n    (*_sym.imp.KERNEL32.dll_VirtualProtectEx)(0xffffffff, *0x100831e4, 0x5124, 0x40, 0x100831e8);\n    if (*0x100817d4 <= *0x100817d0) {\n        *0x100817c2 = *0x100817b0 * *0x100817c2;\n        *0x100817d4 = *0x100817b0 + 7 + *0x100817d0;\n    }\n    *0x100817b4 = *0x100817b4 * 2 + *0x100817b6 + *0x100817b0 + 0x96f2;\n    if (*0x100817c4 == '\\0') {\n        *0x100817b6 = (*0x100817d0 - var_ch) + 0x4a;\n    }\n    uVar8 = (param_1 - 0x4b) + *0x100817b4;\n    if ((*0x100817d0 >> 0x10 & 0xff) <= param_1) {\n        uVar8 = uVar8 + 0x96;\n        *0x100817c2 = *0x100817b4;\n        *0x100817b4 = iVar6 + -0x705e + *0x100817b4;\n    }\n    *0x100817b0 = *0x100817b6 + 0x96f2 + *0x100817b0 * 3;\n    if (*0x100817c4 == '\\0') {\n        var_8h = (uVar8 - *0x100817b4) + 0x4a;\n    }\n    else {\n        *0x100817b4 = iVar6 + *0x100817b4 * 2 + -0x690e + uVar8;\n        var_8h = param_1;\n    }\n    var_10h = *0x100817b4;\n    iVar5 = 0x2e;\n    do {\n        iVar6 = var_8h;\n        iVar4 = iVar6;\n        if (uVar8 == *0x100817c1) break;\n        iVar4 = var_8h & 0xffff;\n        var_10h = (uVar8 - (var_8h & 0xffff)) + 0x4a;\n        *(iVar5 + 0x100817c0) = *(iVar5 + 0x100817c0) + var_8h;\n        iVar5 = iVar5 + -2;\n        uVar8 = uVar8 + (var_10h & 0xffff) + var_8h + 0x43;\n    } while (1 < iVar5);\n    iVar1 = var_10h + iVar6 + (uVar8 + 0x4b79) * 2;\n    iVar2 = (*0x100817b6 + *0x100817b0) * 2;\n    iVar3 = iVar2 + -8;\n    if (*0x100817c4 == '\\0') {\n        iVar6 = (iVar1 - iVar3) + 0x4a;\n    }\n    else {\n        iVar3 = iVar1 + (iVar2 + -0x348f) * 2 + iVar4;\n    }\n    *0x100817b0 = 0x53 - *0x100817b6;\n    *0x100817b4 = iVar3 + -0x705e + iVar6;\n    return;\n}\n",
        "token_count": 1427
    },
    "100406c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.100406c0(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    uint var_7h;\n    uint var_4bh;\n    \n    iVar1 = *0x100817d0;\n    uVar2 = 0x1d3;\n    uVar3 = (param_1 + 7 + *0x100817b6) * param_1 - *0x100817d0;\n    if (*0x100817b6 <= uVar3) {\n        *0x100817c2 = uVar3 * *0x100817c2;\n        *0x100817b6 = uVar3 * '\\x02' + 7;\n    }\n    iVar5 = 0x2e;\n    cVar4 = *0x100817d0;\n    do {\n        if (uVar2 == *0x100817c1) break;\n        *(iVar5 + 0x100817c0) = *(iVar5 + 0x100817c0) + cVar4;\n        *0x100817b6 = (uVar2 - cVar4) + 0x4a;\n        iVar5 = iVar5 + -2;\n        uVar2 = uVar2 + 0x43 + *0x100817b6 + iVar1;\n    } while (1 < iVar5);\n    iVar6 = param_1 + 7 + (uVar3 & 0xffff);\n    iVar5 = 0x2e;\n    *0x100817d4 = iVar6;\n    do {\n        if (uVar2 == *0x100817c1) break;\n        *(iVar5 + 0x100817c0) = *(iVar5 + 0x100817c0) + cVar4;\n        *0x100817b6 = (uVar2 - cVar4) + 0x4a;\n        iVar5 = iVar5 + -2;\n        uVar2 = uVar2 + 0x43 + *0x100817b6 + iVar1;\n    } while (1 < iVar5);\n    iVar5 = 0x2e;\n    do {\n        if (uVar2 == *0x100817c1) break;\n        *(iVar5 + 0x100817c0) = *(iVar5 + 0x100817c0) + cVar4;\n        *0x100817b6 = (uVar2 - cVar4) + 0x4a;\n        iVar5 = iVar5 + -2;\n        uVar2 = uVar2 + 0x43 + *0x100817b6 + iVar1;\n    } while (1 < iVar5);\n    return param_1 + -0x4b + iVar6 & 0xffff;\n}\n",
        "token_count": 651
    },
    "100407f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32"
        ],
        "decompiled_code": "\nuint __fastcall fcn.100407f0(uint param_1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    char cVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    \n    iVar1 = *0x100817d0;\n    uVar2 = 0x222f;\n    iVar4 = 0x2e;\n    cVar3 = *0x100817d0;\n    do {\n        if (uVar2 == *0x100817c1) break;\n        uVar2 = uVar2 * 2 + 0x8d;\n        *(iVar4 + 0x100817c0) = *(iVar4 + 0x100817c0) + cVar3;\n        iVar4 = iVar4 + -2;\n    } while (1 < iVar4);\n    iVar4 = 0x2e;\n    uVar5 = (*0x100817b6 - uVar2) + 0x4a;\n    *0x100817d4 = uVar5;\n    do {\n        if (uVar2 == *0x100817c1) break;\n        *(iVar4 + 0x100817c0) = *(iVar4 + 0x100817c0) + cVar3;\n        *0x100817b6 = (uVar2 - cVar3) + 0x4a;\n        iVar4 = iVar4 + -2;\n        uVar2 = uVar2 + 0x43 + *0x100817b6 + iVar1;\n    } while (1 < iVar4);\n    if (uVar5 <= uVar2) {\n        *0x100817c2 = cVar3 * *0x100817c2;\n        *0x100817d4 = uVar2 + 7 + iVar1;\n    }\n    return param_1;\n}\n",
        "token_count": 416
    },
    "1000841e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.1000841e(int32_t arg_8h)\n\n{\n    if (*0x10081020 != -1) {\n        if (arg_8h == 0) {\n            arg_8h = fcn.1000892b(*0x10081020);\n        }\n        fcn.10008966(*0x10081020, 0);\n        fcn.10008402(arg_8h);\n    }\n    return;\n}\n",
        "token_count": 102
    },
    "10014245": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __fastcall fcn.10014245(uint *param_1)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    uint uVar3;\n    int32_t arg_8h;\n    \n    param_1[5] = param_1[5] + 4;\n    arg_8h = param_1[10];\n    iVar1 = *(param_1[5] + -4);\n    param_1[0xd] = iVar1;\n    if (arg_8h == -1) {\n        arg_8h = 0x7fffffff;\n    }\n    cVar2 = fcn.1000edf8(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n    if (cVar2 == '\\0') {\n        if (iVar1 == 0) {\n            param_1[0xd] = 0x1004220c;\n        }\n        uVar3 = fcn.1001434d(arg_8h);\n    }\n    else {\n        if (iVar1 == 0) {\n            param_1[0xd] = L\"(null)\";\n        }\n        *(param_1 + 0xf) = 1;\n        uVar3 = fcn.1001e74f(param_1[0xd], arg_8h);\n    }\n    param_1[0xe] = uVar3;\n    return 1;\n}\n",
        "token_count": 317
    },
    "1002100e": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.1002100e(int16_t *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    int16_t iVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int16_t *piVar5;\n    uint uVar6;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x10020f63:\n            if (arg_ch != 0) {\n                if (arg_14h == 0) {\n                    *arg_8h = 0;\n                    return 0;\n                }\n                if (arg_10h != 0) {\n                    iVar3 = arg_14h;\n                    iVar4 = arg_ch;\n                    piVar5 = arg_8h;\n                    if (arg_14h == -1) {\n                        do {\n                            iVar1 = *((arg_10h - arg_8h) + piVar5);\n                            *piVar5 = iVar1;\n                            piVar5 = piVar5 + 1;\n                            if (iVar1 == 0) break;\n                            iVar4 = iVar4 + -1;\n                        } while (iVar4 != 0);\n                    }\n                    else {\n                        do {\n                            iVar1 = *((arg_10h - arg_8h) + piVar5);\n                            *piVar5 = iVar1;\n                            piVar5 = piVar5 + 1;\n                            if ((iVar1 == 0) || (iVar4 = iVar4 + -1,  iVar4 == 0)) break;\n                            iVar3 = iVar3 + -1;\n                        } while (iVar3 != 0);\n                        if (iVar3 == 0) {\n                            *piVar5 = 0;\n                        }\n                    }\n                    if (iVar4 != 0) {\n                        return 0;\n                    }\n                    if (arg_14h == -1) {\n                        arg_8h[arg_ch + -1] = 0;\n                        return 0x50;\n                    }\n                    *arg_8h = 0;\n                    puVar2 = fcn.10016fba();\n                    uVar6 = 0x22;\n                    goto code_r0x10020f88;\n                }\n                *arg_8h = 0;\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x10020f63;\n    puVar2 = fcn.10016fba();\n    uVar6 = 0x16;\ncode_r0x10020f88:\n    *puVar2 = uVar6;\n    fcn.1001a732();\n    return uVar6;\n}\n",
        "token_count": 620
    },
    "10022b1b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.10022b1b(char *arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    char cVar1;\n    uint *puVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    char *pcVar5;\n    uint uVar6;\n    \n    if (arg_14h == 0) {\n        if (arg_8h == NULL) {\n            if (arg_ch == 0) {\n                return 0;\n            }\n        }\n        else {\ncode_r0x10022a8c:\n            if (arg_ch != 0) {\n                if (arg_14h == 0) {\n                    *arg_8h = '\\0';\n                    return 0;\n                }\n                if (arg_10h != 0) {\n                    iVar3 = arg_14h;\n                    iVar4 = arg_ch;\n                    pcVar5 = arg_8h;\n                    if (arg_14h == -1) {\n                        do {\n                            cVar1 = pcVar5[arg_10h - arg_8h];\n                            *pcVar5 = cVar1;\n                            pcVar5 = pcVar5 + 1;\n                            if (cVar1 == '\\0') break;\n                            iVar4 = iVar4 + -1;\n                        } while (iVar4 != 0);\n                    }\n                    else {\n                        do {\n                            cVar1 = pcVar5[arg_10h - arg_8h];\n                            *pcVar5 = cVar1;\n                            pcVar5 = pcVar5 + 1;\n                            if ((cVar1 == '\\0') || (iVar4 = iVar4 + -1,  iVar4 == 0)) break;\n                            iVar3 = iVar3 + -1;\n                        } while (iVar3 != 0);\n                        if (iVar3 == 0) {\n                            *pcVar5 = '\\0';\n                        }\n                    }\n                    if (iVar4 != 0) {\n                        return 0;\n                    }\n                    if (arg_14h == -1) {\n                        arg_8h[arg_ch + -1] = '\\0';\n                        return 0x50;\n                    }\n                    *arg_8h = '\\0';\n                    puVar2 = fcn.10016fba();\n                    uVar6 = 0x22;\n                    goto code_r0x10022aac;\n                }\n                *arg_8h = '\\0';\n            }\n        }\n    }\n    else if (arg_8h != NULL) goto code_r0x10022a8c;\n    puVar2 = fcn.10016fba();\n    uVar6 = 0x16;\ncode_r0x10022aac:\n    *puVar2 = uVar6;\n    fcn.1001a732();\n    return uVar6;\n}\n",
        "token_count": 616
    },
    "10029d10": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.10029d10(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_8h_00;\n    uint var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    cVar1 = fcn.1001a487();\n    iVar3 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    if (iVar3 != 0) {\n        if (arg_8h != 0) {\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringA)(arg_8h);\n        }\n        if (cVar1 != '\\0') {\n            return 4;\n        }\n    }\n    cVar2 = fcn.1001a30b();\n    if (cVar2 == '\\0') {\n        iVar3 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n        iVar3 = (iVar3 != 0) + 3;\n    }\n    else if (cVar1 == '\\0') {\n        cVar1 = fcn.1001a3e1();\n        if (cVar1 == '\\0') {\n            arg_10h = arg_10h | 0x200000;\n            arg_8h_00 = 0;\n        }\n        else {\n            arg_8h_00 = fcn.1001a33c();\n        }\n        iVar3 = fcn.1001a135(arg_8h_00, arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        iVar3 = 0;\n        var_10h = arg_ch;\n        var_8h = arg_10h;\n        var_ch = arg_8h;\n        var_4h = 0;\n        iVar4 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.10029f02, &var_10h, 0, 0);\n        if (iVar4 != -1) {\n            iVar5 = (*_sym.imp.KERNEL32.dll_WaitForSingleObjectEx)(iVar4, 0xffffffff, 0);\n            if (iVar5 == 0) {\n                iVar3 = var_4h;\n            }\n            if (iVar4 != -1) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 567
    },
    "10029fab": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.10029fab(int32_t arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    char cVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_8h_00;\n    uint lpParameter;\n    int32_t var_ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    cVar1 = fcn.1001a487();\n    iVar3 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    if (iVar3 != 0) {\n        if (arg_8h != 0) {\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(arg_8h);\n        }\n        if (cVar1 != '\\0') {\n            return 4;\n        }\n    }\n    cVar2 = fcn.1001a30b();\n    if (cVar2 == '\\0') {\n        iVar3 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n        iVar3 = (iVar3 != 0) + 3;\n    }\n    else if (cVar1 == '\\0') {\n        cVar1 = fcn.1001a3e1();\n        if (cVar1 == '\\0') {\n            arg_10h = arg_10h | 0x200000;\n            arg_8h_00 = 0;\n        }\n        else {\n            arg_8h_00 = fcn.1001a33c();\n        }\n        iVar3 = fcn.1001a17e(arg_8h_00, arg_8h, arg_ch, arg_10h);\n    }\n    else {\n        iVar3 = 0;\n        lpParameter = arg_ch;\n        var_8h = arg_10h;\n        var_ch = arg_8h;\n        var_4h = 0;\n        iVar4 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.10029f24, &lpParameter, 0, 0);\n        if (iVar4 != -1) {\n            iVar5 = (*_sym.imp.KERNEL32.dll_WaitForSingleObjectEx)(iVar4, 0xffffffff, 0);\n            if (iVar5 == 0) {\n                iVar3 = var_4h;\n            }\n            if (iVar4 != -1) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 561
    },
    "100140b1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.100140b1(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.10013ac5(8, 0);\n    return;\n}\n",
        "token_count": 92
    },
    "100140d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.100140d0(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.10013c0f(8, 0);\n    return;\n}\n",
        "token_count": 93
    },
    "100140ef": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.100140ef(int32_t param_1)\n\n{\n    if ((*(param_1 + 0x20) >> 5 & 1) != 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 0x80;\n    }\n    fcn.10013d8d(8, 0);\n    return;\n}\n",
        "token_count": 92
    },
    "100274f1": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.100274f1(uint32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    arg_8h_00 = fcn.1001f53a(arg_ch);\n    if ((arg_ch[3] & 6) == 0) {\n        puVar2 = fcn.10016fba();\n        *puVar2 = 9;\n    }\n    else {\n        if ((arg_ch[3] >> 0xc & 1) == 0) {\n            if ((arg_ch[3] & 1) != 0) {\n                arg_ch[2] = 0;\n                if ((arg_ch[3] >> 3 & 1) == 0) goto code_r0x10027155;\n                *arg_ch = arg_ch[1];\n                LOCK();\n                arg_ch[3] = arg_ch[3] & 0xfffffffe;\n            }\n            LOCK();\n            arg_ch[3] = arg_ch[3] | 2;\n            LOCK();\n            arg_ch[3] = arg_ch[3] & 0xfffffff7;\n            arg_ch[2] = 0;\n            if (((arg_ch[3] & 0x4c0) == 0) &&\n               (((puVar2 = fcn.1001f628(1),  arg_ch != puVar2 && (puVar2 = fcn.1001f628(2),  arg_ch != puVar2)) ||\n                (iVar3 = fcn.100234eb(arg_8h_00),  iVar3 == 0)))) {\n                fcn.10029a41(arg_ch);\n            }\n            cVar1 = fcn.10027351(arg_8h, arg_ch);\n            if (cVar1 == '\\0') {\n                LOCK();\n                arg_ch[3] = arg_ch[3] | 0x10;\n                return 0xffffffff;\n            }\n            return arg_8h & 0xff;\n        }\n        puVar2 = fcn.10016fba();\n        *puVar2 = 0x22;\n    }\ncode_r0x10027155:\n    LOCK();\n    arg_ch[3] = arg_ch[3] | 0x10;\n    return 0xffffffff;\n}\n",
        "token_count": 522
    },
    "100274fc": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.100274fc(uint32_t arg_8h, uint *arg_ch)\n\n{\n    char cVar1;\n    uint arg_8h_00;\n    uint *puVar2;\n    int32_t iVar3;\n    \n    arg_8h_00 = fcn.1001f53a(arg_ch);\n    if ((arg_ch[3] & 6) == 0) {\n        puVar2 = fcn.10016fba();\n        *puVar2 = 9;\n    }\n    else {\n        if ((arg_ch[3] >> 0xc & 1) == 0) {\n            if ((arg_ch[3] & 1) != 0) {\n                arg_ch[2] = 0;\n                if ((arg_ch[3] >> 3 & 1) == 0) goto code_r0x10027266;\n                *arg_ch = arg_ch[1];\n                LOCK();\n                arg_ch[3] = arg_ch[3] & 0xfffffffe;\n            }\n            LOCK();\n            arg_ch[3] = arg_ch[3] | 2;\n            LOCK();\n            arg_ch[3] = arg_ch[3] & 0xfffffff7;\n            arg_ch[2] = 0;\n            if (((arg_ch[3] & 0x4c0) == 0) &&\n               (((puVar2 = fcn.1001f628(1),  arg_ch != puVar2 && (puVar2 = fcn.1001f628(2),  arg_ch != puVar2)) ||\n                (iVar3 = fcn.100234eb(arg_8h_00),  iVar3 == 0)))) {\n                fcn.10029a41(arg_ch);\n            }\n            cVar1 = fcn.1002741d(arg_8h, arg_ch);\n            if (cVar1 == '\\0') {\n                LOCK();\n                arg_ch[3] = arg_ch[3] | 0x10;\n                return 0xffff;\n            }\n            return arg_8h & 0xffff;\n        }\n        puVar2 = fcn.10016fba();\n        *puVar2 = 0x22;\n    }\ncode_r0x10027266:\n    LOCK();\n    arg_ch[3] = arg_ch[3] | 0x10;\n    return 0xffff;\n}\n",
        "token_count": 522
    },
    "100288d9": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.100288d9(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t unaff_EBP;\n    uint uVar4;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.10001eb0();\n    uVar4 = 0;\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.100230f6(**(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = ***(unaff_EBP + 0xc);\n    if ((*(*((arg_8h_00 >> 6) * 4 + 0x10082300) + 0x28 + (arg_8h_00 & 0x3f) * 0x30) & 1) != 0) {\n        uVar1 = fcn.10023373(arg_8h_00);\n        iVar2 = (*_sym.imp.KERNEL32.dll_FlushFileBuffers)(uVar1);\n        if (iVar2 != 0) goto code_r0x10028949;\n        puVar3 = fcn.10016fa7();\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        *puVar3 = uVar4;\n    }\n    puVar3 = fcn.10016fba();\n    *puVar3 = 9;\n    uVar4 = 0xffffffff;\ncode_r0x10028949:\n    *(unaff_EBP + -0x1c) = uVar4;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.10028965(0x1007f820, noname_1, unaff_retaddr);\n    fcn.10001ef6();\n    return;\n}\n",
        "token_count": 478
    },
    "1002904d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.1002904d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t lpCriticalSection;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.10001eb0(0x1007f840, 0x14);\n    lpCriticalSection = *(unaff_EBP + 8);\n    if (lpCriticalSection == 0xfffffffe) {\n        puVar1 = fcn.10016fa7();\n        *puVar1 = 0;\n        puVar1 = fcn.10016fba();\n        *puVar1 = 9;\n    }\n    else {\n        if ((-1 < lpCriticalSection) && (lpCriticalSection < *0x10082500)) {\n            iVar3 = (lpCriticalSection & 0x3f) * 0x30;\n            *(unaff_EBP + -0x20) = iVar3;\n            if ((*(*((lpCriticalSection >> 6) * 4 + 0x10082300) + 0x28 + iVar3) & 1) != 0) {\n                fcn.100230f6(lpCriticalSection);\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((lpCriticalSection >> 6) * 4 + 0x10082300) + 0x28 + *(unaff_EBP + -0x20)) & 1) == 0) {\n                    puVar1 = fcn.10016fba();\n                    *puVar1 = 9;\n                    puVar1 = fcn.10016fa7();\n                    *puVar1 = 0;\n                }\n                else {\n                    uVar2 = fcn.10029138(lpCriticalSection, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar2;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.1002910f();\n                goto code_r0x10029132;\n            }\n        }\n        puVar1 = fcn.10016fa7();\n        *puVar1 = 0;\n        puVar1 = fcn.10016fba();\n        *puVar1 = 9;\n        fcn.1001a732();\n    }\ncode_r0x10029132:\n    fcn.10001ef6();\n    return;\n}\n",
        "token_count": 605
    },
    "100299f5": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.100299f5(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint32_t lpCriticalSection;\n    uint *puVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t unaff_EBP;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.10001eb0(0x1007f860, 0x14);\n    lpCriticalSection = *(unaff_EBP + 8);\n    if (lpCriticalSection == 0xfffffffe) {\n        puVar1 = fcn.10016fa7();\n        *puVar1 = 0;\n        puVar1 = fcn.10016fba();\n        *puVar1 = 9;\n    }\n    else {\n        if ((-1 < lpCriticalSection) && (lpCriticalSection < *0x10082500)) {\n            iVar3 = (lpCriticalSection & 0x3f) * 0x30;\n            *(unaff_EBP + -0x20) = iVar3;\n            if ((*(*((lpCriticalSection >> 6) * 4 + 0x10082300) + 0x28 + iVar3) & 1) != 0) {\n                fcn.100230f6(lpCriticalSection);\n                *(unaff_EBP + -0x1c) = 0xffffffff;\n                *(unaff_EBP + -4) = 0;\n                if ((*(*((lpCriticalSection >> 6) * 4 + 0x10082300) + 0x28 + *(unaff_EBP + -0x20)) & 1) == 0) {\n                    puVar1 = fcn.10016fba();\n                    *puVar1 = 9;\n                    puVar1 = fcn.10016fa7();\n                    *puVar1 = 0;\n                }\n                else {\n                    uVar2 = fcn.1002985d(lpCriticalSection, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar2;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.1002972f();\n                goto code_r0x10029752;\n            }\n        }\n        puVar1 = fcn.10016fa7();\n        *puVar1 = 0;\n        puVar1 = fcn.10016fba();\n        *puVar1 = 9;\n        fcn.1001a732();\n    }\ncode_r0x10029752:\n    fcn.10001ef6();\n    return;\n}\n",
        "token_count": 606
    },
    "1002bfc2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.1002bfc2(uint arg_8h, uint arg_ch)\n\n{\n    uint32_t arg_8h_00;\n    uint uVar1;\n    uint *puVar2;\n    int32_t unaff_EBP;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.10001eb0();\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.100230f6(**(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = ***(unaff_EBP + 0xc);\n    if ((*(*((arg_8h_00 >> 6) * 4 + 0x10082300) + 0x28 + (arg_8h_00 & 0x3f) * 0x30) & 1) == 0) {\n        puVar2 = fcn.10016fba();\n        *puVar2 = 9;\n        uVar1 = 0xffffffff;\n    }\n    else {\n        uVar1 = fcn.1002c18e(arg_8h_00);\n    }\n    *(unaff_EBP + -0x1c) = uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.1002c038(0x1007f8e0, noname_1, unaff_retaddr);\n    fcn.10001ef6();\n    return;\n}\n",
        "token_count": 382
    },
    "1002c10f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.1002c10f(uint32_t arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint *var_4h;\n    \n    if (arg_8h == 0xfffffffe) {\n        puVar1 = fcn.10016fa7();\n        *puVar1 = 0;\n        puVar1 = fcn.10016fba();\n        *puVar1 = 9;\n    }\n    else {\n        if (((-1 < arg_8h) && (arg_8h < *0x10082500)) &&\n           ((*(*((arg_8h >> 6) * 4 + 0x10082300) + 0x28 + (arg_8h & 0x3f) * 0x30) & 1) != 0)) {\n            var_4h = &arg_8h;\n            uVar2 = fcn.1002c044(arg_8h, &var_4h);\n            return uVar2;\n        }\n        puVar1 = fcn.10016fa7();\n        *puVar1 = 0;\n        puVar1 = fcn.10016fba();\n        *puVar1 = 9;\n        fcn.1001a732();\n    }\n    return 0xffffffff;\n}\n",
        "token_count": 293
    },
    "1001b37a": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t __cdecl fcn.1001b37a(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    char *pcVar1;\n    char cVar2;\n    code *pcVar3;\n    char **ppcVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char **ppcVar8;\n    int32_t iVar9;\n    char *pcVar10;\n    char **ppcVar11;\n    char **var_20h;\n    char **var_1ch;\n    uint var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    int32_t var_ch;\n    char *var_8h;\n    char *var_4h;\n    \n    if (arg_ch == NULL) {\n        puVar5 = fcn.10016fba();\n        iVar9 = 0x16;\n        *puVar5 = 0x16;\n        fcn.1001a732();\n    }\n    else {\n        *arg_ch = 0;\n        var_20h = NULL;\n        var_1ch = NULL;\n        var_18h = 0;\n        iVar9 = *arg_8h;\n        ppcVar11 = var_20h;\n        ppcVar4 = var_1ch;\n        while (var_20h = ppcVar11,  var_1ch = ppcVar4,  iVar9 != 0) {\n            var_4h = CONCAT13(var_4h >> 0x18, 0x3f2a);\n            iVar9 = fcn.10022b30(*arg_8h, &var_4h);\n            if (iVar9 == 0) {\n                iVar9 = fcn.1001ac74(*arg_8h, 0, 0, &var_20h);\n            }\n            else {\n                iVar9 = fcn.1001ada8(*arg_8h, iVar9, &var_20h);\n            }\n            if (iVar9 != 0) goto code_r0x1001aa89;\n            arg_8h = arg_8h + 1;\n            ppcVar11 = var_20h;\n            ppcVar4 = var_1ch;\n            iVar9 = *arg_8h;\n        }\n        var_8h = NULL;\n        var_4h = NULL;\n        var_ch = (ppcVar4 - ppcVar11 >> 2) + 1;\n        pcVar10 = ~-(ppcVar4 < ppcVar11) & (ppcVar4 - ppcVar11) + 3U >> 2;\n        if (pcVar10 != NULL) {\n            var_4h = NULL;\n            ppcVar8 = ppcVar11;\n            do {\n                pcVar7 = *ppcVar8;\n                pcVar1 = pcVar7 + 1;\n                do {\n                    cVar2 = *pcVar7;\n                    pcVar7 = pcVar7 + 1;\n                } while (cVar2 != '\\0');\n                var_4h = pcVar7 + var_4h + (1 - pcVar1);\n                ppcVar8 = ppcVar8 + 1;\n                var_8h = var_8h + 1;\n            } while (var_8h != pcVar10);\n        }\n        iVar6 = fcn.1000bf3a(var_ch, var_4h, 1);\n        if (iVar6 == 0) {\n            iVar9 = -1;\n        }\n        else {\n            var_ch = iVar6 + var_ch * 4;\n            var_10h = var_ch;\n            if (ppcVar11 != ppcVar4) {\n                var_14h = iVar6 - ppcVar11;\n                do {\n                    var_8h = *ppcVar11;\n                    pcVar10 = var_8h + 1;\n                    do {\n                        cVar2 = *var_8h;\n                        var_8h = var_8h + 1;\n                    } while (cVar2 != '\\0');\n                    var_8h = var_8h + (1 - pcVar10);\n                    iVar9 = fcn.10022b1b(var_ch, var_4h + (var_10h - var_ch), *ppcVar11, var_8h);\n                    if (iVar9 != 0) {\n                        fcn.1001a75f(0, 0, 0, 0, 0);\n                        pcVar3 = swi(3);\n                        iVar9 = (*pcVar3)();\n                        return iVar9;\n                    }\n                    *(var_14h + ppcVar11) = var_ch;\n                    ppcVar11 = ppcVar11 + 1;\n                    var_ch = var_ch + var_8h;\n                } while (ppcVar11 != ppcVar4);\n            }\n            iVar9 = 0;\n            *arg_ch = iVar6;\n        }\n        fcn.1001a8c5(0);\ncode_r0x1001aa89:\n        fcn.1001b1fe();\n    }\n    return iVar9;\n}\n",
        "token_count": 1151
    },
    "1001b385": {
        "rules": [
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.1001b385(int32_t *arg_8h, int32_t *arg_ch)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    code *pcVar3;\n    int16_t **ppiVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int16_t *piVar8;\n    int16_t **ppiVar9;\n    uint32_t uVar10;\n    int16_t **ppiVar11;\n    int32_t var_30h;\n    uint var_2ch;\n    int16_t **var_28h;\n    int16_t **var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    ushort var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x10081004 ^ &stack0xfffffffc;\n    if (arg_ch == NULL) {\n        puVar5 = fcn.10016fba();\n        *puVar5 = 0x16;\n        fcn.1001a732();\n    }\n    else {\n        *arg_ch = 0;\n        var_1ch = 0;\n        var_28h = NULL;\n        var_24h = NULL;\n        var_20h = 0;\n        iVar6 = *arg_8h;\n        ppiVar11 = var_28h;\n        ppiVar4 = var_24h;\n        while (var_28h = ppiVar11,  var_24h = ppiVar4,  iVar6 != 0) {\n            var_ch = 0x3f002a;\n            var_8h = 0;\n            iVar6 = fcn.10021069(*arg_8h, &var_ch);\n            if (iVar6 == 0) {\n                iVar6 = fcn.1001ad0a(*arg_8h, 0, 0, &var_28h);\n            }\n            else {\n                iVar6 = fcn.1001af2e(*arg_8h, iVar6, &var_28h);\n            }\n            if (iVar6 != 0) goto code_r0x1001ac4c;\n            arg_8h = arg_8h + 1;\n            ppiVar11 = var_28h;\n            ppiVar4 = var_24h;\n            iVar6 = *arg_8h;\n        }\n        var_14h = 0;\n        var_10h = 0;\n        var_18h = (ppiVar4 - ppiVar11 >> 2) + 1;\n        uVar10 = ~-(ppiVar4 < ppiVar11) & (ppiVar4 - ppiVar11) + 3U >> 2;\n        if (uVar10 != 0) {\n            var_14h = 0;\n            ppiVar9 = ppiVar11;\n            do {\n                piVar8 = *ppiVar9;\n                piVar1 = piVar8 + 1;\n                do {\n                    iVar2 = *piVar8;\n                    piVar8 = piVar8 + 1;\n                } while (iVar2 != var_1ch);\n                ppiVar9 = ppiVar9 + 1;\n                var_14h = var_14h + 1 + (piVar8 - piVar1 >> 1);\n                var_10h = var_10h + 1;\n            } while (var_10h != uVar10);\n        }\n        iVar6 = fcn.1000bf3a(var_18h, var_14h, 2);\n        if (iVar6 != 0) {\n            var_30h = iVar6 + var_18h * 4;\n            var_18h = var_30h;\n            if (ppiVar11 != ppiVar4) {\n                var_ch = iVar6 - ppiVar11;\n                do {\n                    piVar8 = *ppiVar11;\n                    piVar1 = piVar8 + 1;\n                    do {\n                        iVar2 = *piVar8;\n                        piVar8 = piVar8 + 1;\n                    } while (iVar2 != var_1ch);\n                    var_10h = (piVar8 - piVar1 >> 1) + 1;\n                    iVar7 = fcn.1002100e(var_18h, var_14h - (var_18h - var_30h >> 1), *ppiVar11, var_10h);\n                    if (iVar7 != 0) {\n                        fcn.1001a75f(0, 0, 0, 0, 0);\n                        pcVar3 = swi(3);\n                        (*pcVar3)();\n                        return;\n                    }\n                    *(var_ch + ppiVar11) = var_18h;\n                    ppiVar11 = ppiVar11 + 1;\n                    var_18h = var_18h + var_10h * 2;\n                } while (ppiVar11 != ppiVar4);\n            }\n            *arg_ch = iVar6;\n            iVar6 = 0;\n        }\n        fcn.1001a8c5(iVar6);\ncode_r0x1001ac4c:\n        fcn.1001b1fe();\n    }\n    fcn.10001112(var_30h);\n    return;\n}\n",
        "token_count": 1239
    },
    "1000fc02": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23",
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_3h\n\nuint32_t __cdecl fcn.1000fc02(int32_t *arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint16_t uVar1;\n    char cVar2;\n    char cVar3;\n    char cVar4;\n    uint32_t uVar5;\n    uint *in_ECX;\n    uint32_t uVar6;\n    bool bVar7;\n    uint var_8h;\n    uint var_3h;\n    \n    uVar1 = *(arg_8h + 1);\n    uVar6 = uVar1;\n    bVar7 = arg_10h == 0x70;\n    if ((uVar1 == 0x70) || (bVar7)) {\n        bVar7 = (uVar1 == 0x70) == bVar7;\ncode_r0x1000fd19:\n        return bVar7;\n    }\n    cVar2 = fcn.1000ed9c(uVar6);\n    cVar3 = fcn.1000ed9c(arg_10h);\n    cVar4 = fcn.1000ecdd(uVar6);\n    uVar5 = fcn.1000ecdd(arg_10h);\n    if (cVar2 == '\\0') {\n        if (cVar3 != '\\0') goto code_r0x1000fd11;\n        if (cVar4 == '\\0') {\n            if (uVar5 == '\\0') {\n                cVar2 = fcn.1000ed26(uVar6);\n                uVar5 = fcn.1000ed26(arg_10h);\n                if (cVar2 == '\\0') {\n                    if (uVar5 == '\\0') {\n                        bVar7 = *arg_8h == arg_ch;\n                        goto code_r0x1000fd19;\n                    }\n                }\n                else if ((cVar2 == uVar5) && (uVar5 = arg_14h == 9,  (arg_8h[3] == 9) == uVar5)) {\n                    uVar6 = fcn.10012fd0(arg_8h[3]);\n                    uVar5 = fcn.10012fd0(arg_14h);\n                    return uVar5 & 0xffffff00 | 1 - (uVar6 != uVar5);\n                }\n            }\n            goto code_r0x1000fd11;\n        }\n    }\n    else if (cVar2 != cVar3) goto code_r0x1000fd11;\n    if (cVar4 == uVar5) {\n        cVar2 = fcn.1000edf8(*in_ECX, in_ECX[1], arg_10h, arg_14h);\n        uVar6 = fcn.1000edf8(*in_ECX, in_ECX[1], uVar6, arg_8h[3]);\n        return uVar6 & 0xffffff00 | uVar6 == cVar2;\n    }\ncode_r0x1000fd11:\n    return uVar5 & 0xffffff00;\n}\n",
        "token_count": 696
    },
    "1000ff19": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __thiscall fcn.1000ff19(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint32_t arg_8h;\n    uint uVar4;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    cVar1 = fcn.100146d4();\n    if (cVar1 == '\\0') {\n        return 0xffffffff;\n    }\n    if (*(param_1 + 0x10) == 0) {\n        puVar2 = fcn.10016fba();\n        *puVar2 = 0x16;\n        fcn.1001a732();\n        uVar3 = 0xffffffff;\n    }\n    else {\n        cVar1 = fcn.1000f8d3();\n        while (cVar1 != '\\0') {\n            *(param_1 + 0x38) = 0;\n            *(param_1 + 0x1c) = 0;\ncode_r0x1001000a:\n            cVar1 = **(param_1 + 0x10);\n            *(param_1 + 0x31) = cVar1;\n            if (cVar1 != '\\0') {\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n                if (*(param_1 + 0x18) < 0) goto code_r0x1001001d;\n                uVar3 = *(param_1 + 0x1c);\n                arg_8h = *(param_1 + 0x31);\n                uVar4 = fcn.1000f989(arg_8h, uVar3);\n                *(param_1 + 0x1c) = uVar4;\n                cVar1 = fcn.100147a8();\n                if (cVar1 == '\\0') {\n                    return 0xffffffff;\n                }\n    // switch table (8 cases) at 0x10010055\n                switch(*(param_1 + 0x1c)) {\n                case 0:\n                    cVar1 = fcn.10010d95();\n                    break;\n                case 1:\n                    *(param_1 + 0x24) = 0;\n                    *(param_1 + 0x30) = 0;\n                    *(param_1 + 0x20) = 0;\n                    *(param_1 + 0x28) = 0xffffffff;\n                    *(param_1 + 0x2c) = 0;\n                    *(param_1 + 0x3c) = 0;\n                    goto code_r0x1001000a;\n                case 2:\n                    cVar1 = fcn.10010cfc();\n                    break;\n                case 3:\n                    cVar1 = fcn.10012f0c();\n                    break;\n                case 4:\n                    goto code_r0x1000ffe8;\n                case 5:\n                    cVar1 = fcn.1001104b();\n                    break;\n                case 6:\n                    cVar1 = fcn.10011252();\n                    break;\n                case 7:\n                    cVar1 = fcn.10011eac(arg_8h, uVar3, arg_8h, unaff_EBX, unaff_ESI, unaff_retaddr, param_2, param_3, \n                                         param_4, param_5, param_6);\n                    break;\n                default:\n                    puVar2 = fcn.10016fba();\n                    *puVar2 = 0x16;\n                    fcn.1001a732();\n                    return 0xffffffff;\n                case 0xbad1abe1:\n                    goto code_r0x1001003b;\n                }\n                if (cVar1 == '\\0') {\n                    return 0xffffffff;\n                }\n                goto code_r0x1001000a;\n            }\n            *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\ncode_r0x1001001d:\n            cVar1 = fcn.100149c4();\n            if (cVar1 == '\\0') {\ncode_r0x1001003b:\n                return 0xffffffff;\n            }\n            cVar1 = fcn.1000f8d3();\n        }\n        uVar3 = *(param_1 + 0x18);\n    }\n    return uVar3;\ncode_r0x1000ffe8:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x1001000a;\n}\n",
        "token_count": 1040
    },
    "100102b9": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __thiscall fcn.100102b9(int32_t param_1, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6)\n\n{\n    char cVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint32_t arg_8h;\n    uint uVar4;\n    uint unaff_EBX;\n    uint unaff_ESI;\n    uint unaff_retaddr;\n    \n    cVar1 = fcn.100146f5();\n    if (cVar1 == '\\0') {\n        return 0xffffffff;\n    }\n    if (*(param_1 + 0x10) == 0) {\n        puVar2 = fcn.10016fba();\n        *puVar2 = 0x16;\n        fcn.1001a732();\n        uVar3 = 0xffffffff;\n    }\n    else {\n        cVar1 = fcn.1000f8d3();\n        while (cVar1 != '\\0') {\n            *(param_1 + 0x38) = 0;\n            *(param_1 + 0x1c) = 0;\ncode_r0x100103aa:\n            cVar1 = **(param_1 + 0x10);\n            *(param_1 + 0x31) = cVar1;\n            if (cVar1 != '\\0') {\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\n                if (*(param_1 + 0x18) < 0) goto code_r0x100103bd;\n                uVar3 = *(param_1 + 0x1c);\n                arg_8h = *(param_1 + 0x31);\n                uVar4 = fcn.1000f989(arg_8h, uVar3);\n                *(param_1 + 0x1c) = uVar4;\n                cVar1 = fcn.100147a8();\n                if (cVar1 == '\\0') {\n                    return 0xffffffff;\n                }\n    // switch table (8 cases) at 0x100103f5\n                switch(*(param_1 + 0x1c)) {\n                case 0:\n                    cVar1 = fcn.10010de5();\n                    break;\n                case 1:\n                    *(param_1 + 0x24) = 0;\n                    *(param_1 + 0x30) = 0;\n                    *(param_1 + 0x20) = 0;\n                    *(param_1 + 0x28) = 0xffffffff;\n                    *(param_1 + 0x2c) = 0;\n                    *(param_1 + 0x3c) = 0;\n                    goto code_r0x100103aa;\n                case 2:\n                    cVar1 = fcn.10010cfc();\n                    break;\n                case 3:\n                    cVar1 = fcn.10012f0c();\n                    break;\n                case 4:\n                    goto code_r0x10010388;\n                case 5:\n                    cVar1 = fcn.1001104b();\n                    break;\n                case 6:\n                    cVar1 = fcn.10011524();\n                    break;\n                case 7:\n                    cVar1 = fcn.10012315(arg_8h, uVar3, arg_8h, unaff_EBX, unaff_ESI, unaff_retaddr, param_2, param_3, \n                                         param_4, param_5, param_6);\n                    break;\n                default:\n                    puVar2 = fcn.10016fba();\n                    *puVar2 = 0x16;\n                    fcn.1001a732();\n                    return 0xffffffff;\n                case 0xbad1abe1:\n                    goto code_r0x100103db;\n                }\n                if (cVar1 == '\\0') {\n                    return 0xffffffff;\n                }\n                goto code_r0x100103aa;\n            }\n            *(param_1 + 0x10) = *(param_1 + 0x10) + 1;\ncode_r0x100103bd:\n            cVar1 = fcn.100149c4();\n            if (cVar1 == '\\0') {\ncode_r0x100103db:\n                return 0xffffffff;\n            }\n            cVar1 = fcn.1000f8d3();\n        }\n        uVar3 = *(param_1 + 0x18);\n    }\n    return uVar3;\ncode_r0x10010388:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x100103aa;\n}\n",
        "token_count": 1030
    },
    "10010661": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df",
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __fastcall fcn.10010661(int32_t param_1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    cVar2 = fcn.100146f5();\n    if (cVar2 == '\\0') {\n        return 0xffffffff;\n    }\n    if (*(param_1 + 0x10) == 0) {\n        puVar3 = fcn.10016fba();\n        *puVar3 = 0x16;\n        fcn.1001a732();\n        uVar4 = 0xffffffff;\n    }\n    else {\n        cVar2 = fcn.1000f8d3();\n        while (cVar2 != '\\0') {\n            *(param_1 + 0x38) = 0;\n            *(param_1 + 0x1c) = 0;\ncode_r0x10010753:\n            iVar1 = **(param_1 + 0x10);\n            *(param_1 + 0x32) = iVar1;\n            if (iVar1 != 0) {\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n                if (*(param_1 + 0x18) < 0) goto code_r0x1001076a;\n                uVar4 = fcn.1000f9f0(*(param_1 + 0x32), *(param_1 + 0x1c));\n                *(param_1 + 0x1c) = uVar4;\n                cVar2 = fcn.100148a0();\n                if (cVar2 == '\\0') {\n                    return 0xffffffff;\n                }\n    // switch table (8 cases) at 0x100107a1\n                switch(*(param_1 + 0x1c)) {\n                case 0:\n                    cVar2 = fcn.10010e35();\n                    break;\n                case 1:\n                    *(param_1 + 0x24) = 0;\n                    *(param_1 + 0x30) = 0;\n                    *(param_1 + 0x20) = 0;\n                    *(param_1 + 0x28) = 0xffffffff;\n                    *(param_1 + 0x2c) = 0;\n                    *(param_1 + 0x3c) = 0;\n                    goto code_r0x10010753;\n                case 2:\n                    cVar2 = fcn.10010d39();\n                    break;\n                case 3:\n                    cVar2 = fcn.10012f78();\n                    break;\n                case 4:\n                    goto code_r0x10010731;\n                case 5:\n                    cVar2 = fcn.100110ae();\n                    break;\n                case 6:\n                    cVar2 = fcn.10011809();\n                    break;\n                case 7:\n                    cVar2 = fcn.100127ac();\n                    break;\n                default:\n                    puVar3 = fcn.10016fba();\n                    *puVar3 = 0x16;\n                    fcn.1001a732();\n                    return 0xffffffff;\n                case 0xbad1abe1:\n                    goto code_r0x10010788;\n                }\n                if (cVar2 == '\\0') {\n                    return 0xffffffff;\n                }\n                goto code_r0x10010753;\n            }\n            *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\ncode_r0x1001076a:\n            cVar2 = fcn.100149c4();\n            if (cVar2 == '\\0') {\ncode_r0x10010788:\n                return 0xffffffff;\n            }\n            cVar2 = fcn.1000f8d3();\n        }\n        uVar4 = *(param_1 + 0x18);\n    }\n    return uVar4;\ncode_r0x10010731:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x10010753;\n}\n",
        "token_count": 903
    },
    "10010a11": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint __fastcall fcn.10010a11(int32_t param_1)\n\n{\n    int16_t iVar1;\n    char cVar2;\n    uint *puVar3;\n    uint uVar4;\n    \n    cVar2 = fcn.100146f5();\n    if (cVar2 == '\\0') {\n        return 0xffffffff;\n    }\n    if (*(param_1 + 0x10) == 0) {\n        puVar3 = fcn.10016fba();\n        *puVar3 = 0x16;\n        fcn.1001a732();\n        uVar4 = 0xffffffff;\n    }\n    else {\n        cVar2 = fcn.1000f8d3();\n        while (cVar2 != '\\0') {\n            *(param_1 + 0x38) = 0;\n            *(param_1 + 0x1c) = 0;\ncode_r0x10010b03:\n            iVar1 = **(param_1 + 0x10);\n            *(param_1 + 0x32) = iVar1;\n            if (iVar1 != 0) {\n                *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\n                if (*(param_1 + 0x18) < 0) goto code_r0x10010b1a;\n                uVar4 = fcn.1000f9f0(*(param_1 + 0x32), *(param_1 + 0x1c));\n                *(param_1 + 0x1c) = uVar4;\n                cVar2 = fcn.100148a0();\n                if (cVar2 == '\\0') {\n                    return 0xffffffff;\n                }\n    // switch table (8 cases) at 0x10010b51\n                switch(*(param_1 + 0x1c)) {\n                case 0:\n                    cVar2 = fcn.10010e85();\n                    break;\n                case 1:\n                    *(param_1 + 0x24) = 0;\n                    *(param_1 + 0x30) = 0;\n                    *(param_1 + 0x20) = 0;\n                    *(param_1 + 0x28) = 0xffffffff;\n                    *(param_1 + 0x2c) = 0;\n                    *(param_1 + 0x3c) = 0;\n                    goto code_r0x10010b03;\n                case 2:\n                    cVar2 = fcn.10010d39();\n                    break;\n                case 3:\n                    cVar2 = fcn.10012f78();\n                    break;\n                case 4:\n                    goto code_r0x10010ae1;\n                case 5:\n                    cVar2 = fcn.100110ae();\n                    break;\n                case 6:\n                    cVar2 = fcn.10011b01();\n                    break;\n                case 7:\n                    cVar2 = fcn.10012c75();\n                    break;\n                default:\n                    puVar3 = fcn.10016fba();\n                    *puVar3 = 0x16;\n                    fcn.1001a732();\n                    return 0xffffffff;\n                case 0xbad1abe1:\n                    goto code_r0x10010b38;\n                }\n                if (cVar2 == '\\0') {\n                    return 0xffffffff;\n                }\n                goto code_r0x10010b03;\n            }\n            *(param_1 + 0x10) = *(param_1 + 0x10) + 2;\ncode_r0x10010b1a:\n            cVar2 = fcn.100149c4();\n            if (cVar2 == '\\0') {\ncode_r0x10010b38:\n                return 0xffffffff;\n            }\n            cVar2 = fcn.1000f8d3();\n        }\n        uVar4 = *(param_1 + 0x18);\n    }\n    return uVar4;\ncode_r0x10010ae1:\n    *(param_1 + 0x28) = 0;\n    goto code_r0x10010b03;\n}\n",
        "token_count": 916
    },
    "100130ad": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.100130ad(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint16_t *puVar2;\n    char cVar3;\n    uint16_t *var_4h;\n    \n    var_4h = NULL;\n    cVar3 = fcn.1000e812(&var_4h);\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    cVar3 = fcn.10010ca0();\n    puVar2 = var_4h;\n    if (cVar3 != '\\0') {\n        if ((var_4h == NULL) || (iVar1 = *(var_4h + 2),  iVar1 == 0)) {\n            param_1[0xd] = 0x1004220c;\n            param_1[0xe] = 6;\n        }\n        else {\n            cVar3 = fcn.1000edb8(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n            param_1[0xd] = iVar1;\n            if (cVar3 != '\\0') {\n                param_1[0xe] = *puVar2 >> 1;\n                *(param_1 + 0xf) = 1;\n                return 1;\n            }\n            param_1[0xe] = *puVar2;\n        }\n        *(param_1 + 0xf) = 0;\n    }\n    return 1;\n}\n",
        "token_count": 333
    },
    "1001318f": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuchar __fastcall fcn.1001318f(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint16_t *puVar2;\n    char cVar3;\n    uint16_t *var_4h;\n    \n    var_4h = NULL;\n    cVar3 = fcn.1000e890(&var_4h);\n    if (cVar3 == '\\0') {\n        return 0;\n    }\n    cVar3 = fcn.10010ca0();\n    puVar2 = var_4h;\n    if (cVar3 != '\\0') {\n        if ((var_4h == NULL) || (iVar1 = *(var_4h + 2),  iVar1 == 0)) {\n            param_1[0xd] = 0x1004220c;\n            param_1[0xe] = 6;\n        }\n        else {\n            cVar3 = fcn.1000edf8(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n            param_1[0xd] = iVar1;\n            if (cVar3 != '\\0') {\n                param_1[0xe] = *puVar2 >> 1;\n                *(param_1 + 0xf) = 1;\n                return 1;\n            }\n            param_1[0xe] = *puVar2;\n        }\n        *(param_1 + 0xf) = 0;\n    }\n    return 1;\n}\n",
        "token_count": 335
    },
    "10013653": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.10013653(uint *param_1)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    uint arg_18h;\n    uint arg_14h;\n    uint arg_10h;\n    char *pcVar5;\n    char *pcVar6;\n    uint arg_20h;\n    uint arg_24h;\n    uint noname_8;\n    uint arg_2ch;\n    uint *var_8h;\n    uint *var_4h;\n    \n    param_1[8] = param_1[8] | 0x10;\n    var_8h = param_1;\n    var_4h = param_1;\n    uVar2 = fcn.10014a97();\n    if (uVar2 != '\\0') {\n        uVar2 = fcn.10010ca0();\n        if (uVar2 == '\\0') {\n            uVar2 = uVar2 & 0xffffff00 | 1;\n        }\n        else {\n            if (param_1[10] < 0) {\n                if ((*(param_1 + 0x32) == 0x61) || (*(param_1 + 0x32) == 0x41)) {\n                    param_1[10] = 0xd;\n                }\n                else {\n                    param_1[10] = 6;\n                }\n            }\n            else if ((param_1[10] == 0) && ((*(param_1 + 0x32) == 0x67 || (*(param_1 + 0x32) == 0x47)))) {\n                param_1[10] = 1;\n            }\n            cVar1 = fcn.1000e03e(param_1[10] + 0x15d);\n            if (cVar1 == '\\0') {\n                iVar3 = fcn.1000e019();\n                param_1[10] = iVar3 + -0x15d;\n            }\n            puVar4 = param_1[0x111];\n            if (param_1[0x111] == NULL) {\n                puVar4 = param_1 + 0x10;\n            }\n            var_8h = NULL;\n            var_4h = NULL;\n            param_1[0xd] = puVar4;\n            uVar2 = fcn.1000e9b6(&var_8h);\n            if (uVar2 != '\\0') {\n                arg_18h = fcn.1000e019();\n                puVar4 = param_1[0x111];\n                if (param_1[0x111] == NULL) {\n                    puVar4 = param_1 + 0x10;\n                }\n                arg_2ch = param_1[2];\n                iVar3 = *(param_1 + 0x32);\n                noname_8 = param_1[1];\n                arg_24h = *param_1;\n                arg_20h = param_1[10];\n                arg_14h = fcn.1000eef4();\n                arg_10h = fcn.1000e019();\n                fcn.1001f1dc(&var_8h, puVar4, arg_10h, arg_14h, arg_18h, iVar3, arg_20h, arg_24h, noname_8, arg_2ch);\n                if (((param_1[8] >> 5 & 1) != 0) && (param_1[10] == 0)) {\n                    fcn.1000fa5b(param_1[0xd], param_1[2]);\n                }\n                if (((*(param_1 + 0x32) == 0x67) || (*(param_1 + 0x32) == 0x47)) && ((param_1[8] >> 5 & 1) == 0)) {\n                    fcn.1000f932(param_1[0xd], param_1[2]);\n                }\n                pcVar5 = param_1[0xd];\n                if (*pcVar5 == '-') {\n                    param_1[8] = param_1[8] | 0x40;\n                    pcVar5 = pcVar5 + 1;\n                    param_1[0xd] = pcVar5;\n                }\n                pcVar6 = param_1[0xd];\n                cVar1 = *pcVar6;\n                uVar2 = pcVar5 & 0xffffff00;\n                if (((cVar1 == 'i') || (cVar1 == 'I')) || ((cVar1 == 'n' || (cVar1 == 'N')))) {\n                    uVar2 = 0;\n                    *(param_1 + 0x32) = 0x73;\n                }\n                pcVar5 = pcVar6 + 1;\n                do {\n                    cVar1 = *pcVar6;\n                    pcVar6 = pcVar6 + 1;\n                } while (cVar1 != '\\0');\n                uVar2 = CONCAT31(uVar2 >> 8, 1);\n                param_1[0xe] = pcVar6 - pcVar5;\n            }\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 1160
    },
    "10013894": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint __fastcall fcn.10013894(uint *param_1)\n\n{\n    char cVar1;\n    uint arg_10h;\n    int32_t iVar2;\n    uint *puVar3;\n    uint32_t arg_14h;\n    uint *var_4h;\n    \n    var_4h = param_1;\n    cVar1 = fcn.1000edb8(*param_1, param_1[1], *(param_1 + 0x31), param_1[0xb]);\n    if (cVar1 == '\\0') {\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = param_1 + 0x10;\n        }\n        cVar1 = fcn.1000e41b(puVar3);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        cVar1 = fcn.10010ca0();\n        if (cVar1 == '\\0') {\n            return 1;\n        }\n        param_1[0xe] = 1;\n    }\n    else {\n        var_4h = var_4h & 0xffff0000;\n        cVar1 = fcn.1000eba0(&var_4h);\n        if (cVar1 == '\\0') {\n            return 0;\n        }\n        cVar1 = fcn.10010ca0();\n        if (cVar1 == '\\0') {\n            return 1;\n        }\n        puVar3 = param_1[0x111];\n        if (param_1[0x111] == NULL) {\n            puVar3 = param_1 + 0x10;\n        }\n        arg_14h = var_4h;\n        arg_10h = fcn.1000e019();\n        iVar2 = fcn.1001e04b(param_1 + 0xe, puVar3, arg_10h, arg_14h);\n        if (iVar2 != 0) {\n            *(param_1 + 0xc) = 1;\n        }\n    }\n    puVar3 = param_1 + 0x10;\n    if (param_1[0x111] != NULL) {\n        puVar3 = param_1[0x111];\n    }\n    param_1[0xd] = puVar3;\n    return 1;\n}\n",
        "token_count": 529
    },
    "100139ec": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nchar __fastcall fcn.100139ec(uint *param_1)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    uint *lpWideCharStr;\n    uint *puVar3;\n    uint32_t var_4h;\n    \n    var_4h = param_1 & 0xffff0000;\n    *(param_1 + 0xf) = 1;\n    cVar1 = fcn.1000ec22(&var_4h);\n    if (cVar1 != '\\0') {\n        cVar1 = fcn.10010ca0();\n        if (cVar1 != '\\0') {\n            cVar1 = fcn.1000edf8(*param_1, param_1[1], *(param_1 + 0x32), param_1[0xb]);\n            puVar3 = param_1 + 0x10;\n            lpWideCharStr = param_1[0x111];\n            if (cVar1 == '\\0') {\n                var_4h = var_4h & 0xffff00ff;\n                if (lpWideCharStr == NULL) {\n                    lpWideCharStr = puVar3;\n                }\n                iVar2 = fcn.1001dd8f(lpWideCharStr, &var_4h, *(*param_1[2] + 4), param_1[2]);\n                if (iVar2 < 0) {\n                    *(param_1 + 0xc) = 1;\n                }\n            }\n            else {\n                if (lpWideCharStr == NULL) {\n                    lpWideCharStr = puVar3;\n                }\n                *lpWideCharStr = var_4h;\n            }\n            if (param_1[0x111] != NULL) {\n                puVar3 = param_1[0x111];\n            }\n            param_1[0xd] = puVar3;\n            param_1[0xe] = 1;\n        }\n        cVar1 = '\\x01';\n    }\n    return cVar1;\n}\n",
        "token_count": 451
    },
    "10013f7f": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.10013f7f(int32_t param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    cVar1 = fcn.1000e812(&var_4h);\n    if (cVar1 == '\\0') {\ncode_r0x10013f99:\n        uVar2 = 0;\n    }\n    else {\n        cVar1 = fcn.10010ca0();\n        if (cVar1 != '\\0') {\n            iVar3 = fcn.1001f85a();\n            if (iVar3 == 0) {\ncode_r0x10013fb1:\n                puVar4 = fcn.10016fba();\n                *puVar4 = 0x16;\n                fcn.1001a732();\n                goto code_r0x10013f99;\n            }\n            iVar3 = fcn.10012fd0(*(param_1 + 0x2c));\n            if (iVar3 == 1) {\n                *var_4h = *(param_1 + 0x18);\n            }\n            else if (iVar3 == 2) {\n                *var_4h = *(param_1 + 0x18);\n            }\n            else if (iVar3 == 4) {\n                *var_4h = *(param_1 + 0x18);\n            }\n            else {\n                if (iVar3 != 8) goto code_r0x10013fb1;\n                iVar3 = *(param_1 + 0x18);\n                *var_4h = iVar3;\n                var_4h[1] = iVar3 >> 0x1f;\n            }\n            *(param_1 + 0x30) = 1;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 429
    },
    "10014018": {
        "rules": [
            "decompress data using LZO/0e44f942d5744579a3d2494f64545baa"
        ],
        "decompiled_code": "\nuint __fastcall fcn.10014018(int32_t param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint *puVar4;\n    int32_t *var_4h;\n    \n    var_4h = NULL;\n    cVar1 = fcn.1000e890(&var_4h);\n    if (cVar1 == '\\0') {\ncode_r0x10014032:\n        uVar2 = 0;\n    }\n    else {\n        cVar1 = fcn.10010ca0();\n        if (cVar1 != '\\0') {\n            iVar3 = fcn.1001f85a();\n            if (iVar3 == 0) {\ncode_r0x1001404a:\n                puVar4 = fcn.10016fba();\n                *puVar4 = 0x16;\n                fcn.1001a732();\n                goto code_r0x10014032;\n            }\n            iVar3 = fcn.10012fd0(*(param_1 + 0x2c));\n            if (iVar3 == 1) {\n                *var_4h = *(param_1 + 0x18);\n            }\n            else if (iVar3 == 2) {\n                *var_4h = *(param_1 + 0x18);\n            }\n            else if (iVar3 == 4) {\n                *var_4h = *(param_1 + 0x18);\n            }\n            else {\n                if (iVar3 != 8) goto code_r0x1001404a;\n                iVar3 = *(param_1 + 0x18);\n                *var_4h = iVar3;\n                var_4h[1] = iVar3 >> 0x1f;\n            }\n            *(param_1 + 0x30) = 1;\n        }\n        uVar2 = 1;\n    }\n    return uVar2;\n}\n",
        "token_count": 425
    },
    "1001931d": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.1001931d(uint arg_8h, uint arg_ch)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    code *noname_0;\n    uint noname_1;\n    uint var_4h;\n    \n    fcn.10001eb0(0x1007f5b8, 0xc);\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.10019266(**(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    *0x100822b0 = fcn.1000b5c1(***(unaff_EBP + 0xc));\n    noname_1 = 1;\n    noname_0 = fcn.100192d7;\n    uVar2 = (*_sym.imp.KERNEL32.dll_EnumSystemLocalesW)();\n    uVar1 = 0x20 - (*0x10081004 & 0x1f) & 0x1f;\n    *0x100822b0 = (0U >> uVar1 | 0 << 0x20 - uVar1) ^ *0x10081004;\n    *(unaff_EBP + -0x1c) = uVar2;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.10019395(noname_0, noname_1, 0x1007f5b8);\n    fcn.10001ef6();\n    return;\n}\n",
        "token_count": 374
    },
    "1001cd8d": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.1001cd8d(uint arg_8h)\n\n{\n    uint8_t uVar1;\n    int32_t unaff_EBP;\n    uint unaff_retaddr;\n    uint var_1ch;\n    uint var_4h;\n    uint noname_1;\n    \n    noname_1 = 0xc;\n    fcn.10001eb0();\n    *(unaff_EBP + -0x1c) = 0;\n    fcn.10019266(**(unaff_EBP + 8));\n    *(unaff_EBP + -4) = 0;\n    uVar1 = *0x10081004 & 0x1f;\n    *(unaff_EBP + -0x1c) = (*0x10081004 ^ *0x10082514) >> uVar1 | (*0x10081004 ^ *0x10082514) << 0x20 - uVar1;\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.1001cddb(0x1007f6d8, noname_1, unaff_retaddr);\n    fcn.10001ef6();\n    return;\n}\n",
        "token_count": 280
    },
    "100230f6": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.100230f6(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x30 + *((lpCriticalSection >> 6) * 4 + 0x10082300));\n    return;\n}\n",
        "token_count": 69
    },
    "100231ad": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.100231ad(uint32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)\n              ((lpCriticalSection & 0x3f) * 0x30 + *((lpCriticalSection >> 6) * 4 + 0x10082300));\n    return;\n}\n",
        "token_count": 69
    },
    "100234c6": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad",
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid fcn.100234c6(void)\n\n{\n    uint8_t *puVar1;\n    char in_AL;\n    uint32_t unaff_ESI;\n    \n    if (in_AL == '\\0') {\n        puVar1 = *((unaff_ESI >> 6) * 4 + 0x10082300) + 0x28 + (unaff_ESI & 0x3f) * 0x30;\n        *puVar1 = *puVar1 & 0xfe;\n    }\n    fcn.100231ad(unaff_ESI);\n    return;\n}\n",
        "token_count": 128
    },
    "10001e4a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x10001e5a)\n// WARNING: Removing unreachable block (ram,0x10001e5b)\n// WARNING: Removing unreachable block (ram,0x10001e61)\n// WARNING: Removing unreachable block (ram,0x10001e6b)\n// WARNING: Removing unreachable block (ram,0x10001e72)\n\nvoid fcn.10001e4a(void)\n\n{\n    return;\n}\n",
        "token_count": 100
    },
    "10001e76": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x10001e86)\n// WARNING: Removing unreachable block (ram,0x10001e87)\n// WARNING: Removing unreachable block (ram,0x10001e8d)\n// WARNING: Removing unreachable block (ram,0x10001e97)\n// WARNING: Removing unreachable block (ram,0x10001e9e)\n\nvoid fcn.10001e76(void)\n\n{\n    return;\n}\n",
        "token_count": 98
    },
    "1000637d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.1000637d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.100066c6(arg_8h, arg_ch, arg_10h, 0x100414c4);\n    return arg_8h;\n}\n",
        "token_count": 65
    },
    "1000639b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.1000639b(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    fcn.100066c6(arg_8h, arg_ch, arg_10h, 0x10041486);\n    return arg_8h;\n}\n",
        "token_count": 64
    },
    "100085b5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.100085b5(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection * 0x18 + 0x10081d04);\n    return;\n}\n",
        "token_count": 50
    },
    "100085f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.100085f9(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection * 0x18 + 0x10081d04);\n    return;\n}\n",
        "token_count": 51
    },
    "1000b643": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.1000b643(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    char cVar5;\n    uint32_t uVar6;\n    int32_t unaff_EBP;\n    uint var_14h;\n    uint arg_8h_00;\n    uint var_4h;\n    \n    fcn.1002e200(0x1007f328, 0xc);\n    iVar1 = *(unaff_EBP + 0x10);\n    if (iVar1 == 0) {\n        cVar5 = fcn.1000b7a0();\n        if (cVar5 != '\\0') {\n            fcn.1000b7ff(*(unaff_EBP + 8));\n        }\n    }\n    fcn.10019266(2);\n    *(unaff_EBP + -4) = 0;\n    if (*0x10081d50 != '\\0') goto code_r0x1000b71a;\n    *0x10081d48 = 1;\n    *(unaff_EBP + -4) = 1;\n    iVar2 = *(unaff_EBP + 0xc);\n    if (iVar2 == 0) {\n        uVar4 = *0x10081004 & 0x1f;\n        uVar3 = 0x20 - uVar4 & 0x1f;\n        if (*0x10081d4c != ((0U >> uVar3 | 0 << 0x20 - uVar3) ^ *0x10081004)) {\n            uVar6 = *0x10081004 ^ *0x10081d4c;\n            (**0x100411ec)(0, 0, 0);\n            (*(uVar6 >> uVar4 | uVar6 << 0x20 - uVar4))();\n        }\n        arg_8h_00 = 0x1008207c;\ncode_r0x1000b6df:\n        fcn.1000ca67(arg_8h_00);\n    }\n    else if (iVar2 == 1) {\n        arg_8h_00 = 0x10082088;\n        goto code_r0x1000b6df;\n    }\n    *(unaff_EBP + -4) = 0;\n    if (iVar2 == 0) {\n        fcn.1000b33b(0x10041210, 0x10041220);\n    }\n    fcn.1000b33b(0x10041224, 0x10041228);\n    if (iVar1 == 0) {\n        *0x10081d50 = '\\x01';\n    }\ncode_r0x1000b71a:\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.1000b74d();\n    if (iVar1 == 0) {\n        fcn.1000b75c(*(unaff_EBP + 8));\n        fcn.1000b61a(***(unaff_EBP + -0x14));\n        return;\n    }\n    fcn.1002e249();\n    return;\n}\n",
        "token_count": 736
    },
    "1000c49d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.1000c49d(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.1000cd10(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 60
    },
    "1000c4bb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.1000c4bb(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.1001bff0(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 60
    },
    "1000ef12": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.1000ef12(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.1001dcdf(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 59
    },
    "1000ef30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.1000ef30(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.1001dd37(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 59
    },
    "10011023": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.10011023(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x31) != '*') {\n        uVar2 = fcn.1000fd37(param_1 + 0x28);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *(param_1 + 0x28) = iVar1;\n    if (iVar1 < 0) {\n        *(param_1 + 0x28) = 0xffffffff;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 180
    },
    "10011085": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.10011085(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar2 = fcn.1000fd93(param_1 + 0x28);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *(param_1 + 0x28) = iVar1;\n    if (iVar1 < 0) {\n        *(param_1 + 0x28) = 0xffffffff;\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 184
    },
    "10012ee1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.10012ee1(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x31) != '*') {\n        uVar2 = fcn.1000fd37(param_1 + 0x24);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *(param_1 + 0x24) = iVar1;\n    if (iVar1 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        *(param_1 + 0x24) = -*(param_1 + 0x24);\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 214
    },
    "10012f4c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __fastcall fcn.10012f4c(int32_t param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    if (*(param_1 + 0x32) != 0x2a) {\n        uVar2 = fcn.1000fd93(param_1 + 0x24);\n        return uVar2;\n    }\n    *(param_1 + 0x14) = *(param_1 + 0x14) + 4;\n    iVar1 = *(*(param_1 + 0x14) + -4);\n    *(param_1 + 0x24) = iVar1;\n    if (iVar1 < 0) {\n        *(param_1 + 0x20) = *(param_1 + 0x20) | 4;\n        *(param_1 + 0x24) = -*(param_1 + 0x24);\n    }\n    return CONCAT31(iVar1 >> 8, 1);\n}\n",
        "token_count": 219
    },
    "10015451": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.10015451(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    fcn.1000dc26(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    return;\n}\n",
        "token_count": 96
    },
    "100154bd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl\nfcn.100154bd(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h, uint arg_18h, uint arg_1ch, uint arg_20h)\n\n{\n    fcn.1000dda2(arg_8h, arg_ch, arg_10h, arg_14h, arg_18h, arg_1ch, arg_20h);\n    return;\n}\n",
        "token_count": 96
    },
    "10019266": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.10019266(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection * 0x18 + 0x100820a0);\n    return;\n}\n",
        "token_count": 49
    },
    "100192ae": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.100192ae(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection * 0x18 + 0x100820a0);\n    return;\n}\n",
        "token_count": 50
    },
    "10019464": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.10019464(void)\n\n{\n    fcn.100197ae(1, \"CompareStringEx\", 0x1004372c, \"CompareStringEx\");\n    return;\n}\n",
        "token_count": 43
    },
    "100196d4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.100196d4(void)\n\n{\n    fcn.100197ae(0x19, \"LocateXStateFeature\", 0x100439cc, \"LocateXStateFeature\");\n    return;\n}\n",
        "token_count": 49
    },
    "100196ee": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.100196ee(void)\n\n{\n    fcn.100197ae(0x1a, \"MessageBoxA\", 0x100439e8, \"MessageBoxA\");\n    return;\n}\n",
        "token_count": 44
    },
    "10019708": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.10019708(void)\n\n{\n    fcn.100197ae(0x1b, \"MessageBoxW\", 0x100439fc, \"MessageBoxW\");\n    return;\n}\n",
        "token_count": 43
    },
    "1001b168": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.1001b168(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    fcn.10022b1b(*arg_8h, *arg_ch, *arg_10h, *arg_14h);\n    return;\n}\n",
        "token_count": 73
    },
    "1001b18b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.1001b18b(uint *arg_8h, uint *arg_ch, uint *arg_10h, uint *arg_14h)\n\n{\n    fcn.1002100e(*arg_8h, *arg_ch, *arg_10h, *arg_14h);\n    return;\n}\n",
        "token_count": 73
    },
    "1001b26d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.1001b26d(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t in_ECX;\n    \n    iVar1 = fcn.1001b2bc();\n    if (iVar1 == 0) {\n        **(in_ECX + 4) = arg_8h;\n        *(in_ECX + 4) = *(in_ECX + 4) + 4;\n        iVar1 = 0;\n    }\n    else {\n        fcn.1001a8c5(arg_8h);\n    }\n    return iVar1;\n}\n",
        "token_count": 133
    },
    "10022b70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.10022b70(uint arg_8h, uint arg_ch)\n\n{\n    fcn.10022b87(arg_8h, arg_ch, 0);\n    return;\n}\n",
        "token_count": 45
    },
    "1001c889": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.1001c889(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.10022e20(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 59
    },
    "1001c8a7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.1001c8a7(uint *arg_8h, uint *arg_ch, uint *arg_10h)\n\n{\n    fcn.10022c23(*arg_8h, *arg_ch, *arg_10h);\n    return;\n}\n",
        "token_count": 61
    },
    "1001c8e6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint __cdecl fcn.1001c8e6(int16_t *arg_8h, int32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int16_t iVar2;\n    code *pcVar3;\n    uint *puVar4;\n    int16_t *piVar5;\n    int32_t iVar6;\n    int32_t *piVar7;\n    int32_t arg_8h_00;\n    int32_t arg_ch_00;\n    uint uVar8;\n    int16_t *piVar9;\n    bool bVar10;\n    uint var_ch;\n    uint var_8h;\n    uint var_1h;\n    \n    if (arg_8h == NULL) {\n        puVar4 = fcn.10016fba();\n        *puVar4 = 0x16;\n        return 0xffffffff;\n    }\n    piVar5 = fcn.100304ab(arg_8h, 0x3d);\n    piVar9 = arg_8h;\n    if ((piVar5 == NULL) || (piVar5 == arg_8h)) {\ncode_r0x1001c446:\n        puVar4 = fcn.10016fba();\n        *puVar4 = 0x16;\n    }\n    else {\n        uVar8 = 0;\n        bVar10 = piVar5[1] == 0;\n        if (*0x10082070 == *0x10082074) {\n            *0x10082070 = fcn.1001c6b0(*0x10082070);\n        }\n        if (*0x10082070 == NULL) {\n            if ((arg_ch == 0) || (*0x1008206c == 0)) {\n                if (bVar10) goto code_r0x1001c454;\n                if (*0x1008206c == 0) {\n                    *0x1008206c = fcn.1001a7df(1, 4);\n                    fcn.1001a8c5(0);\n                    if (*0x1008206c == 0) goto code_r0x1001c451;\n                    if (*0x10082070 != NULL) goto code_r0x1001c4b6;\n                }\n                *0x10082070 = fcn.1001a7df(1, 4);\n                fcn.1001a8c5(0);\n            }\n            else {\n                iVar6 = fcn.1000c646();\n                if (iVar6 == 0) goto code_r0x1001c446;\n            }\n            if (*0x10082070 == NULL) goto code_r0x1001c451;\n        }\ncode_r0x1001c4b6:\n        piVar7 = *0x10082070;\n        arg_ch_00 = piVar5 - arg_8h >> 1;\n        iVar6 = fcn.1001c7c2(arg_8h, arg_ch_00);\n        if ((-1 < iVar6) && (*piVar7 != 0)) {\n            fcn.1001a8c5(piVar7[iVar6]);\n            if (bVar10) {\n                for (; piVar7[iVar6] != 0; iVar6 = iVar6 + 1) {\n                    piVar7[iVar6] = piVar7[iVar6 + 1];\n                }\n                piVar7 = fcn.1001c8f1(piVar7, iVar6, 4);\n                fcn.1001a8c5(0);\n                if (piVar7 != NULL) {\ncode_r0x1001c56a:\n                    *0x10082070 = piVar7;\n                }\n            }\n            else {\n                piVar7[iVar6] = arg_8h;\n                piVar9 = NULL;\n            }\n            if (arg_ch != 0) {\n                piVar5 = arg_8h;\n                do {\n                    iVar2 = *piVar5;\n                    piVar5 = piVar5 + 1;\n                } while (iVar2 != 0);\n                iVar6 = (piVar5 - (arg_8h + 1) >> 1) + 2;\n                arg_8h_00 = fcn.1001a7df(iVar6, 2);\n                if (arg_8h_00 != 0) {\n                    iVar6 = fcn.1001bff0(arg_8h_00, iVar6, arg_8h);\n                    if (iVar6 != 0) {\n                        fcn.1001a75f(0, 0, 0, 0, 0);\n                        pcVar3 = swi(3);\n                        uVar8 = (*pcVar3)();\n                        return uVar8;\n                    }\n                    uVar1 = arg_8h_00 + (arg_ch_00 + 1) * 2;\n                    *(uVar1 - 2) = 0;\n                    iVar6 = (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)(arg_8h_00, ~-bVar10 & uVar1);\n                    if (iVar6 == 0) {\n                        puVar4 = fcn.10016fba();\n                        uVar8 = 0xffffffff;\n                        *puVar4 = 0x2a;\n                    }\n                }\n                fcn.1001a8c5(arg_8h_00);\n            }\n            goto code_r0x1001c454;\n        }\n        if (bVar10) goto code_r0x1001c454;\n        uVar1 = -iVar6 + 2;\n        if ((-iVar6 <= uVar1) && (uVar1 < 0x3fffffff)) {\n            piVar7 = fcn.1001c8f1(piVar7, uVar1, 4);\n            fcn.1001a8c5(0);\n            if (piVar7 != NULL) {\n                piVar7[-iVar6] = arg_8h;\n                piVar7[1 - iVar6] = 0;\n                piVar9 = NULL;\n                goto code_r0x1001c56a;\n            }\n        }\n    }\ncode_r0x1001c451:\n    uVar8 = 0xffffffff;\ncode_r0x1001c454:\n    fcn.1001a8c5(piVar9);\n    return uVar8;\n}\n",
        "token_count": 1411
    },
    "1001c8f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.1001c8f1(int32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    \n    if ((arg_ch == 0) || (arg_10h <= 0xffffffe0 / arg_ch)) {\n        if (arg_8h == 0) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.10022f13(arg_8h);\n        }\n        arg_ch = arg_ch * arg_10h;\n        iVar2 = fcn.10022f46(arg_8h, arg_ch);\n        if ((iVar2 != 0) && (uVar3 < arg_ch)) {\n            fcn.100024a0(iVar2 + uVar3, 0, arg_ch - uVar3);\n        }\n    }\n    else {\n        puVar1 = fcn.10016fba();\n        *puVar1 = 0xc;\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 252
    },
    "1001cfbd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.1001cfbd(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.10017af0();\n    return iVar1 + 8;\n}\n",
        "token_count": 43
    },
    "1001dc87": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.1001dc87(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.1001559f(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.1001616d(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 121
    },
    "1001dcb3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.1001dcb3(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 0;\n    fcn.1001559f(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.1001616d(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 122
    },
    "1001dd37": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.1001dd37(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 1;\n    fcn.1001559f(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.100157e2(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 121
    },
    "1001dd63": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.1001dd63(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint arg_ch_00;\n    uint arg_10h_00;\n    uint arg_18h;\n    \n    arg_18h = 0;\n    fcn.1001559f(&stack0xffffffe8, arg_8h, arg_ch);\n    fcn.100157e2(0, arg_ch_00, arg_10h_00, arg_10h, arg_18h);\n    return;\n}\n",
        "token_count": 121
    },
    "1001f47e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.1001f47e(uint arg_8h)\n\n{\n    uint arg_ch;\n    \n    arg_ch = fcn.1001f628(1);\n    fcn.1001f4a3(arg_8h, arg_ch);\n    return;\n}\n",
        "token_count": 61
    },
    "1001f6ca": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.1001f6ca(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 43
    },
    "1001f6de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.1001f6de(int32_t lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 0x20);\n    return;\n}\n",
        "token_count": 44
    },
    "1002d556": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1002d556(ulong param_1, ulong param_2)\n\n{\n    fcn.1002d776(param_1, param_2);\n    return;\n}\n",
        "token_count": 41
    },
    "1002d776": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.1002d776(ulong param_1, uint param_2)\n\n{\n    fcn.1002d795(param_1, param_1 >> 0x20, param_2);\n    return;\n}\n",
        "token_count": 50
    },
    "1002d795": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nfloat10 __cdecl fcn.1002d795(uint32_t arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    uint64_t uVar1;\n    double dVar2;\n    double dVar3;\n    int16_t iVar4;\n    int16_t iVar5;\n    uint16_t uVar6;\n    ushort uVar7;\n    uint in_stack_00000010;\n    \n    iVar4 = fcn.1002d9f7(&arg_8h);\n    dVar3 = _arg_8h;\n    if (iVar4 != 2) {\n        iVar5 = fcn.1002dba6(&arg_10h);\n        dVar2 = _arg_8h;\n        dVar3 = CONCAT44(in_stack_00000010, arg_10h);\n        if ((iVar5 != 2) && (_arg_8h != dVar3)) {\n            uVar7 = 1;\n            if (iVar4 == 1) {\n                _arg_8h = 1.39067116124321e-309;\n                uVar6 = arg_ch._2_2_ & 0xffef | 0x7fef;\n                uVar7 = 0xffff;\n            }\n            else {\n                if (iVar4 != 0) {\n                    if (((_arg_8h < dVar3) && (0.0 < _arg_8h)) || ((dVar3 < _arg_8h && (_arg_8h < 0.0)))) {\n                        uVar1 = _arg_8h & 0xffffffffffff0000;\n                        _arg_8h = uVar1 | arg_8h + 1U;\n                        dVar3 = _arg_8h;\n                        if (arg_8h + 1U == 0) {\n                            arg_8h._2_2_ = uVar1 >> 0x10;\n                            uVar1 = arg_8h._2_2_ + 1U << 0x10;\n                            _arg_8h = dVar2 & 0xffffffff00000000 | uVar1;\n                            dVar3 = _arg_8h;\n                            if (arg_8h._2_2_ + 1U == 0) {\n                                arg_ch._0_2_ = (dVar2 & 0xffffffff00000000) >> 0x20;\n                                arg_8h = uVar1;\n                                _arg_8h = CONCAT24(arg_ch + 1, arg_8h);\n                                _arg_8h = dVar2 & 0xffff000000000000 | _arg_8h;\n                                dVar3 = _arg_8h;\n                                if (arg_ch + 1 == 0) {\n                                    arg_ch._2_2_ = (dVar2 & 0xffff000000000000) >> 0x30;\n                                    _arg_8h = CONCAT26(arg_ch._2_2_ + 1, _arg_8h);\n                                    dVar3 = _arg_8h;\n                                    if ((arg_ch._2_2_ + 1 & 0x7fff) == 0x7ff0) {\n                                        fcn.1002db78(8);\n                                        dVar3 = _arg_8h;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        uVar1 = _arg_8h & 0xffffffffffff0000;\n                        _arg_8h = uVar1 | arg_8h - 1U;\n                        dVar3 = _arg_8h;\n                        if (arg_8h - 1U == 0xffff) {\n                            arg_8h._2_2_ = uVar1 >> 0x10;\n                            arg_8h = CONCAT22(arg_8h._2_2_ + -1, 0xffff);\n                            _arg_8h = dVar2 & 0xffffffff00000000 | arg_8h;\n                            dVar3 = _arg_8h;\n                            if (arg_8h._2_2_ + -1 == -1) {\n                                arg_ch._0_2_ = (dVar2 & 0xffffffff00000000) >> 0x20;\n                                _arg_8h = CONCAT24(arg_ch + -1, arg_8h);\n                                _arg_8h = dVar2 & 0xffff000000000000 | _arg_8h;\n                                dVar3 = _arg_8h;\n                                if (arg_ch + -1 == -1) {\n                                    arg_ch._2_2_ = (dVar2 & 0xffff000000000000) >> 0x30;\n                                    _arg_8h = CONCAT26(arg_ch._2_2_ + -1, _arg_8h);\n                                    dVar3 = _arg_8h;\n                                }\n                            }\n                        }\n                    }\n                    goto code_r0x1002d8da;\n                }\n                if (dVar3 <= _arg_8h) {\n                    uVar6 = 0x8000;\n                }\n                else {\n                    uVar6 = 0;\n                }\n            }\n            _arg_8h = CONCAT62(_arg_8h >> 0x10 & 0xffffffff | (uVar6 << 0x30) >> 0x10, uVar7);\n            dVar3 = _arg_8h;\n        }\n    }\ncode_r0x1002d8da:\n    _arg_8h = dVar3;\n    if ((_arg_8h & 0x7ff0000000000000) == 0) {\n        fcn.1002db78(0x10);\n    }\n    return _arg_8h;\n}\n",
        "token_count": 1247
    },
    "10031110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.10031110(int32_t param_1)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    char cVar3;\n    char cVar4;\n    char cVar5;\n    uint8_t uStack5;\n    \n    cVar5 = param_1;\n    if (*0x100817d4 < 0x1662) {\n        *0x100817c2 = cVar5 * *0x100817c2;\n    }\n    iVar1 = *0x100817b0 + -0x705e + uStack5;\n    *0x100817b0 = param_1 + 0x16a4 + iVar1;\n    cVar3 = uStack5 + iVar1 + ' ';\n    iVar1 = (*0x100817b0 - param_1) + 0x4a;\n    cVar2 = iVar1;\n    cVar4 = cVar2 * '\\x02' + -0x44 + cVar3;\n    iVar1 = *0x100817b0 * iVar1 - param_1;\n    if (*0x100817cc - *0x100817c4 == 0x233) {\n        *0x100817b6 = cVar4 + '\\a' + iVar1;\n        iVar1 = iVar1 + ((0x53 - *0x100817b6) - param_1);\n    }\n    else {\n        *0x100817b6 = cVar4 * *0x100817c5 - cVar5;\n        iVar1 = *0x100817b6 * 2 + -0x4b;\n    }\n    *0x100817d4 = ((*0x100817b6 - iVar1) + 0x4a) * (cVar3 + cVar4 + cVar2 + cVar5 + 'J') - *0x100817b0;\n    return *0x100817b0;\n}\n",
        "token_count": 430
    },
    "10032900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Control flow encountered bad instruction data\n\nvoid fcn.10032900(void)\n\n{\n    // WARNING: Bad instruction - Truncating control flow here\n    halt_baddata();\n}\n",
        "token_count": 41
    },
    "10008fa9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint __cdecl fcn.10008fa9(uint arg_8h, uint arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    uint var_8h;\n    uint var_4h;\n    \n    uVar1 = fcn.10009d09(arg_8h, arg_ch, arg_10h, arg_14h, in_EAX, 0, 0, 0);\n    return uVar1;\n}\n",
        "token_count": 111
    },
    "100175cb": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.100175cb(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.1001a8c5(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "1002e5f3": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.1002e5f3(uint32_t *arg_8h, uint32_t *arg_ch, uint32_t arg_10h)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (arg_10h == 0) {\n        return 0;\n    }\n    if (arg_10h == 1) {\n        uVar2 = *arg_8h;\n        uVar1 = *arg_ch;\ncode_r0x1002f4a6:\n        if (uVar2 == uVar1) {\n            return 0;\n        }\n        return (0 < uVar2 - uVar1) * 2 + -1;\n    }\n    if (arg_10h == 2) {\n        iVar3 = *arg_8h - *arg_ch;\n        if (iVar3 == 0) {\n            uVar2 = *(arg_8h + 1);\n            uVar1 = *(arg_ch + 1);\n            goto code_r0x1002f4a6;\n        }\ncode_r0x1002f492:\n        return (0 < iVar3) * 2 + -1;\n    }\n    if (arg_10h == 3) {\n        iVar3 = *arg_8h - *arg_ch;\n        if ((iVar3 == 0) && (iVar3 = *(arg_8h + 1) - *(arg_ch + 1),  iVar3 == 0)) {\n            uVar2 = *(arg_8h + 2);\n            uVar1 = *(arg_ch + 2);\n            goto code_r0x1002f4a6;\n        }\n        goto code_r0x1002f492;\n    }\n    if (arg_10h == 4) {\n        iVar3 = *arg_8h - *arg_ch;\n        if (((iVar3 == 0) && (iVar3 = *(arg_8h + 1) - *(arg_ch + 1),  iVar3 == 0)) &&\n           (iVar3 = *(arg_8h + 2) - *(arg_ch + 2),  iVar3 == 0)) {\n            uVar2 = *(arg_8h + 3);\n            uVar1 = *(arg_ch + 3);\n            goto code_r0x1002f4a6;\n        }\n        goto code_r0x1002f492;\n    }\n    if (0x1f < arg_10h) {\n        do {\n            if (*arg_8h == *arg_ch) {\n                iVar3 = 0;\n            }\n            else {\n                iVar3 = (*arg_8h & 0xff) - *arg_ch;\n                if (((iVar3 == 0) && (iVar3 = *(arg_8h + 1) - *(arg_ch + 1),  iVar3 == 0)) &&\n                   (iVar3 = *(arg_8h + 2) - *(arg_ch + 2),  iVar3 == 0)) {\n                    iVar3 = *(arg_8h + 3) - *(arg_ch + 3);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                else {\n                    iVar3 = (0 < iVar3) * 2 + -1;\n                }\n            }\n            if (iVar3 != 0) {\n                return iVar3;\n            }\n            if (arg_8h[1] == arg_ch[1]) {\n                iVar3 = 0;\n            }\n            else {\n                iVar3 = (arg_8h[1] & 0xff) - *(arg_ch + 1);\n                if (((iVar3 == 0) && (iVar3 = *(arg_8h + 5) - *(arg_ch + 5),  iVar3 == 0)) &&\n                   (iVar3 = *(arg_8h + 6) - *(arg_ch + 6),  iVar3 == 0)) {\n                    iVar3 = *(arg_8h + 7) - *(arg_ch + 7);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                else {\n                    iVar3 = (0 < iVar3) * 2 + -1;\n                }\n            }\n            if (iVar3 != 0) {\n                return iVar3;\n            }\n            if (arg_8h[2] == arg_ch[2]) {\n                iVar3 = 0;\n            }\n            else {\n                iVar3 = (arg_8h[2] & 0xff) - *(arg_ch + 2);\n                if (((iVar3 == 0) && (iVar3 = *(arg_8h + 9) - *(arg_ch + 9),  iVar3 == 0)) &&\n                   (iVar3 = *(arg_8h + 10) - *(arg_ch + 10),  iVar3 == 0)) {\n                    iVar3 = *(arg_8h + 0xb) - *(arg_ch + 0xb);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                else {\n                    iVar3 = (0 < iVar3) * 2 + -1;\n                }\n            }\n            if (iVar3 != 0) {\n                return iVar3;\n            }\n            if (arg_8h[3] == arg_ch[3]) {\n                iVar3 = 0;\n            }\n            else {\n                iVar3 = (arg_8h[3] & 0xff) - *(arg_ch + 3);\n                if (((iVar3 == 0) && (iVar3 = *(arg_8h + 0xd) - *(arg_ch + 0xd),  iVar3 == 0)) &&\n                   (iVar3 = *(arg_8h + 0xe) - *(arg_ch + 0xe),  iVar3 == 0)) {\n                    iVar3 = *(arg_8h + 0xf) - *(arg_ch + 0xf);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                else {\n                    iVar3 = (0 < iVar3) * 2 + -1;\n                }\n            }\n            if (iVar3 != 0) {\n                return iVar3;\n            }\n            if (arg_8h[4] == arg_ch[4]) {\n                iVar3 = 0;\n            }\n            else {\n                iVar3 = *(arg_8h + 4) - *(arg_ch + 4);\n                if (((iVar3 == 0) && (iVar3 = *(arg_8h + 0x11) - *(arg_ch + 0x11),  iVar3 == 0)) &&\n                   (iVar3 = *(arg_8h + 0x12) - *(arg_ch + 0x12),  iVar3 == 0)) {\n                    iVar3 = *(arg_8h + 0x13) - *(arg_ch + 0x13);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                else {\n                    iVar3 = (0 < iVar3) * 2 + -1;\n                }\n            }\n            if (iVar3 != 0) {\n                return iVar3;\n            }\n            if (arg_8h[5] == arg_ch[5]) {\n                iVar3 = 0;\n            }\n            else {\n                iVar3 = (arg_8h[5] & 0xff) - *(arg_ch + 5);\n                if (((iVar3 == 0) && (iVar3 = *(arg_8h + 0x15) - *(arg_ch + 0x15),  iVar3 == 0)) &&\n                   (iVar3 = *(arg_8h + 0x16) - *(arg_ch + 0x16),  iVar3 == 0)) {\n                    iVar3 = *(arg_8h + 0x17) - *(arg_ch + 0x17);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                else {\n                    iVar3 = (0 < iVar3) * 2 + -1;\n                }\n            }\n            if (iVar3 != 0) {\n                return iVar3;\n            }\n            if (arg_8h[6] == arg_ch[6]) {\n                iVar3 = 0;\n            }\n            else {\n                iVar3 = (arg_8h[6] & 0xff) - *(arg_ch + 6);\n                if (((iVar3 == 0) && (iVar3 = *(arg_8h + 0x19) - *(arg_ch + 0x19),  iVar3 == 0)) &&\n                   (iVar3 = *(arg_8h + 0x1a) - *(arg_ch + 0x1a),  iVar3 == 0)) {\n                    iVar3 = *(arg_8h + 0x1b) - *(arg_ch + 0x1b);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                else {\n                    iVar3 = (0 < iVar3) * 2 + -1;\n                }\n            }\n            if (iVar3 != 0) {\n                return iVar3;\n            }\n            if (arg_8h[7] == arg_ch[7]) {\n                iVar3 = 0;\n            }\n            else {\n                iVar3 = (arg_8h[7] & 0xff) - *(arg_ch + 7);\n                if (((iVar3 == 0) && (iVar3 = *(arg_8h + 0x1d) - *(arg_ch + 0x1d),  iVar3 == 0)) &&\n                   (iVar3 = *(arg_8h + 0x1e) - *(arg_ch + 0x1e),  iVar3 == 0)) {\n                    iVar3 = *(arg_8h + 0x1f) - *(arg_ch + 0x1f);\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                else {\n                    iVar3 = (0 < iVar3) * 2 + -1;\n                }\n            }\n            if (iVar3 != 0) {\n                return iVar3;\n            }\n            arg_10h = arg_10h - 0x20;\n            arg_8h = arg_8h + 8;\n            arg_ch = arg_ch + 8;\n        } while (0x1f < arg_10h);\n    }\n    // switch table (32 cases) at 0x1002f517\n    switch(arg_10h) {\n    default:\n        goto code_r0x1002ec05;\n    case 1:\n        goto code_r0x1002eeb3;\n    case 2:\n        goto code_r0x1002f17e;\n    case 3:\n        goto code_r0x1002f43a;\n    case 4:\n        goto code_r0x1002eba8;\n    case 5:\n        goto code_r0x1002ee52;\n    case 6:\n        goto code_r0x1002f11d;\n    case 7:\n        goto code_r0x1002f3d9;\n    case 8:\n        goto code_r0x1002eb4b;\n    case 9:\n        goto code_r0x1002edf0;\n    case 10:\n        goto code_r0x1002f0bb;\n    case 0xb:\n        goto code_r0x1002f378;\n    case 0xc:\n        goto code_r0x1002eae9;\n    case 0xd:\n        goto code_r0x1002ed8f;\n    case 0xe:\n        goto code_r0x1002f05a;\n    case 0xf:\n        goto code_r0x1002f316;\n    case 0x10:\n        goto code_r0x1002ea88;\n    case 0x11:\n        goto code_r0x1002ed2e;\n    case 0x12:\n        goto code_r0x1002eff9;\n    case 0x13:\n        goto code_r0x1002f2b5;\n    case 0x14:\n        goto code_r0x1002ea27;\n    case 0x15:\n        goto code_r0x1002eccd;\n    case 0x16:\n        goto code_r0x1002ef98;\n    case 0x17:\n        goto code_r0x1002f254;\n    case 0x1a:\n        goto code_r0x1002ef37;\n    case 0x1b:\n        goto code_r0x1002f1f3;\n    case 0x1c:\n        uVar1 = *(arg_8h + (arg_10h - 0x1c));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x1c))) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = (uVar1 & 0xff) - *(arg_ch + (arg_10h - 0x1c));\n            if (((iVar3 == 0) && (iVar3 = *(arg_8h + (arg_10h - 0x1b)) - *(arg_ch + (arg_10h - 0x1b)),  iVar3 == 0)) &&\n               (iVar3 = *(arg_8h + (arg_10h - 0x1a)) - *(arg_ch + (arg_10h - 0x1a)),  iVar3 == 0)) {\n                iVar3 = *(arg_8h + (arg_10h - 0x19)) - *(arg_ch + (arg_10h - 0x19));\n                if (iVar3 != 0) {\n                    iVar3 = (0 < iVar3) * 2 + -1;\n                }\n            }\n            else {\n                iVar3 = (0 < iVar3) * 2 + -1;\n            }\n        }\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    case 0x18:\n        uVar1 = *(arg_8h + (arg_10h - 0x18));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x18))) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = (uVar1 & 0xff) - *(arg_ch + (arg_10h - 0x18));\n            if (((iVar3 == 0) && (iVar3 = *(arg_8h + (arg_10h - 0x17)) - *(arg_ch + (arg_10h - 0x17)),  iVar3 == 0)) &&\n               (iVar3 = *(arg_8h + (arg_10h - 0x16)) - *(arg_ch + (arg_10h - 0x16)),  iVar3 == 0)) {\n                iVar3 = *(arg_8h + (arg_10h - 0x15)) - *(arg_ch + (arg_10h - 0x15));\n                if (iVar3 != 0) {\n                    iVar3 = (0 < iVar3) * 2 + -1;\n                }\n            }\n            else {\n                iVar3 = (0 < iVar3) * 2 + -1;\n            }\n        }\n        if (iVar3 == 0) {\ncode_r0x1002ea27:\n            uVar1 = *(arg_8h + (arg_10h - 0x14));\n            if (uVar1 == *(arg_ch + (arg_10h - 0x14))) {\n                iVar3 = 0;\n            }\n            else {\n                iVar3 = (uVar1 & 0xff) - *(arg_ch + (arg_10h - 0x14));\n                if (((iVar3 == 0) && (iVar3 = *(arg_8h + (arg_10h - 0x13)) - *(arg_ch + (arg_10h - 0x13)),  iVar3 == 0))\n                   && (iVar3 = *(arg_8h + (arg_10h - 0x12)) - *(arg_ch + (arg_10h - 0x12)),  iVar3 == 0)) {\n                    iVar3 = *(arg_8h + (arg_10h - 0x11)) - *(arg_ch + (arg_10h - 0x11));\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                else {\n                    iVar3 = (0 < iVar3) * 2 + -1;\n                }\n            }\n            if (iVar3 == 0) {\ncode_r0x1002ea88:\n                uVar1 = *(arg_8h + (arg_10h - 0x10));\n                if (uVar1 == *(arg_ch + (arg_10h - 0x10))) {\n                    iVar3 = 0;\n                }\n                else {\n                    iVar3 = (uVar1 & 0xff) - *(arg_ch + (arg_10h - 0x10));\n                    if (((iVar3 == 0) &&\n                        (iVar3 = *(arg_8h + (arg_10h - 0xf)) - *(arg_ch + (arg_10h - 0xf)),  iVar3 == 0)) &&\n                       (iVar3 = *(arg_8h + (arg_10h - 0xe)) - *(arg_ch + (arg_10h - 0xe)),  iVar3 == 0)) {\n                        iVar3 = *(arg_8h + (arg_10h - 0xd)) - *(arg_ch + (arg_10h - 0xd));\n                        if (iVar3 != 0) {\n                            iVar3 = (0 < iVar3) * 2 + -1;\n                        }\n                    }\n                    else {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 == 0) {\ncode_r0x1002eae9:\n                    if (*(arg_8h + (arg_10h - 0xc)) == *(arg_ch + (arg_10h - 0xc))) {\n                        iVar3 = 0;\n                    }\n                    else {\n                        iVar3 = *(arg_8h + (arg_10h - 0xc)) - *(arg_ch + (arg_10h - 0xc));\n                        if (((iVar3 == 0) &&\n                            (iVar3 = *(arg_8h + (arg_10h - 0xb)) - *(arg_ch + (arg_10h - 0xb)),  iVar3 == 0)) &&\n                           (iVar3 = *(arg_8h + (arg_10h - 10)) - *(arg_ch + (arg_10h - 10)),  iVar3 == 0)) {\n                            iVar3 = *(arg_8h + (arg_10h - 9)) - *(arg_ch + (arg_10h - 9));\n                            if (iVar3 != 0) {\n                                iVar3 = (0 < iVar3) * 2 + -1;\n                            }\n                        }\n                        else {\n                            iVar3 = (0 < iVar3) * 2 + -1;\n                        }\n                    }\n                    if (iVar3 == 0) {\ncode_r0x1002eb4b:\n                        uVar1 = *(arg_8h + (arg_10h - 8));\n                        if (uVar1 == *(arg_ch + (arg_10h - 8))) {\n                            iVar3 = 0;\n                        }\n                        else {\n                            iVar3 = (uVar1 & 0xff) - *(arg_ch + (arg_10h - 8));\n                            if (((iVar3 == 0) &&\n                                (iVar3 = *(arg_8h + (arg_10h - 7)) - *(arg_ch + (arg_10h - 7)),  iVar3 == 0)) &&\n                               (iVar3 = *(arg_8h + (arg_10h - 6)) - *(arg_ch + (arg_10h - 6)),  iVar3 == 0)) {\n                                iVar3 = *(arg_8h + (arg_10h - 5)) - *(arg_ch + (arg_10h - 5));\n                                if (iVar3 != 0) {\n                                    iVar3 = (0 < iVar3) * 2 + -1;\n                                }\n                            }\n                            else {\n                                iVar3 = (0 < iVar3) * 2 + -1;\n                            }\n                        }\n                        if (iVar3 == 0) {\ncode_r0x1002eba8:\n                            uVar1 = *(arg_8h + (arg_10h - 4));\n                            if (uVar1 == *(arg_ch + (arg_10h - 4))) {\n                                iVar3 = 0;\n                            }\n                            else {\n                                iVar3 = (uVar1 & 0xff) - *(arg_ch + (arg_10h - 4));\n                                if (((iVar3 == 0) &&\n                                    (iVar3 = *(arg_8h + (arg_10h - 3)) - *(arg_ch + (arg_10h - 3)),  iVar3 == 0)) &&\n                                   (iVar3 = *(arg_8h + (arg_10h - 2)) - *(arg_ch + (arg_10h - 2)),  iVar3 == 0)) {\n                                    iVar3 = *(arg_8h + (arg_10h - 1)) - *(arg_ch + (arg_10h - 1));\n                                    if (iVar3 != 0) {\n                                        iVar3 = (0 < iVar3) * 2 + -1;\n                                    }\n                                }\n                                else {\n                                    iVar3 = (0 < iVar3) * 2 + -1;\n                                }\n                            }\n                            if (iVar3 == 0) {\ncode_r0x1002ec05:\n                                iVar3 = 0;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        break;\n    case 0x1d:\n        uVar1 = *(arg_8h + (arg_10h - 0x1d));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x1d))) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = (uVar1 & 0xff) - *(arg_ch + (arg_10h - 0x1d));\n            if (((iVar3 == 0) && (iVar3 = *(arg_8h + (arg_10h - 0x1c)) - *(arg_ch + (arg_10h - 0x1c)),  iVar3 == 0)) &&\n               (iVar3 = *(arg_8h + (arg_10h - 0x1b)) - *(arg_ch + (arg_10h - 0x1b)),  iVar3 == 0)) {\n                iVar3 = *(arg_8h + (arg_10h - 0x1a)) - *(arg_ch + (arg_10h - 0x1a));\n                if (iVar3 != 0) {\n                    iVar3 = (0 < iVar3) * 2 + -1;\n                }\n            }\n            else {\n                iVar3 = (0 < iVar3) * 2 + -1;\n            }\n        }\n        if (iVar3 != 0) {\n            return iVar3;\n        }\n    case 0x19:\n        uVar1 = *(arg_8h + (arg_10h - 0x19));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x19))) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = (uVar1 & 0xff) - *(arg_ch + (arg_10h - 0x19));\n            if (((iVar3 == 0) && (iVar3 = *(arg_8h + (arg_10h - 0x18)) - *(arg_ch + (arg_10h - 0x18)),  iVar3 == 0)) &&\n               (iVar3 = *(arg_8h + (arg_10h - 0x17)) - *(arg_ch + (arg_10h - 0x17)),  iVar3 == 0)) {\n                iVar3 = *(arg_8h + (arg_10h - 0x16)) - *(arg_ch + (arg_10h - 0x16));\n                if (iVar3 != 0) {\n                    iVar3 = (0 < iVar3) * 2 + -1;\n                }\n            }\n            else {\n                iVar3 = (0 < iVar3) * 2 + -1;\n            }\n        }\n        if (iVar3 == 0) {\ncode_r0x1002eccd:\n            uVar1 = *(arg_8h + (arg_10h - 0x15));\n            if (uVar1 == *(arg_ch + (arg_10h - 0x15))) {\n                iVar3 = 0;\n            }\n            else {\n                iVar3 = (uVar1 & 0xff) - *(arg_ch + (arg_10h - 0x15));\n                if (((iVar3 == 0) && (iVar3 = *(arg_8h + (arg_10h - 0x14)) - *(arg_ch + (arg_10h - 0x14)),  iVar3 == 0))\n                   && (iVar3 = *(arg_8h + (arg_10h - 0x13)) - *(arg_ch + (arg_10h - 0x13)),  iVar3 == 0)) {\n                    iVar3 = *(arg_8h + (arg_10h - 0x12)) - *(arg_ch + (arg_10h - 0x12));\n                    if (iVar3 != 0) {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                else {\n                    iVar3 = (0 < iVar3) * 2 + -1;\n                }\n            }\n            if (iVar3 == 0) {\ncode_r0x1002ed2e:\n                uVar1 = *(arg_8h + (arg_10h - 0x11));\n                if (uVar1 == *(arg_ch + (arg_10h - 0x11))) {\n                    iVar3 = 0;\n                }\n                else {\n                    iVar3 = (uVar1 & 0xff) - *(arg_ch + (arg_10h - 0x11));\n                    if (((iVar3 == 0) &&\n                        (iVar3 = *(arg_8h + (arg_10h - 0x10)) - *(arg_ch + (arg_10h - 0x10)),  iVar3 == 0)) &&\n                       (iVar3 = *(arg_8h + (arg_10h - 0xf)) - *(arg_ch + (arg_10h - 0xf)),  iVar3 == 0)) {\n                        iVar3 = *(arg_8h + (arg_10h - 0xe)) - *(arg_ch + (arg_10h - 0xe));\n                        if (iVar3 != 0) {\n                            iVar3 = (0 < iVar3) * 2 + -1;\n                        }\n                    }\n                    else {\n                        iVar3 = (0 < iVar3) * 2 + -1;\n                    }\n                }\n                if (iVar3 == 0) {\ncode_r0x1002ed8f:\n                    uVar1 = *(arg_8h + (arg_10h - 0xd));\n                    if (uVar1 == *(arg_ch + (arg_10h - 0xd))) {\n                        iVar3 = 0;\n                    }\n                    else {\n                        iVar3 = (uVar1 & 0xff) - *(arg_ch + (arg_10h - 0xd));\n                        if (((iVar3 == 0) &&\n                            (iVar3 = *(arg_8h + (arg_10h - 0xc)) - *(arg_ch + (arg_10h - 0xc)),  iVar3 == 0)) &&\n                           (iVar3 = *(arg_8h + (arg_10h - 0xb)) - *(arg_ch + (arg_10h - 0xb)),  iVar3 == 0)) {\n                            iVar3 = *(arg_8h + (arg_10h - 10)) - *(arg_ch + (arg_10h - 10));\n                            if (iVar3 != 0) {\n                                iVar3 = (0 < iVar3) * 2 + -1;\n                            }\n                        }\n                        else {\n                            iVar3 = (0 < iVar3) * 2 + -1;\n                        }\n                    }\n                    if (iVar3 == 0) {\ncode_r0x1002edf0:\n                        if (*(arg_8h + (arg_10h - 9)) == *(arg_ch + (arg_10h - 9))) {\n                            iVar3 = 0;\n                        }\n                        else {\n                            iVar3 = *(arg_8h + (arg_10h - 9)) - *(arg_ch + (arg_10h - 9));\n                            if (((iVar3 == 0) &&\n                                (iVar3 = *(arg_8h + (arg_10h - 8)) - *(arg_ch + (arg_10h - 8)),  iVar3 == 0)) &&\n                               (iVar3 = *(arg_8h + (arg_10h - 7)) - *(arg_ch + (arg_10h - 7)),  iVar3 == 0)) {\n                                iVar3 = *(arg_8h + (arg_10h - 6)) - *(arg_ch + (arg_10h - 6));\n                                if (iVar3 != 0) {\n                                    iVar3 = (0 < iVar3) * 2 + -1;\n                                }\n                            }\n                            else {\n                                iVar3 = (0 < iVar3) * 2 + -1;\n                            }\n                        }\n                        if (iVar3 == 0) {\ncode_r0x1002ee52:\n                            uVar1 = *(arg_8h + (arg_10h - 5));\n                            if (uVar1 == *(arg_ch + (arg_10h - 5))) {\n                                iVar3 = 0;\n                            }\n                            else {\n                                iVar3 = (uVar1 & 0xff) - *(arg_ch + (arg_10h - 5));\n                                if (((iVar3 == 0) &&\n                                    (iVar3 = *(arg_8h + (arg_10h - 4)) - *(arg_ch + (arg_10h - 4)),  iVar3 == 0)) &&\n                                   (iVar3 = *(arg_8h + (arg_10h - 3)) - *(arg_ch + (arg_10h - 3)),  iVar3 == 0)) {\n                                    iVar3 = *(arg_8h + (arg_10h - 2)) - *(arg_ch + (arg_10h - 2));\n                                    if (iVar3 != 0) {\n                                        iVar3 = (0 < iVar3) * 2 + -1;\n                                    }\n                                }\n                                else {\n                                    iVar3 = (0 < iVar3) * 2 + -1;\n                                }\n                            }\n                            if (iVar3 == 0) {\ncode_r0x1002eeb3:\n                                iVar3 = *(arg_8h + (arg_10h - 1)) - *(arg_ch + (arg_10h - 1));\n                                if (iVar3 != 0) {\n                                    iVar3 = (0 < iVar3) * 2 + -1;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        break;\n    case 0x1e:\n        uVar1 = *(arg_8h + (arg_10h - 0x1e));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x1e))) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = (uVar1 & 0xff) - *(arg_ch + (arg_10h - 0x1e));\n            if (((iVar3 == 0) && (iVar3 = *(arg_8h + (arg_10h - 0x1d)) - *(arg_ch + (arg_10h - 0x1d)),  iVar3 == 0)) &&\n               (iVar3 = *(arg_8h + (arg_10h - 0x1c)) - *(arg_ch + (arg_10h - 0x1c)),  iVar3 == 0)) {\n                iVar3 = *(arg_8h + (arg_10h - 0x1b)) - *(arg_ch + (arg_10h - 0x1b));\n                if (iVar3 != 0) {\n                    iVar3 = (0 < iVar3) * 2 + -1;\n                }\n            }\n            else {\n                iVar3 = (0 < iVar3) * 2 + -1;\n            }\n        }\n        if (iVar3 != 0) {\n            return iVar3;\n        }\ncode_r0x1002ef37:\n        uVar1 = *(arg_8h + (arg_10h - 0x1a));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x1a))) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = (uVar1 & 0xff) - *(arg_ch + (arg_10h - 0x1a));\n            if (((iVar3 == 0) && (iVar3 = *(arg_8h + (arg_10h - 0x19)) - *(arg_ch + (arg_10h - 0x19)),  iVar3 == 0)) &&\n               (iVar3 = *(arg_8h + (arg_10h - 0x18)) - *(arg_ch + (arg_10h - 0x18)),  iVar3 == 0)) {\n                iVar3 = *(arg_8h + (arg_10h - 0x17)) - *(arg_ch + (arg_10h - 0x17));\n                if (iVar3 != 0) {\n                    iVar3 = (0 < iVar3) * 2 + -1;\n                }\n            }\n            else {\n                iVar3 = (0 < iVar3) * 2 + -1;\n            }\n        }\n        if (iVar3 != 0) {\n            return iVar3;\n        }\ncode_r0x1002ef98:\n        uVar1 = *(arg_8h + (arg_10h - 0x16));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x16))) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = (uVar1 & 0xff) - *(arg_ch + (arg_10h - 0x16));\n            if (((iVar3 == 0) && (iVar3 = *(arg_8h + (arg_10h - 0x15)) - *(arg_ch + (arg_10h - 0x15)),  iVar3 == 0)) &&\n               (iVar3 = *(arg_8h + (arg_10h - 0x14)) - *(arg_ch + (arg_10h - 0x14)),  iVar3 == 0)) {\n                iVar3 = *(arg_8h + (arg_10h - 0x13)) - *(arg_ch + (arg_10h - 0x13));\n                if (iVar3 != 0) {\n                    iVar3 = (0 < iVar3) * 2 + -1;\n                }\n            }\n            else {\n                iVar3 = (0 < iVar3) * 2 + -1;\n            }\n        }\n        if (iVar3 != 0) {\n            return iVar3;\n        }\ncode_r0x1002eff9:\n        uVar1 = *(arg_8h + (arg_10h - 0x12));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x12))) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = (uVar1 & 0xff) - *(arg_ch + (arg_10h - 0x12));\n            if (((iVar3 == 0) && (iVar3 = *(arg_8h + (arg_10h - 0x11)) - *(arg_ch + (arg_10h - 0x11)),  iVar3 == 0)) &&\n               (iVar3 = *(arg_8h + (arg_10h - 0x10)) - *(arg_ch + (arg_10h - 0x10)),  iVar3 == 0)) {\n                iVar3 = *(arg_8h + (arg_10h - 0xf)) - *(arg_ch + (arg_10h - 0xf));\n                if (iVar3 != 0) {\n                    iVar3 = (0 < iVar3) * 2 + -1;\n                }\n            }\n            else {\n                iVar3 = (0 < iVar3) * 2 + -1;\n            }\n        }\n        if (iVar3 != 0) {\n            return iVar3;\n        }\ncode_r0x1002f05a:\n        uVar1 = *(arg_8h + (arg_10h - 0xe));\n        if (uVar1 == *(arg_ch + (arg_10h - 0xe))) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = (uVar1 & 0xff) - *(arg_ch + (arg_10h - 0xe));\n            if (((iVar3 == 0) && (iVar3 = *(arg_8h + (arg_10h - 0xd)) - *(arg_ch + (arg_10h - 0xd)),  iVar3 == 0)) &&\n               (iVar3 = *(arg_8h + (arg_10h - 0xc)) - *(arg_ch + (arg_10h - 0xc)),  iVar3 == 0)) {\n                iVar3 = *(arg_8h + (arg_10h - 0xb)) - *(arg_ch + (arg_10h - 0xb));\n                if (iVar3 != 0) {\n                    iVar3 = (0 < iVar3) * 2 + -1;\n                }\n            }\n            else {\n                iVar3 = (0 < iVar3) * 2 + -1;\n            }\n        }\n        if (iVar3 != 0) {\n            return iVar3;\n        }\ncode_r0x1002f0bb:\n        if (*(arg_8h + (arg_10h - 10)) == *(arg_ch + (arg_10h - 10))) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = *(arg_8h + (arg_10h - 10)) - *(arg_ch + (arg_10h - 10));\n            if (((iVar3 == 0) && (iVar3 = *(arg_8h + (arg_10h - 9)) - *(arg_ch + (arg_10h - 9)),  iVar3 == 0)) &&\n               (iVar3 = *(arg_8h + (arg_10h - 8)) - *(arg_ch + (arg_10h - 8)),  iVar3 == 0)) {\n                iVar3 = *(arg_8h + (arg_10h - 7)) - *(arg_ch + (arg_10h - 7));\n                if (iVar3 != 0) {\n                    iVar3 = (0 < iVar3) * 2 + -1;\n                }\n            }\n            else {\n                iVar3 = (0 < iVar3) * 2 + -1;\n            }\n        }\n        if (iVar3 != 0) {\n            return iVar3;\n        }\ncode_r0x1002f11d:\n        uVar1 = *(arg_8h + (arg_10h - 6));\n        if (uVar1 == *(arg_ch + (arg_10h - 6))) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = (uVar1 & 0xff) - *(arg_ch + (arg_10h - 6));\n            if (((iVar3 == 0) && (iVar3 = *(arg_8h + (arg_10h - 5)) - *(arg_ch + (arg_10h - 5)),  iVar3 == 0)) &&\n               (iVar3 = *(arg_8h + (arg_10h - 4)) - *(arg_ch + (arg_10h - 4)),  iVar3 == 0)) {\n                iVar3 = *(arg_8h + (arg_10h - 3)) - *(arg_ch + (arg_10h - 3));\n                if (iVar3 != 0) {\n                    iVar3 = (0 < iVar3) * 2 + -1;\n                }\n            }\n            else {\n                iVar3 = (0 < iVar3) * 2 + -1;\n            }\n        }\n        if (iVar3 != 0) {\n            return iVar3;\n        }\ncode_r0x1002f17e:\n        if (*(arg_8h + (arg_10h - 2)) != *(arg_ch + (arg_10h - 2))) {\ncode_r0x1002f446:\n            iVar3 = *(arg_8h + (arg_10h - 2)) - *(arg_ch + (arg_10h - 2));\n            if (iVar3 != 0) {\ncode_r0x1002f456:\n                return (0 < iVar3) * 2 + -1;\n            }\n            goto code_r0x1002eeb3;\n        }\n        goto code_r0x1002ec05;\n    case 0x1f:\n        if (*(arg_8h + (arg_10h - 0x1f)) == *(arg_ch + (arg_10h - 0x1f))) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = *(arg_8h + (arg_10h - 0x1f)) - *(arg_ch + (arg_10h - 0x1f));\n            if (((iVar3 == 0) && (iVar3 = *(arg_8h + (arg_10h - 0x1e)) - *(arg_ch + (arg_10h - 0x1e)),  iVar3 == 0)) &&\n               (iVar3 = *(arg_8h + (arg_10h - 0x1d)) - *(arg_ch + (arg_10h - 0x1d)),  iVar3 == 0)) {\n                iVar3 = *(arg_8h + (arg_10h - 0x1c)) - *(arg_ch + (arg_10h - 0x1c));\n                if (iVar3 != 0) {\n                    iVar3 = (0 < iVar3) * 2 + -1;\n                }\n            }\n            else {\n                iVar3 = (0 < iVar3) * 2 + -1;\n            }\n        }\n        if (iVar3 != 0) {\n            return iVar3;\n        }\ncode_r0x1002f1f3:\n        uVar1 = *(arg_8h + (arg_10h - 0x1b));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x1b))) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = (uVar1 & 0xff) - *(arg_ch + (arg_10h - 0x1b));\n            if (((iVar3 == 0) && (iVar3 = *(arg_8h + (arg_10h - 0x1a)) - *(arg_ch + (arg_10h - 0x1a)),  iVar3 == 0)) &&\n               (iVar3 = *(arg_8h + (arg_10h - 0x19)) - *(arg_ch + (arg_10h - 0x19)),  iVar3 == 0)) {\n                iVar3 = *(arg_8h + (arg_10h - 0x18)) - *(arg_ch + (arg_10h - 0x18));\n                if (iVar3 != 0) {\n                    iVar3 = (0 < iVar3) * 2 + -1;\n                }\n            }\n            else {\n                iVar3 = (0 < iVar3) * 2 + -1;\n            }\n        }\n        if (iVar3 != 0) {\n            return iVar3;\n        }\ncode_r0x1002f254:\n        uVar1 = *(arg_8h + (arg_10h - 0x17));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x17))) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = (uVar1 & 0xff) - *(arg_ch + (arg_10h - 0x17));\n            if (((iVar3 == 0) && (iVar3 = *(arg_8h + (arg_10h - 0x16)) - *(arg_ch + (arg_10h - 0x16)),  iVar3 == 0)) &&\n               (iVar3 = *(arg_8h + (arg_10h - 0x15)) - *(arg_ch + (arg_10h - 0x15)),  iVar3 == 0)) {\n                iVar3 = *(arg_8h + (arg_10h - 0x14)) - *(arg_ch + (arg_10h - 0x14));\n                if (iVar3 != 0) {\n                    iVar3 = (0 < iVar3) * 2 + -1;\n                }\n            }\n            else {\n                iVar3 = (0 < iVar3) * 2 + -1;\n            }\n        }\n        if (iVar3 != 0) {\n            return iVar3;\n        }\ncode_r0x1002f2b5:\n        uVar1 = *(arg_8h + (arg_10h - 0x13));\n        if (uVar1 == *(arg_ch + (arg_10h - 0x13))) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = (uVar1 & 0xff) - *(arg_ch + (arg_10h - 0x13));\n            if (((iVar3 == 0) && (iVar3 = *(arg_8h + (arg_10h - 0x12)) - *(arg_ch + (arg_10h - 0x12)),  iVar3 == 0)) &&\n               (iVar3 = *(arg_8h + (arg_10h - 0x11)) - *(arg_ch + (arg_10h - 0x11)),  iVar3 == 0)) {\n                iVar3 = *(arg_8h + (arg_10h - 0x10)) - *(arg_ch + (arg_10h - 0x10));\n                if (iVar3 != 0) {\n                    iVar3 = (0 < iVar3) * 2 + -1;\n                }\n            }\n            else {\n                iVar3 = (0 < iVar3) * 2 + -1;\n            }\n        }\n        if (iVar3 != 0) {\n            return iVar3;\n        }\ncode_r0x1002f316:\n        if (*(arg_8h + (arg_10h - 0xf)) == *(arg_ch + (arg_10h - 0xf))) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = *(arg_8h + (arg_10h - 0xf)) - *(arg_ch + (arg_10h - 0xf));\n            if (((iVar3 == 0) && (iVar3 = *(arg_8h + (arg_10h - 0xe)) - *(arg_ch + (arg_10h - 0xe)),  iVar3 == 0)) &&\n               (iVar3 = *(arg_8h + (arg_10h - 0xd)) - *(arg_ch + (arg_10h - 0xd)),  iVar3 == 0)) {\n                iVar3 = *(arg_8h + (arg_10h - 0xc)) - *(arg_ch + (arg_10h - 0xc));\n                if (iVar3 != 0) {\n                    iVar3 = (0 < iVar3) * 2 + -1;\n                }\n            }\n            else {\n                iVar3 = (0 < iVar3) * 2 + -1;\n            }\n        }\n        if (iVar3 != 0) {\n            return iVar3;\n        }\ncode_r0x1002f378:\n        uVar1 = *(arg_8h + (arg_10h - 0xb));\n        if (uVar1 == *(arg_ch + (arg_10h - 0xb))) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = (uVar1 & 0xff) - *(arg_ch + (arg_10h - 0xb));\n            if (((iVar3 == 0) && (iVar3 = *(arg_8h + (arg_10h - 10)) - *(arg_ch + (arg_10h - 10)),  iVar3 == 0)) &&\n               (iVar3 = *(arg_8h + (arg_10h - 9)) - *(arg_ch + (arg_10h - 9)),  iVar3 == 0)) {\n                iVar3 = *(arg_8h + (arg_10h - 8)) - *(arg_ch + (arg_10h - 8));\n                if (iVar3 != 0) {\n                    iVar3 = (0 < iVar3) * 2 + -1;\n                }\n            }\n            else {\n                iVar3 = (0 < iVar3) * 2 + -1;\n            }\n        }\n        if (iVar3 != 0) {\n            return iVar3;\n        }\ncode_r0x1002f3d9:\n        uVar1 = *(arg_8h + (arg_10h - 7));\n        if (uVar1 == *(arg_ch + (arg_10h - 7))) {\n            iVar3 = 0;\n        }\n        else {\n            iVar3 = (uVar1 & 0xff) - *(arg_ch + (arg_10h - 7));\n            if (((iVar3 == 0) && (iVar3 = *(arg_8h + (arg_10h - 6)) - *(arg_ch + (arg_10h - 6)),  iVar3 == 0)) &&\n               (iVar3 = *(arg_8h + (arg_10h - 5)) - *(arg_ch + (arg_10h - 5)),  iVar3 == 0)) {\n                iVar3 = *(arg_8h + (arg_10h - 4)) - *(arg_ch + (arg_10h - 4));\n                if (iVar3 != 0) {\n                    iVar3 = (0 < iVar3) * 2 + -1;\n                }\n            }\n            else {\n                iVar3 = (0 < iVar3) * 2 + -1;\n            }\n        }\n        if (iVar3 != 0) {\n            return iVar3;\n        }\ncode_r0x1002f43a:\n        iVar3 = *(arg_8h + (arg_10h - 3)) - *(arg_ch + (arg_10h - 3));\n        if (iVar3 != 0) goto code_r0x1002f456;\n        goto code_r0x1002f446;\n    }\n    return iVar3;\n}\n",
        "token_count": 11525
    },
    "1002f3dc": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff",
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.1002f3dc(uint param_1, int32_t param_2)\n\n{\n    uint32_t in_EAX;\n    int32_t unaff_ESI;\n    int32_t iVar1;\n    \n    if (in_EAX == *(param_2 + -7)) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = (in_EAX & 0xff) - *(param_2 + -7);\n        if (((iVar1 == 0) && (iVar1 = *(unaff_ESI + -6) - *(param_2 + -6),  iVar1 == 0)) &&\n           (iVar1 = *(unaff_ESI + -5) - *(param_2 + -5),  iVar1 == 0)) {\n            iVar1 = *(unaff_ESI + -4) - *(param_2 + -4);\n            if (iVar1 != 0) {\n                iVar1 = (0 < iVar1) * 2 + -1;\n            }\n        }\n        else {\n            iVar1 = (0 < iVar1) * 2 + -1;\n        }\n    }\n    if (iVar1 == 0) {\n        iVar1 = *(unaff_ESI + -3) - *(param_2 + -3);\n        if ((iVar1 == 0) && (iVar1 = *(unaff_ESI + -2) - *(param_2 + -2),  iVar1 == 0)) {\n            iVar1 = *(unaff_ESI + -1) - *(param_2 + -1);\n            if (iVar1 != 0) {\n                iVar1 = (0 < iVar1) * 2 + -1;\n            }\n        }\n        else {\n            iVar1 = (0 < iVar1) * 2 + -1;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 405
    },
    "1002f72c": {
        "rules": [
            "encrypt data using RC4 KSA/41e5dbd1fcbf406ebac8c999dfc1b5ff"
        ],
        "decompiled_code": "\n// WARNING (jumptable): Unable to track spacebase fully for stack\n// WARNING: Type propagation algorithm not settling\n\nvoid __fastcall fcn.1002f72c(uint32_t *param_1, uint32_t *param_2)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t *puVar3;\n    int32_t unaff_EBX;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    int32_t unaff_ESI;\n    int32_t iVar5;\n    int32_t unaff_EDI;\n    uchar in_ZF;\n    uint var_4h;\n    \ncode_r0x1002f72c:\n    if ((in_ZF) && (unaff_ESI = *(param_2 + 0x12) - *(param_1 + 0x12),  unaff_ESI == 0)) {\n        unaff_ESI = *(param_2 + 0x13) - *(param_1 + 0x13);\n        *(unaff_EBP + -4) = unaff_ESI;\n        iVar4 = unaff_EDI;\n        if (unaff_ESI == 0) goto code_r0x1002f75f;\n    }\ncode_r0x1002f73a:\n    unaff_ESI = (0 < unaff_ESI) * 2 + -1;\n    iVar4 = unaff_EDI;\ncode_r0x1002f75f:\n    puVar3 = param_2;\n    puVar2 = param_1;\n    if (unaff_ESI != 0) {\n        return;\n    }\n    iVar5 = unaff_EBX;\n    if (puVar3[5] != puVar2[5]) {\n        iVar5 = (puVar3[5] & 0xff) - *(puVar2 + 5);\n        if (((iVar5 == 0) && (iVar5 = *(puVar3 + 0x15) - *(puVar2 + 0x15),  iVar5 == 0)) &&\n           (iVar5 = *(puVar3 + 0x16) - *(puVar2 + 0x16),  iVar5 == 0)) {\n            iVar5 = *(puVar3 + 0x17) - *(puVar2 + 0x17);\n            *(unaff_EBP + -4) = iVar5;\n            if (iVar5 == 0) goto code_r0x1002f7b7;\n        }\n        iVar5 = (0 < iVar5) * 2 + -1;\n    }\ncode_r0x1002f7b7:\n    if (iVar5 != 0) {\n        return;\n    }\n    iVar5 = unaff_EBX;\n    if (puVar3[6] != puVar2[6]) {\n        iVar5 = (puVar3[6] & 0xff) - *(puVar2 + 6);\n        if (((iVar5 == 0) && (iVar5 = *(puVar3 + 0x19) - *(puVar2 + 0x19),  iVar5 == 0)) &&\n           (iVar5 = *(puVar3 + 0x1a) - *(puVar2 + 0x1a),  iVar5 == 0)) {\n            iVar5 = *(puVar3 + 0x1b) - *(puVar2 + 0x1b);\n            *(unaff_EBP + -4) = iVar5;\n            if (iVar5 == 0) goto code_r0x1002f80f;\n        }\n        iVar5 = (0 < iVar5) * 2 + -1;\n    }\ncode_r0x1002f80f:\n    if (iVar5 != 0) {\n        return;\n    }\n    iVar5 = unaff_EBX;\n    if (puVar3[7] != puVar2[7]) {\n        iVar5 = (puVar3[7] & 0xff) - *(puVar2 + 7);\n        if (((iVar5 == 0) && (iVar5 = *(puVar3 + 0x1d) - *(puVar2 + 0x1d),  iVar5 == 0)) &&\n           (iVar5 = *(puVar3 + 0x1e) - *(puVar2 + 0x1e),  iVar5 == 0)) {\n            iVar5 = *(puVar3 + 0x1f) - *(puVar2 + 0x1f);\n            *(unaff_EBP + -4) = iVar5;\n            if (iVar5 == 0) goto code_r0x1002f867;\n        }\n        iVar5 = (0 < iVar5) * 2 + -1;\n    }\ncode_r0x1002f867:\n    if (iVar5 != 0) {\n        return;\n    }\n    unaff_EDI = iVar4 + -0x20;\n    param_2 = puVar3 + 8;\n    param_1 = puVar2 + 8;\n    // switch table (32 cases) at 0x100302f7\n    switch(unaff_EDI) {\n    case 0:\n        break;\n    case 6:\n        goto code_r0x1002ffa9;\n    case 8:\n        goto code_r0x1002fa4d;\n    case 9:\n        goto code_r0x1002fcc2;\n    case 10:\n        goto code_r0x1002ff51;\n    case 0xb:\n        goto code_r0x10030209;\n    case 0xc:\n        goto code_r0x1002f9f5;\n    case 0xd:\n        goto code_r0x1002fc6a;\n    case 0xe:\n        goto code_r0x1002fef9;\n    case 0xf:\n        goto code_r0x100301b1;\n    case 0x10:\n        goto code_r0x1002f99d;\n    case 0x11:\n        goto code_r0x1002fc12;\n    case 0x12:\n        goto code_r0x1002fea1;\n    case 0x13:\n        goto code_r0x10030159;\n    case 0x14:\n        goto code_r0x1002f945;\n    case 0x15:\n        goto code_r0x1002fbba;\n    case 0x16:\n        goto code_r0x1002fe49;\n    case 0x17:\n        goto code_r0x10030101;\n    case 0x18:\n        goto code_r0x1002f8ed;\n    case 0x19:\n        goto code_r0x1002fb61;\n    case 0x1a:\n        goto code_r0x1002fdf0;\n    case 0x1b:\n        goto code_r0x100300a9;\n    case 0x1c:\n        iVar5 = unaff_EBX;\n        if (*(param_2 + iVar4 + -0x3c) != *(param_1 + iVar4 + -0x3c)) {\n            iVar5 = *(param_2 + iVar4 + -0x3c) - *(param_1 + iVar4 + -0x3c);\n            if (((iVar5 == 0) && (iVar5 = *(param_2 + iVar4 + -0x3b) - *(param_1 + iVar4 + -0x3b),  iVar5 == 0)) &&\n               (iVar5 = *(param_2 + iVar4 + -0x3a) - *(param_1 + iVar4 + -0x3a),  iVar5 == 0)) {\n                iVar5 = *(param_2 + iVar4 + -0x39) - *(param_1 + iVar4 + -0x39);\n                *(unaff_EBP + -4) = iVar5;\n                if (iVar5 == 0) goto code_r0x1002f8e5;\n            }\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\ncode_r0x1002f8e5:\n        if (iVar5 != 0) {\n            return;\n        }\ncode_r0x1002f8ed:\n        uVar1 = *(param_2 + iVar4 + -0x38);\n        iVar5 = unaff_EBX;\n        if (uVar1 != *(param_1 + iVar4 + -0x38)) {\n            iVar5 = (uVar1 & 0xff) - *(param_1 + iVar4 + -0x38);\n            if (((iVar5 == 0) && (iVar5 = *(param_2 + iVar4 + -0x37) - *(param_1 + iVar4 + -0x37),  iVar5 == 0)) &&\n               (iVar5 = *(param_2 + iVar4 + -0x36) - *(param_1 + iVar4 + -0x36),  iVar5 == 0)) {\n                iVar5 = *(param_2 + iVar4 + -0x35) - *(param_1 + iVar4 + -0x35);\n                *(unaff_EBP + -4) = iVar5;\n                if (iVar5 == 0) goto code_r0x1002f93d;\n            }\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\ncode_r0x1002f93d:\n        if (iVar5 != 0) {\n            return;\n        }\ncode_r0x1002f945:\n        uVar1 = *(param_2 + iVar4 + -0x34);\n        iVar5 = unaff_EBX;\n        if (uVar1 != *(param_1 + iVar4 + -0x34)) {\n            iVar5 = (uVar1 & 0xff) - *(param_1 + iVar4 + -0x34);\n            if (((iVar5 == 0) && (iVar5 = *(param_2 + iVar4 + -0x33) - *(param_1 + iVar4 + -0x33),  iVar5 == 0)) &&\n               (iVar5 = *(param_2 + iVar4 + -0x32) - *(param_1 + iVar4 + -0x32),  iVar5 == 0)) {\n                iVar5 = *(param_2 + iVar4 + -0x31) - *(param_1 + iVar4 + -0x31);\n                *(unaff_EBP + -4) = iVar5;\n                if (iVar5 == 0) goto code_r0x1002f995;\n            }\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\ncode_r0x1002f995:\n        if (iVar5 != 0) {\n            return;\n        }\ncode_r0x1002f99d:\n        uVar1 = *(param_2 + iVar4 + -0x30);\n        iVar5 = unaff_EBX;\n        if (uVar1 != *(param_1 + iVar4 + -0x30)) {\n            iVar5 = (uVar1 & 0xff) - *(param_1 + iVar4 + -0x30);\n            if (((iVar5 == 0) && (iVar5 = *(param_2 + iVar4 + -0x2f) - *(param_1 + iVar4 + -0x2f),  iVar5 == 0)) &&\n               (iVar5 = *(param_2 + iVar4 + -0x2e) - *(param_1 + iVar4 + -0x2e),  iVar5 == 0)) {\n                iVar5 = *(param_2 + iVar4 + -0x2d) - *(param_1 + iVar4 + -0x2d);\n                *(unaff_EBP + -4) = iVar5;\n                if (iVar5 == 0) goto code_r0x1002f9ed;\n            }\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\ncode_r0x1002f9ed:\n        if (iVar5 != 0) {\n            return;\n        }\ncode_r0x1002f9f5:\n        uVar1 = *(param_2 + iVar4 + -0x2c);\n        if (uVar1 != *(param_1 + iVar4 + -0x2c)) {\n            unaff_EBX = (uVar1 & 0xff) - *(param_1 + iVar4 + -0x2c);\n            if (((unaff_EBX == 0) &&\n                (unaff_EBX = *(param_2 + iVar4 + -0x2b) - *(param_1 + iVar4 + -0x2b),  unaff_EBX == 0)) &&\n               (unaff_EBX = *(param_2 + iVar4 + -0x2a) - *(param_1 + iVar4 + -0x2a),  unaff_EBX == 0)) {\n                unaff_EBX = *(param_2 + iVar4 + -0x29) - *(param_1 + iVar4 + -0x29);\n                *(unaff_EBP + -4) = unaff_EBX;\n                if (unaff_EBX == 0) goto code_r0x1002fa45;\n            }\n            unaff_EBX = (0 < unaff_EBX) * 2 + -1;\n        }\ncode_r0x1002fa45:\n        if (unaff_EBX == 0) {\ncode_r0x1002fa4d:\n            uVar1 = *(param_2 + iVar4 + -0x28);\n            if ((((uVar1 != *(param_1 + iVar4 + -0x28)) && ((uVar1 & 0xff) == *(param_1 + iVar4 + -0x28))) &&\n                (*(param_2 + iVar4 + -0x27) == *(param_1 + iVar4 + -0x27))) &&\n               (*(param_2 + iVar4 + -0x26) == *(param_1 + iVar4 + -0x26))) {\n                *(unaff_EBP + -4) = *(param_2 + iVar4 + -0x25) - *(param_1 + iVar4 + -0x25);\n            }\n        }\n        break;\n    case 0x1d:\n        uVar1 = *(param_2 + iVar4 + -0x3d);\n        iVar5 = unaff_EBX;\n        if (uVar1 != *(param_1 + iVar4 + -0x3d)) {\n            iVar5 = (uVar1 & 0xff) - *(param_1 + iVar4 + -0x3d);\n            if (((iVar5 == 0) && (iVar5 = *(param_2 + iVar4 + -0x3c) - *(param_1 + iVar4 + -0x3c),  iVar5 == 0)) &&\n               (iVar5 = *(param_2 + iVar4 + -0x3b) - *(param_1 + iVar4 + -0x3b),  iVar5 == 0)) {\n                iVar5 = *(param_2 + iVar4 + -0x3a) - *(param_1 + iVar4 + -0x3a);\n                *(unaff_EBP + -4) = iVar5;\n                if (iVar5 == 0) goto code_r0x1002fb59;\n            }\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\ncode_r0x1002fb59:\n        if (iVar5 != 0) {\n            return;\n        }\ncode_r0x1002fb61:\n        iVar5 = unaff_EBX;\n        if (*(param_2 + iVar4 + -0x39) != *(param_1 + iVar4 + -0x39)) {\n            iVar5 = *(param_2 + iVar4 + -0x39) - *(param_1 + iVar4 + -0x39);\n            if (((iVar5 == 0) && (iVar5 = *(param_2 + iVar4 + -0x38) - *(param_1 + iVar4 + -0x38),  iVar5 == 0)) &&\n               (iVar5 = *(param_2 + iVar4 + -0x37) - *(param_1 + iVar4 + -0x37),  iVar5 == 0)) {\n                iVar5 = *(param_2 + iVar4 + -0x36) - *(param_1 + iVar4 + -0x36);\n                *(unaff_EBP + -4) = iVar5;\n                if (iVar5 == 0) goto code_r0x1002fbb2;\n            }\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\ncode_r0x1002fbb2:\n        if (iVar5 != 0) {\n            return;\n        }\ncode_r0x1002fbba:\n        uVar1 = *(param_2 + iVar4 + -0x35);\n        iVar5 = unaff_EBX;\n        if (uVar1 != *(param_1 + iVar4 + -0x35)) {\n            iVar5 = (uVar1 & 0xff) - *(param_1 + iVar4 + -0x35);\n            if (((iVar5 == 0) && (iVar5 = *(param_2 + iVar4 + -0x34) - *(param_1 + iVar4 + -0x34),  iVar5 == 0)) &&\n               (iVar5 = *(param_2 + iVar4 + -0x33) - *(param_1 + iVar4 + -0x33),  iVar5 == 0)) {\n                iVar5 = *(param_2 + iVar4 + -0x32) - *(param_1 + iVar4 + -0x32);\n                *(unaff_EBP + -4) = iVar5;\n                if (iVar5 == 0) goto code_r0x1002fc0a;\n            }\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\ncode_r0x1002fc0a:\n        if (iVar5 != 0) {\n            return;\n        }\ncode_r0x1002fc12:\n        uVar1 = *(param_2 + iVar4 + -0x31);\n        iVar5 = unaff_EBX;\n        if (uVar1 != *(param_1 + iVar4 + -0x31)) {\n            iVar5 = (uVar1 & 0xff) - *(param_1 + iVar4 + -0x31);\n            if (((iVar5 == 0) && (iVar5 = *(param_2 + iVar4 + -0x30) - *(param_1 + iVar4 + -0x30),  iVar5 == 0)) &&\n               (iVar5 = *(param_2 + iVar4 + -0x2f) - *(param_1 + iVar4 + -0x2f),  iVar5 == 0)) {\n                iVar5 = *(param_2 + iVar4 + -0x2e) - *(param_1 + iVar4 + -0x2e);\n                *(unaff_EBP + -4) = iVar5;\n                if (iVar5 == 0) goto code_r0x1002fc62;\n            }\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\ncode_r0x1002fc62:\n        if (iVar5 != 0) {\n            return;\n        }\ncode_r0x1002fc6a:\n        uVar1 = *(param_2 + iVar4 + -0x2d);\n        if (uVar1 != *(param_1 + iVar4 + -0x2d)) {\n            unaff_EBX = (uVar1 & 0xff) - *(param_1 + iVar4 + -0x2d);\n            if (((unaff_EBX == 0) &&\n                (unaff_EBX = *(param_2 + iVar4 + -0x2c) - *(param_1 + iVar4 + -0x2c),  unaff_EBX == 0)) &&\n               (unaff_EBX = *(param_2 + iVar4 + -0x2b) - *(param_1 + iVar4 + -0x2b),  unaff_EBX == 0)) {\n                unaff_EBX = *(param_2 + iVar4 + -0x2a) - *(param_1 + iVar4 + -0x2a);\n                *(unaff_EBP + -4) = unaff_EBX;\n                if (unaff_EBX == 0) goto code_r0x1002fcba;\n            }\n            unaff_EBX = (0 < unaff_EBX) * 2 + -1;\n        }\ncode_r0x1002fcba:\n        if (unaff_EBX == 0) {\ncode_r0x1002fcc2:\n            uVar1 = *(param_2 + iVar4 + -0x29);\n            if (((uVar1 != *(param_1 + iVar4 + -0x29)) && ((uVar1 & 0xff) == *(param_1 + iVar4 + -0x29))) &&\n               ((*(param_2 + iVar4 + -0x28) == *(param_1 + iVar4 + -0x28) &&\n                (*(param_2 + iVar4 + -0x27) == *(param_1 + iVar4 + -0x27))))) {\n                *(unaff_EBP + -4) = *(param_2 + iVar4 + -0x26) - *(param_1 + iVar4 + -0x26);\n            }\n        }\n        break;\n    case 0x1e:\n        uVar1 = *(param_2 + iVar4 + -0x3e);\n        iVar5 = unaff_EBX;\n        if (uVar1 != *(param_1 + iVar4 + -0x3e)) {\n            iVar5 = (uVar1 & 0xff) - *(param_1 + iVar4 + -0x3e);\n            if (((iVar5 == 0) && (iVar5 = *(param_2 + iVar4 + -0x3d) - *(param_1 + iVar4 + -0x3d),  iVar5 == 0)) &&\n               (iVar5 = *(param_2 + iVar4 + -0x3c) - *(param_1 + iVar4 + -0x3c),  iVar5 == 0)) {\n                iVar5 = *(param_2 + iVar4 + -0x3b) - *(param_1 + iVar4 + -0x3b);\n                *(unaff_EBP + -4) = iVar5;\n                if (iVar5 == 0) goto code_r0x1002fde8;\n            }\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\ncode_r0x1002fde8:\n        if (iVar5 != 0) {\n            return;\n        }\ncode_r0x1002fdf0:\n        iVar5 = unaff_EBX;\n        if (*(param_2 + iVar4 + -0x3a) != *(param_1 + iVar4 + -0x3a)) {\n            iVar5 = *(param_2 + iVar4 + -0x3a) - *(param_1 + iVar4 + -0x3a);\n            if (((iVar5 == 0) && (iVar5 = *(param_2 + iVar4 + -0x39) - *(param_1 + iVar4 + -0x39),  iVar5 == 0)) &&\n               (iVar5 = *(param_2 + iVar4 + -0x38) - *(param_1 + iVar4 + -0x38),  iVar5 == 0)) {\n                iVar5 = *(param_2 + iVar4 + -0x37) - *(param_1 + iVar4 + -0x37);\n                *(unaff_EBP + -4) = iVar5;\n                if (iVar5 == 0) goto code_r0x1002fe41;\n            }\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\ncode_r0x1002fe41:\n        if (iVar5 != 0) {\n            return;\n        }\ncode_r0x1002fe49:\n        uVar1 = *(param_2 + iVar4 + -0x36);\n        iVar5 = unaff_EBX;\n        if (uVar1 != *(param_1 + iVar4 + -0x36)) {\n            iVar5 = (uVar1 & 0xff) - *(param_1 + iVar4 + -0x36);\n            if (((iVar5 == 0) && (iVar5 = *(param_2 + iVar4 + -0x35) - *(param_1 + iVar4 + -0x35),  iVar5 == 0)) &&\n               (iVar5 = *(param_2 + iVar4 + -0x34) - *(param_1 + iVar4 + -0x34),  iVar5 == 0)) {\n                iVar5 = *(param_2 + iVar4 + -0x33) - *(param_1 + iVar4 + -0x33);\n                *(unaff_EBP + -4) = iVar5;\n                if (iVar5 == 0) goto code_r0x1002fe99;\n            }\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\ncode_r0x1002fe99:\n        if (iVar5 != 0) {\n            return;\n        }\ncode_r0x1002fea1:\n        uVar1 = *(param_2 + iVar4 + -0x32);\n        iVar5 = unaff_EBX;\n        if (uVar1 != *(param_1 + iVar4 + -0x32)) {\n            iVar5 = (uVar1 & 0xff) - *(param_1 + iVar4 + -0x32);\n            if (((iVar5 == 0) && (iVar5 = *(param_2 + iVar4 + -0x31) - *(param_1 + iVar4 + -0x31),  iVar5 == 0)) &&\n               (iVar5 = *(param_2 + iVar4 + -0x30) - *(param_1 + iVar4 + -0x30),  iVar5 == 0)) {\n                iVar5 = *(param_2 + iVar4 + -0x2f) - *(param_1 + iVar4 + -0x2f);\n                *(unaff_EBP + -4) = iVar5;\n                if (iVar5 == 0) goto code_r0x1002fef1;\n            }\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\ncode_r0x1002fef1:\n        if (iVar5 != 0) {\n            return;\n        }\ncode_r0x1002fef9:\n        uVar1 = *(param_2 + iVar4 + -0x2e);\n        iVar5 = unaff_EBX;\n        if (uVar1 != *(param_1 + iVar4 + -0x2e)) {\n            iVar5 = (uVar1 & 0xff) - *(param_1 + iVar4 + -0x2e);\n            if (((iVar5 == 0) && (iVar5 = *(param_2 + iVar4 + -0x2d) - *(param_1 + iVar4 + -0x2d),  iVar5 == 0)) &&\n               (iVar5 = *(param_2 + iVar4 + -0x2c) - *(param_1 + iVar4 + -0x2c),  iVar5 == 0)) {\n                iVar5 = *(param_2 + iVar4 + -0x2b) - *(param_1 + iVar4 + -0x2b);\n                *(unaff_EBP + -4) = iVar5;\n                if (iVar5 == 0) goto code_r0x1002ff49;\n            }\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\ncode_r0x1002ff49:\n        if (iVar5 != 0) {\n            return;\n        }\ncode_r0x1002ff51:\n        uVar1 = *(param_2 + iVar4 + -0x2a);\n        if (uVar1 != *(param_1 + iVar4 + -0x2a)) {\n            unaff_EBX = (uVar1 & 0xff) - *(param_1 + iVar4 + -0x2a);\n            if (((unaff_EBX == 0) &&\n                (unaff_EBX = *(param_2 + iVar4 + -0x29) - *(param_1 + iVar4 + -0x29),  unaff_EBX == 0)) &&\n               (unaff_EBX = *(param_2 + iVar4 + -0x28) - *(param_1 + iVar4 + -0x28),  unaff_EBX == 0)) {\n                unaff_EBX = *(param_2 + iVar4 + -0x27) - *(param_1 + iVar4 + -0x27);\n                *(unaff_EBP + -4) = unaff_EBX;\n                if (unaff_EBX == 0) goto code_r0x1002ffa1;\n            }\n            unaff_EBX = (0 < unaff_EBX) * 2 + -1;\n        }\ncode_r0x1002ffa1:\n        if (unaff_EBX == 0) {\ncode_r0x1002ffa9:\n            uVar1 = *(param_2 + iVar4 + -0x26);\n            if (((uVar1 != *(param_1 + iVar4 + -0x26)) && ((uVar1 & 0xff) == *(param_1 + iVar4 + -0x26))) &&\n               ((*(param_2 + iVar4 + -0x25) == *(param_1 + iVar4 + -0x25) &&\n                (*(param_2 + iVar4 + -0x24) == *(param_1 + iVar4 + -0x24))))) {\n                *(unaff_EBP + -4) = *(param_2 + iVar4 + -0x23) - *(param_1 + iVar4 + -0x23);\n            }\n        }\n        break;\n    case 0x1f:\n        iVar5 = unaff_EBX;\n        if (*(param_2 + iVar4 + -0x3f) != *(param_1 + iVar4 + -0x3f)) {\n            iVar5 = *(param_2 + iVar4 + -0x3f) - *(param_1 + iVar4 + -0x3f);\n            if (((iVar5 == 0) && (iVar5 = *(param_2 + iVar4 + -0x3e) - *(param_1 + iVar4 + -0x3e),  iVar5 == 0)) &&\n               (iVar5 = *(param_2 + iVar4 + -0x3d) - *(param_1 + iVar4 + -0x3d),  iVar5 == 0)) {\n                iVar5 = *(param_2 + iVar4 + -0x3c) - *(param_1 + iVar4 + -0x3c);\n                *(unaff_EBP + -4) = iVar5;\n                if (iVar5 == 0) goto code_r0x100300a1;\n            }\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\ncode_r0x100300a1:\n        if (iVar5 != 0) {\n            return;\n        }\ncode_r0x100300a9:\n        uVar1 = *(param_2 + iVar4 + -0x3b);\n        iVar5 = unaff_EBX;\n        if (uVar1 != *(param_1 + iVar4 + -0x3b)) {\n            iVar5 = (uVar1 & 0xff) - *(param_1 + iVar4 + -0x3b);\n            if (((iVar5 == 0) && (iVar5 = *(param_2 + iVar4 + -0x3a) - *(param_1 + iVar4 + -0x3a),  iVar5 == 0)) &&\n               (iVar5 = *(param_2 + iVar4 + -0x39) - *(param_1 + iVar4 + -0x39),  iVar5 == 0)) {\n                iVar5 = *(param_2 + iVar4 + -0x38) - *(param_1 + iVar4 + -0x38);\n                *(unaff_EBP + -4) = iVar5;\n                if (iVar5 == 0) goto code_r0x100300f9;\n            }\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\ncode_r0x100300f9:\n        if (iVar5 != 0) {\n            return;\n        }\ncode_r0x10030101:\n        uVar1 = *(param_2 + iVar4 + -0x37);\n        iVar5 = unaff_EBX;\n        if (uVar1 != *(param_1 + iVar4 + -0x37)) {\n            iVar5 = (uVar1 & 0xff) - *(param_1 + iVar4 + -0x37);\n            if (((iVar5 == 0) && (iVar5 = *(param_2 + iVar4 + -0x36) - *(param_1 + iVar4 + -0x36),  iVar5 == 0)) &&\n               (iVar5 = *(param_2 + iVar4 + -0x35) - *(param_1 + iVar4 + -0x35),  iVar5 == 0)) {\n                iVar5 = *(param_2 + iVar4 + -0x34) - *(param_1 + iVar4 + -0x34);\n                *(unaff_EBP + -4) = iVar5;\n                if (iVar5 == 0) goto code_r0x10030151;\n            }\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\ncode_r0x10030151:\n        if (iVar5 != 0) {\n            return;\n        }\ncode_r0x10030159:\n        uVar1 = *(param_2 + iVar4 + -0x33);\n        iVar5 = unaff_EBX;\n        if (uVar1 != *(param_1 + iVar4 + -0x33)) {\n            iVar5 = (uVar1 & 0xff) - *(param_1 + iVar4 + -0x33);\n            if (((iVar5 == 0) && (iVar5 = *(param_2 + iVar4 + -0x32) - *(param_1 + iVar4 + -0x32),  iVar5 == 0)) &&\n               (iVar5 = *(param_2 + iVar4 + -0x31) - *(param_1 + iVar4 + -0x31),  iVar5 == 0)) {\n                iVar5 = *(param_2 + iVar4 + -0x30) - *(param_1 + iVar4 + -0x30);\n                *(unaff_EBP + -4) = iVar5;\n                if (iVar5 == 0) goto code_r0x100301a9;\n            }\n            iVar5 = (0 < iVar5) * 2 + -1;\n        }\ncode_r0x100301a9:\n        if (iVar5 != 0) {\n            return;\n        }\ncode_r0x100301b1:\n        uVar1 = *(param_2 + iVar4 + -0x2f);\n        if (uVar1 != *(param_1 + iVar4 + -0x2f)) {\n            unaff_EBX = (uVar1 & 0xff) - *(param_1 + iVar4 + -0x2f);\n            if (((unaff_EBX == 0) &&\n                (unaff_EBX = *(param_2 + iVar4 + -0x2e) - *(param_1 + iVar4 + -0x2e),  unaff_EBX == 0)) &&\n               (unaff_EBX = *(param_2 + iVar4 + -0x2d) - *(param_1 + iVar4 + -0x2d),  unaff_EBX == 0)) {\n                unaff_EBX = *(param_2 + iVar4 + -0x2c) - *(param_1 + iVar4 + -0x2c);\n                *(unaff_EBP + -4) = unaff_EBX;\n                if (unaff_EBX == 0) goto code_r0x10030201;\n            }\n            unaff_EBX = (0 < unaff_EBX) * 2 + -1;\n        }\ncode_r0x10030201:\n        if (unaff_EBX == 0) {\ncode_r0x10030209:\n            uVar1 = *(param_2 + iVar4 + -0x2b);\n            if ((((uVar1 != *(param_1 + iVar4 + -0x2b)) && ((uVar1 & 0xff) == *(param_1 + iVar4 + -0x2b))) &&\n                (*(param_2 + iVar4 + -0x2a) == *(param_1 + iVar4 + -0x2a))) &&\n               (*(param_2 + iVar4 + -0x29) == *(param_1 + iVar4 + -0x29))) {\n                *(unaff_EBP + -4) = *(param_2 + iVar4 + -0x28) - *(param_1 + iVar4 + -0x28);\n            }\n        }\n        break;\n    default:\n        iVar4 = unaff_EBX;\n        if (*param_2 != *param_1) {\n            iVar4 = (*param_2 & 0xff) - *param_1;\n            if (((iVar4 == 0) && (iVar4 = *(puVar3 + 0x21) - *(puVar2 + 0x21),  iVar4 == 0)) &&\n               (iVar4 = *(puVar3 + 0x22) - *(puVar2 + 0x22),  iVar4 == 0)) {\n                iVar4 = *(puVar3 + 0x23) - *(puVar2 + 0x23);\n                *(unaff_EBP + -4) = iVar4;\n                if (iVar4 == 0) goto code_r0x1002f5ff;\n            }\n            iVar4 = (0 < iVar4) * 2 + -1;\n        }\ncode_r0x1002f5ff:\n        if (iVar4 != 0) {\n            return;\n        }\n        iVar4 = unaff_EBX;\n        if (puVar3[9] != puVar2[9]) {\n            iVar4 = (puVar3[9] & 0xff) - *(puVar2 + 9);\n            if (((iVar4 == 0) && (iVar4 = *(puVar3 + 0x25) - *(puVar2 + 0x25),  iVar4 == 0)) &&\n               (iVar4 = *(puVar3 + 0x26) - *(puVar2 + 0x26),  iVar4 == 0)) {\n                iVar4 = *(puVar3 + 0x27) - *(puVar2 + 0x27);\n                *(unaff_EBP + -4) = iVar4;\n                if (iVar4 == 0) goto code_r0x1002f657;\n            }\n            iVar4 = (0 < iVar4) * 2 + -1;\n        }\ncode_r0x1002f657:\n        if (iVar4 != 0) {\n            return;\n        }\n        iVar4 = unaff_EBX;\n        if (puVar3[10] != puVar2[10]) {\n            iVar4 = (puVar3[10] & 0xff) - *(puVar2 + 10);\n            if (((iVar4 == 0) && (iVar4 = *(puVar3 + 0x29) - *(puVar2 + 0x29),  iVar4 == 0)) &&\n               (iVar4 = *(puVar3 + 0x2a) - *(puVar2 + 0x2a),  iVar4 == 0)) {\n                iVar4 = *(puVar3 + 0x2b) - *(puVar2 + 0x2b);\n                *(unaff_EBP + -4) = iVar4;\n                if (iVar4 == 0) goto code_r0x1002f6af;\n            }\n            iVar4 = (0 < iVar4) * 2 + -1;\n        }\ncode_r0x1002f6af:\n        if (iVar4 != 0) {\n            return;\n        }\n        iVar4 = unaff_EBX;\n        if (puVar3[0xb] != puVar2[0xb]) {\n            iVar4 = (puVar3[0xb] & 0xff) - *(puVar2 + 0xb);\n            if (((iVar4 == 0) && (iVar4 = *(puVar3 + 0x2d) - *(puVar2 + 0x2d),  iVar4 == 0)) &&\n               (iVar4 = *(puVar3 + 0x2e) - *(puVar2 + 0x2e),  iVar4 == 0)) {\n                iVar4 = *(puVar3 + 0x2f) - *(puVar2 + 0x2f);\n                *(unaff_EBP + -4) = iVar4;\n                if (iVar4 == 0) goto code_r0x1002f707;\n            }\n            iVar4 = (0 < iVar4) * 2 + -1;\n        }\ncode_r0x1002f707:\n        if (iVar4 != 0) {\n            return;\n        }\n        unaff_ESI = unaff_EBX;\n        iVar4 = unaff_EDI;\n        if (puVar3[0xc] != puVar2[0xc]) goto code_r0x1002f717;\n        goto code_r0x1002f75f;\n    }\n    return;\ncode_r0x1002f717:\n    unaff_ESI = (puVar3[0xc] & 0xff) - *(puVar2 + 0xc);\n    if (unaff_ESI == 0) goto code_r0x1002f722;\n    goto code_r0x1002f73a;\ncode_r0x1002f722:\n    unaff_ESI = *(puVar3 + 0x31) - *(puVar2 + 0x31);\n    in_ZF = unaff_ESI == 0;\n    goto code_r0x1002f72c;\n}\n",
        "token_count": 9401
    },
    "1002c3f0": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.1002c3f0(void)\n\n{\n    *0x10081790 = (*_sym.imp.KERNEL32.dll_CreateFileW)(L\"CONOUT$\", 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 65
    },
    "1000227c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t fcn.1000227c(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    \n    if (param_1 < 0xffffffe1) {\n        if (param_1 == 0) {\n            param_1 = 1;\n        }\n        do {\n            iVar1 = (*_sym.imp.KERNEL32.dll_HeapAlloc)(*0x100822f8, 0, param_1);\n            if (iVar1 != 0) {\n                return iVar1;\n            }\n            iVar1 = fcn.100225b7();\n        } while ((iVar1 != 0) && (iVar1 = fcn.1001cc97(param_1),  iVar1 != 0));\n    }\n    puVar2 = fcn.10016fba();\n    *puVar2 = 0xc;\n    return 0;\n}\n",
        "token_count": 195
    },
    "1000a386": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.1000a386(uint8_t *param_1, uint8_t *param_2, uint8_t *param_3)\n\n{\n    uint8_t uVar1;\n    int32_t iVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint8_t *puVar5;\n    uint uVar6;\n    bool bVar7;\n    \n    iVar2 = *(param_1 + 4);\n    if (((iVar2 == 0) || (puVar5 = iVar2 + 8,  *puVar5 == 0)) || (((*param_1 & 0x80) != 0 && ((*param_2 & 0x10) != 0))))\n    {\n        uVar6 = 1;\n    }\n    else {\n        uVar6 = 0;\n        if (iVar2 != *(param_2 + 4)) {\n            puVar3 = *(param_2 + 4) + 8;\n            do {\n                uVar1 = *puVar5;\n                bVar7 = uVar1 < *puVar3;\n                if (uVar1 != *puVar3) {\ncode_r0x10009ccc:\n                    uVar4 = -bVar7 | 1;\n                    goto code_r0x10009cd1;\n                }\n                if (uVar1 == 0) break;\n                uVar1 = puVar5[1];\n                bVar7 = uVar1 < puVar3[1];\n                if (uVar1 != puVar3[1]) goto code_r0x10009ccc;\n                puVar5 = puVar5 + 2;\n                puVar3 = puVar3 + 2;\n            } while (uVar1 != 0);\n            uVar4 = 0;\ncode_r0x10009cd1:\n            if (uVar4 != 0) {\n                return 0;\n            }\n        }\n        if ((((*param_2 & 2) == 0) || ((*param_1 & 8) != 0)) &&\n           ((((*param_3 & 1) == 0 || ((*param_1 & 1) != 0)) && (((*param_3 & 2) == 0 || ((*param_1 & 2) != 0)))))) {\n            uVar6 = 1;\n        }\n    }\n    return uVar6;\n}\n",
        "token_count": 523
    },
    "1000bef1": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Type propagation algorithm not settling\n\nint32_t fcn.1000bef1(int32_t *param_1, int32_t *param_2)\n\n{\n    char *pcVar1;\n    char cVar2;\n    code *pcVar3;\n    char **ppcVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    char *pcVar7;\n    char **ppcVar8;\n    int32_t iVar9;\n    char *pcVar10;\n    char **ppcVar11;\n    char **ppcStack36;\n    char **ppcStack32;\n    uint uStack28;\n    int32_t iStack24;\n    int32_t iStack20;\n    int32_t iStack16;\n    char *pcStack12;\n    uint uStack8;\n    \n    if (param_2 == NULL) {\n        puVar5 = fcn.10016fba();\n        iVar9 = 0x16;\n        *puVar5 = 0x16;\n        fcn.1001a732();\n    }\n    else {\n        *param_2 = 0;\n        ppcStack36 = NULL;\n        ppcStack32 = NULL;\n        uStack28 = 0;\n        iVar9 = *param_1;\n        ppcVar11 = ppcStack36;\n        ppcVar4 = ppcStack32;\n        while (ppcStack36 = ppcVar11,  ppcStack32 = ppcVar4,  iVar9 != 0) {\n            uStack8 = CONCAT13(uStack8 >> 0x18, 0x3f2a);\n            iVar9 = fcn.10022b30(*param_1, &uStack8);\n            if (iVar9 == 0) {\n                iVar9 = fcn.1001ac74(*param_1, 0, 0, &ppcStack36);\n            }\n            else {\n                iVar9 = fcn.1001ada8(*param_1, iVar9, &ppcStack36);\n            }\n            if (iVar9 != 0) goto code_r0x1001aa89;\n            param_1 = param_1 + 1;\n            ppcVar11 = ppcStack36;\n            ppcVar4 = ppcStack32;\n            iVar9 = *param_1;\n        }\n        pcStack12 = NULL;\n        uStack8 = NULL;\n        iStack16 = (ppcVar4 - ppcVar11 >> 2) + 1;\n        pcVar10 = ~-(ppcVar4 < ppcVar11) & (ppcVar4 - ppcVar11) + 3U >> 2;\n        if (pcVar10 != NULL) {\n            uStack8 = NULL;\n            ppcVar8 = ppcVar11;\n            do {\n                pcVar7 = *ppcVar8;\n                pcVar1 = pcVar7 + 1;\n                do {\n                    cVar2 = *pcVar7;\n                    pcVar7 = pcVar7 + 1;\n                } while (cVar2 != '\\0');\n                uStack8 = pcVar7 + uStack8 + (1 - pcVar1);\n                ppcVar8 = ppcVar8 + 1;\n                pcStack12 = pcStack12 + 1;\n            } while (pcStack12 != pcVar10);\n        }\n        iVar6 = fcn.1000bf3a(iStack16, uStack8, 1);\n        if (iVar6 == 0) {\n            iVar9 = -1;\n        }\n        else {\n            iStack16 = iVar6 + iStack16 * 4;\n            iStack20 = iStack16;\n            if (ppcVar11 != ppcVar4) {\n                iStack24 = iVar6 - ppcVar11;\n                do {\n                    pcStack12 = *ppcVar11;\n                    pcVar10 = pcStack12 + 1;\n                    do {\n                        cVar2 = *pcStack12;\n                        pcStack12 = pcStack12 + 1;\n                    } while (cVar2 != '\\0');\n                    pcStack12 = pcStack12 + (1 - pcVar10);\n                    iVar9 = fcn.10022b1b(iStack16, uStack8 + (iStack20 - iStack16), *ppcVar11, pcStack12);\n                    if (iVar9 != 0) {\n                        fcn.1001a75f(0, 0, 0, 0, 0);\n                        pcVar3 = swi(3);\n                        iVar9 = (*pcVar3)();\n                        return iVar9;\n                    }\n                    *(iStack24 + ppcVar11) = iStack16;\n                    ppcVar11 = ppcVar11 + 1;\n                    iStack16 = iStack16 + pcStack12;\n                } while (ppcVar11 != ppcVar4);\n            }\n            iVar9 = 0;\n            *param_2 = iVar6;\n        }\n        fcn.1001a8c5(0);\ncode_r0x1001aa89:\n        fcn.1001b1fe();\n    }\n    return iVar9;\n}\n",
        "token_count": 1122
    },
    "1000befc": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.1000befc(int32_t *param_1, int32_t *param_2)\n\n{\n    int16_t *piVar1;\n    int16_t iVar2;\n    code *pcVar3;\n    int16_t **ppiVar4;\n    uint *puVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int16_t *piVar8;\n    int16_t **ppiVar9;\n    uint32_t uVar10;\n    int16_t **ppiVar11;\n    int32_t in_stack_ffffffcc;\n    int16_t **ppiStack44;\n    int16_t **ppiStack40;\n    uint uStack36;\n    uint uStack32;\n    int32_t iStack28;\n    int32_t iStack24;\n    uint32_t uStack20;\n    int32_t iStack16;\n    ushort uStack12;\n    uint32_t uStack8;\n    \n    uStack8 = *0x10081004 ^ &stack0xfffffffc;\n    if (param_2 == NULL) {\n        puVar5 = fcn.10016fba();\n        *puVar5 = 0x16;\n        fcn.1001a732();\n    }\n    else {\n        *param_2 = 0;\n        uStack32 = 0;\n        ppiStack44 = NULL;\n        ppiStack40 = NULL;\n        uStack36 = 0;\n        iVar6 = *param_1;\n        ppiVar11 = ppiStack44;\n        ppiVar4 = ppiStack40;\n        while (ppiStack44 = ppiVar11,  ppiStack40 = ppiVar4,  iVar6 != 0) {\n            iStack16 = 0x3f002a;\n            uStack12 = 0;\n            iVar6 = fcn.10021069(*param_1, &iStack16);\n            if (iVar6 == 0) {\n                iVar6 = fcn.1001ad0a(*param_1, 0, 0, &ppiStack44);\n            }\n            else {\n                iVar6 = fcn.1001af2e(*param_1, iVar6, &ppiStack44);\n            }\n            if (iVar6 != 0) goto code_r0x1001ac4c;\n            param_1 = param_1 + 1;\n            ppiVar11 = ppiStack44;\n            ppiVar4 = ppiStack40;\n            iVar6 = *param_1;\n        }\n        iStack24 = 0;\n        uStack20 = 0;\n        iStack28 = (ppiVar4 - ppiVar11 >> 2) + 1;\n        uVar10 = ~-(ppiVar4 < ppiVar11) & (ppiVar4 - ppiVar11) + 3U >> 2;\n        if (uVar10 != 0) {\n            iStack24 = 0;\n            ppiVar9 = ppiVar11;\n            do {\n                piVar8 = *ppiVar9;\n                piVar1 = piVar8 + 1;\n                do {\n                    iVar2 = *piVar8;\n                    piVar8 = piVar8 + 1;\n                } while (iVar2 != uStack32);\n                ppiVar9 = ppiVar9 + 1;\n                iStack24 = iStack24 + 1 + (piVar8 - piVar1 >> 1);\n                uStack20 = uStack20 + 1;\n            } while (uStack20 != uVar10);\n        }\n        iVar6 = fcn.1000bf3a(iStack28, iStack24, 2);\n        if (iVar6 != 0) {\n            iStack28 = iVar6 + iStack28 * 4;\n            in_stack_ffffffcc = iStack28;\n            if (ppiVar11 != ppiVar4) {\n                iStack16 = iVar6 - ppiVar11;\n                do {\n                    piVar8 = *ppiVar11;\n                    piVar1 = piVar8 + 1;\n                    do {\n                        iVar2 = *piVar8;\n                        piVar8 = piVar8 + 1;\n                    } while (iVar2 != uStack32);\n                    uStack20 = (piVar8 - piVar1 >> 1) + 1;\n                    iVar7 = fcn.1002100e(iStack28, iStack24 - (iStack28 - in_stack_ffffffcc >> 1), *ppiVar11, uStack20);\n                    if (iVar7 != 0) {\n                        fcn.1001a75f(0, 0, 0, 0, 0);\n                        pcVar3 = swi(3);\n                        (*pcVar3)();\n                        return;\n                    }\n                    *(iStack16 + ppiVar11) = iStack28;\n                    ppiVar11 = ppiVar11 + 1;\n                    iStack28 = iStack28 + uStack20 * 2;\n                } while (ppiVar11 != ppiVar4);\n            }\n            *param_2 = iVar6;\n            iVar6 = 0;\n        }\n        fcn.1001a8c5(iVar6);\ncode_r0x1001ac4c:\n        fcn.1001b1fe();\n    }\n    fcn.10001112(in_stack_ffffffcc);\n    return;\n}\n",
        "token_count": 1183
    },
    "1001c823": {
        "rules": [
            "set environment variable"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.1001c823(uint *arg_8h, uint *arg_ch)\n\n{\n    (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableA)(*arg_8h, *arg_ch);\n    return;\n}\n",
        "token_count": 51
    },
    "1001c83a": {
        "rules": [
            "set environment variable"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.1001c83a(uint *arg_8h, uint *arg_ch)\n\n{\n    (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)(*arg_8h, *arg_ch);\n    return;\n}\n",
        "token_count": 52
    },
    "10029f46": {
        "rules": [
            "print debug messages"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.10029f46(uint *arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_OutputDebugStringA)(*arg_8h);\n    return;\n}\n",
        "token_count": 42
    },
    "10029f58": {
        "rules": [
            "print debug messages"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.10029f58(uint *arg_8h)\n\n{\n    (*_sym.imp.KERNEL32.dll_OutputDebugStringW)(*arg_8h);\n    return;\n}\n",
        "token_count": 42
    },
    "10029fa0": {
        "rules": [
            "print debug messages"
        ],
        "decompiled_code": "\nint32_t fcn.10029fa0(int32_t param_1, uint param_2, uint32_t param_3)\n\n{\n    char cVar1;\n    char cVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint arg_8h;\n    uint uStack20;\n    int32_t iStack16;\n    uint32_t uStack12;\n    int32_t iStack8;\n    \n    cVar1 = fcn.1001a487();\n    iVar3 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    if (iVar3 != 0) {\n        if (param_1 != 0) {\n            (*_sym.imp.KERNEL32.dll_OutputDebugStringA)(param_1);\n        }\n        if (cVar1 != '\\0') {\n            return 4;\n        }\n    }\n    cVar2 = fcn.1001a30b();\n    if (cVar2 == '\\0') {\n        iVar3 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n        iVar3 = (iVar3 != 0) + 3;\n    }\n    else if (cVar1 == '\\0') {\n        cVar1 = fcn.1001a3e1();\n        if (cVar1 == '\\0') {\n            param_3 = param_3 | 0x200000;\n            arg_8h = 0;\n        }\n        else {\n            arg_8h = fcn.1001a33c();\n        }\n        iVar3 = fcn.1001a135(arg_8h, param_1, param_2, param_3);\n    }\n    else {\n        iVar3 = 0;\n        uStack20 = param_2;\n        uStack12 = param_3;\n        iStack16 = param_1;\n        iStack8 = 0;\n        iVar4 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.10029f02, &uStack20, 0, 0);\n        if (iVar4 != -1) {\n            iVar5 = (*_sym.imp.KERNEL32.dll_WaitForSingleObjectEx)(iVar4, 0xffffffff, 0);\n            if (iVar5 == 0) {\n                iVar3 = iStack8;\n            }\n            if (iVar4 != -1) {\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar4);\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 544
    }
}