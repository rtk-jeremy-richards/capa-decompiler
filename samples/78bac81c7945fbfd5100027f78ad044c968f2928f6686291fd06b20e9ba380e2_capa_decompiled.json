{
    "00407dab": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00407dab(int32_t param_1)\n\n{\n    if (*(param_1 + 8) != '\\0') {\n        fcn.00407ecd(*(param_1 + 4));\n    }\n    *(param_1 + 4) = 0;\n    *(param_1 + 8) = 0;\n    return;\n}\n",
        "token_count": 81
    },
    "004050a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.004050a0(void)\n\n{\n    int32_t iVar1;\n    uint extraout_var;\n    \n    if (*0x814fb0 == 0) {\n        iVar1 = *0x814fb0;\n        fcn.0040772f(0);\n        if (*0x814fb0 == 0) {\n            *0x814fa4 = *0x814fa4 + 1;\n            *0x814fb0 = *0x814fa4;\n        }\n        fcn.00407757(iVar1, extraout_var);\n    }\n    return *0x814fb0;\n}\n",
        "token_count": 138
    },
    "004051f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint32_t fcn.004051f0(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t unaff_ESI;\n    \n    iVar1 = *in_EAX;\n    if (unaff_ESI < *(iVar1 + 0xc)) {\n        iVar2 = *(*(iVar1 + 8) + unaff_ESI * 4);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n    }\n    else {\n        iVar2 = 0;\n    }\n    if (*(iVar1 + 0x14) != '\\0') {\n        iVar1 = fcn.00407405();\n        if (unaff_ESI < *(iVar1 + 0xc)) {\n            return *(*(iVar1 + 8) + unaff_ESI * 4);\n        }\n        iVar2 = 0;\n    }\n    return iVar2;\n}\n",
        "token_count": 205
    },
    "00405370": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405370(uint *param_1)\n\n{\n    *param_1 = 0x404354;\n    if (param_1[5] != 0) {\n        fcn.00407ecd(param_1[4]);\n    }\n    *param_1 = 0x40434c;\n    *param_1 = 0x401364;\n    return;\n}\n",
        "token_count": 87
    },
    "00405ac0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00405b04)\n// WARNING: Removing unreachable block (ram,0x00405b11)\n\nint64_t __cdecl fcn.00405ac0(ushort *arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    ushort uVar3;\n    int32_t *in_ECX;\n    uint32_t uVar4;\n    bool bVar5;\n    int64_t iVar6;\n    \n    if ((-1 < arg_10h) && ((iVar1 = 0,  0 < arg_10h || (iVar1 = 0,  arg_ch != 0)))) {\n        while( true ) {\n            do {\n                iVar6 = fcn.00406890();\n                if (iVar6 < 1) {\n                    (**(*in_ECX + 0x1c))();\n                    fcn.00404ed0();\n                    cVar2 = fcn.00404e90();\n                    if (cVar2 != '\\0') {\n                        return iVar1;\n                    }\n                    uVar3 = fcn.00404ea0();\n                    *arg_8h = uVar3;\n                    arg_8h = arg_8h + 1;\n                    iVar1 = iVar1 + 1;\n                    bVar5 = arg_ch != 0;\n                    arg_ch = arg_ch - 1;\n                    arg_10h = arg_10h + -1 + bVar5;\n                }\n                else {\n                    if (CONCAT44(arg_10h, arg_ch) < iVar6) {\n                        iVar6 = CONCAT44(arg_10h, arg_ch);\n                    }\n                    uVar4 = iVar6;\n                    fcn.00406800(uVar4);\n                    fcn.00404e80();\n                    iVar1 = iVar6 + iVar1;\n                    arg_8h = arg_8h + uVar4;\n                    bVar5 = arg_ch < uVar4;\n                    arg_ch = arg_ch - uVar4;\n                    arg_10h = (arg_10h - (iVar6 >> 0x20)) - bVar5;\n                    fcn.00406840();\n                }\n            } while (0 < arg_10h);\n            if (arg_10h < 0) break;\n            if (arg_ch == 0) {\n                return iVar1;\n            }\n        }\n        return iVar1;\n    }\n    return 0;\n}\n",
        "token_count": 540
    },
    "00405bd0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00405c14)\n// WARNING: Removing unreachable block (ram,0x00405c21)\n\nint64_t __cdecl fcn.00405bd0(uint arg_8h, uint32_t arg_ch, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    char cVar3;\n    ushort uVar4;\n    int32_t *in_ECX;\n    uint32_t uVar5;\n    bool bVar6;\n    int64_t iVar7;\n    \n    if ((-1 < arg_10h) && ((iVar2 = 0,  0 < arg_10h || (iVar2 = 0,  arg_ch != 0)))) {\n        while( true ) {\n            do {\n                iVar7 = fcn.00406910();\n                if (iVar7 < 1) {\n                    iVar1 = *in_ECX;\n                    uVar4 = fcn.00404ea0();\n                    (**(iVar1 + 0xc))(uVar4);\n                    fcn.00404ed0();\n                    cVar3 = fcn.00404e90();\n                    if (cVar3 != '\\0') {\n                        return iVar2;\n                    }\n                    iVar2 = iVar2 + 1;\n                    bVar6 = arg_ch != 0;\n                    arg_ch = arg_ch - 1;\n                    arg_10h = arg_10h + -1 + bVar6;\n                }\n                else {\n                    if (CONCAT44(arg_10h, arg_ch) < iVar7) {\n                        iVar7 = CONCAT44(arg_10h, arg_ch);\n                    }\n                    uVar5 = iVar7;\n                    fcn.00406820(uVar5);\n                    fcn.00404e80();\n                    iVar2 = iVar7 + iVar2;\n                    bVar6 = arg_ch < uVar5;\n                    arg_ch = arg_ch - uVar5;\n                    arg_10h = (arg_10h - (iVar7 >> 0x20)) - bVar6;\n                    fcn.004068b0();\n                }\n            } while (0 < arg_10h);\n            if (arg_10h < 0) break;\n            if (arg_ch == 0) {\n                return iVar2;\n            }\n        }\n        return iVar2;\n    }\n    return 0;\n}\n",
        "token_count": 515
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "004067c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004067c0(uint param_1)\n\n{\n    fcn.00405770(param_1);\n    return;\n}\n",
        "token_count": 32
    },
    "00406890": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00406890(void)\n\n{\n    int32_t in_EAX;\n    \n    if (**(in_EAX + 0x20) != 0) {\n        return;\n    }\n    return;\n}\n",
        "token_count": 47
    },
    "00406910": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00406910(void)\n\n{\n    int32_t in_EAX;\n    \n    if (**(in_EAX + 0x24) != 0) {\n        return;\n    }\n    return;\n}\n",
        "token_count": 47
    },
    "00406b60": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00406b60(uint param_1)\n\n{\n    ushort uVar1;\n    int32_t in_EAX;\n    \n    fcn.00405850();\n    *(in_EAX + 0x38) = param_1;\n    *(in_EAX + 0x3c) = 0;\n    uVar1 = fcn.00406be0();\n    *(in_EAX + 0x40) = uVar1;\n    if (*(in_EAX + 0x38) == 0) {\n        fcn.004059c0();\n    }\n    return;\n}\n",
        "token_count": 131
    },
    "00407ecd": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407ecd(int32_t arg_8h)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint uVar3;\n    \n    if (arg_8h != 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x81519c, 0, arg_8h);\n        if (iVar1 == 0) {\n            puVar2 = fcn.00408544();\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            uVar3 = fcn.00408502(uVar3);\n            *puVar2 = uVar3;\n        }\n    }\n    return;\n}\n",
        "token_count": 153
    },
    "00409293": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl\nfcn.00409293(uint noname_0, uint noname_1, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint noname_7, uint noname_8, uint noname_9, uint noname_10, uint noname_11, uint noname_12, uint noname_13\n            , uint noname_14, uint arg_8h, uint arg_ch, uint noname_17, uint noname_18, uint arg_18h, uint arg_1ch, \n            uint arg_20h)\n\n{\n    int32_t iVar1;\n    int32_t *in_FS_OFFSET;\n    uint *var_8h_3;\n    uint *var_ch_2;\n    uint var_10h_2;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_18h;\n    uint var_14h;\n    uint var_10h;\n    uint var_ch;\n    uint var_8h;\n    uint var_4h;\n    uint var_38h;\n    uint *var_34h;\n    uint var_30h;\n    code *var_2ch;\n    uint *var_28h_2;\n    code *pcStack40;\n    uint32_t uStack36;\n    uint uStack32;\n    uint *puStack28;\n    uint uStack24;\n    uint uStack20;\n    uchar *puStack16;\n    uchar *var_8h_2;\n    int32_t var_4h_2;\n    \n    var_8h_2 = &stack0xfffffffc;\n    puStack16 = &stack0xffffffc0;\n    if (var_8h_3 == 0x123) {\n        *var_ch_2 = 0x40933e;\n        var_38h = 1;\n    }\n    else {\n        pcStack40 = fcn.0040936a;\n        uStack36 = *0x41a344 ^ &fcn.00409293::var_28h_2;\n        uStack32 = var_24h;\n        puStack28 = var_ch_2;\n        uStack24 = var_20h;\n        uStack20 = var_1ch;\n        var_4h_2 = 0;\n        var_28h_2 = *in_FS_OFFSET;\n        *in_FS_OFFSET = &fcn.00409293::var_28h_2;\n        var_34h = var_8h_3;\n        var_30h = var_10h_2;\n        iVar1 = fcn.0040b7bf();\n        var_2ch = *(iVar1 + 0x80);\n        (*var_2ch)(*var_8h_3, &fcn.00409293::var_34h);\n        var_38h = 0;\n        if (var_4h_2 == 0) {\n            *in_FS_OFFSET = var_28h_2;\n        }\n        else {\n            *var_28h_2 = **in_FS_OFFSET;\n            *in_FS_OFFSET = var_28h_2;\n        }\n    }\n    return var_38h;\n}\n",
        "token_count": 720
    },
    "00409581": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00409581(uint arg_8h)\n\n{\n    uint in_EAX;\n    uint uVar1;\n    int32_t in_ECX;\n    uint in_EDX;\n    uint unaff_EBX;\n    uint unaff_EBP;\n    uint unaff_ESI;\n    uint unaff_EDI;\n    ushort in_ES;\n    ushort in_CS;\n    ushort in_SS;\n    ushort in_DS;\n    ushort in_FS;\n    ushort in_GS;\n    uint8_t in_AF;\n    uint8_t in_TF;\n    uint8_t in_IF;\n    uint8_t in_NT;\n    uint8_t in_AC;\n    uint8_t in_VIF;\n    uint8_t in_VIP;\n    uint8_t in_ID;\n    uint unaff_retaddr;\n    int32_t var_328h;\n    uint var_324h;\n    uint var_320h;\n    \n    if (in_ECX == *0x41a344) {\n        return;\n    }\n    *0x815a50 = (in_NT & 1) * 0x4000 | SBORROW4(&stack0xfffffffc, 0x328) * 0x800 | (in_IF & 1) * 0x200 |\n                (in_TF & 1) * 0x100 | (&var_328h < 0) * 0x80 | (*0x10 == 0x32c) * 0x40 | (in_AF & 1) * 0x10 |\n                ((POPCOUNT(&var_328h & 0xff) & 1U) == 0) * 4 | &stack0xfffffffc < 0x328 | (in_ID & 1) * 0x200000 |\n                (in_VIP & 1) * 0x100000 | (in_VIF & 1) * 0x80000 | (in_AC & 1) * 0x40000;\n    *0x815a54 = &arg_8h;\n    *0x815990 = 0x10001;\n    *0x815938 = 0xc0000409;\n    *0x81593c = 1;\n    var_328h = *0x41a344;\n    var_324h = *0x41a348;\n    *0x815944 = unaff_retaddr;\n    *0x815a1c = in_GS;\n    *0x815a20 = in_FS;\n    *0x815a24 = in_ES;\n    *0x815a28 = in_DS;\n    *0x815a2c = unaff_EDI;\n    *0x815a30 = unaff_ESI;\n    *0x815a34 = unaff_EBX;\n    *0x815a38 = in_EDX;\n    *0x815a3c = in_ECX;\n    *0x815a40 = in_EAX;\n    *0x815a44 = unaff_EBP;\n    *0x815a48 = unaff_retaddr;\n    *0x815a4c = in_CS;\n    *0x815a58 = in_SS;\n    *0x815988 = (*_sym.imp.KERNEL32.dll_IsDebuggerPresent)();\n    fcn.004130c1(1);\n    (*_sym.imp.KERNEL32.dll_SetUnhandledExceptionFilter)(0);\n    (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)(0x402be8);\n    if (*0x815988 == 0) {\n        fcn.004130c1(1);\n    }\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0xc0000409);\n    (*_sym.imp.KERNEL32.dll_TerminateProcess)(uVar1);\n    return;\n}\n",
        "token_count": 824
    },
    "0040afff": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Possible PIC construction at 0x0040b105: Changing call to branch\n// WARNING: Removing unreachable block (ram,0x0040b10a)\n// WARNING: Removing unreachable block (ram,0x0040b139)\n// WARNING: Removing unreachable block (ram,0x0040b110)\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040afff(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    code *pcVar1;\n    int32_t *piVar2;\n    int32_t *piVar3;\n    int32_t iVar4;\n    code *pcVar5;\n    int32_t unaff_EBP;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040b420(0x418230, 0x20);\n    fcn.0040f557(8);\n    *(unaff_EBP + -4) = 0;\n    pcVar1 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if (*0x8151d0 != 1) {\n        *0x8151cc = 1;\n        *0x8151c8 = *(unaff_EBP + 0x10);\n        if (*(unaff_EBP + 0xc) == 0) {\n            piVar2 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0xbb7c8c);\n            *(unaff_EBP + -0x30) = piVar2;\n            if (piVar2 != NULL) {\n                piVar3 = (*pcVar1)(*0xbb7c88);\n                *(unaff_EBP + -0x2c) = piVar3;\n                *(unaff_EBP + -0x24) = piVar2;\n                *(unaff_EBP + -0x28) = piVar3;\n                while( true ) {\n                    piVar3 = piVar3 + -1;\n                    *(unaff_EBP + -0x2c) = piVar3;\n                    if (piVar3 < piVar2) break;\n                    iVar4 = fcn.0040b60f();\n                    if (*piVar3 != iVar4) {\n                        if (piVar3 < piVar2) break;\n                        pcVar5 = (*pcVar1)(*piVar3);\n                        iVar4 = fcn.0040b60f();\n                        *piVar3 = iVar4;\n                        (*pcVar5)();\n                        iVar4 = (*pcVar1)(*0xbb7c8c);\n                        piVar2 = (*pcVar1)(*0xbb7c88);\n                        if ((*(unaff_EBP + -0x24) != iVar4) || (*(unaff_EBP + -0x28) != piVar2)) {\n                            *(unaff_EBP + -0x24) = iVar4;\n                            *(unaff_EBP + -0x30) = iVar4;\n                            *(unaff_EBP + -0x28) = piVar2;\n                            *(unaff_EBP + -0x2c) = piVar2;\n                            piVar3 = piVar2;\n                        }\n                        piVar2 = *(unaff_EBP + -0x30);\n                    }\n                }\n            }\n            *(unaff_EBP + -0x1c) = 0x401240;\n            while (*(unaff_EBP + -0x1c) < 0x40124c) {\n                if (**(unaff_EBP + -0x1c) != NULL) {\n                    (***(unaff_EBP + -0x1c))();\n                }\n                *(unaff_EBP + -0x1c) = *(unaff_EBP + -0x1c) + 4;\n            }\n        }\n        *(unaff_EBP + -0x20) = 0x401250;\n        while (*(unaff_EBP + -0x20) < 0x401254) {\n            if (**(unaff_EBP + -0x20) != NULL) {\n                (***(unaff_EBP + -0x20))();\n            }\n            *(unaff_EBP + -0x20) = *(unaff_EBP + -0x20) + 4;\n        }\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    if (*(unaff_EBP + 0x10) != 0) {\n        fcn.0040f47e(8);\n    }\n    return;\n}\n",
        "token_count": 1019
    },
    "0040d3d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0040d3d8(void)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = fcn.0040b7bf();\n    if (0 < *(iVar1 + 0x90)) {\n        iVar1 = fcn.0040b7bf();\n        *(iVar1 + 0x90) = *(iVar1 + 0x90) + -1;\n    }\n    return;\n}\n",
        "token_count": 93
    },
    "0040d69f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d69f(uint noname_0, uint noname_1, uint arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t unaff_EBP;\n    int32_t *unaff_ESI;\n    int32_t unaff_EDI;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_1ch;\n    \n    *(unaff_EDI + -4) = *(unaff_EBP + -0x24);\n    fcn.004094cf(*(unaff_EBP + -0x28));\n    iVar1 = fcn.0040b7bf();\n    *(iVar1 + 0x88) = *(unaff_EBP + -0x2c);\n    iVar1 = fcn.0040b7bf();\n    *(iVar1 + 0x8c) = *(unaff_EBP + -0x30);\n    if ((((*unaff_ESI == -0x1f928c9d) && (unaff_ESI[4] == 3)) &&\n        ((iVar1 = unaff_ESI[5],  iVar1 == 0x19930520 || ((iVar1 == 0x19930521 || (iVar1 == 0x19930522)))))) &&\n       ((*(unaff_EBP + -0x34) == 0 && (*(unaff_EBP + -0x1c) != 0)))) {\n        iVar1 = fcn.004094a8(unaff_ESI[6]);\n        if (iVar1 != 0) {\n            fcn.0040d437(unaff_ESI);\n        }\n    }\n    return;\n}\n",
        "token_count": 384
    },
    "00411f9d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00411f9d(void)\n\n{\n    int32_t unaff_EBP;\n    uint var_1ch;\n    \n    if (*(unaff_EBP + -0x1c) != 0) {\n        fcn.0040f47e(0);\n    }\n    return;\n}\n",
        "token_count": 67
    },
    "0041219c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041219c(uint arg_8h, uint arg_ch, uint32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    code *pcVar4;\n    code *pcVar5;\n    code *pcVar6;\n    uint unaff_EBX;\n    uint var_24h;\n    uint var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_14h;\n    uint var_10h;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41a344 ^ &stack0xfffffffc;\n    var_20h = arg_8h;\n    var_1ch = arg_ch;\n    var_18h = fcn.0040b60f();\n    var_14h = 0;\n    if (*0x815dec == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(0x403784);\n        pcVar6 = _sym.imp.KERNEL32.dll_GetProcAddress;\n        if ((iVar1 == 0) ||\n           (iVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x403778), \n           pcVar4 = _sym.imp.KERNEL32.dll_EncodePointer,  iVar2 == 0)) goto code_r0x004122f9;\n        *0x815dec = (*_sym.imp.KERNEL32.dll_EncodePointer)(iVar2);\n        uVar3 = (*pcVar6)(iVar1, 0x403768);\n        *0x815df0 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x403754);\n        *0x815df4 = (*pcVar4)(uVar3);\n        uVar3 = (*pcVar6)(iVar1, 0x403738);\n        *0x815dfc = (*pcVar4)(uVar3);\n        if (*0x815dfc != 0) {\n            uVar3 = (*pcVar6)(iVar1, 0x403720);\n            *0x815df8 = (*pcVar4)(uVar3);\n        }\n    }\n    pcVar6 = _sym.imp.KERNEL32.dll_DecodePointer;\n    if ((*0x815df8 == var_18h) || (*0x815dfc == var_18h)) {\ncode_r0x004122a8:\n        if ((((*0x815df0 != var_18h) && (pcVar4 = (*pcVar6)(*0x815df0),  pcVar4 != NULL)) &&\n            (var_14h = (*pcVar4)(),  var_14h != 0)) &&\n           ((*0x815df4 != var_18h && (pcVar4 = (*pcVar6)(*0x815df4),  pcVar4 != NULL)))) {\n            var_14h = (*pcVar4)(var_14h);\n        }\n    }\n    else {\n        pcVar4 = (*_sym.imp.KERNEL32.dll_DecodePointer)(*0x815df8);\n        pcVar5 = (*pcVar6)(*0x815dfc);\n        if (((pcVar4 == NULL) || (pcVar5 == NULL)) ||\n           (((iVar1 = (*pcVar4)(),  iVar1 != 0 && (iVar1 = (*pcVar5)(iVar1, 1, &var_10h, 0xc, &var_24h),  iVar1 != 0))\n            && ((var_8h & 1) != 0)))) goto code_r0x004122a8;\n        arg_10h = arg_10h | 0x200000;\n    }\n    pcVar6 = (*pcVar6)(*0x815dec);\n    if (pcVar6 != NULL) {\n        (*pcVar6)(var_14h, var_20h, var_1ch, arg_10h);\n    }\ncode_r0x004122f9:\n    fcn.00409581(unaff_EBX);\n    return;\n}\n",
        "token_count": 925
    },
    "00414390": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint fcn.00414390(void)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    code *pcVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint *in_FS_OFFSET;\n    uint uStack3140;\n    uint uStack3136;\n    uint uStack3132;\n    uint uStack3128;\n    uint uStack3124;\n    uint uStack3120;\n    uint uStack3116;\n    uchar *puStack3112;\n    uchar *puStack3108;\n    uint uStack3104;\n    uint uStack3100;\n    uint uStack3096;\n    uint uStack3092;\n    uint uStack3088;\n    uchar *puStack3084;\n    uint uStack3080;\n    uchar *puStack3076;\n    uint uStack3072;\n    uint uStack3068;\n    uint uStack3064;\n    uchar *puStack3060;\n    uint uStack3056;\n    uint uStack3052;\n    uchar *puStack3048;\n    uint uStack3044;\n    uchar *puStack3040;\n    uint uStack3036;\n    uint uStack3032;\n    uint uStack3028;\n    uchar *puStack3024;\n    uint uStack3020;\n    uchar *puStack3016;\n    uint uStack3012;\n    uint uStack3008;\n    uchar *puStack3004;\n    uint uStack3000;\n    uchar *puStack2996;\n    uchar *puStack2992;\n    uchar *puStack2988;\n    uchar *puStack2968;\n    int32_t iStack2960;\n    int32_t iStack2900;\n    uchar auStack2760 [360];\n    uchar auStack2400 [272];\n    uchar auStack2128 [28];\n    uchar auStack2100 [8];\n    uchar auStack2092 [2064];\n    uint uStack28;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    puStack2968 = &stack0xfffffffc;\n    uStack12 = 0xffffffff;\n    uStack16 = 0x417afb;\n    uStack20 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &stack0xffffffec;\n    uVar5 = 0;\n    do {\n        if (uVar5 < 0x1c428) {\n            (*_sym.imp.KERNEL32.dll_GetLastError)();\n            (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        }\n    } while ((((uVar5 < 0x1ea07dba) || (iStack2960 == 0xad121a)) || (iStack2900 == 0x8c67878)) &&\n            (uVar5 = uVar5 + 1,  uVar5 < 0x8c70231e));\n    if (*0xbb5f44 == 0x12) {\n        fcn.00407f9b(0);\n        fcn.00407fcb();\n        fcn.00405d40();\n        uStack16 = 0;\n        puStack2988 = 0x41442b;\n        fcn.004080f9(0);\n        fcn.0040811b();\n    }\n    *0xbb5f44 = *0xbb5f44 + 0x38d6;\n    puStack2988 = 0x41444c;\n    *0xbb2fa4 = (*_sym.imp.KERNEL32.dll_LocalAlloc)();\n    pcVar4 = _sym.imp.KERNEL32.dll_EnumDateFormatsA;\n    pcVar2 = _sym.imp.KERNEL32.dll_EnumCalendarInfoW;\n    pcVar1 = _sym.imp.KERNEL32.dll_EnumCalendarInfoA;\n    puStack2968 = 0x963510;\n    uVar5 = *0xbb5f44;\n    do {\n        if (uVar5 == 3) {\n            puStack2988 = NULL;\n            puStack2992 = 0x41447c;\n            (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)();\n            uVar5 = *0xbb5f44;\n        }\n        if (uVar5 == 0xbc5) {\n            puStack2988 = NULL;\n            puStack2992 = NULL;\n            puStack2996 = NULL;\n            uStack3000 = 0;\n            puStack3004 = 0x414492;\n            (*pcVar1)();\n            puStack3004 = NULL;\n            uStack3008 = 0;\n            uStack3012 = 0;\n            puStack3016 = NULL;\n            uStack3020 = 0x414498;\n            (*pcVar2)();\n            uStack3020 = 0;\n            puStack3024 = NULL;\n            uStack3028 = 0;\n            uStack3032 = 0;\n            uStack3036 = 0x4144a2;\n            (*_sym.imp.KERNEL32.dll_GetOverlappedResult)();\n            uStack3036 = 0;\n            puStack3040 = &stack0xfffff7b0;\n            uStack3044 = 0x4144b1;\n            (*_sym.imp.KERNEL32.dll_GetConsoleTitleW)();\n            uStack3044 = 0;\n            puStack3048 = 0x4144b8;\n            (*_sym.imp.KERNEL32.dll_DeleteFileA)();\n            puStack3048 = &stack0xfffff434;\n            uStack3020 = 0;\n            puStack3016 = NULL;\n            uStack3052 = 0x4144cb;\n            (*_sym.imp.KERNEL32.dll_QueryDepthSList)();\n            uStack3052 = 0;\n            uStack3056 = 0;\n            puStack3060 = NULL;\n            uStack3064 = 0x4144d0;\n            (*pcVar4)();\n            uStack3064 = 0;\n            uStack3068 = 0;\n            uStack3072 = 0x4144d8;\n            (*_sym.imp.KERNEL32.dll_SetConsoleMode)();\n            uStack3072 = 0;\n            puStack3076 = NULL;\n            uStack3080 = 0;\n            puStack3084 = 0x4144dd;\n            (*pcVar4)();\n            puStack3084 = &stack0xfffff460;\n            uStack3088 = 0;\n            uStack3092 = 0x4144e9;\n            (*_sym.imp.KERNEL32.dll_GetConsoleScreenBufferInfo)();\n            uStack3092 = 0;\n            uStack3096 = 0;\n            uStack3100 = 0x4144f1;\n            (*_sym.imp.KERNEL32.dll_GetCommState)();\n            uStack3100 = 0;\n            uStack3104 = 0x4144f8;\n            (*_sym.imp.KERNEL32.dll_GlobalUnfix)();\n            uStack3104 = 0;\n            puStack3108 = 0x4144ff;\n            (*_sym.imp.KERNEL32.dll_SetComputerNameA)();\n            puStack3108 = &stack0xfffff40c;\n            uStack3056 = 0;\n            uStack3052 = 0;\n            puStack3048 = NULL;\n            uStack3044 = 0;\n            puStack3112 = &stack0xfffff420;\n            uStack3116 = 0;\n            puStack3060 = NULL;\n            uStack3120 = 0x414526;\n            (*_sym.imp.KERNEL32.dll_BuildCommDCBAndTimeoutsA)();\n            uStack3120 = 0x403f90;\n            uStack3124 = 0x414531;\n            (*_sym.imp.KERNEL32.dll_GetFileAttributesA)();\n            uStack3124 = 0x403f98;\n            uStack3128 = 0x41453c;\n            (*_sym.imp.KERNEL32.dll_GetDriveTypeW)();\n            uStack3128 = 0;\n            uStack3132 = 0;\n            uStack3136 = 0;\n            uStack3140 = 0x414545;\n            (*_sym.imp.KERNEL32.dll_CreateJobSet)();\n            uStack3140 = 0x40403c;\n            (*_sym.imp.KERNEL32.dll_GetFileAttributesW)();\n            (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0, 0x40405c);\n            (*_sym.imp.KERNEL32.dll_GetStringTypeA)(0, 0, 0x404068, 0, &stack0xfffff3c4);\n            uStack3140 = 0;\n            uStack3136 = 0;\n            (*_sym.imp.KERNEL32.dll_InterlockedPopEntrySList)(&stack0xfffff3bc);\n            (*_sym.imp.KERNEL32.dll_EnumSystemLocalesA)(0, 0);\n            uVar5 = *0xbb5f44;\n        }\n        pcVar3 = _sym.imp.KERNEL32.dll_GetEnvironmentStrings;\n        puStack2968 = puStack2968 + -1;\n    } while (puStack2968 != NULL);\n    uVar6 = 0;\n    if (uVar5 != 0) {\n        do {\n            puStack2988 = 0x4145ab;\n            fcn.004140d0();\n            if (*0xbb5f44 == 0x29) {\n                puStack2988 = 0x4145b7;\n                (*pcVar3)();\n            }\n            uVar6 = uVar6 + 1;\n            uVar5 = *0xbb5f44;\n        } while (uVar6 < *0xbb5f44);\n    }\n    if (uVar5 == 0x19c) {\n        puStack2988 = NULL;\n        puStack2992 = &stack0xfffff468;\n        puStack2996 = NULL;\n        uStack3000 = 0;\n        puStack3004 = NULL;\n        uStack3008 = 0x4145d7;\n        (*_sym.imp.KERNEL32.dll_WriteConsoleA)();\n        uStack3008 = 0;\n        uStack3012 = 0x4040b0;\n        puStack3016 = &stack0xfffff7cc;\n        uStack3020 = 0x4145eb;\n        (*_sym.imp.KERNEL32.dll_lstrcpynA)();\n        uStack3020 = 0x404100;\n        puStack3024 = 0x4145f6;\n        (*_sym.imp.KERNEL32.dll_FindAtomW)();\n        puStack3024 = &stack0xfffff448;\n        uStack3028 = 0;\n        uStack3032 = 0x404138;\n        uStack3036 = 0;\n        puStack3040 = NULL;\n        uStack3044 = 0x414609;\n        (*_sym.imp.KERNEL32.dll_GetStringTypeExA)();\n        uStack3044 = 0;\n        puStack3048 = 0x414610;\n        (*_sym.imp.KERNEL32.dll_FreeEnvironmentStringsW)();\n        puStack3048 = 0x404190;\n        uStack3052 = 0;\n        uStack3056 = 0;\n        puStack3060 = NULL;\n        uStack3064 = 0x41461e;\n        (*_sym.imp.KERNEL32.dll_SetCalendarInfoA)();\n        uStack3064 = 0;\n        uStack3068 = 0x40419c;\n        uStack3072 = 0x41462a;\n        (*_sym.imp.KERNEL32.dll_BeginUpdateResourceA)();\n    }\n    pcVar1 = _sym.imp.USER32.dll_GetMenu;\n    iVar7 = 0x8dc;\n    do {\n        puStack2988 = NULL;\n        puStack2992 = 0x414638;\n        (*pcVar1)();\n        pcVar2 = _sym.imp.KERNEL32.dll_SetFileShortNameA;\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    iVar7 = 0x250a9;\n    do {\n        if (*0xbb5f44 == 0x92) {\n            puStack2988 = 0x4041a4;\n            puStack2992 = NULL;\n            puStack2996 = 0x414660;\n            (*pcVar2)();\n        }\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    *0x815e40 = 0;\n    puStack2988 = 0x41466e;\n    fcn.00413c20();\n    puStack2988 = 0x414673;\n    fcn.00414360();\n    puStack2988 = 0x414678;\n    fcn.004140b0();\n    pcVar2 = _sym.imp.USER32.dll_DefDlgProcA;\n    pcVar1 = _sym.imp.KERNEL32.dll_GetModuleHandleW;\n    iVar7 = 0xf2b8b;\n    do {\n        if (*0xbb5f44 == 0x21) {\n            puStack2988 = NULL;\n            puStack2992 = NULL;\n            puStack2996 = NULL;\n            uStack3000 = 0;\n            puStack3004 = 0x41469f;\n            (*pcVar2)();\n            puStack3004 = NULL;\n            uStack3008 = 0x4146a2;\n            (*pcVar1)();\n        }\n        iVar7 = iVar7 + -1;\n    } while (iVar7 != 0);\n    puStack2988 = 0x4146aa;\n    fcn.00414190();\n    *0x815e41 = 0x73;\n    if (*0xbb5f44 == 0xd5c) {\n        puStack2988 = &stack0xfffff6a0;\n        puStack2992 = NULL;\n        puStack2996 = 0x4146d0;\n        (*_sym.imp.KERNEL32.dll_FindNextFileA)();\n        puStack2996 = &stack0xfffff460;\n        uStack3000 = 0x4146db;\n        (*_sym.imp.KERNEL32.dll_InterlockedDecrement)();\n        uStack3000 = 0;\n        puStack3004 = &stack0xfffff7d4;\n        uStack3008 = 0;\n        uStack3012 = 0x4146eb;\n        (*_sym.imp.KERNEL32.dll_GetVolumePathNameA)();\n        uStack3012 = 0x4041c8;\n        puStack3016 = 0x4146f6;\n        (*_sym.imp.KERNEL32.dll_LoadLibraryW)();\n        puStack3016 = NULL;\n        uStack3020 = 0;\n        puStack3024 = 0x4146fe;\n        (*_sym.imp.KERNEL32.dll_TerminateJobObject)();\n        puStack3024 = NULL;\n        uStack3028 = 0;\n        uStack3032 = 0;\n        uStack3036 = 0x414707;\n        (*_sym.imp.KERNEL32.dll_EnumResourceTypesA)();\n        uStack3036 = 0x41470d;\n        (*_sym.imp.KERNEL32.dll_DebugBreak)();\n        uStack3036 = 0;\n        puStack3040 = 0x414714;\n        (*_sym.imp.KERNEL32.dll_UnhandledExceptionFilter)();\n        puStack3040 = 0x40420c;\n        uStack3044 = 0x41471b;\n        (*pcVar1)();\n        uStack3044 = 0;\n        puStack3048 = NULL;\n        uStack3052 = 0x414723;\n        (*_sym.imp.KERNEL32.dll_SetProcessPriorityBoost)();\n        uStack3052 = 0;\n        uStack3056 = 0;\n        puStack3060 = 0x41472b;\n        (*_sym.imp.KERNEL32.dll_EnumSystemLocalesA)();\n        puStack3060 = &stack0xfffff538;\n        uStack3064 = 0;\n        uStack3068 = 0;\n        uStack3072 = 0x41473b;\n        (*_sym.imp.KERNEL32.dll_GetCPInfoExA)();\n        uStack3072 = 0;\n        puStack3076 = 0x414742;\n        (*_sym.imp.KERNEL32.dll_ReleaseActCtx)();\n        puStack3076 = &stack0xfffff414;\n        uStack3080 = 0;\n        puStack3084 = 0x41474e;\n        (*_sym.imp.KERNEL32.dll_GetBinaryTypeW)();\n        puStack3084 = NULL;\n        uStack3088 = 0;\n        uStack3092 = 0;\n        uStack3096 = 0x404244;\n        uStack3100 = 0x40425c;\n        uStack3104 = 0x414761;\n        (*_sym.imp.KERNEL32.dll_MoveFileWithProgressA)();\n    }\n    puStack2988 = 0x414766;\n    fcn.004140c0();\n    *in_FS_OFFSET = uStack28;\n    return 0;\n}\n",
        "token_count": 3734
    },
    "0041533d": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0041533d(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41a344 ^ &stack0xfffffffc;\n    fcn.0040a7e0(arg_10h);\n    var_14h = fcn.00416290(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.004157ee(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x00415396:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x004153d6;\n        }\n        if (iVar1 != 2) {\ncode_r0x004153c8:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x004153d6;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x004153c8;\n        goto code_r0x00415396;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x004153d6:\n    fcn.00409581(unaff_EBX);\n    return;\n}\n",
        "token_count": 500
    },
    "004153e5": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.004153e5(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t iVar1;\n    uint unaff_EBX;\n    uint var_28h;\n    uint var_24h;\n    int32_t var_1ch;\n    uint var_18h;\n    uint32_t var_14h;\n    uint var_10h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41a344 ^ &stack0xfffffffc;\n    fcn.0040a7e0(arg_10h);\n    var_14h = fcn.00416290(&var_10h, &var_28h, arg_ch, 0, 0, 0, 0, &var_24h);\n    iVar1 = fcn.00415d3f(&var_10h, arg_8h);\n    if ((var_14h & 3) == 0) {\n        if (iVar1 == 1) {\ncode_r0x0041543e:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0041547e;\n        }\n        if (iVar1 != 2) {\ncode_r0x00415470:\n            if (var_18h != '\\0') {\n                *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n            }\n            goto code_r0x0041547e;\n        }\n    }\n    else if ((var_14h & 1) == 0) {\n        if ((var_14h & 2) == 0) goto code_r0x00415470;\n        goto code_r0x0041543e;\n    }\n    if (var_18h != '\\0') {\n        *(var_1ch + 0x70) = *(var_1ch + 0x70) & 0xfffffffd;\n    }\ncode_r0x0041547e:\n    fcn.00409581(unaff_EBX);\n    return;\n}\n",
        "token_count": 502
    },
    "004157ee": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.004157ee(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41a344 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = str.5_v_[1];\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = str.5_v_[0] + L'\\xffffffff';\n        iVar14 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x00415932;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x00415939;\ncode_r0x00415932:\n                        do {\n                            bVar6 = true;\ncode_r0x00415939:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x00415947;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x00415947:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x814c44 - str.5_v_[0]) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x814c44 < iVar14) {\n                if (iVar14 < *0x814c40) {\n                    iVar14 = iVar14 + str.5_v_[3];\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = str.5_v_[1] + (str.5_v_[1] >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = str.5_v_[3] + *0x814c40;\n                }\n                goto code_r0x00415cf2;\n            }\n            iVar13 = *0x814c44 - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = str.5_v_[0] + L'\\xffffffff';\n            iVar13 = str.5_v_[0] + (str.5_v_[0] >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (str.5_v_[0] & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x00415ae6;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x00415ae6:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = str.5_v_[1] + L'\\x01' + (str.5_v_[1] + L'\\x01' >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x00415cf2:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (str.5_v_[2] == L'@') {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (str.5_v_[2] == L' ') {\n        *arg_ch = uVar15;\n    }\n    fcn.00409581(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3253
    },
    "00415d3f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_38h\n\nvoid __cdecl fcn.00415d3f(uint16_t *arg_8h, uint32_t *arg_ch)\n\n{\n    uint32_t *puVar1;\n    uint16_t uVar2;\n    uint16_t uVar3;\n    uint32_t uVar4;\n    uint8_t uVar5;\n    bool bVar6;\n    int32_t iVar7;\n    uint8_t uVar8;\n    uint32_t *puVar9;\n    uint *puVar10;\n    uint32_t uVar11;\n    uint32_t uVar12;\n    int32_t iVar13;\n    int32_t iVar14;\n    uint32_t uVar15;\n    int32_t iVar16;\n    bool bVar17;\n    uint var_38h;\n    uint var_34h;\n    uint var_30h;\n    uint var_2ch;\n    uint32_t var_28h;\n    uint var_24h;\n    uint32_t var_20h;\n    uint var_1ch;\n    uint32_t var_10h;\n    uint32_t var_ch;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = *0x41a344 ^ &stack0xfffffffc;\n    uVar2 = arg_8h[5];\n    uVar15 = *(arg_8h + 3);\n    var_10h = uVar15;\n    uVar4 = *(arg_8h + 1);\n    uVar3 = *arg_8h;\n    uVar12 = uVar2 & 0x7fff;\n    iVar13 = uVar12 - 0x3fff;\n    var_ch = uVar4;\n    var_8h = uVar3 << 0x10;\n    uVar5 = *0x814c64;\n    if (iVar13 == -0x3fff) {\n        iVar14 = 0;\n        iVar13 = 0;\n        do {\n            if ((&var_10h)[iVar13] != 0) {\n                var_10h = 0;\n                var_ch = 0;\n                var_8h = 0;\n                break;\n            }\n            iVar13 = iVar13 + 1;\n        } while (iVar13 < 3);\n    }\n    else {\n        bVar6 = false;\n        iVar16 = *0x814c60 + -1;\n        iVar14 = *0x814c60 + (*0x814c60 >> 0x1f & 0x1fU) >> 5;\n        puVar1 = &var_10h + iVar14;\n        uVar8 = 0x1f - (*0x814c60 & 0x1f);\n        if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n            uVar11 = (&var_10h)[iVar14] & ~(-1 << (uVar8 & 0x1f));\n            iVar7 = iVar14;\n            while( true ) {\n                if (uVar11 != 0) {\n                    iVar7 = iVar16 + (iVar16 >> 0x1f & 0x1fU) >> 5;\n                    uVar11 = 1 << (0x1f - (iVar16 & 0x1f) & 0x1f);\n                    puVar9 = &var_10h + iVar7;\n                    var_20h = *puVar9 + uVar11;\n                    if (var_20h < *puVar9) goto code_r0x00415e83;\n                    bVar17 = var_20h < uVar11;\n                    do {\n                        bVar6 = false;\n                        if (!bVar17) goto code_r0x00415e8a;\ncode_r0x00415e83:\n                        do {\n                            bVar6 = true;\ncode_r0x00415e8a:\n                            iVar7 = iVar7 + -1;\n                            *puVar9 = var_20h;\n                            if ((iVar7 < 0) || (!bVar6)) goto code_r0x00415e98;\n                            puVar9 = &var_10h + iVar7;\n                            var_20h = *puVar9 + 1;\n                        } while (var_20h < *puVar9);\n                        bVar17 = var_20h == 0;\n                    } while( true );\n                }\n                iVar7 = iVar7 + 1;\n                if (2 < iVar7) break;\n                uVar11 = (&var_10h)[iVar7];\n            }\n        }\ncode_r0x00415e98:\n        *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n        iVar14 = iVar14 + 1;\n        if (iVar14 < 3) {\n            puVar10 = &var_10h + iVar14;\n            for (iVar16 = 3 - iVar14; iVar16 != 0; iVar16 = iVar16 + -1) {\n                *puVar10 = 0;\n                puVar10 = puVar10 + 1;\n            }\n        }\n        iVar14 = iVar13;\n        if (bVar6) {\n            iVar14 = uVar12 - 0x3ffe;\n        }\n        if (iVar14 < *0x814c5c - *0x814c60) {\n            var_10h = 0;\n            var_ch = 0;\n            var_8h = 0;\n        }\n        else {\n            if (*0x814c5c < iVar14) {\n                if (iVar14 < *0x814c58) {\n                    iVar14 = iVar14 + *0x814c6c;\n                    var_10h = var_10h & 0x7fffffff;\n                    iVar13 = *0x814c64 + (*0x814c64 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar16 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar16 < iVar13) {\n                            (&var_10h)[iVar16] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar16] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar16 = iVar16 + -1;\n                    } while (-1 < iVar16);\n                }\n                else {\n                    var_ch = 0;\n                    var_8h = 0;\n                    var_10h = 0x80000000;\n                    iVar13 = *0x814c64 + (*0x814c64 >> 0x1f & 0x1fU) >> 5;\n                    uVar8 = uVar5 & 0x1f;\n                    var_28h = 0;\n                    var_20h = 0;\n                    do {\n                        uVar15 = (&var_10h)[var_20h];\n                        (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                        var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                        var_20h = var_20h + 1;\n                    } while (var_20h < 3);\n                    iVar14 = 2;\n                    puVar10 = &var_8h + -iVar13;\n                    do {\n                        if (iVar14 < iVar13) {\n                            (&var_10h)[iVar14] = 0;\n                        }\n                        else {\n                            (&var_10h)[iVar14] = *puVar10;\n                        }\n                        puVar10 = puVar10 + -1;\n                        iVar14 = iVar14 + -1;\n                    } while (-1 < iVar14);\n                    iVar14 = *0x814c6c + *0x814c58;\n                }\n                goto code_r0x00416243;\n            }\n            iVar13 = *0x814c5c - iVar13;\n            var_10h = uVar15;\n            var_ch = uVar4;\n            iVar14 = iVar13 + (iVar13 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = iVar13 & 0x1f;\n            var_8h = uVar3 << 0x10;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar13 = 2;\n            puVar10 = &var_8h + -iVar14;\n            do {\n                if (iVar13 < iVar14) {\n                    (&var_10h)[iVar13] = 0;\n                }\n                else {\n                    (&var_10h)[iVar13] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar13 = iVar13 + -1;\n            } while (-1 < iVar13);\n            iVar14 = *0x814c60 + -1;\n            iVar13 = *0x814c60 + (*0x814c60 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = 0x1f - (*0x814c60 & 0x1f);\n            puVar1 = &var_10h + iVar13;\n            if ((*puVar1 & 1 << (uVar8 & 0x1f)) != 0) {\n                uVar15 = (&var_10h)[iVar13] & ~(-1 << (uVar8 & 0x1f));\n                iVar16 = iVar13;\n                while (uVar15 == 0) {\n                    iVar16 = iVar16 + 1;\n                    if (2 < iVar16) goto code_r0x00416037;\n                    uVar15 = (&var_10h)[iVar16];\n                }\n                iVar16 = iVar14 + (iVar14 >> 0x1f & 0x1fU) >> 5;\n                bVar6 = false;\n                uVar12 = 1 << (0x1f - (iVar14 & 0x1f) & 0x1f);\n                uVar4 = (&var_10h)[iVar16];\n                uVar15 = uVar4 + uVar12;\n                if ((uVar15 < uVar4) || (uVar15 < uVar12)) {\n                    bVar6 = true;\n                }\n                (&var_10h)[iVar16] = uVar15;\n                while ((iVar16 = iVar16 + -1,  -1 < iVar16 && (bVar6))) {\n                    uVar4 = (&var_10h)[iVar16];\n                    uVar15 = uVar4 + 1;\n                    bVar6 = false;\n                    if ((uVar15 < uVar4) || (uVar15 == 0)) {\n                        bVar6 = true;\n                    }\n                    (&var_10h)[iVar16] = uVar15;\n                }\n            }\ncode_r0x00416037:\n            *puVar1 = *puVar1 & -1 << (uVar8 & 0x1f);\n            iVar13 = iVar13 + 1;\n            if (iVar13 < 3) {\n                puVar10 = &var_10h + iVar13;\n                for (iVar14 = 3 - iVar13; iVar14 != 0; iVar14 = iVar14 + -1) {\n                    *puVar10 = 0;\n                    puVar10 = puVar10 + 1;\n                }\n            }\n            iVar13 = *0x814c64 + 1 + (*0x814c64 + 1 >> 0x1f & 0x1fU) >> 5;\n            uVar8 = uVar5 + 1 & 0x1f;\n            var_28h = 0;\n            var_20h = 0;\n            do {\n                uVar15 = (&var_10h)[var_20h];\n                (&var_10h)[var_20h] = uVar15 >> uVar8 | var_28h;\n                var_28h = (uVar15 & ~(-1 << uVar8)) << (0x20 - uVar8 & 0x1f);\n                var_20h = var_20h + 1;\n            } while (var_20h < 3);\n            iVar14 = 2;\n            puVar10 = &var_8h + -iVar13;\n            do {\n                if (iVar14 < iVar13) {\n                    (&var_10h)[iVar14] = 0;\n                }\n                else {\n                    (&var_10h)[iVar14] = *puVar10;\n                }\n                puVar10 = puVar10 + -1;\n                iVar14 = iVar14 + -1;\n            } while (-1 < iVar14);\n        }\n        iVar14 = 0;\n    }\ncode_r0x00416243:\n    uVar15 = iVar14 << (0x1f - uVar5 & 0x1f) | -((uVar2 & 0x8000) != 0) & 0x80000000 | var_10h;\n    if (*0x814c68 == 0x40) {\n        arg_ch[1] = uVar15;\n        *arg_ch = var_ch;\n    }\n    else if (*0x814c68 == 0x20) {\n        *arg_ch = uVar15;\n    }\n    fcn.00409581(uVar2 & 0x8000);\n    return;\n}\n",
        "token_count": 3233
    },
    "004052d0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint fcn.004052d0(int32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    uchar auStack52 [4];\n    uchar auStack48 [32];\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x417a3b;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    if ((param_1 != NULL) && (*param_1 == 0)) {\n        iVar1 = fcn.004082e2(0x20);\n        uStack4 = 0;\n        if (iVar1 == 0) {\n            iVar2 = 0;\n        }\n        else {\n            fcn.004051e0();\n            fcn.00404f30(auStack48);\n            iVar2 = fcn.004052b0();\n        }\n        uStack8 = 0xffffffff;\n        *param_1 = iVar2;\n        if (iVar1 != 0) {\n            fcn.00404fd0(auStack52);\n        }\n    }\n    *in_FS_OFFSET = uStack16;\n    return 2;\n}\n",
        "token_count": 285
    },
    "00406470": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004065bf)\n// WARNING: Removing unreachable block (ram,0x0040650d)\n\nuint __cdecl\nfcn.00406470(uint arg_8h, uint arg_ch, uint noname_2, uint noname_3, uint noname_4, uint noname_5, uint noname_6, \n            uint32_t arg_24h)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    int32_t in_ECX;\n    int64_t iVar5;\n    \n    iVar5 = fcn.00406a60();\n    iVar2 = fcn.00406820();\n    if ((iVar2 != 0) && (uVar3 = fcn.00406820(),  *(in_ECX + 0x3c) < uVar3)) {\n        uVar4 = fcn.00406820();\n        *(in_ECX + 0x3c) = uVar4;\n    }\n    iVar1 = iVar5;\n    if (iVar5 != CONCAT44(*0x40135c, *0x401358)) {\n        if ((arg_24h & 1) != 0) {\n            iVar2 = fcn.00406800();\n            if (iVar2 != 0) {\n                iVar1 = CONCAT44(*0x40135c, *0x401358);\n                if (-1 < iVar5) {\n                    iVar2 = fcn.004067f0();\n                    iVar2 = *(in_ECX + 0x3c) - iVar2;\n                    iVar1 = CONCAT44(*0x40135c, *0x401358);\n                    if (iVar5 <= CONCAT44(iVar2 >> 0x1f, iVar2 >> 1)) {\n                        fcn.004067f0();\n                        fcn.00406800();\n                        fcn.00406840();\n                        iVar1 = iVar5;\n                        if (((arg_24h & 2) != 0) && (iVar2 = fcn.00406820(),  iVar2 != 0)) {\n                            fcn.00406870();\n                            fcn.00406800();\n                            fcn.00406810();\n                            fcn.004068e0();\n                        }\n                    }\n                }\n                goto code_r0x00406576;\n            }\n        }\n        iVar1 = CONCAT44(*0x40135c, *0x401358);\n        if ((arg_24h & 2) != 0) {\n            iVar2 = fcn.00406820();\n            iVar1 = CONCAT44(*0x40135c, *0x401358);\n            if ((iVar2 != 0) && (iVar1 = CONCAT44(*0x40135c, *0x401358),  -1 < iVar5)) {\n                iVar2 = fcn.004067f0();\n                iVar2 = *(in_ECX + 0x3c) - iVar2;\n                iVar1 = CONCAT44(*0x40135c, *0x401358);\n                if (iVar5 <= CONCAT44(iVar2 >> 0x1f, iVar2 >> 1)) {\n                    fcn.004067f0();\n                    fcn.00406820();\n                    fcn.004068b0();\n                    iVar1 = iVar5;\n                }\n            }\n        }\n    }\ncode_r0x00406576:\n    fcn.00406a40(iVar1);\n    return arg_8h;\n}\n",
        "token_count": 765
    },
    "00406650": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __thiscall fcn.00406650(uint param_1, uint8_t param_2)\n\n{\n    fcn.004051c0();\n    if ((param_2 & 1) != 0) {\n        fcn.00408110(param_1);\n    }\n    return param_1;\n}\n",
        "token_count": 68
    },
    "00406a00": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.00406a00(void)\n\n{\n    int32_t unaff_ESI;\n    \n    if ((*(unaff_ESI + 0x40) & 1) != 0) {\n        fcn.004067f0();\n        fcn.00406930();\n    }\n    fcn.00406850();\n    fcn.004068c0();\n    *(unaff_ESI + 0x40) = *(unaff_ESI + 0x40) & 0xfffffffe;\n    *(unaff_ESI + 0x3c) = 0;\n    return;\n}\n",
        "token_count": 132
    },
    "00406ed2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00406ed2(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x401280;\n    if ((arg_8h & 1) != 0) {\n        fcn.00408110();\n    }\n    return;\n}\n",
        "token_count": 70
    },
    "00407c83": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407c83(uint32_t arg_8h)\n\n{\n    fcn.00407e43();\n    if ((arg_8h & 1) != 0) {\n        fcn.00408110();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "00407e4e": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00407e4e(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x4013ac;\n    fcn.00407dab();\n    if ((arg_8h & 1) != 0) {\n        fcn.00408110();\n    }\n    return;\n}\n",
        "token_count": 81
    },
    "004081c0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004081c0(uint32_t arg_8h)\n\n{\n    fcn.004081b0();\n    if ((arg_8h & 1) != 0) {\n        fcn.00408110();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "0040d241": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040d241(uint32_t arg_8h)\n\n{\n    uint *in_ECX;\n    \n    *in_ECX = 0x402bd0;\n    fcn.00407e43();\n    if ((arg_8h & 1) != 0) {\n        fcn.00408110();\n    }\n    return;\n}\n",
        "token_count": 80
    },
    "00412f14": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.00412f14(uint arg_8h, uint arg_ch, uint arg_10h)\n\n{\n    int32_t *piVar1;\n    uint32_t arg_8h_00;\n    uint *puVar2;\n    uint uVar3;\n    int32_t unaff_EBP;\n    int32_t iVar4;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040b420(0x418528, 0x10);\n    arg_8h_00 = *(unaff_EBP + 8);\n    if (arg_8h_00 == 0xfffffffe) {\n        puVar2 = fcn.00408557();\n        *puVar2 = 0;\n        puVar2 = fcn.00408544();\n        *puVar2 = 9;\n    }\n    else {\n        if ((-1 < arg_8h_00) && (arg_8h_00 < *0xbb6b44)) {\n            piVar1 = (arg_8h_00 >> 5) * 4 + 0xbb6b60;\n            iVar4 = (arg_8h_00 & 0x1f) * 0x40;\n            if ((*(*piVar1 + 4 + iVar4) & 1) != 0) {\n                fcn.00412751(arg_8h_00);\n                *(unaff_EBP + -4) = 0;\n                if ((*(*piVar1 + 4 + iVar4) & 1) == 0) {\n                    puVar2 = fcn.00408544();\n                    *puVar2 = 9;\n                    puVar2 = fcn.00408557();\n                    *puVar2 = 0;\n                    *(unaff_EBP + -0x1c) = 0xffffffff;\n                }\n                else {\n                    uVar3 = fcn.00412817(arg_8h_00, *(unaff_EBP + 0xc), *(unaff_EBP + 0x10));\n                    *(unaff_EBP + -0x1c) = uVar3;\n                }\n                *(unaff_EBP + -4) = 0xfffffffe;\n                fcn.00412fe0();\n                goto code_r0x00412fd7;\n            }\n        }\n        puVar2 = fcn.00408557();\n        *puVar2 = 0;\n        puVar2 = fcn.00408544();\n        *puVar2 = 9;\n        fcn.0040c05c();\n    }\ncode_r0x00412fd7:\n    fcn.0040b465();\n    return;\n}\n",
        "token_count": 602
    },
    "004050e0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004050e0(int32_t param_1)\n\n{\n    fcn.0040772f(0);\n    if (*(param_1 + 4) != -1) {\n        *(param_1 + 4) = *(param_1 + 4) + 1;\n    }\n    fcn.00407757();\n    return;\n}\n",
        "token_count": 81
    },
    "00405110": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t __fastcall fcn.00405110(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    fcn.0040772f(0);\n    iVar1 = *(param_1 + 4);\n    if ((iVar1 != 0) && (iVar1 != -1)) {\n        *(param_1 + 4) = iVar1 + -1;\n    }\n    iVar1 = *(param_1 + 4);\n    fcn.00407757();\n    return ~-(iVar1 != 0) & param_1;\n}\n",
        "token_count": 123
    },
    "00406c50": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t fcn.00406c50(void)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint *in_FS_OFFSET;\n    int32_t iVar3;\n    int32_t iStack36;\n    uchar auStack32 [4];\n    uint uStack28;\n    uint uStack20;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x417a58;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    iVar3 = 0;\n    fcn.0040772f(0);\n    iVar2 = *0xbb6b2c;\n    uStack8 = 0;\n    iStack36 = *0xbb6b2c;\n    fcn.004050a0();\n    iVar1 = fcn.004051f0();\n    if ((iVar1 == 0) && (iVar1 = iVar2,  iVar2 == 0)) {\n        iVar2 = fcn.004052d0(&iStack36);\n        if (iVar2 == -1) {\n            fcn.00407e25(0x404278);\n            fcn.00409151(auStack32, 0x41865c);\n        }\n        *0xbb6b2c = iVar3;\n        fcn.004050e0();\n        fcn.00405150();\n        iVar1 = iVar3;\n    }\n    uStack20 = 0xffffffff;\n    fcn.00407757();\n    *in_FS_OFFSET = uStack28;\n    return iVar1;\n}\n",
        "token_count": 360
    },
    "004141f0": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nvoid fcn.004141f0(uint32_t *param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uStack1044;\n    int32_t iStack1036;\n    uchar auStack1024 [1024];\n    \n    iVar4 = *0x812b9c;\n    iVar3 = *0x812b98;\n    iVar2 = *0x812b94;\n    iVar1 = *0x812b90;\n    uStack1044 = *param_1;\n    uVar5 = param_1[1];\n    iStack1036 = 0x20;\n    do {\n        if (*0xbb5f44 == 5) {\n            (*_sym.imp.KERNEL32.dll_GetConsoleAliasExesLengthA)();\n            (*_sym.imp.KERNEL32.dll_SetThreadIdealProcessor)(0, 0);\n        }\n        *0xbb2fa8 = 0;\n        if (*0xbb5f44 == 0x5ba) {\n            (*_sym.imp.KERNEL32.dll_CreateMutexA)(0, 0, 0x403f28);\n        }\n        uVar5 = uVar5 - ((uStack1044 >> 5) + iVar4 ^ uStack1044 * 0x10 + iVar3 ^ uStack1044 + 0xc6ef3720);\n        *0xbb2fb0 = 0xff6b3619;\n        *0xbb2fb4 = 0xffffffff;\n        uStack1044 = uStack1044 - (uVar5 * 0x10 + iVar1 ^ uVar5 + 0xc6ef3720 ^ (uVar5 >> 5) + iVar2);\n        if (*0xbb5f44 == 0x93) {\n            (*_sym.imp.KERNEL32.dll_lstrcatA)(auStack1024, 0x403f34);\n        }\n        else {\n            fcn.00414180();\n        }\n        iStack1036 = iStack1036 + -1;\n    } while (iStack1036 != 0);\n    param_1[1] = uVar5;\n    *param_1 = uStack1044;\n    return;\n}\n",
        "token_count": 502
    },
    "00414360": {
        "rules": [
            "hash data using aphash/10489b186fc44711a1078750698db7a9",
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0"
        ],
        "decompiled_code": "\nvoid fcn.00414360(void)\n\n{\n    uint32_t uVar1;\n    \n    for (uVar1 = *0xbb5f44 >> 3; uVar1 != 0; uVar1 = uVar1 - 1) {\n        fcn.004141f0();\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00404e60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00404e60(uint param_1, uint param_2, uint param_3)\n\n{\n    int32_t in_EAX;\n    \n    fcn.00408a80(param_3, param_2, in_EAX * 2);\n    return;\n}\n",
        "token_count": 63
    },
    "00404e80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404e80(void)\n\n{\n    fcn.00404e60();\n    return;\n}\n",
        "token_count": 25
    },
    "00404f30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint fcn.00404f30(uint param_1)\n\n{\n    uint unaff_ESI;\n    int32_t unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x4179c4;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.0040772f(0);\n    uStack8 = 0;\n    fcn.00405970();\n    fcn.00405970();\n    fcn.00405970();\n    fcn.00405970();\n    uStack8 = CONCAT31(uStack8._1_3_, 4);\n    if (unaff_EDI == 0) {\n        fcn.00404ee0(0x403ecc);\n        fcn.00409151(&stack0xffffffe0, 0x4185c8);\n    }\n    fcn.00407556(param_1, unaff_EDI);\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 263
    },
    "00404fd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00404fd0(uint param_1)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack8 = 0x4179c4;\n    *in_FS_OFFSET = &uStack12;\n    uStack4 = 4;\n    fcn.004074e3(param_1);\n    fcn.00405980();\n    fcn.00405980();\n    fcn.00405980();\n    fcn.00405980();\n    uStack4 = 0xffffffff;\n    fcn.00407757();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 158
    },
    "00405040": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405040(void)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint *puVar3;\n    uint *unaff_ESI;\n    uchar auStack20 [20];\n    \n    puVar3 = fcn.00407b22(auStack20);\n    uVar1 = puVar3[1];\n    *unaff_ESI = *puVar3;\n    uVar2 = puVar3[2];\n    unaff_ESI[1] = uVar1;\n    uVar1 = puVar3[3];\n    unaff_ESI[2] = uVar2;\n    unaff_ESI[3] = uVar1;\n    return;\n}\n",
        "token_count": 152
    },
    "004051e0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.004051e0(void)\n\n{\n    int32_t *in_EAX;\n    int32_t iVar1;\n    \n    iVar1 = *(*in_EAX + 0x18);\n    if (iVar1 == 0) {\n        iVar1 = *in_EAX + 0x1c;\n    }\n    return iVar1;\n}\n",
        "token_count": 78
    },
    "004053a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.004053a0(void)\n\n{\n    uint *puVar1;\n    int32_t unaff_EDI;\n    \n    puVar1 = fcn.00405040();\n    *(unaff_EDI + 8) = *puVar1;\n    *(unaff_EDI + 0xc) = puVar1[1];\n    *(unaff_EDI + 0x10) = puVar1[2];\n    *(unaff_EDI + 0x14) = puVar1[3];\n    puVar1 = fcn.00405070();\n    *(unaff_EDI + 0x18) = *puVar1;\n    *(unaff_EDI + 0x1c) = puVar1[1];\n    return;\n}\n",
        "token_count": 167
    },
    "00405770": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405770(int32_t param_1)\n\n{\n    uint32_t in_EAX;\n    uint32_t uVar1;\n    uint32_t extraout_ECX;\n    uint uStack40;\n    uchar auStack28 [28];\n    \n    *(param_1 + 0xc) = in_EAX & 0x17;\n    uVar1 = *(param_1 + 0x10) & in_EAX & 0x17;\n    if (uVar1 != 0) {\n        if ((uVar1 & 4) != 0) {\n            uStack40 = 0x40578f;\n            fcn.004056d0();\n            uStack40 = 0x403edc;\n            fcn.00405750();\n            fcn.00409151(&stack0xffffffe4, 0x418624);\n            uVar1 = extraout_ECX;\n        }\n        if ((uVar1 & 2) != 0) {\n            fcn.004056d0();\n            fcn.00405750(0x403ef4);\n            fcn.00409151(&stack0xffffffd8, 0x418624);\n        }\n        fcn.004056d0();\n        fcn.00405750(0x403f0c);\n        fcn.00409151(&stack0xffffffd8, 0x418624);\n    }\n    return;\n}\n",
        "token_count": 312
    },
    "00405850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.00405850(void)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int32_t unaff_EDI;\n    \n    *(unaff_EDI + 0x30) = 0;\n    *(unaff_EDI + 8) = 0;\n    *(unaff_EDI + 0x10) = 0;\n    *(unaff_EDI + 0x14) = 0x201;\n    *(unaff_EDI + 0x18) = 6;\n    *(unaff_EDI + 0x1c) = 0;\n    *(unaff_EDI + 0x20) = 0;\n    *(unaff_EDI + 0x24) = 0;\n    *(unaff_EDI + 0x28) = 0;\n    *(unaff_EDI + 0x2c) = 0;\n    fcn.00405800();\n    iVar1 = fcn.004082e2(4);\n    if (iVar1 != 0) {\n        uVar2 = fcn.004051a0();\n        *(unaff_EDI + 0x30) = uVar2;\n        return;\n    }\n    *(unaff_EDI + 0x30) = 0;\n    return;\n}\n",
        "token_count": 283
    },
    "00405980": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00405980(int32_t *param_1)\n\n{\n    if (*param_1 != 0) {\n        fcn.00407ecd(*param_1);\n    }\n    *param_1 = 0;\n    return;\n}\n",
        "token_count": 57
    },
    "00405d40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t * fcn.00405d40(int32_t *param_1)\n\n{\n    uint unaff_EDI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x417ad7;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x404338;\n    param_1[4] = 0x404340;\n    fcn.004067e0();\n    uStack4 = 0;\n    fcn.00406950(param_1, param_1 + 6);\n    uStack12 = 1;\n    *(param_1 + *(*param_1 + 4)) = 0x404334;\n    fcn.004069b0(param_1 + 6);\n    *in_FS_OFFSET = unaff_EDI;\n    return param_1;\n}\n",
        "token_count": 219
    },
    "00406840": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.00406840(int32_t param_1, int32_t param_2)\n\n{\n    **(param_2 + 0x30) = **(param_2 + 0x30) - param_1;\n    **(param_2 + 0x20) = **(param_2 + 0x20) + param_1 * 2;\n    return;\n}\n",
        "token_count": 90
    },
    "004068b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __fastcall fcn.004068b0(int32_t param_1, int32_t param_2)\n\n{\n    **(param_2 + 0x34) = **(param_2 + 0x34) - param_1;\n    **(param_2 + 0x24) = **(param_2 + 0x24) + param_1 * 2;\n    return;\n}\n",
        "token_count": 91
    },
    "00406940": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t __fastcall fcn.00406940(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = 0;\n    if (param_1 != 0) {\n        if ((param_1 < 0x80000000) && (iVar1 = fcn.004082e2(param_1 * 2),  iVar1 != 0)) {\n            return iVar1;\n        }\n        fcn.00404e10();\n        iVar1 = fcn.00409151(&stack0xfffffff0, 0x418694);\n    }\n    return iVar1;\n}\n",
        "token_count": 134
    },
    "00406950": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t * fcn.00406950(int32_t *param_1, uint param_2)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x417a9b;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.00406a90(param_1);\n    uStack12 = 1;\n    fcn.00406a70(param_1 + 4);\n    *(param_1 + *(*param_1 + 4)) = 0x4042ec;\n    *in_FS_OFFSET = param_2;\n    return param_1;\n}\n",
        "token_count": 168
    },
    "004069b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint * fcn.004069b0(uint *param_1)\n\n{\n    uint unaff_ESI;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x4179f8;\n    *in_FS_OFFSET = &uStack12;\n    fcn.00406ad0(param_1);\n    uStack8 = 0;\n    *param_1 = 0x4042f4;\n    fcn.00406b50();\n    fcn.00406b40();\n    *in_FS_OFFSET = unaff_ESI;\n    return param_1;\n}\n",
        "token_count": 163
    },
    "00406a90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nint32_t * fcn.00406a90(int32_t *param_1, uint param_2)\n\n{\n    *(param_1 + *(*param_1 + 4)) = 0x4042dc;\n    param_1[2] = 0;\n    param_1[3] = 0;\n    fcn.00406b60(param_2);\n    return param_1;\n}\n",
        "token_count": 89
    },
    "00406ad0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint * fcn.00406ad0(uint *param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack12 = *in_FS_OFFSET;\n    uStack4 = 0xffffffff;\n    uStack8 = 0x4179db;\n    *in_FS_OFFSET = &uStack12;\n    *param_1 = 0x40429c;\n    fcn.0040776e();\n    uStack4 = 0;\n    iVar1 = fcn.004082e2(4);\n    if (iVar1 == 0) {\n        uVar2 = 0;\n    }\n    else {\n        uVar2 = fcn.004051a0();\n    }\n    param_1[0xe] = uVar2;\n    fcn.00406ba0();\n    *in_FS_OFFSET = uStack12;\n    return param_1;\n}\n",
        "token_count": 219
    },
    "00406be0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406be0(void)\n\n{\n    uint *in_FS_OFFSET;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    uStack4 = 0xffffffff;\n    uStack8 = 0x417a78;\n    uStack12 = *in_FS_OFFSET;\n    *in_FS_OFFSET = &uStack12;\n    fcn.00405820();\n    uStack4 = 0;\n    fcn.00406c50();\n    uStack4 = 0xffffffff;\n    fcn.004051c0();\n    fcn.004052a0();\n    *in_FS_OFFSET = uStack12;\n    return;\n}\n",
        "token_count": 146
    },
    "0040b13f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040b13f(uint arg_8h)\n\n{\n    fcn.0040afff(arg_8h, 0, 0);\n    return;\n}\n",
        "token_count": 42
    },
    "0040ca21": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040ca35)\n// WARNING: Removing unreachable block (ram,0x0040ca3b)\n// WARNING: Removing unreachable block (ram,0x0040ca3d)\n\nvoid fcn.0040ca21(void)\n\n{\n    return;\n}\n",
        "token_count": 66
    },
    "00413c20": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2",
            "parse PE header/27dc37a2d08e4034aa7bcaa8b888b251",
            "execute .NET assembly via CLR host/2c9ef85a2fe94af39efaaae3fc9e6a8a",
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.00413c20(void)\n\n{\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    \n    *0xbb5f48 = 0x6b;\n    *0xbb5f4c = 0x72;\n    uStack136 = 0xbb5f48;\n    *0xbb5f54 = 0x320033;\n    *0xbb5f5c = 0x6c006c;\n    *0xbb5f4e = 0x6e;\n    *0xbb5f50 = 0x6c0065;\n    *0xbb5f58 = 0x64002e;\n    *0xbb5f4a = 0x65;\n    *0xbb5f60 = 0;\n    uStack140 = 0x413c90;\n    *0xbb2fac = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n    uStack104 = 0x605fdad6;\n    uStack48 = 0x3e1d73b5;\n    uStack116 = 0x748a784f;\n    uStack32 = 0x406ee06d;\n    uStack40 = 0x792cf4fa;\n    uStack28 = 0x1681d686;\n    uStack132 = 0x7f744a26;\n    uStack92 = 0x108aa678;\n    uStack64 = 0x2e8d3777;\n    uStack52 = 0x14922f4a;\n    uStack88 = 0x7cab3473;\n    uStack72 = 0x6cac10f2;\n    uStack12 = 0x51eed42d;\n    uStack96 = 0x71cc1e05;\n    uStack16 = 0x17a9a17f;\n    uStack36 = 0xb5fde22;\n    uStack44 = 0x22efe4df;\n    uStack20 = 0xee8079d;\n    uStack60 = 0x2783b42c;\n    uStack120 = 0x77340acd;\n    uStack24 = 0x249a0894;\n    uStack100 = 0x7ded3f3b;\n    uStack124 = 0xd271138d;\n    uStack84 = 0x6df36692;\n    uStack8 = 0x6ce68e74;\n    uStack128 = 0x68f0afd9;\n    uStack112 = 0x1b7f9e8e;\n    uStack80 = 0xd4344e33;\n    uStack76 = 0x9be5cfa;\n    uStack68 = 0x12698b6f;\n    uStack56 = 0xc67ffdbb;\n    uStack108 = 0xfc4e5034;\n    uStack140 = 0x815e40;\n    *0x815e4b = 0x65;\n    *0x815e41 = 0x75747269;\n    *0x815e45 = 0x6c61;\n    *0x815e40 = 0x56;\n    *0x815e4c = 0x7463;\n    *0x815e4e = 0;\n    *0x815e47 = 0x746f7250;\n    uStack144 = *0xbb2fac;\n    *0x81abd4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)();\n    (**0x81abd4)(*0xbb2fa4, *0xbb5f44, 0x40, &stack0xffffff70);\n    return;\n}\n",
        "token_count": 1009
    },
    "004140b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004140b0(void)\n\n{\n    return;\n}\n",
        "token_count": 16
    },
    "004140d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004140d0(void)\n\n{\n    int32_t unaff_ESI;\n    \n    fcn.00413770();\n    if (*0xbb5f44 == 0x37) {\n        (*_sym.imp.KERNEL32.dll_GetDriveTypeW)();\n        (*_sym.imp.KERNEL32.dll_GetNamedPipeHandleStateA)();\n        (*_sym.imp.KERNEL32.dll_DeleteFileA)();\n        (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)();\n        (*_sym.imp.KERNEL32.dll_RemoveDirectoryW)();\n        (*_sym.imp.KERNEL32.dll_GetPrivateProfileIntW)();\n        (*_sym.imp.KERNEL32.dll_SetTapePosition)();\n        (*_sym.imp.KERNEL32.dll_GetConsoleWindow)();\n        (*_sym.imp.KERNEL32.dll_FindNextVolumeMountPointW)();\n    }\n    *(*0xbb2fa4 + unaff_ESI) = *(*0xbb6b28 + 0x38d6 + unaff_ESI);\n    return;\n}\n",
        "token_count": 212
    },
    "00414180": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414180(void)\n\n{\n    int32_t *in_EAX;\n    \n    *in_EAX = *in_EAX + 0x61c88647;\n    return;\n}\n",
        "token_count": 44
    },
    "00406ba0": {
        "rules": [
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a",
            "enumerate PE sections/0325759584d940e7b69154ed16836be2"
        ],
        "decompiled_code": "\nvoid fcn.00406ba0(void)\n\n{\n    int32_t unaff_ESI;\n    \n    *(unaff_ESI + 0x10) = unaff_ESI + 8;\n    *(unaff_ESI + 0x14) = unaff_ESI + 0xc;\n    *(unaff_ESI + 0x20) = unaff_ESI + 0x18;\n    *(unaff_ESI + 0x24) = unaff_ESI + 0x1c;\n    *(unaff_ESI + 0x30) = unaff_ESI + 0x28;\n    *(unaff_ESI + 0x34) = unaff_ESI + 0x2c;\n    fcn.004068c0();\n    fcn.00406850();\n    return;\n}\n",
        "token_count": 180
    },
    "0040a7c0": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.0040a7c0(int32_t arg_8h)\n\n{\n    if ((arg_8h != 0) && (*(arg_8h + -8) == 0xdddd)) {\n        fcn.00407ecd(arg_8h + -8);\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "00413be1": {
        "rules": [
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00413be1(void)\n\n{\n    *0x41b050 = (*_sym.imp.KERNEL32.dll_CreateFileW)(0x403ebc, 0x40000000, 3, 0, 3, 0, 0);\n    return;\n}\n",
        "token_count": 64
    },
    "0040ba83": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid __cdecl fcn.0040ba83(uint arg_8h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t *arg_8h_00;\n    int32_t *piVar3;\n    int32_t *piVar4;\n    int32_t unaff_EBP;\n    uint var_1ch;\n    uint var_4h;\n    \n    fcn.0040b420(0x4182a0, 0xc);\n    fcn.0040f557(0xe);\n    *(unaff_EBP + -4) = 0;\n    arg_8h_00 = *0x81581c;\n    iVar1 = *(unaff_EBP + 8);\n    iVar2 = *(iVar1 + 4);\n    if (iVar2 != 0) {\n        piVar3 = 0x815818;\n        do {\n            piVar4 = piVar3;\n            *(unaff_EBP + -0x1c) = arg_8h_00;\n            if (arg_8h_00 == NULL) goto code_r0x0040bac7;\n            piVar3 = arg_8h_00;\n        } while (*arg_8h_00 != iVar2);\n        piVar4[1] = arg_8h_00[1];\n        fcn.00407ecd(arg_8h_00);\ncode_r0x0040bac7:\n        fcn.00407ecd(*(iVar1 + 4));\n        *(iVar1 + 4) = 0;\n    }\n    *(unaff_EBP + -4) = 0xfffffffe;\n    fcn.0040baea();\n    fcn.0040b465();\n    return;\n}\n",
        "token_count": 395
    },
    "00407f9b": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00407f9b(uint lpFileName)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(lpFileName);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n        fcn.0040856a(iVar1);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 119
    },
    "00407fcb": {
        "rules": [
            "delete file"
        ],
        "decompiled_code": "\nuint fcn.00407fcb(uint param_1)\n\n{\n    int32_t iVar1;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_DeleteFileA)(param_1);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n    }\n    else {\n        iVar1 = 0;\n    }\n    if (iVar1 != 0) {\n        fcn.0040856a(iVar1);\n        return 0xffffffff;\n    }\n    return 0;\n}\n",
        "token_count": 118
    }
}