{
    "00401000": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00401000(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int32_t iVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint var_5ch;\n    uint var_1ch;\n    int32_t var_18h;\n    int32_t var_10h;\n    uint var_ch;\n    uint32_t var_8h;\n    \n    // [00] -r-x section size 28672 named .text\n    iVar3 = *0x434ed0;\n    if (arg_ch == 0xf) {\n        uVar4 = (*_sym.imp.USER32.dll_BeginPaint)(arg_8h, &var_5ch);\n        var_ch = 0;\n        (*_sym.imp.USER32.dll_GetClientRect)(arg_8h, &var_1ch);\n        iVar5 = var_10h;\n        pcVar2 = _sym.imp.GDI32.dll_DeleteObject;\n        var_10h = 0;\n        for (; var_18h < iVar5; var_18h = var_18h + 4) {\n            iVar7 = iVar5 - var_18h;\n            var_8h = CONCAT11((*(iVar3 + 0x52) * iVar7 + *(iVar3 + 0x56) * var_18h) / iVar5, \n                              (*(iVar3 + 0x51) * iVar7 + *(iVar3 + 0x55) * var_18h) / iVar5) << 8 |\n                     (*(iVar3 + 0x50) * iVar7 + *(iVar3 + 0x54) * var_18h) / iVar5 & 0xffU;\n            uVar6 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_ch);\n            var_10h = var_10h + 4;\n            (*_sym.imp.USER32.dll_FillRect)(uVar4, &var_1ch, uVar6);\n            (*pcVar2)(uVar6);\n        }\n        if (*(iVar3 + 0x58) != -1) {\n            iVar5 = (*_sym.imp.GDI32.dll_CreateFontIndirectW)(*(iVar3 + 0x34));\n            if (iVar5 != 0) {\n                var_1ch = 0x10;\n                var_18h = 8;\n                (*_sym.imp.GDI32.dll_SetBkMode)(uVar4, 1);\n                (*_sym.imp.GDI32.dll_SetTextColor)(uVar4, *(iVar3 + 0x58));\n                pcVar1 = _sym.imp.GDI32.dll_SelectObject;\n                uVar6 = (*_sym.imp.GDI32.dll_SelectObject)(uVar4, iVar5);\n                (*_sym.imp.USER32.dll_DrawTextW)(uVar4, 0x433ec0, 0xffffffff, &var_1ch, 0x820);\n                (*pcVar1)(uVar4, uVar6);\n                (*pcVar2)(iVar5);\n            }\n        }\n        (*_sym.imp.USER32.dll_EndPaint)(arg_8h, &var_5ch);\n        uVar4 = 0;\n    }\n    else {\n        if (arg_ch == 0x46) {\n            *(arg_14h + 0x18) = *(arg_14h + 0x18) | 0x10;\n            *(arg_14h + 4) = *0x434ec8;\n        }\n        uVar4 = (*_sym.imp.USER32.dll_DefWindowProcW)(arg_8h, arg_ch, arg_10h, arg_14h);\n    }\n    return uVar4;\n}\n",
        "token_count": 849
    },
    "00401434": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint32_t * __cdecl fcn.00401434(int32_t **hWndChildAfter)\n\n{\n    uint32_t *puVar1;\n    int16_t iVar2;\n    uint32_t uVar3;\n    int16_t *piVar4;\n    int16_t *piVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    uint uVar8;\n    int32_t **ppiVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    int32_t *piVar12;\n    int32_t iVar13;\n    int32_t **ppiVar14;\n    uint uVar15;\n    int32_t **ppiVar16;\n    uint *puVar17;\n    bool bVar18;\n    uint in_stack_fffffce8;\n    uint in_stack_fffffcec;\n    uint uVar19;\n    uint uVar20;\n    uint lpFindFileData;\n    uint *puStack684;\n    uint *puStack680;\n    uint uStack672;\n    int32_t iStack668;\n    int32_t **ppiStack664;\n    uint var_280h;\n    int32_t lpFileOp;\n    uint var_58h;\n    int32_t var_54h;\n    int32_t lpRect;\n    uint var_4ch;\n    int32_t var_48h;\n    uint lDistanceToMove;\n    ushort uStack68;\n    uint32_t var_3ch;\n    int32_t lpNumberOfBytesWritten;\n    int32_t lpFileName;\n    int32_t *var_30h;\n    int32_t *var_2ch;\n    int32_t *dwFileAttributes;\n    int32_t *var_24h;\n    int32_t *nNumberOfBytesToRead;\n    int32_t *var_1ch;\n    int32_t *var_18h;\n    int32_t **lptstrFilename;\n    int32_t **lpBuffer;\n    int32_t lpString2;\n    int32_t *nNumberOfBytesToWrite;\n    int32_t *var_4h;\n    \n    ppiVar9 = *0x40cd9c;\n    pcVar6 = _sym.imp.USER32.dll_ShowWindow;\n    lpString2 = *0x434ec8;\n    *0x40cd98 = &fcn.00401434::var_2ch;\n    ppiVar16 = hWndChildAfter;\n    ppiVar14 = &fcn.00401434::var_30h;\n    for (iVar13 = 7; iVar13 != 0; iVar13 = iVar13 + -1) {\n        *ppiVar14 = *ppiVar16;\n        ppiVar16 = ppiVar16 + 1;\n        ppiVar14 = ppiVar14 + 1;\n    }\n    iVar13 = var_2ch * 0x800;\n    uVar15 = 0;\n    ppiVar16 = iVar13 + 0x435000;\n    ppiVar14 = dwFileAttributes * 0x800 + 0x435000;\n    var_4h = NULL;\n    if (0x43 < var_30h - 2U) goto code_r0x004029c7;\n    // switch table (68 cases) at 0x4029d9\n    lpBuffer = ppiVar14;\n    switch(*((var_30h - 2U) * 4 + 0x4029d9)) {\n    case 0x401491:\ncode_r0x00401493:\n        fcn.004050ae(in_stack_fffffce8, in_stack_fffffcec);\n        return 0x7fffffff;\n    case 0x40149d:\n        *0x433e8c = *0x433e8c + 1;\n        if (lpString2 == 0) {\n            return 0x7fffffff;\n        }\n        (*_sym.imp.USER32.dll_PostQuitMessage)(0);\n        return 0x7fffffff;\n    case 0x4014b8:\n        iVar13 = fcn.0040136d(var_2ch);\n        piVar12 = fcn.00401389(iVar13 + -1, 0);\n        return piVar12;\n    case 0x4014cb:\n        fcn.004050ae(var_2ch, 0);\n        break;\n    case 0x4014d7:\n        iVar13 = fcn.00402b1d(0);\n        if (iVar13 < 2) {\n            iVar13 = 1;\n        }\n        (*_sym.imp.KERNEL32.dll_Sleep)(iVar13);\n        break;\n    case 0x4014f1:\n        (*_sym.imp.USER32.dll_SetForegroundWindow)(lpString2);\n        break;\n    case 0x4014ff:\n        iVar13 = var_2ch * 4;\n        if (var_24h == NULL) {\n            *(iVar13 + 0x434f80) = *(iVar13 + 0x434f40);\n            uVar15 = fcn.00402b1d(1);\n            *(var_2ch * 4 + 0x434f40) = uVar15;\n        }\n        else {\n            *(iVar13 + 0x434f40) = *(iVar13 + 0x434f80);\n        }\n        break;\n    case 0x40153a:\n        puVar1 = var_24h * 4 + 0x434f40;\n        uVar10 = *puVar1;\n        piVar12 = (&fcn.00401434::var_2ch)[uVar10 == 0];\n        *puVar1 = uVar10 & nNumberOfBytesToRead;\n        return piVar12;\n    case 0x40155b:\n        goto code_r0x0040296d;\n    case 0x40156b:\n        if (*0x433e90 != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x433e90, dwFileAttributes);\n        }\n        if (*0x433ea4 != 0) {\n            (*pcVar6)(*0x433ea4, var_2ch);\n        }\n        break;\n    case 0x40159b:\n        uVar15 = fcn.00402b3a(0xfffffff0);\n        iVar13 = (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(uVar15, dwFileAttributes);\n        goto code_r0x004015ac;\n    case 0x4015b9:\n        hWndChildAfter = fcn.00402b3a(0xfffffff0);\n        piVar4 = fcn.004058fa(hWndChildAfter);\n        if (piVar4 != NULL) {\n            do {\n                piVar4 = fcn.0040587c(piVar4, 0x5c);\n                iVar2 = *piVar4;\n                *piVar4 = 0;\n                iVar13 = (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(hWndChildAfter, 0);\n                if ((iVar13 == 0) &&\n                   ((iVar13 = (*_sym.imp.KERNEL32.dll_GetLastError)(),  iVar13 != 0xb7 ||\n                    (uVar10 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(hWndChildAfter),  (uVar10 & 0x10) == 0)))) {\n                    var_4h = var_4h + 1;\n                }\n                *piVar4 = iVar2;\n                piVar4 = piVar4 + 1;\n            } while (iVar2 != 0);\n        }\n        if (dwFileAttributes == NULL) goto code_r0x00402192;\n        fcn.00401423(0xffffffe6);\n        fcn.00405e04(0x440000, hWndChildAfter);\n        iVar13 = (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(hWndChildAfter);\n        if (iVar13 == 0) {\n            var_4h = var_4h + 1;\n        }\n        break;\n    case 0x40164d:\n        uVar15 = fcn.00402b3a(0);\n        iVar13 = fcn.00406147(uVar15);\n        nNumberOfBytesToRead = dwFileAttributes;\n        goto joined_r0x004019ee;\n    case 0x40165e:\n        uVar15 = fcn.00402b3a(0xffffffd0);\n        uVar19 = fcn.00402b3a(0xffffffdf);\n        fcn.00402b3a(0x13);\n        iVar13 = (*_sym.imp.KERNEL32.dll_MoveFileW)(uVar15, uVar19);\n        if (iVar13 == 0) {\n            if ((var_24h == NULL) || (iVar13 = fcn.00406147(uVar15),  iVar13 == 0)) goto code_r0x00402793;\n            fcn.00405c9e(uVar15, uVar19);\n        }\n        goto code_r0x00402192;\n    case 0x4016af:\n        ppiVar16 = fcn.00402b3a(0);\n        ppiVar9 = lpBuffer;\n        iVar13 = (*_sym.imp.KERNEL32.dll_GetFullPathNameW)(ppiVar16, 0x400, lpBuffer, &fcn.00401434::hWndChildAfter);\n        if (iVar13 == 0) {\ncode_r0x004016f3:\n            var_4h = 0x1;\n            *ppiVar9 = 0;\n        }\n        else if ((ppiVar16 < hWndChildAfter) && (*hWndChildAfter != 0)) {\n            iVar13 = fcn.00406147(ppiVar16);\n            if (iVar13 == 0) goto code_r0x004016f3;\n            fcn.00405e04(hWndChildAfter, iVar13 + 0x2c);\n        }\n        if (var_24h == NULL) {\n            (*_sym.imp.KERNEL32.dll_GetShortPathNameW)(ppiVar9, ppiVar9, 0x400);\n        }\n        break;\n    case 0x401718:\n        uVar15 = fcn.00402b3a(0xffffffff);\n        iVar13 = (*_sym.imp.KERNEL32.dll_SearchPathW)(0, uVar15, 0, 0x400, ppiVar16, &fcn.00401434::hWndChildAfter);\n        bVar18 = iVar13 == 0;\n        goto code_r0x00401734;\n    case 0x40173f:\n        uVar15 = fcn.00402b3a(0xffffffef);\n        iVar13 = fcn.00405a9f(ppiVar16, uVar15);\n        goto code_r0x004015ac;\n    case 0x401752:\n        lpString2 = fcn.00402b3a(0x31);\n        hWndChildAfter = var_2ch & 7;\n        iVar13 = fcn.004058c6(lpString2);\n        if (iVar13 == 0) {\n            uVar19 = 0x440000;\n            uVar15 = fcn.00405e04(0x40a598, 0x440000, lpString2);\n            uVar15 = fcn.0040584f(uVar15);\n            sub.KERNEL32.dll_lstrcatW(uVar15);\n        }\n        else {\n            uVar19 = 0x40a598;\n            fcn.00405e04(0x40a598);\n        }\n        fcn.00406098(0x40a598);\n        do {\n            if (2 < hWndChildAfter) {\n                iVar13 = fcn.00406147(0x40a598);\n                uVar10 = 0;\n                if (iVar13 != 0) {\n                    uVar10 = (*_sym.imp.KERNEL32.dll_CompareFileTime)\n                                       (iVar13 + 0x14, &fcn.00401434::nNumberOfBytesToRead);\n                }\n                hWndChildAfter = ((hWndChildAfter - 3U | 0x80000000) & uVar10) == 0;\n            }\n            if (hWndChildAfter == NULL) {\n                fcn.00405a4b(0x40a598);\n            }\n            nNumberOfBytesToWrite = fcn.00405a70(0x40a598, 0x40000000, (hWndChildAfter != 0x1) + '\\x01');\n            if (nNumberOfBytesToWrite != 0xffffffff) {\n                fcn.004050ae(0xffffffea, lpString2);\n                *0x434f74 = *0x434f74 + 1;\n                iVar13 = fcn.00402fa2(var_24h, nNumberOfBytesToWrite, 0, 0);\n                *0x434f74 = *0x434f74 + -1;\n                if ((nNumberOfBytesToRead != 0xffffffff) || (var_1ch != 0xffffffff)) {\n                    (*_sym.imp.KERNEL32.dll_SetFileTime)\n                              (nNumberOfBytesToWrite, &fcn.00401434::nNumberOfBytesToRead, 0, \n                               &fcn.00401434::nNumberOfBytesToRead);\n                }\n                (*_sym.imp.KERNEL32.dll_CloseHandle)(nNumberOfBytesToWrite);\n                if (-1 < iVar13) goto code_r0x004029c7;\n                if (iVar13 == -2) {\n                    uVar8 = 0xffffffe9;\n                    fcn.00405e26(0x40a598, 0xffffffe9);\n                    uVar20 = 0x40a598;\n                    sub.KERNEL32.dll_lstrcatW(uVar19, lpString2, 0x40a598);\n                }\n                else {\n                    uVar8 = 0xffffffee;\n                    uVar20 = 0x40a598;\n                    fcn.00405e26(0x40a598, 0xffffffee);\n                }\n                uVar19 = 0x200010;\n                uVar15 = 0x40a598;\n                goto code_r0x00402239;\n            }\n            if (hWndChildAfter != NULL) {\n                fcn.004050ae(0xffffffe2, lpString2);\n                bVar18 = hWndChildAfter == 0x2;\n                goto code_r0x004015ae;\n            }\n            fcn.00405e04(0x40b598, 0x435000);\n            fcn.00405e04(0x435000, 0x40a598);\n            fcn.00405e26(0x40ad98, var_18h);\n            fcn.00405e04(0x435000, 0x40b598);\n            iVar13 = fcn.004055e0();\n        } while (iVar13 == 4);\n        if (iVar13 != 5) {\n            in_stack_fffffcec = 0x40a598;\n            in_stack_fffffce8 = 0xfffffffa;\n            goto code_r0x00401493;\n        }\n        *0x434f48 = *0x434f48 + 1;\n        goto code_r0x004029d0;\n    case 0x4018ef:\n        uVar15 = 0;\n        goto code_r0x00401926;\n    case 0x4018f2:\n        uVar15 = fcn.00402b3a(0x31);\n        piVar12 = fcn.004055e0(uVar15, var_2ch);\n        if (piVar12 == NULL) goto code_r0x00402793;\n        if (piVar12 == var_24h) {\n            return nNumberOfBytesToRead;\n        }\n        if (piVar12 == var_1ch) {\n            return var_18h;\n        }\n        break;\n    case 0x401924:\n        uVar15 = 0xfffffff0;\ncode_r0x00401926:\n        uVar15 = fcn.00402b3a(uVar15);\n        fcn.0040568c(uVar15, dwFileAttributes);\n        break;\n    case 0x401939:\n        uVar15 = fcn.00402b3a(1);\n        sub.KERNEL32.dll_lstrlenW(uVar15);\n        goto code_r0x0040296d;\n    case 0x40194b:\n        hWndChildAfter = fcn.00402b1d(2);\n        iVar13 = fcn.00402b1d(3);\n        nNumberOfBytesToWrite = fcn.00402b3a(1);\n        *ppiVar16 = 0;\n        if (((var_24h == NULL) || (hWndChildAfter != NULL)) &&\n           ((iVar11 = sub.KERNEL32.dll_lstrlenW(nNumberOfBytesToWrite),  -1 < iVar13 ||\n            (iVar13 = iVar13 + iVar11,  -1 < iVar13)))) {\n            if (iVar11 < iVar13) {\n                iVar13 = iVar11;\n            }\n            fcn.00405e04(ppiVar16, nNumberOfBytesToWrite + iVar13 * 2);\n            iVar13 = hWndChildAfter;\n            if (hWndChildAfter != NULL) {\n                if (hWndChildAfter < 0) {\n                    iVar11 = sub.KERNEL32.dll_lstrlenW(ppiVar16);\n                    hWndChildAfter = iVar13 + iVar11;\n                    if (hWndChildAfter < 0) {\n                        hWndChildAfter = NULL;\n                    }\n                }\n                if (hWndChildAfter < 0x400) {\n                    *(ppiVar16 + hWndChildAfter * 2) = 0;\n                }\n            }\n        }\n        break;\n    case 0x4019cf:\n        uVar15 = fcn.00402b3a(0x20);\n        uVar19 = fcn.00402b3a(0x31);\n        if (var_1ch == NULL) {\n            iVar13 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)();\n        }\n        else {\n            iVar13 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(uVar15, uVar19);\n        }\n        goto joined_r0x004019ee;\n    case 0x401a00:\n        hWndChildAfter = fcn.00402b3a(1);\n        iVar11 = (*_sym.imp.KERNEL32.dll_ExpandEnvironmentStringsW)(hWndChildAfter, ppiVar16, 0x400);\n        if ((iVar11 == 0) ||\n           ((var_24h != NULL && (iVar11 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(hWndChildAfter, ppiVar16),  iVar11 == 0))))\n        {\n            var_4h = 0x1;\n            *ppiVar16 = 0;\n        }\n        *(iVar13 + 0x4357fe) = 0;\n        break;\n    case 0x401a42:\n        uVar10 = fcn.00402b1d(0);\n        uVar3 = fcn.00402b1d(1);\n        if (var_18h != NULL) {\n            if (uVar10 < uVar3) {\n                return nNumberOfBytesToRead;\n            }\n            if (uVar10 <= uVar3) {\n                return var_24h;\n            }\n            return var_1ch;\n        }\n        if (uVar10 < uVar3) {\n            return nNumberOfBytesToRead;\n        }\n        if (uVar10 <= uVar3) {\n            return var_24h;\n        }\n        return var_1ch;\n    case 0x401a74:\n        fcn.00402b1d(1);\n        iVar13 = fcn.00402b1d(2);\n        if (0xc < nNumberOfBytesToRead) goto code_r0x0040296d;\n    // switch table (13 cases) at 0x402ae9\n        switch(*(nNumberOfBytesToRead * 4 + 0x402ae9)) {\n        case 0x401a95:\n            break;\n        case 0x401a99:\n            break;\n        case 0x401a9d:\n            break;\n        case 0x401aa4:\n            goto joined_r0x00401adf;\n        case 0x401ab1:\n            break;\n        case 0x401ab5:\n            break;\n        case 0x401ab9:\n            break;\n        case 0x401abd:\n            break;\n        case 0x401ac6:\n            break;\n        case 0x401ad0:\n            break;\n        case 0x401add:\njoined_r0x00401adf:\n            if (iVar13 == 0) {\n                var_4h = 0x1;\n            }\n            break;\n        case 0x401af5:\n            break;\n        case 0x401af9:\n        }\n        goto code_r0x0040296d;\n    case 0x401b01:\n        uVar15 = fcn.00402b3a(1);\n        uVar19 = fcn.00402b1d(2);\n        (*_sym.imp.USER32.dll_wsprintfW)(ppiVar16, uVar15, uVar19);\n        break;\n    case 0x401b22:\n        if (var_24h != NULL) {\n            do {\n                var_24h = var_24h - 1;\n                if (ppiVar9 == NULL) goto code_r0x0040222b;\n                ppiVar9 = *ppiVar9;\n            } while (var_24h != NULL);\n            if (ppiVar9 == NULL) goto code_r0x0040222b;\n            puVar17 = 0x40a598;\n            fcn.00405e04(0x40a598, ppiVar9 + 1);\n            ppiVar16 = *0x40cd9c + 1;\n            fcn.00405e04(ppiVar9 + 1, ppiVar16);\n            goto code_r0x004028eb;\n        }\n        if (dwFileAttributes != NULL) {\n            if (*0x40cd9c != NULL) {\n                fcn.00405e04(ppiVar16, *0x40cd9c + 1);\n                *0x40cd9c = *ppiVar9;\n                ppiVar14 = ppiVar16;\n                goto code_r0x00401b92;\n            }\n            goto code_r0x00402793;\n        }\n        ppiVar9 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, 0x804);\n        fcn.00405e26(ppiVar9 + 1, var_2ch);\n        *ppiVar9 = *0x40cd9c;\n        *0x40cd9c = ppiVar9;\n        break;\n    case 0x401bca:\n        uVar15 = fcn.00402b1d(3);\n        lDistanceToMove._0_2_ = uVar15;\n        lDistanceToMove._2_2_ = uVar15 >> 0x10;\n        hWndChildAfter = fcn.00402b1d(4);\n        if ((var_18h & 1) != 0) {\n            uVar15 = fcn.00402b3a(0x33);\n            lDistanceToMove._0_2_ = uVar15;\n            lDistanceToMove._2_2_ = uVar15 >> 0x10;\n        }\n        if ((var_18h & 2) != 0) {\n            hWndChildAfter = fcn.00402b3a(0x44);\n        }\n        if (var_30h == 0x21) {\n            uVar15 = fcn.00402b1d();\n            uVar19 = fcn.00402b1d(2);\n            if (var_18h >> 2 == 0) {\n                nNumberOfBytesToWrite =\n                     (*_sym.imp.USER32.dll_SendMessageW)\n                               (uVar15, uVar19, CONCAT22(lDistanceToMove._2_2_, lDistanceToMove), hWndChildAfter);\n                dwFileAttributes = var_2ch;\n            }\n            else {\n                iVar13 = (*_sym.imp.USER32.dll_SendMessageTimeoutW)\n                                   (uVar15, uVar19, CONCAT22(lDistanceToMove._2_2_, lDistanceToMove), hWndChildAfter, 0\n                                    , var_18h >> 2, &fcn.00401434::nNumberOfBytesToWrite);\n                var_4h = iVar13 == 0;\n                dwFileAttributes = var_2ch;\n            }\n        }\n        else {\n            piVar4 = fcn.00402b3a(1);\n            piVar5 = fcn.00402b3a(0x12);\n            nNumberOfBytesToWrite =\n                 (*_sym.imp.USER32.dll_FindWindowExW)\n                           (CONCAT22(lDistanceToMove._2_2_, lDistanceToMove), hWndChildAfter, -(*piVar4 != 0) & piVar4, \n                            -(*piVar5 != 0) & piVar5);\n            dwFileAttributes = var_2ch;\n        }\njoined_r0x0040271c:\n        if (-1 < dwFileAttributes) goto code_r0x0040296d;\n        break;\n    case 0x401c8e:\n        uVar15 = fcn.00402b1d(0);\n        iVar13 = (*_sym.imp.USER32.dll_IsWindow)(uVar15);\n        nNumberOfBytesToRead = dwFileAttributes;\njoined_r0x004019ee:\n        if (iVar13 == 0) {\n            return var_24h;\n        }\n        return nNumberOfBytesToRead;\n    case 0x401cab:\n        uVar15 = fcn.00402b1d(2);\n        uVar15 = fcn.00402b1d(1, uVar15);\n        (*_sym.imp.USER32.dll_GetDlgItem)(uVar15);\n        goto code_r0x0040296d;\n    case 0x401cc6:\n        uVar15 = fcn.00402b1d(0, 0xffffffeb, *0x434f08 + dwFileAttributes);\n        (*_sym.imp.USER32.dll_SetWindowLongW)(uVar15);\n        break;\n    case 0x401ce5:\n        uVar15 = (*_sym.imp.USER32.dll_GetDlgItem)(lpString2, dwFileAttributes);\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar15, &fcn.00401434::lpRect);\n        uVar19 = fcn.00402b3a(0, 0, var_48h * var_24h, CONCAT22(lDistanceToMove._2_2_, lDistanceToMove) * var_24h, 0x10)\n        ;\n        uVar19 = (*_sym.imp.USER32.dll_LoadImageW)(0, uVar19);\n        iVar13 = (*_sym.imp.USER32.dll_SendMessageW)(uVar15, 0x172, 0, uVar19);\n        if (iVar13 != 0) {\n            (*_sym.imp.GDI32.dll_DeleteObject)(iVar13);\n        }\n        break;\n    case 0x401d41:\n        uVar15 = (*_sym.imp.USER32.dll_GetDC)(lpString2);\n        uVar19 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar15, 0x5a, 0x48);\n        uVar19 = fcn.00402b1d(2, uVar19);\n        *0x40cda0 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar19);\n        *0x40cda0 = -*0x40cda0;\n        (*_sym.imp.USER32.dll_ReleaseDC)(lpString2, uVar15);\n        *0x40cdb0 = fcn.00402b1d(3);\n        *0x40cdb4 = var_1ch & 1;\n        *0x40cdb7 = 1;\n        *0x40cdb5 = var_1ch & 2;\n        *0x40cdb6 = var_1ch & 4;\n        fcn.00405e26(0x40cdbc, dwFileAttributes);\n        (*_sym.imp.GDI32.dll_CreateFontIndirectW)(0x40cda0);\ncode_r0x0040296d:\n        fcn.00405d4b(ppiVar16);\n        break;\n    case 0x401dc7:\n        uVar15 = fcn.00402b1d(0);\n        uVar19 = fcn.00402b1d(1);\n        if (nNumberOfBytesToRead == NULL) {\n            (*_sym.imp.USER32.dll_ShowWindow)();\n        }\n        else {\n            (*_sym.imp.USER32.dll_EnableWindow)(uVar15, uVar19);\n        }\n        break;\n    case 0x401df3:\n        piVar4 = fcn.00402b3a(0);\n        uVar15 = fcn.00402b3a(0x31);\n        piVar5 = fcn.00402b3a(0x22);\n        fcn.00402b3a(0x15);\n        fcn.00401423(0xffffffec);\n        iVar13 = (*_sym.imp.SHELL32.dll_ShellExecuteW)\n                           (lpString2, -(*piVar4 != 0) & piVar4, uVar15, -(*piVar5 != 0) & piVar5, 0x440000, \n                            nNumberOfBytesToRead);\n        if (iVar13 < 0x21) goto code_r0x00402793;\n        break;\n    case 0x401e51:\n        uVar15 = fcn.00402b3a(0);\n        uVar19 = 0xffffffeb;\n        fcn.004050ae(0xffffffeb, uVar15);\n        hWndChildAfter = fcn.0040557f(uVar15);\n        pcVar6 = _sym.imp.KERNEL32.dll_WaitForSingleObject;\n        if (hWndChildAfter == NULL) goto code_r0x00402793;\n        ppiVar9 = hWndChildAfter;\n        if (var_24h != NULL) {\n            iVar13 = (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(hWndChildAfter, 100);\n            while (iVar13 == 0x102) {\n                fcn.004061a7(0xf);\n                iVar13 = (*pcVar6)(hWndChildAfter, 100);\n            }\n            (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(hWndChildAfter, &fcn.00401434::nNumberOfBytesToWrite);\n            if (dwFileAttributes < 0) {\n                ppiVar9 = hWndChildAfter;\n                if (nNumberOfBytesToWrite != NULL) {\n                    var_4h = 0x1;\n                }\n            }\n            else {\n                fcn.00405d4b(uVar19, nNumberOfBytesToWrite, lpBuffer);\n                ppiVar9 = hWndChildAfter;\n            }\n        }\ncode_r0x00401ec9:\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(ppiVar9);\n        break;\n    case 0x401ed4:\n        uVar15 = fcn.00402b3a(2);\n        iVar13 = fcn.00406147(uVar15);\n        if (iVar13 != 0) {\n            fcn.00405d4b(lpBuffer, *(iVar13 + 0x14));\n            goto code_r0x0040296d;\n        }\n        *ppiVar16 = 0;\n        *lpBuffer = 0;\n        goto code_r0x00402793;\n    case 0x401f08:\n        lptstrFilename = fcn.00402b3a(0xffffffee);\n        iStack668 = sub.VERSION.dll_GetFileVersionInfoSizeW(lptstrFilename, &fcn.00401434::lpFileName);\n        *ppiVar16 = 0;\n        *lpBuffer = 0;\n        var_4h = 0x1;\n        if ((iStack668 != 0) &&\n           (hWndChildAfter = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, iStack668),  hWndChildAfter != NULL)) {\n            uStack672 = 0;\n            puStack680 = 0x401f55;\n            ppiVar14 = lptstrFilename;\n            ppiStack664 = hWndChildAfter;\n            iVar13 = sub.VERSION.dll_GetFileVersionInfoW();\n            ppiVar9 = hWndChildAfter;\n            if (iVar13 != 0) {\n                puStack680 = &fcn.00401434::lptstrFilename;\n                puStack684 = &fcn.00401434::nNumberOfBytesToWrite;\n                lpFindFileData = 0x40a014;\n                ppiVar14 = hWndChildAfter;\n                iVar13 = sub.VERSION.dll_VerQueryValueW();\n                ppiVar9 = hWndChildAfter;\n                if (iVar13 != 0) {\n                    fcn.00405d4b(ppiVar16, nNumberOfBytesToWrite[2]);\n                    ppiVar14 = lpBuffer;\n                    fcn.00405d4b(lpBuffer, nNumberOfBytesToWrite[3]);\n                    var_4h = NULL;\n                    ppiVar9 = hWndChildAfter;\n                }\n            }\ncode_r0x00401b92:\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(ppiVar9, ppiVar14);\n        }\n        break;\n    case 0x401f97:\n        var_4h = 0x1;\n        if (-1 < *0x434f78) {\n            uVar15 = fcn.00402b3a(0xfffffff0);\n            nNumberOfBytesToWrite = fcn.00402b3a(1);\n            if (((var_1ch != NULL) &&\n                (hWndChildAfter = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)(uVar15),  hWndChildAfter != NULL)) ||\n               (hWndChildAfter = (*_sym.imp.KERNEL32.dll_LoadLibraryExW)(uVar15, 0, 8),  hWndChildAfter != NULL)) {\n                pcVar6 = fcn.004061da(hWndChildAfter, nNumberOfBytesToWrite);\n                if (pcVar6 == NULL) {\n                    fcn.004050ae(0xfffffff7, nNumberOfBytesToWrite);\n                }\n                else {\n                    var_4h = NULL;\n                    if (var_24h == NULL) {\n                        (*pcVar6)(lpString2, 0x400, 0x435000, 0x40cd9c, 0x40a000);\n                    }\n                    else {\n                        fcn.00401423(var_24h);\n                        iVar13 = (*pcVar6)();\n                        if (iVar13 != 0) {\n                            var_4h = 0x1;\n                        }\n                    }\n                }\n                if ((nNumberOfBytesToRead == NULL) && (iVar13 = fcn.0040377b(hWndChildAfter),  iVar13 != 0)) {\n                    (*_sym.imp.KERNEL32.dll_FreeLibrary)(hWndChildAfter);\n                }\n                break;\n            }\n        }\n        goto code_r0x00402192;\n    case 0x40206a:\n        uVar15 = fcn.00402b3a(0xfffffff0);\n        lDistanceToMove._0_2_ = uVar15;\n        lDistanceToMove._2_2_ = uVar15 >> 0x10;\n        uVar15 = fcn.00402b3a(0xffffffdf);\n        lpFileName = fcn.00402b3a(2);\n        lptstrFilename = fcn.00402b3a(0xffffffcd);\n        lpNumberOfBytesWritten = fcn.00402b3a(0x45);\n        iVar13 = fcn.004058c6(uVar15);\n        if (iVar13 == 0) {\n            fcn.00402b3a(0x21);\n        }\n        iVar13 = (*_sym.imp.ole32.dll_CoCreateInstance)(0x408580, 0, 1, 0x408570, &fcn.00401434::hWndChildAfter);\n        if (-1 < iVar13) {\n            iVar13 = (***hWndChildAfter)(hWndChildAfter, 0x408590, &fcn.00401434::nNumberOfBytesToWrite);\n            if (-1 < iVar13) {\n                iVar13 = (*(*hWndChildAfter)[0x14])(hWndChildAfter, uVar15);\n                if ((var_1ch & 0x8000) == 0) {\n                    (*(*hWndChildAfter)[9])(hWndChildAfter, 0x440000);\n                }\n                uVar10 = var_1ch >> 8 & 0x7f;\n                if (uVar10 != 0) {\n                    (*(*hWndChildAfter)[0xf])(hWndChildAfter, uVar10);\n                }\n                (*(*hWndChildAfter)[0xd])(hWndChildAfter, var_1ch >> 0x10);\n                if (*lptstrFilename != 0) {\n                    (*(*hWndChildAfter)[0x11])(hWndChildAfter, lptstrFilename, var_1ch & 0xff);\n                }\n                (*(*hWndChildAfter)[0xb])(hWndChildAfter, lpFileName);\n                (*(*hWndChildAfter)[7])(hWndChildAfter, lpNumberOfBytesWritten);\n                if (-1 < iVar13) {\n                    iVar13 = (**(*nNumberOfBytesToWrite + 0x18))\n                                       (nNumberOfBytesToWrite, CONCAT22(lDistanceToMove._2_2_, lDistanceToMove), 1);\n                }\n                (**(*nNumberOfBytesToWrite + 8))(nNumberOfBytesToWrite);\n            }\n            (*(*hWndChildAfter)[2])(hWndChildAfter);\n            if (-1 < iVar13) goto code_r0x00402192;\n        }\n        var_4h = 0x1;\n        goto code_r0x00402192;\n    case 0x4021a0:\n        iVar13 = fcn.00402b3a(0);\n        iVar11 = fcn.00402b3a(0x11);\n        hWndChildAfter = fcn.00402b3a(0x23);\n        iVar7 = fcn.00406147(iVar13);\n        if (iVar7 != 0) {\n            lpFileOp = lpString2;\n            var_58h = 2;\n            iVar7 = sub.KERNEL32.dll_lstrlenW(iVar13);\n            *(iVar13 + 2 + iVar7 * 2) = 0;\n            iVar7 = sub.KERNEL32.dll_lstrlenW(iVar11);\n            *(iVar11 + 2 + iVar7 * 2) = 0;\n            lDistanceToMove._2_2_ = SUB42(hWndChildAfter, 0);\n            uStack68 = hWndChildAfter >> 0x10;\n            var_4ch._0_2_ = var_24h._0_2_;\n            var_54h = iVar13;\n            lpRect = iVar11;\n            fcn.004050ae(0, hWndChildAfter);\n            iVar13 = (*_sym.imp.SHELL32.dll_SHFileOperationW)(&fcn.00401434::lpFileOp);\n            if (iVar13 == 0) break;\n        }\n        fcn.004050ae(0xfffffff9, 0);\n        goto code_r0x00402793;\n    case 0x402224:\n        if (var_2ch != 0xbadf00d) {\ncode_r0x0040222b:\n            uVar8 = 0x200010;\n            uVar20 = 0xffffffe8;\n            uVar19 = 0;\n            uVar15 = fcn.00405e26(0, 0xffffffe8);\ncode_r0x00402239:\n            fcn.004055e0(uVar15, uVar19, uVar20, uVar8);\n            return 0x7fffffff;\n        }\n        *0x434f54 = *0x434f54 + 1;\n        break;\n    case 0x402253:\n        uVar19 = 0;\n        uVar20 = 0;\n        if (var_2ch != NULL) {\n            uVar19 = fcn.00402b3a(0);\n        }\n        if (dwFileAttributes != NULL) {\n            uVar20 = fcn.00402b3a(0x11);\n        }\n        if (var_1ch != NULL) {\n            uVar15 = fcn.00402b3a(0x22);\n        }\n        uVar8 = fcn.00402b3a(0xffffffcd);\n        iVar13 = (*_sym.imp.KERNEL32.dll_WritePrivateProfileStringW)(uVar19, uVar20, uVar15, uVar8);\ncode_r0x004015ac:\n        bVar18 = iVar13 == 0;\ncode_r0x004015ae:\n        if (bVar18) goto code_r0x00402793;\n        break;\n    case 0x402295:\n        hWndChildAfter = *0x40a010;\n        uVar15 = fcn.00402b3a(1);\n        nNumberOfBytesToWrite = fcn.00402b3a(0x12);\n        uVar19 = fcn.00402b3a(0xffffffdd);\n        (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringW)\n                  (uVar15, nNumberOfBytesToWrite, &fcn.00401434::hWndChildAfter, ppiVar16, 0x3ff, uVar19);\n        bVar18 = *ppiVar16 == 10;\ncode_r0x00401734:\n        if (bVar18) {\ncode_r0x00402761:\n            var_4h = 0x1;\n            *ppiVar16 = 0;\n        }\n        break;\n    case 0x4022d5:\n        if (var_1ch == NULL) {\n            iVar11 = fcn.00402c44(2);\n            if (iVar11 == 0) goto code_r0x00402793;\n            uVar15 = fcn.00402b3a(0x33);\n            iVar13 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueW)(iVar11, uVar15);\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(iVar11);\n        }\n        else {\n            uVar15 = fcn.00402b3a(0x22);\n            uVar19 = fcn.00402c2f(dwFileAttributes, uVar15, var_1ch & 2);\n            iVar13 = fcn.00402b7a(uVar19, dwFileAttributes, uVar15);\n        }\n        if (iVar13 != 0) goto code_r0x00402793;\n        break;\n    case 0x402331:\n        uVar15 = fcn.00402c2f(var_2ch);\n        nNumberOfBytesToWrite = var_18h;\n        lptstrFilename = fcn.00402b3a(2);\n        uVar19 = fcn.00402b3a(0x11);\n        var_4h = 0x1;\n        piVar12 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExW)\n                            (uVar15, uVar19, 0, 0, 0, *0x434f70 | 2, 0, &fcn.00401434::hWndChildAfter, 0);\n        if (piVar12 == NULL) {\n            if (var_1ch == 0x1) {\n                fcn.00402b3a(0x23);\n                iVar13 = sub.KERNEL32.dll_lstrlenW(0x40b598);\n                piVar12 = iVar13 * 2 + 2;\n            }\n            if (var_1ch == 0x4) {\n                *0x40b598 = fcn.00402b1d(3);\n                piVar12 = var_1ch;\n            }\n            if (var_1ch == 0x3) {\n                piVar12 = fcn.00402fa2(nNumberOfBytesToRead, 0, 0x40b598, 0x1800);\n            }\n            iVar13 = (*_sym.imp.ADVAPI32.dll_RegSetValueExW)\n                               (hWndChildAfter, lptstrFilename, 0, nNumberOfBytesToWrite, 0x40b598, piVar12);\n            ppiVar9 = hWndChildAfter;\n            if (iVar13 == 0) {\n                var_4h = NULL;\n            }\ncode_r0x004024ac:\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(ppiVar9);\n        }\n        break;\n    case 0x4023e0:\n        ppiVar9 = fcn.00402c44(0x20019);\n        uVar15 = fcn.00402b3a(0x33);\n        *ppiVar16 = 0;\n        if (ppiVar9 != NULL) {\n            nNumberOfBytesToWrite = 0x800;\n            iVar11 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)\n                               (ppiVar9, uVar15, 0, &fcn.00401434::hWndChildAfter, ppiVar16, \n                                &fcn.00401434::nNumberOfBytesToWrite);\n            if (iVar11 == 0) {\n                if (hWndChildAfter == 0x4) {\n                    var_4h = var_1ch == NULL;\n                    fcn.00405d4b();\n                    goto code_r0x004024ac;\n                }\n                if ((hWndChildAfter == 0x1) || (hWndChildAfter == 0x2)) {\n                    var_4h = var_1ch;\n                    goto code_r0x004024a4;\n                }\n            }\n            *ppiVar16 = 0;\n            var_4h = 0x1;\n            goto code_r0x004024ac;\n        }\n        goto code_r0x00402793;\n    case 0x402454:\n        ppiVar9 = fcn.00402c44(0x20019);\n        uVar15 = fcn.00402b1d(3);\n        *ppiVar16 = 0;\n        if (ppiVar9 != NULL) {\n            hWndChildAfter = 0x3ff;\n            if (var_1ch == NULL) {\n                iVar11 = (*_sym.imp.ADVAPI32.dll_RegEnumValueW)\n                                   (ppiVar9, uVar15, ppiVar16, &fcn.00401434::hWndChildAfter, 0, 0, 0, 0);\n                if (iVar11 != 0) goto code_r0x00402793;\n            }\n            else {\n                (*_sym.imp.ADVAPI32.dll_RegEnumKeyW)(ppiVar9, uVar15, ppiVar16, 0x3ff);\n            }\ncode_r0x004024a4:\n            *(iVar13 + 0x4357fe) = 0;\n            goto code_r0x004024ac;\n        }\n        goto code_r0x00402793;\n    case 0x4024b7:\n        if (*ppiVar16 != 0) {\n            ppiVar9 = fcn.00405d64(ppiVar16);\n            goto code_r0x00401ec9;\n        }\n        break;\n    case 0x4024cc:\n        uVar15 = fcn.00402b3a(0xffffffed);\n        iVar13 = fcn.00405a70(uVar15, dwFileAttributes, var_24h);\n        if (iVar13 != -1) goto code_r0x0040296d;\ncode_r0x00402790:\n        *ppiVar16 = 0;\n        goto code_r0x00402793;\n    case 0x4024ee:\n        if (var_24h == NULL) {\n            if (var_30h == 0x38) {\n                fcn.00402b3a(0x21);\n                (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, 0x40b598, 0xffffffff, 0x40ad98, 0x400, 0, 0);\n                iVar13 = (*_sym.imp.KERNEL32.dll_lstrlenA)(0x40ad98);\n            }\n            else {\n                uVar15 = fcn.00402b3a(0x11);\n                iVar13 = sub.KERNEL32.dll_lstrlenW(uVar15);\n                iVar13 = iVar13 * 2;\n            }\n        }\n        else {\n            *0x40ad98 = fcn.00402b1d(1);\n            iVar13 = (var_30h != 0x38) + 1;\n        }\n        if (*ppiVar16 != 0) {\n            puVar17 = &fcn.00401434::hWndChildAfter;\n            uVar20 = 0;\n            uVar19 = 0x40ad98;\n            uVar15 = fcn.00405d64(ppiVar16);\n            iVar13 = (*_sym.imp.KERNEL32.dll_WriteFile)(uVar15, ppiVar16, uVar19, iVar13, puVar17, uVar20);\n            goto code_r0x004015ac;\n        }\ncode_r0x00402793:\n        var_4h = 0x1;\n        break;\n    case 0x402573:\n        lpString2 = 0;\n        lDistanceToMove._0_2_ = 2;\n        lDistanceToMove._2_2_ = 0;\n        lpFileName = fcn.00402b1d(2);\n        if (lpFileName < 1) break;\n        if (0x3ff < lpFileName) {\n            lpFileName = 0x3ff;\n        }\n        if (*ppiVar16 != 0) {\n            lptstrFilename = NULL;\n            nNumberOfBytesToWrite = fcn.00405d64(ppiVar16);\n            pcVar6 = _sym.imp.KERNEL32.dll_MultiByteToWideChar;\n            if (0 < lpFileName) {\n                do {\n                    if (var_30h == 0x39) {\n                        uVar10 = (*_sym.imp.KERNEL32.dll_ReadFile)\n                                           (nNumberOfBytesToWrite, &fcn.00401434::hWndChildAfter + 2, \n                                            2 - nNumberOfBytesToRead, &fcn.00401434::lpNumberOfBytesWritten, 0);\n                        if ((uVar10 != 0) && (lpNumberOfBytesWritten != 0)) {\n                            var_3ch = uVar10 & 0xffff0000 | hWndChildAfter >> 0x10 & 0xff;\n                            lDistanceToMove._0_2_ = lpNumberOfBytesWritten;\n                            lDistanceToMove._2_2_ = lpNumberOfBytesWritten >> 0x10;\n                            if (nNumberOfBytesToRead == NULL) {\n                                iVar13 = (*pcVar6)(0, 8, &fcn.00401434::hWndChildAfter + 2, lpNumberOfBytesWritten, \n                                                   &fcn.00401434::var_3ch, 1);\n                                if (iVar13 == 0) {\n                                    iVar13 = -CONCAT22(lDistanceToMove._2_2_, lDistanceToMove);\n                                    do {\n                                        lpNumberOfBytesWritten = lpNumberOfBytesWritten + -1;\n                                        var_3ch = 0xfffd;\n                                        if (lpNumberOfBytesWritten == 0) break;\n                                        iVar11 = CONCAT22(lDistanceToMove._2_2_, lDistanceToMove) + -1;\n                                        lDistanceToMove._0_2_ = iVar11;\n                                        lDistanceToMove._2_2_ = iVar11 >> 0x10;\n                                        iVar13 = iVar13 + 1;\n                                        (*_sym.imp.KERNEL32.dll_SetFilePointer)(nNumberOfBytesToWrite, iVar13, 0, 1);\n                                        iVar11 = (*pcVar6)(0, 8, &fcn.00401434::hWndChildAfter + 2, \n                                                           lpNumberOfBytesWritten, &fcn.00401434::var_3ch, 1);\n                                    } while (iVar11 == 0);\n                                }\n                                goto code_r0x0040266c;\n                            }\ncode_r0x004026a2:\n                            fcn.00405d4b(lpBuffer, var_3ch & 0xffff);\n                            goto code_r0x004029d0;\n                        }\n                        break;\n                    }\n                    iVar13 = fcn.00405af3(nNumberOfBytesToWrite, &fcn.00401434::var_3ch, 2);\n                    if (iVar13 == 0) break;\ncode_r0x0040266c:\n                    if (nNumberOfBytesToRead != NULL) goto code_r0x004026a2;\n                    iVar2 = var_3ch;\n                    if ((lptstrFilename == 0xd) || (lptstrFilename == 10)) {\n                        if ((lptstrFilename == iVar2) || ((iVar2 != 0xd && (iVar2 != 10)))) {\n                            (*_sym.imp.KERNEL32.dll_SetFilePointer)\n                                      (nNumberOfBytesToWrite, -CONCAT22(lDistanceToMove._2_2_, lDistanceToMove), 0, 1);\n                        }\n                        else {\n                            *(lpBuffer + lpString2 * 2) = iVar2;\n                            lpString2 = lpString2 + 1;\n                        }\n                        break;\n                    }\n                    iVar13 = lpString2 + 1;\n                    *(lpBuffer + lpString2 * 2) = iVar2;\n                    lpString2 = iVar13;\n                    if ((iVar2 == 0) || (lptstrFilename = var_3ch,  lpFileName <= iVar13)) break;\n                } while( true );\n            }\n        }\n        bVar18 = lpString2 == 0;\n        *(lpBuffer + lpString2 * 2) = 0;\n        goto code_r0x004015ae;\n    case 0x4026f7:\n        if (*ppiVar16 != 0) {\n            uVar15 = fcn.00402b1d(2, 0, nNumberOfBytesToRead);\n            uVar19 = fcn.00405d64(ppiVar16);\n            (*_sym.imp.KERNEL32.dll_SetFilePointer)(uVar19, ppiVar16, uVar15);\n            ppiVar16 = lpBuffer;\n            goto joined_r0x0040271c;\n        }\n        break;\n    case 0x402727:\n        if (*ppiVar16 != 0) {\n            uVar15 = fcn.00405d64(ppiVar16);\n            (*_sym.imp.KERNEL32.dll_FindClose)(uVar15);\n        }\n        break;\n    case 0x402742:\n        if (*ppiVar14 != 0) {\n            puVar17 = &fcn.00401434::lpFindFileData;\n            uVar15 = fcn.00405d64(ppiVar14);\n            iVar13 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(uVar15, ppiVar14, puVar17);\n            if (iVar13 != 0) goto code_r0x004027a8;\n        }\n        goto code_r0x00402761;\n    case 0x402770:\n        uVar15 = fcn.00402b3a(2);\n        iVar13 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(uVar15, &fcn.00401434::lpFindFileData);\n        if (iVar13 == -1) {\n            *lpBuffer = 0;\n            goto code_r0x00402790;\n        }\n        fcn.00405d4b(lpBuffer, iVar13);\ncode_r0x004027a8:\n        puVar17 = &fcn.00401434::var_280h;\ncode_r0x004028eb:\n        fcn.00405e04(ppiVar16, puVar17);\n        break;\n    case 0x4027b5:\n        lptstrFilename = 0xfffffd66;\n        uVar15 = fcn.00402b3a(0xfffffff0);\n        lpFileName = uVar15;\n        iVar13 = fcn.004058c6(uVar15);\n        if (iVar13 == 0) {\n            fcn.00402b3a(0xffffffed);\n        }\n        fcn.00405a4b(uVar15);\n        hWndChildAfter = fcn.00405a70(uVar15, 0x40000000, 2);\n        pcVar6 = _sym.imp.KERNEL32.dll_GlobalAlloc;\n        if (hWndChildAfter != 0xffffffff) {\n            nNumberOfBytesToWrite = *0x434ed4;\n            iVar13 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, *0x434ed4);\n            if (iVar13 != 0) {\n                fcn.004031e3(0);\n                fcn.004031cd(iVar13, nNumberOfBytesToWrite);\n                piVar12 = (*pcVar6)(0x40, var_24h);\n                lptstrFilename = piVar12;\n                if (piVar12 != NULL) {\n                    fcn.00402fa2(dwFileAttributes, 0, piVar12, var_24h);\n                    for (; *piVar12 != '\\0'; piVar12 = piVar12 + var_48h + 8) {\n                        var_48h = *piVar12;\n                        dwFileAttributes = piVar12[1] + iVar13;\n                        fcn.00405a2b();\n                    }\n                    (*_sym.imp.KERNEL32.dll_GlobalFree)(lptstrFilename, dwFileAttributes);\n                }\n                (*_sym.imp.KERNEL32.dll_WriteFile)\n                          (hWndChildAfter, iVar13, nNumberOfBytesToWrite, &fcn.00401434::lpNumberOfBytesWritten, 0);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(iVar13);\n                lptstrFilename = fcn.00402fa2(0xffffffff, hWndChildAfter, 0, 0);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(hWndChildAfter);\n        }\n        if (lptstrFilename < 0) {\n            (*_sym.imp.KERNEL32.dll_DeleteFileW)(lpFileName);\n            var_4h = 0x1;\n        }\ncode_r0x00402192:\n        fcn.00401423();\n        break;\n    case 0x4028b6:\n        uVar10 = fcn.00402b1d(0);\n        if (*0x434eec <= uVar10) goto code_r0x00402793;\n        iVar13 = uVar10 * 0x818 + *0x434ee8;\n        if (-1 < var_24h) {\n            ppiVar16 = lpBuffer;\n            if (var_24h == NULL) {\n                puVar17 = iVar13 + 0x18;\n                goto code_r0x004028eb;\n            }\n            goto code_r0x0040296d;\n        }\n        var_24h = -1 - var_24h;\n        if (var_24h == NULL) {\n            fcn.00405e26(iVar13 + 0x18, var_1ch);\n            *(iVar13 + 9) = *(iVar13 + 9) | 1;\n        }\n        else {\n            dwFileAttributes = fcn.00402b1d(1);\n        }\n        *(iVar13 + var_24h * 4) = dwFileAttributes;\n        if (nNumberOfBytesToRead != NULL) {\n            fcn.0040117d(uVar10);\n        }\n        break;\n    case 0x40293b:\n        uVar10 = fcn.00402b1d(0);\n        if (0x1f < uVar10) goto code_r0x00402793;\n        if (nNumberOfBytesToRead == NULL) {\n            if (var_24h == NULL) {\n                fcn.00405e26(lpBuffer, *(*0x434ed0 + 0x94 + uVar10 * 4));\n            }\n            else {\n                *(*0x434ed0 + 0x94 + uVar10 * 4) = dwFileAttributes;\n            }\n        }\n        else {\n            if (var_24h == NULL) {\n                fcn.004012e2(0);\n                ppiVar16 = lpBuffer;\n                goto code_r0x0040296d;\n            }\n            fcn.00401299(uVar10);\n            fcn.004011ef(0, 0);\n        }\n        break;\n    case 0x4029a2:\n        (*_sym.imp.USER32.dll_SendMessageW)(lpString2, 0xb, *0x42f218 & var_2ch, 0);\n        if (var_2ch != NULL) {\n            (*_sym.imp.USER32.dll_InvalidateRect)(lpString2, 0, 0);\n        }\n        break;\n    case 0x4029d2:\n        goto code_r0x004029d2;\n    }\ncode_r0x004029c7:\n    *0x434f48 = *0x434f48 + var_4h;\ncode_r0x004029d0:\n    var_2ch = NULL;\ncode_r0x004029d2:\n    return var_2ch;\n}\n",
        "token_count": 13672
    },
    "00402d69": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nchar16_t * __cdecl fcn.00402d69(uint *arg_8h)\n\n{\n    uint *puVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    int32_t *piVar7;\n    uint32_t uVar8;\n    uint32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    int32_t var_1ch;\n    int32_t var_18h;\n    int32_t dwBytes;\n    int32_t var_10h;\n    uint *hFile;\n    uint *var_8h;\n    int32_t var_4h;\n    \n    var_8h = NULL;\n    var_4h = 0;\n    *0x434ecc = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n    *0x434ecc = *0x434ecc + 1000;\n    (*_sym.imp.KERNEL32.dll_GetModuleFileNameW)(0, 0x442800, 0x400);\n    puVar1 = fcn.00405a70(0x442800, 0x80000000, 3);\n    if (puVar1 == 0xffffffff) {\n        *0x40a018 = puVar1;\n        return L\"Error launching installer\";\n    }\n    *0x40a018 = puVar1;\n    hFile = puVar1;\n    fcn.00405e04(0x440800, 0x442800);\n    uVar2 = fcn.0040589b(0x440800);\n    fcn.00405e04(0x443000, uVar2);\n    uVar3 = (*_sym.imp.KERNEL32.dll_GetFileSize)(puVar1, 0);\n    *0x42a9d0 = uVar3;\n    for (; 0 < uVar3; uVar3 = uVar3 - uVar8) {\n        uVar4 = (-(*0x434ed4 != 0) & 0x7e00) + 0x200;\n        uVar8 = uVar3;\n        if (uVar4 <= uVar3) {\n            uVar8 = uVar4;\n        }\n        puVar1 = 0x4229d0;\n        iVar5 = fcn.004031cd();\n        if (iVar5 == 0) {\n            fcn.00402d05(1);\n            goto code_r0x00402f41;\n        }\n        if (*0x434ed4 == 0) {\n            puVar1 = &var_28h;\n            fcn.00405a2b();\n            if (((((var_28h & 0xfffffff0) == 0) && (var_24h == -0x21524111)) && (var_18h == 0x74736e49)) &&\n               ((var_1ch == 0x74666f73 && (var_20h == 0x6c6c754e)))) {\n                arg_8h = arg_8h | var_28h;\n                *0x434f60 = *0x434f60 | arg_8h & 2;\n                *0x434ed4 = *0x4169c0;\n                if (uVar3 < var_10h) goto code_r0x00402f41;\n                if (((arg_8h & 8) == 0) && ((arg_8h & 4) != 0)) break;\n                var_4h = var_4h + 1;\n                uVar3 = var_10h - 4;\n                if (uVar3 < uVar8) {\n                    uVar8 = uVar3;\n                }\n            }\n        }\n        else if ((arg_8h & 2) == 0) {\n            fcn.00402d05(0);\n        }\n        if (uVar3 < *0x42a9d0) {\n            puVar6 = fcn.0040621c();\n            puVar1 = var_8h;\n            var_8h = puVar6;\n        }\n        *0x4169c0 = *0x4169c0 + uVar8;\n    }\n    fcn.00402d05(1, puVar1);\n    if (*0x434ed4 != 0) {\n        if (var_4h != 0) {\n            fcn.004031e3(*0x4169c0);\n            iVar5 = fcn.004031cd(&arg_8h, 4);\n            if ((iVar5 == 0) || (var_8h != arg_8h)) goto code_r0x00402f41;\n        }\n        puVar1 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, dwBytes);\n        fcn.004031e3(*0x434ed4 + 0x1c);\n        iVar5 = fcn.00402fa2(0xffffffff, 0, puVar1, dwBytes);\n        if (iVar5 == dwBytes) {\n            *0x434ed8 = *puVar1;\n            if ((var_28h & 1) != 0) {\n                *0x434edc = *0x434edc + 1;\n            }\n            piVar7 = puVar1 + 0x11;\n            iVar5 = 8;\n            *0x434ed0 = puVar1;\n            do {\n                piVar7 = piVar7 + -2;\n                *piVar7 = *piVar7 + puVar1;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n            uVar2 = (*_sym.imp.KERNEL32.dll_SetFilePointer)(hFile, 0, 0, 1);\n            puVar1[0xf] = uVar2;\n            fcn.00405a2b(0x434ee0, puVar1 + 1, 0x40);\n            return NULL;\n        }\n    }\ncode_r0x00402f41:\n    return \n    L\"Installer integrity check has failed. Common causes include\\nincomplete download and damaged media. Contact the\\ninstaller\\'s author to obtain a new copy.\\n\\nMore information at:\\nhttp://nsis.sf.net/NSIS_Error\"\n    ;\n}\n",
        "token_count": 1409
    },
    "null": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid entry0(void)\n\n{\n    int16_t iVar1;\n    uint uVar2;\n    uint32_t *puVar3;\n    uint32_t *puVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    code *pcVar8;\n    code *pcVar9;\n    code *pcVar10;\n    uint32_t *puVar11;\n    char16_t *pcStack800;\n    uint uStack796;\n    int32_t iStack792;\n    uint32_t uStack788;\n    uint uStack784;\n    char16_t *pcStack780;\n    uint uStack776;\n    int32_t iStack772;\n    uchar *puStack768;\n    uint uStack764;\n    uint uStack760;\n    uint uStack756;\n    uint uStack752;\n    uint uStack748;\n    uchar auStack704 [704];\n    \n    uStack748 = 0x403253;\n    (*_sym.imp.COMCTL32.dll_InitCommonControls)();\n    uStack748 = 0x8001;\n    uStack752 = 0x40325e;\n    (*_sym.imp.KERNEL32.dll_SetErrorMode)();\n    uStack752 = 0;\n    uStack756 = 0x403265;\n    *0x434f78 = (*_sym.imp.ole32.dll_OleInitialize)();\n    uStack756 = 9;\n    uStack760 = 0x403271;\n    *0x434ec4 = fcn.0040616e();\n    uStack760 = 0;\n    puStack768 = &stack0xfffffd40;\n    uStack764 = 0x2b4;\n    iStack772 = 0;\n    uStack776 = 0x42b1d8;\n    pcStack780 = 0x40328d;\n    (*_sym.imp.SHELL32.dll_SHGetFileInfoW)();\n    pcStack780 = L\"NSIS Error\";\n    uStack784 = 0x433ec0;\n    uStack788 = 0x40329c;\n    fcn.00405e04();\n    uStack788 = 0x4032a2;\n    uStack788 = (*_sym.imp.KERNEL32.dll_GetCommandLineW)();\n    iStack792 = 0x43f000;\n    uStack796 = 0x4032ae;\n    fcn.00405e04();\n    uStack796 = 0;\n    pcStack800 = 0x4032b5;\n    *0x434ec0 = (*_sym.imp.KERNEL32.dll_GetModuleHandleW)();\n    uVar2 = 0x43f000;\n    pcStack800 = 0x20;\n    if (*0x43f000 == 0x22) {\n        uVar2 = 0x43f002;\n        pcStack800 = 0x22;\n    }\n    puVar3 = fcn.0040587c(uVar2);\n    puVar4 = (*_sym.imp.USER32.dll_CharNextW)(puVar3);\n    pcStack780 = puVar4;\n    while( true ) {\n        iVar1 = *puVar4;\n        if (iVar1 == 0) break;\n        while (iVar1 == 0x20) {\n            puVar4 = puVar4 + 2;\n            iVar1 = *puVar4;\n        }\n        uStack776 = 0x20;\n        if (*puVar4 == 0x22) {\n            puVar4 = puVar4 + 2;\n            uStack776 = 0x22;\n        }\n        puVar11 = puVar4;\n        if (*puVar4 == 0x2f) {\n            puVar11 = puVar4 + 2;\n            if ((*puVar11 == 0x53) && ((*(puVar4 + 1) == 0x20 || (*(puVar4 + 1) == 0)))) {\n                *0x434f60 = 1;\n            }\n            if (((*puVar11 == CONCAT22(str.NCRC[1], str.NCRC[0])) &&\n                (*(puVar4 + 6) == (CONCAT22(str.NCRC[3], str.NCRC[2]) | str.NCRC[1] >> 0xf))) &&\n               ((*(puVar4 + 10) == 0x20 || (*(puVar4 + 10) == 0)))) {\n                uStack788 = uStack788 | 4;\n            }\n            if ((*(puVar4 + -2) == CONCAT22(str.__D[1], str.__D[0])) &&\n               (*puVar11 == (CONCAT22(str.__D[3], str.__D[2]) | str.__D[1] >> 0xf))) {\n                *(puVar4 + -2) = 0;\n                fcn.00405e04(0x43f800, puVar4 + 6);\n                break;\n            }\n        }\n        puVar4 = fcn.0040587c();\n        puVar3 = puVar11;\n        if (*puVar4 == 0x22) {\n            puVar4 = puVar4 + 2;\n        }\n    }\n    pcVar8 = _sym.imp.KERNEL32.dll_GetTempPathW;\n    (*_sym.imp.KERNEL32.dll_GetTempPathW)(0x400, 0x441800, puVar3);\n    iVar5 = fcn.004031fa();\n    if (iVar5 == 0) {\n        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)(0x441800, 0x3fb);\n        sub.KERNEL32.dll_lstrcatW(0x441800, L\"\\\\Temp\");\n        iVar5 = fcn.004031fa();\n        if (iVar5 == 0) {\n            (*pcVar8)(0x3fc, 0x441800);\n            sub.KERNEL32.dll_lstrcatW(0x441800, 0x40a294);\n            pcVar8 = _sym.imp.KERNEL32.dll_SetEnvironmentVariableW;\n            (*_sym.imp.KERNEL32.dll_SetEnvironmentVariableW)(L\"TEMP\", 0x441800);\n            (*pcVar8)(0x40a280, 0x441800);\n            iVar5 = fcn.004031fa();\n            if (iVar5 == 0) goto code_r0x0040353b;\n        }\n    }\n    (*_sym.imp.KERNEL32.dll_DeleteFileW)(0x441000);\n    iStack792 = 0x403484;\n    iStack772 = fcn.00402d69(uStack764);\n    if (iStack772 == 0) {\n        if (*0x434edc != 0) {\n            iStack792 = 0;\n            uStack796 = 0x43f000;\n            pcStack800 = 0x4034a3;\n            piVar6 = fcn.0040587c();\n            if (0x43efff < piVar6) {\n                do {\n                    if ((*piVar6 == CONCAT22(str.___[1], str.___[0])) &&\n                       (piVar6[1] == (CONCAT22(str.___[3], str.___[2]) | str.___[1] >> 0xf))) break;\n                    piVar6 = piVar6 + -2;\n                } while (0x43efff < piVar6);\n            }\n            pcStack780 = L\"Error launching installer\";\n            if (piVar6 < 0x43f000) goto code_r0x00403566;\n            *piVar6 = 0;\n            iVar5 = fcn.00405957();\n            if (iVar5 == 0) goto code_r0x0040353b;\n            fcn.00405e04(0x43f800, piVar6 + 2);\n            fcn.00405e04(0x440000, piVar6 + 2);\n            pcStack800 = NULL;\n        }\n        *0x434f6c = -1;\n        iStack792 = fcn.004037db();\n    }\ncode_r0x0040353b:\n    while( true ) {\n        fcn.00403701();\n        (*_sym.imp.ole32.dll_OleUninitialize)();\n        if (pcStack800 == NULL) break;\n        fcn.004055e0(pcStack800, 0x200010);\n        (*_sym.imp.KERNEL32.dll_ExitProcess)(2);\ncode_r0x00403566:\n        pcStack800 = L\"~nsu.tmp\";\n        sub.KERNEL32.dll_lstrcatW(0x441800);\n        uVar2 = 0x440800;\n        iVar5 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(0x441800, 0x440800);\n        if (iVar5 != 0) {\n            (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(0x441800, 0);\n            (*_sym.imp.KERNEL32.dll_SetCurrentDirectoryW)(0x441800);\n            if (*0x43f800 == 0) {\n                pcStack800 = 0x43f800;\n                fcn.00405e04(uVar2, 0x440800);\n            }\n            fcn.00405e04(0x435000, iStack772);\n            *0x435800 = CONCAT22(*0x40a25a, *0x40a258);\n            iVar5 = 0x1a;\n            do {\n                fcn.00405e26(0x42a9d8, *(*0x434ed0 + 0x120));\n                (*_sym.imp.KERNEL32.dll_DeleteFileW)(0x42a9d8);\n                if ((iStack792 != 0) && (iVar7 = (*_sym.imp.KERNEL32.dll_CopyFileW)(0x442800, 0x42a9d8, 1),  iVar7 != 0)\n                   ) {\n                    fcn.00405c9e(0x42a9d8, 0);\n                    fcn.00405e26(0x42a9d8, *(*0x434ed0 + 0x124));\n                    iVar7 = fcn.0040557f(0x42a9d8);\n                    if (iVar7 != 0) {\n                        (*_sym.imp.KERNEL32.dll_CloseHandle)(iVar7);\n                        iStack792 = 0;\n                    }\n                }\n                *0x435800 = *0x435800 + 1;\n                *0x435800 = *0x435800 & 0xffff0000 | *0x435800;\n                iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n            fcn.00405c9e(0x441800, 0);\n        }\n    }\n    if (*0x434f54 != 0) {\n        pcVar8 = fcn.0040616e(4);\n        pcVar9 = fcn.0040616e(5);\n        pcVar10 = fcn.0040616e(6);\n        if (((pcVar8 != NULL) && (pcVar9 != NULL)) && (pcVar10 != NULL)) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentProcess)(0x28, &stack0xfffffce0);\n            iVar5 = (*pcVar8)(uVar2);\n            if (iVar5 != 0) {\n                (*pcVar9)(0, L\"SeShutdownPrivilege\", &stack0xfffffd00);\n                uStack784 = 1;\n                iStack772 = 2;\n                (*pcVar10)(iStack792, 0, &stack0xfffffcf0, 0, 0, 0);\n            }\n        }\n        pcVar8 = fcn.0040616e(7);\n        if (((pcVar8 != NULL) && (iVar5 = (*pcVar8)(0, 0, 0, 0x25, 0x80040002),  iVar5 == 0)) ||\n           (iVar5 = (*_sym.imp.USER32.dll_ExitWindowsEx)(2, 0x80040002),  iVar5 == 0)) {\n            fcn.0040140b(9);\n        }\n    }\n    if (*0x434f6c != -1) {\n        iStack792 = *0x434f6c;\n    }\n    (*_sym.imp.KERNEL32.dll_ExitProcess)(iStack792);\n    if (*0x40a018 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x40a018);\n        *0x40a018 = -1;\n    }\n    fcn.00403746();\n    fcn.0040568c(0x442000, 7);\n    return;\n}\n",
        "token_count": 2793
    },
    "00403701": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00403701(void)\n\n{\n    if (*0x40a018 != -1) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(*0x40a018);\n        *0x40a018 = -1;\n    }\n    fcn.00403746();\n    fcn.0040568c(0x442000, 7);\n    return;\n}\n",
        "token_count": 84
    },
    "004037db": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.004037db(void)\n\n{\n    int16_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ushort *puVar4;\n    uint uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    \n    iVar7 = *0x434ed0;\n    pcVar2 = fcn.0040616e();\n    if (pcVar2 == NULL) {\n        *0x441000 = 0x30;\n        *0x441002 = 0x78;\n        *0x441004 = 0;\n        fcn.00405cd1(0x80000001, L\"Control Panel\\\\Desktop\\\\ResourceLocale\", 0, 0x42d218, 0);\n        if (*0x42d218 == 0) {\n            fcn.00405cd1(0x80000003, L\".DEFAULT\\\\Control Panel\\\\International\", L\"Locale\", 0x42d218, 0);\n        }\n        sub.KERNEL32.dll_lstrcatW();\n    }\n    else {\n        (*pcVar2)();\n        fcn.00405d4b();\n    }\n    fcn.00403ab1();\n    *0x434f40 = *0x434ed8 & 0x20;\n    *0x434f5c = 0x10000;\n    iVar3 = fcn.00405957();\n    if ((iVar3 == 0) && (*(iVar7 + 0x48) != 0)) {\n        uVar6 = 0x432e60;\n        fcn.00405cd1(*(iVar7 + 0x44), *0x434ef8 + *(iVar7 + 0x48) * 2, *0x434ef8 + *(iVar7 + 0x4c) * 2, 0x432e60, 0);\n        if (*0x432e60 != 0) {\n            if (*0x432e60 == 0x22) {\n                uVar6 = 0x432e62;\n                puVar4 = fcn.0040587c();\n                *puVar4 = 0;\n            }\n            iVar3 = sub.KERNEL32.dll_lstrlenW();\n            if (((uVar6 < (uVar6 - 8) + iVar3 * 2) && (iVar3 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(),  iVar3 == 0)) &&\n               ((uVar6 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(),  uVar6 == 0xffffffff || ((uVar6 & 0x10) == 0))))\n            {\n                fcn.0040589b();\n            }\n            fcn.0040584f();\n            fcn.00405e04();\n        }\n    }\n    iVar3 = fcn.00405957();\n    if (iVar3 == 0) {\n        uStack148 = 0x403932;\n        fcn.00405e26(0x43f800, *(iVar7 + 0x118));\n    }\n    uStack148 = 0x8040;\n    uStack152 = 0;\n    uStack156 = 0;\n    iVar9 = 1;\n    iVar8 = 0x67;\n    iVar3 = *0x434ec0;\n    *0x433ea8 = (*_sym.imp.USER32.dll_LoadImageW)(*0x434ec0, 0x67, 1);\n    if (*(iVar7 + 0x50) == -1) {\ncode_r0x004039d8:\n        iVar7 = fcn.0040140b(0);\n        if (iVar7 == 0) {\n            fcn.00403ab1();\n            if (*0x434f60 == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x42d1f8, 5);\n                pcVar2 = _sym.imp.KERNEL32.dll_LoadLibraryW;\n                iVar7 = (*_sym.imp.KERNEL32.dll_LoadLibraryW)(L\"RichEd20\");\n                if (iVar7 == 0) {\n                    (*pcVar2)(L\"RichEd32\");\n                }\n                pcVar2 = _sym.imp.USER32.dll_GetClassInfoW;\n                iVar7 = (*_sym.imp.USER32.dll_GetClassInfoW)(0, L\"RichEdit20W\", 0x433e60);\n                if (iVar7 == 0) {\n                    (*pcVar2)(0, L\"RichEdit\", 0x433e60);\n                    *0x433e84 = L\"RichEdit20W\";\n                    (*_sym.imp.USER32.dll_RegisterClassW)(0x433e60);\n                }\n                uVar5 = (*_sym.imp.USER32.dll_DialogBoxParamW)(*0x434ec0, *0x433ea0 + 0x69U & 0xffff, 0, 0x403b7e, 0);\n                fcn.0040140b(5);\n                fcn.0040372b(1);\n                return uVar5;\n            }\n            iVar7 = fcn.00405181(0);\n            if (iVar7 == 0) {\n                fcn.0040140b(1);\n                goto code_r0x00403aa7;\n            }\n            if (*0x433e8c == 0) {\n                fcn.0040140b(2);\n            }\n        }\n        uVar5 = 2;\n    }\n    else {\n        iVar7 = 0x433e60;\n        *0x433e64 = fcn.00401000;\n        *0x433e70 = *0x434ec0;\n        *0x433e84 = 0x40a378;\n        *0x433e74 = *0x433ea8;\n        iVar1 = (*_sym.imp.USER32.dll_RegisterClassW)(0x433e60);\n        if (iVar1 != 0) {\n            (*_sym.imp.USER32.dll_SystemParametersInfoW)(0x30, 0, &stack0xffffff64, 0);\n            *0x42d1f8 = (*_sym.imp.USER32.dll_CreateWindowExW)\n                                  (0x80, 0x40a378, 0, 0x80000000, iVar7, iVar3, iVar8 - iVar7, iVar9 - iVar3, 0, 0, \n                                   *0x434ec0, 0);\n            goto code_r0x004039d8;\n        }\ncode_r0x00403aa7:\n        uVar5 = 0;\n    }\n    return uVar5;\n}\n",
        "token_count": 1487
    },
    "00404a2a": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404a2a(uint arg_8h, int32_t arg_ch, int32_t arg_10h, uint32_t arg_14h)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int32_t iVar3;\n    uint uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    int32_t iVar7;\n    uint32_t *puVar8;\n    uint var_50h;\n    uint var_4ch;\n    uint var_48h;\n    uint var_44h;\n    uint32_t var_40h;\n    uint32_t var_3ch;\n    uint32_t *var_38h;\n    uint32_t *var_34h;\n    uint var_28h;\n    int32_t var_24h;\n    int32_t var_1ch;\n    uint32_t *var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_GetDlgItem;\n    var_8h = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3f9);\n    var_4h = (*pcVar1)(arg_8h, 0x408);\n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    var_10h = *0x434ee8;\n    var_14h = *0x434ed0 + 0x94;\n    if (arg_ch == 0x110) {\n        var_1ch = 0;\n        var_ch = 2;\n        *0x434f20 = arg_8h;\n        *0x42d210 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x40, *0x434eec << 2);\n        uVar2 = (*_sym.imp.USER32.dll_LoadBitmapW)(*0x434ec0, 0x6e);\n        *0x42d204 = 0xffffffff;\n        *0x42d20c = (*_sym.imp.USER32.dll_SetWindowLongW)(var_4h, 0xfffffffc, fcn.00405022);\n        *0x42d1fc = (*_sym.imp.COMCTL32.dll_ImageList_Create)(0x10, 0x10, 0x21, 6, 0);\n        (*_sym.imp.COMCTL32.dll_ImageList_AddMasked)(*0x42d1fc, uVar2, 0xff00ff);\n        (*pcVar1)(var_4h, 0x1109, 2, *0x42d1fc);\n        iVar3 = (*pcVar1)(var_4h, 0x111c, 0, 0);\n        if (iVar3 < 0x10) {\n            (*pcVar1)(var_4h, 0x111b, 0x10, 0);\n        }\n        (*_sym.imp.GDI32.dll_DeleteObject)(uVar2);\n        iVar3 = 0;\n        do {\n            iVar7 = *(var_14h + iVar3 * 4);\n            if (iVar7 != 0) {\n                if (iVar3 != 0x20) {\n                    var_ch = 0;\n                }\n                uVar2 = fcn.00405e26(0, iVar7);\n                uVar2 = (*pcVar1)(var_8h, 0x143, 0, uVar2);\n                (*pcVar1)(var_8h, 0x151, uVar2, iVar3);\n            }\n            uVar5 = var_ch;\n            iVar3 = iVar3 + 1;\n        } while (iVar3 < 0x21);\n        fcn.00404056(arg_8h, 0x15, *(arg_14h + 0x30 + var_ch * 4));\n        fcn.00404056(arg_8h, 0x16, *(arg_14h + 0x34 + uVar5 * 4));\n        iVar3 = 0;\n        uVar2 = 0;\n        if (*0x434eec < 1) {\ncode_r0x00404c56:\n            uVar5 = (*_sym.imp.USER32.dll_GetWindowLongW)(var_4h, 0xfffffff0);\n            (*_sym.imp.USER32.dll_SetWindowLongW)(var_4h, 0xfffffff0, uVar5 & 0xfffffffb);\n        }\n        else {\n            var_18h = var_10h + 8;\n            do {\n                puVar8 = var_18h + 4;\n                if (*puVar8 != 0) {\n                    uVar5 = *var_18h;\n                    var_40h = uVar5 & 0x20;\n                    var_4ch = 0xffff0002;\n                    var_48h = 0xd;\n                    var_3ch = 0x20;\n                    var_50h = uVar2;\n                    var_38h = puVar8;\n                    var_24h = iVar3;\n                    if ((uVar5 & 2) == 0) {\n                        if ((uVar5 & 4) == 0) {\n                            uVar4 = (*pcVar1)(var_4h, 0x1132, 0, &var_50h);\n                            *(*0x42d210 + iVar3 * 4) = uVar4;\n                        }\n                        else {\n                            uVar2 = (*pcVar1)(var_4h, 0x110a, 3, uVar2);\n                        }\n                    }\n                    else {\n                        var_48h = 0x4d;\n                        var_28h = 1;\n                        uVar2 = (*pcVar1)(var_4h, 0x1132, 0, &var_50h);\n                        var_1ch = 1;\n                        *(*0x42d210 + iVar3 * 4) = uVar2;\n                        uVar2 = *(*0x42d210 + iVar3 * 4);\n                    }\n                }\n                iVar3 = iVar3 + 1;\n                var_18h = var_18h + 0x206;\n            } while (iVar3 < *0x434eec);\n            if (var_1ch == 0) goto code_r0x00404c56;\n        }\n        if (var_ch == 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(var_8h, 5);\n            fcn.0040408b(var_8h);\n            goto code_r0x0040500d;\n        }\n        fcn.0040408b(var_4h);\n    }\n    if (arg_ch == 0x405) {\n        arg_10h = 0;\n        arg_ch = 0x40f;\n        arg_14h = 1;\n    }\n    if (((arg_ch == 0x4e) || (arg_ch == 0x413)) && ((var_ch = arg_14h,  arg_ch == 0x413 || (*(arg_14h + 4) == 0x408))))\n    {\n        if (((*0x434ed8 & 0x200) == 0) &&\n           (((arg_ch == 0x413 || (*(arg_14h + 8) == -2)) && (iVar3 = fcn.00404978(var_4h, arg_ch != 0x413),  -1 < iVar3)\n            ))) {\n            puVar8 = iVar3 * 0x818 + 8 + var_10h;\n            uVar5 = *puVar8;\n            if ((uVar5 & 0x10) == 0) {\n                if ((uVar5 & 0x40) == 0) {\n                    uVar5 = uVar5 ^ 1;\n                }\n                else {\n                    uVar6 = uVar5 ^ 0x80;\n                    if (uVar6 < '\\0') {\n                        uVar5 = uVar5 & 0xffffff00 | uVar6 & 0xff | 1;\n                    }\n                    else {\n                        uVar5 = uVar5 & 0xffffff00 | uVar6 & 0xfe;\n                    }\n                }\n                *puVar8 = uVar5;\n                fcn.0040117d(iVar3);\n                arg_10h = iVar3 + 1;\n                arg_14h = ~*0x434ed8 >> 8 & 1;\n                arg_ch = 0x40f;\n            }\n        }\n        if (var_ch != 0) {\n            if (*(var_ch + 8) == -0x1c3) {\n                (*pcVar1)(var_4h, 0x419, 0, *(var_ch + 0x5c));\n            }\n            if (*(var_ch + 8) == -0x1c7) {\n                if (*(var_ch + 0xc) == 2) {\n                    puVar8 = *(var_ch + 0x5c) * 0x818 + 8 + var_10h;\n                    *puVar8 = *puVar8 | 0x20;\n                }\n                else {\n                    puVar8 = *(var_ch + 0x5c) * 0x818 + 8 + var_10h;\n                    *puVar8 = *puVar8 & 0xffffffdf;\n                }\n            }\n        }\n    }\n    if (arg_ch == 0x111) {\n        if (((arg_10h != 0x3f9) || (arg_10h >> 0x10 != 1)) || (iVar3 = (*pcVar1)(var_8h, 0x147, 0, 0),  iVar3 == -1))\n        goto code_r0x0040500d;\n        iVar3 = (*pcVar1)(var_8h, 0x150, iVar3, 0);\n        if ((iVar3 == -1) || (*(var_14h + iVar3 * 4) == 0)) {\n            iVar3 = 0x20;\n        }\n        fcn.00401299(iVar3);\n        (*pcVar1)(arg_8h, 0x420, 0, iVar3);\n        arg_10h = -1;\n        arg_14h = 0;\n        arg_ch = 0x40f;\n    }\n    if (arg_ch == 0x200) {\n        (*pcVar1)(var_4h, 0x200, 0, 0);\n    }\n    if (arg_ch == 0x40b) {\n        if (*0x42d1fc != 0) {\n            (*_sym.imp.COMCTL32.dll_ImageList_Destroy)(*0x42d1fc);\n        }\n        if (*0x42d210 != 0) {\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(*0x42d210);\n        }\n        *0x42d1fc = 0;\n        *0x42d210 = 0;\n        *0x434f20 = 0;\n    }\n    if (arg_ch == 0x40f) {\n        fcn.004011ef(0, 0);\n        if (arg_10h != 0) {\n            iVar3 = arg_10h;\n            if (arg_10h != -1) {\n                iVar3 = arg_10h + -1;\n            }\n            fcn.004049f8(8, iVar3);\n        }\n        if (arg_14h != 0) {\n            arg_14h = fcn.004012e2(*0x42d210);\n            fcn.00401299(arg_14h);\n            iVar3 = 0;\n            iVar7 = 0;\n            if (0 < arg_14h) {\n                do {\n                    if (*(var_14h + iVar3 * 4) != 0) {\n                        iVar7 = iVar7 + 1;\n                    }\n                    iVar3 = iVar3 + 1;\n                } while (iVar3 < arg_14h);\n            }\n            (*pcVar1)(var_8h, 0x14e, iVar7, 0);\n            arg_ch = 0x420;\n        }\n        fcn.004011ef(0, 0);\n        var_1ch = *0x42d210;\n        var_38h = 0xf030;\n        var_10h = 0;\n        if (0 < *0x434eec) {\n            puVar8 = *0x434ee8 + 8;\n            do {\n                uVar5 = *(var_1ch + var_10h * 4);\n                if (uVar5 != 0) {\n                    uVar6 = *puVar8;\n                    var_44h = 8;\n                    if ((uVar6 & 0x100) != 0) {\n                        var_34h = puVar8 + 4;\n                        var_44h = 9;\n                        *(puVar8 + 1) = *(puVar8 + 1) & 0xfe;\n                    }\n                    if ((uVar6 & 0x40) == 0) {\n                        iVar3 = (uVar6 & 1) + 1;\n                        if ((uVar6 & 0x10) != 0) {\n                            iVar3 = (uVar6 & 1) + 4;\n                        }\n                    }\n                    else {\n                        iVar3 = 3;\n                    }\n                    var_3ch = (iVar3 << 0xb | uVar6 & 8) * 2 | uVar6 & 0x20;\n                    var_40h = uVar5;\n                    (*pcVar1)(var_4h, 0x1102, (uVar6 >> 5 & 1U) + 1, uVar5);\n                    (*pcVar1)(var_4h, 0x113f, 0, &var_44h);\n                }\n                var_10h = var_10h + 1;\n                puVar8 = puVar8 + 0x206;\n            } while (var_10h < *0x434eec);\n        }\n        (*_sym.imp.USER32.dll_InvalidateRect)(var_4h, 0, 1);\n        if (*(*0x433e9c + 0x10) != 0) {\n            uVar2 = fcn.0040494b(5);\n            fcn.00404892(0x3ff, 0xfffffffb, uVar2);\n        }\n    }\n    pcVar1 = _sym.imp.USER32.dll_ShowWindow;\n    if ((arg_ch == 0x420) && ((*0x434ed8 & 0x100) != 0)) {\n        iVar3 = (arg_14h == 0x20) << 3;\n        (*_sym.imp.USER32.dll_ShowWindow)(var_4h, iVar3);\n        uVar2 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fe, iVar3);\n        (*pcVar1)(uVar2);\n    }\ncode_r0x0040500d:\n    fcn.004040bd(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 3375
    },
    "004051ed": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004051ed(int32_t arg_8h, int32_t arg_ch, int32_t arg_10h, int32_t arg_14h)\n\n{\n    code *pcVar1;\n    code *pcVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint uVar5;\n    int32_t iVar6;\n    ushort *puVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    int32_t iVar10;\n    uint var_40h;\n    uint var_38h;\n    uint var_34h;\n    int32_t var_30h;\n    ushort *var_2ch;\n    uint var_28h;\n    uint var_24h;\n    uint var_20h;\n    uint uStack32;\n    int32_t var_18h;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint var_8h;\n    int32_t var_4h;\n    \n    iVar10 = *0x433ea4;\n    pcVar2 = _sym.imp.USER32.dll_GetDlgItem;\n    iVar9 = 0;\n    var_4h = *0x433ea4;\n    if (arg_ch == 0x110) {\n        var_30h = 0xffffffff;\n        var_24h = 0xffffffff;\n        var_38h = 2;\n        var_34h = 0;\n        var_2ch = NULL;\n        var_28h = 0;\n        var_20h = 0;\n        uStack32 = 0;\n        iVar10 = *(*0x434ed0 + 0x5c);\n        iVar9 = *(*0x434ed0 + 0x60);\n        *0x433e90 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x403);\n        *0x433e88 = (*pcVar2)(arg_8h, 0x3ee);\n        *0x433ea4 = (*pcVar2)(arg_8h, 0x3f8);\n        var_4h = *0x433ea4;\n        fcn.0040408b(*0x433e90);\n        *0x433e94 = fcn.0040494b(4);\n        *0x433eac = 0;\n        (*_sym.imp.USER32.dll_GetClientRect)(var_4h, &var_18h);\n        var_30h = (*_sym.imp.USER32.dll_GetSystemMetrics)(0x15);\n        pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n        var_30h = var_10h - var_30h;\n        (*_sym.imp.USER32.dll_SendMessageW)(var_4h, 0x1061, 0, &var_38h);\n        (*pcVar1)(var_4h, 0x1036, 0x4000, 0x4000);\n        if (-1 < iVar10) {\n            (*pcVar1)(var_4h, 0x1001, 0, iVar10);\n            (*pcVar1)(var_4h, 0x1026, 0, iVar10);\n        }\n        if (-1 < iVar9) {\n            (*pcVar1)(var_4h, 0x1024, 0, iVar9);\n        }\n        fcn.00404056(arg_8h, 0x1b, *(arg_14h + 0x30));\n        if ((*0x434ed8 & 3) != 0) {\n            (*_sym.imp.USER32.dll_ShowWindow)(*0x433e90, 0);\n            if ((*0x434ed8 & 2) == 0) {\n                (*_sym.imp.USER32.dll_ShowWindow)(var_4h, 8);\n            }\n            else {\n                *0x433e90 = 0;\n            }\n            fcn.0040408b(*0x433e88);\n        }\n        uVar3 = (*pcVar2)(arg_8h, 0x3ec);\n        (*pcVar1)(uVar3, 0x401, 0, 0x75300000);\n        if ((*0x434ed8 & 4) != 0) {\n            (*pcVar1)(uVar3, 0x409, 0, iVar9);\n            (*pcVar1)(uVar3, 0x2001, 0, iVar10);\n        }\ncode_r0x00405578:\n        uVar3 = 0;\n    }\n    else {\n        if (arg_ch == 0x405) {\n            uVar3 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3ec, 0, &var_8h);\n            uVar3 = (*_sym.imp.KERNEL32.dll_CreateThread)(0, 0, fcn.00405181, uVar3);\n            (*_sym.imp.KERNEL32.dll_CloseHandle)(uVar3);\n        }\n        pcVar2 = _sym.imp.USER32.dll_ShowWindow;\n        if (arg_ch == 0x111) {\n            if (arg_10h == 0x403) {\n                (*_sym.imp.USER32.dll_ShowWindow)(*0x433e90, 0);\n                (*pcVar2)(iVar10, 8);\n                fcn.0040408b(iVar10);\n                goto code_r0x004053f5;\n            }\n        }\n        else {\ncode_r0x004053f5:\n            iVar10 = 1;\n            if (arg_ch == 0x404) {\n                if (*0x433e8c != 0) {\n                    *0x42b9e8 = 2;\n                    fcn.0040402f();\n                    goto code_r0x0040541a;\n                }\n                (*pcVar2)(*0x434ec8, 8);\n                if (*0x434f4c == 0) {\n                    fcn.004050ae(*(*0x42c1f0 + 0x34), 0);\n                }\n                fcn.0040402f(1);\n            }\n            if ((arg_ch == 0x7b) && (arg_10h == var_4h)) {\n                iVar4 = (*_sym.imp.USER32.dll_SendMessageW)(var_4h, 0x1004, 0, 0);\n                if (0 < iVar4) {\n                    uVar3 = (*_sym.imp.USER32.dll_CreatePopupMenu)();\n                    uVar5 = fcn.00405e26(0, 0xffffffe1);\n                    (*_sym.imp.USER32.dll_AppendMenuW)(uVar3, 0, 1, uVar5);\n                    iVar6 = arg_14h;\n                    iVar8 = arg_14h >> 0x10;\n                    if (arg_14h == -1) {\n                        (*_sym.imp.USER32.dll_GetWindowRect)(var_4h, &var_18h);\n                        iVar6 = var_18h;\n                        iVar8 = var_14h;\n                    }\n                    iVar6 = (*_sym.imp.USER32.dll_TrackPopupMenu)(uVar3, 0x180, iVar6, iVar8, 0, arg_8h, 0);\n                    if (iVar6 == 1) {\n                        var_38h = 0;\n                        var_2ch = 0x42d218;\n                        var_28h = 0x1fff;\n                        arg_8h = iVar4;\n                        do {\n                            arg_8h = arg_8h + -1;\n                            iVar6 = (*_sym.imp.USER32.dll_SendMessageW)(var_4h, 0x1073, arg_8h, &var_40h);\n                            iVar10 = iVar10 + 2 + iVar6;\n                        } while (arg_8h != 0);\n                        (*_sym.imp.USER32.dll_OpenClipboard)(0);\n                        (*_sym.imp.USER32.dll_EmptyClipboard)();\n                        uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, iVar10 * 2);\n                        puVar7 = (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar3);\n                        do {\n                            var_2ch = puVar7;\n                            iVar10 = (*_sym.imp.USER32.dll_SendMessageW)(var_4h, 0x1073, iVar9, &var_40h);\n                            puVar7 = puVar7 + iVar10;\n                            *puVar7 = 0xd;\n                            puVar7[1] = 10;\n                            puVar7 = puVar7 + 2;\n                            iVar9 = iVar9 + 1;\n                        } while (iVar9 < iVar4);\n                        (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar3);\n                        (*_sym.imp.USER32.dll_SetClipboardData)(0xd, uVar3);\n                        (*_sym.imp.USER32.dll_CloseClipboard)();\n                    }\n                }\n                goto code_r0x00405578;\n            }\n        }\ncode_r0x0040541a:\n        uVar3 = fcn.004040bd(arg_ch, arg_10h, arg_14h);\n    }\n    return uVar3;\n}\n",
        "token_count": 2021
    },
    "00405644": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00405644(uint32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint8_t unaff_retaddr;\n    \n    iVar1 = fcn.00405a4b(param_1);\n    if (iVar1 != -1) {\n        if ((param_1 & 1) == 0) {\n            iVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(param_1);\n        }\n        else {\n            iVar2 = (*_sym.imp.KERNEL32.dll_RemoveDirectoryW)();\n        }\n        if (iVar2 != 0) {\n            return 1;\n        }\n        if ((unaff_retaddr & 4) == 0) {\n            (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(param_1, iVar1);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 188
    },
    "0040568c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid __cdecl fcn.0040568c(int16_t *arg_8h, uint32_t arg_ch)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint lpFindFileData;\n    uint var_22ch;\n    int16_t var_228h;\n    int32_t var_8h;\n    uint32_t var_4h;\n    \n    var_4h = arg_ch & 4;\n    var_8h = fcn.00405957(arg_8h);\n    if ((arg_ch & 8) == 0) {\n        uVar1 = arg_ch & 1;\n        if ((uVar1 == 0) || ((var_8h != 0 && ((arg_ch & 2) != 0)))) {\n            fcn.00405e04(0x42f220, arg_8h);\n            if (uVar1 == 0) {\n                fcn.0040589b(arg_8h);\n            }\n            else {\n                sub.KERNEL32.dll_lstrcatW(0x42f220, L\"\\\\*.*\");\n            }\n            if ((*arg_8h != 0) || (*0x42f220 == 0x5c)) {\n                sub.KERNEL32.dll_lstrcatW(arg_8h, 0x40a014);\n            }\n            iVar2 = sub.KERNEL32.dll_lstrlenW(arg_8h);\n            iVar3 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(0x42f220, &lpFindFileData);\n            if (iVar3 != -1) {\n                do {\n                    if ((var_22ch != 0x2e) || ((var_22ch._2_2_ != 0 && ((var_22ch._2_2_ != 0x2e || (var_228h != 0))))))\n                    {\n                        fcn.00405e04(arg_8h + iVar2, &var_22ch);\n                        if ((lpFindFileData & 0x10) == 0) {\n                            iVar4 = fcn.00405644(arg_8h, var_4h);\n                            if (iVar4 == 0) {\n                                if (var_4h == 0) {\n                                    *0x434f48 = *0x434f48 + 1;\n                                }\n                                else {\n                                    fcn.004050ae(0xfffffff1, arg_8h);\n                                    fcn.00405c9e(arg_8h, 0);\n                                }\n                            }\n                            else {\n                                fcn.004050ae(0xfffffff2, arg_8h);\n                            }\n                        }\n                        else if ((arg_ch & 3) == 3) {\n                            fcn.0040568c(arg_8h, arg_ch);\n                        }\n                    }\n                    iVar4 = (*_sym.imp.KERNEL32.dll_FindNextFileW)(iVar3, &lpFindFileData);\n                } while (iVar4 != 0);\n                (*_sym.imp.KERNEL32.dll_FindClose)(iVar3);\n            }\n            if (uVar1 != 0) {\n                (arg_8h + iVar2)[-1] = 0;\n            }\n        }\n        if (uVar1 != 0) {\n            if (var_8h != 0) {\n                iVar2 = fcn.00406147(arg_8h);\n                if (iVar2 == 0) {\n                    return;\n                }\n                fcn.0040584f(arg_8h);\n                iVar2 = fcn.00405644(arg_8h, var_4h | 1);\n                if (iVar2 != 0) {\n                    fcn.004050ae(0xffffffe5, arg_8h);\n                    return;\n                }\n                if (var_4h != 0) {\n                    fcn.004050ae(0xfffffff1, arg_8h);\n                    fcn.00405c9e(arg_8h, 0);\n                    return;\n                }\n            }\n            *0x434f48 = *0x434f48 + 1;\n        }\n    }\n    else {\n        iVar2 = (*_sym.imp.KERNEL32.dll_DeleteFileW)(arg_8h);\n        *0x434f48 = *0x434f48 + (iVar2 == 0);\n    }\n    return;\n}\n",
        "token_count": 973
    },
    "00405957": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nbool fcn.00405957(uint param_1)\n\n{\n    int16_t *piVar1;\n    uint8_t *puVar2;\n    int32_t iVar3;\n    uint uVar4;\n    int16_t *piVar5;\n    \n    fcn.00405e04(0x42fa20, param_1);\n    piVar1 = fcn.004058fa(0x42fa20);\n    if ((piVar1 != NULL) &&\n       ((piVar5 = piVar1,  fcn.00406098(piVar1),  (*0x434ed8 & 0x80) == 0 || ((*piVar1 != 0 && (*piVar1 != 0x5c)))))) {\n        while( true ) {\n            uVar4 = 0x42fa20;\n            iVar3 = sub.KERNEL32.dll_lstrlenW(0x42fa20);\n            if (iVar3 <= piVar1 + -0x217d10 >> 1) {\n                fcn.0040584f(0x42fa20, uVar4, piVar5);\n                iVar3 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(0x42fa20);\n                return iVar3 != -1;\n            }\n            puVar2 = fcn.00406147(0x42fa20);\n            if ((puVar2 != NULL) && ((*puVar2 & 0x10) == 0)) break;\n            piVar5 = 0x42fa20;\n            fcn.0040589b();\n        }\n    }\n    return false;\n}\n",
        "token_count": 349
    },
    "00405a4b": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint32_t fcn.00405a4b(uint param_1)\n\n{\n    uint32_t uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(param_1);\n    if (uVar1 != 0xffffffff) {\n        (*_sym.imp.KERNEL32.dll_SetFileAttributesW)(unaff_retaddr, uVar1 & 0xfffffffe);\n    }\n    return uVar1;\n}\n",
        "token_count": 105
    },
    "00405b22": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00405b22(void)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar *arg_10h;\n    int32_t lpBuffer;\n    int32_t iVar4;\n    uchar *puVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    int32_t unaff_retaddr;\n    uchar *puStack116;\n    uint uStack112;\n    int32_t iStack108;\n    \n    (*_sym.imp.KERNEL32.dll_lstrcpyW)();\n    pcVar1 = _sym.imp.KERNEL32.dll_GetShortPathNameW;\n    if (unaff_retaddr != 0) {\n        fcn.00405a70();\n        (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        iVar2 = (*pcVar1)();\n        if (iVar2 == 0) {\n            return;\n        }\n        if (0x400 < iVar2) {\n            return;\n        }\n    }\n    iVar2 = (*pcVar1)();\n    if ((iVar2 != 0) && (iVar2 < 0x401)) {\n        iVar3 = (*_sym.imp.USER32.dll_wsprintfA)();\n        fcn.00405e26(0x4310b8, *(*0x434ed0 + 0x128));\n        iVar2 = fcn.00405a70();\n        if (iVar2 != -1) {\n            arg_10h = (*_sym.imp.KERNEL32.dll_GetFileSize)();\n            lpBuffer = (*_sym.imp.KERNEL32.dll_GlobalAlloc)();\n            if ((lpBuffer != 0) && (iVar4 = fcn.00405af3(iVar2, lpBuffer, arg_10h),  iVar4 != 0)) {\n                iVar4 = fcn.004059d5(lpBuffer, \"[Rename]\\r\\n\");\n                if (iVar4 == 0) {\n                    iStack108 = 0x405c22;\n                    (*_sym.imp.KERNEL32.dll_lstrcpyA)();\n                    arg_10h = arg_10h + 10;\n                    puStack116 = arg_10h;\n                }\n                else {\n                    iStack108 = 0x405c35;\n                    puVar5 = fcn.004059d5(iVar4 + 10, 0x40a530);\n                    if (puVar5 == NULL) {\n                        iVar2 = 0x40;\n                        puStack116 = arg_10h;\n                    }\n                    else {\n                        puVar7 = arg_10h + lpBuffer;\n                        puVar6 = puVar7 + iVar3;\n                        for (; puVar5 < puVar7; puVar7 = puVar7 + -1) {\n                            *puVar6 = *puVar7;\n                            puVar6 = puVar6 + -1;\n                        }\n                        iVar2 = 0x40;\n                        puStack116 = puVar5 + (1 - lpBuffer);\n                    }\n                }\n                puStack116 = puStack116 + lpBuffer;\n                uStack112 = 0x4304b8;\n                iStack108 = iVar3;\n                fcn.00405a2b();\n                (*_sym.imp.KERNEL32.dll_SetFilePointer)(iVar2, 0, 0, 0);\n                (*_sym.imp.KERNEL32.dll_WriteFile)(iVar2, lpBuffer, arg_10h + iVar3, &stack0xffffff8c, 0);\n                (*_sym.imp.KERNEL32.dll_GlobalFree)(lpBuffer);\n            }\n            (*_sym.imp.KERNEL32.dll_CloseHandle)();\n        }\n    }\n    return;\n}\n",
        "token_count": 778
    },
    "00406147": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nuint fcn.00406147(uint param_1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_FindFirstFileW)(param_1, 0x430268);\n    if (iVar1 == -1) {\n        uVar2 = 0;\n    }\n    else {\n        (*_sym.imp.KERNEL32.dll_FindClose)(iVar1);\n        uVar2 = 0x430268;\n    }\n    return uVar2;\n}\n",
        "token_count": 113
    },
    "0040117d": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid fcn.0040117d(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    \n    uVar1 = *(param_1 * 0x818 + 8 + *0x434ee8);\n    if ((uVar1 & 2) != 0) {\n        uVar4 = param_1 + 1;\n        if (uVar4 < *0x434eec) {\n            puVar3 = uVar4 * 0x818 + 8 + *0x434ee8;\n            iVar5 = 0;\n            do {\n                uVar2 = *puVar3;\n                if ((uVar2 & 2) == 0) {\n                    if ((uVar2 & 4) == 0) {\n                        iVar6 = iVar5;\n                        if ((uVar2 & 0x10) == 0) {\n                            *puVar3 = (uVar2 ^ uVar1) & 1 ^ uVar2;\n                        }\n                    }\n                    else {\n                        iVar6 = iVar5 + -1;\n                        if (iVar5 == 0) {\n                            return;\n                        }\n                    }\n                }\n                else {\n                    iVar6 = iVar5 + 1;\n                }\n                uVar4 = uVar4 + 1;\n                puVar3 = puVar3 + 0x206;\n                iVar5 = iVar6;\n            } while (uVar4 < *0x434eec);\n        }\n    }\n    return;\n}\n",
        "token_count": 358
    },
    "004011ef": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004011ef(uint32_t arg_8h, int32_t arg_ch)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    iVar2 = *0x434ee8;\n    iVar5 = arg_8h * 0x818 + *0x434ee8;\n    var_4h = 0;\n    var_8h = 0;\n    if (((*(iVar5 + 8) & 2) != 0) && (arg_ch != 0)) {\n        arg_8h = arg_8h + 1;\n        *(iVar5 + 8) = *(iVar5 + 8) & 0xffffffbe;\n    }\n    if (arg_8h < *0x434eec) {\n        do {\n            puVar1 = arg_8h * 0x818 + 8 + iVar2;\n            uVar3 = arg_8h + 1;\n            uVar4 = *puVar1;\n            if ((uVar4 & 2) != 0) {\n                uVar3 = fcn.004011ef(arg_8h, 1);\n                uVar4 = *puVar1;\n            }\n            if ((uVar4 & 4) != 0) {\n                if (var_4h == 0) {\n                    return uVar3;\n                }\n                if (var_8h != 0) {\n                    *(iVar5 + 8) = *(iVar5 + 8) | 0x40;\n                    return uVar3;\n                }\n                *(iVar5 + 8) = *(iVar5 + 8) & 0xffffff7f | 1;\n                return uVar3;\n            }\n            if ((uVar4 & 0x40) != 0) {\n                var_4h = var_4h + 1;\n            }\n            if ((uVar4 & 1) == 0) {\n                var_8h = var_8h + 1;\n            }\n            else {\n                var_4h = var_4h + 1;\n            }\n            arg_8h = uVar3;\n        } while (uVar3 < *0x434eec);\n    }\n    return 0;\n}\n",
        "token_count": 534
    },
    "004012e2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.004012e2(int32_t arg_8h)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    bool bVar3;\n    int32_t *var_8h;\n    uint32_t var_4h;\n    \n    var_4h = 0;\n    var_8h = *0x434ed0 + 0x94;\n    do {\n        uVar1 = 0;\n        if (*var_8h != 0) {\n            bVar3 = *0x434eec == 0;\n            if (*0x434eec != 0) {\n                puVar2 = *0x434ee8 + 8;\n                do {\n                    if (((*puVar2 & 6) == 0) &&\n                       (((arg_8h == 0 || (*(arg_8h + uVar1 * 4) != 0)) &&\n                        ((puVar2[-1] & 1 << (var_4h & 0x1f)) != (*puVar2 & 1) << (var_4h & 0x1f))))) break;\n                    uVar1 = uVar1 + 1;\n                    puVar2 = puVar2 + 0x206;\n                } while (uVar1 < *0x434eec);\n                bVar3 = uVar1 == *0x434eec;\n            }\n            if (bVar3) {\n                return var_4h;\n            }\n        }\n        var_4h = var_4h + 1;\n        var_8h = var_8h + 1;\n        if (0x1f < var_4h) {\n            return var_4h;\n        }\n    } while( true );\n}\n",
        "token_count": 386
    },
    "00402fa2": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402fa2(int32_t nDenominator, uint hFile, uint32_t arg_10h, uint32_t nNumber)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint var_98h;\n    int32_t lpNumberOfBytesWritten;\n    int32_t var_14h;\n    int32_t var_10h;\n    uint32_t lpBuffer;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    uVar5 = nNumber;\n    uVar6 = arg_10h;\n    var_8h = nNumber;\n    if (arg_10h == 0) {\n        var_8h = 0x8000;\n    }\n    var_4h = 0;\n    lpBuffer = arg_10h;\n    if (arg_10h == 0) {\n        lpBuffer = 0x41a9c8;\n    }\n    if (-1 < nDenominator) {\n        fcn.004031e3(*0x434f18 + nDenominator);\n    }\n    iVar2 = fcn.004031cd(&nNumber, 4);\n    pcVar1 = _sym.imp.KERNEL32.dll_GetTickCount;\n    if (iVar2 != 0) {\n        if ((nNumber & 0x80000000) == 0) {\n            if (uVar6 == 0) {\n                while( true ) {\n                    if (nNumber < 1) {\n                        return var_4h;\n                    }\n                    uVar6 = var_8h;\n                    if (nNumber < var_8h) {\n                        uVar6 = nNumber;\n                    }\n                    iVar2 = fcn.004031cd();\n                    if (iVar2 == 0) break;\n                    iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, 0x4169c8, uVar6, &arg_10h, 0);\n                    if ((iVar2 == 0) || (uVar6 != arg_10h)) {\n                        return 0xfffffffe;\n                    }\n                    var_4h = var_4h + uVar6;\n                    nNumber = nNumber - uVar6;\n                }\n            }\n            else {\n                if (nNumber < uVar5) {\n                    uVar5 = nNumber;\n                }\n                iVar2 = fcn.004031cd(uVar6, uVar5);\n                if (iVar2 != 0) {\n                    return uVar5;\n                }\n            }\n        }\n        else {\n            var_10h = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n            *0x40d32c = 0;\n            *0x40d328 = 0;\n            uVar6 = nNumber & 0x7fffffff;\n            *0x40ce10 = 8;\n            *0x4169b8 = 0x40e9b0;\n            *0x4169b4 = 0x40e9b0;\n            *0x4169b0 = 0x4169b0;\n            nNumber = uVar6;\n            if (uVar6 == 0) {\n                *0x40ce10 = 8;\n                *0x40d328 = 0;\n                *0x40d32c = 0;\n                *0x4169b0 = 0x4169b0;\n                *0x4169b4 = 0x40e9b0;\n                *0x4169b8 = 0x40e9b0;\n                return var_4h;\n            }\n            while( true ) {\n                uVar5 = 0x4000;\n                if (nNumber < 0x4000) {\n                    uVar5 = nNumber;\n                }\n                iVar2 = fcn.004031cd();\n                if (iVar2 == 0) break;\n                nNumber = nNumber - uVar5;\n                *0x40ce00 = 0x4169c8;\n                *0x40ce04 = uVar5;\n                while( true ) {\n                    uVar5 = lpBuffer;\n                    *0x40ce08 = lpBuffer;\n                    *0x40ce0c = var_8h;\n                    var_14h = fcn.0040628a(0x40ce00);\n                    if (var_14h < 0) {\n                        return 0xfffffffc;\n                    }\n                    iVar4 = *0x40ce08 - uVar5;\n                    iVar2 = (*pcVar1)();\n                    if (((*0x434f74 & 1) != 0) && ((200 < iVar2 - var_10h || (nNumber == 0)))) {\n                        uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(uVar6 - nNumber, 100, uVar6);\n                        (*_sym.imp.USER32.dll_wsprintfW)(&var_98h, L\"... %d%%\", uVar3);\n                        fcn.004050ae(0, &var_98h);\n                        var_10h = iVar2;\n                    }\n                    if (iVar4 == 0) break;\n                    if (arg_10h == 0) {\n                        iVar2 = (*_sym.imp.KERNEL32.dll_WriteFile)(hFile, lpBuffer, iVar4, &lpNumberOfBytesWritten, 0);\n                        if (iVar2 == 0) {\n                            return 0xfffffffe;\n                        }\n                        if (lpNumberOfBytesWritten != iVar4) {\n                            return 0xfffffffe;\n                        }\n                    }\n                    else {\n                        var_8h = var_8h - iVar4;\n                        lpBuffer = *0x40ce08;\n                    }\n                    var_4h = var_4h + iVar4;\n                    if (var_14h == 1) {\n                        return var_4h;\n                    }\n                }\n                if (nNumber < 1) {\n                    return var_4h;\n                }\n            }\n        }\n    }\n    return 0xfffffffd;\n}\n",
        "token_count": 1346
    },
    "004040bd": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004040bd(int32_t arg_8h, uint hdc, uint hWnd)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint uVar3;\n    uint var_ch;\n    uint var_8h;\n    \n    if ((arg_8h - 0x133U < 6) &&\n       (puVar2 = (*_sym.imp.USER32.dll_GetWindowLongW)(hWnd, 0xffffffeb),  pcVar1 = _sym.imp.USER32.dll_GetSysColor, \n       puVar2 != NULL)) {\n        uVar3 = *puVar2;\n        if ((*(puVar2 + 5) & 2) != 0) {\n            uVar3 = (*_sym.imp.USER32.dll_GetSysColor)(uVar3);\n        }\n        if ((*(puVar2 + 5) & 1) != 0) {\n            (*_sym.imp.GDI32.dll_SetTextColor)(hdc, uVar3);\n        }\n        (*_sym.imp.GDI32.dll_SetBkMode)(hdc, puVar2[4]);\n        var_8h = puVar2[1];\n        if ((*(puVar2 + 5) & 8) != 0) {\n            var_8h = (*pcVar1)(var_8h);\n        }\n        if ((*(puVar2 + 5) & 4) != 0) {\n            (*_sym.imp.GDI32.dll_SetBkColor)(hdc, var_8h);\n        }\n        if ((*(puVar2 + 5) & 0x10) != 0) {\n            var_ch = puVar2[2];\n            if (puVar2[3] != 0) {\n                (*_sym.imp.GDI32.dll_DeleteObject)(puVar2[3]);\n            }\n            uVar3 = (*_sym.imp.GDI32.dll_CreateBrushIndirect)(&var_ch);\n            puVar2[3] = uVar3;\n        }\n        return puVar2[3];\n    }\n    return 0;\n}\n",
        "token_count": 454
    },
    "004041f3": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004041f3(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    uint32_t *puVar1;\n    int16_t iVar2;\n    code *pcVar3;\n    code *pcVar4;\n    int16_t *piVar5;\n    uint uVar6;\n    int32_t iVar7;\n    uint uVar8;\n    uint32_t uVar9;\n    int16_t *var_ch;\n    int32_t var_8h;\n    code *var_4h;\n    \n    pcVar4 = _sym.imp.USER32.dll_SendMessageW;\n    if (arg_ch == 0x110) {\n        iVar7 = *(arg_14h + 0x30);\n        if (iVar7 < 0) {\n            iVar7 = *(*0x433e9c - (iVar7 * 4 + 4));\n        }\n        piVar5 = *0x434ef8 + iVar7 * 2;\n        iVar2 = *piVar5;\n        piVar5 = piVar5 + 1;\n        var_8h = 0;\n        var_4h = fcn.004041a4;\n        if (iVar2 != 2) {\n            var_4h = fcn.0040416a;\n        }\n        uVar9 = ~*(arg_14h + 0x14) >> 5 & 1 | *(arg_14h + 0x14) & 1;\n        var_ch = piVar5;\n        fcn.00404056(arg_8h, 0x22, *(arg_14h + 0x34));\n        fcn.00404056(arg_8h, 0x23, *(arg_14h + 0x38));\n        (*_sym.imp.USER32.dll_CheckDlgButton)(arg_8h, (uVar9 == 0) + 0x40a, 1);\n        fcn.00404078(uVar9);\n        uVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 1000);\n        fcn.0040408b(uVar6);\n        pcVar4 = _sym.imp.USER32.dll_SendMessageW;\n        (*_sym.imp.USER32.dll_SendMessageW)(uVar6, 0x45b, 1, 0);\n        iVar7 = *(*0x434ed0 + 0x68);\n        if (iVar7 < 0) {\n            iVar7 = (*_sym.imp.USER32.dll_GetSysColor)(-iVar7);\n        }\n        (*pcVar4)(uVar6, 0x443, 0, iVar7);\n        (*pcVar4)(uVar6, 0x445, 0, 0x4010000);\n        uVar8 = sub.KERNEL32.dll_lstrlenW(piVar5);\n        (*pcVar4)(uVar6, 0x435, 0, uVar8);\n        *0x42b1e4 = 0;\n        (*pcVar4)(uVar6, 0x449, iVar2, &var_ch);\n        *0x42b1e4 = 0;\n        return 0;\n    }\n    if (arg_ch == 0x111) {\n        if (((arg_10h >> 0x10 != 0) || (*0x42b1e4 != 0)) || (puVar1 = *0x42c1f0 + 0x14,  (*puVar1 & 0x20) == 0))\n        goto code_r0x00404473;\n        uVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x40a, 0xf0, 0, 0);\n        uVar9 = (*pcVar4)(uVar6);\n        *puVar1 = *puVar1 & 0xfffffffe | uVar9 & 1;\n        fcn.00404078(uVar9 & 1);\n        fcn.00404486();\n    }\n    if (arg_ch == 0x4e) {\n        uVar6 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 1000);\n        if ((*(arg_14h + 8) == 0x70b) && (*(arg_14h + 0xc) == 0x201)) {\n            var_8h = *(arg_14h + 0x1c);\n            var_ch = *(arg_14h + 0x18);\n            var_4h = 0x432e60;\n            if (var_8h - var_ch < 0x800) {\n                (*pcVar4)(uVar6, 1099, 0, &var_ch);\n                pcVar3 = _sym.imp.USER32.dll_LoadCursorW;\n                uVar6 = (*_sym.imp.USER32.dll_LoadCursorW)(0, 0x7f02);\n                (*_sym.imp.USER32.dll_SetCursor)(uVar6);\n                (*_sym.imp.SHELL32.dll_ShellExecuteW)(arg_8h, L\"open\", var_4h, 0, 0, 1);\n                uVar6 = (*pcVar3)(0, 0x7f00);\n                (*_sym.imp.USER32.dll_SetCursor)(uVar6);\n            }\n        }\n        if ((*(arg_14h + 8) == 0x700) && (*(arg_14h + 0xc) == 0x100)) {\n            if (*(arg_14h + 0x10) == 0xd) {\n                (*pcVar4)(*0x434ec8, 0x111, 1, 0);\n            }\n            if (*(arg_14h + 0x10) == 0x1b) {\n                (*pcVar4)(*0x434ec8, 0x10, 0, 0);\n            }\n            return 1;\n        }\n    }\n    else if (arg_ch == 0x40b) {\n        *0x42b1e4 = *0x42b1e4 + 1;\n    }\ncode_r0x00404473:\n    uVar6 = fcn.004040bd(arg_ch, arg_10h, arg_14h);\n    return uVar6;\n}\n",
        "token_count": 1393
    },
    "0040494b": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.0040494b(int32_t param_1)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    \n    iVar1 = 0;\n    iVar2 = *0x434ee8;\n    iVar3 = *0x434eec;\n    if (*0x434eec != 0) {\n        do {\n            if ((*(iVar2 + 8) & 1) != 0) {\n                iVar1 = iVar1 + *(iVar2 + param_1 * 4);\n            }\n            iVar3 = iVar3 + -1;\n            iVar2 = iVar2 + 0x818;\n        } while (iVar3 != 0);\n    }\n    return iVar1;\n}\n",
        "token_count": 163
    },
    "004050ae": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004050ae(uint arg_8h, int32_t lpString2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint var_30h;\n    int32_t var_2ch;\n    uint var_28h;\n    uint var_1ch;\n    uint32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = *0x433ea4;\n    if (*0x433ea4 != 0) {\n        var_8h = *0x434f74;\n        uVar4 = *0x434f74 & 1;\n        if (uVar4 == 0) {\n            fcn.00405e26(0x42c1f8, arg_8h);\n        }\n        iVar2 = sub.KERNEL32.dll_lstrlenW(0x42c1f8);\n        if (lpString2 != 0) {\n            iVar3 = sub.KERNEL32.dll_lstrlenW(lpString2);\n            if (0xfff < iVar3 + iVar2) {\n                return;\n            }\n            sub.KERNEL32.dll_lstrcatW(0x42c1f8, lpString2);\n        }\n        if ((var_8h & 4) == 0) {\n            (*_sym.imp.USER32.dll_SetWindowTextW)(*0x433e88, 0x42c1f8);\n        }\n        pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n        if ((var_8h & 2) == 0) {\n            var_1ch = 0x42c1f8;\n            var_30h = 1;\n            var_2ch = (*_sym.imp.USER32.dll_SendMessageW)(var_4h, 0x1004, 0, 0);\n            var_2ch = var_2ch - uVar4;\n            var_28h = 0;\n            (*pcVar1)(var_4h, 0x104d - uVar4, 0, &var_30h);\n            (*pcVar1)(var_4h, 0x1013, var_2ch, 0);\n        }\n        if (uVar4 != 0) {\n            *(iVar2 * 2 + 0x42c1f8) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 537
    },
    "00405181": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nint32_t fcn.00405181(void)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int32_t iVar4;\n    uint uVar5;\n    \n    iVar4 = *0x434eec;\n    iVar2 = *0x434ee8;\n    uVar1 = (*_sym.imp.ole32.dll_OleInitialize)(0);\n    *0x434f78 = *0x434f78 | uVar1;\n    uVar5 = 0;\n    fcn.004040a2(0);\n    if (iVar4 != 0) {\n        puVar3 = iVar2 + 0xc;\n        do {\n            iVar4 = iVar4 + -1;\n            if ((*(puVar3 + -1) & 1) != 0) {\n                uVar5 = *puVar3;\n                iVar2 = fcn.00401389();\n                if (iVar2 != 0) {\n                    *0x434f4c = *0x434f4c + 1;\n                    break;\n                }\n            }\n            puVar3 = puVar3 + 0x206;\n        } while (iVar4 != 0);\n    }\n    fcn.004040a2(0x404, uVar5);\n    (*_sym.imp.ole32.dll_OleUninitialize)();\n    return *0x434f4c;\n}\n",
        "token_count": 308
    },
    "0040621c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\nuint32_t fcn.0040621c(uint32_t param_1, uint8_t *param_2, int32_t param_3)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    \n    if (*0x4318bc == 0) {\n        uVar2 = 0;\n        do {\n            iVar3 = 8;\n            uVar1 = uVar2;\n            do {\n                uVar1 = uVar1 >> 1 ^ -((uVar1 & 1) != 0) & 0xedb88320;\n                iVar3 = iVar3 + -1;\n            } while (iVar3 != 0);\n            *(uVar2 * 4 + 0x4318b8) = uVar1;\n            uVar2 = uVar2 + 1;\n        } while (uVar2 < 0x100);\n    }\n    param_1 = ~param_1;\n    if (param_3 != 0) {\n        do {\n            param_1 = param_1 >> 8 ^ *((param_1 & 0xff ^ *param_2) * 4 + 0x4318b8);\n            param_2 = param_2 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return ~param_1;\n}\n",
        "token_count": 310
    },
    "0040628a": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_40h\n// WARNING: Variable defined which should be unmapped: var_38h\n// WARNING: Variable defined which should be unmapped: var_34h\n// WARNING: Variable defined which should be unmapped: var_30h\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.0040628a(uint8_t **arg_8h)\n\n{\n    uint8_t **ppuVar1;\n    uint8_t uVar2;\n    uint8_t **ppuVar3;\n    int32_t *piVar4;\n    uint8_t *puVar5;\n    int32_t iVar6;\n    uint8_t **ppuVar7;\n    char cVar8;\n    uint8_t *puVar9;\n    uint8_t *puVar10;\n    uint uVar11;\n    uint *puVar12;\n    uint8_t *puVar13;\n    uint32_t uVar14;\n    uint32_t uVar15;\n    uint8_t *var_40h;\n    uint8_t *var_38h;\n    uint8_t *var_34h;\n    uint8_t **var_30h;\n    uint8_t *var_2ch;\n    uint8_t **var_20h;\n    uint8_t *var_1ch;\n    uint8_t *var_18h;\n    uint8_t *var_14h;\n    int32_t var_10h;\n    uint var_ch;\n    uint8_t **var_8h;\n    int32_t var_4h;\n    \n    var_38h = *arg_8h;\n    ppuVar1 = arg_8h + 4;\n    var_34h = arg_8h[1];\n    var_30h = arg_8h[0x26ee];\n    puVar10 = arg_8h[0x14a];\n    var_40h = arg_8h[0x14b];\n    if (var_30h < arg_8h[0x26ed]) {\n        var_2ch = arg_8h[0x26ed] + (-1 - var_30h);\n    }\n    else {\n        var_2ch = arg_8h[0x26ec] + -var_30h;\n    }\ncode_r0x00406c9e:\n    while (*ppuVar1 < 0x10) {\n    // switch table (16 cases) at 0x406cd9\n        switch(*(*ppuVar1 * 4 + 0x406cd9)) {\n        case 0x406302:\n            for (; puVar10 < 0x3; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x00406cae;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            puVar10 = puVar10 + -3;\n            puVar5 = var_40h >> 3;\n            uVar14 = (var_40h & 7) >> 1;\n            arg_8h[0x149] = (-((var_40h & 1) != 0) & 7) + 8;\n            if (uVar14 == 0) {\n                *ppuVar1 = 0x9;\n                var_40h = puVar5 >> (puVar10 & 7);\n                puVar10 = puVar10 + -(puVar10 & 7);\n            }\n            else {\n                var_40h = puVar5;\n                if (uVar14 == 1) {\n                    if (*0x432e40 == '\\0') {\n                        var_8h = NULL;\n                        piVar4 = 0x431cc0;\n                        do {\n                            cVar8 = '\\b';\n                            if (0x431efc < piVar4) {\n                                if (piVar4 < 0x4320c0) {\n                                    cVar8 = '\\t';\n                                }\n                                else if (piVar4 < 0x432120) {\n                                    cVar8 = '\\a';\n                                }\n                            }\n                            *piVar4 = cVar8;\n                            piVar4 = piVar4 + 1;\n                        } while (piVar4 < 0x432140);\n                        fcn.00406d81(0x431cc0, 0x120, 0x101, 0x408478, 0x4084b8, 0x431cbc, 0x40a58c, 0x4325c0, &var_8h);\n                        puVar12 = 0x431cc0;\n                        for (iVar6 = 0x1e; iVar6 != 0; iVar6 = iVar6 + -1) {\n                            *puVar12 = 5;\n                            puVar12 = puVar12 + 1;\n                        }\n                        fcn.00406d81(0x431cc0, 0x1e, 0, 0x4084f8, 0x408534, 0x431cb8, 0x40a590, 0x4325c0, &var_8h);\n                        *0x432e40 = *0x432e40 + '\\x01';\n                    }\n                    *(arg_8h + 8) = *0x40a58c;\n                    *(arg_8h + 0x21) = *0x40a590;\n                    arg_8h[9] = *0x431cbc;\n                    arg_8h[10] = *0x431cb8;\n                    goto code_r0x0040645a;\n                }\n                if (uVar14 != 2) goto code_r0x0040633a;\n                *ppuVar1 = 0xb;\n            }\n            break;\n        case 0x406341:\n            goto code_r0x00406341;\n        case 0x406497:\n            for (; puVar10 < 0x20; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x00406cae;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            puVar10 = NULL;\n            puVar5 = var_40h & 0xffff;\n            var_40h = NULL;\n            arg_8h[5] = puVar5;\n            if (puVar5 == NULL) goto code_r0x0040659d;\n            puVar5 = 0xa;\n            goto code_r0x004065a3;\n        case 0x4064bc:\n            if (var_34h == NULL) {\ncode_r0x00406cae:\n                uVar11 = 0;\n                arg_8h[0x14b] = var_40h;\n                arg_8h[0x14a] = puVar10;\n                arg_8h[1] = NULL;\n                goto code_r0x00406362;\n            }\n            if (var_2ch == NULL) {\n                if (var_30h == arg_8h[0x26ec]) {\n                    ppuVar3 = arg_8h[0x26ed];\n                    ppuVar7 = arg_8h + 0x6ec;\n                    if (ppuVar3 != ppuVar7) {\n                        if (ppuVar7 < ppuVar3) {\n                            var_2ch = ppuVar3 + (-1 - ppuVar7);\n                        }\n                        else {\n                            var_2ch = arg_8h[0x26ec] - ppuVar7;\n                        }\n                        var_30h = ppuVar7;\n                        if (var_2ch != NULL) goto code_r0x00406569;\n                    }\n                }\n                arg_8h[0x26ee] = var_30h;\n                fcn.00406d19(arg_8h);\n                var_30h = arg_8h[0x26ee];\n                ppuVar7 = arg_8h[0x26ed];\n                if (var_30h < ppuVar7) {\n                    var_2ch = ppuVar7 + (-1 - var_30h);\n                }\n                else {\n                    var_2ch = arg_8h[0x26ec] + -var_30h;\n                }\n                if (var_30h == arg_8h[0x26ec]) {\n                    ppuVar3 = arg_8h + 0x6ec;\n                    if (ppuVar3 != ppuVar7) {\n                        var_30h = ppuVar3;\n                        if (ppuVar3 < ppuVar7) {\n                            var_2ch = ppuVar7 + (-1 - ppuVar3);\n                        }\n                        else {\n                            var_2ch = arg_8h[0x26ec] - ppuVar3;\n                        }\n                    }\n                }\n                if (var_2ch == NULL) goto code_r0x00406cca;\n            }\ncode_r0x00406569:\n            puVar5 = var_2ch;\n            if (var_34h <= var_2ch) {\n                puVar5 = var_34h;\n            }\n            puVar9 = arg_8h[5];\n            if (puVar5 <= arg_8h[5]) {\n                puVar9 = puVar5;\n            }\n            fcn.00405a2b();\n            var_38h = var_38h + puVar9;\n            var_34h = var_34h + -puVar9;\n            var_30h = var_30h + puVar9;\n            var_2ch = var_2ch + -puVar9;\n            ppuVar7 = arg_8h + 5;\n            *ppuVar7 = *ppuVar7 + -puVar9;\n            if (*ppuVar7 == NULL) {\ncode_r0x0040659d:\n                puVar5 = arg_8h[0x149];\ncode_r0x004065a3:\n                *ppuVar1 = puVar5;\n            }\n            break;\n        case 0x4065ca:\n            for (; puVar10 < 0xe; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x00406cae;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            arg_8h[5] = var_40h & 0x3fff;\n            if (((var_40h & 0x3fff & 0x1f) < 0x1e) && ((var_40h & 0x3e0) < 0x3a1)) {\n                var_40h = var_40h >> 0xe;\n                puVar10 = puVar10 + -0xe;\n                arg_8h[6] = NULL;\n                *ppuVar1 = 0xc;\n                goto code_r0x00406609;\n            }\n            goto code_r0x00406341;\n        case 0x406609:\ncode_r0x00406609:\n            if (arg_8h[6] < (arg_8h[5] >> 10) + 4) {\n                do {\n                    for (; puVar10 < 0x3; puVar10 = puVar10 + 8) {\n                        if (var_34h == NULL) goto code_r0x00406cae;\n                        var_34h = var_34h + -1;\n                        var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                        var_38h = var_38h + 1;\n                    }\n                    puVar5 = var_40h & 7;\n                    puVar10 = puVar10 + -3;\n                    var_40h = var_40h >> 3;\n                    arg_8h[arg_8h[6][0x408464] + 7] = puVar5;\n                    arg_8h[6] = arg_8h[6] + 1;\n                } while (arg_8h[6] < (arg_8h[5] >> 10) + 4);\n            }\n            while (arg_8h[6] < 0x13) {\n                arg_8h[arg_8h[6][0x408464] + 7] = NULL;\n                arg_8h[6] = arg_8h[6] + 1;\n            }\n            ppuVar7 = arg_8h + 0x147;\n            var_8h = NULL;\n            *ppuVar7 = 0x7;\n            iVar6 = fcn.00406d81(arg_8h + 7, 0x13, 0x13, 0, 0, arg_8h + 0x148, ppuVar7, arg_8h + 0x14c, &var_8h);\n            if ((iVar6 == 0) && (*ppuVar7 != NULL)) {\n                arg_8h[6] = NULL;\n                *ppuVar1 = 0xd;\ncode_r0x004067ec:\n                while (arg_8h[6] < (arg_8h[5] >> 5 & 0x1f) + 0x102 + (arg_8h[5] & 0x1f)) {\n                    for (; puVar10 < arg_8h[0x147]; puVar10 = puVar10 + 8) {\n                        if (var_34h == NULL) goto code_r0x00406cae;\n                        var_34h = var_34h + -1;\n                        var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                        var_38h = var_38h + 1;\n                    }\n                    uVar14 = *(arg_8h[0x147] * 2 + 0x40a568) & var_40h;\n                    uVar2 = arg_8h[0x148][uVar14 * 4 + 1];\n                    uVar15 = uVar2;\n                    var_14h = *(arg_8h[0x148] + uVar14 * 4 + 2);\n                    if (var_14h < 0x10) {\n                        puVar10 = puVar10 + -uVar15;\n                        var_40h = var_40h >> (uVar2 & 0x1f);\n                        arg_8h[arg_8h[6] + 7] = var_14h;\n                        arg_8h[6] = arg_8h[6] + 1;\n                    }\n                    else {\n                        if (var_14h == 0x12) {\n                            var_8h = 0xb;\n                            puVar5 = 0x7;\n                        }\n                        else {\n                            puVar5 = var_14h + -0xe;\n                            var_8h = 0x3;\n                        }\n                        for (; puVar10 < puVar5 + uVar15; puVar10 = puVar10 + 8) {\n                            if (var_34h == NULL) goto code_r0x00406cae;\n                            var_34h = var_34h + -1;\n                            var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                            var_38h = var_38h + 1;\n                        }\n                        uVar14 = var_40h >> (uVar2 & 0x1f);\n                        puVar10 = puVar10 + (-puVar5 - uVar15);\n                        puVar9 = var_8h + (*(puVar5 * 2 + 0x40a568) & uVar14);\n                        var_40h = uVar14 >> (puVar5 & 0x1f);\n                        puVar5 = arg_8h[6];\n                        if ((arg_8h[5] >> 5 & 0x1f) + 0x102 + (arg_8h[5] & 0x1f) < puVar9 + puVar5)\n                        goto code_r0x00406341;\n                        if (var_14h == 0x10) {\n                            if (puVar5 == NULL) goto code_r0x00406341;\n                            puVar13 = arg_8h[puVar5 + 6];\n                        }\n                        else {\n                            puVar13 = NULL;\n                        }\n                        ppuVar7 = arg_8h + puVar5 + 7;\n                        do {\n                            *ppuVar7 = puVar13;\n                            puVar5 = puVar5 + 1;\n                            ppuVar7 = ppuVar7 + 1;\n                            puVar9 = puVar9 + -1;\n                        } while (puVar9 != NULL);\n                        arg_8h[6] = puVar5;\n                    }\n                }\n                arg_8h[0x148] = NULL;\n                var_ch = 0;\n                uVar14 = arg_8h[5] & 0x1f;\n                uVar15 = uVar14 + 0x101;\n                var_14h = (arg_8h[5] >> 5 & 0x1f) + 1;\n                var_4h = 9;\n                var_10h = 6;\n                iVar6 = fcn.00406d81(arg_8h + 7, uVar15, 0x101, 0x408478, 0x4084b8, &var_18h, &var_4h, arg_8h + 0x14c, \n                                     &var_ch);\n                if (var_4h == 0) {\n                    iVar6 = -1;\n                }\n                if (((iVar6 != 0) ||\n                    (iVar6 = fcn.00406d81(arg_8h + uVar14 + 0x108, var_14h, 0, 0x4084f8, 0x408534, &var_1ch, &var_10h, \n                                          arg_8h + 0x14c, &var_ch),  iVar6 != 0)) ||\n                   ((var_10h == 0 && (0x101 < uVar15)))) goto code_r0x00406341;\n                *ppuVar1 = NULL;\n                *(arg_8h + 0x21) = var_10h;\n                arg_8h[9] = var_18h;\n                *(arg_8h + 8) = var_4h;\n                arg_8h[10] = var_1ch;\ncode_r0x004068d6:\n                arg_8h[7] = *(arg_8h + 8);\n                arg_8h[6] = arg_8h[9];\n                *ppuVar1 = 0x1;\ncode_r0x004068e9:\n                for (; puVar10 < arg_8h[7]; puVar10 = puVar10 + 8) {\n                    if (var_34h == NULL) goto code_r0x00406cae;\n                    var_34h = var_34h + -1;\n                    var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                    var_38h = var_38h + 1;\n                }\n                puVar5 = arg_8h[6] + (*(arg_8h[7] * 2 + 0x40a568) & var_40h) * 4;\n                var_40h = var_40h >> (puVar5[1] & 0x1f);\n                puVar10 = puVar10 + -puVar5[1];\n                uVar2 = *puVar5;\n                puVar9 = uVar2;\n                if (puVar9 == NULL) {\n                    arg_8h[6] = *(puVar5 + 2);\n                    *ppuVar1 = 0x6;\n                }\n                else if ((uVar2 & 0x10) == 0) {\n                    if ((uVar2 & 0x40) == 0) goto code_r0x00406a3c;\n                    if ((uVar2 & 0x20) == 0) goto code_r0x00406341;\n                    *ppuVar1 = 0x7;\n                }\n                else {\n                    arg_8h[6] = puVar9 & 0xf;\n                    arg_8h[5] = *(puVar5 + 2);\n                    *ppuVar1 = 0x2;\n                }\n            }\n            else {\n                *ppuVar1 = 0x11;\n            }\n            break;\n        case 0x4067ec:\n            goto code_r0x004067ec;\n        case 0x4068d6:\n            goto code_r0x004068d6;\n        case 0x4068e9:\n            goto code_r0x004068e9;\n        case 0x40697f:\n            puVar5 = arg_8h[6];\n            for (; puVar10 < puVar5; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x00406cae;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            arg_8h[5] = arg_8h[5] + (*(puVar5 * 2 + 0x40a568) & var_40h);\n            var_40h = var_40h >> (puVar5 & 0x1f);\n            puVar10 = puVar10 + -puVar5;\n            arg_8h[7] = *(arg_8h + 0x21);\n            arg_8h[6] = arg_8h[10];\n            *ppuVar1 = 0x3;\n        case 0x4069d0:\n            for (; puVar10 < arg_8h[7]; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x00406cae;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            puVar5 = arg_8h[6] + (*(arg_8h[7] * 2 + 0x40a568) & var_40h) * 4;\n            var_40h = var_40h >> (puVar5[1] & 0x1f);\n            puVar10 = puVar10 + -puVar5[1];\n            uVar2 = *puVar5;\n            puVar9 = uVar2;\n            if ((uVar2 & 0x10) == 0) {\n                if ((uVar2 & 0x40) != 0) goto code_r0x00406341;\ncode_r0x00406a3c:\n                arg_8h[7] = puVar9;\n                arg_8h[6] = puVar5 + *(puVar5 + 2) * 4;\n            }\n            else {\n                arg_8h[6] = puVar9 & 0xf;\n                arg_8h[7] = *(puVar5 + 2);\n                *ppuVar1 = 0x4;\n            }\n            break;\n        case 0x406a4e:\n            puVar5 = arg_8h[6];\n            for (; puVar10 < puVar5; puVar10 = puVar10 + 8) {\n                if (var_34h == NULL) goto code_r0x00406cae;\n                var_34h = var_34h + -1;\n                var_40h = var_40h | *var_38h << (puVar10 & 0x1f);\n                var_38h = var_38h + 1;\n            }\n            arg_8h[7] = arg_8h[7] + (*(puVar5 * 2 + 0x40a568) & var_40h);\n            var_40h = var_40h >> (puVar5 & 0x1f);\n            puVar10 = puVar10 + -puVar5;\n            *ppuVar1 = 0x5;\n        case 0x406a92:\n            puVar5 = arg_8h[7];\n            if (var_30h + (-0x1ba0 - ppuVar1) < puVar5) {\n                puVar5 = arg_8h[0x26ec] + (-ppuVar1 - puVar5) + -0x1ba0;\n            }\n            else {\n                puVar5 = -puVar5;\n            }\n            var_20h = puVar5 + var_30h;\n            puVar5 = arg_8h[5];\n            ppuVar7 = var_30h;\n            while (var_30h = ppuVar7,  puVar5 != NULL) {\n                if (var_2ch == NULL) {\n                    if (ppuVar7 == arg_8h[0x26ec]) {\n                        ppuVar3 = arg_8h[0x26ed];\n                        var_30h = arg_8h + 0x6ec;\n                        if (ppuVar3 != var_30h) {\n                            if (var_30h < ppuVar3) {\n                                var_2ch = ppuVar3 + (-1 - var_30h);\n                            }\n                            else {\n                                var_2ch = arg_8h[0x26ec] - var_30h;\n                            }\n                            ppuVar7 = var_30h;\n                            if (var_2ch != NULL) goto code_r0x00406b66;\n                        }\n                    }\n                    arg_8h[0x26ee] = ppuVar7;\n                    fcn.00406d19();\n                    var_30h = arg_8h[0x26ee];\n                    ppuVar7 = arg_8h[0x26ed];\n                    if (var_30h < ppuVar7) {\n                        var_2ch = ppuVar7 + (-1 - var_30h);\n                    }\n                    else {\n                        var_2ch = arg_8h[0x26ec] + -var_30h;\n                    }\n                    var_8h = arg_8h[0x26ec];\n                    if ((var_30h == var_8h) && (ppuVar3 = arg_8h + 0x6ec,  ppuVar7 != ppuVar3)) {\n                        var_30h = ppuVar3;\n                        if (ppuVar3 < ppuVar7) {\n                            var_2ch = ppuVar7 + (-1 - ppuVar3);\n                        }\n                        else {\n                            var_2ch = var_8h - ppuVar3;\n                        }\n                    }\n                    if (var_2ch == NULL) goto code_r0x00406cca;\n                }\ncode_r0x00406b66:\n                *var_30h = *var_20h;\n                ppuVar7 = var_30h + 1;\n                var_20h = var_20h + 1;\n                var_2ch = var_2ch + -1;\n                if (var_20h == arg_8h[0x26ec]) {\n                    var_20h = arg_8h + 0x6ec;\n                }\n                ppuVar3 = arg_8h + 5;\n                *ppuVar3 = *ppuVar3 + -1;\n                puVar5 = *ppuVar3;\n            }\ncode_r0x0040645a:\n            *ppuVar1 = NULL;\n            break;\n        case 0x406b98:\n            if (var_2ch == NULL) {\n                if (var_30h == arg_8h[0x26ec]) {\n                    ppuVar3 = arg_8h[0x26ed];\n                    ppuVar7 = arg_8h + 0x6ec;\n                    if (ppuVar3 != ppuVar7) {\n                        if (ppuVar7 < ppuVar3) {\n                            var_2ch = ppuVar3 + (-1 - ppuVar7);\n                        }\n                        else {\n                            var_2ch = arg_8h[0x26ec] - ppuVar7;\n                        }\n                        var_30h = ppuVar7;\n                        if (var_2ch != NULL) goto code_r0x00406c37;\n                    }\n                }\n                arg_8h[0x26ee] = var_30h;\n                fcn.00406d19(arg_8h);\n                var_30h = arg_8h[0x26ee];\n                ppuVar7 = arg_8h[0x26ed];\n                if (var_30h < ppuVar7) {\n                    var_2ch = ppuVar7 + (-1 - var_30h);\n                }\n                else {\n                    var_2ch = arg_8h[0x26ec] + -var_30h;\n                }\n                var_8h = arg_8h[0x26ec];\n                if ((var_30h == var_8h) && (ppuVar3 = arg_8h + 0x6ec,  ppuVar7 != ppuVar3)) {\n                    var_30h = ppuVar3;\n                    if (ppuVar3 < ppuVar7) {\n                        var_2ch = ppuVar7 + (-1 - ppuVar3);\n                    }\n                    else {\n                        var_2ch = var_8h - ppuVar3;\n                    }\n                }\n                if (var_2ch != NULL) goto code_r0x00406c37;\n                goto code_r0x00406cca;\n            }\ncode_r0x00406c37:\n            *var_30h = *(arg_8h + 6);\n            var_2ch = var_2ch + -1;\n            var_30h = var_30h + 1;\n            goto code_r0x0040645a;\n        case 0x406c49:\n            if (0x7 < puVar10) {\n                puVar10 = puVar10 + -8;\n                var_34h = var_34h + 1;\n                var_38h = var_38h + -1;\n            }\n        case 0x406c57:\n            arg_8h[0x26ee] = var_30h;\n            fcn.00406d19();\n            var_30h = arg_8h[0x26ee];\n            ppuVar7 = arg_8h[0x26ed];\n            if (var_30h < ppuVar7) {\n                var_2ch = ppuVar7 + (-1 - var_30h);\n            }\n            else {\n                var_2ch = arg_8h[0x26ec] + -var_30h;\n            }\n            if (var_30h != ppuVar7) {\ncode_r0x00406cca:\n                uVar11 = 0;\n                goto code_r0x0040634a;\n            }\n            *ppuVar1 = arg_8h[0x149];\n            if (arg_8h[0x149] != 0x8) {\n                uVar11 = 1;\n                goto code_r0x0040634a;\n            }\n        }\n    }\n    goto code_r0x00406341;\ncode_r0x0040633a:\n    if (uVar14 == 3) {\ncode_r0x00406341:\n        uVar11 = 0xffffffff;\n        *ppuVar1 = 0x11;\ncode_r0x0040634a:\n        arg_8h[0x14b] = var_40h;\n        arg_8h[0x14a] = puVar10;\n        arg_8h[1] = var_34h;\ncode_r0x00406362:\n        *arg_8h = var_38h;\n        arg_8h[0x26ee] = var_30h;\n        fcn.00406d19(arg_8h);\n        return uVar11;\n    }\n    goto code_r0x00406c9e;\n}\n",
        "token_count": 7379
    },
    "00401389": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint fcn.00401389(int32_t param_1)\n\n{\n    int32_t *hWndChildAfter;\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    int32_t unaff_retaddr;\n    \n    while ((-1 < param_1 && (hWndChildAfter = param_1 * 0x1c + *0x434ef0,  *hWndChildAfter != 1))) {\n        iVar1 = fcn.00401434(hWndChildAfter);\n        if (iVar1 == 0x7fffffff) {\n            return 0x7fffffff;\n        }\n        iVar1 = fcn.0040136d();\n        if (iVar1 == 0) {\n            iVar2 = 1;\n            iVar1 = param_1 + 1;\n        }\n        else {\n            iVar1 = iVar1 + -1;\n            iVar2 = iVar1 - param_1;\n        }\n        param_1 = iVar1;\n        if (unaff_retaddr != 0) {\n            *0x433eac = *0x433eac + iVar2;\n            uVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(*0x433eac, 30000, *0x433e94, 0);\n            (*_sym.imp.USER32.dll_SendMessageW)(0x4013a8, 0x402, uVar3);\n        }\n    }\n    return 0;\n}\n",
        "token_count": 318
    },
    "00404486": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00404486(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = *0x42b1e0;\n    if (*0x434f4c == 0) {\n        uVar1 = *0x42d214;\n    }\n    (*_sym.imp.USER32.dll_SendMessageW)(uVar1, 0xf4, 1, 1);\n    return;\n}\n",
        "token_count": 91
    },
    "00404978": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl fcn.00404978(uint arg_8h, int32_t arg_ch)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint var_38h;\n    uint var_34h;\n    uint var_14h;\n    int32_t lpPoint;\n    int32_t var_ch;\n    uint var_8h;\n    uint var_4h;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    var_34h = (*_sym.imp.USER32.dll_SendMessageW)(arg_8h, 0x110a, 9, 0);\n    if (arg_ch != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetMessagePos)();\n        lpPoint = uVar2;\n        var_ch = uVar2 >> 0x10;\n        (*_sym.imp.USER32.dll_ScreenToClient)(arg_8h, &lpPoint);\n        (*pcVar1)(arg_8h, 0x1111, 0, &lpPoint);\n        var_34h = var_4h;\n        if ((var_8h & 0x66) == 0) {\n            return 0xffffffff;\n        }\n    }\n    var_38h = 4;\n    (*pcVar1)(arg_8h, 0x113e, 0, &var_38h);\n    return var_14h;\n}\n",
        "token_count": 320
    },
    "004055e0": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.004055e0(uint param_1, uint32_t param_2)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = param_2 & 0x1fffff;\n    if ((*0x434f60 == 0) || (param_2 >> 0x15 == 0)) {\n        if (*0x434f68 != 0) {\n            uVar1 = uVar1 ^ 0x180000;\n        }\n        *0x40a3b4 = *0x434ec8;\n        *0x40a3b8 = *0x434ec0;\n        *0x40a3bc = param_1;\n        *0x40a3c0 = 0x433ec0;\n        *0x40a3c4 = uVar1;\n        (*_sym.imp.USER32.dll_MessageBoxIndirectW)(0x40a3b0);\n    }\n    return;\n}\n",
        "token_count": 210
    },
    "004058fa": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nint16_t * fcn.004058fa(int16_t *param_1)\n\n{\n    code *pcVar1;\n    int16_t *piVar2;\n    uint uVar3;\n    int32_t iVar4;\n    \n    pcVar1 = _sym.imp.USER32.dll_CharNextW;\n    piVar2 = (*_sym.imp.USER32.dll_CharNextW)(param_1);\n    uVar3 = (*pcVar1)(piVar2);\n    if (((*param_1 == 0) || (*piVar2 != 0x3a)) || (piVar2[1] != 0x5c)) {\n        if ((*param_1 == 0x5c) && (param_1[1] == 0x5c)) {\n            iVar4 = 2;\n            do {\n                iVar4 = iVar4 + -1;\n                piVar2 = fcn.0040587c();\n                if (*piVar2 == 0) goto code_r0x0040594f;\n                piVar2 = piVar2 + 1;\n            } while (iVar4 != 0);\n        }\n        else {\ncode_r0x0040594f:\n            piVar2 = NULL;\n        }\n    }\n    else {\n        piVar2 = (*pcVar1)(uVar3);\n    }\n    return piVar2;\n}\n",
        "token_count": 293
    },
    "00405e26": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_18h\n// WARNING: Variable defined which should be unmapped: var_14h\n// WARNING: Variable defined which should be unmapped: var_10h\n\nvoid __cdecl fcn.00405e26(uint *arg_8h, int32_t arg_ch)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    bool bVar3;\n    int32_t iVar4;\n    uint16_t *puVar5;\n    uint32_t uVar6;\n    uint *puVar7;\n    uint *arg_8h_00;\n    int32_t iVar8;\n    uint *var_18h;\n    uint *var_14h;\n    uint *var_10h;\n    uint32_t var_ch;\n    uint *ppidl;\n    uint16_t *var_4h;\n    \n    puVar7 = arg_8h;\n    if (arg_ch < 0) {\n        arg_ch = *(*0x433e9c - (arg_ch * 4 + 4));\n    }\n    puVar5 = *0x434ef8 + arg_ch * 2;\n    arg_8h_00 = 0x432e60;\n    if ((0x432e5f < arg_8h) && (arg_8h + -0x10cb98 >> 1 < 0x800)) {\n        arg_8h = NULL;\n        arg_8h_00 = puVar7;\n    }\n    do {\n        while( true ) {\n            uVar2 = *puVar5;\n            if ((uVar2 == 0) || (0x7ff < (arg_8h_00 + -0x10cb98 & 0xfffffffe))) {\n                *arg_8h_00 = 0;\n                if (arg_8h != NULL) {\n                    fcn.00405e04(arg_8h, 0x432e60);\n                }\n                return;\n            }\n            var_4h = puVar5 + 1;\n            if (uVar2 < 4) break;\n            if (uVar2 == 4) {\n                *arg_8h_00 = *var_4h;\n                arg_8h_00 = arg_8h_00 + 2;\n                puVar5 = puVar5 + 2;\n            }\n            else {\n                *arg_8h_00 = uVar2;\n                arg_8h_00 = arg_8h_00 + 2;\n                puVar5 = var_4h;\n            }\n        }\n        uVar1 = *var_4h;\n        var_4h = puVar5 + 2;\n        uVar6 = (*(puVar5 + 3) & 0x7f) << 7 | uVar1 & 0x7f;\n        puVar7 = uVar1;\n        var_ch = *(puVar5 + 3);\n        var_18h = puVar7 | 0x8000;\n        var_10h = var_ch | 0x8000;\n        var_14h = puVar7;\n        if (uVar2 == 2) {\n            iVar8 = 2;\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n            if ((((iVar4 < 0) && (iVar4 != 0x5a04)) && (var_ch != 0x23)) && (var_ch != 0x2e)) {\n                bVar3 = false;\n            }\n            else {\n                bVar3 = true;\n            }\n            if (*0x434f44 != 0) {\n                var_10h = 0x4;\n                iVar8 = 4;\n            }\n            if (uVar1 < '\\0') {\n                var_10h = puVar7 & 0x40;\n                var_18h = *0x434ef8 + (puVar7 & 0x3f) * 2;\n                var_14h = arg_8h_00;\n                fcn.00405cd1(0x80000002, L\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\", var_18h, arg_8h_00, var_10h);\n                if (*arg_8h_00 == 0) {\n                    fcn.00405e26(arg_8h_00, var_ch);\n                    goto code_r0x00405fe1;\n                }\ncode_r0x00405fe7:\n                if (var_ch == 0x1a) {\n                    sub.KERNEL32.dll_lstrcatW();\n                }\n            }\n            else {\n                if (puVar7 == 0x25) {\n                    var_10h = 0x400;\n                    var_18h = 0x405f6d;\n                    var_14h = arg_8h_00;\n                    (*_sym.imp.KERNEL32.dll_GetSystemDirectoryW)();\n                }\n                else {\n                    if (puVar7 == 0x24) {\n                        var_10h = 0x400;\n                        var_18h = 0x405f80;\n                        var_14h = arg_8h_00;\n                        (*_sym.imp.KERNEL32.dll_GetWindowsDirectoryW)();\n                        iVar8 = 0;\n                    }\n                    while (iVar8 != 0) {\n                        iVar8 = iVar8 + -1;\n                        if ((*0x434ec4 != NULL) && (bVar3)) {\n                            var_10h = arg_8h_00;\n                            var_14h = NULL;\n                            var_18h = NULL;\n                            iVar4 = (**0x434ec4)(*0x434ec8, (&fcn.00405e26::var_18h)[iVar8]);\n                            if (iVar4 == 0) break;\n                        }\n                        var_10h = &fcn.00405e26::ppidl;\n                        var_14h = (&fcn.00405e26::var_18h)[iVar8];\n                        var_18h = *0x434ec8;\n                        iVar4 = (*_sym.imp.SHELL32.dll_SHGetSpecialFolderLocation)();\n                        if (iVar4 == 0) {\n                            var_14h = ppidl;\n                            var_18h = 0x405fca;\n                            var_10h = arg_8h_00;\n                            iVar4 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListW)();\n                            var_18h = ppidl;\n                            (*_sym.imp.ole32.dll_CoTaskMemFree)();\n                            if (iVar4 != 0) break;\n                        }\n                        *arg_8h_00 = 0;\n                    }\n                }\ncode_r0x00405fe1:\n                if (*arg_8h_00 != 0) goto code_r0x00405fe7;\n            }\ncode_r0x00405ff8:\n            fcn.00406098(arg_8h_00);\n        }\n        else if (uVar2 == 3) {\n            if (uVar6 == 0x1d) {\n                fcn.00405d4b(arg_8h_00, *0x434ec8);\n            }\n            else {\n                fcn.00405e04(arg_8h_00, uVar6 * 0x800 + 0x435000);\n            }\n            if (uVar6 - 0x15 < 7) goto code_r0x00405ff8;\n        }\n        else if (uVar2 == 1) {\n            fcn.00405e26(arg_8h_00, -1 - uVar6);\n        }\n        iVar4 = sub.KERNEL32.dll_lstrlenW();\n        arg_8h_00 = arg_8h_00 + iVar4 * 2;\n        puVar5 = var_4h;\n    } while( true );\n}\n",
        "token_count": 1716
    },
    "00406098": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00406098(uint16_t *param_1)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    uint32_t in_EAX;\n    uint32_t uVar3;\n    int16_t *piVar4;\n    int32_t iVar5;\n    uint16_t *puVar6;\n    uint16_t *puVar7;\n    \n    if ((((*param_1 == 0x5c) && (param_1[1] == 0x5c)) && (param_1[2] == 0x3f)) && (param_1[3] == 0x5c)) {\n        param_1 = param_1 + 4;\n    }\n    if ((*param_1 != 0) && (in_EAX = fcn.004058c6(param_1),  in_EAX != 0)) {\n        param_1 = param_1 + 2;\n    }\n    pcVar2 = _sym.imp.USER32.dll_CharNextW;\n    uVar1 = *param_1;\n    uVar3 = in_EAX & 0xffff0000 | uVar1;\n    puVar7 = param_1;\n    puVar6 = param_1;\n    while (uVar1 != 0) {\n        if ((0x1f < uVar3) && (piVar4 = fcn.0040587c(L\"*?|<>/\\\":\", uVar3),  *piVar4 == 0)) {\n            iVar5 = (*pcVar2)(puVar7);\n            fcn.00405a2b(puVar6, puVar7, iVar5 - puVar7 >> 1);\n            puVar6 = (*pcVar2)(puVar6);\n        }\n        puVar7 = (*pcVar2)(puVar7);\n        uVar1 = *puVar7;\n        uVar3 = puVar7 & 0xffff0000 | uVar1;\n    }\n    *puVar6 = 0;\n    while( true ) {\n        puVar6 = (*_sym.imp.USER32.dll_CharPrevW)(param_1, puVar6);\n        if ((*puVar6 != 0x20) && (*puVar6 != 0x5c)) break;\n        *puVar6 = 0;\n        if (puVar6 <= param_1) {\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 526
    },
    "00406d81": {
        "rules": [
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint __cdecl\nfcn.00406d81(int32_t *arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h, int32_t arg_18h, int32_t *arg_1ch, \n            uint32_t *arg_20h, int32_t arg_24h, uint32_t *arg_28h)\n\n{\n    int32_t iVar1;\n    unkbyte3 Var2;\n    uint uVar3;\n    ushort uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint32_t uVar11;\n    uint8_t uVar12;\n    uint *puVar13;\n    int32_t iVar14;\n    uint32_t *puVar15;\n    uint var_ech;\n    uint var_b0h;\n    uint var_ach;\n    int32_t aiStack172 [14];\n    uint32_t var_70h;\n    uint var_6ch;\n    int32_t var_30h;\n    uint32_t var_2ch;\n    int32_t var_28h;\n    uint32_t var_24h;\n    uint32_t *var_20h;\n    uint32_t *var_1ch;\n    uint32_t var_18h;\n    int32_t var_14h;\n    uint32_t var_10h;\n    int32_t var_ch;\n    uint32_t var_8h;\n    uint32_t var_4h;\n    \n    puVar15 = arg_20h;\n    puVar13 = &var_70h;\n    for (iVar5 = 0x10; piVar6 = arg_8h,  uVar8 = arg_ch,  iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar13 = 0;\n        puVar13 = puVar13 + 1;\n    }\n    do {\n        (&var_70h)[*piVar6] = (&var_70h)[*piVar6] + 1;\n        uVar8 = uVar8 - 1;\n        piVar6 = piVar6 + 1;\n    } while (uVar8 != 0);\n    if (var_70h == arg_ch) {\n        *arg_1ch = 0;\n        *arg_20h = 0;\n        uVar3 = 0;\n    }\n    else {\n        uVar8 = 1;\n        arg_20h = *arg_20h;\n        uVar9 = 0xf;\n        do {\n            iVar5 = 0;\n            if ((&var_70h)[uVar8] != 0) break;\n            uVar8 = uVar8 + 1;\n        } while (uVar8 < 0x10);\n        var_4h = uVar8;\n        if (arg_20h < uVar8) {\n            arg_20h = uVar8;\n        }\n        do {\n            if ((&var_70h)[uVar9] != 0) break;\n            uVar9 = uVar9 - 1;\n        } while (uVar9 != 0);\n        var_18h = uVar9;\n        if (uVar9 < arg_20h) {\n            arg_20h = uVar9;\n        }\n        *puVar15 = arg_20h;\n        var_30h = 1 << (uVar8 & 0x1f);\n        for (; uVar8 < uVar9; uVar8 = uVar8 + 1) {\n            if (var_30h - (&var_70h)[uVar8] < 0) goto code_r0x004070b2;\n            var_30h = (var_30h - (&var_70h)[uVar8]) * 2;\n        }\n        iVar7 = (&var_70h)[uVar9];\n        var_30h = var_30h - iVar7;\n        if (-1 < var_30h) {\n            var_ach = 0;\n            (&var_70h)[uVar9] = iVar7 + var_30h;\n            iVar7 = 0;\n            iVar10 = uVar9 - 1;\n            if (iVar10 != 0) {\n                iVar14 = 0;\n                do {\n                    iVar7 = iVar7 + *(&var_6ch + iVar14);\n                    iVar10 = iVar10 + -1;\n                    *(aiStack172 + iVar14) = iVar7;\n                    iVar14 = iVar14 + 4;\n                } while (iVar10 != 0);\n            }\n            uVar8 = 0;\n            piVar6 = arg_8h;\n            do {\n                iVar7 = *piVar6;\n                piVar6 = piVar6 + 1;\n                if (iVar7 != 0) {\n                    iVar10 = (&var_b0h)[iVar7];\n                    *(iVar10 * 4 + 0x432140) = uVar8;\n                    (&var_b0h)[iVar7] = iVar10 + 1;\n                }\n                uVar8 = uVar8 + 1;\n            } while (uVar8 < arg_ch);\n            iVar7 = (&var_b0h)[uVar9];\n            var_ch = -1;\n            var_24h = 0;\n            iVar10 = -arg_20h;\n            var_8h = 0;\n            var_b0h = 0;\n            var_20h = 0x432140;\n            var_ech = 0;\n            if (var_4h <= var_18h) {\n                var_28h = var_4h - 1;\n                var_1ch = &var_70h + var_4h;\n                do {\n                    var_10h = *var_1ch;\n                    while (var_10h != 0) {\n                        arg_8h._2_2_ = arg_8h >> 0x10;\n                        var_2ch = var_10h - 1;\n                        var_14h = arg_20h + iVar10;\n                        if (arg_20h + iVar10 < var_4h) {\n                            do {\n                                iVar14 = var_ch + 1;\n                                var_ch = iVar14;\n                                uVar8 = var_18h - var_14h;\n                                if (arg_20h < var_18h - var_14h) {\n                                    uVar8 = arg_20h;\n                                }\n                                uVar9 = var_4h - var_14h;\n                                uVar11 = 1 << (uVar9 & 0x1f);\n                                if ((var_10h < uVar11) &&\n                                   (iVar5 = uVar11 + (-1 - var_2ch),  puVar15 = var_1ch,  uVar9 < uVar8)) {\n                                    while (uVar9 = uVar9 + 1,  uVar9 < uVar8) {\n                                        uVar11 = puVar15[1];\n                                        if (iVar5 * 2 <= uVar11) break;\n                                        iVar5 = iVar5 * 2 - uVar11;\n                                        puVar15 = puVar15 + 1;\n                                    }\n                                }\n                                var_24h = 1 << (uVar9 & 0x1f);\n                                uVar8 = *arg_28h + var_24h;\n                                if (0x5a0 < uVar8) goto code_r0x004070b2;\n                                iVar5 = arg_24h + *arg_28h * 4;\n                                *arg_28h = uVar8;\n                                (&var_ech)[iVar14] = iVar5;\n                                uVar8 = var_8h;\n                                if (iVar14 == 0) {\n                                    *arg_1ch = iVar5;\n                                }\n                                else {\n                                    iVar1 = *(&stack0xffffff0c + iVar14 * 4);\n                                    (&var_b0h)[iVar14] = var_8h;\n                                    arg_8h._0_2_ = uVar9 & 0xff | (arg_20h & 0xff) << 8;\n                                    uVar8 = uVar8 >> (iVar10 & 0x1f);\n                                    arg_8h = CONCAT22((iVar5 - iVar1 >> 2) - uVar8, arg_8h);\n                                    *(iVar1 + uVar8 * 4) = arg_8h;\n                                }\n                                iVar10 = var_14h;\n                                var_14h = var_14h + arg_20h;\n                            } while (var_14h < var_4h);\n                        }\n                        uVar12 = iVar10;\n                        Var2 = CONCAT21(arg_8h._2_2_, var_4h - uVar12);\n                        if (var_20h < iVar7 * 4 + 0x432140U) {\n                            uVar8 = *var_20h;\n                            if (uVar8 < arg_10h) {\n                                arg_8h._0_2_ = CONCAT31(Var2, (uVar8 < 0x100) + -1) & 0xff60;\n                                uVar4 = *var_20h;\n                                var_20h = var_20h + 1;\n                            }\n                            else {\n                                iVar14 = (uVar8 - arg_10h) * 2;\n                                var_20h = var_20h + 1;\n                                arg_8h = CONCAT31(Var2, *(iVar14 + arg_18h) + 'P');\n                                uVar4 = *(iVar14 + arg_14h);\n                            }\n                            arg_8h = CONCAT22(uVar4, arg_8h);\n                        }\n                        else {\n                            arg_8h = CONCAT31(Var2, 0xc0);\n                        }\n                        for (uVar8 = var_8h >> (uVar12 & 0x1f); uVar8 < var_24h;\n                            uVar8 = uVar8 + (1 << (var_4h - uVar12 & 0x1f))) {\n                            *(iVar5 + uVar8 * 4) = arg_8h;\n                        }\n                        uVar8 = 1 << (var_28h & 0x1f);\n                        while ((var_8h & uVar8) != 0) {\n                            var_8h = var_8h ^ uVar8;\n                            uVar8 = uVar8 >> 1;\n                        }\n                        var_8h = var_8h ^ uVar8;\n                        var_10h = 1;\n                        var_10h = var_2ch;\n                        if (((1 << (uVar12 & 0x1f)) - 1U & var_8h) != (&var_b0h)[var_ch]) {\n                            do {\n                                iVar10 = iVar10 - arg_20h;\n                                var_ch = var_ch + -1;\n                            } while (((1 << (iVar10 & 0x1f)) - 1U & var_8h) != (&var_b0h)[var_ch]);\n                        }\n                    }\n                    var_4h = var_4h + 1;\n                    var_1ch = var_1ch + 1;\n                    var_28h = var_28h + 1;\n                } while (var_4h <= var_18h);\n            }\n            if (var_30h == 0) {\n                return 0;\n            }\n            if (var_18h == 1) {\n                return 0;\n            }\n        }\ncode_r0x004070b2:\n        uVar3 = 0xffffffff;\n    }\n    return uVar3;\n}\n",
        "token_count": 2593
    },
    "0040482c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040482c(uint arg_8h, int32_t arg_ch, uint arg_10h, uint arg_14h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    pcVar1 = _sym.imp.USER32.dll_SendMessageW;\n    if (arg_ch == 1) {\n        fcn.004055c4(0x3fb, arg_14h);\n        (*pcVar1)(arg_8h, 0x467, 1, arg_14h);\n    }\n    if (arg_ch == 2) {\n        iVar2 = (*_sym.imp.SHELL32.dll_SHGetPathFromIDListW)(arg_10h, arg_14h);\n        if ((iVar2 == 0) || (iVar2 = fcn.0040140b(7),  iVar2 != 0)) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = 1;\n        }\n        (*pcVar1)(arg_8h, 0x465, 0, uVar3);\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 258
    },
    "00405cd1": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00405cd1(uint hKey, uint lpcbData, uint lpValueName, ushort *lpType, int32_t samDesired)\n\n{\n    ushort *puVar1;\n    int32_t iVar2;\n    \n    puVar1 = lpType;\n    *lpType = 0;\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(hKey, lpcbData, 0, -(samDesired != 0) & 0x100 | 0x20019, &samDesired)\n    ;\n    if (iVar2 == 0) {\n        lpcbData = 0x800;\n        iVar2 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExW)(samDesired, lpValueName, 0, &lpType, puVar1, &lpcbData);\n        if ((iVar2 != 0) || ((lpType != 0x1 && (lpType != 0x2)))) {\n            *puVar1 = 0;\n        }\n        puVar1[0x3ff] = 0;\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(samDesired);\n    }\n    return;\n}\n",
        "token_count": 266
    },
    "0040136d": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nvoid fcn.0040136d(int32_t param_1)\n\n{\n    if (param_1 < 0) {\n        fcn.00405d64((param_1 + 1) * -0x800 + 0x435000);\n    }\n    return;\n}\n",
        "token_count": 62
    },
    "00402b3a": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nuint fcn.00402b3a(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint uVar2;\n    \n    uVar1 = param_1;\n    if (param_1 < 0) {\n        uVar1 = -param_1;\n    }\n    uVar2 = fcn.00405e26((uVar1 >> 4) * 0x800 + 0x40a598, *(*0x40cd98 + (uVar1 & 0xf) * 4));\n    if (param_1 < 0) {\n        fcn.00406098(uVar2);\n    }\n    return uVar2;\n}\n",
        "token_count": 149
    },
    "004044aa": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004044aa(uint arg_8h, int32_t arg_ch, uint arg_10h, int32_t arg_14h)\n\n{\n    if (arg_ch == 0x110) {\n        fcn.00404056(arg_8h, 0x1d, *(arg_14h + 0x30));\n        sub.USER32.dll_SetDlgItemTextW(arg_8h, 1000, *(arg_14h + 0x3c) * 0x800 + 0x435000);\n    }\n    fcn.004040bd(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 146
    },
    "004044f1": {
        "rules": [
            "hash data using aphash/ab9c9a8537c84744923d9bbb8bd71d10"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_48h\n\nvoid __cdecl fcn.004044f1(uint32_t arg_8h, uint32_t arg_ch, uint32_t arg_10h, int32_t arg_14h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint32_t arg_10h_00;\n    uint32_t arg_10h_01;\n    int32_t iVar4;\n    int32_t iVar5;\n    uint *puVar6;\n    ushort *puVar7;\n    uint32_t uVar8;\n    uint *var_48h;\n    uint var_44h;\n    uint var_40h;\n    uint var_3ch;\n    uint var_38h;\n    code *var_34h;\n    int32_t var_30h;\n    uint32_t var_28h;\n    int32_t var_24h;\n    int32_t var_20h;\n    uint var_1ch;\n    int32_t var_18h;\n    uint var_14h;\n    int32_t var_10h;\n    code *var_ch;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_20h = *0x42c1f0;\n    var_8h = *(*0x42c1f0 + 0x38);\n    iVar5 = *(*0x42c1f0 + 0x3c) * 0x800 + 0x435000;\n    if (arg_ch == 0x40b) {\n        fcn.004055c4(0x3fb, iVar5);\n        fcn.00406098(iVar5);\n    }\n    if (arg_ch == 0x110) {\n        uVar1 = (*_sym.imp.USER32.dll_GetDlgItem)(arg_8h, 0x3fb);\n        iVar2 = fcn.004058c6(iVar5);\n        if ((iVar2 != 0) && (iVar2 = fcn.004058fa(iVar5),  iVar2 == 0)) {\n            fcn.0040584f(iVar5);\n        }\n        *0x433e98 = arg_8h;\n        (*_sym.imp.USER32.dll_SetWindowTextW)(uVar1, iVar5);\n        var_44h = *(arg_14h + 0x34);\n        var_48h = 0x1;\n        fcn.00404056(arg_8h);\n        fcn.00404056(arg_8h, 0x14, *(arg_14h + 0x30));\n        fcn.0040408b(uVar1);\n        pcVar3 = fcn.0040616e(8);\n        if (pcVar3 == NULL) goto code_r0x00404817;\n        (*pcVar3)(uVar1, 1);\n    }\n    iVar2 = var_8h;\n    if (arg_ch == 0x111) {\n        if ((arg_10h & 0xffff) == 0x3fb) {\n            if (arg_10h >> 0x10 != 0x300) goto code_r0x00404817;\n            arg_ch = 0x40f;\n        }\n        if ((arg_10h & 0xffff) == 0x3e9) {\n            puVar6 = &fcn.004044f1::var_44h;\n            for (iVar4 = 7; iVar4 != 0; iVar4 = iVar4 + -1) {\n                *puVar6 = 0;\n                puVar6 = puVar6 + 1;\n            }\n            var_48h = arg_8h;\n            var_40h = 0x42d218;\n            var_34h = fcn.0040482c;\n            var_30h = iVar5;\n            var_3ch = fcn.00405e26(0x42b9f0, iVar2);\n            var_38h = 0x41;\n            iVar2 = (*_sym.imp.SHELL32.dll_SHBrowseForFolderW)(&fcn.004044f1::var_48h);\n            if (iVar2 == 0) {\n                arg_ch = 0x40f;\n            }\n            else {\n                (*_sym.imp.ole32.dll_CoTaskMemFree)(iVar2);\n                fcn.0040584f(iVar5);\n                if ((*(*0x434ed0 + 0x11c) != 0) && (iVar5 == 0x43f800)) {\n                    uVar1 = 0;\n                    fcn.00405e26(0, *(*0x434ed0 + 0x11c));\n                    iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpiW)(0x432e60, 0x42d218);\n                    if (iVar2 != 0) {\n                        sub.KERNEL32.dll_lstrcatW(uVar1, 0x432e60, 0x43f800);\n                    }\n                }\n                *0x42d208 = *0x42d208 + 1;\n                sub.USER32.dll_SetDlgItemTextW(arg_8h, 0x3fb, iVar5);\n            }\n        }\n    }\n    if ((arg_ch == 0x40f) || (arg_ch == 0x405)) {\n        var_4h = 0;\n        var_8h = 0;\n        fcn.004055c4(0x3fb, iVar5);\n        iVar2 = fcn.00405957(iVar5);\n        if (iVar2 == 0) {\n            var_4h = 1;\n        }\n        fcn.00405e04(0x42b1e8, iVar5);\n        puVar7 = NULL;\n        var_44h = 0;\n        var_ch = fcn.0040616e();\n        if (var_ch != NULL) {\n            do {\n                var_48h = &fcn.004044f1::var_1ch;\n                iVar2 = (*var_ch)(0x42b1e8, &fcn.004044f1::var_28h, &fcn.004044f1::var_14h);\n                if (iVar2 != 0) {\n                    var_8h = 1;\n                    arg_10h_00 = var_28h >> 10 | var_24h << 0x16;\n                    goto code_r0x00404781;\n                }\n                if (puVar7 != NULL) {\n                    *puVar7 = 0;\n                }\n                var_44h = 0x42b1e8;\n                var_48h = 0x404700;\n                puVar7 = fcn.0040589b();\n                *puVar7 = 0;\n                puVar7 = puVar7 + -1;\n                *puVar7 = 0x5c;\n            } while (puVar7 != 0x42b1e8);\n        }\n        var_48h = iVar5;\n        fcn.00405e04(0x42b1e8);\n        puVar7 = fcn.004058fa(0x42b1e8);\n        if (puVar7 != NULL) {\n            *puVar7 = 0;\n        }\n        iVar5 = (*_sym.imp.KERNEL32.dll_GetDiskFreeSpaceW)\n                          (0x42b1e8, &fcn.004044f1::var_10h, &fcn.004044f1::var_18h, &fcn.004044f1::var_ch, \n                           &fcn.004044f1::var_24h);\n        arg_10h_00 = arg_ch;\n        if (iVar5 != 0) {\n            var_44h = 0x400;\n            var_48h = var_ch;\n            arg_10h_00 = (*_sym.imp.KERNEL32.dll_MulDiv)(var_10h * var_18h);\n            var_8h = 1;\n        }\ncode_r0x00404781:\n        uVar8 = 5;\n        var_48h = 0x404788;\n        arg_10h_01 = fcn.0040494b();\n        if ((var_8h != 0) && (arg_10h_00 < arg_10h_01)) {\n            var_4h = 2;\n        }\n        if (*(*0x433e9c + 0x10) != 0) {\n            var_48h = arg_10h_01;\n            fcn.00404892(0x3ff, 0xfffffffb, arg_10h_01);\n            if (var_8h == 0) {\n                sub.USER32.dll_SetDlgItemTextW(arg_8h, 0x400, 0x42b1d8);\n                uVar8 = arg_8h;\n            }\n            else {\n                uVar8 = 0x400;\n                fcn.00404892(0x400, 0xfffffffc, arg_10h_00);\n            }\n        }\n        *0x434f64 = var_4h;\n        if (var_4h == 0) {\n            uVar8 = 7;\n            var_4h = fcn.0040140b();\n        }\n        if ((*(var_20h + 0x14) & 0x400) != 0) {\n            var_4h = 0;\n        }\n        fcn.00404078(var_4h == 0, uVar8);\n        if ((var_4h == 0) && (*0x42d208 == 0)) {\n            fcn.00404486();\n        }\n        *0x42d208 = 0;\n    }\ncode_r0x00404817:\n    fcn.004040bd(arg_ch, arg_10h, arg_14h);\n    return;\n}\n",
        "token_count": 2191
    },
    "0040416a": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint __cdecl fcn.0040416a(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, int32_t *arg_14h)\n\n{\n    int32_t iVar1;\n    \n    (*_sym.imp.KERNEL32.dll_lstrcpynW)(arg_ch, *0x42b1e4 + arg_8h, arg_10h >> 1);\n    iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_ch);\n    *arg_14h = iVar1 * 2;\n    *0x42b1e4 = *0x42b1e4 + iVar1 * 2;\n    return 0;\n}\n",
        "token_count": 152
    },
    "004041a4": {
        "rules": [
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a",
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43"
        ],
        "decompiled_code": "\nuint __cdecl fcn.004041a4(int32_t arg_8h, uint arg_ch, uint32_t arg_10h, int32_t *arg_14h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_lstrlenW)(arg_8h + *0x42b1e4 * 2);\n    if (arg_10h >> 1 <= uVar1) {\n        uVar1 = arg_10h >> 1;\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, arg_8h + *0x42b1e4 * 2, uVar1, arg_ch, arg_10h, 0, 0);\n    *arg_14h = iVar2;\n    *0x42b1e4 = *0x42b1e4 + iVar2;\n    return 0;\n}\n",
        "token_count": 219
    },
    "00405d64": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00405d64(uint16_t *arg_8h)\n\n{\n    uint16_t uVar1;\n    uint16_t uVar2;\n    uint16_t *puVar3;\n    uint32_t uVar4;\n    int32_t iVar5;\n    uint32_t uVar6;\n    int32_t var_8h;\n    int32_t var_4h;\n    \n    var_4h = 0;\n    uVar2 = 10;\n    var_8h = 1;\n    uVar6 = 0x39;\n    if (*arg_8h == 0x2d) {\n        arg_8h = arg_8h + 1;\n        var_8h = -1;\n    }\n    puVar3 = arg_8h;\n    if (*arg_8h == 0x30) {\n        puVar3 = arg_8h + 1;\n        uVar1 = *puVar3;\n        if ((0x2f < uVar1) && (uVar1 < 0x38)) {\n            uVar2 = 8;\n            uVar6 = 0x37;\n        }\n        if ((uVar1 & 0xffdf) == 0x58) {\n            uVar2 = 0x10;\n            puVar3 = arg_8h + 2;\n        }\n    }\n    do {\n        uVar4 = *puVar3;\n        puVar3 = puVar3 + 1;\n        if ((uVar4 < 0x30) || (uVar6 < uVar4)) {\n            if ((uVar2 != 0x10) || (((uVar4 & 0xffffffdf) < 0x41 || (0x46 < (uVar4 & 0xffffffdf))))) {\n                return var_8h * var_4h;\n            }\n            iVar5 = (uVar4 & 7) + 9;\n        }\n        else {\n            iVar5 = uVar4 - 0x30;\n        }\n        var_4h = uVar2 * var_4h + iVar5;\n    } while( true );\n}\n",
        "token_count": 472
    },
    "00402b7a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "create or open registry key",
            "contain loop",
            "query or enumerate registry key",
            "delete registry key"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.00402b7a(uint hKey, uint lpSubKey, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint var_210h;\n    uint phkResult;\n    \n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(hKey, lpSubKey, 0, *0x434f70 | 8, &phkResult);\n    pcVar2 = _sym.imp.ADVAPI32.dll_RegEnumKeyW;\n    if (iVar1 == 0) {\n        do {\n            iVar1 = (*pcVar2)(phkResult, 0, &var_210h, 0x105);\n            if (iVar1 != 0) break;\n            if (arg_10h != 0) {\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n                goto code_r0x00402c0b;\n            }\n            iVar1 = fcn.00402b7a(phkResult, &var_210h, 0);\n        } while (iVar1 == 0);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(phkResult);\n        pcVar2 = fcn.0040616e(3);\n        if (pcVar2 == NULL) {\n            if ((*0x434f70 != 0) || (iVar1 = (*_sym.imp.ADVAPI32.dll_RegDeleteKeyW)(hKey, lpSubKey),  iVar1 != 0)) {\ncode_r0x00402c0b:\n                iVar1 = 1;\n            }\n        }\n        else {\n            iVar1 = (*pcVar2)(hKey, lpSubKey, *0x434f70, 0);\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 401
    },
    "00402c7f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00402c7f(uint arg_8h, int32_t arg_ch)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint var_80h;\n    \n    if (arg_ch == 0x110) {\n        (*_sym.imp.USER32.dll_SetTimer)(arg_8h, 1, 0xfa, 0);\n        arg_ch = 0x113;\n    }\n    if (arg_ch == 0x113) {\n        iVar2 = *0x4169c0;\n        if (*0x42a9d0 <= *0x4169c0) {\n            iVar2 = *0x42a9d0;\n        }\n        uVar1 = (*_sym.imp.KERNEL32.dll_MulDiv)(iVar2, 100, *0x42a9d0);\n        (*_sym.imp.USER32.dll_wsprintfW)(&var_80h, L\"verifying installer: %d%%\", uVar1);\n        (*_sym.imp.USER32.dll_SetWindowTextW)(arg_8h, &var_80h);\n        sub.USER32.dll_SetDlgItemTextW(arg_8h, 0x406, &var_80h);\n    }\n    return 0;\n}\n",
        "token_count": 274
    },
    "00404892": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.00404892(uint nIDDlgItem, uint arg_ch, uint32_t arg_10h)\n\n{\n    uint uVar1;\n    uint uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    uint arg_ch_00;\n    int8_t iVar6;\n    uint uVar7;\n    char16_t *pcVar8;\n    uint *arg_8h;\n    uint var_80h;\n    uint var_40h;\n    \n    iVar6 = 0x14;\n    arg_ch_00 = 0xffffffdc;\n    if (arg_10h < 0x100000) {\n        iVar6 = 10;\n        arg_ch_00 = 0xffffffdd;\n    }\n    if (arg_10h < 0x400) {\n        iVar6 = 0;\n        arg_ch_00 = 0xffffffde;\n    }\n    if (arg_10h < 0xffff3333) {\n        arg_10h = arg_10h + (1 << iVar6) / 0x14;\n    }\n    uVar1 = fcn.00405e26(&var_40h, 0xffffffdf);\n    arg_8h = &var_80h;\n    uVar2 = fcn.00405e26(arg_8h, arg_ch_00);\n    uVar5 = ((arg_10h & 0xffffff) * 10 >> iVar6) % 10;\n    arg_10h = arg_10h >> iVar6;\n    pcVar8 = L\"%u.%u%s%s\";\n    uVar7 = 0x42d218;\n    iVar3 = fcn.00405e26(0x42d218, arg_ch);\n    iVar4 = sub.KERNEL32.dll_lstrlenW(0x42d218, uVar7, arg_ch, pcVar8, arg_10h, uVar5, uVar2, arg_8h, arg_ch_00, uVar1);\n    (*_sym.imp.USER32.dll_wsprintfW)(iVar3 + iVar4 * 2);\n    sub.USER32.dll_SetDlgItemTextW(*0x433e98, nIDDlgItem, 0x42d218);\n    return;\n}\n",
        "token_count": 497
    },
    "00406d19": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00406d19(int32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    \n    uVar4 = *(param_1 + 0x9bb4);\n    while( true ) {\n        uVar2 = *(param_1 + 0x9bb8);\n        if (uVar2 < uVar4) {\n            uVar2 = *(param_1 + 0x9bb0);\n        }\n        uVar1 = *(param_1 + 0xc);\n        uVar3 = uVar2 - uVar4;\n        if (uVar1 <= uVar2 - uVar4) {\n            uVar3 = uVar1;\n        }\n        *(param_1 + 0xc) = uVar1 - uVar3;\n        fcn.00405a2b();\n        *(param_1 + 8) = *(param_1 + 8) + uVar3;\n        if (uVar4 + uVar3 != *(param_1 + 0x9bb0)) break;\n        uVar4 = param_1 + 0x1bb0;\n        if (*(param_1 + 0x9bb8) == *(param_1 + 0x9bb0)) {\n            *(param_1 + 0x9bb8) = uVar4;\n        }\n    }\n    *(param_1 + 0x9bb4) = uVar4 + uVar3;\n    return;\n}\n",
        "token_count": 344
    },
    "00401299": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401299(uint32_t param_1)\n\n{\n    uint32_t uVar1;\n    uint32_t *puVar2;\n    uint32_t uVar3;\n    \n    uVar3 = 0;\n    if ((param_1 < 0x20) && (*0x434eec != 0)) {\n        puVar2 = *0x434ee8 + 8;\n        do {\n            uVar1 = *puVar2;\n            if ((uVar1 & 6) == 0) {\n                if ((puVar2[-1] & 1 << (param_1 & 0x1f)) == 0) {\n                    uVar1 = uVar1 & 0xfffffffe;\n                }\n                else {\n                    uVar1 = uVar1 | 1;\n                }\n                *puVar2 = uVar1;\n            }\n            uVar3 = uVar3 + 1;\n            puVar2 = puVar2 + 0x206;\n        } while (uVar3 < *0x434eec);\n    }\n    return;\n}\n",
        "token_count": 236
    },
    "00402c2f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00402c2f(int32_t param_1)\n\n{\n    if (param_1 == 0) {\n        param_1 = *0x434f44 + -0x7fffffff;\n    }\n    return param_1;\n}\n",
        "token_count": 58
    },
    "00403ab1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00403ab1(void)\n\n{\n    uint16_t uVar1;\n    uint uVar2;\n    uint16_t *puVar3;\n    uint16_t uVar4;\n    int32_t iVar5;\n    int32_t *piVar6;\n    \n    uVar4 = 0xffff;\n    uVar1 = fcn.00405d64(0x441000);\n    do {\n        if (*0x434f04 != 0) {\n            puVar3 = *(*0x434ed0 + 100) * *0x434f04 + *0x434f00;\n            iVar5 = *0x434f04;\n            do {\n                puVar3 = puVar3 - *(*0x434ed0 + 100);\n                iVar5 = iVar5 + -1;\n                if (((*puVar3 ^ uVar1) & uVar4) == 0) {\n                    *0x433ea0 = *(puVar3 + 1);\n                    *0x434f68 = *(puVar3 + 3);\n                    *0x433e9c = puVar3 + 5;\n                    if (*0x433e9c != NULL) {\n                        fcn.00405d4b(0x441000, *puVar3);\n                        uVar2 = fcn.00405e26(0x433ec0, 0xfffffffe);\n                        (*_sym.imp.USER32.dll_SetWindowTextW)(*0x42d1f8, uVar2);\n                        piVar6 = *0x434ee8;\n                        for (iVar5 = *0x434eec; iVar5 != 0; iVar5 = iVar5 + -1) {\n                            if (*piVar6 != 0) {\n                                fcn.00405e26(piVar6 + 6, *piVar6);\n                            }\n                            piVar6 = piVar6 + 0x206;\n                        }\n                        return;\n                    }\n                    break;\n                }\n            } while (iVar5 != 0);\n        }\n        if (uVar4 == 0xffff) {\n            uVar4 = 0x3ff;\n        }\n        else {\n            uVar4 = 0;\n        }\n    } while( true );\n}\n",
        "token_count": 483
    },
    "00404056": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00404056(uint param_1, uint param_2, uint param_3)\n\n{\n    uint uVar1;\n    int32_t unaff_retaddr;\n    \n    uVar1 = fcn.00405e26(0, param_3);\n    sub.USER32.dll_SetDlgItemTextW(param_3, unaff_retaddr + 1000, uVar1);\n    return;\n}\n",
        "token_count": 89
    },
    "0040589b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint16_t * fcn.0040589b(int16_t *param_1)\n\n{\n    int32_t iVar1;\n    int16_t *piVar2;\n    \n    iVar1 = sub.KERNEL32.dll_lstrlenW(param_1);\n    piVar2 = param_1 + iVar1;\n    do {\n        if (*piVar2 == 0x5c) break;\n        piVar2 = (*_sym.imp.USER32.dll_CharPrevW)(param_1, piVar2);\n    } while (param_1 < piVar2);\n    *piVar2 = 0;\n    return piVar2 + 1;\n}\n",
        "token_count": 139
    },
    "00405a9f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nushort * __cdecl fcn.00405a9f(ushort *arg_8h, uint lpPathName)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uint var_8h;\n    uint32_t var_4h;\n    \n    iVar3 = 100;\n    do {\n        iVar3 = iVar3 + -1;\n        var_8h = *0x40a528;\n        var_4h = *0x40a52c;\n        uVar1 = (*_sym.imp.KERNEL32.dll_GetTickCount)();\n        var_4h = var_4h & 0xffff0000 | var_4h + uVar1 % 0x1a;\n        iVar2 = (*_sym.imp.KERNEL32.dll_GetTempFileNameW)(lpPathName, &var_8h, 0, arg_8h);\n        if (iVar2 != 0) {\n            return arg_8h;\n        }\n    } while (iVar3 != 0);\n    *arg_8h = 0;\n    return NULL;\n}\n",
        "token_count": 250
    },
    "00405d4b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00405d4b(uint param_1, uint param_2)\n\n{\n    (*_sym.imp.USER32.dll_wsprintfW)(param_1, 0x4083b0, param_2);\n    return;\n}\n",
        "token_count": 53
    },
    "00405a70": {
        "rules": [
            "get file attributes",
            "create or open file"
        ],
        "decompiled_code": "\nvoid fcn.00405a70(uint param_1, uint param_2)\n\n{\n    uint32_t uVar1;\n    uint unaff_retaddr;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetFileAttributesW)(param_1);\n    (*_sym.imp.KERNEL32.dll_CreateFileW)(unaff_retaddr, param_1, 1, 0, param_2, -(uVar1 != 0xffffffff) & uVar1, 0);\n    return;\n}\n",
        "token_count": 111
    },
    "0040557f": {
        "rules": [
            "create process on Windows"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.0040557f(uint lpCommandLine)\n\n{\n    int32_t iVar1;\n    int32_t lpProcessAttributes;\n    uint hObject;\n    \n    *0x430220 = 0x44;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessW)(0, lpCommandLine, 0, 0, 0, 0, 0, 0, 0x430220, &lpProcessAttributes);\n    if (iVar1 != 0) {\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(hObject);\n        iVar1 = lpProcessAttributes;\n    }\n    return iVar1;\n}\n",
        "token_count": 141
    },
    "00402c44": {
        "rules": [
            "create or open registry key"
        ],
        "decompiled_code": "\nuint32_t __cdecl fcn.00402c44(uint32_t arg_8h)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = fcn.00402b3a(0x22, 0, *0x434f70 | arg_8h, &arg_8h);\n    uVar1 = fcn.00402c2f(*(*0x40cd98 + 4), uVar1);\n    iVar2 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExW)(uVar1);\n    return ~-(iVar2 != 0) & arg_8h;\n}\n",
        "token_count": 143
    },
    "0040372b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040372b(uint param_1)\n\n{\n    uint *puVar1;\n    \n    for (puVar1 = *0x42b1dc; puVar1 != NULL; puVar1 = *puVar1) {\n        (*puVar1[1])(param_1);\n    }\n    return;\n}\n",
        "token_count": 72
    },
    "00403746": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00403746(void)\n\n{\n    int32_t *piVar1;\n    int32_t *piVar2;\n    \n    piVar2 = *0x42b1dc;\n    fcn.0040372b(0);\n    if (piVar2 != NULL) {\n        do {\n            piVar1 = *piVar2;\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(piVar2[2]);\n            (*_sym.imp.KERNEL32.dll_GlobalFree)(piVar2);\n            piVar2 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    *0x42b1dc = NULL;\n    return;\n}\n",
        "token_count": 147
    },
    "0040377b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint fcn.0040377b(int32_t param_1)\n\n{\n    uint *puVar1;\n    \n    puVar1 = *0x42b1dc;\n    while( true ) {\n        if (puVar1 == NULL) {\n            return 1;\n        }\n        if (puVar1[2] == param_1) break;\n        puVar1 = *puVar1;\n    }\n    return 0;\n}\n",
        "token_count": 95
    },
    "0040587c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.0040587c(int16_t *param_1, int16_t param_2)\n\n{\n    for (; (*param_1 != 0 && (*param_1 != param_2)); param_1 = (*_sym.imp.USER32.dll_CharNextW)(param_1)) {\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "004059d5": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t __cdecl fcn.004059d5(int32_t arg_8h, uint lpString2)\n\n{\n    uchar uVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint var_4h;\n    \n    pcVar2 = _sym.imp.KERNEL32.dll_lstrlenA;\n    iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString2);\n    while( true ) {\n        iVar4 = (*pcVar2)(arg_8h);\n        if (iVar4 < iVar3) {\n            return 0;\n        }\n        uVar1 = *(iVar3 + arg_8h);\n        *(iVar3 + arg_8h) = 0;\n        iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpiA)(arg_8h, lpString2);\n        *(iVar3 + arg_8h) = uVar1;\n        if (iVar4 == 0) break;\n        arg_8h = (*_sym.imp.USER32.dll_CharNextA)(arg_8h);\n    }\n    return arg_8h;\n}\n",
        "token_count": 247
    },
    "00405a2b": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00405a2b(uchar *param_1, int32_t param_2, int32_t param_3)\n\n{\n    if (param_3 != 0) {\n        param_2 = param_2 - param_1;\n        do {\n            *param_1 = param_1[param_2];\n            param_1 = param_1 + 1;\n            param_3 = param_3 + -1;\n        } while (param_3 != 0);\n    }\n    return;\n}\n",
        "token_count": 113
    },
    "004061a7": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid __cdecl fcn.004061a7(uint arg_8h)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint lpMsg;\n    \n    pcVar1 = _sym.imp.USER32.dll_PeekMessageW;\n    while( true ) {\n        iVar2 = (*pcVar1)(&lpMsg, 0, arg_8h, arg_8h, 1);\n        if (iVar2 == 0) break;\n        (*_sym.imp.USER32.dll_DispatchMessageW)(&lpMsg);\n    }\n    return;\n}\n",
        "token_count": 124
    },
    "004031fa": {
        "rules": [
            "create directory"
        ],
        "decompiled_code": "\nvoid fcn.004031fa(void)\n\n{\n    int32_t iVar1;\n    \n    fcn.00406098(0x441800);\n    iVar1 = fcn.004058c6(0x441800);\n    if (iVar1 == 0) {\n        return;\n    }\n    fcn.0040584f(0x441800);\n    (*_sym.imp.KERNEL32.dll_CreateDirectoryW)(0x441800, 0);\n    fcn.00405a9f(0x441000, 0x441800);\n    return;\n}\n",
        "token_count": 124
    },
    "00405af3": {
        "rules": [
            "read file on Windows"
        ],
        "decompiled_code": "\nuint __cdecl fcn.00405af3(uint hFile, uint lpBuffer, int32_t arg_10h)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint uVar3;\n    \n    iVar1 = arg_10h;\n    iVar2 = (*_sym.imp.KERNEL32.dll_ReadFile)(hFile, lpBuffer, arg_10h, &arg_10h, 0);\n    if ((iVar2 == 0) || (iVar1 != arg_10h)) {\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 143
    },
    "0040616e": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nvoid fcn.0040616e(int32_t param_1)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    \n    uVar1 = *(param_1 * 8 + 0x40a3d8);\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(uVar1);\n    if ((iVar2 == 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(uVar1),  iVar2 == 0)) {\n        return;\n    }\n    (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar2, *(param_1 * 8 + 0x40a3dc));\n    return;\n}\n",
        "token_count": 152
    }
}