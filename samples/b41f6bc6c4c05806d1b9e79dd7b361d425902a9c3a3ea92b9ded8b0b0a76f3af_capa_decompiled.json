{
    "00401110": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nbool fcn.00401110(char *arg1, char *arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    char *pcVar4;\n    char *pcVar5;\n    bool bVar6;\n    int32_t in_stack_00000028;\n    uint *in_stack_00000030;\n    uint auStack200 [2];\n    ulong uStack192;\n    ulong uStack184;\n    uint auStack168 [15];\n    uint uStack108;\n    uint16_t uStack104;\n    \n    bVar6 = true;\n    iVar3 = 1;\n    pcVar4 = arg2;\n    pcVar5 = 0x434a18;\n    do {\n        if (iVar3 == 0) break;\n        iVar3 = iVar3 + -1;\n        bVar6 = *pcVar4 == *pcVar5;\n        pcVar4 = pcVar4 + 1;\n        pcVar5 = pcVar5 + 1;\n    } while (bVar6);\n    auStack200[0] = 0;\n    if (bVar6) {\n        iVar3 = 1;\n        pcVar4 = arg1;\n        pcVar5 = 0x434a18;\n        do {\n            if (iVar3 == 0) break;\n            iVar3 = iVar3 + -1;\n            bVar6 = *pcVar4 == *pcVar5;\n            pcVar4 = pcVar4 + 1;\n            pcVar5 = pcVar5 + 1;\n        } while (bVar6);\n        if (bVar6) {\n            return true;\n        }\n    }\n    fcn.00418a70(auStack168, 0, 0x68);\n    bVar6 = in_stack_00000028 == 1;\n    uStack104 = bVar6;\n    iVar3 = 1;\n    pcVar4 = arg1;\n    pcVar5 = 0x434a18;\n    do {\n        if (iVar3 == 0) break;\n        iVar3 = iVar3 + -1;\n        bVar6 = *pcVar4 == *pcVar5;\n        pcVar4 = pcVar4 + 1;\n        pcVar5 = pcVar5 + 1;\n    } while (bVar6);\n    if (bVar6) {\n        arg1 = NULL;\n    }\n    auStack168[0] = 0x68;\n    uStack108 = 1;\n    iVar1 = (*_sym.imp.KERNEL32.dll_CreateProcessA)(arg1, arg2, 0, 0, 0, 0, 0, 0, auStack168, &uStack192);\n    if ((iVar1 != 0) && (arg3 != 0)) {\n        if (arg4 == 0) {\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uStack192, 0xffffffff);\n        }\n        else {\n            (*_sym.imp.KERNEL32.dll_WaitForSingleObject)(uStack192, arg4);\n        }\n    }\n    iVar2 = (*_sym.imp.KERNEL32.dll_GetExitCodeProcess)(uStack192, auStack200);\n    if (iVar2 != 0) {\n        *in_stack_00000030 = auStack200[0];\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(uStack184);\n        (*_sym.imp.KERNEL32.dll_CloseHandle)(uStack192);\n    }\n    return iVar1 != 0;\n}\n",
        "token_count": 774
    },
    "00401430": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.00401430(int64_t arg1, int64_t lpString)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    ulong auStack24 [3];\n    \n    uVar2 = 1;\n    if ((arg1 != 0) && (lpString != 0)) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n        if (iVar1 != 0) {\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(arg1, lpString, 0, 0x20019, auStack24);\n            if ((iVar1 == 2) ||\n               (iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(arg1, lpString, 0, 0x20019, auStack24),  iVar1 != 0)) {\n                uVar2 = 0;\n            }\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(auStack24[0]);\n            return uVar2;\n        }\n        return 0;\n    }\n    return 0;\n}\n",
        "token_count": 244
    },
    "004014f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.004014f0(int64_t arg1, int64_t lpString, ulong arg3)\n\n{\n    int32_t iVar1;\n    uchar auStack632 [32];\n    ulong *puStack600;\n    uint *puStack592;\n    uint auStack584 [2];\n    ulong uStack576;\n    uint auStack568 [4];\n    ulong auStack552 [64];\n    uint64_t uStack40;\n    \n    uStack40 = *0x444d30 ^ auStack632;\n    if (((arg1 != 0) && (lpString != 0)) && (iVar1 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString),  iVar1 != 0)) {\n        puStack600 = &uStack576;\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(arg1, lpString, 0, 0x20019);\n        if (iVar1 != 2) {\n            puStack600 = &uStack576;\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(arg1, lpString, 0, 0x20019);\n            if (iVar1 == 0) {\n                puStack592 = auStack568;\n                puStack600 = auStack552;\n                auStack568[0] = 0x200;\n                auStack584[0] = 1;\n                (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(uStack576, arg3, 0, auStack584);\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uStack576);\n                goto code_r0x004015ee;\n            }\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uStack576);\n    }\ncode_r0x004015ee:\n    fcn.00418d10(uStack40 ^ auStack632);\n    return;\n}\n",
        "token_count": 415
    },
    "00401690": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.00401690(int16_t *arg1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    \n    iVar2 = 0;\n    iVar1 = *arg1;\n    while (iVar1 != 0) {\n        arg1 = arg1 + 1;\n        iVar2 = iVar2 + 1;\n        iVar1 = *arg1;\n    }\n    return iVar2;\n}\n",
        "token_count": 94
    },
    "00413e20": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00413e20(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    if (*(arg1 + 8) == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00413de0(arg1);\n        uVar1 = (*_sym.imp.GDI32.dll_DeleteObject)(uVar1);\n    }\n    return uVar1;\n}\n",
        "token_count": 94
    },
    "00402180": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00402180(ulong arg1, uint64_t arg2, uint64_t arg3, ulong *arg4)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    code *pcVar5;\n    uint in_stack_00000028;\n    uint in_stack_00000030;\n    uint in_stack_00000038;\n    uint in_stack_0000003c;\n    uint in_stack_00000040;\n    int32_t *in_stack_00000048;\n    uint in_stack_00000050;\n    int32_t in_stack_00000058;\n    ulong uStack160;\n    ulong uStack152;\n    int32_t iStack144;\n    int32_t iStack140;\n    int16_t iStack136;\n    uint16_t uStack134;\n    int16_t iStack132;\n    ushort uStack130;\n    int32_t iStack128;\n    int32_t iStack124;\n    int16_t iStack120;\n    uint16_t uStack118;\n    int16_t iStack116;\n    ushort uStack114;\n    uchar auStack112 [8];\n    ulong uStack104;\n    \n    if (*0x446bb0 == 0) {\n        *0x446bb0 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"msimg32.dll\");\n    }\n    fcn.00413658(auStack112);\n    uVar4 = (*_sym.imp.USER32.dll_GetWindowDC)(arg1);\n    fcn.00413c08(auStack112, uVar4);\n    uStack152 = 0;\n    uStack160 = 0x434b38;\n    uVar1 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar4, 0x5a);\n    iVar2 = (*_sym.imp.KERNEL32.dll_MulDiv)(in_stack_00000040, uVar1, 0x48);\n    uVar1 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar4, 0x58);\n    iVar3 = (*_sym.imp.KERNEL32.dll_MulDiv)(in_stack_00000040, uVar1, 0x48);\n    uVar4 = (*_sym.imp.GDI32.dll_CreateFontA)\n                      (-1 - iVar2, -1 - iVar3, 0, 0, 0, 0, 0, 0, 1, 2, 1, 4, 0, \n                       *CONCAT44(in_stack_0000003c, in_stack_00000038));\n    fcn.00413da4(&uStack160, uVar4);\n    uVar4 = fcn.00413eb8(auStack112, &uStack160);\n    if (*0x446bb0 != 0) {\n        pcVar5 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*0x446bb0, \"GradientFill\");\n        if ((((*in_stack_00000048 == 0) && (in_stack_00000048[2] == 0)) && (in_stack_00000048[1] == 0)) &&\n           (in_stack_00000048[3] == 0)) {\n            (*_sym.imp.USER32.dll_GetClientRect)(arg1, in_stack_00000048);\n            in_stack_00000048[1] = in_stack_00000048[1] + -1;\n            in_stack_00000048[3] = in_stack_00000048[3] + 2;\n            in_stack_00000048[2] = in_stack_00000048[2] + 2;\n            *in_stack_00000048 = *in_stack_00000048 + -1;\n        }\n        iStack144 = *in_stack_00000048;\n        iStack140 = in_stack_00000048[1];\n        iStack136 = arg2 << 8;\n        uStack134 = arg2 & 0xffffffff & 0xff00;\n        iStack132 = ((arg2 & 0xffffffff) >> 0x10) << 8;\n        uStack130 = 0;\n        iStack128 = in_stack_00000048[2];\n        iStack124 = in_stack_00000048[3];\n        iStack120 = arg3 << 8;\n        uStack118 = arg3 & 0xffffffff & 0xff00;\n        iStack116 = ((arg3 & 0xffffffff) >> 0x10) << 8;\n        uStack114 = 0;\n        in_stack_00000038 = 0;\n        in_stack_0000003c = 1;\n        (*pcVar5)(uStack104, &iStack144, 2, &stack0x00000038, 1, in_stack_00000050);\n        if ((*0x446bb0 != 0) && (in_stack_00000058 == 1)) {\n            *0x446bb0 = 0;\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(0);\n        }\n    }\n    (*_sym.imp.GDI32.dll_SetTextColor)(uStack104, in_stack_00000028);\n    (*_sym.imp.GDI32.dll_SetBkMode)(uStack104, 1);\n    (*_sym.imp.USER32.dll_DrawTextA)(uStack104, *arg4, 0xffffffff, in_stack_00000048, in_stack_00000030);\n    *in_stack_00000048 = *in_stack_00000048 + -1;\n    in_stack_00000048[1] = in_stack_00000048[1] + -1;\n    in_stack_00000048[2] = in_stack_00000048[2] + 1;\n    in_stack_00000048[3] = in_stack_00000048[3] + 1;\n    (*_sym.imp.USER32.dll_DrawEdge)(uStack104, in_stack_00000048, 5);\n    fcn.00413eb8(auStack112, uVar4);\n    fcn.00413c54(auStack112);\n    uStack160 = 0x434b18;\n    fcn.00413e20(&uStack160);\n    fcn.00413ca0(auStack112);\n    return;\n}\n",
        "token_count": 1381
    },
    "00402660": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00402660(int64_t arg1, ulong noname_1, ulong noname_2, ulong arg4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar auStack568 [32];\n    uchar auStack536 [512];\n    uint64_t uStack24;\n    \n    uStack24 = *0x444d30 ^ auStack568;\n    if (0 < *(arg1 + 0x10)) {\n        if (*(arg1 + 0x10) < 2) {\n            fcn.004129d8();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        fcn.00418c50(auStack536, 0x434a54, *(*(arg1 + 8) + 8), arg4);\n    }\n    if (0 < *(arg1 + 0x10)) {\n        iVar3 = 0;\n        do {\n            if (*(arg1 + 0x10) < 2) {\n                fcn.004129d8();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            iVar2 = fcn.00418750(*(*(arg1 + 8) + 8), \"DelFile\" + iVar3 * 0xf);\n        } while ((iVar2 != 0) && (iVar3 = iVar3 + 1,  iVar3 < 7));\n    }\n    fcn.00418d10(uStack24 ^ auStack568);\n    return;\n}\n",
        "token_count": 346
    },
    "00402740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00402740(int64_t arg1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    uchar auStack216 [32];\n    ulong uStack184;\n    char cStack176;\n    ulong uStack175;\n    ulong uStack167;\n    ulong uStack159;\n    uint uStack151;\n    char cStack147;\n    ulong uStack146;\n    uint uStack138;\n    ulong uStack134;\n    uint uStack126;\n    char cStack122;\n    ulong uStack121;\n    uint uStack113;\n    ulong uStack109;\n    ulong uStack101;\n    char cStack93;\n    uint uStack92;\n    uint uStack88;\n    uint uStack84;\n    uint uStack80;\n    uint uStack76;\n    uint uStack72;\n    ushort uStack68;\n    char cStack66;\n    uint uStack65;\n    ushort uStack61;\n    ulong uStack59;\n    ulong uStack51;\n    uint uStack43;\n    ushort uStack39;\n    char cStack37;\n    ushort uStack36;\n    uint64_t uStack24;\n    \n    uStack24 = *0x444d30 ^ auStack216;\n    uStack184 = str.IF_EXIST._0_8_;\n    cStack176 = str.IF_EXIST[8];\n    uStack175 = 0;\n    uStack167 = 0;\n    uStack159 = str.IF_NOT_EXIST._0_8_;\n    uStack151 = str.IF_NOT_EXIST._8_4_;\n    cStack147 = str.IF_NOT_EXIST[12];\n    uStack146 = 0;\n    uStack138 = 0;\n    uStack134 = str.IF_KEY_EXIST._0_8_;\n    uStack126 = str.IF_KEY_EXIST._8_4_;\n    cStack122 = str.IF_KEY_EXIST[12];\n    uStack121 = 0;\n    uStack113 = 0;\n    uStack109 = str.IF_KEY_NOT_EXIST._0_8_;\n    uStack101 = str.IF_KEY_NOT_EXIST._8_8_;\n    cStack93 = str.IF_KEY_NOT_EXIST[16];\n    uStack92 = 0;\n    uStack88 = 0;\n    uStack84 = str.IF_KEY_VALUE_EXIST._0_4_;\n    uStack80 = str.IF_KEY_VALUE_EXIST._4_4_;\n    uStack76 = str.IF_KEY_VALUE_EXIST._8_4_;\n    uStack72 = str.IF_KEY_VALUE_EXIST._12_4_;\n    uStack68 = str.IF_KEY_VALUE_EXIST._16_2_;\n    cStack66 = str.IF_KEY_VALUE_EXIST[18];\n    uStack65 = 0;\n    uStack61 = 0;\n    uStack59 = str.IF_KEY_VALUE_NOT_EXIST._0_8_;\n    uStack51 = str.IF_KEY_VALUE_NOT_EXIST._8_8_;\n    uStack43 = str.IF_KEY_VALUE_NOT_EXIST._16_4_;\n    uStack39 = str.IF_KEY_VALUE_NOT_EXIST._20_2_;\n    cStack37 = str.IF_KEY_VALUE_NOT_EXIST[22];\n    iVar3 = 0;\n    uStack36 = 0;\n    do {\n        if (*(arg1 + 0x10) < 3) {\n            fcn.004129d8();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        iVar2 = fcn.00418750(*(*(arg1 + 8) + 0x10), &uStack184 + iVar3 * 0x19);\n    } while ((iVar2 != 0) && (iVar3 = iVar3 + 1,  iVar3 < 6));\n    fcn.00418d10(uStack24 ^ auStack216);\n    return;\n}\n",
        "token_count": 831
    },
    "00402a90": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00402a90(int64_t *arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    ulong *puVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    int32_t iVar7;\n    uint64_t arg2_00;\n    int32_t iVar8;\n    uint64_t uVar9;\n    \n    uVar9 = arg2;\n    iVar6 = *arg1;\n    if (arg2 < *(iVar6 + -0x10)) {\n        uVar9 = *(iVar6 + -0x10);\n    }\n    iVar8 = uVar9;\n    if (1 < *(iVar6 + -8)) {\n        iVar6 = *arg1;\n        iVar2 = *(iVar6 + -0x10);\n        puVar4 = (**(**(iVar6 + -0x18) + 0x20))();\n        iVar5 = (***puVar4)(puVar4, uVar9, 1);\n        if (iVar5 == 0) {\n            fcn.00401e80();\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        if (iVar2 < iVar8) {\n            iVar8 = iVar2;\n        }\n        fcn.004194d0(iVar5 + 0x18, iVar8 + 1, iVar6, iVar8 + 1);\n        *(iVar5 + 8) = iVar2;\n        LOCK();\n        piVar1 = iVar6 + -8;\n        iVar8 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar8 + -1 < 1) {\n            (**(**(iVar6 + -0x18) + 8))(*(iVar6 + -0x18), iVar6 + -0x18);\n        }\n        *arg1 = iVar5 + 0x18;\n        return;\n    }\n    iVar2 = *(iVar6 + -0xc);\n    if (iVar2 < iVar8) {\n        if (0x400 < iVar2) {\n            iVar7 = iVar2 + 0x400;\n            if (iVar2 + 0x400 < iVar8) {\n                iVar7 = iVar8;\n            }\n            if ((*(*arg1 + -0xc) < iVar7) && (0 < iVar7)) {\n                iVar6 = (**(**(*arg1 + -0x18) + 0x10))();\n                if (iVar6 == 0) {\n                    fcn.00401e80();\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n                *arg1 = iVar6 + 0x18;\n                return;\n            }\n            fcn.00401e80();\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        arg2_00 = iVar2 * 2;\n        if (iVar2 * 2 < iVar8) {\n            arg2_00 = uVar9;\n        }\n        fcn.00401f50(arg1, arg2_00);\n    }\n    return;\n}\n",
        "token_count": 698
    },
    "00402af0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t ** fcn.00402af0(int64_t **arg1)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    int64_t **ppiVar3;\n    \n    piVar2 = (**(**arg1 + 0x20))();\n    if ((-1 < *(arg1 + 2)) && (piVar2 == *arg1)) {\n        LOCK();\n        *(arg1 + 2) = *(arg1 + 2) + 1;\n        return arg1;\n    }\n    ppiVar3 = (***piVar2)(piVar2, *(arg1 + 1), 1);\n    if (ppiVar3 == NULL) {\n        fcn.00401e80();\n        pcVar1 = swi(3);\n        ppiVar3 = (*pcVar1)();\n        return ppiVar3;\n    }\n    *(ppiVar3 + 1) = *(arg1 + 1);\n    fcn.004194d0(ppiVar3 + 3, *(arg1 + 1) + 1, arg1 + 3, *(arg1 + 1) + 1);\n    return ppiVar3;\n}\n",
        "token_count": 259
    },
    "00403150": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.00403150(int64_t *arg1, int64_t *arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    iVar7 = *arg1;\n    iVar1 = *(iVar7 + -0x10);\n    if (arg3 < 0) {\n        arg3._0_4_ = 0;\n    }\n    if (iVar1 <= arg3) {\n        puVar3 = (**(**(iVar7 + -0x18) + 0x20))();\n        if ((-1 < *(iVar7 + -8)) && (puVar3 == *(iVar7 + -0x18))) {\n            LOCK();\n            *(iVar7 + -8) = *(iVar7 + -8) + 1;\n            *arg2 = iVar7;\n            return arg2;\n        }\n        iVar4 = (***puVar3)(puVar3, *(iVar7 + -0x10), 1);\n        if (iVar4 != 0) {\n            *(iVar4 + 8) = *(iVar7 + -0x10);\n            iVar6 = *(iVar7 + -0x10) + 1;\n            fcn.004194d0(iVar4 + 0x18, iVar6, iVar7, iVar6);\n            *arg2 = iVar4 + 0x18;\n            return arg2;\n        }\n        fcn.00401e80();\n        pcVar2 = swi(3);\n        piVar5 = (*pcVar2)();\n        return piVar5;\n    }\n    if ((*(iVar7 + -0x18) == NULL) || (puVar3 = (**(**(iVar7 + -0x18) + 0x20))(),  puVar3 == NULL)) {\n        piVar5 = fcn.00413fd4();\n        puVar3 = (**(*piVar5 + 0x20))(piVar5);\n    }\n    iVar7 = arg3;\n    iVar4 = (iVar1 - iVar7) + *arg1;\n    if (puVar3 != NULL) {\n        if ((iVar4 == 0) && (arg3 != 0)) {\n            fcn.00401040(0x80070057);\n            pcVar2 = swi(3);\n            piVar5 = (*pcVar2)();\n            return piVar5;\n        }\n        iVar6 = (***puVar3)(puVar3, arg3, 1);\n        if (iVar6 == 0) {\n            fcn.00401e80();\n            pcVar2 = swi(3);\n            piVar5 = (*pcVar2)();\n            return piVar5;\n        }\n        *arg2 = iVar6 + 0x18;\n        if ((-1 < arg3) && (arg3 <= *(iVar6 + 0xc))) {\n            *(iVar6 + 8) = arg3;\n            *(*arg2 + iVar7) = 0;\n            fcn.004194d0(*arg2, iVar7, iVar4, iVar7);\n            return arg2;\n        }\n        fcn.00401040(0x80070057);\n        pcVar2 = swi(3);\n        piVar5 = (*pcVar2)();\n        return piVar5;\n    }\n    fcn.00401040(0x80004005);\n    pcVar2 = swi(3);\n    piVar5 = (*pcVar2)();\n    return piVar5;\n}\n",
        "token_count": 794
    },
    "004032d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.004032d0(int64_t *arg1, int64_t *arg2)\n\n{\n    int64_t **arg1_00;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t **ppiVar5;\n    \n    iVar4 = *arg2;\n    iVar3 = *arg1;\n    arg1_00 = iVar4 + -0x18;\n    ppiVar5 = iVar3 + -0x18;\n    if (arg1_00 != ppiVar5) {\n        if ((-1 < *(iVar3 + -8)) && (*arg1_00 == *ppiVar5)) {\n            iVar4 = fcn.00402af0(arg1_00);\n            LOCK();\n            piVar1 = iVar3 + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 + -1 < 1) {\n                (**(**ppiVar5 + 8))(*ppiVar5, ppiVar5);\n            }\n            *arg1 = iVar4 + 0x18;\n            return arg1;\n        }\n        fcn.00402d50(arg1, iVar4, *(iVar4 + -0x10));\n    }\n    return arg1;\n}\n",
        "token_count": 300
    },
    "004036a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t * fcn.004036a0(int64_t *arg1, int64_t *arg2)\n\n{\n    int64_t **arg1_00;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    int64_t **ppiVar5;\n    \n    iVar4 = *arg2;\n    iVar3 = *arg1;\n    arg1_00 = iVar4 + -0x18;\n    ppiVar5 = iVar3 + -0x18;\n    if (arg1_00 != ppiVar5) {\n        if ((-1 < *(iVar3 + -8)) && (*arg1_00 == *ppiVar5)) {\n            iVar4 = fcn.00402af0(arg1_00);\n            LOCK();\n            piVar1 = iVar3 + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 + -1 < 1) {\n                (**(**ppiVar5 + 8))(*ppiVar5, ppiVar5);\n            }\n            *arg1 = iVar4 + 0x18;\n            return arg1;\n        }\n        fcn.00402d50(arg1, iVar4, *(iVar4 + -0x10));\n    }\n    return arg1;\n}\n",
        "token_count": 300
    },
    "00403740": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nchar ** fcn.00403740(char **arg1, char **arg2)\n\n{\n    code *pcVar1;\n    char cVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    ulong *puVar5;\n    char *pcVar6;\n    char **ppcVar7;\n    uint32_t uVar8;\n    \n    fcn.00402eb0(arg2);\n    pcVar4 = *arg2;\n    pcVar6 = NULL;\n    cVar2 = *pcVar4;\n    if (cVar2 != '\\0') {\n        do {\n            iVar3 = fcn.00418f70(cVar2);\n            if (iVar3 == 0) {\n                pcVar6 = NULL;\n            }\n            else if (pcVar6 == NULL) {\n                pcVar6 = pcVar4;\n            }\n            pcVar4 = fcn.00418d30(pcVar4);\n            cVar2 = *pcVar4;\n        } while (cVar2 != '\\0');\n        if (pcVar6 != NULL) {\n            pcVar4 = *arg2;\n            uVar8 = pcVar6 - pcVar4;\n            if ((1U - *(pcVar4 + -8) | *(pcVar4 + -0xc) - uVar8) < 0) {\n                fcn.00402a90(arg2, uVar8);\n            }\n            if ((uVar8 < 0) || (*(*arg2 + -0xc) < uVar8)) {\n                fcn.00401040(0x80070057);\n                pcVar1 = swi(3);\n                ppcVar7 = (*pcVar1)();\n                return ppcVar7;\n            }\n            *(*arg2 + -0x10) = uVar8;\n            (*arg2)[uVar8] = '\\0';\n        }\n    }\n    pcVar4 = *arg2;\n    puVar5 = (**(**(pcVar4 + -0x18) + 0x20))();\n    if ((*(pcVar4 + -8) < 0) || (puVar5 != *(pcVar4 + -0x18))) {\n        pcVar6 = (***puVar5)(puVar5, *(pcVar4 + -0x10), 1);\n        if (pcVar6 == NULL) {\n            fcn.00401e80();\n            pcVar1 = swi(3);\n            ppcVar7 = (*pcVar1)();\n            return ppcVar7;\n        }\n        *(pcVar6 + 8) = *(pcVar4 + -0x10);\n        fcn.004194d0(pcVar6 + 0x18, *(pcVar4 + -0x10) + 1, pcVar4, *(pcVar4 + -0x10) + 1);\n    }\n    else {\n        pcVar6 = pcVar4 + -0x18;\n        LOCK();\n        *(pcVar4 + -8) = *(pcVar4 + -8) + 1;\n    }\n    *arg1 = pcVar6 + 0x18;\n    return arg1;\n}\n",
        "token_count": 684
    },
    "00403960": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00403960(int64_t *arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint16_t uVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    int32_t iVar6;\n    int64_t *piVar7;\n    int64_t **ppiVar8;\n    int64_t iVar9;\n    ulong lpMem;\n    int64_t iVar10;\n    uint64_t uVar11;\n    int64_t **ppiVar12;\n    ulong *puVar13;\n    ulong *puVar14;\n    int64_t **ppiVar15;\n    char *pcVar16;\n    uint64_t uVar17;\n    uchar auStack552 [32];\n    ulong *puStack520;\n    uint *puStack512;\n    uchar auStack504 [4];\n    uchar auStack500 [4];\n    int64_t **ppiStack496;\n    int64_t **ppiStack488;\n    uint32_t auStack480 [2];\n    ulong uStack472;\n    uint auStack464 [2];\n    int64_t iStack456;\n    uchar auStack448 [4];\n    uchar auStack444 [4];\n    ulong uStack440;\n    char acStack432 [16];\n    ulong uStack416;\n    ulong uStack408;\n    ushort uStack400;\n    ulong uStack392;\n    ulong uStack384;\n    ulong uStack376;\n    ulong uStack368;\n    ulong uStack360;\n    ulong uStack352;\n    uint uStack344;\n    ulong auStack328 [32];\n    uint64_t uStack72;\n    \n    uStack440 = 0xfffffffffffffffe;\n    uStack72 = *0x444d30 ^ auStack552;\n    uStack472 = 0;\n    uStack392 = str.SOFTWAREMicrosoftWindowsCurrentVersionInstaller._0_8_;\n    uStack384 = str.SOFTWAREMicrosoftWindowsCurrentVersionInstaller._8_8_;\n    uStack376 = str.SOFTWAREMicrosoftWindowsCurrentVersionInstaller._16_8_;\n    uStack368 = str.SOFTWAREMicrosoftWindowsCurrentVersionInstaller._24_8_;\n    uStack360 = str.SOFTWAREMicrosoftWindowsCurrentVersionInstaller._32_8_;\n    uStack352 = str.SOFTWAREMicrosoftWindowsCurrentVersionInstaller._40_8_;\n    uStack344 = str.SOFTWAREMicrosoftWindowsCurrentVersionInstaller._48_4_;\n    uStack416 = str.InstallerLocation._0_8_;\n    uStack408 = str.InstallerLocation._8_8_;\n    uStack400 = str.InstallerLocation._16_2_;\n    puStack520 = &uStack472;\n    auStack480[0] = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(0xffffffff80000002, &uStack392, 0, 0x20019);\n    if (auStack480[0] == 0) {\n        auStack464[0] = 0x100;\n        puStack512 = auStack464;\n        puStack520 = auStack328;\n        iVar6 = (*_sym.imp.ADVAPI32.dll_RegQueryValueExA)(uStack472, &uStack416, 0, 0);\n        if ((iVar6 != 0) && (iVar6 != 2)) {\n            (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uStack472);\n            goto code_r0x00403f6a;\n        }\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uStack472);\n    }\n    else if (auStack480[0] != 2) {\n        if (0 < auStack480[0]) {\n            auStack480[0] = auStack480[0] & 0xffff | 0x80070000;\n        }\n        fcn.0041a020(auStack480, 0x441308);\n        pcVar4 = swi(3);\n        (*pcVar4)();\n        return;\n    }\n    iVar10 = -1;\n    puVar14 = auStack328;\n    do {\n        puVar13 = puVar14;\n        if (iVar10 == 0) break;\n        iVar10 = iVar10 + -1;\n        puVar13 = puVar14 + 1;\n        cVar2 = *puVar14;\n        puVar14 = puVar13;\n    } while (cVar2 != '\\0');\n    *(puVar13 + -1) = str.msiexec.exe._0_8_;\n    *(puVar13 + 7) = str.msiexec.exe._8_4_;\n    *(puVar13 + 0xb) = str.msiexec.exe[12];\n    piVar7 = fcn.00413fd4();\n    if (piVar7 == NULL) {\n        fcn.00401040(0x80004005);\n        pcVar4 = swi(3);\n        (*pcVar4)();\n        return;\n    }\n    ppiVar8 = (**(*piVar7 + 0x18))(piVar7);\n    ppiVar12 = ppiVar8 + 3;\n    ppiStack488 = ppiVar12;\n    if ((auStack328 & 0xffffffffffff0000) == 0) {\n        iVar10 = fcn.00413fc0(auStack328 & 0xffff);\n        if (iVar10 != 0) {\n            fcn.00402bb0(&ppiStack488, iVar10, auStack328 & 0xffff);\n            ppiVar12 = ppiStack488;\n        }\n    }\n    else {\n        uVar11 = 0xffffffffffffffff;\n        puVar14 = auStack328;\n        do {\n            if (uVar11 == 0) break;\n            uVar11 = uVar11 - 1;\n            cVar2 = *puVar14;\n            puVar14 = puVar14 + 1;\n        } while (cVar2 != '\\0');\n        iVar6 = ~uVar11 - 1;\n        if (iVar6 == 0) {\n            piVar7 = *ppiVar8;\n            if (*(ppiVar8 + 1) != 0) {\n                if (*(ppiVar8 + 2) < 0) {\n                    if (*(ppiVar8 + 0xc) < 0) {\n                        fcn.00401040(0x80070057);\n                        pcVar4 = swi(3);\n                        (*pcVar4)();\n                        return;\n                    }\n                    *(ppiVar8 + 1) = 0;\n                    *ppiVar12 = 0;\n                }\n                else {\n                    LOCK();\n                    ppiVar15 = ppiVar8 + 2;\n                    iVar6 = *ppiVar15;\n                    *ppiVar15 = *ppiVar15 + -1;\n                    if (iVar6 + -1 < 1) {\n                        (**(**ppiVar8 + 8))();\n                    }\n                    iVar10 = (**(*piVar7 + 0x18))(piVar7);\n                    ppiVar12 = iVar10 + 0x18;\n                    ppiStack488 = ppiVar12;\n                }\n            }\n        }\n        else {\n            uVar5 = *(ppiVar8 + 1);\n            uVar17 = auStack328 - ppiVar12;\n            if ((*(ppiVar8 + 0xc) - iVar6 | 1U - *(ppiVar8 + 2)) < 0) {\n                fcn.00402a90(&ppiStack488, ~uVar11 - 1 & 0xffffffff);\n            }\n            ppiVar12 = ppiStack488;\n            if (uVar5 < uVar17) {\n                fcn.004194d0(ppiStack488, iVar6, auStack328, iVar6);\n            }\n            else {\n                fcn.00418760(ppiStack488, iVar6, uVar17 + ppiStack488, iVar6);\n            }\n            if ((iVar6 < 0) || (*(ppiVar12 + -0xc) < iVar6)) {\n                fcn.00401040(0x80070057);\n                goto code_r0x00403f6a;\n            }\n            *(ppiVar12 + -2) = iVar6;\n            *(ppiVar12 + iVar6) = 0;\n        }\n    }\n    ppiVar8 = ppiVar12 + -3;\n    iVar10 = *arg1;\n    ppiVar15 = iVar10 + -0x18;\n    if (ppiVar8 != ppiVar15) {\n        if ((*(iVar10 + -8) < 0) || (*ppiVar8 != *ppiVar15)) {\n            fcn.00402d50(arg1, ppiVar12, *(ppiVar12 + -2));\n        }\n        else {\n            iVar9 = fcn.00402af0(ppiVar8);\n            LOCK();\n            piVar1 = iVar10 + -8;\n            iVar6 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar6 + -1 < 1) {\n                (**(**ppiVar15 + 8))(*ppiVar15, ppiVar15);\n            }\n            *arg1 = iVar9 + 0x18;\n        }\n    }\n    LOCK();\n    ppiVar12 = ppiVar12 + -1;\n    iVar6 = *ppiVar12;\n    *ppiVar12 = *ppiVar12 + -1;\n    if (iVar6 + -1 < 1) {\n        (**(**ppiVar8 + 8))(*ppiVar8, ppiVar8);\n    }\n    uVar5 = sub.VERSION.dll_GetFileVersionInfoSizeA(auStack328, auStack448);\n    if (uVar5 != 0) {\n        lpMem = fcn.00419f50(uVar5);\n        iVar6 = sub.VERSION.dll_GetFileVersionInfoA(auStack328, 0, uVar5, lpMem);\n        if (iVar6 == 0) {\n            fcn.00419f10(lpMem);\n        }\n        else {\n            iVar6 = sub.VERSION.dll_VerQueryValueA(lpMem, 0x434cb8, &iStack456, auStack444);\n            if (iVar6 == 0) {\n                fcn.00419f10(lpMem);\n            }\n            else {\n                uVar3 = *(iStack456 + 8);\n                fcn.00432e20(*(iStack456 + 10), auStack504, 10);\n                fcn.00432e20(uVar3, auStack500, 10);\n                fcn.00418c50(acStack432, \"%s.%s\", auStack504, auStack500);\n                piVar7 = fcn.00413fd4();\n                if (piVar7 == NULL) {\n                    fcn.00401040(0x80004005);\n                    pcVar4 = swi(3);\n                    (*pcVar4)();\n                    return;\n                }\n                ppiVar8 = (**(*piVar7 + 0x18))(piVar7);\n                ppiVar12 = ppiVar8 + 3;\n                ppiStack496 = ppiVar12;\n                if ((acStack432 & 0xffffffffffff0000) == 0) {\n                    iVar10 = fcn.00413fc0(acStack432 & 0xffff);\n                    if (iVar10 != 0) {\n                        fcn.00402bb0(&ppiStack496, iVar10, acStack432 & 0xffff);\n                        ppiVar12 = ppiStack496;\n                    }\n                }\n                else {\n                    uVar11 = 0xffffffffffffffff;\n                    pcVar16 = acStack432;\n                    do {\n                        if (uVar11 == 0) break;\n                        uVar11 = uVar11 - 1;\n                        cVar2 = *pcVar16;\n                        pcVar16 = pcVar16 + 1;\n                    } while (cVar2 != '\\0');\n                    iVar6 = ~uVar11 - 1;\n                    if (iVar6 == 0) {\n                        piVar7 = *ppiVar8;\n                        if (*(ppiVar8 + 1) != 0) {\n                            if (*(ppiVar8 + 2) < 0) {\n                                if (*(ppiVar8 + 0xc) < 0) {\n                                    fcn.00401040(0x80070057);\n                                    pcVar4 = swi(3);\n                                    (*pcVar4)();\n                                    return;\n                                }\n                                *(ppiVar8 + 1) = 0;\n                                *ppiVar12 = 0;\n                            }\n                            else {\n                                LOCK();\n                                ppiVar15 = ppiVar8 + 2;\n                                iVar6 = *ppiVar15;\n                                *ppiVar15 = *ppiVar15 + -1;\n                                if (iVar6 + -1 < 1) {\n                                    (**(**ppiVar8 + 8))();\n                                }\n                                iVar10 = (**(*piVar7 + 0x18))(piVar7);\n                                ppiVar12 = iVar10 + 0x18;\n                                ppiStack496 = ppiVar12;\n                            }\n                        }\n                    }\n                    else {\n                        uVar5 = *(ppiVar8 + 1);\n                        iVar10 = -ppiVar12;\n                        if ((*(ppiVar8 + 0xc) - iVar6 | 1U - *(ppiVar8 + 2)) < 0) {\n                            fcn.00402a90(&ppiStack496, ~uVar11 - 1 & 0xffffffff);\n                        }\n                        ppiVar12 = ppiStack496;\n                        if (uVar5 < acStack432 + iVar10) {\n                            fcn.004194d0(ppiStack496, iVar6, acStack432, iVar6);\n                        }\n                        else {\n                            fcn.00418760(ppiStack496, iVar6, acStack432 + iVar10 + ppiStack496, iVar6);\n                        }\n                        if ((iVar6 < 0) || (*(ppiVar12 + -0xc) < iVar6)) {\n                            fcn.00401040(0x80070057);\n                            goto code_r0x00403f6a;\n                        }\n                        *(ppiVar12 + -2) = iVar6;\n                        *(ppiVar12 + iVar6) = 0;\n                    }\n                }\n                fcn.004036a0(arg2, &ppiStack496);\n                LOCK();\n                ppiVar8 = ppiVar12 + -1;\n                iVar6 = *ppiVar8;\n                *ppiVar8 = *ppiVar8 + -1;\n                if (iVar6 + -1 < 1) {\n                    (**(*ppiVar12[-3] + 8))();\n                }\n                fcn.00419f10(lpMem);\n            }\n        }\n    }\ncode_r0x00403f6a:\n    fcn.00418d10(uStack72 ^ auStack552);\n    return;\n}\n",
        "token_count": 3225
    },
    "00404050": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004043e8)\n// WARNING: Removing unreachable block (ram,0x004043f7)\n// WARNING: Removing unreachable block (ram,0x00404117)\n// WARNING: Removing unreachable block (ram,0x00404126)\n// WARNING: Removing unreachable block (ram,0x00404195)\n// WARNING: Removing unreachable block (ram,0x004041a4)\n// WARNING: Removing unreachable block (ram,0x00404466)\n// WARNING: Removing unreachable block (ram,0x00404475)\n\nuint64_t fcn.00404050(ulong arg1)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    int64_t **ppiVar7;\n    ulong uVar8;\n    int64_t iVar9;\n    int64_t **ppiVar10;\n    int32_t iVar11;\n    char *pcVar12;\n    int64_t **ppiStack136;\n    int64_t iStack128;\n    int64_t iStack120;\n    int64_t iStack112;\n    int64_t iStack104;\n    int64_t iStack96;\n    int64_t iStack88;\n    int64_t iStack80;\n    int64_t iStack72;\n    int64_t iStack64;\n    int64_t iStack56;\n    int64_t iStack48;\n    int64_t iStack40;\n    ulong uStack32;\n    \n    uStack32 = 0xfffffffffffffffe;\n    piVar5 = fcn.00413fd4();\n    iVar11 = 0;\n    if (piVar5 == NULL) {\n        fcn.00401040(0x80004005);\n        pcVar4 = swi(3);\n        uVar6 = (*pcVar4)();\n        return uVar6;\n    }\n    ppiVar7 = (**(*piVar5 + 0x18))();\n    ppiVar10 = ppiVar7 + 3;\n    uVar6 = 1;\n    ppiStack136 = ppiVar10;\n    if (*0x446b90 == 5) {\n        piVar5 = fcn.00413fd4();\n        if (piVar5 == NULL) {\n            fcn.00401040(0x80004005);\n            pcVar4 = swi(3);\n            uVar6 = (*pcVar4)();\n            return uVar6;\n        }\n        iStack104 = (**(*piVar5 + 0x18))();\n        iStack104 = iStack104 + 0x18;\n        iVar9 = -1;\n        pcVar12 = 0x434d58;\n        do {\n            if (iVar9 == 0) break;\n            iVar9 = iVar9 + -1;\n            cVar2 = *pcVar12;\n            pcVar12 = pcVar12 + 1;\n        } while (cVar2 != '\\0');\n        fcn.00402d50(&iStack104, 0x434d58, ~iVar9 - 1);\n        piVar5 = fcn.00413fd4();\n        if (piVar5 == NULL) {\n            fcn.00401040(0x80004005);\n            pcVar4 = swi(3);\n            uVar6 = (*pcVar4)();\n            return uVar6;\n        }\n        iStack120 = (**(*piVar5 + 0x18))(piVar5);\n        iStack120 = iStack120 + 0x18;\n        iVar9 = -1;\n        pcVar12 = \" /x \";\n        do {\n            if (iVar9 == 0) break;\n            iVar9 = iVar9 + -1;\n            cVar2 = *pcVar12;\n            pcVar12 = pcVar12 + 1;\n        } while (cVar2 != '\\0');\n        fcn.00402d50(&iStack120, \" /x \", ~iVar9 - 1);\n        uVar8 = fcn.004033a0(&iStack48, 0x446b70, &iStack120);\n        uVar8 = fcn.004033a0(&iStack64, uVar8, 0x446b80);\n        uVar8 = fcn.004033a0(&iStack80, uVar8, &iStack104);\n        piVar5 = fcn.004033a0(&iStack88, uVar8, 0x446b88);\n        iVar9 = *piVar5;\n        ppiVar10 = iVar9 + -0x18;\n        if (ppiVar10 != ppiVar7) {\n            if ((*(ppiVar7 + 2) < 0) || (*ppiVar10 != *ppiVar7)) {\n                fcn.00402d50(&ppiStack136, iVar9, *(iVar9 + -0x10));\n            }\n            else {\n                iVar9 = fcn.00402af0(ppiVar10);\n                LOCK();\n                ppiVar10 = ppiVar7 + 2;\n                iVar3 = *ppiVar10;\n                *ppiVar10 = *ppiVar10 + -1;\n                if (iVar3 + -1 < 1) {\n                    (**(**ppiVar7 + 8))(*ppiVar7, ppiVar7);\n                }\n                ppiStack136 = iVar9 + 0x18;\n            }\n        }\n        LOCK();\n        piVar1 = iStack88 + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar3 + -1 < 1) {\n            (**(**(iStack88 + -0x18) + 8))();\n        }\n        LOCK();\n        piVar1 = iStack80 + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar3 + -1 < 1) {\n            (**(**(iStack80 + -0x18) + 8))();\n        }\n        LOCK();\n        piVar1 = iStack64 + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar3 + -1 < 1) {\n            (**(**(iStack64 + -0x18) + 8))();\n        }\n        LOCK();\n        piVar1 = iStack48 + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar3 + -1 < 1) {\n            (**(**(iStack48 + -0x18) + 8))();\n        }\n        LOCK();\n        piVar1 = iStack120 + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar3 + -1 < 1) {\n            (**(**(iStack120 + -0x18) + 8))();\n        }\n        LOCK();\n        piVar1 = iStack104 + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar3 + -1 < 1) {\n            (**(**(iStack104 + -0x18) + 8))();\n        }\n        if ((*(ppiStack136 + -0xc) - 0xffU | 1U - *(ppiStack136 + -1)) < 0) {\n            fcn.00402a90(&ppiStack136, 0xff);\n        }\n        ppiVar10 = ppiStack136;\n        uVar6 = fcn.00401110(0x434a18, ppiStack136, 1, *0x4468bc);\n        uVar6 = uVar6 & 0xffffffff;\n    }\n    else if (*0x446b90 == 6) {\n        piVar5 = fcn.00413fd4();\n        if (piVar5 == NULL) {\n            fcn.00401040(0x80004005);\n            pcVar4 = swi(3);\n            uVar6 = (*pcVar4)();\n            return uVar6;\n        }\n        iStack128 = (**(*piVar5 + 0x18))();\n        iStack128 = iStack128 + 0x18;\n        iVar9 = -1;\n        pcVar12 = 0x434d58;\n        do {\n            if (iVar9 == 0) break;\n            iVar9 = iVar9 + -1;\n            cVar2 = *pcVar12;\n            pcVar12 = pcVar12 + 1;\n        } while (cVar2 != '\\0');\n        fcn.00402d50(&iStack128, 0x434d58, ~iVar9 - 1);\n        piVar5 = fcn.00413fd4();\n        if (piVar5 == NULL) {\n            fcn.00401040(0x80004005);\n            pcVar4 = swi(3);\n            uVar6 = (*pcVar4)();\n            return uVar6;\n        }\n        iStack112 = (**(*piVar5 + 0x18))(piVar5);\n        iStack112 = iStack112 + 0x18;\n        iVar9 = -1;\n        pcVar12 = \" /I \";\n        do {\n            if (iVar9 == 0) break;\n            iVar9 = iVar9 + -1;\n            cVar2 = *pcVar12;\n            pcVar12 = pcVar12 + 1;\n        } while (cVar2 != '\\0');\n        fcn.00402d50(&iStack112, \" /I \", ~iVar9 - 1);\n        uVar8 = fcn.004033a0(&iStack40, 0x446b70, &iStack112);\n        uVar8 = fcn.004033a0(&iStack72, uVar8, 0x446b80);\n        uVar8 = fcn.004033a0(&iStack96, uVar8, &iStack128);\n        piVar5 = fcn.004033a0(&iStack56, uVar8, 0x446b88);\n        iVar9 = *piVar5;\n        ppiVar10 = iVar9 + -0x18;\n        if (ppiVar10 != ppiVar7) {\n            if ((*(ppiVar7 + 2) < 0) || (*ppiVar10 != *ppiVar7)) {\n                fcn.00402d50(&ppiStack136, iVar9, *(iVar9 + -0x10));\n            }\n            else {\n                iVar9 = fcn.00402af0(ppiVar10);\n                LOCK();\n                ppiVar10 = ppiVar7 + 2;\n                iVar3 = *ppiVar10;\n                *ppiVar10 = *ppiVar10 + -1;\n                if (iVar3 + -1 < 1) {\n                    (**(**ppiVar7 + 8))(*ppiVar7, ppiVar7);\n                }\n                ppiStack136 = iVar9 + 0x18;\n            }\n        }\n        LOCK();\n        piVar1 = iStack56 + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar3 + -1 < 1) {\n            (**(**(iStack56 + -0x18) + 8))();\n        }\n        LOCK();\n        piVar1 = iStack96 + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar3 + -1 < 1) {\n            (**(**(iStack96 + -0x18) + 8))();\n        }\n        LOCK();\n        piVar1 = iStack72 + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar3 + -1 < 1) {\n            (**(**(iStack72 + -0x18) + 8))();\n        }\n        LOCK();\n        piVar1 = iStack40 + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar3 + -1 < 1) {\n            (**(**(iStack40 + -0x18) + 8))();\n        }\n        LOCK();\n        piVar1 = iStack112 + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar3 + -1 < 1) {\n            (**(**(iStack112 + -0x18) + 8))();\n        }\n        LOCK();\n        piVar1 = iStack128 + -8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar3 + -1 < 1) {\n            (**(**(iStack128 + -0x18) + 8))();\n        }\n        if ((*(ppiStack136 + -0xc) - 0xffU | 1U - *(ppiStack136 + -1)) < 0) {\n            fcn.00402a90(&ppiStack136, 0xff);\n        }\n        ppiVar10 = ppiStack136;\n        uVar6 = fcn.00401110(0x434a18, ppiStack136, 1, *0x4468bc);\n        uVar6 = uVar6 & 0xffffffff;\n    }\n    if (ppiVar10 != NULL) {\n        iVar9 = -1;\n        ppiVar7 = ppiVar10;\n        do {\n            if (iVar9 == 0) break;\n            iVar9 = iVar9 + -1;\n            cVar2 = *ppiVar7;\n            ppiVar7 = ppiVar7 + 1;\n        } while (cVar2 != '\\0');\n        iVar11 = ~iVar9 - 1;\n        if (iVar11 < 0) goto code_r0x004046b7;\n    }\n    if (iVar11 <= *(ppiVar10 + -0xc)) {\n        *(ppiVar10 + -2) = iVar11;\n        *(iVar11 + ppiVar10) = '\\0';\n        LOCK();\n        ppiVar7 = ppiVar10 + -1;\n        iVar11 = *ppiVar7;\n        *ppiVar7 = *ppiVar7 + -1;\n        if (0 < iVar11 + -1) {\n            return uVar6;\n        }\n        (**(*ppiVar10[-3] + 8))();\n        return uVar6;\n    }\ncode_r0x004046b7:\n    uVar6 = fcn.00401040(0x80070057);\n    return uVar6;\n}\n",
        "token_count": 3282
    },
    "00404920": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00404a42)\n// WARNING: Removing unreachable block (ram,0x00404a55)\n\nvoid fcn.00404920(int64_t *arg1, uint64_t noname_1, int64_t arg3)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int64_t *piVar5;\n    ulong uVar6;\n    code *pcVar7;\n    int32_t iVar8;\n    int64_t iVar9;\n    int64_t *piVar10;\n    int64_t iVar11;\n    int64_t **ppiVar12;\n    int64_t **ppiVar13;\n    int64_t **ppiVar14;\n    int32_t iVar15;\n    int64_t arg2;\n    int64_t iVar16;\n    ulong unaff_RBX;\n    ulong unaff_RBP;\n    uint64_t uVar17;\n    uint64_t uVar18;\n    ulong unaff_RSI;\n    int64_t **ppiVar19;\n    ulong unaff_RDI;\n    char *pcVar20;\n    uint32_t uVar21;\n    ulong unaff_R12;\n    ulong unaff_R13;\n    ulong unaff_R14;\n    int32_t *piVar22;\n    ulong unaff_R15;\n    int64_t *piStackX32;\n    ulong uStack8;\n    \n    uStack8 = 0x404938;\n    iVar9 = fcn.00432eb0();\n    iVar9 = -iVar9;\n    *(&stack0x00000050 + iVar9) = 0xfffffffffffffffe;\n    *(&stack0x000020b8 + iVar9) = unaff_RBX;\n    *(&stack0x00002090 + iVar9) = unaff_RBP;\n    *(&stack0x00002088 + iVar9) = unaff_RSI;\n    *(&stack0x00002080 + iVar9) = unaff_RDI;\n    *(&stack0x00002078 + iVar9) = unaff_R12;\n    *(&stack0x00002070 + iVar9) = unaff_R13;\n    *(&stack0x00002068 + iVar9) = unaff_R14;\n    *(&stack0x00002060 + iVar9) = unaff_R15;\n    *(&stack0xfffffffffffffff8 + iVar9) = 0x404992;\n    piVar10 = fcn.00413fd4();\n    if (piVar10 == NULL) {\n        *(&stack0xfffffffffffffff8 + iVar9) = 0x4049ab;\n        fcn.00401040(0x80004005);\n        pcVar7 = swi(3);\n        (*pcVar7)();\n        return;\n    }\n    pcVar7 = *(*piVar10 + 0x18);\n    *(&stack0xfffffffffffffff8 + iVar9) = 0x4049b2;\n    iVar11 = (*pcVar7)();\n    *(&stack0x00000020 + iVar9) = iVar11 + 0x18;\n    ppiVar14 = NULL;\n    iVar11 = *arg1;\n    if (*(iVar11 + -0x10) < 1) {\n        iVar8 = -1;\n    }\n    else {\n        *(&stack0xfffffffffffffff8 + iVar9) = 0x4049d2;\n        iVar11 = fcn.00419120(iVar11, noname_1 & 0xff);\n        if (iVar11 == 0) {\n            iVar8 = -1;\n        }\n        else {\n            iVar8 = iVar11 - *arg1;\n        }\n    }\n    *(&stack0x00000060 + iVar9) = iVar8;\n    if (-1 < iVar8) {\n        piVar22 = &stack0x00000060 + iVar9;\n        do {\n            iVar8 = *piVar22;\n            uVar21 = iVar8 - ppiVar14;\n            if (uVar21 < 1) {\n                *(&stack0xfffffffffffffff8 + iVar9) = 0x404a17;\n                piVar10 = fcn.00413fd4();\n                if (piVar10 == NULL) {\ncode_r0x00404f6e:\n                    *(&stack0xfffffffffffffff8 + iVar9) = 0x404f78;\n                    fcn.00401040(0x80004005);\ncode_r0x00404f79:\n                    *(&stack0xfffffffffffffff8 + iVar9) = 0x404f7e;\n                    fcn.00401e80();\n                    goto code_r0x00404f7f;\n                }\n                pcVar7 = *(*piVar10 + 0x18);\n                *(&stack0xfffffffffffffff8 + iVar9) = 0x404a30;\n                ppiVar12 = (*pcVar7)(piVar10);\n                ppiVar14 = ppiVar12 + 3;\n                *(&stack0x00000028 + iVar9) = ppiVar14;\n                uVar18 = 0xffffffffffffffff;\n                pcVar20 = 0x434a18;\n                do {\n                    if (uVar18 == 0) break;\n                    uVar18 = uVar18 - 1;\n                    cVar2 = *pcVar20;\n                    pcVar20 = pcVar20 + 1;\n                } while (cVar2 != '\\0');\n                iVar15 = ~uVar18 - 1;\n                if (iVar15 != 0) {\n                    uVar21 = *(ppiVar12 + 1);\n                    uVar17 = 0x434a18 - ppiVar14;\n                    if ((*(ppiVar12 + 0xc) - iVar15 | 1U - *(ppiVar12 + 2)) < 0) {\n                        *(&stack0xfffffffffffffff8 + iVar9) = 0x404afe;\n                        fcn.00402a90(&stack0x00000028 + iVar9, ~uVar18 - 1 & 0xffffffff);\n                        ppiVar14 = *(&stack0x00000028 + iVar9);\n                    }\n                    if (uVar21 < uVar17) {\n                        *(&stack0xfffffffffffffff8 + iVar9) = 0x404b37;\n                        fcn.004194d0(ppiVar14, iVar15, 0x434a18, iVar15);\n                    }\n                    else {\n                        *(&stack0xfffffffffffffff8 + iVar9) = 0x404b1d;\n                        fcn.00418760(ppiVar14, iVar15, ppiVar14 + uVar17, iVar15);\n                    }\n                    if ((-1 < iVar15) && (iVar15 <= *(ppiVar14 + -0xc))) {\n                        *(ppiVar14 + -2) = iVar15;\n                        *(iVar15 + ppiVar14) = 0;\n                        goto code_r0x00404b4f;\n                    }\ncode_r0x00404f63:\n                    *(&stack0xfffffffffffffff8 + iVar9) = 0x404f6d;\n                    fcn.00401040(0x80070057);\n                    goto code_r0x00404f6e;\n                }\n                piVar10 = *ppiVar12;\n                if (*(ppiVar12 + 1) != 0) {\n                    if (-1 < *(ppiVar12 + 2)) {\n                        LOCK();\n                        ppiVar14 = ppiVar12 + 2;\n                        iVar15 = *ppiVar14;\n                        *ppiVar14 = *ppiVar14 + -1;\n                        if (iVar15 + -1 < 1) {\n                            pcVar7 = *(**ppiVar12 + 8);\n                            *(&stack0xfffffffffffffff8 + iVar9) = 0x404ac7;\n                            (*pcVar7)();\n                        }\n                        pcVar7 = *(*piVar10 + 0x18);\n                        *(&stack0xfffffffffffffff8 + iVar9) = 0x404ad0;\n                        iVar11 = (*pcVar7)(piVar10);\n                        ppiVar14 = iVar11 + 0x18;\n                        *(&stack0x00000028 + iVar9) = ppiVar14;\n                        goto code_r0x00404b4f;\n                    }\n                    if (-1 < *(ppiVar12 + 0xc)) {\n                        *(ppiVar12 + 1) = 0;\n                        *ppiVar14 = 0;\n                        goto code_r0x00404b4f;\n                    }\n                    *(&stack0xfffffffffffffff8 + iVar9) = 0x404f5c;\n                    fcn.00401040(0x80070057);\ncode_r0x00404f5d:\n                    *(&stack0xfffffffffffffff8 + iVar9) = 0x404f62;\n                    fcn.00401e80();\n                    goto code_r0x00404f63;\n                }\ncode_r0x00404b4f:\n                ppiVar12 = ppiVar14 + -3;\n                iVar11 = *(&stack0x00000020 + iVar9);\n                ppiVar19 = iVar11 + -0x18;\n                if (ppiVar12 != ppiVar19) {\n                    if ((*(iVar11 + -8) < 0) || (*ppiVar12 != *ppiVar19)) {\n                        uVar21 = *(ppiVar14 + -2);\n                        *(&stack0xfffffffffffffff8 + iVar9) = 0x404c05;\n                        fcn.00402d50(&stack0x00000020 + iVar9, ppiVar14, uVar21);\n                    }\n                    else {\n                        pcVar7 = *(**ppiVar12 + 0x20);\n                        *(&stack0xfffffffffffffff8 + iVar9) = 0x404b7d;\n                        piVar10 = (*pcVar7)();\n                        if ((*(ppiVar14 + -1) < 0) || (piVar10 != *ppiVar12)) {\n                            uVar3 = *(ppiVar14 + -2);\n                            pcVar7 = **piVar10;\n                            *(&stack0xfffffffffffffff8 + iVar9) = 0x404ba3;\n                            ppiVar13 = (*pcVar7)(piVar10, uVar3, 1);\n                            if (ppiVar13 == NULL) goto code_r0x00404f5d;\n                            *(ppiVar13 + 1) = *(ppiVar14 + -2);\n                            iVar15 = *(ppiVar14 + -2);\n                            *(&stack0xfffffffffffffff8 + iVar9) = 0x404bce;\n                            fcn.004194d0(ppiVar13 + 3, iVar15 + 1, ppiVar14, iVar15 + 1);\n                        }\n                        else {\n                            LOCK();\n                            *(ppiVar14 + -1) = *(ppiVar14 + -1) + 1;\n                            ppiVar13 = ppiVar12;\n                        }\n                        LOCK();\n                        piVar1 = iVar11 + -8;\n                        iVar15 = *piVar1;\n                        *piVar1 = *piVar1 + -1;\n                        if (iVar15 + -1 < 1) {\n                            piVar10 = *ppiVar19;\n                            pcVar7 = *(*piVar10 + 8);\n                            *(&stack0xfffffffffffffff8 + iVar9) = 0x404be9;\n                            (*pcVar7)(piVar10, ppiVar19);\n                        }\n                        *(&stack0x00000020 + iVar9) = ppiVar13 + 3;\n                    }\n                }\n                LOCK();\n                ppiVar14 = ppiVar14 + -1;\n                iVar15 = *ppiVar14;\n                *ppiVar14 = *ppiVar14 + -1;\n                if (iVar15 + -1 < 1) {\n                    piVar10 = *ppiVar12;\n                    pcVar7 = *(*piVar10 + 8);\n                    *(&stack0xfffffffffffffff8 + iVar9) = 0x404c25;\n                    (*pcVar7)(piVar10, ppiVar12);\n                }\n            }\n            else {\n                *(&stack0xfffffffffffffff8 + iVar9) = 0x404c3a;\n                piVar10 = fcn.00402fa0(arg1, &stack0x00000040 + iVar9, ppiVar14, uVar21);\n                iVar11 = *piVar10;\n                ppiVar14 = iVar11 + -0x18;\n                iVar16 = *(&stack0x00000020 + iVar9);\n                ppiVar12 = iVar16 + -0x18;\n                if (ppiVar14 != ppiVar12) {\n                    if ((-1 < *(iVar16 + -8)) && (*ppiVar14 == *ppiVar12)) {\n                        pcVar7 = *(**ppiVar14 + 0x20);\n                        *(&stack0xfffffffffffffff8 + iVar9) = 0x404c6c;\n                        piVar10 = (*pcVar7)();\n                        if ((-1 < *(iVar11 + -8)) && (piVar10 == *ppiVar14)) {\n                            LOCK();\n                            *(iVar11 + -8) = *(iVar11 + -8) + 1;\ncode_r0x00404cbd:\n                            LOCK();\n                            piVar1 = iVar16 + -8;\n                            iVar15 = *piVar1;\n                            *piVar1 = *piVar1 + -1;\n                            if (iVar15 + -1 < 1) {\n                                piVar10 = *ppiVar12;\n                                pcVar7 = *(*piVar10 + 8);\n                                *(&stack0xfffffffffffffff8 + iVar9) = 0x404cd8;\n                                (*pcVar7)(piVar10, ppiVar12);\n                            }\n                            *(&stack0x00000020 + iVar9) = ppiVar14 + 3;\n                            goto code_r0x00404cf2;\n                        }\n                        uVar3 = *(iVar11 + -0x10);\n                        pcVar7 = **piVar10;\n                        *(&stack0xfffffffffffffff8 + iVar9) = 0x404c92;\n                        ppiVar14 = (*pcVar7)(piVar10, uVar3, 1);\n                        if (ppiVar14 != NULL) {\n                            *(ppiVar14 + 1) = *(iVar11 + -0x10);\n                            arg2 = *(iVar11 + -0x10) + 1;\n                            *(&stack0xfffffffffffffff8 + iVar9) = 0x404cbd;\n                            fcn.004194d0(ppiVar14 + 3, arg2, iVar11, arg2);\n                            goto code_r0x00404cbd;\n                        }\n                        goto code_r0x00404f79;\n                    }\n                    uVar21 = *(iVar11 + -0x10);\n                    *(&stack0xfffffffffffffff8 + iVar9) = 0x404cf1;\n                    fcn.00402d50(&stack0x00000020 + iVar9, iVar11, uVar21);\n                }\ncode_r0x00404cf2:\n                iVar11 = *(&stack0x00000040 + iVar9);\n                LOCK();\n                piVar1 = iVar11 + -8;\n                iVar15 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar15 + -1 < 1) {\n                    pcVar7 = *(**(iVar11 + -0x18) + 8);\n                    *(&stack0xfffffffffffffff8 + iVar9) = 0x404d13;\n                    (*pcVar7)();\n                }\n            }\n            *(&stack0xfffffffffffffff8 + iVar9) = 0x404d22;\n            piVar10 = fcn.00403740(&stack0x00000030 + iVar9, &stack0x00000020 + iVar9);\n            arg3 = *piVar10;\n            ppiVar12 = arg3 + -0x18;\n            iVar11 = *(&stack0x00000020 + iVar9);\n            ppiVar14 = iVar11 + -0x18;\n            if (ppiVar12 != ppiVar14) {\n                if ((*(iVar11 + -8) < 0) || (piVar10 = *ppiVar12,  piVar10 != *ppiVar14)) {\n                    uVar21 = *(arg3 + -0x10);\n                    iVar16 = uVar21;\n                    if (uVar21 == 0) {\n                        piVar10 = *ppiVar14;\n                        if (*(iVar11 + -0x10) != 0) {\n                            if (*(iVar11 + -8) < 0) {\n                                if (*(iVar11 + -0xc) < 0) {\n                                    *(&stack0xfffffffffffffff8 + iVar9) = 0x404f8f;\n                                    fcn.00401040(0x80070057);\n                                    pcVar7 = swi(3);\n                                    (*pcVar7)();\n                                    return;\n                                }\n                                *(iVar11 + -0x10) = 0;\n                                **(&stack0x00000020 + iVar9) = 0;\n                            }\n                            else {\n                                LOCK();\n                                piVar1 = iVar11 + -8;\n                                iVar15 = *piVar1;\n                                *piVar1 = *piVar1 + -1;\n                                if (iVar15 + -1 < 1) {\n                                    piVar5 = *ppiVar14;\n                                    pcVar7 = *(*piVar5 + 8);\n                                    *(&stack0xfffffffffffffff8 + iVar9) = 0x404e29;\n                                    (*pcVar7)(piVar5, ppiVar14);\n                                }\n                                pcVar7 = *(*piVar10 + 0x18);\n                                *(&stack0xfffffffffffffff8 + iVar9) = 0x404e32;\n                                iVar11 = (*pcVar7)(piVar10);\n                                *(&stack0x00000020 + iVar9) = iVar11 + 0x18;\n                            }\n                        }\n                    }\n                    else {\n                        if (arg3 == 0) {\n                            *(&stack0xfffffffffffffff8 + iVar9) = 0x404fa5;\n                            fcn.00401040(0x80070057);\n                            break;\n                        }\n                        uVar4 = *(iVar11 + -0x10);\n                        uVar18 = arg3 - iVar11;\n                        if ((*(iVar11 + -0xc) - uVar21 | 1U - *(iVar11 + -8)) < 0) {\n                            *(&stack0xfffffffffffffff8 + iVar9) = 0x404e70;\n                            fcn.00402a90(&stack0x00000020 + iVar9, uVar21);\n                            iVar11 = *(&stack0x00000020 + iVar9);\n                        }\n                        if (uVar4 < uVar18) {\n                            *(&stack0xfffffffffffffff8 + iVar9) = 0x404e9f;\n                            fcn.004194d0(iVar11, iVar16, arg3, iVar16);\n                        }\n                        else {\n                            *(&stack0xfffffffffffffff8 + iVar9) = 0x404e8c;\n                            fcn.00418760(iVar11, iVar16, iVar11 + uVar18, iVar16);\n                        }\n                        if ((uVar21 < 0) || (*(*(&stack0x00000020 + iVar9) + -0xc) < uVar21)) {\n                            *(&stack0xfffffffffffffff8 + iVar9) = 0x404f9a;\n                            fcn.00401040(0x80070057);\n                            pcVar7 = swi(3);\n                            (*pcVar7)();\n                            return;\n                        }\n                        *(*(&stack0x00000020 + iVar9) + -0x10) = uVar21;\n                        *(iVar16 + *(&stack0x00000020 + iVar9)) = 0;\n                        arg1 = *(&stack0x000020a0 + iVar9);\n                    }\n                }\n                else {\n                    pcVar7 = *(*piVar10 + 0x20);\n                    *(&stack0xfffffffffffffff8 + iVar9) = 0x404d5b;\n                    piVar10 = (*pcVar7)(piVar10);\n                    if ((*(arg3 + -8) < 0) || (piVar10 != *ppiVar12)) {\n                        uVar3 = *(arg3 + -0x10);\n                        pcVar7 = **piVar10;\n                        *(&stack0xfffffffffffffff8 + iVar9) = 0x404d81;\n                        ppiVar12 = (*pcVar7)(piVar10, uVar3, 1);\n                        if (ppiVar12 == NULL) {\ncode_r0x00404f7f:\n                            *(&stack0xfffffffffffffff8 + iVar9) = 0x404f84;\n                            fcn.00401e80();\n                            pcVar7 = swi(3);\n                            (*pcVar7)();\n                            return;\n                        }\n                        *(ppiVar12 + 1) = *(arg3 + -0x10);\n                        iVar16 = *(arg3 + -0x10) + 1;\n                        *(&stack0xfffffffffffffff8 + iVar9) = 0x404dac;\n                        fcn.004194d0(ppiVar12 + 3, iVar16, arg3, iVar16);\n                    }\n                    else {\n                        LOCK();\n                        *(arg3 + -8) = *(arg3 + -8) + 1;\n                    }\n                    LOCK();\n                    piVar1 = iVar11 + -8;\n                    iVar15 = *piVar1;\n                    *piVar1 = *piVar1 + -1;\n                    if (iVar15 + -1 < 1) {\n                        piVar10 = *ppiVar14;\n                        pcVar7 = *(*piVar10 + 8);\n                        *(&stack0xfffffffffffffff8 + iVar9) = 0x404dc7;\n                        (*pcVar7)(piVar10, ppiVar14);\n                    }\n                    *(&stack0x00000020 + iVar9) = ppiVar12 + 3;\n                }\n            }\n            iVar11 = *(&stack0x00000030 + iVar9);\n            LOCK();\n            piVar1 = iVar11 + -8;\n            iVar15 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar15 + -1 < 1) {\n                pcVar7 = *(**(iVar11 + -0x18) + 8);\n                *(&stack0xfffffffffffffff8 + iVar9) = 0x404eea;\n                (*pcVar7)();\n            }\n            arg3 = *(&stack0x000020b0 + iVar9);\n            uVar6 = *(arg3 + 0x10);\n            *(&stack0xfffffffffffffff8 + iVar9) = 0x404f03;\n            fcn.00413140(arg3, uVar6, &stack0x00000020 + iVar9);\n            uVar21 = iVar8 + 1;\n            ppiVar14 = uVar21;\n            piVar22 = piVar22 + 1;\n            iVar11 = *arg1;\n            if ((uVar21 < 0) || (*(iVar11 + -0x10) <= uVar21)) {\n                iVar8 = -1;\n            }\n            else {\n                *(&stack0xfffffffffffffff8 + iVar9) = 0x404f2b;\n                iVar11 = fcn.00419120(uVar21 + iVar11, (&stack0x000020a8)[iVar9]);\n                if (iVar11 == 0) {\n                    iVar8 = -1;\n                }\n                else {\n                    iVar8 = iVar11 - *arg1;\n                }\n            }\n            *piVar22 = iVar8;\n        } while (-1 < iVar8);\n    }\n    iVar8 = *(*arg1 + -0x10);\n    *(&stack0xfffffffffffffff8 + iVar9) = 0x404fc1;\n    piVar10 = fcn.00402fa0(arg1, &stack0x00000048 + iVar9, ppiVar14 & 0xffffffff, iVar8 - ppiVar14);\n    iVar11 = *piVar10;\n    ppiVar14 = iVar11 + -0x18;\n    iVar16 = *(&stack0x00000020 + iVar9);\n    ppiVar12 = iVar16 + -0x18;\n    if (ppiVar14 != ppiVar12) {\n        if ((*(iVar16 + -8) < 0) || (*ppiVar14 != *ppiVar12)) {\n            uVar21 = *(iVar11 + -0x10);\n            *(&stack0xfffffffffffffff8 + iVar9) = 0x405021;\n            fcn.00402d50(&stack0x00000020 + iVar9, iVar11, uVar21);\n        }\n        else {\n            *(&stack0xfffffffffffffff8 + iVar9) = 0x404fea;\n            iVar11 = fcn.00402af0(ppiVar14);\n            LOCK();\n            piVar22 = iVar16 + -8;\n            iVar8 = *piVar22;\n            *piVar22 = *piVar22 + -1;\n            if (iVar8 + -1 < 1) {\n                piVar10 = *ppiVar12;\n                pcVar7 = *(*piVar10 + 8);\n                *(&stack0xfffffffffffffff8 + iVar9) = 0x405008;\n                (*pcVar7)(piVar10, ppiVar12);\n            }\n            *(&stack0x00000020 + iVar9) = iVar11 + 0x18;\n        }\n    }\n    iVar11 = *(&stack0x00000048 + iVar9);\n    LOCK();\n    piVar22 = iVar11 + -8;\n    iVar8 = *piVar22;\n    *piVar22 = *piVar22 + -1;\n    if (iVar8 + -1 < 1) {\n        pcVar7 = *(**(iVar11 + -0x18) + 8);\n        *(&stack0xfffffffffffffff8 + iVar9) = 0x405043;\n        (*pcVar7)();\n    }\n    *(&stack0xfffffffffffffff8 + iVar9) = 0x405052;\n    piVar10 = fcn.00403740(&stack0x00000038 + iVar9, &stack0x00000020 + iVar9);\n    iVar11 = *piVar10;\n    ppiVar14 = iVar11 + -0x18;\n    iVar16 = *(&stack0x00000020 + iVar9);\n    ppiVar12 = iVar16 + -0x18;\n    if (ppiVar14 != ppiVar12) {\n        if ((*(iVar16 + -8) < 0) || (*ppiVar14 != *ppiVar12)) {\n            uVar21 = *(iVar11 + -0x10);\n            *(&stack0xfffffffffffffff8 + iVar9) = 0x4050b2;\n            fcn.00402d50(&stack0x00000020 + iVar9, iVar11, uVar21);\n        }\n        else {\n            *(&stack0xfffffffffffffff8 + iVar9) = 0x40507b;\n            iVar11 = fcn.00402af0(ppiVar14);\n            LOCK();\n            piVar22 = iVar16 + -8;\n            iVar8 = *piVar22;\n            *piVar22 = *piVar22 + -1;\n            if (iVar8 + -1 < 1) {\n                piVar10 = *ppiVar12;\n                pcVar7 = *(*piVar10 + 8);\n                *(&stack0xfffffffffffffff8 + iVar9) = 0x405099;\n                (*pcVar7)(piVar10, ppiVar12);\n            }\n            *(&stack0x00000020 + iVar9) = iVar11 + 0x18;\n        }\n    }\n    iVar11 = *(&stack0x00000038 + iVar9);\n    LOCK();\n    piVar22 = iVar11 + -8;\n    iVar8 = *piVar22;\n    *piVar22 = *piVar22 + -1;\n    if (iVar8 + -1 < 1) {\n        pcVar7 = *(**(iVar11 + -0x18) + 8);\n        *(&stack0xfffffffffffffff8 + iVar9) = 0x4050d4;\n        (*pcVar7)();\n    }\n    uVar6 = *(arg3 + 0x10);\n    *(&stack0xfffffffffffffff8 + iVar9) = 0x4050e5;\n    fcn.00413140(arg3, uVar6, &stack0x00000020 + iVar9);\n    iVar11 = *(&stack0x00000020 + iVar9);\n    LOCK();\n    piVar22 = iVar11 + -8;\n    iVar8 = *piVar22;\n    *piVar22 = *piVar22 + -1;\n    if (iVar8 + -1 < 1) {\n        pcVar7 = *(**(iVar11 + -0x18) + 8);\n        *(&stack0xfffffffffffffff8 + iVar9) = 0x405107;\n        (*pcVar7)();\n    }\n    return;\n}\n",
        "token_count": 6374
    },
    "00405230": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004052f1)\n// WARNING: Removing unreachable block (ram,0x00405301)\n\nint64_t * fcn.00405230(int64_t *arg1, int64_t *arg2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    int32_t iVar5;\n    ulong *puVar6;\n    int64_t *piVar7;\n    int64_t iVar8;\n    int64_t iVar9;\n    int64_t arg2_00;\n    char *pcVar10;\n    uint64_t uStack56;\n    int64_t iStack48;\n    ulong uStack40;\n    \n    uStack40 = 0xfffffffffffffffe;\n    uStack56 = uStack56 & 0xffffffff00000000;\n    puVar6 = fcn.00403150(arg2, &iStack48, 1);\n    iVar5 = fcn.004194c0(*puVar6, 0x434cb8);\n    LOCK();\n    piVar1 = iStack48 + -8;\n    iVar3 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar3 + -1 < 1) {\n        (**(**(iStack48 + -0x18) + 8))();\n    }\n    if (iVar5 == 0) {\n        iVar8 = *arg2;\n        puVar6 = (**(**(iVar8 + -0x18) + 0x20))();\n        if ((*(iVar8 + -8) < 0) || (puVar6 != *(iVar8 + -0x18))) {\n            iVar9 = (***puVar6)(puVar6, *(iVar8 + -0x10), 1);\n            if (iVar9 == 0) {\n                fcn.00401e80();\n                pcVar4 = swi(3);\n                piVar7 = (*pcVar4)();\n                return piVar7;\n            }\n            *(iVar9 + 8) = *(iVar8 + -0x10);\n            arg2_00 = *(iVar8 + -0x10) + 1;\n            fcn.004194d0(iVar9 + 0x18, arg2_00, iVar8, arg2_00);\n        }\n        else {\n            iVar9 = iVar8 + -0x18;\n            LOCK();\n            *(iVar8 + -8) = *(iVar8 + -8) + 1;\n        }\n        *arg1 = iVar9 + 0x18;\n    }\n    else {\n        piVar7 = fcn.00413fd4();\n        if (piVar7 == NULL) {\n            fcn.00401040(0x80004005);\n            pcVar4 = swi(3);\n            piVar7 = (*pcVar4)();\n            return piVar7;\n        }\n        iVar8 = (**(*piVar7 + 0x18))(piVar7);\n        uStack56 = iVar8 + 0x18;\n        iVar8 = -1;\n        pcVar10 = 0x434cb8;\n        do {\n            if (iVar8 == 0) break;\n            iVar8 = iVar8 + -1;\n            cVar2 = *pcVar10;\n            pcVar10 = pcVar10 + 1;\n        } while (cVar2 != '\\0');\n        fcn.00402d50(&uStack56, 0x434cb8, ~iVar8 - 1);\n        fcn.004033a0(arg1, arg2, &uStack56);\n        LOCK();\n        piVar1 = uStack56 - 8;\n        iVar3 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar3 + -1 < 1) {\n            (**(**(uStack56 - 0x18) + 8))();\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 874
    },
    "00405440": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004055c5)\n// WARNING: Removing unreachable block (ram,0x004055d9)\n\nvoid fcn.00405440(int64_t *arg1)\n\n{\n    int64_t **ppiVar1;\n    int32_t *piVar2;\n    char cVar3;\n    uint32_t uVar4;\n    code *pcVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int64_t *piVar8;\n    int64_t **ppiVar9;\n    int64_t iVar10;\n    uint64_t uVar11;\n    char *pcVar12;\n    uint64_t uVar13;\n    int64_t iVar14;\n    uchar auStack152 [32];\n    int64_t **ppiStack120;\n    uchar *puStack112;\n    int64_t iStack104;\n    int64_t *piStack96;\n    ulong uStack88;\n    uchar auStack80 [32];\n    uint64_t uStack48;\n    \n    uStack88 = 0xfffffffffffffffe;\n    uStack48 = *0x444d30 ^ auStack152;\n    auStack80[0] = 0x41;\n    auStack80[1] = 0x42;\n    auStack80[2] = 0x43;\n    auStack80[3] = 0x44;\n    auStack80[4] = 0x45;\n    auStack80[5] = 0x46;\n    auStack80[6] = 0x47;\n    auStack80[7] = 0x48;\n    auStack80[8] = 0x49;\n    auStack80[9] = 0x4a;\n    auStack80[10] = 0x4b;\n    auStack80[11] = 0x4c;\n    auStack80[12] = 0x4d;\n    auStack80[13] = 0x4e;\n    auStack80[14] = 0x4f;\n    auStack80[15] = 0x50;\n    auStack80[16] = 0x51;\n    auStack80[17] = 0x52;\n    auStack80[18] = 0x53;\n    auStack80[19] = 0x54;\n    auStack80[20] = 0x55;\n    auStack80[21] = 0x56;\n    auStack80[22] = 0x57;\n    auStack80[23] = 0x58;\n    auStack80[24] = 0x59;\n    auStack80[25] = 0x5a;\n    iVar14 = *arg1;\n    uVar4 = *(iVar14 + -0x10);\n    piStack96 = arg1;\n    if ((*(iVar14 + -0xc) - uVar4 | 1U - *(iVar14 + -8)) < 0) {\n        fcn.00402a90(arg1, uVar4);\n    }\n    iVar6 = fcn.00418a50(*arg1, uVar4 + 1);\n    if (iVar6 != 0) {\n        if (iVar6 == 0xc) {\n            fcn.004129b4();\n            pcVar5 = swi(3);\n            (*pcVar5)();\n            return;\n        }\n        if ((iVar6 == 0x16) || (iVar6 == 0x22)) {\n            fcn.004129d8();\n            pcVar5 = swi(3);\n            (*pcVar5)();\n            return;\n        }\n        if (iVar6 != 0x50) {\n            fcn.004129d8();\n            pcVar5 = swi(3);\n            (*pcVar5)();\n            return;\n        }\n    }\n    if ((uVar4 < 0) || (*(*arg1 + -0xc) < uVar4)) {\n        fcn.00401040(0x80070057);\n    }\n    else {\n        *(*arg1 + -0x10) = uVar4;\n        *(uVar4 + *arg1) = 0;\n        iVar14 = 0;\n        do {\n            piVar8 = fcn.00413fd4();\n            if (piVar8 == NULL) goto code_r0x0040586c;\n            ppiVar9 = (**(*piVar8 + 0x18))();\n            ppiStack120 = ppiVar9 + 3;\n            uVar11 = 0xffffffffffffffff;\n            pcVar12 = 0x434dd8;\n            do {\n                if (uVar11 == 0) break;\n                uVar11 = uVar11 - 1;\n                cVar3 = *pcVar12;\n                pcVar12 = pcVar12 + 1;\n            } while (cVar3 != '\\0');\n            iVar6 = ~uVar11 - 1;\n            if (iVar6 != 0) {\n                uVar4 = *(ppiVar9 + 1);\n                uVar13 = 0x434dd8 - ppiStack120;\n                if ((*(ppiVar9 + 0xc) - iVar6 | 1U - *(ppiVar9 + 2)) < 0) {\n                    fcn.00402a90(&ppiStack120, ~uVar11 - 1 & 0xffffffff);\n                }\n                ppiVar9 = ppiStack120;\n                if (uVar4 < uVar13) {\n                    fcn.004194d0(ppiStack120, iVar6, 0x434dd8, iVar6);\n                }\n                else {\n                    fcn.00418760(ppiStack120, iVar6, uVar13 + ppiStack120, iVar6);\n                }\n                if ((-1 < iVar6) && (iVar6 <= *(ppiVar9 + -0xc))) {\n                    *(ppiVar9 + -2) = iVar6;\n                    *(iVar6 + ppiVar9) = 0;\n                    goto code_r0x004056d8;\n                }\ncode_r0x00405861:\n                fcn.00401040(0x80070057);\ncode_r0x0040586c:\n                fcn.00401040(0x80004005);\n                pcVar5 = swi(3);\n                (*pcVar5)();\n                return;\n            }\n            piVar8 = *ppiVar9;\n            if (*(ppiVar9 + 1) != 0) {\n                if (*(ppiVar9 + 2) < 0) {\n                    if (*(ppiVar9 + 0xc) < 0) {\n                        fcn.00401040(0x80070057);\n                        break;\n                    }\n                    *(ppiVar9 + 1) = 0;\n                    *ppiStack120 = 0;\n                }\n                else {\n                    LOCK();\n                    ppiVar1 = ppiVar9 + 2;\n                    iVar6 = *ppiVar1;\n                    *ppiVar1 = *ppiVar1 + -1;\n                    if (iVar6 + -1 < 1) {\n                        (**(**ppiVar9 + 8))();\n                    }\n                    iVar10 = (**(*piVar8 + 0x18))(piVar8);\n                    ppiStack120 = iVar10 + 0x18;\n                }\n            }\ncode_r0x004056d8:\n            piVar8 = fcn.00413fd4();\n            if (piVar8 == NULL) {\ncode_r0x00405856:\n                fcn.00401040(0x80004005);\n                goto code_r0x00405861;\n            }\n            iVar10 = (**(*piVar8 + 0x18))();\n            puStack112 = iVar10 + 0x18;\n            if ((*(iVar10 + 0xc) - 1U | 1U - *(iVar10 + 0x10)) < 0) {\n                fcn.00402a90(&puStack112, 1);\n            }\n            *puStack112 = auStack80[iVar14];\n            if (*(puStack112 + -0xc) < 1) {\ncode_r0x0040584b:\n                fcn.00401040(0x80070057);\n                goto code_r0x00405856;\n            }\n            *(puStack112 + -0x10) = 1;\n            puStack112[1] = 0;\n            piVar8 = fcn.004033a0(&iStack104, &puStack112, &ppiStack120);\n            if (*piVar8 == 0) {\n                fcn.00401040(0x80004005);\n                goto code_r0x0040584b;\n            }\n            iVar7 = fcn.004194c0(*arg1, *piVar8);\n            LOCK();\n            piVar2 = iStack104 + -8;\n            iVar6 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n            if (iVar6 + -1 < 1) {\n                (**(**(iStack104 + -0x18) + 8))();\n            }\n            LOCK();\n            piVar2 = puStack112 + -8;\n            iVar6 = *piVar2;\n            *piVar2 = *piVar2 + -1;\n            if (iVar6 + -1 < 1) {\n                (**(**(puStack112 + -0x18) + 8))();\n            }\n            LOCK();\n            ppiVar9 = ppiStack120 + -1;\n            iVar6 = *ppiVar9;\n            *ppiVar9 = *ppiVar9 + -1;\n            if (iVar6 + -1 < 1) {\n                (**(*ppiStack120[-3] + 8))();\n            }\n            if (iVar7 == 0) {\n                iVar14 = *arg1;\n                LOCK();\n                piVar2 = iVar14 + -8;\n                iVar6 = *piVar2;\n                *piVar2 = *piVar2 + -1;\n                if (iVar6 + -1 < 1) {\n                    (**(**(iVar14 + -0x18) + 8))();\n                }\n                goto code_r0x00405882;\n            }\n            iVar14 = iVar14 + 1;\n        } while (iVar14 < 0x1a);\n        iVar14 = *arg1;\n        LOCK();\n        piVar2 = iVar14 + -8;\n        iVar6 = *piVar2;\n        *piVar2 = *piVar2 + -1;\n        if (iVar6 + -1 < 1) {\n            (**(**(iVar14 + -0x18) + 8))();\n        }\n    }\ncode_r0x00405882:\n    fcn.00418d10(uStack48 ^ auStack152);\n    return;\n}\n",
        "token_count": 2366
    },
    "004061e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004064d1)\n// WARNING: Removing unreachable block (ram,0x004064e0)\n// WARNING: Removing unreachable block (ram,0x004062e6)\n// WARNING: Removing unreachable block (ram,0x004062f5)\n// WARNING: Removing unreachable block (ram,0x00406268)\n// WARNING: Removing unreachable block (ram,0x00406277)\n// WARNING: Removing unreachable block (ram,0x00406457)\n// WARNING: Removing unreachable block (ram,0x00406466)\n// WARNING: Removing unreachable block (ram,0x00406654)\n// WARNING: Removing unreachable block (ram,0x00406663)\n\nulong fcn.004061e0(ulong arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    char cVar4;\n    int64_t *piVar5;\n    ulong uVar6;\n    ulong *puVar7;\n    int64_t iVar8;\n    char *pcVar9;\n    int64_t iStack120;\n    int64_t iStack112;\n    int64_t iStack104;\n    int64_t iStack96;\n    int64_t iStack88;\n    int64_t iStack80;\n    int64_t iStack72;\n    int64_t iStack64;\n    int64_t iStack56;\n    int64_t iStack48;\n    int64_t iStack40;\n    ulong uStack32;\n    \n    uStack32 = 0xfffffffffffffffe;\n    cVar4 = fcn.00403960(0x446b70, 0x446b78);\n    if (cVar4 == '\\x01') {\n        piVar5 = fcn.00413fd4();\n        if (piVar5 == NULL) {\n            fcn.00401040(0x80004005);\n            pcVar3 = swi(3);\n            uVar6 = (*pcVar3)();\n            return uVar6;\n        }\n        iStack96 = (**(*piVar5 + 0x18))();\n        iStack96 = iStack96 + 0x18;\n        iVar8 = -1;\n        pcVar9 = \"\\nMSI Version:\\t\";\n        do {\n            if (iVar8 == 0) break;\n            iVar8 = iVar8 + -1;\n            cVar4 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar4 != '\\0');\n        fcn.00402d50(&iStack96, \"\\nMSI Version:\\t\", ~iVar8 - 1);\n        piVar5 = fcn.00413fd4();\n        if (piVar5 == NULL) {\n            fcn.00401040(0x80004005);\n            pcVar3 = swi(3);\n            uVar6 = (*pcVar3)();\n            return uVar6;\n        }\n        iStack112 = (**(*piVar5 + 0x18))(piVar5);\n        iStack112 = iStack112 + 0x18;\n        iVar8 = -1;\n        pcVar9 = \"MSI Path:\\t\";\n        do {\n            if (iVar8 == 0) break;\n            iVar8 = iVar8 + -1;\n            cVar4 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar4 != '\\0');\n        fcn.00402d50(&iStack112, \"MSI Path:\\t\", ~iVar8 - 1);\n        uVar6 = fcn.004033a0(&iStack56, &iStack112, 0x446b70);\n        uVar6 = fcn.004033a0(&iStack40, uVar6, &iStack96);\n        fcn.004033a0(&iStack80, uVar6, 0x446b78);\n        (*_sym.imp.USER32.dll_SetDlgItemTextA)(arg1, 1000);\n        LOCK();\n        piVar1 = iStack80 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 + -1 < 1) {\n            (**(**(iStack80 + -0x18) + 8))();\n        }\n        LOCK();\n        piVar1 = iStack40 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 + -1 < 1) {\n            (**(**(iStack40 + -0x18) + 8))();\n        }\n        LOCK();\n        piVar1 = iStack56 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 + -1 < 1) {\n            (**(**(iStack56 + -0x18) + 8))();\n        }\n        LOCK();\n        piVar1 = iStack112 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 + -1 < 1) {\n            (**(**(iStack112 + -0x18) + 8))();\n        }\n        LOCK();\n        piVar1 = iStack96 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 + -1 < 1) {\n            (**(**(iStack96 + -0x18) + 8))();\n        }\n        piVar5 = fcn.00413fd4();\n        if (piVar5 == NULL) {\n            fcn.00401040(0x80004005);\n            pcVar3 = swi(3);\n            uVar6 = (*pcVar3)();\n            return uVar6;\n        }\n        iStack104 = (**(*piVar5 + 0x18))(piVar5);\n        iStack104 = iStack104 + 0x18;\n        iVar8 = -1;\n        pcVar9 = \"\\nDescription:\\t\";\n        do {\n            if (iVar8 == 0) break;\n            iVar8 = iVar8 + -1;\n            cVar4 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar4 != '\\0');\n        fcn.00402d50(&iStack104, \"\\nDescription:\\t\", ~iVar8 - 1);\n        piVar5 = fcn.00413fd4();\n        if (piVar5 == NULL) {\n            fcn.00401040(0x80004005);\n            pcVar3 = swi(3);\n            uVar6 = (*pcVar3)();\n            return uVar6;\n        }\n        iStack120 = (**(*piVar5 + 0x18))(piVar5);\n        iStack120 = iStack120 + 0x18;\n        iVar8 = -1;\n        pcVar9 = \"Version:\\t\";\n        do {\n            if (iVar8 == 0) break;\n            iVar8 = iVar8 + -1;\n            cVar4 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar4 != '\\0');\n        fcn.00402d50(&iStack120, \"Version:\\t\", ~iVar8 - 1);\n        uVar6 = fcn.00403510(&iStack48, &iStack120, 0x4469c8);\n        uVar6 = fcn.004033a0(&iStack64, uVar6, &iStack104);\n        puVar7 = fcn.00403510(&iStack72, uVar6, 0x4469e0);\n        (*_sym.imp.USER32.dll_SetDlgItemTextA)(arg1, 0x3ea, *puVar7);\n        LOCK();\n        piVar1 = iStack72 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 + -1 < 1) {\n            (**(**(iStack72 + -0x18) + 8))();\n        }\n        LOCK();\n        piVar1 = iStack64 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 + -1 < 1) {\n            (**(**(iStack64 + -0x18) + 8))();\n        }\n        LOCK();\n        piVar1 = iStack48 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 + -1 < 1) {\n            (**(**(iStack48 + -0x18) + 8))();\n        }\n        LOCK();\n        piVar1 = iStack120 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 + -1 < 1) {\n            (**(**(iStack120 + -0x18) + 8))();\n        }\n        LOCK();\n        piVar1 = iStack104 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 + -1 < 1) {\n            (**(**(iStack104 + -0x18) + 8))();\n        }\n        uVar6 = 1;\n    }\n    else {\n        piVar5 = fcn.00413fd4();\n        if (piVar5 == NULL) {\n            fcn.00401040(0x80004005);\n            pcVar3 = swi(3);\n            uVar6 = (*pcVar3)();\n            return uVar6;\n        }\n        iStack88 = (**(*piVar5 + 0x18))(piVar5);\n        iStack88 = iStack88 + 0x18;\n        iVar8 = -1;\n        pcVar9 = \"MSI Not installed.\";\n        do {\n            if (iVar8 == 0) break;\n            iVar8 = iVar8 + -1;\n            cVar4 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar4 != '\\0');\n        fcn.00402d50(&iStack88, \"MSI Not installed.\", ~iVar8 - 1);\n        iVar8 = iStack88;\n        (*_sym.imp.USER32.dll_SetDlgItemTextA)(arg1, 1000, iStack88);\n        LOCK();\n        piVar1 = iVar8 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 + -1 < 1) {\n            (**(**(iVar8 + -0x18) + 8))();\n        }\n        uVar6 = 0;\n    }\n    return uVar6;\n}\n",
        "token_count": 2428
    },
    "null": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "",
        "token_count": 0
    },
    "00406ae0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00406ae0(ulong arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t arg1_00;\n    ulong in_R9;\n    uchar auStack600 [32];\n    ulong uStack568;\n    ulong uStack560;\n    int64_t iStack552;\n    ulong uStack544;\n    uchar auStack536 [512];\n    uint64_t uStack24;\n    \n    uStack24 = *0x444d30 ^ auStack600;\n    uStack544 = 0;\n    arg1_00 = fcn.0041c110(arg1, 0x434fd0);\n    if (arg1_00 != 0) {\n        if (*0x444154 == 1) {\n            uStack544 = fcn.00419e30(0);\n            fcn.00406930(&uStack544, &iStack552, \"%Y/%m/%d\\t%H:%M:%S\\tMSI PACKAGES MANAGER\");\n            fcn.00418c50(auStack536, 0x434a54, iStack552, in_R9);\n            uStack568 = 0x434f60;\n            uStack560 = arg2;\n            fcn.0041bda0(arg1_00, \"\\n%s\\n%s\\n%s\\n%s\\n\", 0x434f60, auStack536);\n            *0x444154 = 0;\n            LOCK();\n            piVar1 = iStack552 + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 + -1 < 1) {\n                (**(**(iStack552 + -0x18) + 8))();\n            }\n        }\n        else {\n            fcn.0041bda0(arg1_00, 0x434f40, arg2, in_R9);\n        }\n        fcn.0041bcf0(arg1_00);\n    }\n    fcn.00418d10(uStack24 ^ auStack600);\n    return;\n}\n",
        "token_count": 460
    },
    "00406c10": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00407202)\n// WARNING: Removing unreachable block (ram,0x00407211)\n// WARNING: Removing unreachable block (ram,0x00407800)\n// WARNING: Removing unreachable block (ram,0x00407810)\n// WARNING: Could not reconcile some variable overlaps\n\nvoid fcn.00406c10(void)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    char cVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int64_t *piVar7;\n    int64_t iVar8;\n    ulong *puVar9;\n    int64_t **ppiVar10;\n    ulong arg2;\n    int32_t iVar11;\n    int64_t iVar12;\n    int64_t **ppiVar13;\n    int64_t **ppiVar14;\n    char *pcVar15;\n    char *pcVar16;\n    uchar auStack568 [32];\n    uint uStack536;\n    uint32_t *puStack528;\n    int64_t **ppiStack520;\n    int64_t iStack512;\n    char *pcStack504;\n    ulong uStack496;\n    int32_t iStack488;\n    uint32_t auStack480 [2];\n    ulong uStack472;\n    int32_t iStack464;\n    int64_t iStack456;\n    int64_t iStack448;\n    int64_t iStack440;\n    int64_t iStack432;\n    int64_t iStack424;\n    int64_t iStack416;\n    int64_t iStack408;\n    int64_t iStack400;\n    int64_t iStack392;\n    int64_t iStack384;\n    int64_t iStack376;\n    int64_t iStack368;\n    int64_t iStack360;\n    int64_t iStack352;\n    int64_t iStack344;\n    ulong uStack336;\n    uchar auStack328 [16];\n    uchar auStack312 [256];\n    uint64_t uStack56;\n    \n    uStack336 = 0xfffffffffffffffe;\n    uStack56 = *0x444d30 ^ auStack568;\n    iVar11 = 0;\n    auStack480[0] = 0;\n    piVar7 = fcn.00413fd4();\n    if (piVar7 == NULL) {\n        fcn.00401040(0x80004005);\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    iVar8 = (**(*piVar7 + 0x18))();\n    pcStack504 = iVar8 + 0x18;\n    piVar7 = fcn.00413fd4();\n    if (piVar7 == NULL) {\n        fcn.00401040(0x80004005);\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    iVar8 = (**(*piVar7 + 0x18))();\n    ppiStack520 = iVar8 + 0x18;\n    piVar7 = fcn.00413fd4();\n    if (piVar7 == NULL) {\n        fcn.00401040(0x80004005);\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    iStack512 = (**(*piVar7 + 0x18))();\n    iStack512 = iStack512 + 0x18;\n    uStack496 = 0;\n    iStack488 = 0;\n    uStack472 = 0;\n    iStack464 = 0;\n    fcn.00402650(*0x4468b0, 0x446ba0);\n    if ((*0x446b94 == 2) || (*0x446b94 == 3)) {\n        puVar9 = fcn.00402fa0(0x446b98, &iStack408, 0, 4);\n        iVar5 = fcn.00418750(*puVar9, \"HKCU\");\n        LOCK();\n        piVar1 = iStack408 + -8;\n        iVar6 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar6 + -1 < 1) {\n            (**(**(iStack408 + -0x18) + 8))();\n        }\n        piVar7 = fcn.00403370(0x446b98, &iStack344, 5);\n        ppiVar14 = ppiStack520;\n        iVar8 = *piVar7;\n        ppiVar10 = iVar8 + -0x18;\n        ppiVar13 = ppiStack520 + -3;\n        if (ppiVar10 != ppiVar13) {\n            if ((*(ppiStack520 + -1) < 0) || (*ppiVar10 != *ppiVar13)) {\n                fcn.00402d50(&ppiStack520, iVar8, *(iVar8 + -0x10));\n            }\n            else {\n                piVar7 = (**(**ppiVar10 + 0x20))();\n                if ((*(iVar8 + -8) < 0) || (piVar7 != *ppiVar10)) {\n                    ppiVar10 = (***piVar7)(piVar7, *(iVar8 + -0x10), 1);\n                    if (ppiVar10 == NULL) {\n                        fcn.00401e80();\n                        pcVar3 = swi(3);\n                        (*pcVar3)();\n                        return;\n                    }\n                    *(ppiVar10 + 1) = *(iVar8 + -0x10);\n                    iVar12 = *(iVar8 + -0x10) + 1;\n                    fcn.004194d0(ppiVar10 + 3, iVar12, iVar8, iVar12);\n                }\n                else {\n                    LOCK();\n                    *(iVar8 + -8) = *(iVar8 + -8) + 1;\n                }\n                LOCK();\n                ppiVar14 = ppiVar14 + -1;\n                iVar6 = *ppiVar14;\n                *ppiVar14 = *ppiVar14 + -1;\n                if (iVar6 + -1 < 1) {\n                    (**(**ppiVar13 + 8))(*ppiVar13, ppiVar13);\n                }\n                ppiStack520 = ppiVar10 + 3;\n            }\n        }\n        LOCK();\n        piVar1 = iStack344 + -8;\n        iVar6 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar6 + -1 < 1) {\n            (**(**(iStack344 + -0x18) + 8))();\n        }\n        ppiVar10 = ppiStack520;\n        uStack472 = CONCAT44(uStack472._4_4_, 1);\n        iVar6 = fcn.00401430((iVar5 != 0) - 0x7fffffff, ppiStack520);\n        if (((iVar6 == 1) && (*0x446b94 == 2)) ||\n           ((iVar6 = fcn.00401430((iVar5 != 0) - 0x7fffffff, ppiVar10),  iVar6 == 0 && (*0x446b94 == 3)))) {\n            uStack496 = CONCAT44(uStack496._4_4_, 1);\n        }\n        else {\n            uStack496 = uStack496 & 0xffffffff00000000;\n        }\n    }\n    if ((*0x446b94 == 4) || (*0x446b94 == 5)) {\n        puVar9 = fcn.00402fa0(0x446b98, &iStack352, 0, 4);\n        iVar5 = fcn.00418750(*puVar9, \"HKCU\");\n        LOCK();\n        piVar1 = iStack352 + -8;\n        iVar6 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar6 + -1 < 1) {\n            (**(**(iStack352 + -0x18) + 8))();\n        }\n        iVar8 = fcn.004192d0(*0x446b98, 0x5c);\n        if (((iVar8 != 0) && (iVar6 = iVar8 - *0x446b98,  0 < iVar6)) && (0 < *(*0x446b98 + -0x10) - iVar6)) {\n            piVar7 = fcn.00402fa0(0x446b98, &iStack424, 5, iVar6 - 5);\n            ppiVar14 = ppiStack520;\n            iVar8 = *piVar7;\n            ppiVar10 = iVar8 + -0x18;\n            ppiVar13 = ppiStack520 + -3;\n            if (ppiVar10 != ppiVar13) {\n                if ((*(ppiStack520 + -1) < 0) || (*ppiVar10 != *ppiVar13)) {\n                    fcn.00402d50(&ppiStack520, iVar8, *(iVar8 + -0x10));\n                }\n                else {\n                    iVar8 = fcn.00402af0(ppiVar10);\n                    LOCK();\n                    ppiVar14 = ppiVar14 + -1;\n                    iVar2 = *ppiVar14;\n                    *ppiVar14 = *ppiVar14 + -1;\n                    if (iVar2 + -1 < 1) {\n                        (**(**ppiVar13 + 8))(*ppiVar13, ppiVar13);\n                    }\n                    ppiStack520 = iVar8 + 0x18;\n                }\n            }\n            LOCK();\n            piVar1 = iStack424 + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 + -1 < 1) {\n                (**(**(iStack424 + -0x18) + 8))();\n            }\n            piVar7 = fcn.00403370(0x446b98, &iStack368, iVar6 + 1);\n            iVar12 = iStack512;\n            iVar8 = *piVar7;\n            ppiVar10 = iVar8 + -0x18;\n            ppiVar14 = iStack512 + -0x18;\n            if (ppiVar10 != ppiVar14) {\n                if ((*(iStack512 + -8) < 0) || (*ppiVar10 != *ppiVar14)) {\n                    fcn.00402d50(&iStack512, iVar8, *(iVar8 + -0x10));\n                }\n                else {\n                    iVar8 = fcn.00402af0(ppiVar10);\n                    LOCK();\n                    piVar1 = iVar12 + -8;\n                    iVar6 = *piVar1;\n                    *piVar1 = *piVar1 + -1;\n                    if (iVar6 + -1 < 1) {\n                        (**(**ppiVar14 + 8))(*ppiVar14, ppiVar14);\n                    }\n                    iStack512 = iVar8 + 0x18;\n                }\n            }\n            LOCK();\n            piVar1 = iStack368 + -8;\n            iVar6 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar6 + -1 < 1) {\n                (**(**(iStack368 + -0x18) + 8))();\n            }\n            ppiVar10 = ppiStack520;\n            uStack472 = CONCAT44(1, uStack472);\n            iVar6 = fcn.004014f0((iVar5 != 0) - 0x7fffffff, ppiStack520, iStack512);\n            if (((iVar6 == 1) && (*0x446b94 == 4)) ||\n               ((iVar6 = fcn.004014f0((iVar5 != 0) - 0x7fffffff, ppiVar10, iStack512),  iVar6 == 0 && (*0x446b94 == 5)))\n               ) {\n                uStack496 = CONCAT44(1, uStack496);\n            }\n            else {\n                uStack496 = uStack496 & 0xffffffff;\n            }\n        }\n    }\n    if ((*0x446b94 == 0) || (*0x446b94 == 1)) {\n        iStack464 = 1;\n        cVar4 = fcn.00402130(0x446b98);\n        if (((cVar4 == '\\x01') && (*0x446b94 == 0)) ||\n           ((cVar4 = fcn.00402130(0x446b98),  cVar4 == '\\0' && (*0x446b94 == 1)))) {\n            iStack488 = 1;\n        }\n        else {\n            iStack488 = 0;\n        }\n    }\n    if ((iStack488 * iStack464 + uStack496._4_4_ * uStack472._4_4_ + uStack496 * uStack472 == 1) ||\n       (iVar6 = 1,  *0x446b94 == -1)) {\n        if (*0x446b90 == 0) {\n            piVar7 = fcn.00413fd4();\n            if (piVar7 == NULL) {\n                fcn.00401040(0x80004005);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            iStack456 = (**(*piVar7 + 0x18))(piVar7);\n            iStack456 = iStack456 + 0x18;\n            iVar8 = -1;\n            pcVar15 = 0x434a18;\n            do {\n                if (iVar8 == 0) break;\n                iVar8 = iVar8 + -1;\n                cVar4 = *pcVar15;\n                pcVar15 = pcVar15 + 1;\n            } while (cVar4 != '\\0');\n            fcn.00402d50(&iStack456, 0x434a18, ~iVar8 - 1);\n            iVar6 = fcn.00405e90(0x446b80, &iStack456, 0);\n            LOCK();\n            piVar1 = iStack456 + -8;\n            iVar5 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar5 + -1 < 1) {\n                (**(**(iStack456 + -0x18) + 8))();\n            }\n        }\n        else if (*0x446b90 == 1) {\n            iVar6 = fcn.00405fc0(0x446b80, 1, 1);\n        }\n        else if (*0x446b90 == 2) {\n            puVar9 = fcn.00402fa0(0x446b80, &iStack432, 0, 4);\n            iVar5 = fcn.00418750(*puVar9, \"HKCU\");\n            LOCK();\n            piVar1 = iStack432 + -8;\n            iVar6 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar6 + -1 < 1) {\n                (**(**(iStack432 + -0x18) + 8))();\n            }\n            iVar8 = fcn.004192d0(*0x446b80, 0x5c);\n            if (((iVar8 != 0) && (iVar6 = iVar8 - *0x446b80,  0 < iVar6)) && (0 < *(*0x446b80 + -0x10) - iVar6)) {\n                piVar7 = fcn.00402fa0(0x446b80, &iStack416, 5, iVar6 - 5);\n                ppiVar14 = ppiStack520;\n                iVar8 = *piVar7;\n                ppiVar10 = iVar8 + -0x18;\n                ppiVar13 = ppiStack520 + -3;\n                if (ppiVar10 != ppiVar13) {\n                    if ((*(ppiStack520 + -1) < 0) || (*ppiVar10 != *ppiVar13)) {\n                        fcn.00402d50(&ppiStack520, iVar8, *(iVar8 + -0x10));\n                    }\n                    else {\n                        iVar8 = fcn.00402af0(ppiVar10);\n                        LOCK();\n                        ppiVar14 = ppiVar14 + -1;\n                        iVar2 = *ppiVar14;\n                        *ppiVar14 = *ppiVar14 + -1;\n                        if (iVar2 + -1 < 1) {\n                            (**(**ppiVar13 + 8))(*ppiVar13, ppiVar13);\n                        }\n                        ppiStack520 = iVar8 + 0x18;\n                    }\n                }\n                LOCK();\n                piVar1 = iStack416 + -8;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar2 + -1 < 1) {\n                    (**(**(iStack416 + -0x18) + 8))();\n                }\n                piVar7 = fcn.00403370(0x446b80, &iStack400, iVar6 + 1);\n                iVar12 = iStack512;\n                iVar8 = *piVar7;\n                ppiVar10 = iVar8 + -0x18;\n                ppiVar14 = iStack512 + -0x18;\n                if (ppiVar10 != ppiVar14) {\n                    if ((*(iStack512 + -8) < 0) || (*ppiVar10 != *ppiVar14)) {\n                        fcn.00402d50(&iStack512, iVar8, *(iVar8 + -0x10));\n                    }\n                    else {\n                        iVar8 = fcn.00402af0(ppiVar10);\n                        LOCK();\n                        piVar1 = iVar12 + -8;\n                        iVar6 = *piVar1;\n                        *piVar1 = *piVar1 + -1;\n                        if (iVar6 + -1 < 1) {\n                            (**(**ppiVar14 + 8))(*ppiVar14, ppiVar14);\n                        }\n                        iStack512 = iVar8 + 0x18;\n                    }\n                }\n                LOCK();\n                piVar1 = iStack400 + -8;\n                iVar6 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar6 + -1 < 1) {\n                    (**(**(iStack400 + -0x18) + 8))();\n                }\n            }\n            iVar6 = fcn.00402590((iVar5 != 0) - 0x7fffffff, ppiStack520, iStack512);\n        }\n        else if (*0x446b90 == 3) {\n            puVar9 = fcn.00402fa0(0x446b80, &iStack392, 0, 4);\n            iVar5 = fcn.00418750(*puVar9, \"HKCU\");\n            LOCK();\n            piVar1 = iStack392 + -8;\n            iVar6 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar6 + -1 < 1) {\n                (**(**(iStack392 + -0x18) + 8))();\n            }\n            iVar8 = fcn.004192d0(*0x446b80, 0x5c);\n            if (((iVar8 != 0) && (iVar6 = iVar8 - *0x446b80,  0 < iVar6)) && (0 < *(*0x446b80 + -0x10) - iVar6)) {\n                piVar7 = fcn.00402fa0(0x446b80, &iStack376, 5, iVar6 - 5);\n                ppiVar14 = ppiStack520;\n                iVar8 = *piVar7;\n                ppiVar10 = iVar8 + -0x18;\n                ppiVar13 = ppiStack520 + -3;\n                if (ppiVar10 != ppiVar13) {\n                    if ((*(ppiStack520 + -1) < 0) || (*ppiVar10 != *ppiVar13)) {\n                        fcn.00402d50(&ppiStack520, iVar8, *(iVar8 + -0x10));\n                    }\n                    else {\n                        iVar8 = fcn.00402af0(ppiVar10);\n                        LOCK();\n                        ppiVar14 = ppiVar14 + -1;\n                        iVar2 = *ppiVar14;\n                        *ppiVar14 = *ppiVar14 + -1;\n                        if (iVar2 + -1 < 1) {\n                            (**(**ppiVar13 + 8))(*ppiVar13, ppiVar13);\n                        }\n                        ppiStack520 = iVar8 + 0x18;\n                    }\n                }\n                LOCK();\n                piVar1 = iStack376 + -8;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar2 + -1 < 1) {\n                    (**(**(iStack376 + -0x18) + 8))();\n                }\n                piVar7 = fcn.00403370(0x446b80, &iStack360, iVar6 + 1);\n                iVar12 = iStack512;\n                iVar8 = *piVar7;\n                ppiVar10 = iVar8 + -0x18;\n                ppiVar14 = iStack512 + -0x18;\n                if (ppiVar10 != ppiVar14) {\n                    if ((*(iStack512 + -8) < 0) || (*ppiVar10 != *ppiVar14)) {\n                        fcn.00402d50(&iStack512, iVar8, *(iVar8 + -0x10));\n                    }\n                    else {\n                        iVar8 = fcn.00402af0(ppiVar10);\n                        LOCK();\n                        piVar1 = iVar12 + -8;\n                        iVar6 = *piVar1;\n                        *piVar1 = *piVar1 + -1;\n                        if (iVar6 + -1 < 1) {\n                            (**(**ppiVar14 + 8))(*ppiVar14, ppiVar14);\n                        }\n                        iStack512 = iVar8 + 0x18;\n                    }\n                }\n                LOCK();\n                piVar1 = iStack360 + -8;\n                iVar6 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar6 + -1 < 1) {\n                    (**(**(iStack360 + -0x18) + 8))();\n                }\n            }\n            iVar6 = fcn.00401620((iVar5 != 0) - 0x7fffffff, ppiStack520, iStack512);\n        }\n        else {\n            iVar6 = 1;\n            if (*0x446b90 == 4) {\n                piVar7 = fcn.00413fd4();\n                if (piVar7 == NULL) {\n                    fcn.00401040(0x80004005);\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n                iStack448 = (**(*piVar7 + 0x18))();\n                iStack448 = iStack448 + 0x18;\n                iVar8 = -1;\n                pcVar15 = 0x434d58;\n                do {\n                    if (iVar8 == 0) break;\n                    iVar8 = iVar8 + -1;\n                    cVar4 = *pcVar15;\n                    pcVar15 = pcVar15 + 1;\n                } while (cVar4 != '\\0');\n                fcn.00402d50(&iStack448, 0x434d58, ~iVar8 - 1);\n                arg2 = fcn.004033a0(&iStack384, 0x446b80, &iStack448);\n                piVar7 = fcn.004033a0(&iStack440, arg2, 0x446b88);\n                pcVar15 = pcStack504;\n                iVar8 = *piVar7;\n                ppiVar10 = iVar8 + -0x18;\n                ppiVar14 = pcStack504 + -0x18;\n                if (ppiVar10 != ppiVar14) {\n                    if ((*(pcStack504 + -8) < 0) || (*ppiVar10 != *ppiVar14)) {\n                        fcn.00402d50(&pcStack504, iVar8, *(iVar8 + -0x10));\n                    }\n                    else {\n                        iVar8 = fcn.00402af0(ppiVar10);\n                        LOCK();\n                        piVar1 = pcVar15 + -8;\n                        iVar6 = *piVar1;\n                        *piVar1 = *piVar1 + -1;\n                        if (iVar6 + -1 < 1) {\n                            (**(**ppiVar14 + 8))(*ppiVar14, ppiVar14);\n                        }\n                        pcStack504 = iVar8 + 0x18;\n                    }\n                }\n                LOCK();\n                piVar1 = iStack440 + -8;\n                iVar6 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar6 + -1 < 1) {\n                    (**(**(iStack440 + -0x18) + 8))();\n                }\n                LOCK();\n                piVar1 = iStack384 + -8;\n                iVar6 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar6 + -1 < 1) {\n                    (**(**(iStack384 + -0x18) + 8))();\n                }\n                LOCK();\n                piVar1 = iStack448 + -8;\n                iVar6 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar6 + -1 < 1) {\n                    (**(**(iStack448 + -0x18) + 8))();\n                }\n                if ((*(pcStack504 + -0xc) - 0xffU | 1U - *(pcStack504 + -8)) < 0) {\n                    fcn.00402a90(&pcStack504, 0xff);\n                }\n                pcVar15 = pcStack504;\n                puStack528 = auStack480;\n                uStack536 = 1;\n                iVar6 = fcn.00401110(0x434a18, pcStack504, 1, *0x4468bc);\n                if (pcVar15 == NULL) {\n                    iVar5 = 0;\n                }\n                else {\n                    iVar8 = -1;\n                    pcVar16 = pcVar15;\n                    do {\n                        if (iVar8 == 0) break;\n                        iVar8 = iVar8 + -1;\n                        cVar4 = *pcVar16;\n                        pcVar16 = pcVar16 + 1;\n                    } while (cVar4 != '\\0');\n                    iVar5 = ~iVar8 - 1;\n                    if (iVar5 < 0) goto code_r0x004073c0;\n                }\n                if (*(pcVar15 + -0xc) < iVar5) {\ncode_r0x004073c0:\n                    fcn.00401040(0x80070057);\n                    pcVar3 = swi(3);\n                    (*pcVar3)();\n                    return;\n                }\n                *(pcVar15 + -0x10) = iVar5;\n                pcVar15[iVar5] = '\\0';\n            }\n        }\n    }\n    fcn.00432e20(auStack480[0], auStack328, 10);\n    if (iVar6 == 1) {\n        if ((*(*0x446b80 + -0xc) | 1U - *(*0x446b80 + -8)) < 0) {\n            fcn.00402a90(0x446b80, 0);\n        }\n        fcn.00418c50(auStack312, \"The line: \\\"%s\\\" has been processed with success. Returned code: %s\", *0x446b80, \n                     auStack328);\n    }\n    else {\n        if ((*(*0x446b80 + -0xc) | 1U - *(*0x446b80 + -8)) < 0) {\n            fcn.00402a90(0x446b80, 0);\n        }\n        fcn.00418c50(auStack312, \"The proccessing of the line :\\\"%s\\\" has failed!. Returned code: %s\", *0x446b80, \n                     auStack328);\n    }\n    if (*0x446b80 == NULL) {\ncode_r0x00407948:\n        if (iVar11 <= *(*0x446b80 + -0xc)) {\n            *(*0x446b80 + -0x10) = iVar11;\n            (*0x446b80)[iVar11] = '\\0';\n            fcn.00406ae0(0x4468c0, auStack312);\n            LOCK();\n            piVar1 = iStack512 + -8;\n            iVar11 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar11 + -1 < 1) {\n                (**(**(iStack512 + -0x18) + 8))();\n            }\n            LOCK();\n            ppiVar10 = ppiStack520 + -1;\n            iVar11 = *ppiVar10;\n            *ppiVar10 = *ppiVar10 + -1;\n            if (iVar11 + -1 < 1) {\n                (**(*ppiStack520[-3] + 8))();\n            }\n            LOCK();\n            piVar1 = pcStack504 + -8;\n            iVar11 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar11 + -1 < 1) {\n                (**(**(pcStack504 + -0x18) + 8))();\n            }\n            goto code_r0x004079e7;\n        }\n    }\n    else {\n        iVar8 = -1;\n        pcVar15 = *0x446b80;\n        do {\n            if (iVar8 == 0) break;\n            iVar8 = iVar8 + -1;\n            cVar4 = *pcVar15;\n            pcVar15 = pcVar15 + 1;\n        } while (cVar4 != '\\0');\n        iVar11 = ~iVar8 - 1;\n        if (-1 < iVar11) goto code_r0x00407948;\n    }\n    fcn.00401040(0x80070057);\ncode_r0x004079e7:\n    fcn.00418d10(uStack56 ^ auStack568);\n    return;\n}\n",
        "token_count": 6765
    },
    "00407c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00407c40(ulong *param_1)\n\n{\n    char cVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    ulong uVar4;\n    int64_t *piVar5;\n    code *pcVar6;\n    int32_t iVar7;\n    int64_t iVar8;\n    int64_t *piVar9;\n    int64_t **ppiVar10;\n    int64_t **ppiVar11;\n    int64_t **ppiVar12;\n    int64_t **ppiVar13;\n    int64_t iVar14;\n    uint64_t uVar15;\n    int64_t **arg2;\n    int64_t **ppiVar16;\n    int64_t iVar17;\n    ulong unaff_RBX;\n    int64_t **ppiVar18;\n    ulong unaff_RBP;\n    uint64_t uVar19;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    char *pcVar20;\n    ulong unaff_R12;\n    char *arg3;\n    ulong unaff_R13;\n    ulong unaff_R14;\n    ulong unaff_R15;\n    uint auStackX32 [2];\n    ulong uStack8;\n    \n    uStack8 = 0x407c4a;\n    iVar8 = fcn.00432eb0();\n    iVar8 = -iVar8;\n    *(&stack0x00000068 + iVar8) = 0xfffffffffffffffe;\n    *(&stack0x000010d8 + iVar8) = unaff_RBX;\n    *(&stack0x000010b0 + iVar8) = unaff_RBP;\n    *(&stack0x000010a8 + iVar8) = unaff_RSI;\n    *(&stack0x000010a0 + iVar8) = unaff_RDI;\n    *(&stack0x00001098 + iVar8) = unaff_R12;\n    *(&stack0x00001090 + iVar8) = unaff_R13;\n    *(&stack0x00001088 + iVar8) = unaff_R14;\n    *(&stack0x00001080 + iVar8) = unaff_R15;\n    *(&stack0x00001070 + iVar8) = *0x444d30 ^ &stack0x00000000 + iVar8;\n    *(&stack0xfffffffffffffff8 + iVar8) = 0x407cba;\n    fcn.00412ca4(&stack0x00000040 + iVar8);\n    *(&stack0x00000028 + iVar8) = 0x446a60;\n    *(&stack0x00000020 + iVar8) = 0x800;\n    uVar4 = *param_1;\n    *(&stack0xfffffffffffffff8 + iVar8) = 0x407cea;\n    iVar7 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)(uVar4, 0, 0x434a18, &stack0x00000870 + iVar8);\n    if (iVar7 != 0) {\n        arg3 = &stack0x00000870 + iVar8;\n        do {\n            *(&stack0x00000028 + iVar8) = 0x446a60;\n            *(&stack0x00000020 + iVar8) = 0x7ff;\n            ppiVar18 = &stack0x00000070 + iVar8;\n            uVar4 = *param_1;\n            *(&stack0xfffffffffffffff8 + iVar8) = 0x407d26;\n            (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)(uVar4, arg3);\n            *(&stack0xfffffffffffffff8 + iVar8) = 0x407d2b;\n            piVar9 = fcn.00413fd4();\n            if (piVar9 == NULL) {\ncode_r0x00408407:\n                *(&stack0xfffffffffffffff8 + iVar8) = 0x408411;\n                fcn.00401040(0x80004005);\n                break;\n            }\n            ppiVar12 = *piVar9;\n            piVar5 = ppiVar12[3];\n            *(&stack0xfffffffffffffff8 + iVar8) = 0x407d45;\n            ppiVar10 = (*piVar5)(piVar9);\n            ppiVar13 = ppiVar10 + 3;\n            *(&stack0x00000030 + iVar8) = ppiVar13;\n            if ((&stack0x00000070 + iVar8 & 0xffffffffffff0000) != 0) {\n                uVar15 = 0xffffffffffffffff;\n                pcVar20 = &stack0x00000070 + iVar8;\n                do {\n                    if (uVar15 == 0) break;\n                    uVar15 = uVar15 - 1;\n                    cVar1 = *pcVar20;\n                    pcVar20 = pcVar20 + 1;\n                } while (cVar1 != '\\0');\n                iVar7 = ~uVar15 - 1;\n                if (iVar7 == 0) {\n                    piVar9 = *ppiVar10;\n                    if (*(ppiVar10 + 1) != 0) {\n                        if (*(ppiVar10 + 2) < 0) {\n                            if (*(ppiVar10 + 0xc) < 0) {\n                                *(&stack0xfffffffffffffff8 + iVar8) = 0x4083b0;\n                                fcn.00401040(0x80070057);\n                                goto code_r0x004083b1;\n                            }\n                            *(ppiVar10 + 1) = 0;\n                            *ppiVar13 = 0;\n                        }\n                        else {\n                            LOCK();\n                            ppiVar13 = ppiVar10 + 2;\n                            iVar7 = *ppiVar13;\n                            *ppiVar13 = *ppiVar13 + -1;\n                            if (iVar7 + -1 < 1) {\n                                pcVar6 = *(**ppiVar10 + 8);\n                                *(&stack0xfffffffffffffff8 + iVar8) = 0x407dee;\n                                (*pcVar6)();\n                            }\n                            pcVar6 = *(*piVar9 + 0x18);\n                            *(&stack0xfffffffffffffff8 + iVar8) = 0x407df7;\n                            iVar14 = (*pcVar6)(piVar9);\n                            ppiVar13 = iVar14 + 0x18;\n                            *(&stack0x00000030 + iVar8) = ppiVar13;\n                        }\n                    }\n                    goto code_r0x00407e79;\n                }\n                uVar3 = *(ppiVar10 + 1);\n                iVar14 = iVar8 - ppiVar13;\n                if ((*(ppiVar10 + 0xc) - iVar7 | 1U - *(ppiVar10 + 2)) < 0) {\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x407e2a;\n                    fcn.00402a90(&stack0x00000030 + iVar8, ~uVar15 - 1 & 0xffffffff);\n                    ppiVar13 = *(&stack0x00000030 + iVar8);\n                }\n                if (uVar3 < &stack0x00000070 + iVar14) {\n                    ppiVar10 = iVar7;\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x407e61;\n                    ppiVar18 = ppiVar10;\n                    fcn.004194d0(ppiVar13, ppiVar10, &stack0x00000070 + iVar8, ppiVar10);\n                }\n                else {\n                    ppiVar10 = iVar7;\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x407e49;\n                    ppiVar18 = ppiVar10;\n                    fcn.00418760(ppiVar13, ppiVar10, ppiVar13 + &stack0x00000070 + iVar14, ppiVar10);\n                }\n                if ((-1 < iVar7) && (iVar7 <= *(ppiVar13 + -0xc))) {\n                    *(ppiVar13 + -2) = iVar7;\n                    *(iVar7 + ppiVar13) = 0;\n                    goto code_r0x00407e79;\n                }\ncode_r0x004083fc:\n                *(&stack0xfffffffffffffff8 + iVar8) = 0x408406;\n                fcn.00401040(0x80070057);\n                goto code_r0x00408407;\n            }\n            *(&stack0xfffffffffffffff8 + iVar8) = 0x407d6a;\n            ppiVar11 = fcn.00413fc0(&stack0x00000070 + iVar8 & 0xffff);\n            ppiVar10 = ppiVar12;\n            if (ppiVar11 != NULL) {\n                *(&stack0xfffffffffffffff8 + iVar8) = 0x407d83;\n                fcn.00402bb0(&stack0x00000030 + iVar8, ppiVar11, &stack0x00000070 + iVar8 & 0xffff);\n                ppiVar13 = *(&stack0x00000030 + iVar8);\n                ppiVar10 = ppiVar11;\n            }\ncode_r0x00407e79:\n            ppiVar11 = &stack0x00000040 + iVar8;\n            *(&stack0xfffffffffffffff8 + iVar8) = 0x407e8a;\n            fcn.00404920(&stack0x00000030 + iVar8, CONCAT71(ppiVar10 >> 8, 0x2c), ppiVar11);\n            LOCK();\n            ppiVar12 = ppiVar13 + -1;\n            iVar7 = *ppiVar12;\n            *ppiVar12 = *ppiVar12 + -1;\n            if (iVar7 + -1 < 1) {\n                pcVar6 = *(*ppiVar13[-3] + 8);\n                *(&stack0xfffffffffffffff8 + iVar8) = 0x407ea9;\n                (*pcVar6)();\n            }\n            ppiVar13 = *0x446b88;\n            if (*(&stack0x00000050 + iVar8) < 1) {\n                *(&stack0xfffffffffffffff8 + iVar8) = 0x4083fb;\n                fcn.004129d8();\n                goto code_r0x004083fc;\n            }\n            ppiVar10 = **(&stack0x00000048 + iVar8);\n            ppiVar12 = ppiVar10 + -3;\n            ppiVar16 = *0x446b88 + -3;\n            if (ppiVar12 != ppiVar16) {\n                if ((*(*0x446b88 + -1) < 0) || (*ppiVar12 != *ppiVar16)) {\n                    ppiVar11 = *(ppiVar10 + -2);\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x407f7c;\n                    fcn.00402d50(0x446b88, ppiVar10, ppiVar11);\n                }\n                else {\n                    pcVar6 = *(**ppiVar12 + 0x20);\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x407ef1;\n                    arg2 = ppiVar10;\n                    piVar9 = (*pcVar6)();\n                    if ((*(ppiVar10 + -1) < 0) || (piVar9 != *ppiVar12)) {\n                        uVar2 = *(ppiVar10 + -2);\n                        pcVar6 = **piVar9;\n                        *(&stack0xfffffffffffffff8 + iVar8) = 0x407f17;\n                        ppiVar12 = (*pcVar6)(piVar9, uVar2, 1);\n                        if (ppiVar12 == NULL) {\ncode_r0x004083b1:\n                            *(&stack0xfffffffffffffff8 + iVar8) = 0x4083b6;\n                            fcn.00401e80();\n                            pcVar6 = swi(3);\n                            (*pcVar6)();\n                            return;\n                        }\n                        *(ppiVar12 + 1) = *(ppiVar10 + -2);\n                        arg2 = *(ppiVar10 + -2) + 1;\n                        *(&stack0xfffffffffffffff8 + iVar8) = 0x407f42;\n                        ppiVar18 = arg2;\n                        fcn.004194d0(ppiVar12 + 3, arg2, ppiVar10, arg2);\n                        ppiVar11 = ppiVar10;\n                    }\n                    else {\n                        LOCK();\n                        *(ppiVar10 + -1) = *(ppiVar10 + -1) + 1;\n                    }\n                    LOCK();\n                    ppiVar13 = ppiVar13 + -1;\n                    iVar7 = *ppiVar13;\n                    *ppiVar13 = *ppiVar13 + -1;\n                    ppiVar10 = arg2;\n                    if (iVar7 + -1 < 1) {\n                        pcVar6 = *(**ppiVar16 + 8);\n                        *(&stack0xfffffffffffffff8 + iVar8) = 0x407f5f;\n                        (*pcVar6)();\n                        ppiVar10 = ppiVar16;\n                    }\n                    *0x446b88 = ppiVar12 + 3;\n                }\n            }\n            *(&stack0xfffffffffffffff8 + iVar8) = 0x407f86;\n            *0x446b90 = fcn.00402660(&stack0x00000040 + iVar8, ppiVar10, ppiVar11, ppiVar18);\n            *(&stack0xfffffffffffffff8 + iVar8) = 0x407f96;\n            *0x446b94 = fcn.00402740(&stack0x00000040 + iVar8);\n            ppiVar18 = *0x446b98;\n            if (*(&stack0x00000050 + iVar8) < 4) {\n                *(&stack0xfffffffffffffff8 + iVar8) = 0x4083f5;\n                fcn.004129d8();\n                pcVar6 = swi(3);\n                (*pcVar6)();\n                return;\n            }\n            iVar14 = *(*(&stack0x00000048 + iVar8) + 0x18);\n            ppiVar13 = iVar14 + -0x18;\n            ppiVar12 = *0x446b98 + -3;\n            if (ppiVar13 != ppiVar12) {\n                if ((*(*0x446b98 + -1) < 0) || (*ppiVar13 != *ppiVar12)) {\n                    uVar3 = *(iVar14 + -0x10);\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x408070;\n                    fcn.00402d50(0x446b98, iVar14, uVar3);\n                }\n                else {\n                    pcVar6 = *(**ppiVar13 + 0x20);\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x407fe5;\n                    piVar9 = (*pcVar6)();\n                    if ((*(iVar14 + -8) < 0) || (piVar9 != *ppiVar13)) {\n                        uVar2 = *(iVar14 + -0x10);\n                        pcVar6 = **piVar9;\n                        *(&stack0xfffffffffffffff8 + iVar8) = 0x40800b;\n                        ppiVar13 = (*pcVar6)(piVar9, uVar2, 1);\n                        if (ppiVar13 == NULL) {\n                            *(&stack0xfffffffffffffff8 + iVar8) = 0x4083bc;\n                            fcn.00401e80();\n                            pcVar6 = swi(3);\n                            (*pcVar6)();\n                            return;\n                        }\n                        *(ppiVar13 + 1) = *(iVar14 + -0x10);\n                        iVar17 = *(iVar14 + -0x10) + 1;\n                        *(&stack0xfffffffffffffff8 + iVar8) = 0x408036;\n                        fcn.004194d0(ppiVar13 + 3, iVar17, iVar14, iVar17);\n                    }\n                    else {\n                        LOCK();\n                        *(iVar14 + -8) = *(iVar14 + -8) + 1;\n                    }\n                    LOCK();\n                    ppiVar18 = ppiVar18 + -1;\n                    iVar7 = *ppiVar18;\n                    *ppiVar18 = *ppiVar18 + -1;\n                    if (iVar7 + -1 < 1) {\n                        piVar9 = *ppiVar12;\n                        pcVar6 = *(*piVar9 + 8);\n                        *(&stack0xfffffffffffffff8 + iVar8) = 0x408053;\n                        (*pcVar6)(piVar9, ppiVar12);\n                    }\n                    *0x446b98 = ppiVar13 + 3;\n                }\n            }\n            ppiVar18 = *0x446ba0;\n            if (*(&stack0x00000050 + iVar8) < 5) {\n                *(&stack0xfffffffffffffff8 + iVar8) = 0x4083ef;\n                fcn.004129d8();\n                pcVar6 = swi(3);\n                (*pcVar6)();\n                return;\n            }\n            iVar14 = *(*(&stack0x00000048 + iVar8) + 0x20);\n            ppiVar13 = iVar14 + -0x18;\n            ppiVar12 = *0x446ba0 + -3;\n            if (ppiVar13 != ppiVar12) {\n                if ((*(*0x446ba0 + -1) < 0) || (*ppiVar13 != *ppiVar12)) {\n                    uVar3 = *(iVar14 + -0x10);\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x408144;\n                    fcn.00402d50(0x446ba0, iVar14, uVar3);\n                }\n                else {\n                    pcVar6 = *(**ppiVar13 + 0x20);\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x4080b9;\n                    piVar9 = (*pcVar6)();\n                    if ((*(iVar14 + -8) < 0) || (piVar9 != *ppiVar13)) {\n                        uVar2 = *(iVar14 + -0x10);\n                        pcVar6 = **piVar9;\n                        *(&stack0xfffffffffffffff8 + iVar8) = 0x4080df;\n                        ppiVar13 = (*pcVar6)(piVar9, uVar2, 1);\n                        if (ppiVar13 == NULL) {\n                            *(&stack0xfffffffffffffff8 + iVar8) = 0x4083c2;\n                            fcn.00401e80();\n                            goto code_r0x004083c3;\n                        }\n                        *(ppiVar13 + 1) = *(iVar14 + -0x10);\n                        iVar17 = *(iVar14 + -0x10) + 1;\n                        *(&stack0xfffffffffffffff8 + iVar8) = 0x40810a;\n                        fcn.004194d0(ppiVar13 + 3, iVar17, iVar14, iVar17);\n                    }\n                    else {\n                        LOCK();\n                        *(iVar14 + -8) = *(iVar14 + -8) + 1;\n                    }\n                    LOCK();\n                    ppiVar18 = ppiVar18 + -1;\n                    iVar7 = *ppiVar18;\n                    *ppiVar18 = *ppiVar18 + -1;\n                    if (iVar7 + -1 < 1) {\n                        piVar9 = *ppiVar12;\n                        pcVar6 = *(*piVar9 + 8);\n                        *(&stack0xfffffffffffffff8 + iVar8) = 0x408127;\n                        (*pcVar6)(piVar9, ppiVar12);\n                    }\n                    *0x446ba0 = ppiVar13 + 3;\n                }\n            }\n            *(&stack0xfffffffffffffff8 + iVar8) = 0x408149;\n            piVar9 = fcn.00413fd4();\n            if (piVar9 == NULL) goto code_r0x004083df;\n            pcVar6 = *(*piVar9 + 0x18);\n            *(&stack0xfffffffffffffff8 + iVar8) = 0x408163;\n            ppiVar13 = (*pcVar6)(piVar9);\n            ppiVar18 = ppiVar13 + 3;\n            *(&stack0x00000038 + iVar8) = ppiVar18;\n            if (arg3 == NULL) {\ncode_r0x0040823d:\n                piVar9 = *ppiVar13;\n                if (*(ppiVar13 + 1) == 0) goto code_r0x0040828f;\n                if (-1 < *(ppiVar13 + 2)) {\n                    LOCK();\n                    ppiVar18 = ppiVar13 + 2;\n                    iVar7 = *ppiVar18;\n                    *ppiVar18 = *ppiVar18 + -1;\n                    if (iVar7 + -1 < 1) {\n                        pcVar6 = *(**ppiVar13 + 8);\n                        *(&stack0xfffffffffffffff8 + iVar8) = 0x40827d;\n                        (*pcVar6)();\n                    }\n                    pcVar6 = *(*piVar9 + 0x18);\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x408286;\n                    iVar14 = (*pcVar6)(piVar9);\n                    ppiVar18 = iVar14 + 0x18;\n                    *(&stack0x00000038 + iVar8) = ppiVar18;\n                    goto code_r0x0040828f;\n                }\n                if (-1 < *(ppiVar13 + 0xc)) {\n                    *(ppiVar13 + 1) = 0;\n                    *ppiVar18 = 0;\n                    goto code_r0x0040828f;\n                }\n                *(&stack0xfffffffffffffff8 + iVar8) = 0x4083d8;\n                fcn.00401040(0x80070057);\ncode_r0x004083d9:\n                *(&stack0xfffffffffffffff8 + iVar8) = 0x4083de;\n                fcn.00401e80();\ncode_r0x004083df:\n                *(&stack0xfffffffffffffff8 + iVar8) = 0x4083e9;\n                fcn.00401040(0x80004005);\n                pcVar6 = swi(3);\n                (*pcVar6)();\n                return;\n            }\n            if ((arg3 & 0xffffffffffff0000) == 0) {\n                *(&stack0xfffffffffffffff8 + iVar8) = 0x408189;\n                iVar14 = fcn.00413fc0(arg3 & 0xffff);\n                if (iVar14 != 0) {\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x4081a2;\n                    fcn.00402bb0(&stack0x00000038 + iVar8, iVar14, arg3 & 0xffff);\n                    ppiVar18 = *(&stack0x00000038 + iVar8);\n                }\n            }\n            else {\n                uVar15 = 0xffffffffffffffff;\n                pcVar20 = arg3;\n                do {\n                    if (uVar15 == 0) break;\n                    uVar15 = uVar15 - 1;\n                    cVar1 = *pcVar20;\n                    pcVar20 = pcVar20 + 1;\n                } while (cVar1 != '\\0');\n                iVar7 = ~uVar15 - 1;\n                if (iVar7 == 0) goto code_r0x0040823d;\n                uVar3 = *(ppiVar13 + 1);\n                uVar19 = arg3 - ppiVar18;\n                if ((*(ppiVar13 + 0xc) - iVar7 | 1U - *(ppiVar13 + 2)) < 0) {\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x4081ee;\n                    fcn.00402a90(&stack0x00000038 + iVar8, ~uVar15 - 1 & 0xffffffff);\n                    ppiVar18 = *(&stack0x00000038 + iVar8);\n                }\n                if (uVar3 < uVar19) {\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x408223;\n                    fcn.004194d0(ppiVar18, iVar7, arg3, iVar7);\n                }\n                else {\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x40820d;\n                    fcn.00418760(ppiVar18, iVar7, ppiVar18 + uVar19, iVar7);\n                }\n                if ((iVar7 < 0) || (*(ppiVar18 + -0xc) < iVar7)) {\ncode_r0x004083c3:\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x4083cd;\n                    fcn.00401040(0x80070057);\n                    pcVar6 = swi(3);\n                    (*pcVar6)();\n                    return;\n                }\n                *(ppiVar18 + -2) = iVar7;\n                *(iVar7 + ppiVar18) = 0;\n            }\ncode_r0x0040828f:\n            ppiVar12 = *0x446b80;\n            ppiVar13 = ppiVar18 + -3;\n            ppiVar10 = *0x446b80 + -3;\n            if (ppiVar13 != ppiVar10) {\n                if ((*(*0x446b80 + -1) < 0) || (*ppiVar13 != *ppiVar10)) {\n                    uVar3 = *(ppiVar18 + -2);\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x408351;\n                    fcn.00402d50(0x446b80, ppiVar18, uVar3);\n                }\n                else {\n                    pcVar6 = *(**ppiVar13 + 0x20);\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x4082c3;\n                    piVar9 = (*pcVar6)();\n                    if ((*(ppiVar18 + -1) < 0) || (piVar9 != *ppiVar13)) {\n                        uVar2 = *(ppiVar18 + -2);\n                        pcVar6 = **piVar9;\n                        *(&stack0xfffffffffffffff8 + iVar8) = 0x4082e9;\n                        ppiVar11 = (*pcVar6)(piVar9, uVar2, 1);\n                        if (ppiVar11 == NULL) goto code_r0x004083d9;\n                        *(ppiVar11 + 1) = *(ppiVar18 + -2);\n                        iVar7 = *(ppiVar18 + -2);\n                        *(&stack0xfffffffffffffff8 + iVar8) = 0x408314;\n                        fcn.004194d0(ppiVar11 + 3, iVar7 + 1, ppiVar18, iVar7 + 1);\n                    }\n                    else {\n                        LOCK();\n                        *(ppiVar18 + -1) = *(ppiVar18 + -1) + 1;\n                        ppiVar11 = ppiVar13;\n                    }\n                    LOCK();\n                    ppiVar12 = ppiVar12 + -1;\n                    iVar7 = *ppiVar12;\n                    *ppiVar12 = *ppiVar12 + -1;\n                    if (iVar7 + -1 < 1) {\n                        pcVar6 = *(**ppiVar10 + 8);\n                        *(&stack0xfffffffffffffff8 + iVar8) = 0x408331;\n                        (*pcVar6)();\n                    }\n                    *0x446b80 = ppiVar11 + 3;\n                }\n            }\n            LOCK();\n            ppiVar18 = ppiVar18 + -1;\n            iVar7 = *ppiVar18;\n            *ppiVar18 = *ppiVar18 + -1;\n            if (iVar7 + -1 < 1) {\n                pcVar6 = *(**ppiVar13 + 8);\n                *(&stack0xfffffffffffffff8 + iVar8) = 0x40836f;\n                (*pcVar6)();\n            }\n            *(&stack0xfffffffffffffff8 + iVar8) = 0x408374;\n            fcn.00406c10();\n            uVar15 = 0xffffffffffffffff;\n            pcVar20 = arg3;\n            do {\n                if (uVar15 == 0) break;\n                uVar15 = uVar15 - 1;\n                cVar1 = *pcVar20;\n                pcVar20 = pcVar20 + 1;\n            } while (cVar1 != '\\0');\n            arg3 = arg3 + ~uVar15;\n            *(&stack0xfffffffffffffff8 + iVar8) = 0x40839a;\n            fcn.00412e2c(&stack0x00000040 + iVar8, 0, 0xffffffffffffffff);\n        } while (*arg3 != '\\0');\n    }\n    *(&stack0xfffffffffffffff8 + iVar8) = 0x40841c;\n    fcn.00412dfc(&stack0x00000040 + iVar8);\n    *(&stack0xfffffffffffffff8 + iVar8) = 0x40842e;\n    fcn.00418d10(*(&stack0x00001070 + iVar8) ^ &stack0x00000000 + iVar8);\n    return;\n}\n",
        "token_count": 6449
    },
    "00408520": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040859f)\n// WARNING: Removing unreachable block (ram,0x004085ae)\n\nuint64_t fcn.00408520(ulong arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    int64_t *piVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    char *pcVar9;\n    int64_t iStack24;\n    ulong uStack16;\n    \n    uStack16 = 0xfffffffffffffffe;\n    fcn.00406ae0(0x4468c0, \"\\n<<PREINSTALL section Process Start:\");\n    piVar6 = fcn.00413fd4();\n    if (piVar6 == NULL) {\n        fcn.00401040(0x80004005);\n        pcVar4 = swi(3);\n        uVar7 = (*pcVar4)();\n        return uVar7;\n    }\n    iStack24 = (**(*piVar6 + 0x18))();\n    iStack24 = iStack24 + 0x18;\n    iVar8 = -1;\n    pcVar9 = \"PREINSTALL\";\n    do {\n        if (iVar8 == 0) break;\n        iVar8 = iVar8 + -1;\n        cVar2 = *pcVar9;\n        pcVar9 = pcVar9 + 1;\n    } while (cVar2 != '\\0');\n    fcn.00402d50(&iStack24, \"PREINSTALL\", ~iVar8 - 1);\n    uVar5 = fcn.00407c40(&iStack24, arg1, arg2);\n    LOCK();\n    piVar1 = iStack24 + -8;\n    iVar3 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar3 + -1 < 1) {\n        (**(**(iStack24 + -0x18) + 8))();\n    }\n    pcVar9 = \">>PREINSTALL section processing has failed!n\";\n    if (uVar5 == 1) {\n        pcVar9 = \">>PREINSTALL section processing has finished with success.\\n\";\n    }\n    fcn.00406ae0(0x4468c0, pcVar9);\n    return uVar5;\n}\n",
        "token_count": 531
    },
    "00408690": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040870f)\n// WARNING: Removing unreachable block (ram,0x0040871e)\n\nuint64_t fcn.00408690(ulong arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    int64_t *piVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    char *pcVar9;\n    int64_t iStack24;\n    ulong uStack16;\n    \n    uStack16 = 0xfffffffffffffffe;\n    fcn.00406ae0(0x4468c0, \"\\n<<POSTINSTALL section Process Start:\");\n    piVar6 = fcn.00413fd4();\n    if (piVar6 == NULL) {\n        fcn.00401040(0x80004005);\n        pcVar4 = swi(3);\n        uVar7 = (*pcVar4)();\n        return uVar7;\n    }\n    iStack24 = (**(*piVar6 + 0x18))();\n    iStack24 = iStack24 + 0x18;\n    iVar8 = -1;\n    pcVar9 = \"POSTINSTALL\";\n    do {\n        if (iVar8 == 0) break;\n        iVar8 = iVar8 + -1;\n        cVar2 = *pcVar9;\n        pcVar9 = pcVar9 + 1;\n    } while (cVar2 != '\\0');\n    fcn.00402d50(&iStack24, \"POSTINSTALL\", ~iVar8 - 1);\n    uVar5 = fcn.00407c40(&iStack24, arg1, arg2);\n    LOCK();\n    piVar1 = iStack24 + -8;\n    iVar3 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar3 + -1 < 1) {\n        (**(**(iStack24 + -0x18) + 8))();\n    }\n    pcVar9 = \">>POSTINSTALL section processing has failed!\\n\";\n    if (uVar5 == 1) {\n        pcVar9 = \">>POSTINSTALL section processing has finished with success.\\n\";\n    }\n    fcn.00406ae0(0x4468c0, pcVar9);\n    return uVar5;\n}\n",
        "token_count": 532
    },
    "00408800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00408800(ulong *param_1, ulong param_2, uint32_t *param_3)\n\n{\n    uint uVar1;\n    uint32_t uVar2;\n    ulong uVar3;\n    code *pcVar4;\n    int64_t *piVar5;\n    char cVar6;\n    int32_t iVar7;\n    int64_t iVar8;\n    int64_t *piVar9;\n    int64_t **ppiVar10;\n    int64_t iVar11;\n    int64_t **ppiVar12;\n    int64_t **ppiVar13;\n    int64_t **ppiVar14;\n    int64_t **ppiVar15;\n    uint64_t uVar16;\n    int64_t **ppiVar17;\n    int64_t **arg2;\n    int64_t iVar18;\n    ulong unaff_RBX;\n    ulong unaff_RBP;\n    uint64_t uVar19;\n    ulong unaff_RSI;\n    ulong unaff_RDI;\n    char *pcVar20;\n    ulong unaff_R12;\n    char *arg3;\n    ulong unaff_R13;\n    ulong unaff_R14;\n    ulong unaff_R15;\n    uint auStackX32 [2];\n    ulong uStack8;\n    \n    uStack8 = 0x40880a;\n    iVar8 = fcn.00432eb0();\n    iVar8 = -iVar8;\n    *(&stack0x00000070 + iVar8) = 0xfffffffffffffffe;\n    *(&stack0x000014f8 + iVar8) = unaff_RBX;\n    *(&stack0x000014d0 + iVar8) = unaff_RBP;\n    *(&stack0x000014c8 + iVar8) = unaff_RSI;\n    *(&stack0x000014c0 + iVar8) = unaff_RDI;\n    *(&stack0x000014b8 + iVar8) = unaff_R12;\n    *(&stack0x000014b0 + iVar8) = unaff_R13;\n    *(&stack0x000014a8 + iVar8) = unaff_R14;\n    *(&stack0x000014a0 + iVar8) = unaff_R15;\n    *(&stack0x00001490 + iVar8) = *0x444d30 ^ &stack0x00000000 + iVar8;\n    *(&stack0x00000068 + iVar8) = param_2;\n    *(&stack0xfffffffffffffff8 + iVar8) = 0x408883;\n    fcn.00412ca4(&stack0x00000040 + iVar8);\n    *(&stack0x00000028 + iVar8) = 0x446a60;\n    *(&stack0x00000020 + iVar8) = 0x800;\n    uVar3 = *param_1;\n    *(&stack0xfffffffffffffff8 + iVar8) = 0x4088b2;\n    iVar7 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)(uVar3, 0, 0x434a18, &stack0x00000c90 + iVar8);\n    if (iVar7 != 0) {\n        arg3 = &stack0x00000c90 + iVar8;\n        do {\n            *(&stack0x00000028 + iVar8) = 0x446a60;\n            *(&stack0x00000020 + iVar8) = 0x7ff;\n            ppiVar17 = &stack0x00000090 + iVar8;\n            uVar3 = *param_1;\n            *(&stack0xfffffffffffffff8 + iVar8) = 0x4088ea;\n            (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)(uVar3, arg3);\n            *(&stack0xfffffffffffffff8 + iVar8) = 0x4088ef;\n            piVar9 = fcn.00413fd4();\n            if (piVar9 == NULL) {\n                *(&stack0xfffffffffffffff8 + iVar8) = 0x40914e;\n                fcn.00401040(0x80004005);\n                break;\n            }\n            pcVar4 = *(*piVar9 + 0x18);\n            *(&stack0xfffffffffffffff8 + iVar8) = 0x408908;\n            ppiVar10 = (*pcVar4)();\n            ppiVar15 = ppiVar10 + 3;\n            *(&stack0x00000038 + iVar8) = ppiVar15;\n            if (arg3 == NULL) {\ncode_r0x004089e2:\n                piVar9 = *ppiVar10;\n                if (*(ppiVar10 + 1) == 0) goto code_r0x00408a37;\n                if (-1 < *(ppiVar10 + 2)) {\n                    LOCK();\n                    ppiVar15 = ppiVar10 + 2;\n                    iVar7 = *ppiVar15;\n                    *ppiVar15 = *ppiVar15 + -1;\n                    if (iVar7 + -1 < 1) {\n                        pcVar4 = *(**ppiVar10 + 8);\n                        *(&stack0xfffffffffffffff8 + iVar8) = 0x408a25;\n                        (*pcVar4)();\n                    }\n                    pcVar4 = *(*piVar9 + 0x18);\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x408a2e;\n                    iVar11 = (*pcVar4)();\n                    ppiVar15 = iVar11 + 0x18;\n                    *(&stack0x00000038 + iVar8) = ppiVar15;\n                    goto code_r0x00408a37;\n                }\n                if (-1 < *(ppiVar10 + 0xc)) {\n                    *(ppiVar10 + 1) = 0;\n                    *ppiVar15 = 0;\n                    goto code_r0x00408a37;\n                }\n                *(&stack0xfffffffffffffff8 + iVar8) = 0x4090ed;\n                fcn.00401040(0x80070057);\ncode_r0x004090ee:\n                *(&stack0xfffffffffffffff8 + iVar8) = 0x4090f3;\n                fcn.00401e80();\ncode_r0x004090f4:\n                *(&stack0xfffffffffffffff8 + iVar8) = 0x4090fe;\n                fcn.00401040(0x80070057);\n                goto code_r0x004090ff;\n            }\n            if ((arg3 & 0xffffffffffff0000) == 0) {\n                *(&stack0xfffffffffffffff8 + iVar8) = 0x40892e;\n                iVar11 = fcn.00413fc0();\n                if (iVar11 != 0) {\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x408947;\n                    fcn.00402bb0(&stack0x00000038 + iVar8, iVar11, arg3 & 0xffff);\n                    ppiVar15 = *(&stack0x00000038 + iVar8);\n                }\n            }\n            else {\n                uVar16 = 0xffffffffffffffff;\n                pcVar20 = arg3;\n                do {\n                    if (uVar16 == 0) break;\n                    uVar16 = uVar16 - 1;\n                    cVar6 = *pcVar20;\n                    pcVar20 = pcVar20 + 1;\n                } while (cVar6 != '\\0');\n                iVar7 = ~uVar16 - 1;\n                if (iVar7 == 0) goto code_r0x004089e2;\n                uVar2 = *(ppiVar10 + 1);\n                uVar19 = arg3 - ppiVar15;\n                if ((*(ppiVar10 + 0xc) - iVar7 | 1U - *(ppiVar10 + 2)) < 0) {\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x408993;\n                    fcn.00402a90(&stack0x00000038 + iVar8, ~uVar16 - 1 & 0xffffffff);\n                    ppiVar15 = *(&stack0x00000038 + iVar8);\n                }\n                if (uVar2 < uVar19) {\n                    ppiVar17 = iVar7;\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x4089c8;\n                    fcn.004194d0(ppiVar15, ppiVar17, arg3, ppiVar17);\n                }\n                else {\n                    ppiVar17 = iVar7;\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x4089b2;\n                    fcn.00418760(ppiVar15, ppiVar17, ppiVar15 + uVar19, ppiVar17);\n                }\n                if ((iVar7 < 0) || (*(ppiVar15 + -0xc) < iVar7)) {\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x4090e2;\n                    fcn.00401040(0x80070057);\n                    pcVar4 = swi(3);\n                    (*pcVar4)();\n                    return;\n                }\n                *(ppiVar15 + -2) = iVar7;\n                *(iVar7 + ppiVar15) = 0;\n            }\ncode_r0x00408a37:\n            ppiVar13 = *0x446b80;\n            ppiVar10 = ppiVar15 + -3;\n            ppiVar14 = *0x446b80 + -3;\n            if (ppiVar10 != ppiVar14) {\n                if ((*(*0x446b80 + -1) < 0) || (*ppiVar10 != *ppiVar14)) {\n                    uVar2 = *(ppiVar15 + -2);\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x408af9;\n                    fcn.00402d50(0x446b80, ppiVar15, uVar2);\n                }\n                else {\n                    pcVar4 = *(**ppiVar10 + 0x20);\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x408a6b;\n                    piVar9 = (*pcVar4)();\n                    if ((*(ppiVar15 + -1) < 0) || (piVar9 != *ppiVar10)) {\n                        uVar1 = *(ppiVar15 + -2);\n                        pcVar4 = **piVar9;\n                        *(&stack0xfffffffffffffff8 + iVar8) = 0x408a91;\n                        ppiVar12 = (*pcVar4)(piVar9, uVar1, 1);\n                        if (ppiVar12 == NULL) goto code_r0x004090ee;\n                        *(ppiVar12 + 1) = *(ppiVar15 + -2);\n                        ppiVar17 = *(ppiVar15 + -2) + 1;\n                        *(&stack0xfffffffffffffff8 + iVar8) = 0x408abc;\n                        fcn.004194d0(ppiVar12 + 3, ppiVar17, ppiVar15, ppiVar17);\n                    }\n                    else {\n                        LOCK();\n                        *(ppiVar15 + -1) = *(ppiVar15 + -1) + 1;\n                        ppiVar12 = ppiVar10;\n                    }\n                    LOCK();\n                    ppiVar13 = ppiVar13 + -1;\n                    iVar7 = *ppiVar13;\n                    *ppiVar13 = *ppiVar13 + -1;\n                    if (iVar7 + -1 < 1) {\n                        piVar9 = *ppiVar14;\n                        pcVar4 = *(*piVar9 + 8);\n                        *(&stack0xfffffffffffffff8 + iVar8) = 0x408ad9;\n                        (*pcVar4)(piVar9, ppiVar14);\n                    }\n                    *0x446b80 = ppiVar12 + 3;\n                }\n            }\n            LOCK();\n            ppiVar15 = ppiVar15 + -1;\n            iVar7 = *ppiVar15;\n            *ppiVar15 = *ppiVar15 + -1;\n            if (iVar7 + -1 < 1) {\n                piVar9 = *ppiVar10;\n                pcVar4 = *(*piVar9 + 8);\n                *(&stack0xfffffffffffffff8 + iVar8) = 0x408b17;\n                (*pcVar4)(piVar9, ppiVar10);\n            }\n            *(&stack0xfffffffffffffff8 + iVar8) = 0x408b1c;\n            piVar9 = fcn.00413fd4();\n            if (piVar9 == NULL) goto code_r0x00409139;\n            ppiVar10 = *piVar9;\n            piVar5 = ppiVar10[3];\n            *(&stack0xfffffffffffffff8 + iVar8) = 0x408b35;\n            ppiVar13 = (*piVar5)(piVar9);\n            ppiVar15 = ppiVar13 + 3;\n            *(&stack0x00000030 + iVar8) = ppiVar15;\n            if ((&stack0x00000090 + iVar8 & 0xffffffffffff0000) != 0) {\n                uVar16 = 0xffffffffffffffff;\n                pcVar20 = &stack0x00000090 + iVar8;\n                do {\n                    if (uVar16 == 0) break;\n                    uVar16 = uVar16 - 1;\n                    cVar6 = *pcVar20;\n                    pcVar20 = pcVar20 + 1;\n                } while (cVar6 != '\\0');\n                iVar7 = ~uVar16 - 1;\n                if (iVar7 == 0) {\n                    piVar9 = *ppiVar13;\n                    if (*(ppiVar13 + 1) != 0) {\n                        if (*(ppiVar13 + 2) < 0) {\n                            if (*(ppiVar13 + 0xc) < 0) goto code_r0x004090f4;\n                            *(ppiVar13 + 1) = 0;\n                            *ppiVar15 = 0;\n                        }\n                        else {\n                            LOCK();\n                            ppiVar15 = ppiVar13 + 2;\n                            iVar7 = *ppiVar15;\n                            *ppiVar15 = *ppiVar15 + -1;\n                            if (iVar7 + -1 < 1) {\n                                pcVar4 = *(**ppiVar13 + 8);\n                                *(&stack0xfffffffffffffff8 + iVar8) = 0x408be6;\n                                (*pcVar4)();\n                            }\n                            pcVar4 = *(*piVar9 + 0x18);\n                            *(&stack0xfffffffffffffff8 + iVar8) = 0x408bef;\n                            iVar11 = (*pcVar4)(piVar9);\n                            ppiVar15 = iVar11 + 0x18;\n                            *(&stack0x00000030 + iVar8) = ppiVar15;\n                        }\n                    }\n                    goto code_r0x00408c77;\n                }\n                uVar2 = *(ppiVar13 + 1);\n                iVar11 = iVar8 - ppiVar15;\n                if ((*(ppiVar13 + 0xc) - iVar7 | 1U - *(ppiVar13 + 2)) < 0) {\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x408c25;\n                    fcn.00402a90(&stack0x00000030 + iVar8, ~uVar16 - 1 & 0xffffffff);\n                    ppiVar15 = *(&stack0x00000030 + iVar8);\n                }\n                if (uVar2 < &stack0x00000090 + iVar11) {\n                    ppiVar13 = iVar7;\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x408c5f;\n                    ppiVar17 = ppiVar13;\n                    fcn.004194d0(ppiVar15, ppiVar13, &stack0x00000090 + iVar8, ppiVar13);\n                }\n                else {\n                    ppiVar13 = iVar7;\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x408c44;\n                    ppiVar17 = ppiVar13;\n                    fcn.00418760(ppiVar15, ppiVar13, ppiVar15 + &stack0x00000090 + iVar11, ppiVar13);\n                }\n                if ((-1 < iVar7) && (iVar7 <= *(ppiVar15 + -0xc))) {\n                    *(ppiVar15 + -2) = iVar7;\n                    *(iVar7 + ppiVar15) = 0;\n                    goto code_r0x00408c77;\n                }\ncode_r0x0040912e:\n                *(&stack0xfffffffffffffff8 + iVar8) = 0x409138;\n                fcn.00401040(0x80070057);\ncode_r0x00409139:\n                *(&stack0xfffffffffffffff8 + iVar8) = 0x409143;\n                fcn.00401040(0x80004005);\n                pcVar4 = swi(3);\n                (*pcVar4)();\n                return;\n            }\n            *(&stack0xfffffffffffffff8 + iVar8) = 0x408b60;\n            ppiVar14 = fcn.00413fc0(&stack0x00000090 + iVar8 & 0xffff);\n            ppiVar13 = ppiVar10;\n            if (ppiVar14 != NULL) {\n                *(&stack0xfffffffffffffff8 + iVar8) = 0x408b79;\n                fcn.00402bb0(&stack0x00000030 + iVar8, ppiVar14, &stack0x00000090 + iVar8 & 0xffff);\n                ppiVar15 = *(&stack0x00000030 + iVar8);\n                ppiVar13 = ppiVar14;\n            }\ncode_r0x00408c77:\n            ppiVar14 = &stack0x00000040 + iVar8;\n            *(&stack0xfffffffffffffff8 + iVar8) = 0x408c88;\n            fcn.00404920(&stack0x00000030 + iVar8, CONCAT71(ppiVar13 >> 8, 0x2c), ppiVar14);\n            LOCK();\n            ppiVar10 = ppiVar15 + -1;\n            iVar7 = *ppiVar10;\n            *ppiVar10 = *ppiVar10 + -1;\n            if (iVar7 + -1 < 1) {\n                pcVar4 = *(*ppiVar15[-3] + 8);\n                *(&stack0xfffffffffffffff8 + iVar8) = 0x408ca7;\n                (*pcVar4)();\n            }\n            ppiVar15 = *0x446b88;\n            if (*(&stack0x00000050 + iVar8) < 1) {\n                *(&stack0xfffffffffffffff8 + iVar8) = 0x40912d;\n                fcn.004129d8();\n                goto code_r0x0040912e;\n            }\n            ppiVar13 = **(&stack0x00000048 + iVar8);\n            ppiVar10 = ppiVar13 + -3;\n            ppiVar12 = *0x446b88 + -3;\n            if (ppiVar10 != ppiVar12) {\n                if ((*(*0x446b88 + -1) < 0) || (*ppiVar10 != *ppiVar12)) {\n                    ppiVar14 = *(ppiVar13 + -2);\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x408d7a;\n                    fcn.00402d50(0x446b88, ppiVar13, ppiVar14);\n                }\n                else {\n                    pcVar4 = *(**ppiVar10 + 0x20);\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x408cef;\n                    arg2 = ppiVar13;\n                    piVar9 = (*pcVar4)();\n                    if ((*(ppiVar13 + -1) < 0) || (piVar9 != *ppiVar10)) {\n                        uVar1 = *(ppiVar13 + -2);\n                        pcVar4 = **piVar9;\n                        *(&stack0xfffffffffffffff8 + iVar8) = 0x408d15;\n                        ppiVar10 = (*pcVar4)(piVar9, uVar1, 1);\n                        if (ppiVar10 == NULL) {\ncode_r0x004090ff:\n                            *(&stack0xfffffffffffffff8 + iVar8) = 0x409104;\n                            fcn.00401e80();\n                            pcVar4 = swi(3);\n                            (*pcVar4)();\n                            return;\n                        }\n                        *(ppiVar10 + 1) = *(ppiVar13 + -2);\n                        arg2 = *(ppiVar13 + -2) + 1;\n                        *(&stack0xfffffffffffffff8 + iVar8) = 0x408d40;\n                        ppiVar17 = arg2;\n                        fcn.004194d0(ppiVar10 + 3, arg2, ppiVar13, arg2);\n                        ppiVar14 = ppiVar13;\n                    }\n                    else {\n                        LOCK();\n                        *(ppiVar13 + -1) = *(ppiVar13 + -1) + 1;\n                    }\n                    LOCK();\n                    ppiVar15 = ppiVar15 + -1;\n                    iVar7 = *ppiVar15;\n                    *ppiVar15 = *ppiVar15 + -1;\n                    ppiVar13 = arg2;\n                    if (iVar7 + -1 < 1) {\n                        pcVar4 = *(**ppiVar12 + 8);\n                        *(&stack0xfffffffffffffff8 + iVar8) = 0x408d5d;\n                        (*pcVar4)();\n                        ppiVar13 = ppiVar12;\n                    }\n                    *0x446b88 = ppiVar10 + 3;\n                }\n            }\n            *(&stack0xfffffffffffffff8 + iVar8) = 0x408d84;\n            *0x446b90 = fcn.00402660(&stack0x00000040 + iVar8, ppiVar13, ppiVar14, ppiVar17);\n            *(&stack0xfffffffffffffff8 + iVar8) = 0x408d94;\n            *0x446b94 = fcn.00402740(&stack0x00000040 + iVar8);\n            ppiVar17 = *0x446b98;\n            if (*(&stack0x00000050 + iVar8) < 4) {\n                *(&stack0xfffffffffffffff8 + iVar8) = 0x409127;\n                fcn.004129d8();\n                pcVar4 = swi(3);\n                (*pcVar4)();\n                return;\n            }\n            iVar11 = *(*(&stack0x00000048 + iVar8) + 0x18);\n            ppiVar15 = iVar11 + -0x18;\n            ppiVar10 = *0x446b98 + -3;\n            if (ppiVar15 != ppiVar10) {\n                if ((*(*0x446b98 + -1) < 0) || (*ppiVar15 != *ppiVar10)) {\n                    uVar2 = *(iVar11 + -0x10);\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x408e6e;\n                    fcn.00402d50(0x446b98, iVar11, uVar2);\n                }\n                else {\n                    pcVar4 = *(**ppiVar15 + 0x20);\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x408de3;\n                    piVar9 = (*pcVar4)();\n                    if ((*(iVar11 + -8) < 0) || (piVar9 != *ppiVar15)) {\n                        uVar1 = *(iVar11 + -0x10);\n                        pcVar4 = **piVar9;\n                        *(&stack0xfffffffffffffff8 + iVar8) = 0x408e09;\n                        ppiVar15 = (*pcVar4)(piVar9, uVar1, 1);\n                        if (ppiVar15 == NULL) {\n                            *(&stack0xfffffffffffffff8 + iVar8) = 0x40910a;\n                            fcn.00401e80();\n                            pcVar4 = swi(3);\n                            (*pcVar4)();\n                            return;\n                        }\n                        *(ppiVar15 + 1) = *(iVar11 + -0x10);\n                        iVar18 = *(iVar11 + -0x10) + 1;\n                        *(&stack0xfffffffffffffff8 + iVar8) = 0x408e34;\n                        fcn.004194d0(ppiVar15 + 3, iVar18, iVar11, iVar18);\n                    }\n                    else {\n                        LOCK();\n                        *(iVar11 + -8) = *(iVar11 + -8) + 1;\n                    }\n                    LOCK();\n                    ppiVar17 = ppiVar17 + -1;\n                    iVar7 = *ppiVar17;\n                    *ppiVar17 = *ppiVar17 + -1;\n                    if (iVar7 + -1 < 1) {\n                        piVar9 = *ppiVar10;\n                        pcVar4 = *(*piVar9 + 8);\n                        *(&stack0xfffffffffffffff8 + iVar8) = 0x408e51;\n                        (*pcVar4)(piVar9, ppiVar10);\n                    }\n                    *0x446b98 = ppiVar15 + 3;\n                }\n            }\n            ppiVar17 = *0x446ba0;\n            if (*(&stack0x00000050 + iVar8) < 5) {\n                *(&stack0xfffffffffffffff8 + iVar8) = 0x409121;\n                fcn.004129d8();\n                pcVar4 = swi(3);\n                (*pcVar4)();\n                return;\n            }\n            iVar11 = *(*(&stack0x00000048 + iVar8) + 0x20);\n            ppiVar15 = iVar11 + -0x18;\n            ppiVar10 = *0x446ba0 + -3;\n            if (ppiVar15 != ppiVar10) {\n                if ((*(*0x446ba0 + -1) < 0) || (*ppiVar15 != *ppiVar10)) {\n                    uVar2 = *(iVar11 + -0x10);\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x408f42;\n                    fcn.00402d50(0x446ba0, iVar11, uVar2);\n                }\n                else {\n                    pcVar4 = *(**ppiVar15 + 0x20);\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x408eb7;\n                    piVar9 = (*pcVar4)();\n                    if ((*(iVar11 + -8) < 0) || (piVar9 != *ppiVar15)) {\n                        uVar1 = *(iVar11 + -0x10);\n                        pcVar4 = **piVar9;\n                        *(&stack0xfffffffffffffff8 + iVar8) = 0x408edd;\n                        ppiVar15 = (*pcVar4)(piVar9, uVar1, 1);\n                        if (ppiVar15 == NULL) {\n                            *(&stack0xfffffffffffffff8 + iVar8) = 0x409110;\n                            fcn.00401e80();\n                            pcVar4 = swi(3);\n                            (*pcVar4)();\n                            return;\n                        }\n                        *(ppiVar15 + 1) = *(iVar11 + -0x10);\n                        iVar18 = *(iVar11 + -0x10) + 1;\n                        *(&stack0xfffffffffffffff8 + iVar8) = 0x408f08;\n                        fcn.004194d0(ppiVar15 + 3, iVar18, iVar11, iVar18);\n                    }\n                    else {\n                        LOCK();\n                        *(iVar11 + -8) = *(iVar11 + -8) + 1;\n                    }\n                    LOCK();\n                    ppiVar17 = ppiVar17 + -1;\n                    iVar7 = *ppiVar17;\n                    *ppiVar17 = *ppiVar17 + -1;\n                    if (iVar7 + -1 < 1) {\n                        pcVar4 = *(**ppiVar10 + 8);\n                        *(&stack0xfffffffffffffff8 + iVar8) = 0x408f25;\n                        (*pcVar4)();\n                    }\n                    *0x446ba0 = ppiVar15 + 3;\n                }\n            }\n            if (*0x446b94 == 0) {\n                *(&stack0xfffffffffffffff8 + iVar8) = 0x408f57;\n                cVar6 = fcn.00402130(0x446b98);\n                if (cVar6 != '\\x01') goto code_r0x00408f5b;\ncode_r0x00408f81:\n                *(&stack0xfffffffffffffff8 + iVar8) = 0x408f92;\n                fcn.00402650(*(&stack0x00000068 + iVar8), 0x446ba0);\n                *(&stack0xfffffffffffffff8 + iVar8) = 0x408f9a;\n                iVar7 = fcn.00404050(param_3);\n                uVar2 = *param_3;\n                *(&stack0xfffffffffffffff8 + iVar8) = 0x408fb0;\n                fcn.00432e20(uVar2, &stack0x00000078 + iVar8, 10);\n                if (iVar7 == 1) {\n                    if ((*(*0x446b80 + -0xc) | 1U - *(*0x446b80 + -1)) < 0) {\n                        *(&stack0xfffffffffffffff8 + iVar8) = 0x408fda;\n                        fcn.00402a90(0x446b80, 0);\n                    }\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x408ffa;\n                    fcn.00418c50(&stack0x00000890 + iVar8, \n                                 \"The line:\\\"%s\\\" has been processed with success. Returned code: %s\", *0x446b80, \n                                 &stack0x00000078 + iVar8);\n                }\n                else {\n                    if ((*(*0x446b80 + -0xc) | 1U - *(*0x446b80 + -1)) < 0) {\n                        *(&stack0xfffffffffffffff8 + iVar8) = 0x409022;\n                        fcn.00402a90(0x446b80, 0);\n                    }\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x409042;\n                    fcn.00418c50(&stack0x00000890 + iVar8, \"The line:\\\"%s\\\" process has failed!.  Returned code: %s\", \n                                 *0x446b80, &stack0x00000078 + iVar8);\n                }\n                if (*0x446b80 == NULL) {\n                    iVar7 = 0;\n                }\n                else {\n                    iVar11 = -1;\n                    ppiVar17 = *0x446b80;\n                    do {\n                        if (iVar11 == 0) break;\n                        iVar11 = iVar11 + -1;\n                        cVar6 = *ppiVar17;\n                        ppiVar17 = ppiVar17 + 1;\n                    } while (cVar6 != '\\0');\n                    iVar7 = ~iVar11 - 1;\n                    if (iVar7 < 0) goto code_r0x00409111;\n                }\n                if (*(*0x446b80 + -0xc) < iVar7) {\ncode_r0x00409111:\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x40911b;\n                    fcn.00401040(0x80070057);\n                    pcVar4 = swi(3);\n                    (*pcVar4)();\n                    return;\n                }\n                *(*0x446b80 + -2) = iVar7;\n                *(iVar7 + *0x446b80) = '\\0';\n                *(&stack0xfffffffffffffff8 + iVar8) = 0x40909d;\n                fcn.00406ae0(0x4468c0, &stack0x00000890 + iVar8);\n            }\n            else {\ncode_r0x00408f5b:\n                if (*0x446b94 == 1) {\n                    *(&stack0xfffffffffffffff8 + iVar8) = 0x408f70;\n                    cVar6 = fcn.00402130(0x446b98);\n                    if (cVar6 == '\\0') goto code_r0x00408f81;\n                }\n                if (*0x446b94 < 0) goto code_r0x00408f81;\n            }\n            uVar16 = 0xffffffffffffffff;\n            pcVar20 = arg3;\n            do {\n                if (uVar16 == 0) break;\n                uVar16 = uVar16 - 1;\n                cVar6 = *pcVar20;\n                pcVar20 = pcVar20 + 1;\n            } while (cVar6 != '\\0');\n            arg3 = arg3 + ~uVar16;\n            *(&stack0xfffffffffffffff8 + iVar8) = 0x4090c1;\n            fcn.00412e2c(&stack0x00000040 + iVar8, 0, 0xffffffffffffffff);\n        } while (*arg3 != '\\0');\n    }\n    *(&stack0xfffffffffffffff8 + iVar8) = 0x409159;\n    fcn.00412dfc(&stack0x00000040 + iVar8);\n    *(&stack0xfffffffffffffff8 + iVar8) = 0x40916c;\n    fcn.00418d10(*(&stack0x00001490 + iVar8) ^ &stack0x00000000 + iVar8);\n    return;\n}\n",
        "token_count": 7429
    },
    "00409260": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004092df)\n// WARNING: Removing unreachable block (ram,0x004092ee)\n\nuint64_t fcn.00409260(ulong arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    int64_t *piVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    char *pcVar9;\n    int64_t iStack24;\n    ulong uStack16;\n    \n    uStack16 = 0xfffffffffffffffe;\n    fcn.00406ae0(0x4468c0, \"\\n<<INSTALL section Process Start:\");\n    piVar6 = fcn.00413fd4();\n    if (piVar6 == NULL) {\n        fcn.00401040(0x80004005);\n        pcVar4 = swi(3);\n        uVar7 = (*pcVar4)();\n        return uVar7;\n    }\n    iStack24 = (**(*piVar6 + 0x18))();\n    iStack24 = iStack24 + 0x18;\n    iVar8 = -1;\n    pcVar9 = \"INSTALL\";\n    do {\n        if (iVar8 == 0) break;\n        iVar8 = iVar8 + -1;\n        cVar2 = *pcVar9;\n        pcVar9 = pcVar9 + 1;\n    } while (cVar2 != '\\0');\n    fcn.00402d50(&iStack24, \"INSTALL\", ~iVar8 - 1);\n    uVar5 = fcn.00408800(&iStack24, arg1, arg2);\n    LOCK();\n    piVar1 = iStack24 + -8;\n    iVar3 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar3 + -1 < 1) {\n        (**(**(iStack24 + -0x18) + 8))();\n    }\n    pcVar9 = \">>INSTALL section processing has failed!\\n\";\n    if (uVar5 == 1) {\n        pcVar9 = \">>INSTALL section processing has finished with success.\\n\";\n    }\n    fcn.00406ae0(0x4468c0, pcVar9);\n    return uVar5;\n}\n",
        "token_count": 524
    },
    "004093d0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040944f)\n// WARNING: Removing unreachable block (ram,0x0040945e)\n\nuint64_t fcn.004093d0(ulong arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    int32_t iVar3;\n    code *pcVar4;\n    uint32_t uVar5;\n    int64_t *piVar6;\n    uint64_t uVar7;\n    int64_t iVar8;\n    char *pcVar9;\n    int64_t iStack24;\n    ulong uStack16;\n    \n    uStack16 = 0xfffffffffffffffe;\n    fcn.00406ae0(0x4468c0, \"\\n<<UNINSTALL section Process Start:\");\n    piVar6 = fcn.00413fd4();\n    if (piVar6 == NULL) {\n        fcn.00401040(0x80004005);\n        pcVar4 = swi(3);\n        uVar7 = (*pcVar4)();\n        return uVar7;\n    }\n    iStack24 = (**(*piVar6 + 0x18))();\n    iStack24 = iStack24 + 0x18;\n    iVar8 = -1;\n    pcVar9 = \"UNINSTALL\";\n    do {\n        if (iVar8 == 0) break;\n        iVar8 = iVar8 + -1;\n        cVar2 = *pcVar9;\n        pcVar9 = pcVar9 + 1;\n    } while (cVar2 != '\\0');\n    fcn.00402d50(&iStack24, \"UNINSTALL\", ~iVar8 - 1);\n    uVar5 = fcn.00408800(&iStack24, arg1, arg2);\n    LOCK();\n    piVar1 = iStack24 + -8;\n    iVar3 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar3 + -1 < 1) {\n        (**(**(iStack24 + -0x18) + 8))();\n    }\n    pcVar9 = \">>UNINSTALL section processing has failed!\\n\";\n    if (uVar5 == 1) {\n        pcVar9 = \">>UNINSTALL section processing has finished with success.\\n\";\n    }\n    fcn.00406ae0(0x4468c0, pcVar9);\n    return uVar5;\n}\n",
        "token_count": 532
    },
    "0040ac3c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040ac3c(void)\n\n{\n    uchar auStack216 [32];\n    uint uStack184;\n    uchar auStack180 [156];\n    uint64_t uStack24;\n    \n    uStack24 = *0x444d30 ^ auStack216;\n    fcn.00418a70(auStack180, 0, 0x90);\n    uStack184 = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&uStack184);\n    fcn.00418d10(uStack24 ^ auStack216);\n    return;\n}\n",
        "token_count": 130
    },
    "0040adf8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0040adf8(int32_t *arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    \n    iVar1 = fcn.0040ac9c();\n    if (iVar1 == 0) {\n        if (((arg2 & 3) == 0) &&\n           ((((arg1[2] < 1 || (arg1[3] < 1)) || (iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0),  iVar1 <= *arg1))\n            || (iVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(1),  iVar1 <= arg1[1])))) {\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = 0x12340042;\n        }\n        return uVar2;\n    }\n    uVar2 = (**0x449c10)(arg1, arg2);\n    return uVar2;\n}\n",
        "token_count": 209
    },
    "0040af8c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint32_t fcn.0040af8c(int64_t *arg1, ulong arg2)\n\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int32_t iVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    ushort *puVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    uint64_t uVar10;\n    uint64_t uVar11;\n    uint32_t *puVar12;\n    uint *puVar13;\n    uint auStackX8 [8];\n    uint16_t in_stack_00000028;\n    int64_t *in_stack_00000030;\n    ushort *in_stack_00000038;\n    uint *in_stack_00000048;\n    int64_t iStack216;\n    int64_t iStack208;\n    int64_t iStack200;\n    int64_t *apiStack184 [4];\n    int64_t *piStack152;\n    int64_t aiStack144 [3];\n    int64_t iStack120;\n    int64_t iStack112;\n    int64_t iStack104;\n    ulong uStack96;\n    ushort auStack88 [16];\n    \n    auStack88[0] = 0;\n    if (arg1 == NULL) {\n        return -0x7ff8ffa9;\n    }\n    if (in_stack_00000030 == NULL) {\n        return -0x7ffdfff8;\n    }\n    uVar1 = *(in_stack_00000030 + 2);\n    if (5 < uVar1) {\n        return -0x7ffdfff2;\n    }\n    uVar10 = 0;\n    if (*(in_stack_00000030 + 0x14) != 0) {\n        puVar12 = in_stack_00000030[1];\n        uVar11 = uVar10;\n        do {\n            if (uVar1 <= *puVar12) {\n                return -0x7ffdfff2;\n            }\n            uVar8 = uVar11 + 1;\n            uVar10 = uVar8;\n            uVar2 = *puVar12;\n            puVar12 = puVar12 + 1;\n            uVar9 = *(in_stack_00000030 + 0x14);\n            apiStack184[uVar2] = *in_stack_00000030 + uVar11 * 0x18;\n            uVar11 = uVar10;\n        } while (uVar8 < uVar9);\n    }\n    if (uVar10 < uVar1) {\n        piVar6 = *in_stack_00000030 + uVar10 * 0x18;\n        do {\n            iVar4 = uVar10;\n            uVar9 = iVar4 + 1;\n            uVar10 = uVar9;\n            apiStack184[(uVar1 - iVar4) - 1] = piVar6;\n            piVar6 = piVar6 + 3;\n        } while (uVar9 < uVar1);\n    }\n    iVar4 = -0x7ffdfffd;\n    puVar13 = auStackX8;\n    if (in_stack_00000048 != NULL) {\n        puVar13 = in_stack_00000048;\n    }\n    puVar7 = auStack88;\n    if (in_stack_00000038 != NULL) {\n        puVar7 = in_stack_00000038;\n    }\n    (*_sym.imp.OLEAUT32.dll_VariantClear)();\n    if (0x12 < arg2 + 0x139aU) goto code_r0x0040b7dd;\n    // switch table (19 cases) at 0x40b7fc\n    switch(*((arg2 + 0x139aU) * 4 + 0x40b7fc) + 0x400000) {\n    case 0x40b0b4:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack216 = *apiStack184[0];\n            iStack208 = apiStack184[0][1];\n            iStack200 = apiStack184[0][2];\n            iVar4 = (**(*arg1 + 200))(arg1, &iStack216);\n            goto code_r0x0040b7dd;\n        }\n        break;\n    case 0x40b0f5:\n        if (*(in_stack_00000030 + 2) == 2) {\n            if (*apiStack184[0] != 3) {\n                iVar4 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(aiStack144, apiStack184[0], 0, 3);\n                if (iVar4 < 0) goto code_r0x0040b3e4;\n                apiStack184[0] = aiStack144;\n            }\n            uVar3 = *(apiStack184[0] + 1);\n            if (*apiStack184[1] != 3) {\n                iVar4 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(aiStack144, apiStack184[1], 0, 3);\n                if (iVar4 < 0) {\ncode_r0x0040b716:\n                    *puVar13 = 1;\n                    goto code_r0x0040b7dd;\n                }\n                apiStack184[1] = aiStack144;\n            }\n            iVar4 = (**(*arg1 + 0xc0))(arg1, uVar3, *(apiStack184[1] + 1), puVar7);\n            goto code_r0x0040b7dd;\n        }\n        break;\n    case 0x40b17d:\n        if (*(in_stack_00000030 + 2) == 2) {\n            if (*apiStack184[0] != 3) {\n                iVar4 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(aiStack144, apiStack184[0], 0, 3);\n                if (iVar4 < 0) goto code_r0x0040b3e4;\n                apiStack184[0] = aiStack144;\n            }\n            iStack216 = *apiStack184[1];\n            iStack208 = apiStack184[1][1];\n            iStack200 = apiStack184[1][2];\n            iVar4 = (**(*arg1 + 0xb8))(arg1, *(apiStack184[0] + 1), &iStack216, puVar7);\n            goto code_r0x0040b7dd;\n        }\n        break;\n    case 0x40b1f1:\n        iVar5 = iStack120;\n        if (*(in_stack_00000030 + 2) == 5) {\n            while (((*apiStack184[0] >> 0xe & 1) != 0 && ((*apiStack184[0] & 0xf) != 0))) {\n                if ((*apiStack184[0] & 0xc) == 0) {\n                    iVar5 = apiStack184[0][1];\n                }\n                else {\n                    (*_sym.imp.OLEAUT32.dll_VariantCopy)(apiStack184[0][1]);\n                    *apiStack184[0][1] = 3;\n                    iVar5 = apiStack184[0][1] + 8;\n                }\n            }\n            *puVar13 = 0;\n            iStack216 = *piStack152;\n            iStack208 = piStack152[1];\n            iStack200 = piStack152[2];\n            iVar4 = (**(*arg1 + 0xb0))(arg1, iVar5, iStack112, iStack104, uStack96, &iStack216);\n            goto code_r0x0040b7dd;\n        }\n        break;\n    case 0x40b29f:\n        if (*(in_stack_00000030 + 2) == 2) {\n            if (*apiStack184[0] != 3) {\n                iVar4 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(aiStack144, apiStack184[0], 0, 3);\n                if (iVar4 < 0) goto code_r0x0040b3e4;\n                apiStack184[0] = aiStack144;\n            }\n            iStack216 = *apiStack184[1];\n            iStack208 = apiStack184[1][1];\n            iStack200 = apiStack184[1][2];\n            iVar4 = (**(*arg1 + 0xa8))(arg1, *(apiStack184[0] + 1), &iStack216);\n            goto code_r0x0040b7dd;\n        }\n        break;\n    case 0x40b310:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack216 = *apiStack184[0];\n            iStack208 = apiStack184[0][1];\n            iStack200 = apiStack184[0][2];\n            iVar4 = (**(*arg1 + 0xa0))(arg1, &iStack216, puVar7 + 4);\ncode_r0x0040b6a6:\n            if (-1 < iVar4) {\n                *puVar7 = 8;\n            }\n            goto code_r0x0040b7dd;\n        }\n        break;\n    case 0x40b355:\n        iVar4 = (**(*arg1 + 0x98))(arg1, puVar7);\n        goto code_r0x0040b7dd;\n    case 0x40b36a:\n        iVar4 = (**(*arg1 + 0x90))(arg1, puVar7);\n        goto code_r0x0040b7dd;\n    case 0x40b37f:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack216 = *apiStack184[0];\n            iStack208 = apiStack184[0][1];\n            iStack200 = apiStack184[0][2];\n            iVar4 = (**(*arg1 + 0x88))(arg1, &iStack216, puVar7 + 4);\n            goto code_r0x0040b6a6;\n        }\n        break;\n    case 0x40b3c4:\n        if (*(in_stack_00000030 + 2) == 2) {\n            if (((*apiStack184[0] >> 0xe & 1) != 0) && ((*apiStack184[0] & 0xc) == 0)) {\n                iVar4 = -0x7ffdfffb;\ncode_r0x0040b3e4:\n                *puVar13 = 0;\n                goto code_r0x0040b7dd;\n            }\n            if (*apiStack184[0] == 0x400c) {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(apiStack184[0][1]);\n                *apiStack184[0][1] = 8;\n                piVar6 = apiStack184[0][1] + 8;\n            }\n            else if (*apiStack184[0] == 0x4008) {\n                piVar6 = apiStack184[0][1];\n            }\n            else {\n                (*_sym.imp.OLEAUT32.dll_VariantCopy)(apiStack184[0]);\n                piVar6 = apiStack184[0] + 1;\n                *apiStack184[0] = 8;\n            }\n            iStack216 = *apiStack184[1];\n            iStack208 = apiStack184[1][1];\n            iStack200 = apiStack184[1][2];\n            iVar4 = (**(*arg1 + 0x80))(arg1, piVar6, &iStack216, puVar7 + 4);\n            goto code_r0x0040b7b7;\n        }\n        break;\n    case 0x40b470:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack216 = *apiStack184[0];\n            iStack208 = apiStack184[0][1];\n            iStack200 = apiStack184[0][2];\n            iVar4 = (**(*arg1 + 0x78))(arg1, &iStack216, puVar7 + 4);\n            goto code_r0x0040b6a6;\n        }\n        break;\n    case 0x40b4b2:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack216 = *apiStack184[0];\n            iStack208 = apiStack184[0][1];\n            iStack200 = apiStack184[0][2];\n            iVar4 = (**(*arg1 + 0x70))(arg1, &iStack216, puVar7);\n            goto code_r0x0040b7dd;\n        }\n        break;\n    case 0x40b4f3:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack216 = *apiStack184[0];\n            iStack208 = apiStack184[0][1];\n            iStack200 = apiStack184[0][2];\n            iVar4 = (**(*arg1 + 0x68))(arg1, &iStack216, puVar7);\n            goto code_r0x0040b7dd;\n        }\n        break;\n    case 0x40b534:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack216 = *apiStack184[0];\n            iStack208 = apiStack184[0][1];\n            iStack200 = apiStack184[0][2];\n            iVar4 = (**(*arg1 + 0x60))(arg1, &iStack216, puVar7 + 4);\n            goto code_r0x0040b6a6;\n        }\n        break;\n    case 0x40b576:\n        if ((in_stack_00000028 & 2) == 0) {\n            if ((in_stack_00000028 & 4) == 0) goto code_r0x0040b65f;\n            if (*(in_stack_00000030 + 2) == 2) {\n                iStack216 = *apiStack184[0];\n                iStack208 = apiStack184[0][1];\n                iStack200 = apiStack184[0][2];\n                if (*apiStack184[1] != 8) {\n                    iVar4 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(aiStack144, apiStack184[1], 0, 3);\n                    if (iVar4 < 0) goto code_r0x0040b716;\n                    apiStack184[1] = aiStack144;\n                }\n                iStack120 = iStack216;\n                iStack112 = iStack208;\n                iStack104 = iStack200;\n                iVar4 = (**(*arg1 + 0xd8))(arg1, &iStack120, apiStack184[1][1]);\n                goto code_r0x0040b7dd;\n            }\n        }\n        else if (*(in_stack_00000030 + 2) == 1) {\n            iStack216 = *apiStack184[0];\n            iStack208 = apiStack184[0][1];\n            iStack200 = apiStack184[0][2];\n            iVar4 = (**(*arg1 + 0x58))(arg1, &iStack216, puVar7 + 4);\n            goto code_r0x0040b6a6;\n        }\n        break;\n    case 0x40b65f:\ncode_r0x0040b65f:\n        if ((in_stack_00000028 & 2) == 0) {\n            if ((in_stack_00000028 & 4) == 0) goto code_r0x0040b761;\n            if (*(in_stack_00000030 + 2) == 2) {\n                iStack120 = *apiStack184[0];\n                iStack112 = apiStack184[0][1];\n                iStack104 = apiStack184[0][2];\n                if (*apiStack184[1] != 8) {\n                    iVar4 = (*_sym.imp.OLEAUT32.dll_VariantTimeToDosDateTime)(aiStack144, apiStack184[1], 0, 3);\n                    if (iVar4 < 0) goto code_r0x0040b716;\n                    apiStack184[1] = aiStack144;\n                }\n                iStack216 = iStack120;\n                iStack208 = iStack112;\n                iStack200 = iStack104;\n                iVar4 = (**(*arg1 + 0xd0))(arg1, &iStack216, apiStack184[1][1]);\n                goto code_r0x0040b7dd;\n            }\n        }\n        else if (*(in_stack_00000030 + 2) == 1) {\n            iStack120 = *apiStack184[0];\n            iStack112 = apiStack184[0][1];\n            iStack104 = apiStack184[0][2];\n            iVar4 = (**(*arg1 + 0x50))(arg1, &iStack120, puVar7 + 4);\n            goto code_r0x0040b6a6;\n        }\n        break;\n    case 0x40b761:\ncode_r0x0040b761:\n        if (*(in_stack_00000030 + 2) == 1) {\n            iStack120 = *apiStack184[0];\n            iStack112 = apiStack184[0][1];\n            iStack104 = apiStack184[0][2];\n            iVar4 = (**(*arg1 + 0x48))(arg1, &iStack120, puVar7 + 4);\n            goto code_r0x0040b7d2;\n        }\n        break;\n    case 0x40b7a9:\n        iVar4 = (**(*arg1 + 0x40))(arg1, puVar7 + 4);\ncode_r0x0040b7b7:\n        if (-1 < iVar4) {\n            *puVar7 = 3;\n        }\n        goto code_r0x0040b7dd;\n    case 0x40b7c4:\n        iVar4 = (**(*arg1 + 0x38))(arg1, puVar7 + 4);\ncode_r0x0040b7d2:\n        if (-1 < iVar4) {\n            *puVar7 = 9;\n        }\n        goto code_r0x0040b7dd;\n    }\n    iVar4 = -0x7ffdfff2;\ncode_r0x0040b7dd:\n    (*_sym.imp.OLEAUT32.dll_VariantCopy)(aiStack144);\n    return iVar4;\n}\n",
        "token_count": 4128
    },
    "0040baaa": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * fcn.0040baaa(int32_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    while( true ) {\n        if (*(arg1 + 4) == 0) {\n            return NULL;\n        }\n        if ((((*arg1 == arg2) && (arg1[1] == arg3)) && (arg1[2] <= arg4)) && (arg4 < arg1[3] || arg4 == arg1[3])) break;\n        arg1 = arg1 + 8;\n    }\n    return arg1;\n}\n",
        "token_count": 129
    },
    "0040c0cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint16_t fcn.0040c0cc(ulong arg1)\n\n{\n    int16_t iVar1;\n    int16_t extraout_AX;\n    int16_t extraout_AX_00;\n    uint extraout_EAX;\n    int32_t iVar2;\n    uint extraout_var;\n    uint uVar3;\n    ulong in_R8;\n    ulong in_R9;\n    bool bVar4;\n    ulong auStackX24 [2];\n    \n    auStackX24[0] = 0;\n    fcn.00414cc0();\n    iVar2 = fcn.004140cc(*(CONCAT44(extraout_var, extraout_EAX) + 0xd8), auStackX24);\n    iVar1 = iVar2;\n    if ((iVar2 != 0) && (iVar1 = (*_sym.imp.USER32.dll_RegisterClassA)(arg1),  iVar2 != 2)) {\n        bVar4 = iVar1 != 0;\n        if (bVar4) {\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        }\n        fcn.004140b0(0, auStackX24[0], in_R8, in_R9, iVar1);\n        iVar1 = extraout_AX;\n        if (!bVar4) {\n            (*_sym.imp.KERNEL32.dll_SetLastError)(uVar3);\n            iVar1 = extraout_AX_00;\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 326
    },
    "0040c1a8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint64_t fcn.0040c1a8(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    ulong in_R9;\n    ulong auStack48 [2];\n    \n    auStack48[0] = 0;\n    iVar4 = fcn.00414cc0();\n    uVar5 = fcn.004140cc(*(iVar4 + 0xd8), auStack48);\n    iVar1 = uVar5;\n    if (iVar1 != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetClassInfoA)(arg1, arg2, arg3, in_R9, 0);\n        uVar5 = uVar2;\n        if (iVar1 != 2) {\n            if (uVar2 != 0) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            fcn.004140b0(0, auStack48[0]);\n            if (uVar2 == 0) {\n                (*_sym.imp.KERNEL32.dll_SetLastError)(uVar3);\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 294
    },
    "0040c290": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint64_t fcn.0040c290(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    ulong in_R9;\n    ulong auStack48 [2];\n    \n    auStack48[0] = 0;\n    iVar4 = fcn.00414cc0();\n    uVar5 = fcn.004140cc(*(iVar4 + 0xd8), auStack48);\n    iVar1 = uVar5;\n    if (iVar1 != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_GetClassInfoExA)(arg1, arg2, arg3, in_R9, 0);\n        uVar5 = uVar2;\n        if (iVar1 != 2) {\n            if (uVar2 != 0) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            fcn.004140b0(0, auStack48[0]);\n            if (uVar2 == 0) {\n                (*_sym.imp.KERNEL32.dll_SetLastError)(uVar3);\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 293
    },
    "0040c378": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t fcn.0040c378(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int64_t iVar3;\n    uint in_stack_00000028;\n    uint in_stack_00000030;\n    uint in_stack_00000038;\n    uint in_stack_00000040;\n    ulong in_stack_00000048;\n    ulong in_stack_00000050;\n    ulong in_stack_00000058;\n    ulong in_stack_00000060;\n    ulong uStack64;\n    int64_t iStack56;\n    \n    uStack64 = 0;\n    iVar3 = fcn.00414cc0();\n    iVar1 = fcn.004140cc(*(iVar3 + 0xd8), &uStack64);\n    iStack56 = 0;\n    if (iVar1 == 0) {\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                          (arg1, arg2, arg3, arg4, in_stack_00000028, in_stack_00000030, in_stack_00000038, \n                           in_stack_00000040, in_stack_00000048, in_stack_00000050, in_stack_00000058, in_stack_00000060\n                           , iVar1);\n        if (iVar1 != 2) {\n            iStack56 = iVar3;\n            if (iVar3 != 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            fcn.004140b0(0, uStack64);\n            if (iVar3 == 0) {\n                (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 415
    },
    "0040c4e4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint64_t fcn.0040c4e4(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    ulong uStack48;\n    \n    uStack48 = 0;\n    iVar4 = fcn.00414cc0();\n    uVar5 = fcn.004140cc(*(iVar4 + 0xd8), &uStack48);\n    iVar1 = uVar5;\n    if (iVar1 != 0) {\n        uVar2 = (*_sym.imp.USER32.dll_MessageBoxA)(arg1, arg2, arg3, arg4, 0);\n        uVar5 = uVar2;\n        if (iVar1 != 2) {\n            if (uVar2 != 0) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            fcn.004140b0(0, uStack48);\n            if (uVar2 == 0) {\n                (*_sym.imp.KERNEL32.dll_SetLastError)(uVar3);\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 284
    },
    "0040c5dc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t fcn.0040c5dc(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    int64_t iVar3;\n    ulong in_R8;\n    ulong in_R9;\n    ulong auStackX24 [2];\n    int64_t iVar4;\n    \n    auStackX24[0] = 0;\n    iVar3 = fcn.00414cc0();\n    iVar1 = fcn.004140cc(*(iVar3 + 0xd8), auStackX24);\n    if (iVar1 == 0) {\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(arg1);\n        if (iVar1 != 2) {\n            iVar4 = iVar3;\n            if (iVar3 != 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            fcn.004140b0(0, auStackX24[0], in_R8, in_R9, iVar4);\n            if (iVar3 == 0) {\n                (*_sym.imp.KERNEL32.dll_SetLastError)(uVar2);\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 281
    },
    "0040c6c8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040c6c8(ulong *arg1)\n\n{\n    if (*(arg1 + 1) != 0) {\n        fcn.004140b0(0, *arg1);\n    }\n    return;\n}\n",
        "token_count": 53
    },
    "0040ddc0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0040ddc0(int64_t lpModuleName, ulong *arg2)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    if (*(lpModuleName + 0x20) == 0) {\n        if (*(lpModuleName + 8) == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(*(lpModuleName + 0x18));\n            *(lpModuleName + 8) = iVar1;\n            if (iVar1 == 0) {\n                iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(*(lpModuleName + 0x18));\n                *(lpModuleName + 8) = iVar1;\n                *(lpModuleName + 0x10) = iVar1 != 0;\n            }\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*(lpModuleName + 8), \"InitCommonControls\");\n        *(lpModuleName + 0x20) = uVar2;\n    }\n    *arg2 = *(lpModuleName + 0x20);\n    return arg2;\n}\n",
        "token_count": 238
    },
    "0040de2c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.0040de2c(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    ulong uStackX24;\n    uchar auStackX32 [8];\n    \n    uStackX24 = 0;\n    iVar1 = fcn.00414cc0();\n    iVar2 = fcn.004140cc(*(iVar1 + 0xd8), &uStackX24);\n    if (iVar2 != 0) {\n        fcn.0040ddc0(arg1, auStackX32);\n        pcVar3 = *(arg1 + 0x20);\n        if (pcVar3 == NULL) {\n            fcn.004129d8();\n        }\n        (*pcVar3)();\n        if (iVar2 != 2) {\n            fcn.004140b0(0, uStackX24);\n        }\n    }\n    return;\n}\n",
        "token_count": 203
    },
    "0040decc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong * fcn.0040decc(int64_t lpModuleName, ulong *arg2)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    \n    if (*(lpModuleName + 0x28) == 0) {\n        if (*(lpModuleName + 8) == 0) {\n            iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(*(lpModuleName + 0x18));\n            *(lpModuleName + 8) = iVar1;\n            if (iVar1 == 0) {\n                iVar1 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(*(lpModuleName + 0x18));\n                *(lpModuleName + 8) = iVar1;\n                *(lpModuleName + 0x10) = iVar1 != 0;\n            }\n        }\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(*(lpModuleName + 8), \"InitCommonControlsEx\");\n        *(lpModuleName + 0x28) = uVar2;\n    }\n    *arg2 = *(lpModuleName + 0x28);\n    return arg2;\n}\n",
        "token_count": 238
    },
    "0040df38": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nuint64_t fcn.0040df38(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    int64_t iVar4;\n    uint64_t uVar5;\n    ulong in_R8;\n    ulong in_R9;\n    code *pcVar6;\n    bool bVar7;\n    ulong uStackX32;\n    uchar auStack32 [8];\n    \n    uStackX32 = 0;\n    iVar4 = fcn.00414cc0();\n    uVar5 = fcn.004140cc(*(iVar4 + 0xd8), &uStackX32);\n    iVar1 = uVar5;\n    if (iVar1 != 0) {\n        fcn.0040decc(arg1, auStack32);\n        pcVar6 = *(arg1 + 0x28);\n        if (pcVar6 == NULL) {\n            fcn.004129d8();\n        }\n        uVar2 = (*pcVar6)(arg2);\n        uVar5 = uVar2;\n        if (iVar1 != 2) {\n            bVar7 = uVar2 != 0;\n            if (bVar7) {\n                uVar3 = 0;\n            }\n            else {\n                uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n            }\n            fcn.004140b0(0, uStackX32, in_R8, in_R9, uVar2);\n            if (!bVar7) {\n                (*_sym.imp.KERNEL32.dll_SetLastError)(uVar3);\n            }\n        }\n    }\n    return uVar5;\n}\n",
        "token_count": 362
    },
    "0040e2cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0040e2cc(void)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    uint64_t uVar3;\n    int64_t iVar4;\n    bool bVar5;\n    \n    iVar2 = fcn.00415aa8(0x44a088, 0x40c074);\n    if (iVar2 != 0) {\n        iVar4 = fcn.00414cc0();\n        if ((*(iVar4 + 0x28) != '\\0') && (*(iVar2 + 0x48) != 0)) {\n            (*_sym.imp.USER32.dll_UnhookWindowsHookEx)();\n            *(iVar2 + 0x48) = 0;\n        }\n        bVar5 = *(iVar2 + 0x28) == 0;\n        if (!bVar5) {\n            *(iVar2 + 0x28) = 0;\n        }\n        return bVar5;\n    }\n    fcn.004129d8();\n    pcVar1 = swi(3);\n    uVar3 = (*pcVar1)();\n    return uVar3;\n}\n",
        "token_count": 245
    },
    "0040e9f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.0040e9f0(int64_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    ulong uVar4;\n    uint64_t arg3_00;\n    ulong in_stack_00000028;\n    uchar auStack136 [16];\n    ulong uStack120;\n    uchar auStack112 [56];\n    \n    uStack120 = 0xfffffffffffffffe;\n    iVar3 = fcn.00415aa8(0x44a088, 0x40c074);\n    arg3_00 = 0;\n    if (iVar3 == 0) {\n        fcn.004129d8();\n        pcVar1 = swi(3);\n        uVar4 = (*pcVar1)();\n        return uVar4;\n    }\n    fcn.0041ce10(auStack112, iVar3 + 0x98, 0x30);\n    *(iVar3 + 0x98) = arg2;\n    *(iVar3 + 0xa0) = arg3;\n    *(iVar3 + 0xa8) = arg4;\n    *(iVar3 + 0xb0) = in_stack_00000028;\n    if ((arg3 == 2) && (arg1[0x13] != 0)) {\n        (**(*arg1[0x13] + 0xc0))(arg1[0x13], 0);\n    }\n    if (arg3 == 0x110) {\n        (*_sym.imp.USER32.dll_GetWindowRect)(arg1[8], auStack136);\n        uVar2 = fcn.00412724(arg1);\n        arg3_00 = uVar2;\n    }\n    uVar4 = (**(*arg1 + 0x210))(arg1, arg3, arg4, in_stack_00000028);\n    if (arg3 == 0x110) {\n        fcn.0040e960(arg1, auStack136, arg3_00);\n    }\n    fcn.0041ce10(iVar3 + 0x98, auStack112, 0x30);\n    return uVar4;\n}\n",
        "token_count": 486
    },
    "0040ebec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0040ebec(ulong *arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    ulong in_R8;\n    ulong in_R9;\n    ulong uVar3;\n    \n    uVar3 = 0xfffffffffffffffe;\n    *arg1 = 0x435a78;\n    if ((((arg1[8] != 0) && (arg1 != 0x449c50)) && (arg1 != 0x449d00)) && ((arg1 != 0x449db0 && (arg1 != 0x449e60)))) {\n        fcn.0040e4f8(arg1);\n    }\n    piVar1 = arg1[0x13];\n    if (piVar1 != NULL) {\n        (**(*piVar1 + 8))(piVar1, 1, in_R8, in_R9, uVar3);\n    }\n    iVar2 = arg1[0x14];\n    if ((iVar2 != 0) && (*(iVar2 + 0x50) == arg1)) {\n        *(iVar2 + 0x50) = 0;\n    }\n    if (arg1[4] != 0) {\n        (**(arg1[4] + 0x38))();\n    }\n    arg1[7] = 0;\n    return;\n}\n",
        "token_count": 297
    },
    "0040f730": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0040f730(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    \n    fcn.00415e14(0xc);\n    iVar2 = fcn.004155b4(0x449f10, 0x40e938);\n    if (iVar2 == 0) {\n        fcn.004129d8();\n        pcVar1 = swi(3);\n        uVar3 = (*pcVar1)();\n        return uVar3;\n    }\n    if (*(iVar2 + 0x10) == 0) {\n        iVar4 = fcn.0040c5dc(\"hhctrl.ocx\");\n        *(iVar2 + 8) = iVar4;\n        if (iVar4 != 0) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar4, \"HtmlHelpA\");\n            *(iVar2 + 0x10) = iVar4;\n            if (iVar4 != 0) goto code_r0x0040f7bf;\n            (*_sym.imp.KERNEL32.dll_FreeLibrary)(*(iVar2 + 8));\n            *(iVar2 + 8) = 0;\n        }\n        uVar3 = 0;\n    }\n    else {\ncode_r0x0040f7bf:\n        fcn.00415ea0(0xc);\n        uVar3 = (**(iVar2 + 0x10))(arg1, arg2, arg3, arg4);\n    }\n    return uVar3;\n}\n",
        "token_count": 356
    },
    "0041052c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041052c(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    \n    iVar3 = fcn.00415aa8(0x44a088, 0x40c074);\n    if (iVar3 == 0) {\n        fcn.004129d8();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if (*(iVar3 + 0x28) != arg1) {\n        if (*(iVar3 + 0x48) == 0) {\n            uVar2 = (*_sym.imp.KERNEL32.dll_GetCurrentThreadId)();\n            iVar4 = (*_sym.imp.USER32.dll_SetWindowsHookExA)(5, 0x410214, 0, uVar2);\n            *(iVar3 + 0x48) = iVar4;\n            if (iVar4 == 0) {\n                fcn.004129b4();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n        }\n        *(iVar3 + 0x28) = arg1;\n    }\n    return;\n}\n",
        "token_count": 266
    },
    "00410800": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00410800(int64_t *arg1, ulong arg2, uint64_t arg3, int64_t *arg4)\n\n{\n    uint uVar1;\n    code *pcVar2;\n    int16_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    ulong uVar6;\n    code **ppcVar7;\n    uchar *puVar8;\n    int64_t iVar9;\n    ulong uVar10;\n    uint64_t uVar11;\n    int16_t iVar12;\n    uint32_t *puVar13;\n    uint32_t *puVar14;\n    uint64_t *in_stack_00000028;\n    uint64_t uStack296;\n    int32_t iStack288;\n    int32_t iStack284;\n    uint uStack280;\n    uchar auStack272 [8];\n    int64_t iStack264;\n    ulong uStack240;\n    uchar auStack232 [64];\n    int64_t iStack168;\n    int64_t iStack72;\n    \n    uStack240 = 0xfffffffffffffffe;\n    uStack296 = 0;\n    uStack280 = 0x7fffffff;\n    if (arg2 == 0x111) {\n        iVar4 = (**(*arg1 + 0x1d0))(arg1, arg3, arg4);\n        if (iVar4 == 0) {\n            return 0;\n        }\n        uStack296 = 1;\n    }\n    else if (arg2 == 0x4e) {\n        if ((*arg4 == 0) || (iVar4 = (**(*arg1 + 0x1d8))(arg1, arg3, arg4, &uStack296),  iVar4 == 0)) {\n            return 0;\n        }\n    }\n    else {\n        if (arg2 == 6) {\n            uVar6 = fcn.0040e1c8(arg4);\n            fcn.0040ff00(arg1, arg3, uVar6);\n        }\n        iVar12 = arg4;\n        if ((arg2 == 0x20) && (iVar4 = fcn.0040ff8c(arg1, iVar12, arg4 >> 0x10 & 0xffff),  iVar4 != 0)) {\n            uStack296 = 1;\n        }\n        else if ((((arg1[0x13] == 0) || (*(arg1[0x13] + 0xe0) < 1)) ||\n                 ((((arg2 < 0x200 || (0x209 < arg2)) && ((arg2 < 0x100 || (0x10f < arg2)))) && (0x10 < arg2 - 0x281))))\n                || (iVar4 = (**(*arg1[0x13] + 0x128))(arg1[0x13], arg2, arg3, arg4, &uStack296),  iVar4 == 0)) {\n            ppcVar7 = (**(*arg1 + 0x50))();\n            uVar11 = (ppcVar7 ^ arg2) & 0x1ff;\n            uStack280 = 7;\n            fcn.00415e14(7);\n            if ((arg2 != *(uVar11 * 0x18 + 0x446c00)) || (ppcVar7 != *(uVar11 * 0x18 + 0x446c10))) {\n                *(uVar11 * 0x18 + 0x446c00) = arg2;\n                *(uVar11 * 0x18 + 0x446c10) = ppcVar7;\n                pcVar2 = *ppcVar7;\n                do {\n                    if (pcVar2 == NULL) {\n                        *(uVar11 * 0x18 + 0x446c08) = 0;\n                        fcn.00415ea0(7);\n                        return 0;\n                    }\n                    if (arg2 < 0xc000) {\n                        puVar13 = ppcVar7[1];\n                        iVar9 = *(puVar13 + 4);\n                        for (; (puVar14 = NULL,  iVar9 != 0 &&\n                               (((*puVar13 != arg2 || (puVar13[1] != 0)) || (puVar14 = puVar13,  puVar13[2] != 0))));\n                            puVar13 = puVar13 + 8) {\n                            iVar9 = *(puVar13 + 0xc);\n                        }\n                        if (puVar14 != NULL) {\n                            *(uVar11 * 0x18 + 0x446c08) = puVar14;\n                            fcn.00415ea0(7);\n                            goto code_r0x00410a88;\n                        }\n                    }\n                    else {\n                        puVar13 = ppcVar7[1];\n                        while( true ) {\n                            iVar9 = *(puVar13 + 4);\n                            for (; (puVar14 = NULL,  iVar9 != 0 &&\n                                   (((*puVar13 != 0xc000 || (puVar13[1] != 0)) || (puVar14 = puVar13,  puVar13[2] != 0))\n                                   )); puVar13 = puVar13 + 8) {\n                                iVar9 = *(puVar13 + 0xc);\n                            }\n                            if (puVar14 == NULL) break;\n                            if (**(puVar14 + 4) == arg2) {\n                                *(uVar11 * 0x18 + 0x446c08) = puVar14;\n                                fcn.00415ea0(7);\n                                goto code_r0x00411328;\n                            }\n                            puVar13 = puVar14 + 8;\n                        }\n                    }\n                    ppcVar7 = (*pcVar2)();\n                    pcVar2 = *ppcVar7;\n                } while( true );\n            }\n            puVar14 = *(uVar11 * 0x18 + 0x446c08);\n            fcn.00415ea0(7);\n            if (puVar14 == NULL) {\n                return 0;\n            }\n            if (arg2 < 0xc000) {\ncode_r0x00410a88:\n                uStack280 = 0x7fffffff;\n                pcVar2 = *(puVar14 + 6);\n                uVar11 = *(puVar14 + 4);\n                iVar3 = arg4 >> 0x10;\n                if (uVar11 < 0x1e) {\n                    if (uVar11 == 0x1d) {\n                        iVar4 = (*pcVar2)(arg1);\n                        uStack296 = iVar4;\n                    }\n                    else if (uVar11 < 0x10) {\n                        if (uVar11 == 0xf) {\n                            uVar6 = fcn.00415cfc(arg4);\n                            uStack296 = (*pcVar2)(arg1, arg3 & 0xffff, arg3 >> 0x10 & 0xffff, uVar6);\n                        }\n                        else if (uVar11 < 9) {\n                            if (uVar11 == 8) {\n                                fcn.00413658(auStack272);\n                                iStack264 = arg4[1];\n                                fcn.0040c6e4(auStack232);\n                                iStack168 = *arg4;\n                                uVar1 = *(arg4 + 2);\n                                puVar8 = fcn.0040e204(iStack168);\n                                if (puVar8 == NULL) {\n                                    if ((arg1[0x13] != 0) &&\n                                       (iVar9 = fcn.00415fc0(arg1[0x13] + 0x48, iStack168),  iVar9 != 0)) {\n                                        iStack72 = iVar9;\n                                    }\n                                    puVar8 = auStack232;\n                                }\n                                uStack296 = (*pcVar2)(arg1, auStack272, puVar8, uVar1);\n                                iStack264 = 0;\n                                iStack168 = 0;\n                                fcn.0040ebec(auStack232);\n                                fcn.00413ca0(auStack272);\n                            }\n                            else if (uVar11 == 1) {\n                                uVar6 = fcn.00413be4(arg3);\n                                iVar4 = (*pcVar2)(arg1, uVar6);\n                                uStack296 = iVar4;\n                            }\n                            else if (uVar11 == 2) {\n                                iVar4 = (*pcVar2)(arg1, arg3 & 0xffffffff);\n                                uStack296 = iVar4;\n                            }\n                            else if (uVar11 == 3) {\n                                iVar4 = (*pcVar2)(arg1, arg3 & 0xffffffff);\n                                uStack296 = iVar4;\n                            }\n                            else if (uVar11 == 4) {\n                                iVar4 = (*pcVar2)(arg1, arg3);\n                                uStack296 = iVar4;\n                            }\n                            else if (uVar11 == 5) {\n                                uVar6 = fcn.0040e1c8(arg3);\n                                iVar4 = (*pcVar2)(arg1, uVar6, arg4 & 0xffff, arg4 >> 0x10 & 0xffff);\n                                uStack296 = iVar4;\n                            }\n                            else if (uVar11 == 6) {\n                                uVar6 = fcn.0040e1c8(arg3);\n                                iVar4 = (*pcVar2)(arg1, uVar6, arg4);\n                                uStack296 = iVar4;\n                            }\n                            else if (uVar11 == 7) {\n                                iVar4 = (*pcVar2)(arg1, arg4);\n                                uStack296 = iVar4;\n                            }\n                        }\n                        else if (uVar11 == 9) {\n                            fcn.00413658(auStack272);\n                            iStack264 = arg4[1];\n                            uStack296 = (*pcVar2)(arg1, auStack272, *(arg4 + 2));\n                            iStack264 = 0;\n                            fcn.00413ca0(auStack272);\n                        }\n                        else if (uVar11 == 10) {\n                            uVar6 = fcn.0040e1c8(arg4);\n                            iVar4 = (*pcVar2)(arg1, arg3 & 0xffff, uVar6, arg3 >> 0x10 & 0xffff);\n                            uStack296 = iVar4;\n                        }\n                        else if (uVar11 == 0xb) {\n                            iVar4 = (*pcVar2)(arg1, arg3 & 0xffff, arg3 >> 0x10 & 0xffff);\n                            uStack296 = iVar4;\n                        }\n                        else if (uVar11 == 0xc) {\n                            uVar6 = fcn.0040e1c8(arg3);\n                            iVar4 = (*pcVar2)(arg1, uVar6, arg4 & 0xffff, arg4 >> 0x10 & 0xffff);\n                            uStack296 = iVar4;\n                        }\n                        else if (uVar11 == 0xd) {\n                            iVar4 = (*pcVar2)(arg1, arg4);\n                            uStack296 = iVar4;\n                        }\n                        else if (uVar11 == 0xe) {\n                            uStack296 = (*pcVar2)(arg1, arg3, arg4);\n                        }\n                    }\n                    else if (uVar11 < 0x17) {\n                        if (uVar11 == 0x16) {\n                            (*pcVar2)(arg1, arg3 & 0xffff, arg3 >> 0x10 & 0xffff);\n                        }\n                        else if (uVar11 == 0x10) {\n                            (*pcVar2)(arg1, arg3 & 0xffffffff, arg4);\n                        }\n                        else if (uVar11 == 0x11) {\n                            (*pcVar2)(arg1, arg3);\n                        }\n                        else if (uVar11 == 0x12) {\n                            (*pcVar2)(arg1, arg3, arg4);\n                        }\n                        else if (uVar11 == 0x13) {\n                            (*pcVar2)(arg1);\n                        }\n                        else if (uVar11 == 0x14) {\n                            (*pcVar2)(arg1, arg3 & 0xffffffff);\n                        }\n                        else if (uVar11 == 0x15) {\n                            (*pcVar2)(arg1, arg3 & 0xffffffff, arg4 & 0xffffffff);\n                        }\n                    }\n                    else if (uVar11 == 0x17) {\n                        (*pcVar2)(arg1, iVar12, iVar3);\n                    }\n                    else if (uVar11 == 0x18) {\n                        (*pcVar2)(arg1, arg3 & 0xffffffff, arg4 & 0xffff, arg4 >> 0x10 & 0xffff);\n                    }\n                    else if (uVar11 == 0x19) {\n                        (*pcVar2)(arg1, arg3 & 0xffffffff, arg4 & 0xffff, arg4 >> 0x10 & 0xffff);\n                    }\n                    else if (uVar11 == 0x1a) {\n                        uVar6 = fcn.0040e1c8(arg4);\n                        (*pcVar2)(arg1, arg3 & 0xffffffff, uVar6);\n                    }\n                    else if (uVar11 == 0x1b) {\n                        iVar4 = (*pcVar2)(arg1, arg3 & 0xffffffff);\n                        uStack296 = iVar4;\n                    }\n                    else if (uVar11 == 0x1c) {\n                        uVar5 = (*pcVar2)(arg1, arg3 & 0xffffffff);\n                        uStack296 = uVar5;\n                    }\n                }\n                else if (uVar11 < 0x2d) {\n                    if (uVar11 == 0x2c) {\n                        (*pcVar2)(arg1, arg4);\n                    }\n                    else if (uVar11 < 0x25) {\n                        if (uVar11 == 0x24) {\n                            uVar6 = fcn.0040e1c8(arg4);\n                            (*pcVar2)(arg1, uVar6);\n                        }\n                        else if (uVar11 == 0x1e) {\n                            (*pcVar2)(arg1, arg3, arg4);\n                        }\n                        else if (uVar11 == 0x1f) {\n                            uVar6 = fcn.0040e1c8(arg3);\n                            uVar10 = fcn.0040e1c8(arg4);\n                            (*pcVar2)(arg1, arg1[8] == arg4, uVar10, uVar6);\n                        }\n                        else if (uVar11 == 0x20) {\n                            uVar6 = fcn.00413be4(arg3);\n                            (*pcVar2)(arg1, uVar6);\n                        }\n                        else if (uVar11 == 0x21) {\n                            uVar6 = fcn.00415cfc(arg3);\n                            (*pcVar2)(arg1, uVar6);\n                        }\n                        else if (uVar11 == 0x22) {\n                            uVar6 = fcn.00415cfc(arg3);\n                            (*pcVar2)(arg1, uVar6, iVar12, iVar3);\n                        }\n                        else if (uVar11 == 0x23) {\n                            uVar6 = fcn.0040e1c8(arg3);\n                            (*pcVar2)(arg1, uVar6);\n                        }\n                    }\n                    else if (uVar11 == 0x25) {\n                        uVar6 = fcn.0040e1c8(arg3);\n                        (*pcVar2)(arg1, uVar6, arg4 & 0xffff, arg4 >> 0x10 & 0xffff);\n                    }\n                    else if (uVar11 == 0x26) {\n                        iStack288 = iVar12;\n                        iStack284 = iVar3;\n                        uVar6 = fcn.0040e1c8(arg3);\n                        (*pcVar2)(arg1, uVar6, CONCAT44(iStack284, iStack288));\n                    }\n                    else if (uVar11 == 0x27) {\n                        uVar6 = fcn.0040e1c8(arg3);\n                        (*pcVar2)(arg1, uVar6, arg4);\n                    }\n                    else if (uVar11 == 0x28) {\n                        uStack296 = (*pcVar2)(arg1);\n                    }\n                    else if (uVar11 == 0x29) {\n                        uVar6 = fcn.0040e1c8(arg4);\n                        (*pcVar2)(arg1, arg3 & 0xffff, uVar6, arg3 >> 0x10 & 0xffff);\n                    }\n                    else if (uVar11 == 0x2a || uVar11 == 0x2b) {\n                        iVar4 = arg3 >> 0x10;\n                        if (uVar11 == 0x2a) {\n                            uVar6 = fcn.0040e1c8(arg4);\n                            (*pcVar2)(arg1, arg3, iVar4, uVar6);\n                        }\n                        else {\n                            (*pcVar2)(arg1, arg3, iVar4);\n                        }\n                    }\n                }\n                else if (uVar11 < 0x34) {\n                    if (uVar11 == 0x33) {\n                        (*pcVar2)(arg1, arg4);\n                    }\n                    else if (uVar11 == 0x2d) {\n                        (*pcVar2)(arg1, arg3 & 0xffffffff, arg4);\n                    }\n                    else if (uVar11 == 0x2e) {\n                        (*pcVar2)(arg1, arg3 & 0xffffffff, arg4);\n                        uStack296 = 1;\n                    }\n                    else if (uVar11 == 0x2f) {\n                        iVar4 = (*pcVar2)(arg1, arg3 & 0xffffffff, arg4);\n                        uStack296 = iVar4;\n                    }\n                    else if (uVar11 == 0x30) {\n                        iStack288 = iVar12;\n                        iStack284 = iVar3;\n                        uVar5 = (*pcVar2)(arg1, CONCAT44(iStack284, iStack288));\n                        uStack296 = uVar5;\n                    }\n                    else if (uVar11 == 0x31) {\n                        uVar5 = (*pcVar2)(arg1);\n                        uStack296 = uVar5;\n                    }\n                    else if (uVar11 == 0x32) {\n                        (*pcVar2)(arg1, arg3 & 0xffffffff, arg4);\n                    }\n                }\n                else if (uVar11 == 0x34) {\n                    (*pcVar2)(arg1, arg3 & 0xffff, arg3 >> 0x10 & 0xffff, arg4);\n                }\n                else if (uVar11 == 0x35) {\n                    iStack288 = iVar12;\n                    iStack284 = iVar3;\n                    (*pcVar2)(arg1, arg3 & 0xffffffff, CONCAT44(iStack284, iStack288));\n                }\n                else if (uVar11 == 0x36) {\n                    (*pcVar2)(arg1, arg3 & 0xffffffff, arg4);\n                    uStack296 = 1;\n                }\n                else if (uVar11 == 0x37) {\n                    iStack288 = iVar12;\n                    iStack284 = iVar3;\n                    iVar4 = (*pcVar2)(arg1, arg3 & 0xffff, arg3 >> 0x10, CONCAT44(iStack284, iStack288));\n                    uStack296 = iVar4;\n                    if (uStack296 == 0) {\n                        return 0;\n                    }\n                }\n                else if (uVar11 == 0x44) {\n                    uStack296 = (*pcVar2)(arg1);\n                    if (uStack296 != 0) {\n                        return 0;\n                    }\n                }\n                else if (uVar11 == 0x45) {\n                    iStack288 = iVar12;\n                    iStack284 = iVar3;\n                    uStack296 = (*pcVar2)(arg1, CONCAT44(iStack284, iStack288));\n                }\n            }\n            else {\ncode_r0x00411328:\n                uStack280 = 0x7fffffff;\n                uStack296 = (**(puVar14 + 6))(arg1, arg3, arg4);\n            }\n        }\n    }\n    if (in_stack_00000028 != NULL) {\n        *in_stack_00000028 = uStack296;\n    }\n    return 1;\n}\n",
        "token_count": 4537
    },
    "0041211c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.0041211c(int64_t *arg1, uint64_t arg2, ulong arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    ulong *puVar5;\n    code **ppcVar6;\n    uint32_t uVar7;\n    int64_t *piVar8;\n    ulong in_stack_00000028;\n    \n    arg2 = arg2 & 0xffffffff;\n    if (arg3 == 0xfffffffe) {\n        iVar3 = fcn.00414cc0();\n        if (*(iVar3 + 0x68) != 0) {\n            iVar3 = fcn.00414cc0();\n            uVar4 = (**(**(iVar3 + 0x68) + 8))(*(iVar3 + 0x68), arg1, arg2, arg4, in_stack_00000028);\n            return uVar4;\n        }\n        fcn.004129d8();\n        pcVar1 = swi(3);\n        uVar4 = (*pcVar1)();\n        return uVar4;\n    }\n    if (arg3 == 0xfffffffd) {\n        uVar7 = 0;\n        if (arg4 == 0) {\n            fcn.004129d8();\n            pcVar1 = swi(3);\n            uVar4 = (*pcVar1)();\n            return uVar4;\n        }\n        iVar3 = *(arg4 + 0x50);\n        puVar5 = (**(*arg1 + 0x58))();\n        do {\n            if ((puVar5 == NULL) || (uVar7 != 0)) {\n                return uVar7;\n            }\n            piVar8 = puVar5[1];\n            while (((*(piVar8 + 1) != 0 && (*(piVar8 + 0xc) != 0)) && (uVar7 == 0))) {\n                if (arg2 == *(piVar8 + 1)) {\n                    if (iVar3 == 0) {\n                        if (*piVar8 == 0) {\ncode_r0x004121df:\n                            uVar7 = 1;\n                            *(arg4 + 8) = *(piVar8 + 0xc);\n                        }\n                    }\n                    else if ((*piVar8 != 0) && (iVar2 = fcn.0041d2a0(iVar3, *piVar8, 0x10),  iVar2 == 0))\n                    goto code_r0x004121df;\n                }\n                piVar8 = piVar8 + 2;\n            }\n            puVar5 = *puVar5;\n        } while( true );\n    }\n    uVar7 = arg3;\n    if (arg3 != 0xffffffff) {\n        uVar7 = arg3 & 0xffff;\n        uVar4 = arg3 >> 0x10;\n        if (arg3 >> 0x10 != 0) goto code_r0x0041221d;\n    }\n    uVar4 = 0x111;\ncode_r0x0041221d:\n    ppcVar6 = (**(*arg1 + 0x50))();\n    while( true ) {\n        if (*ppcVar6 == NULL) {\n            return 0;\n        }\n        iVar3 = fcn.0040baa8(ppcVar6[1], uVar4, uVar7, arg2);\n        if (iVar3 != 0) break;\n        ppcVar6 = (**ppcVar6)();\n    }\n    uVar4 = fcn.00411f9c(arg1, arg2, uVar7, *(iVar3 + 0x18));\n    return uVar4;\n}\n",
        "token_count": 822
    },
    "00412724": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00412724(int64_t hWnd)\n\n{\n    if (*(hWnd + 0xa0) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(*(hWnd + 0x40), 0xfffffff0);\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0xf0))();\n    }\n    return;\n}\n",
        "token_count": 88
    },
    "00412758": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00412758(int64_t hWnd)\n\n{\n    if (*(hWnd + 0xa0) == 0) {\n        (*_sym.imp.USER32.dll_GetWindowLongA)(*(hWnd + 0x40), 0xffffffec);\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0xf8))();\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "0041278c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041278c(int64_t hWnd)\n\n{\n    if (*(hWnd + 0xa0) == 0) {\n        (*_sym.imp.USER32.dll_IsWindowEnabled)(*(hWnd + 0x40));\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0x148))();\n    }\n    return;\n}\n",
        "token_count": 82
    },
    "004127bc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004127bc(int64_t hWnd, ulong bEnable)\n\n{\n    if (*(hWnd + 0xa0) == 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(*(hWnd + 0x40));\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0x150))();\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "00412864": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00412864(int64_t hWnd, int64_t arg2)\n\n{\n    ulong arg2_00;\n    int64_t iVar1;\n    \n    if ((hWnd != 0) && (*(hWnd + 0xa0) == 0)) {\n        arg2_00 = (*_sym.imp.USER32.dll_GetParent)(*(hWnd + 0x40));\n        iVar1 = fcn.00415fc0(arg2 + 0x30, arg2_00);\n        if ((iVar1 != 0) && (*(iVar1 + 0x98) != 0)) {\n            (**(**(iVar1 + 0x98) + 0x138))(*(iVar1 + 0x98), hWnd, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 172
    },
    "004128c4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004128c4(int64_t *arg1)\n\n{\n    if (0 < *(arg1 + 1)) {\n        (**(*arg1 + 8))(arg1, 1);\n    }\n    return;\n}\n",
        "token_count": 51
    },
    "0041318c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0041318c(ulong arg1, ulong arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uchar *arg2_00;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    ulong uVar6;\n    uint64_t uVar7;\n    uchar auStack408 [32];\n    int32_t aiStack376 [2];\n    int64_t iStack368;\n    int64_t iStack360;\n    ulong uStack352;\n    uchar *puStack344;\n    uchar auStack336 [136];\n    uchar *puStack200;\n    uchar auStack192 [136];\n    uint64_t uStack56;\n    \n    uStack352 = 0xfffffffffffffffe;\n    uStack56 = *0x444d30 ^ auStack408;\n    uVar4 = fcn.00416f20(arg1, aiStack376);\n    if (aiStack376[0] != 1) {\n        uVar7 = uVar4;\n        puStack200 = NULL;\n        if (uVar4 == 0) {\ncode_r0x004132fb:\n            puStack200 = auStack192;\n        }\n        else {\n            if (0xffffffffffffffff / uVar7 < 2) {\n                fcn.00401040(0x80070057);\n                pcVar3 = swi(3);\n                (*pcVar3)();\n                return;\n            }\n            if (uVar7 * 2 < 0x81) goto code_r0x004132fb;\n            fcn.00412c78(&puStack200, uVar7 * 2);\n        }\n        uVar5 = fcn.00416b58(arg1, puStack200, uVar4 * 2);\n        if (uVar5 != uVar7 * 2) {\n            fcn.00417a38(3, 0);\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        uVar6 = fcn.00412fcc(&iStack360, puStack200, uVar4);\n        fcn.004032d0(arg2, uVar6);\n        LOCK();\n        piVar1 = iStack360 + -8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar2 + -1 < 1) {\n            (**(**(iStack360 + -0x18) + 8))();\n        }\n        if (puStack200 != auStack192) {\n            fcn.00412c70(&puStack200);\n        }\n        goto code_r0x00413393;\n    }\n    uVar7 = uVar4;\n    puStack344 = NULL;\n    if (uVar4 == 0) {\ncode_r0x00413218:\n        puStack344 = auStack336;\n    }\n    else {\n        if (0xffffffffffffffff / uVar7 == 0) {\n            fcn.00401040(0x80070057);\n            pcVar3 = swi(3);\n            (*pcVar3)();\n            return;\n        }\n        if (uVar7 < 0x81) goto code_r0x00413218;\n        fcn.0040ab80(&puStack344, uVar7);\n    }\n    uVar5 = fcn.00416b58(arg1, puStack344, uVar4);\n    arg2_00 = puStack344;\n    if (uVar5 != uVar4) {\n        fcn.00417a38(3, 0);\n        pcVar3 = swi(3);\n        (*pcVar3)();\n        return;\n    }\n    uVar6 = fcn.00413fd4();\n    fcn.00402910(&iStack368, arg2_00, uVar4, uVar6);\n    fcn.004032d0(arg2, &iStack368);\n    LOCK();\n    piVar1 = iStack368 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iStack368 + -0x18) + 8))();\n    }\n    if (puStack344 != auStack336) {\n        fcn.0040ab70(&puStack344);\n    }\ncode_r0x00413393:\n    fcn.00418d10(uStack56 ^ auStack408);\n    return;\n}\n",
        "token_count": 988
    },
    "0041674c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nint64_t fcn.0041674c(int64_t arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    ulong arg1_00;\n    int64_t iVar2;\n    int64_t *piVar3;\n    \n    if (arg2 == 0) {\n        iVar1 = 0;\n    }\n    else {\n        iVar1 = fcn.00415fc0(arg1 + 0x30, arg2);\n        if (iVar1 == 0) {\n            iVar1 = fcn.00415fc0(arg1 + 0x68, arg2);\n            if (iVar1 == 0) {\n                arg1_00 = fcn.0040abe8(0x414f30);\n                iVar1 = fcn.00417b5c(arg1 + 8);\n                iVar2 = iVar1;\n                if (iVar1 == 0) {\n                    iVar2 = fcn.004129b4();\n                }\n                (**(arg1 + 0x20))(iVar2);\n                piVar3 = fcn.004161dc(arg1 + 0x68, arg2);\n                *piVar3 = iVar1;\n                fcn.0040abe8(arg1_00);\n                iVar2 = *(arg1 + 0xa8);\n                *(iVar1 + iVar2) = arg2;\n                if (*(arg1 + 0xb0) == 2) {\n                    *(iVar1 + 8 + iVar2) = arg2;\n                }\n            }\n            else {\n                iVar2 = *(arg1 + 0xa8);\n                *(iVar1 + iVar2) = arg2;\n                if (*(arg1 + 0xb0) == 2) {\n                    *(iVar1 + 8 + iVar2) = arg2;\n                }\n            }\n        }\n    }\n    return iVar1;\n}\n",
        "token_count": 401
    },
    "00413ca0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00413ca0(ulong *arg1)\n\n{\n    ulong uVar1;\n    \n    *arg1 = 0x437148;\n    if (arg1[1] != 0) {\n        uVar1 = fcn.00413c54(arg1);\n        (*_sym.imp.GDI32.dll_DeleteDC)(uVar1);\n    }\n    return;\n}\n",
        "token_count": 84
    },
    "0041417c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.0041417c(ulong *arg1)\n\n{\n    ulong *puVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    ulong arg1_00;\n    \n    *arg1 = 0x437348;\n    if (arg1[0xf] != NULL) {\n        (**(*arg1[0xf] + 0x278))();\n    }\n    fcn.0040ac34(arg1[0x12]);\n    puVar1 = arg1[5];\n    if (puVar1 != NULL) {\n        (***puVar1)(puVar1, 1);\n    }\n    puVar1 = arg1[6];\n    if (puVar1 != NULL) {\n        (***puVar1)(puVar1, 1);\n    }\n    puVar1 = arg1[7];\n    if (puVar1 != NULL) {\n        (***puVar1)(puVar1, 1);\n    }\n    puVar1 = arg1[8];\n    if (puVar1 != NULL) {\n        (***puVar1)(puVar1, 1);\n    }\n    puVar1 = arg1[9];\n    if (puVar1 != NULL) {\n        (***puVar1)(puVar1, 1);\n    }\n    if (arg1[0xe] != 0) {\n        iVar3 = *(arg1[0xe] + 0x18);\n        while (iVar3 != 0) {\n            arg1_00 = fcn.00416b08(arg1[0xe]);\n            fcn.0040ac34(arg1_00);\n            iVar3 = *(arg1[0xe] + 0x18);\n        }\n    }\n    piVar2 = arg1[0xc];\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 8))(piVar2, 1);\n    }\n    piVar2 = arg1[0xd];\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 8))(piVar2, 1);\n    }\n    piVar2 = arg1[0xe];\n    if (piVar2 != NULL) {\n        (**(*piVar2 + 8))(piVar2, 1);\n    }\n    return;\n}\n",
        "token_count": 502
    },
    "00414da0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nulong fcn.00414da0(ulong noname_0, ulong *arg2)\n\n{\n    ulong uVar1;\n    \n    if (*(arg2 + 1) == 1) {\n        uVar1 = 0xffffffffffffffff;\n    }\n    else {\n        if (*(arg2 + 1) == 0xf) {\n            (*_sym.imp.USER32.dll_ValidateRect)(*arg2, 0);\n        }\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 110
    },
    "00415018": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00415018(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t *piVar2;\n    \n    piVar2 = fcn.00414d8c();\n    if (piVar2 == NULL) {\n        piVar2 = NULL;\n    }\n    else {\n        piVar2 = (**(*piVar2 + 0xe8))(piVar2);\n    }\n    if (piVar2 != NULL) {\n        iVar1 = (**(*piVar2 + 0x240))(piVar2);\n        if ((iVar1 != 0) && (piVar2[0x1c] != 0)) {\n            (**(*piVar2[0x1c] + 200))(piVar2[0x1c], arg1);\n        }\n    }\n    return;\n}\n",
        "token_count": 179
    },
    "00415168": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00415168(int64_t arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int64_t arg1_00;\n    int32_t *piVar2;\n    int32_t iVar3;\n    uchar *arg3_00;\n    uchar auStack392 [32];\n    int32_t aiStack360 [2];\n    int64_t iStack352;\n    uchar auStack344 [259];\n    uchar uStack85;\n    uint64_t uStack72;\n    \n    uStack72 = *0x444d30 ^ auStack392;\n    fcn.00415018(0);\n    arg1_00 = fcn.00415078(0, &iStack352);\n    if (arg1_00 != iStack352) {\n        (*_sym.imp.USER32.dll_EnableWindow)(arg1_00, 1);\n    }\n    iVar3 = 0;\n    aiStack360[0] = 0;\n    (*_sym.imp.USER32.dll_GetWindowThreadProcessId)(arg1_00, aiStack360);\n    if ((((arg1_00 == 0) || (iVar1 = (*_sym.imp.KERNEL32.dll_GetCurrentProcessId)(),  aiStack360[0] != iVar1)) ||\n        (piVar2 = (*_sym.imp.USER32.dll_SendMessageA)(arg1_00, 0x376, 0),  piVar2 == NULL)) &&\n       (piVar2 = NULL,  arg1 != 0)) {\n        piVar2 = arg1 + 0xf0;\n    }\n    if ((piVar2 != NULL) && (iVar3 = *piVar2,  arg4 != 0)) {\n        *piVar2 = arg4 + 0x30000;\n    }\n    if ((arg3 & 0xf0) == 0) {\n        if ((arg3 & 0xf) < 2) {\n            arg3._0_4_ = arg3 | 0x30;\n        }\n        else if ((arg3 & 0xf) - 3 < 2) {\n            arg3._0_4_ = arg3 | 0x20;\n        }\n    }\n    auStack344[0] = 0;\n    if (arg1 == 0) {\n        arg3_00 = auStack344;\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleFileNameA)(0, auStack344, 0x104);\n        if (iVar1 == 0x104) {\n            uStack85 = 0;\n        }\n    }\n    else {\n        arg3_00 = *(arg1 + 0xa0);\n    }\n    fcn.0040c4e4(arg1_00, arg2, arg3_00, arg3);\n    if (piVar2 != NULL) {\n        *piVar2 = iVar3;\n    }\n    if (iStack352 != 0) {\n        (*_sym.imp.USER32.dll_EnableWindow)(iStack352, 1);\n    }\n    fcn.00415018(1);\n    fcn.00418d10(uStack72 ^ auStack392);\n    return;\n}\n",
        "token_count": 693
    },
    "004158d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004158d8(uint *lpCriticalSection, ulong arg2, int64_t arg3)\n\n{\n    code *pcVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    ulong in_R9;\n    ulong uVar4;\n    \n    uVar4 = 0xfffffffffffffffe;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 10);\n    if ((arg2 < 1) || (lpCriticalSection[3] <= arg2)) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 10);\n        return;\n    }\n    puVar2 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*lpCriticalSection);\n    if (puVar2 == NULL) {\n        puVar2 = fcn.0041557c(0x20);\n        if (puVar2 == NULL) {\n            puVar2 = NULL;\n        }\n        else {\n            *puVar2 = 0x4374e0;\n        }\n        *(puVar2 + 2) = 0;\n        puVar2[3] = 0;\n        *(puVar2 + *(lpCriticalSection + 8)) = *(lpCriticalSection + 6);\n        *(lpCriticalSection + 6) = puVar2;\n    }\n    else if ((arg2 < *(puVar2 + 2)) || (arg3 == 0)) goto code_r0x00415a23;\n    if (puVar2[3] == 0) {\n        if (0xffffffff < lpCriticalSection[3] << 3) {\n            fcn.00401040(0x80070057);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0);\n    }\n    else {\n        if (0xffffffff < lpCriticalSection[3] << 3) {\n            fcn.00401040(0x80070057);\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        iVar3 = (*_sym.imp.KERNEL32.dll_LocalReAlloc)\n                          (puVar2[3], lpCriticalSection[3] << 3 & 0xffffffff, 2, in_R9, uVar4);\n    }\n    if (iVar3 == 0) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 10);\n        fcn.004129b4();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    puVar2[3] = iVar3;\n    fcn.00418a70(iVar3 + *(puVar2 + 2) * 8, 0, lpCriticalSection[3] - *(puVar2 + 2) << 3);\n    *(puVar2 + 2) = lpCriticalSection[3];\n    (*_sym.imp.KERNEL32.dll_TlsSetValue)(*lpCriticalSection, puVar2);\ncode_r0x00415a23:\n    if ((puVar2[3] != 0) && (arg2 < *(puVar2 + 2))) {\n        *(puVar2[3] + arg2 * 8) = arg3;\n    }\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 10);\n    return;\n}\n",
        "token_count": 729
    },
    "00415aa8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00415aa8(uint32_t *arg1, code *arg2)\n\n{\n    code *pcVar1;\n    uint *puVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    \n    if (arg2 == NULL) {\n        fcn.004129d8();\n        pcVar1 = swi(3);\n        iVar4 = (*pcVar1)();\n        return iVar4;\n    }\n    if (*arg1 == 0) {\n        if ((*0x44a110 == NULL) && (*0x44a110 = fcn.00415690(0x44a120),  *0x44a110 == NULL)) {\n            fcn.004129d8();\n            pcVar1 = swi(3);\n            iVar4 = (*pcVar1)();\n            return iVar4;\n        }\n        uVar3 = fcn.004156e0(*0x44a110);\n        *arg1 = uVar3;\n        if (uVar3 == 0) {\n            fcn.004129d8();\n            pcVar1 = swi(3);\n            iVar4 = (*pcVar1)();\n            return iVar4;\n        }\n    }\n    puVar2 = *0x44a110;\n    uVar3 = *arg1;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(*0x44a110 + 10);\n    if ((uVar3 < 1) || (puVar2[3] <= uVar3)) {\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar2 + 10);\n        iVar4 = 0;\n    }\n    else {\n        iVar4 = (*_sym.imp.KERNEL32.dll_TlsGetValue)(*puVar2);\n        if ((iVar4 == 0) || (*(iVar4 + 0x10) <= uVar3)) {\n            (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar2 + 10);\n            goto code_r0x00415b7e;\n        }\n        iVar4 = *(*(iVar4 + 0x18) + uVar3 * 8);\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(puVar2 + 10);\n    }\n    if (iVar4 != 0) {\n        return iVar4;\n    }\ncode_r0x00415b7e:\n    iVar4 = (*arg2)();\n    fcn.004158d8(*0x44a110, *arg1, iVar4);\n    return iVar4;\n}\n",
        "token_count": 546
    },
    "00415d8c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.00415d8c(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    if (*(arg1 + 8) == 0) {\n        uVar1 = 0;\n    }\n    else {\n        uVar1 = fcn.00415d4c(arg1);\n        uVar1 = (*_sym.imp.USER32.dll_DestroyMenu)(uVar1);\n    }\n    return uVar1;\n}\n",
        "token_count": 95
    },
    "00415e14": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00415e14(ulong arg1)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    \n    iVar3 = arg1;\n    if (0x10 < arg1) {\n        fcn.004129d8();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (*0x44a170 == 0) {\n        fcn.00415de4();\n    }\n    if (*(iVar3 * 4 + 0x44a450) == 0) {\n        (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(0x44a428);\n        if (*(iVar3 * 4 + 0x44a450) == 0) {\n            (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(iVar3 * 0x28 + 0x44a180);\n            piVar1 = iVar3 * 4 + 0x44a450;\n            *piVar1 = *piVar1 + 1;\n        }\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(0x44a428);\n    }\n    // WARNING: Could not recover jumptable at 0x00415e98. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(iVar3 * 0x28 + 0x44a180);\n    return;\n}\n",
        "token_count": 319
    },
    "00416168": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00416168(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    ulong *puVar4;\n    \n    if (*(arg1 + 0x20) == 0) {\n        iVar3 = fcn.00417aa0(arg1 + 0x28, *(arg1 + 0x30), 0x18);\n        iVar1 = *(arg1 + 0x30);\n        puVar4 = iVar3 + -0x10 + iVar1 * 0x18;\n        while (iVar1 = iVar1 + -1,  -1 < iVar1) {\n            *puVar4 = *(arg1 + 0x20);\n            *(arg1 + 0x20) = puVar4;\n            puVar4 = puVar4 + -3;\n        }\n    }\n    puVar4 = *(arg1 + 0x20);\n    uVar2 = *puVar4;\n    *(arg1 + 0x18) = *(arg1 + 0x18) + 1;\n    *(arg1 + 0x20) = uVar2;\n    puVar4[1] = 0;\n    puVar4[2] = 0;\n    return;\n}\n",
        "token_count": 281
    },
    "00416278": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t * fcn.00416278(int64_t *arg1, int32_t *arg2)\n\n{\n    int32_t *piVar1;\n    int64_t **ppiVar2;\n    int64_t *piVar3;\n    int32_t **ppiVar4;\n    \n    piVar1 = (**(*arg1 + 0x88))();\n    if (piVar1 == NULL) {\n        ppiVar2 = (**(*arg1 + 0x70))();\n        if ((((*0x439568 == *arg2) && (arg2[1] == *0x43956c)) && (arg2[2] == *0x439570)) && (arg2[3] == *0x439574)) {\n            do {\n                for (piVar3 = ppiVar2[1]; *piVar3 != 0; piVar3 = piVar3 + 2) {\n                    if (*(piVar3[1] + arg1) != 0) {\n                        return piVar3[1] + arg1;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        else {\n            do {\n                for (ppiVar4 = ppiVar2[1]; piVar1 = *ppiVar4,  piVar1 != NULL; ppiVar4 = ppiVar4 + 2) {\n                    if (((*piVar1 == *arg2) && (piVar1[1] == arg2[1])) &&\n                       ((piVar1[2] == arg2[2] && ((piVar1[3] == arg2[3] && (*(ppiVar4[1] + arg1) != 0)))))) {\n                        return ppiVar4[1] + arg1;\n                    }\n                }\n                ppiVar2 = *ppiVar2;\n            } while (ppiVar2 != NULL);\n        }\n        piVar1 = NULL;\n    }\n    return piVar1;\n}\n",
        "token_count": 436
    },
    "00416344": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint64_t fcn.00416344(int64_t *arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    int64_t *piVar4;\n    int64_t aiStackX8 [4];\n    \n    piVar3 = (**(*arg1 + 0x70))();\n    do {\n        for (piVar4 = piVar3[1]; *piVar4 != 0; piVar4 = piVar4 + 2) {\n        }\n        for (piVar4 = piVar4 + 1; *piVar4 != -1; piVar4 = piVar4 + 2) {\n            puVar1 = *(arg1 + *piVar4);\n            if (puVar1 != NULL) {\n                aiStackX8[0] = 0;\n                iVar2 = (***puVar1)(puVar1, arg2, aiStackX8);\n                if ((iVar2 == 0) && (aiStackX8[0] != 0)) {\n                    return aiStackX8[0];\n                }\n            }\n        }\n        piVar3 = *piVar3;\n        if (piVar3 == NULL) {\n            return 0;\n        }\n    } while( true );\n}\n",
        "token_count": 284
    },
    "004163c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.004163c0(int64_t pvarg)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    \n    if (*(pvarg + 0x10) == 0) {\n        LOCK();\n        piVar1 = pvarg + 8;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + 1;\n        uVar3 = iVar2 + 1;\n    }\n    else {\n        uVar3 = (**(**(pvarg + 0x10) + 8))();\n    }\n    return uVar3;\n}\n",
        "token_count": 142
    },
    "004163ec": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nint32_t fcn.004163ec(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    int32_t iVar2;\n    ulong in_R8;\n    ulong in_R9;\n    ulong uVar3;\n    ulong uStack48;\n    int32_t iStack40;\n    \n    uVar3 = 0xfffffffffffffffe;\n    if (*(arg1 + 1) == 0) {\n        iVar2 = 0;\n    }\n    else {\n        LOCK();\n        piVar1 = arg1 + 1;\n        iVar2 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        iVar2 = iVar2 + -1;\n        if (iVar2 == 0) {\n            fcn.00414d3c(&uStack48, arg1[7]);\n            (**(*arg1 + 0x20))(arg1);\n            if (iStack40 != 0) {\n                fcn.004140b0(0, uStack48, in_R8, in_R9, uVar3);\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 244
    },
    "00416464": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00416464(int64_t arg1)\n\n{\n    if (*(arg1 + 0x10) == 0) {\n        fcn.004163ec(arg1);\n    }\n    else {\n        (**(**(arg1 + 0x10) + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 71
    },
    "004164d4": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004164d4(int64_t arg1)\n\n{\n    ulong in_RDX;\n    ulong in_R8;\n    \n    if (*(arg1 + 0x10) == 0) {\n        fcn.00416488(arg1, in_RDX, in_R8);\n    }\n    else {\n        (****(arg1 + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 87
    },
    "00416528": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00416528(int64_t arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong auStackX8 [4];\n    \n    if (*(arg1 + 0xe8) != 0) {\n        iVar2 = (*_sym.imp.KERNEL32.dll_GlobalLock)();\n        iVar1 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(*(iVar2 + 2) + iVar2, arg2);\n        if (iVar1 == 0) {\n            iVar1 = sub.WINSPOOL.DRV_OpenPrinterA(arg2, auStackX8, 0);\n            if (iVar1 != 0) {\n                if (*(arg1 + 0xe0) != 0) {\n                    fcn.00414ef4(*(arg1 + 0xe0));\n                }\n                iVar1 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, auStackX8[0], arg2, 0, 0, 0);\n                uVar3 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(0x42, iVar1);\n                *(arg1 + 0xe0) = uVar3;\n                uVar3 = (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar3);\n                iVar1 = sub.WINSPOOL.DRV_DocumentPropertiesA(0, auStackX8[0], arg2, uVar3, 0, 2);\n                if (iVar1 != 1) {\n                    fcn.00414ef4(*(arg1 + 0xe0));\n                    *(arg1 + 0xe0) = 0;\n                }\n                sub.WINSPOOL.DRV_ClosePrinter(auStackX8[0]);\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 390
    },
    "00416854": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00416854(int64_t arg1, ulong arg2)\n\n{\n    int64_t iVar1;\n    int64_t iStackX8;\n    int64_t iStackX16;\n    uchar auStackX24 [16];\n    \n    if (arg1 != 0) {\n        iStackX16 = -(*(arg1 + 0x80) != 0);\n        while (iStackX16 != 0) {\n            fcn.00416070(arg1 + 0x68, &iStackX16, auStackX24, &iStackX8);\n            iVar1 = *(arg1 + 0xa8);\n            *(iStackX8 + iVar1) = 0;\n            if (*(arg1 + 0xb0) == 2) {\n                *(iStackX8 + 8 + iVar1) = 0;\n            }\n            (**(arg1 + 0x28))(iStackX8);\n        }\n        fcn.00415f40(arg1 + 0x68);\n        fcn.00417b2c(arg1 + 8);\n    }\n    return;\n}\n",
        "token_count": 245
    },
    "004169cc": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004169cc(void)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.00414cc0();\n    if (*(iVar2 + 0x54) == 0) {\n        iVar2 = fcn.00414cc0();\n        *(iVar2 + 0x54) = 1;\n        iVar2 = fcn.00414cc0();\n        iVar2 = *(iVar2 + 8);\n        if ((iVar2 == 0) || (*(iVar2 + 0x40) == 0)) {\n            iVar2 = fcn.00414cc0();\n            if (*(iVar2 + 0x28) == '\\0') {\n                fcn.004164f4(0);\n            }\n        }\n        else {\n            iVar1 = fcn.0041278c(*(iVar2 + 0x40));\n            if (iVar1 != 0) {\n                (**(**(iVar2 + 0x40) + 0xc0))();\n            }\n        }\n    }\n    return;\n}\n",
        "token_count": 232
    },
    "00416a4c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.00416a4c(void)\n\n{\n    uint uVar1;\n    uchar auStack72 [32];\n    uchar auStack40 [24];\n    uint64_t uStack16;\n    \n    uStack16 = *0x444d30 ^ auStack72;\n    uVar1 = (*_sym.imp.KERNEL32.dll_GetOEMCP)();\n    (*_sym.imp.KERNEL32.dll_GetCPInfo)(uVar1, auStack40);\n    fcn.00418d10(uStack16 ^ auStack72);\n    return;\n}\n",
        "token_count": 119
    },
    "00416b58": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nuint64_t fcn.00416b58(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint64_t uVar6;\n    int32_t iVar7;\n    uint32_t uVar8;\n    int32_t iVar9;\n    uint32_t uVar10;\n    int64_t iVar11;\n    \n    if ((arg3 == 0) || (arg2 == 0)) {\n        uVar6 = 0;\n    }\n    else {\n        if ((*(arg1 + 0x20) & 1) == 0) {\n            fcn.00417a38(4, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            uVar6 = (*pcVar2)();\n            return uVar6;\n        }\n        piVar1 = arg1 + 0x40;\n        uVar8 = *piVar1 - *(arg1 + 0x38);\n        uVar6 = uVar8;\n        if (arg3 < uVar8) {\n            uVar6 = arg3;\n        }\n        iVar3 = fcn.004194d0(arg2, arg3, *(arg1 + 0x38), uVar6);\n        if (iVar3 != 0) {\n            if (iVar3 == 0xc) {\n                fcn.004129b4();\n                pcVar2 = swi(3);\n                uVar6 = (*pcVar2)();\n                return uVar6;\n            }\n            if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                fcn.004129d8();\n                pcVar2 = swi(3);\n                uVar6 = (*pcVar2)();\n                return uVar6;\n            }\n            if (iVar3 != 0x50) {\n                fcn.004129d8();\n                pcVar2 = swi(3);\n                uVar6 = (*pcVar2)();\n                return uVar6;\n            }\n        }\n        *(arg1 + 0x38) = *(arg1 + 0x38) + uVar6;\n        arg2 = arg2 + uVar6;\n        uVar8 = arg3 - uVar6;\n        if (uVar8 != 0) {\n            iVar9 = uVar8 - uVar8 % *(arg1 + 0x28);\n            iVar7 = 0;\n            iVar3 = iVar9;\n            do {\n                uVar4 = (**(**(arg1 + 0x30) + 0x68))(*(arg1 + 0x30), arg2, iVar3);\n                iVar7 = iVar7 + uVar4;\n                iVar3 = iVar3 - uVar4;\n                arg2 = arg2 + uVar4;\n                if (uVar4 == 0) break;\n            } while (iVar3 != 0);\n            uVar8 = uVar8 - iVar7;\n            if ((uVar8 != 0) && (iVar7 == iVar9)) {\n                if (*(arg1 + 0xc) == 0) {\n                    uVar4 = uVar8;\n                    if ((*(arg1 + 0x10) == 0) && (uVar4 = *(arg1 + 0x28),  *(arg1 + 0x28) < uVar8)) {\n                        uVar4 = uVar8;\n                    }\n                    iVar11 = *(arg1 + 0x48);\n                    uVar10 = 0;\n                    do {\n                        uVar5 = (**(**(arg1 + 0x30) + 0x68))(*(arg1 + 0x30), iVar11, uVar4);\n                        uVar10 = uVar10 + uVar5;\n                        uVar4 = uVar4 - uVar5;\n                        iVar11 = iVar11 + uVar5;\n                        if ((uVar5 == 0) || (uVar4 == 0)) break;\n                    } while (uVar10 < uVar8);\n                    iVar11 = *(arg1 + 0x48);\n                    *piVar1 = uVar10 + iVar11;\n                }\n                else {\n                    (**(**(arg1 + 0x30) + 0xa0))(*(arg1 + 0x30), 0, *(arg1 + 0x28), arg1 + 0x48, piVar1);\n                    iVar11 = *(arg1 + 0x48);\n                }\n                uVar4 = *piVar1 - iVar11;\n                *(arg1 + 0x38) = iVar11;\n                if (uVar8 < uVar4) {\n                    uVar4 = uVar8;\n                }\n                iVar3 = fcn.004194d0(arg2, uVar8, iVar11, uVar4);\n                if (iVar3 != 0) {\n                    if (iVar3 == 0xc) {\n                        fcn.004129b4();\n                        pcVar2 = swi(3);\n                        uVar6 = (*pcVar2)();\n                        return uVar6;\n                    }\n                    if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                        fcn.004129d8();\n                        pcVar2 = swi(3);\n                        uVar6 = (*pcVar2)();\n                        return uVar6;\n                    }\n                    if (iVar3 != 0x50) {\n                        fcn.004129d8();\n                        pcVar2 = swi(3);\n                        uVar6 = (*pcVar2)();\n                        return uVar6;\n                    }\n                }\n                *(arg1 + 0x38) = *(arg1 + 0x38) + uVar4;\n                uVar8 = uVar8 - uVar4;\n            }\n        }\n        uVar6 = arg3 - uVar8;\n    }\n    return uVar6;\n}\n",
        "token_count": 1310
    },
    "00416d1c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00416d1c(int64_t arg1)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    \n    if ((*(arg1 + 0x20) & 1) == 0) {\n        piVar1 = arg1 + 0x48;\n        if (*(arg1 + 0xc) == 0) {\n            iVar2 = *piVar1;\n            if (*(arg1 + 0x38) != iVar2) {\n                (**(**(arg1 + 0x30) + 0x70))(*(arg1 + 0x30), iVar2, *(arg1 + 0x38) - iVar2);\n            }\n        }\n        else {\n            if (*(arg1 + 0x38) != *piVar1) {\n                (**(**(arg1 + 0x30) + 0xa0))(*(arg1 + 0x30), 2, *(arg1 + 0x38) - *piVar1, 0, 0);\n            }\n            (**(**(arg1 + 0x30) + 0xa0))(*(arg1 + 0x30), 1, *(arg1 + 0x28), piVar1, arg1 + 0x40);\n        }\n        iVar2 = *piVar1;\n    }\n    else {\n        if (*(arg1 + 0x40) != *(arg1 + 0x38)) {\n            (**(**(arg1 + 0x30) + 0x50))(*(arg1 + 0x30), *(arg1 + 0x38) - *(arg1 + 0x40), 1);\n        }\n        iVar2 = *(arg1 + 0x40);\n    }\n    *(arg1 + 0x38) = iVar2;\n    return;\n}\n",
        "token_count": 402
    },
    "00416dd8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00416dd8(int64_t arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint64_t arg1_00;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    uint64_t arg4;\n    \n    if ((*(arg1 + 0x20) & 1) == 0) {\n        fcn.00417a38(4, *(arg1 + 0x18));\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    piVar1 = arg1 + 0x40;\n    uVar4 = *piVar1 - *(arg1 + 0x38);\n    arg4 = uVar4;\n    uVar7 = uVar4 + arg2;\n    if (*(arg1 + 0xc) == 0) {\n        arg1_00 = *(arg1 + 0x48);\n        if (arg1_00 < *(arg1 + 0x38)) {\n            if (0 < uVar4) {\n                iVar3 = fcn.00418760(arg1_00, *piVar1 - arg1_00, *(arg1 + 0x38), arg4);\n                if (iVar3 != 0) {\n                    if (iVar3 == 0xc) {\n                        fcn.004129b4();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                        fcn.004129d8();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if (iVar3 != 0x50) {\n                        fcn.004129d8();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n                arg1_00 = *(arg1 + 0x48);\n                *(arg1 + 0x38) = arg1_00;\n                *piVar1 = arg4 + arg1_00;\n            }\n            if (*(arg1 + 0x10) == 0) {\n                arg2._0_4_ = *(arg1 + 0x28);\n            }\n            arg2._0_4_ = arg2 - uVar4;\n            iVar6 = arg4 + arg1_00;\n            do {\n                uVar4 = (**(**(arg1 + 0x30) + 0x68))(*(arg1 + 0x30), iVar6, arg2);\n                uVar5 = arg4 + uVar4;\n                arg4 = uVar5;\n                arg2._0_4_ = arg2 - uVar4;\n                iVar6 = iVar6 + uVar4;\n                if ((uVar4 == 0) || (arg2 == 0)) break;\n            } while (uVar5 < uVar7);\n            *(arg1 + 0x38) = *(arg1 + 0x48);\n            *piVar1 = arg4 + *(arg1 + 0x48);\n        }\n    }\n    else {\n        if (uVar4 != 0) {\n            (**(**(arg1 + 0x30) + 0x50))();\n        }\n        (**(**(arg1 + 0x30) + 0xa0))(*(arg1 + 0x30), 0, *(arg1 + 0x28), arg1 + 0x48, piVar1);\n        *(arg1 + 0x38) = *(arg1 + 0x48);\n    }\n    if (*piVar1 - *(arg1 + 0x38) < uVar7) {\n        fcn.00417a38(3, 0);\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 888
    },
    "004173d8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.004173d8(int64_t arg1, int64_t arg2, ulong arg3)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    uint32_t uVar4;\n    uint64_t arg4;\n    \n    if ((arg3 != 0) && (arg2 != 0)) {\n        if ((~*(arg1 + 0x20) & 1) == 0) {\n            fcn.00417a38(2, *(arg1 + 0x18));\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        piVar1 = arg1 + 0x40;\n        uVar4 = *piVar1 - *(arg1 + 0x38);\n        arg4 = uVar4;\n        if (arg3 < uVar4) {\n            arg4 = arg3;\n        }\n        iVar3 = fcn.004194d0(*(arg1 + 0x38), *piVar1 - *(arg1 + 0x38), arg2, arg4);\n        if (iVar3 != 0) {\n            if (iVar3 == 0xc) {\n                fcn.004129b4();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                fcn.004129d8();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if (iVar3 != 0x50) {\n                fcn.004129d8();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n        }\n        *(arg1 + 0x38) = *(arg1 + 0x38) + arg4;\n        arg3._0_4_ = arg3 - arg4;\n        if (arg3 != 0) {\n            fcn.00416d1c(arg1);\n            uVar4 = arg3 - arg3 % *(arg1 + 0x28);\n            (**(**(arg1 + 0x30) + 0x70))(*(arg1 + 0x30), arg2 + arg4, uVar4);\n            arg3._0_4_ = arg3 - uVar4;\n            if (*(arg1 + 0xc) != 0) {\n                (**(**(arg1 + 0x30) + 0xa0))(*(arg1 + 0x30), 1, *(arg1 + 0x28), arg1 + 0x48, piVar1);\n                *(arg1 + 0x38) = *(arg1 + 0x48);\n            }\n            if (*(arg1 + 0x28) <= arg3) {\n                fcn.004129d8();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            if (*(arg1 + 0x38) != *(arg1 + 0x48)) {\n                fcn.004129d8();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            iVar3 = fcn.004194d0(*(arg1 + 0x38), arg3, arg2 + arg4 + uVar4, arg3);\n            if (iVar3 != 0) {\n                if (iVar3 == 0xc) {\n                    fcn.004129b4();\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n                if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                    fcn.004129d8();\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n                if (iVar3 != 0x50) {\n                    fcn.004129d8();\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n            }\n            *(arg1 + 0x38) = *(arg1 + 0x38) + arg3;\n        }\n    }\n    return;\n}\n",
        "token_count": 928
    },
    "00417af8": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nuint32_t * fcn.00417af8(uint32_t *arg1, ulong arg2, ulong arg3)\n\n{\n    *(arg1 + 4) = 0;\n    *(arg1 + 2) = 0;\n    if (arg2 < 8) {\n        arg2._0_4_ = 8;\n    }\n    if (arg3 < 2) {\n        arg3._0_4_ = 0x40;\n    }\n    *arg1 = arg2;\n    arg1[1] = arg3;\n    return arg1;\n}\n",
        "token_count": 126
    },
    "00417b5c": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00417b5c(uint32_t *arg1)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    ulong *puVar3;\n    \n    if (*(arg1 + 4) == 0) {\n        iVar2 = fcn.00417aa0(arg1 + 2, arg1[1], *arg1);\n        uVar1 = arg1[1];\n        puVar3 = iVar2 + 8 + (uVar1 - 1) * *arg1;\n        while (uVar1 = uVar1 - 1,  -1 < uVar1) {\n            *puVar3 = *(arg1 + 4);\n            *(arg1 + 4) = puVar3;\n            puVar3 = puVar3 - *arg1;\n        }\n    }\n    *(arg1 + 4) = **(arg1 + 4);\n    return;\n}\n",
        "token_count": 202
    },
    "004183f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004182b5)\n\nuint8_t * fcn.004183f0(uint8_t *arg1, uint8_t *arg2, int64_t arg3)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint *puVar4;\n    uint8_t *puVar5;\n    uint8_t *arg1_00;\n    int64_t arg3_00;\n    bool bVar6;\n    \n    iVar2 = fcn.0041efc0();\n    iVar3 = *(iVar2 + 0xb8);\n    if ((*(iVar2 + 0xc0) != *0x445710) && ((*0x445598 & *(iVar2 + 200)) == 0)) {\n        fcn.0041ec30();\n    }\n    if ((iVar3 != *0x445490) && ((*0x445598 & *(iVar2 + 200)) == 0)) {\n        iVar3 = fcn.0041e050();\n    }\n    bVar6 = (*(iVar2 + 200) & 2) == 0;\n    if (bVar6) {\n        *(iVar2 + 200) = *(iVar2 + 200) | 2;\n    }\n    if (((arg1 == NULL) && (arg3 != 0)) || ((arg2 == NULL && (arg3 != 0)))) {\n        puVar4 = fcn.0041d1a0();\n        *puVar4 = 0x16;\n        fcn.0041f4d0(0, 0, 0, 0);\n        if (bVar6) {\n            *(iVar2 + 200) = *(iVar2 + 200) & 0xfffffffd;\n        }\n        arg1 = NULL;\n    }\n    else if (*(iVar3 + 8) == 0) {\n        arg1 = fcn.0041f2b0(arg1, arg2, arg3);\n        if (bVar6) {\n            *(iVar2 + 200) = *(iVar2 + 200) & 0xfffffffd;\n        }\n    }\n    else {\n        puVar5 = arg1;\n        if (arg3 != 0) {\n            do {\n                uVar1 = *arg2;\n                arg3_00 = arg3 + -1;\n                if ((*(uVar1 + 0x1d + iVar3) & 4) == 0) {\n                    *puVar5 = uVar1;\n                    arg1_00 = puVar5 + 1;\n                    arg2 = arg2 + 1;\n                    if (uVar1 == 0) {\ncode_r0x00418383:\n                        if (arg3_00 != 0) {\n                            fcn.00418a70(arg1_00, 0, arg3_00);\n                        }\n                        break;\n                    }\n                }\n                else {\n                    *puVar5 = uVar1;\n                    if (arg3_00 == 0) {\n                        *puVar5 = 0;\n                        break;\n                    }\n                    uVar1 = arg2[1];\n                    arg1_00 = puVar5 + 2;\n                    arg3_00 = arg3 + -2;\n                    puVar5[1] = uVar1;\n                    arg2 = arg2 + 2;\n                    if (uVar1 == 0) {\n                        *puVar5 = 0;\n                        goto code_r0x00418383;\n                    }\n                }\n                puVar5 = arg1_00;\n                arg3 = arg3_00;\n            } while (arg3_00 != 0);\n        }\n        if (bVar6) {\n            *(iVar2 + 200) = *(iVar2 + 200) & 0xfffffffd;\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 841
    },
    "00418750": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004184bd)\n\nulong fcn.00418750(uint8_t *arg1, uint8_t *arg2)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    ulong uVar3;\n    uint64_t uVar4;\n    uint16_t uVar5;\n    uint64_t uVar6;\n    uint8_t *puVar7;\n    uint8_t *puVar8;\n    int64_t iVar9;\n    uint8_t uStack56;\n    uint8_t uStack55;\n    int64_t iStack48;\n    int64_t iStack40;\n    int64_t iStack32;\n    char cStack24;\n    \n    cStack24 = '\\0';\n    iStack32 = fcn.0041efc0();\n    iStack48 = *(iStack32 + 0xc0);\n    iStack40 = *(iStack32 + 0xb8);\n    if ((iStack48 != *0x445710) && ((*0x445598 & *(iStack32 + 200)) == 0)) {\n        iStack48 = fcn.0041ec30();\n    }\n    if ((iStack40 != *0x445490) && ((*0x445598 & *(iStack32 + 200)) == 0)) {\n        iStack40 = fcn.0041e050();\n    }\n    if ((*(iStack32 + 200) & 2) == 0) {\n        *(iStack32 + 200) = *(iStack32 + 200) | 2;\n        cStack24 = '\\x01';\n    }\n    if ((arg1 == NULL) || (arg2 == NULL)) {\n        puVar2 = fcn.0041d1a0();\n        *puVar2 = 0x16;\n        fcn.0041f4d0(0, 0, 0, 0);\n        if (cStack24 != '\\0') {\n            *(iStack32 + 200) = *(iStack32 + 200) & 0xfffffffd;\n        }\n        uVar3 = 0x7fffffff;\n    }\n    else {\n        iVar9 = iStack40;\n        if (*(iStack40 + 8) == 0) {\n            uVar3 = fcn.0041fd20(arg1, arg2, &iStack48);\n            if (cStack24 != '\\0') {\n                *(iStack32 + 200) = *(iStack32 + 200) & 0xfffffffd;\n            }\n        }\n        else {\n            do {\n                uVar6 = *arg1;\n                puVar8 = arg1 + 1;\n                if ((*(uVar6 + 0x1d + iVar9) & 4) == 0) {\n                    if ((*(uVar6 + 0x1d + iVar9) & 0x10) != 0) {\n                        uVar6 = *(uVar6 + 0x11d + iVar9);\n                    }\n                }\n                else if (*puVar8 == 0) {\n                    uVar6 = 0;\n                }\n                else {\n                    iVar1 = fcn.0041fb60(&iStack48, *(iVar9 + 0xc), 0x200, arg1);\n                    iVar9 = iStack40;\n                    if (iVar1 == 1) {\n                        uVar6 = uStack56;\n                        puVar8 = arg1 + 2;\n                    }\n                    else {\n                        if (iVar1 != 2) goto code_r0x004186dc;\n                        uVar6 = uStack56 * 0x100 + uStack55;\n                        puVar8 = arg1 + 2;\n                    }\n                }\n                uVar4 = *arg2;\n                puVar7 = arg2 + 1;\n                if ((*(uVar4 + 0x1d + iVar9) & 4) == 0) {\n                    if ((*(uVar4 + 0x1d + iVar9) & 0x10) != 0) {\n                        uVar4 = *(uVar4 + 0x11d + iVar9);\n                    }\n                }\n                else if (*puVar7 == 0) {\n                    uVar4 = 0;\n                }\n                else {\n                    iVar1 = fcn.0041fb60(&iStack48, *(iVar9 + 0xc), 0x200, arg2);\n                    iVar9 = iStack40;\n                    if (iVar1 == 1) {\n                        uVar4 = uStack56;\n                        puVar7 = arg2 + 2;\n                    }\n                    else {\n                        if (iVar1 != 2) {\ncode_r0x004186dc:\n                            puVar2 = fcn.0041d1a0();\n                            *puVar2 = 0x16;\n                            if (cStack24 != '\\0') {\n                                *(iStack32 + 200) = *(iStack32 + 200) & 0xfffffffd;\n                            }\n                            return 0x7fffffff;\n                        }\n                        uVar4 = uStack56 * 0x100 + uStack55;\n                        puVar7 = arg2 + 2;\n                    }\n                }\n                uVar5 = uVar6;\n                if (uVar5 != uVar4) {\n                    uVar3 = 0xffffffff;\n                    if (uVar4 < uVar5) {\n                        uVar3 = 1;\n                    }\n                    if (cStack24 == '\\0') {\n                        return uVar3;\n                    }\n                    *(iStack32 + 200) = *(iStack32 + 200) & 0xfffffffd;\n                    return uVar3;\n                }\n                arg2 = puVar7;\n                arg1 = puVar8;\n            } while (uVar5 != 0);\n            if (cStack24 != uVar6) {\n                *(iStack32 + 200) = *(iStack32 + 200) & 0xfffffffd;\n            }\n            uVar3 = 0;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 1319
    },
    "00418a50": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00418902)\n\nuint fcn.00418a50(uint8_t *arg1, uint64_t arg2)\n\n{\n    uint8_t uVar1;\n    uint uVar2;\n    uint8_t *puVar3;\n    uint8_t uVar4;\n    int32_t iVar5;\n    uint64_t uVar6;\n    uint *puVar7;\n    int64_t iVar8;\n    uint8_t *puVar9;\n    uint8_t *arg4;\n    uint8_t uStack56;\n    uint8_t uStack55;\n    int64_t iStack48;\n    int64_t iStack40;\n    int64_t iStack32;\n    char cStack24;\n    \n    if (arg1 == NULL) {\n        if (arg2 == 0) {\n            return 0;\n        }\n    }\n    else if (arg2 != 0) {\n        uVar6 = fcn.0041ffa0(arg1, arg2);\n        if (uVar6 < arg2) {\n            cStack24 = '\\0';\n            iStack32 = fcn.0041efc0();\n            iStack48 = *(iStack32 + 0xc0);\n            iStack40 = *(iStack32 + 0xb8);\n            if ((iStack48 != *0x445710) && ((*0x445598 & *(iStack32 + 200)) == 0)) {\n                iStack48 = fcn.0041ec30();\n            }\n            if ((iStack40 != *0x445490) && ((*0x445598 & *(iStack32 + 200)) == 0)) {\n                iStack40 = fcn.0041e050();\n            }\n            if ((*(iStack32 + 200) & 2) == 0) {\n                *(iStack32 + 200) = *(iStack32 + 200) | 2;\n                cStack24 = '\\x01';\n            }\n            uVar4 = *arg1;\n            arg4 = arg1;\n            puVar3 = arg1;\n            iVar8 = iStack40;\n            while (uVar4 != 0) {\n                uVar4 = *arg4;\n                uVar1 = *(uVar4 + 0x1d + iVar8);\n                if ((uVar1 & 4) == 0) {\n                    if ((uVar1 & 0x20) != 0) {\n                        uVar4 = *(uVar4 + iVar8 + 0x11d);\n                    }\n                    *puVar3 = uVar4;\n                    puVar9 = puVar3 + 1;\n                }\n                else {\n                    iVar5 = fcn.0041fb60(&iStack48, *(iVar8 + 0xc), 0x200, arg4);\n                    if (iVar5 == 0) {\n                        puVar7 = fcn.0041d1a0();\n                        *puVar7 = 0x2a;\n                        *arg1 = 0;\n                        puVar7 = fcn.0041d1a0();\n                        uVar2 = *puVar7;\n                        if (cStack24 != '\\0') {\n                            *(iStack32 + 200) = *(iStack32 + 200) & 0xfffffffd;\n                            return uVar2;\n                        }\n                        return uVar2;\n                    }\n                    puVar9 = puVar3 + 1;\n                    arg4 = arg4 + 1;\n                    *puVar3 = uStack56;\n                    iVar8 = iStack40;\n                    if (1 < iVar5) {\n                        puVar9 = puVar3 + 2;\n                        puVar3[1] = uStack55;\n                    }\n                }\n                arg4 = arg4 + 1;\n                puVar3 = puVar9;\n                uVar4 = *arg4;\n            }\n            *puVar3 = 0;\n            if (cStack24 == '\\0') {\n                return 0;\n            }\n            *(iStack32 + 200) = *(iStack32 + 200) & 0xfffffffd;\n            return 0;\n        }\n        *arg1 = 0;\n    }\n    puVar7 = fcn.0041d1a0();\n    *puVar7 = 0x16;\n    fcn.0041f4d0(0, 0, 0, 0);\n    return 0x16;\n}\n",
        "token_count": 966
    },
    "00418c40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nvoid fcn.00418c40(ulong arg1)\n\n{\n    if (*0x44a5a8 == 0) {\n        fcn.0041ffc0(0x445720, arg1, 0, 10);\n        return;\n    }\n    fcn.0041ffc0(0, arg1, 0, 10);\n    return;\n}\n",
        "token_count": 82
    },
    "00418f70": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00418e3f)\n\nuint64_t fcn.00418f70(uint64_t arg1)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    uchar uStackX8;\n    uchar uStackX9;\n    uint16_t uStackX16;\n    int16_t iStackX18;\n    int64_t iStack40;\n    int64_t iStack32;\n    int64_t iStack24;\n    char cStack16;\n    \n    arg1 = arg1 & 0xffffffff;\n    cStack16 = '\\0';\n    iStack24 = fcn.0041efc0();\n    iStack40 = *(iStack24 + 0xc0);\n    iStack32 = *(iStack24 + 0xb8);\n    if ((iStack40 != *0x445710) && ((*0x445598 & *(iStack24 + 200)) == 0)) {\n        iStack40 = fcn.0041ec30();\n    }\n    if ((iStack32 != *0x445490) && ((*0x445598 & *(iStack24 + 200)) == 0)) {\n        iStack32 = fcn.0041e050();\n    }\n    if ((*(iStack24 + 200) & 2) == 0) {\n        *(iStack24 + 200) = *(iStack24 + 200) | 2;\n        cStack16 = '\\x01';\n    }\n    if (arg1 < 0x100) {\n        if (*(iStack40 + 0x10c) < 2) {\n            uVar2 = *(*(iStack40 + 0x140) + arg1 * 2) & 8;\n        }\n        else {\n            uVar2 = fcn.00421650(arg1, 8, &iStack40);\n        }\n        if (cStack16 != '\\0') {\n            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n        }\n        return uVar2;\n    }\n    uStackX16 = 0;\n    uStackX9 = arg1;\n    iStackX18 = 0;\n    uStackX8 = arg1 >> 8;\n    if (*(iStack32 + 8) == 0) {\n        if (cStack16 != '\\0') {\n            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n        }\n        return 0;\n    }\n    uVar2 = 1;\n    iVar1 = fcn.00421ac0(0, 1, &uStackX8, 2);\n    if (iVar1 != 0) {\n        if ((iStackX18 != 0) || ((uStackX16 & 8) == 0)) {\n            uVar2 = 0;\n        }\n        if (cStack16 != '\\0') {\n            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n        }\n        return uVar2;\n    }\n    if (cStack16 != '\\0') {\n        *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n    }\n    return 0;\n}\n",
        "token_count": 722
    },
    "00419120": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041901a)\n\nuint8_t * fcn.00419120(uint8_t *arg1, ulong arg2)\n\n{\n    uint8_t uVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    uint *puVar4;\n    uint8_t *puVar5;\n    bool bVar6;\n    \n    iVar2 = fcn.0041efc0();\n    iVar3 = *(iVar2 + 0xb8);\n    if ((*(iVar2 + 0xc0) != *0x445710) && ((*0x445598 & *(iVar2 + 200)) == 0)) {\n        fcn.0041ec30();\n    }\n    if ((iVar3 != *0x445490) && ((*0x445598 & *(iVar2 + 200)) == 0)) {\n        iVar3 = fcn.0041e050();\n    }\n    bVar6 = (*(iVar2 + 200) & 2) == 0;\n    if (bVar6) {\n        *(iVar2 + 200) = *(iVar2 + 200) | 2;\n    }\n    if (arg1 == NULL) {\n        puVar4 = fcn.0041d1a0();\n        *puVar4 = 0x16;\n        fcn.0041f4d0(0, 0, 0, 0);\n    }\n    else {\n        if (*(iVar3 + 8) == 0) {\n            arg1 = fcn.00421c20(arg1);\ncode_r0x00419079:\n            if (!bVar6) {\n                return arg1;\n            }\n            *(iVar2 + 200) = *(iVar2 + 200) & 0xfffffffd;\n            return arg1;\n        }\n        uVar1 = *arg1;\n        while (uVar1 != 0) {\n            if ((*(uVar1 + 0x1d + iVar3) & 4) == 0) {\n                puVar5 = arg1;\n                if (arg2 == uVar1) break;\n            }\n            else {\n                if (arg1[1] == 0) goto code_r0x004190ed;\n                puVar5 = arg1 + 1;\n                if (arg2 == CONCAT11(uVar1, arg1[1])) goto code_r0x00419079;\n            }\n            arg1 = puVar5 + 1;\n            uVar1 = puVar5[1];\n        }\n        if (arg2 == uVar1) {\n            if (!bVar6) {\n                return arg1;\n            }\n            *(iVar2 + 200) = *(iVar2 + 200) & 0xfffffffd;\n            return arg1;\n        }\n    }\ncode_r0x004190ed:\n    if (bVar6) {\n        *(iVar2 + 200) = *(iVar2 + 200) & 0xfffffffd;\n    }\n    return NULL;\n}\n",
        "token_count": 653
    },
    "004194c0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00419379)\n\nint32_t fcn.004194c0(uint8_t *arg1, uint8_t *arg2)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint *puVar6;\n    uint16_t uVar7;\n    uint64_t uVar8;\n    uint64_t uVar9;\n    uint8_t *puVar10;\n    uint8_t *puVar11;\n    bool bVar12;\n    \n    iVar4 = fcn.0041efc0();\n    iVar5 = *(iVar4 + 0xb8);\n    if ((*(iVar4 + 0xc0) != *0x445710) && ((*0x445598 & *(iVar4 + 200)) == 0)) {\n        fcn.0041ec30();\n    }\n    if ((iVar5 != *0x445490) && ((*0x445598 & *(iVar4 + 200)) == 0)) {\n        iVar5 = fcn.0041e050();\n    }\n    bVar12 = (*(iVar4 + 200) & 2) == 0;\n    if (bVar12) {\n        *(iVar4 + 200) = *(iVar4 + 200) | 2;\n    }\n    if ((arg1 == NULL) || (arg2 == NULL)) {\n        puVar6 = fcn.0041d1a0();\n        *puVar6 = 0x16;\n        fcn.0041f4d0(0, 0, 0, 0);\n        if (bVar12) {\n            *(iVar4 + 200) = *(iVar4 + 200) & 0xfffffffd;\n        }\n        iVar3 = 0x7fffffff;\n    }\n    else if (*(iVar5 + 8) == 0) {\n        iVar5 = arg2 - arg1;\n        do {\n            uVar1 = *arg1;\n            if (uVar1 != arg1[iVar5]) {\n                uVar2 = uVar1 < arg1[iVar5];\n                iVar3 = (1 - uVar2) - (uVar2 != 0);\n                goto code_r0x00419495;\n            }\n            arg1 = arg1 + 1;\n        } while (uVar1 != 0);\n        iVar3 = 0;\ncode_r0x00419495:\n        if (bVar12) {\n            *(iVar4 + 200) = *(iVar4 + 200) & 0xfffffffd;\n        }\n    }\n    else {\n        do {\n            uVar8 = *arg1;\n            puVar10 = arg1 + 1;\n            if ((*(uVar8 + 0x1d + iVar5) & 4) != 0) {\n                if (*puVar10 == 0) {\n                    uVar8 = 0;\n                }\n                else {\n                    uVar8 = CONCAT11(*arg1, *puVar10);\n                    puVar10 = arg1 + 2;\n                }\n            }\n            uVar9 = *arg2;\n            puVar11 = arg2 + 1;\n            if ((*(uVar9 + 0x1d + iVar5) & 4) != 0) {\n                if (*puVar11 == 0) {\n                    uVar9 = 0;\n                }\n                else {\n                    uVar9 = CONCAT11(*arg2, *puVar11);\n                    puVar11 = arg2 + 2;\n                }\n            }\n            uVar7 = uVar8;\n            if (uVar7 != uVar9) {\n                iVar3 = -1;\n                if (uVar9 < uVar7) {\n                    iVar3 = 1;\n                }\n                goto code_r0x00419495;\n            }\n            arg1 = puVar10;\n            arg2 = puVar11;\n        } while (uVar7 != 0);\n        if (bVar12) {\n            *(iVar4 + 200) = *(iVar4 + 200) & 0xfffffffd;\n        }\n        iVar3 = 0;\n    }\n    return iVar3;\n}\n",
        "token_count": 921
    },
    "0041c110": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0041c110(char *arg1, char *arg2)\n\n{\n    uint *puVar1;\n    int64_t arg4;\n    ulong uVar2;\n    uchar auStack72 [32];\n    ulong uStack40;\n    int64_t iStack24;\n    uchar *puStack16;\n    \n    puStack16 = &stack0xffffffffffffffb8;\n    if (arg1 == NULL) {\n        puStack16 = &stack0xffffffffffffffb8;\n        puVar1 = fcn.0041d1a0();\n        *puVar1 = 0x16;\n        uStack40 = 0;\n        fcn.0041f4d0(0, 0, 0, 0);\n        uVar2 = 0;\n    }\n    else if (arg2 == NULL) {\n        puStack16 = &stack0xffffffffffffffb8;\n        puVar1 = fcn.0041d1a0();\n        *puVar1 = 0x16;\n        uStack40 = 0;\n        fcn.0041f4d0(0, 0, 0, 0);\n        uVar2 = 0;\n    }\n    else if (*arg2 == '\\0') {\n        puStack16 = &stack0xffffffffffffffb8;\n        puVar1 = fcn.0041d1a0();\n        *puVar1 = 0x16;\n        uStack40 = 0;\n        fcn.0041f4d0(0, 0, 0, 0);\n        uVar2 = 0;\n    }\n    else {\n        arg4 = fcn.00426660();\n        iStack24 = arg4;\n        if (arg4 == 0) {\n            puVar1 = fcn.0041d1a0();\n            *puVar1 = 0x18;\n            uVar2 = 0;\n        }\n        else if (*arg1 == '\\0') {\n            puVar1 = fcn.0041d1a0();\n            *puVar1 = 0x16;\n            fcn.00426800(puStack16, 0x41c0ae);\n            uVar2 = 0;\n        }\n        else {\n            uVar2 = fcn.004262e0(arg1, arg2, 0x40, arg4);\n            fcn.00425df0(arg4);\n        }\n    }\n    return uVar2;\n}\n",
        "token_count": 536
    },
    "0041d610": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.0041d610(uint *arg1)\n\n{\n    uint *puVar1;\n    \n    if ((arg1 != NULL) && (*0x44a50c != 0)) {\n        *arg1 = *0x44a518;\n        return 0;\n    }\n    puVar1 = fcn.0041d1a0();\n    *puVar1 = 0x16;\n    fcn.0041f4d0(0, 0, 0, 0);\n    return 0x16;\n}\n",
        "token_count": 119
    },
    "0041d870": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041d805)\n// WARNING: Removing unreachable block (ram,0x0041d82e)\n\nvoid fcn.0041d870(ulong arg1)\n\n{\n    code *pcVar1;\n    code **ppcVar2;\n    code **ppcVar3;\n    \n    fcn.00428b20(8);\n    if (*0x44a56c != 1) {\n        *0x44a568 = 1;\n        *0x44a524 = 0;\n        ppcVar2 = fcn.0041eda0(*0x44c6d0);\n        ppcVar3 = fcn.0041eda0(*0x44c6c8);\n        if (ppcVar2 != NULL) {\n            while (ppcVar3 = ppcVar3 + -1,  ppcVar2 <= ppcVar3) {\n                if (*ppcVar3 != NULL) {\n                    (**ppcVar3)();\n                }\n            }\n        }\n        fcn.0041d570(0x434968, 0x434980);\n        fcn.0041d570(0x434988, 0x434998);\n    }\n    *0x44a56c = 1;\n    fcn.004289f0(8);\n    fcn.0041d510(arg1);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 322
    },
    "004259f0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00425bb0)\n// WARNING: Removing unreachable block (ram,0x00425b57)\n// WARNING: Removing unreachable block (ram,0x00425b61)\n\nint32_t fcn.004259f0(ulong *arg1)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint32_t uVar5;\n    int64_t iVar6;\n    \n    if (arg1 == NULL) {\n        iVar3 = 0;\n        fcn.00428b20(1);\n        for (uVar5 = 0; uVar5 < *0x44c6c0; uVar5 = uVar5 + 1) {\n            iVar6 = uVar5;\n            if ((*(*0x44b6a0 + iVar6 * 8) != 0) && (iVar1 = *(*0x44b6a0 + iVar6 * 8),  (*(iVar1 + 0x18) & 0x83) != 0)) {\n                fcn.00425dd0(uVar5, iVar1);\n                iVar1 = *(*0x44b6a0 + iVar6 * 8);\n                uVar2 = *(iVar1 + 0x18);\n                if (((uVar2 & 0x83) != 0) && (((uVar2 & 2) != 0 && (iVar4 = fcn.004259f0(iVar1),  iVar4 == -1)))) {\n                    iVar3 = -1;\n                }\n                fcn.00425e40(uVar5, *(*0x44b6a0 + iVar6 * 8));\n            }\n        }\n        fcn.004289f0(1);\n        return iVar3;\n    }\n    iVar3 = 0;\n    if ((((*(arg1 + 3) & 3) == 2) && (iVar3 = 0,  (*(arg1 + 3) & 0x108) != 0)) &&\n       (uVar5 = *arg1 - *(arg1 + 2),  0 < uVar5)) {\n        uVar2 = fcn.004258e0(arg1);\n        uVar2 = fcn.0042b540(uVar2, arg1[2], uVar5);\n        if (uVar2 == uVar5) {\n            iVar3 = 0;\n            if (*(arg1 + 3) < '\\0') {\n                *(arg1 + 3) = *(arg1 + 3) & 0xfffffffd;\n            }\n        }\n        else {\n            *(arg1 + 3) = *(arg1 + 3) | 0x20;\n            iVar3 = -1;\n        }\n    }\n    *arg1 = arg1[2];\n    *(arg1 + 1) = 0;\n    if (iVar3 == 0) {\n        if ((*(arg1 + 3) >> 0xe & 1) == 0) {\n            return 0;\n        }\n        uVar5 = fcn.004258e0(arg1);\n        iVar3 = fcn.0042c680(uVar5);\n        return -(iVar3 != 0);\n    }\n    return -1;\n}\n",
        "token_count": 724
    },
    "0042bcb0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nulong fcn.0042bcb0(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    int64_t arg1_00;\n    ulong uVar4;\n    code *pcVar5;\n    int64_t iVar6;\n    int32_t iStack56;\n    uint32_t uStack52;\n    uchar auStack48 [8];\n    uchar auStack40 [8];\n    uint8_t uStack32;\n    \n    iVar2 = fcn.0041ed40();\n    iVar6 = 0;\n    iStack56 = 0;\n    uStack52 = 0;\n    if (*0x44b380 == 0) {\n        iVar3 = (*_sym.imp.KERNEL32.dll_LoadLibraryA)(\"USER32.DLL\");\n        if ((iVar3 == 0) || (arg1_00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, 0x439510),  arg1_00 == 0)) {\n            return 0;\n        }\n        *0x44b380 = fcn.0041ecd0(arg1_00);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"GetActiveWindow\");\n        *0x44b388 = fcn.0041ecd0(uVar4);\n        uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, 0x4394e8);\n        *0x44b390 = fcn.0041ecd0(uVar4);\n        iVar1 = fcn.0041d5c0(&iStack56);\n        if (iVar1 != 0) {\n            fcn.0041f430(0, 0, 0, 0, 0);\n        }\n        if (iStack56 == 2) {\n            uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"GetUserObjectInformationA\");\n            *0x44b3a0 = fcn.0041ecd0(uVar4);\n            if (*0x44b3a0 != 0) {\n                uVar4 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar3, \"GetProcessWindowStation\");\n                *0x44b398 = fcn.0041ecd0(uVar4);\n            }\n        }\n    }\n    if ((*0x44b398 == iVar2) || (*0x44b3a0 == iVar2)) {\ncode_r0x0042be73:\n        if (*0x44b388 != iVar2) {\n            pcVar5 = fcn.0041eda0(*0x44b388);\n            iVar6 = (*pcVar5)();\n            if ((iVar6 != 0) && (*0x44b390 != iVar2)) {\n                pcVar5 = fcn.0041eda0(*0x44b390);\n                iVar6 = (*pcVar5)(iVar6);\n            }\n        }\n    }\n    else {\n        pcVar5 = fcn.0041eda0(*0x44b398);\n        iVar3 = (*pcVar5)();\n        if (iVar3 != 0) {\n            pcVar5 = fcn.0041eda0(*0x44b3a0);\n            iVar1 = (*pcVar5)(iVar3, 1, auStack40, 0xc, auStack48);\n            if ((iVar1 != 0) && ((uStack32 & 1) != 0)) goto code_r0x0042be73;\n        }\n        iVar1 = fcn.0041d610(&uStack52);\n        if (iVar1 != 0) {\n            fcn.0041f430(0, 0, 0, 0, 0);\n        }\n        if (uStack52 < 4) {\n            arg3._0_4_ = arg3 | 0x40000;\n        }\n        else {\n            arg3._0_4_ = arg3 | 0x200000;\n        }\n    }\n    pcVar5 = fcn.0041eda0(*0x44b380);\n    uVar4 = (*pcVar5)(iVar6, arg1, arg2, arg3);\n    return uVar4;\n}\n",
        "token_count": 934
    },
    "0042d4e0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042d364)\n\nulong fcn.0042d4e0(uint8_t *arg1, uint8_t *arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    uint *puVar4;\n    uint16_t uVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    uint8_t *puVar8;\n    uint8_t *puVar9;\n    bool bVar10;\n    \n    if (arg3 == 0) {\n        uVar3 = 0;\n    }\n    else {\n        iVar1 = fcn.0041efc0();\n        iVar2 = *(iVar1 + 0xb8);\n        if ((*(iVar1 + 0xc0) != *0x445710) && ((*0x445598 & *(iVar1 + 200)) == 0)) {\n            fcn.0041ec30();\n        }\n        if ((iVar2 != *0x445490) && ((*0x445598 & *(iVar1 + 200)) == 0)) {\n            iVar2 = fcn.0041e050();\n        }\n        bVar10 = (*(iVar1 + 200) & 2) == 0;\n        if (bVar10) {\n            *(iVar1 + 200) = *(iVar1 + 200) | 2;\n        }\n        if (*(iVar2 + 8) == 0) {\n            uVar3 = fcn.0042a750(arg1, arg2, arg3);\ncode_r0x0042d4ac:\n            if (bVar10) {\n                *(iVar1 + 200) = *(iVar1 + 200) & 0xfffffffd;\n            }\n        }\n        else {\n            if ((arg1 != NULL) && (arg2 != NULL)) {\n                do {\n                    uVar6 = *arg1;\n                    iVar7 = arg3 + -1;\n                    puVar9 = arg1 + 1;\n                    if ((*(uVar6 + 0x1d + iVar2) & 4) == 0) {\ncode_r0x0042d439:\n                        uVar5 = uVar6;\n                        uVar6 = *arg2;\n                        puVar8 = arg2 + 1;\n                        if ((*(uVar6 + 0x1d + iVar2) & 4) != 0) {\n                            if (iVar7 == 0) {\n                                uVar6 = 0;\n                            }\n                            else {\n                                iVar7 = arg3 + -2;\n                                if (*puVar8 == 0) {\n                                    uVar6 = 0;\n                                }\n                                else {\n                                    uVar6 = CONCAT11(*arg2, *puVar8);\n                                    puVar8 = arg2 + 2;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        if (iVar7 != 0) {\n                            if (*puVar9 == 0) {\n                                uVar6 = 0;\n                            }\n                            else {\n                                uVar6 = CONCAT11(*arg1, *puVar9);\n                                puVar9 = arg1 + 2;\n                            }\n                            goto code_r0x0042d439;\n                        }\n                        uVar5 = 0;\n                        if ((*(*arg2 + 0x1d + iVar2) & 4) != 0) {\ncode_r0x0042d487:\n                            if (bVar10) {\n                                *(iVar1 + 200) = *(iVar1 + 200) & 0xfffffffd;\n                            }\n                            return 0;\n                        }\n                        uVar6 = *arg2;\n                        puVar8 = arg2;\n                    }\n                    if (uVar5 != uVar6) {\n                        uVar3 = 0xffffffff;\n                        if (uVar6 < uVar5) {\n                            uVar3 = 1;\n                        }\n                        goto code_r0x0042d4ac;\n                    }\n                    if ((uVar5 == 0) || (arg3 = iVar7,  arg2 = puVar8,  arg1 = puVar9,  iVar7 == 0))\n                    goto code_r0x0042d487;\n                } while( true );\n            }\n            puVar4 = fcn.0041d1a0();\n            *puVar4 = 0x16;\n            fcn.0041f4d0(0, 0, 0, 0);\n            if (bVar10) {\n                *(iVar1 + 200) = *(iVar1 + 200) & 0xfffffffd;\n            }\n            uVar3 = 0x7fffffff;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 1027
    },
    "0042d880": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042d6ef)\n\nuint fcn.0042d880(uint16_t *arg1, uint8_t *arg2, uint64_t arg3)\n\n{\n    uint uVar1;\n    int32_t iVar2;\n    uint *puVar3;\n    int64_t iStack40;\n    int64_t iStack32;\n    int64_t iStack24;\n    char cStack16;\n    \n    if ((arg2 != NULL) && (arg3 != 0)) {\n        if (*arg2 != 0) {\n            cStack16 = '\\0';\n            iStack24 = fcn.0041efc0();\n            iStack40 = *(iStack24 + 0xc0);\n            iStack32 = *(iStack24 + 0xb8);\n            if ((iStack40 != *0x445710) && ((*0x445598 & *(iStack24 + 200)) == 0)) {\n                iStack40 = fcn.0041ec30();\n            }\n            if ((iStack32 != *0x445490) && ((*0x445598 & *(iStack24 + 200)) == 0)) {\n                iStack32 = fcn.0041e050();\n            }\n            if ((*(iStack24 + 200) & 2) == 0) {\n                *(iStack24 + 200) = *(iStack24 + 200) | 2;\n                cStack16 = '\\x01';\n            }\n            if (*(iStack40 + 0x14) != 0) {\n                iVar2 = fcn.004251a0(*arg2, &iStack40);\n                if (iVar2 == 0) {\n                    iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                      (*(iStack40 + 4), 9, arg2, 1, arg1, arg1 != NULL);\n                    if (iVar2 != 0) {\n                        if (cStack16 != '\\0') {\n                            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n                        }\n                        return 1;\n                    }\n                }\n                else {\n                    iVar2 = *(iStack40 + 0x10c);\n                    if ((((1 < iVar2) && (iVar2 <= arg3)) &&\n                        (iVar2 = (*_sym.imp.KERNEL32.dll_MultiByteToWideChar)\n                                           (*(iStack40 + 4), 9, arg2, iVar2, arg1, arg1 != NULL),  iVar2 != 0)) ||\n                       ((*(iStack40 + 0x10c) <= arg3 && (arg2[1] != 0)))) {\n                        uVar1 = *(iStack40 + 0x10c);\n                        if (cStack16 == '\\0') {\n                            return uVar1;\n                        }\n                        *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n                        return uVar1;\n                    }\n                }\n                puVar3 = fcn.0041d1a0();\n                *puVar3 = 0x2a;\n                if (cStack16 != '\\0') {\n                    *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n                }\n                return 0xffffffff;\n            }\n            if (arg1 != NULL) {\n                *arg1 = *arg2;\n            }\n            if (cStack16 != '\\0') {\n                *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n            }\n            return 1;\n        }\n        if (arg1 != NULL) {\n            *arg1 = 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 823
    },
    "0042d8a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042d8a0(ulong arg1, ulong arg2, int64_t *arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uchar auStack136 [32];\n    uint uStack104;\n    uint uStack96;\n    uint uStack88;\n    int64_t *piStack80;\n    int64_t iStack72;\n    int64_t iStack64;\n    int64_t iStack56;\n    char cStack48;\n    uchar auStack40 [8];\n    uchar auStack32 [16];\n    uint64_t uStack16;\n    \n    uStack16 = *0x444d30 ^ auStack136;\n    cStack48 = '\\0';\n    if (arg3 == NULL) {\n        iStack56 = fcn.0041efc0();\n        iStack72 = *(iStack56 + 0xc0);\n        iStack64 = *(iStack56 + 0xb8);\n        if ((iStack72 != *0x445710) && ((*0x445598 & *(iStack56 + 200)) == 0)) {\n            iStack72 = fcn.0041ec30();\n        }\n        if ((iStack64 != *0x445490) && ((*0x445598 & *(iStack56 + 200)) == 0)) {\n            iStack64 = fcn.0041e050();\n        }\n        if ((*(iStack56 + 200) & 2) == 0) {\n            *(iStack56 + 200) = *(iStack56 + 200) | 2;\n            cStack48 = '\\x01';\n        }\n    }\n    else {\n        iStack72 = *arg3;\n        iStack64 = arg3[1];\n    }\n    piStack80 = &iStack72;\n    uStack88 = 0;\n    uStack96 = 0;\n    uStack104 = 0;\n    uVar1 = fcn.0042fce0(auStack32, auStack40, arg2, 0);\n    iVar2 = fcn.0042ef80(auStack32, arg1);\n    if ((uVar1 & 3) == 0) {\n        if (iVar2 != 1) {\n            if (iVar2 != 2) {\ncode_r0x0042da0a:\n                if (cStack48 != '\\0') {\n                    *(iStack56 + 200) = *(iStack56 + 200) & 0xfffffffd;\n                }\n                goto code_r0x0042da1f;\n            }\ncode_r0x0042d9e6:\n            if (cStack48 != '\\0') {\n                *(iStack56 + 200) = *(iStack56 + 200) & 0xfffffffd;\n            }\n            goto code_r0x0042da1f;\n        }\n    }\n    else {\n        if ((uVar1 & 1) != 0) goto code_r0x0042d9e6;\n        if ((uVar1 & 2) == 0) goto code_r0x0042da0a;\n    }\n    if (cStack48 != '\\0') {\n        *(iStack56 + 200) = *(iStack56 + 200) & 0xfffffffd;\n    }\ncode_r0x0042da1f:\n    fcn.00418d10(uStack16 ^ auStack136);\n    return;\n}\n",
        "token_count": 748
    },
    "0042da40": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe"
        ],
        "decompiled_code": "\nvoid fcn.0042da40(ulong arg1, ulong arg2, int64_t *arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uchar auStack136 [32];\n    uint uStack104;\n    uint uStack96;\n    uint uStack88;\n    int64_t *piStack80;\n    int64_t iStack72;\n    int64_t iStack64;\n    int64_t iStack56;\n    char cStack48;\n    uchar auStack40 [8];\n    uchar auStack32 [16];\n    uint64_t uStack16;\n    \n    uStack16 = *0x444d30 ^ auStack136;\n    cStack48 = '\\0';\n    if (arg3 == NULL) {\n        iStack56 = fcn.0041efc0();\n        iStack72 = *(iStack56 + 0xc0);\n        iStack64 = *(iStack56 + 0xb8);\n        if ((iStack72 != *0x445710) && ((*0x445598 & *(iStack56 + 200)) == 0)) {\n            iStack72 = fcn.0041ec30();\n        }\n        if ((iStack64 != *0x445490) && ((*0x445598 & *(iStack56 + 200)) == 0)) {\n            iStack64 = fcn.0041e050();\n        }\n        if ((*(iStack56 + 200) & 2) == 0) {\n            *(iStack56 + 200) = *(iStack56 + 200) | 2;\n            cStack48 = '\\x01';\n        }\n    }\n    else {\n        iStack72 = *arg3;\n        iStack64 = arg3[1];\n    }\n    piStack80 = &iStack72;\n    uStack88 = 0;\n    uStack96 = 0;\n    uStack104 = 0;\n    uVar1 = fcn.0042fce0(auStack32, auStack40, arg2, 0);\n    iVar2 = fcn.0042f630(auStack32, arg1);\n    if ((uVar1 & 3) == 0) {\n        if (iVar2 != 1) {\n            if (iVar2 != 2) {\ncode_r0x0042dbaa:\n                if (cStack48 != '\\0') {\n                    *(iStack56 + 200) = *(iStack56 + 200) & 0xfffffffd;\n                }\n                goto code_r0x0042dbbf;\n            }\ncode_r0x0042db86:\n            if (cStack48 != '\\0') {\n                *(iStack56 + 200) = *(iStack56 + 200) & 0xfffffffd;\n            }\n            goto code_r0x0042dbbf;\n        }\n    }\n    else {\n        if ((uVar1 & 1) != 0) goto code_r0x0042db86;\n        if ((uVar1 & 2) == 0) goto code_r0x0042dbaa;\n    }\n    if (cStack48 != '\\0') {\n        *(iStack56 + 200) = *(iStack56 + 200) & 0xfffffffd;\n    }\ncode_r0x0042dbbf:\n    fcn.00418d10(uStack16 ^ auStack136);\n    return;\n}\n",
        "token_count": 737
    },
    "0042e1a0": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0042e08d)\n\nuint64_t fcn.0042e1a0(int64_t arg1, int64_t arg2, uint64_t arg3)\n\n{\n    int32_t iVar1;\n    uint *puVar2;\n    uint64_t uVar3;\n    int64_t iStack40;\n    int64_t iStack32;\n    int64_t iStack24;\n    char cStack16;\n    \n    cStack16 = '\\0';\n    iStack24 = fcn.0041efc0();\n    iStack40 = *(iStack24 + 0xc0);\n    iStack32 = *(iStack24 + 0xb8);\n    if ((iStack40 != *0x445710) && ((*0x445598 & *(iStack24 + 200)) == 0)) {\n        iStack40 = fcn.0041ec30();\n    }\n    if ((iStack32 != *0x445490) && ((*0x445598 & *(iStack24 + 200)) == 0)) {\n        iStack32 = fcn.0041e050();\n    }\n    if ((*(iStack24 + 200) & 2) == 0) {\n        *(iStack24 + 200) = *(iStack24 + 200) | 2;\n        cStack16 = '\\x01';\n    }\n    if (arg3 == 0) {\n        if (cStack16 != '\\0') {\n            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n        }\n        return 0;\n    }\n    if (((arg1 == 0) || (arg2 == 0)) || (0x7fffffff < arg3)) {\n        puVar2 = fcn.0041d1a0();\n        *puVar2 = 0x16;\n        fcn.0041f4d0(0, 0, 0, 0);\ncode_r0x0042e0ec:\n        if (cStack16 != '\\0') {\n            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n        }\n        uVar3 = 0x7fffffff;\n    }\n    else {\n        if (*(iStack32 + 8) == 0) {\n            uVar3 = fcn.00431e70(arg1, arg2, arg3, 0);\n        }\n        else {\n            iVar1 = fcn.00431d30(&iStack40, *(iStack32 + 0xc), 0x1001, arg1);\n            if (iVar1 == 0) goto code_r0x0042e0ec;\n            uVar3 = iVar1 - 2;\n        }\n        if (cStack16 != '\\0') {\n            *(iStack24 + 200) = *(iStack24 + 200) & 0xfffffffd;\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 653
    },
    "0042ef80": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint64_t fcn.0042ef80(uint16_t *arg1, uint32_t *arg2)\n\n{\n    uint16_t uVar1;\n    char32_t cVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    uint8_t uVar6;\n    int64_t iVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    uint64_t uVar12;\n    int32_t iVar13;\n    int64_t iVar14;\n    int32_t iVar15;\n    uint64_t uVar16;\n    int32_t iVar17;\n    uint32_t auStack100 [5];\n    uint32_t uStack80;\n    uint32_t uStack76;\n    int32_t iStack72;\n    \n    cVar2 = str.5_v_[0];\n    uVar1 = arg1[5];\n    uVar10 = uVar1 & 0x7fff;\n    iVar11 = uVar10 - 0x3fff;\n    auStack100[1] = *(arg1 + 3);\n    auStack100[2] = *(arg1 + 1);\n    auStack100[3] = *arg1 << 0x10;\n    if (iVar11 == -0x3fff) {\n        uVar12 = 0;\n        iVar4 = 0;\n        uVar5 = uVar12;\n        do {\n            if (auStack100[uVar5 + 1] != 0) {\n                auStack100[1] = 0;\n                auStack100[2] = 0;\n                uVar12 = 2;\n                iVar4 = 0;\n                break;\n            }\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < 3);\n    }\n    else {\n        uStack80 = *(arg1 + 3);\n        uStack76 = *(arg1 + 1);\n        uVar12 = 0;\n        iVar4 = 0;\n        iStack72 = *arg1 << 0x10;\n        iVar15 = 0;\n        uVar9 = str.5_v_[0] >> 0x1f & 0x1f;\n        uVar3 = str.5_v_[0] + uVar9;\n        iVar17 = uVar3 >> 5;\n        uVar3 = 0x1f - ((uVar3 & 0x1f) - uVar9);\n        uVar6 = uVar3;\n        if ((auStack100[iVar17 + 1] >> (uVar3 & 0x1f) & 1) != 0) {\n            if ((auStack100[iVar17 + 1] & ~(-1 << (uVar6 & 0x1f))) == 0) {\n                for (iVar7 = iVar17 + 1; iVar7 < 3; iVar7 = iVar7 + 1) {\n                    if (auStack100[iVar7 + 1] != 0) goto code_r0x0042f0c2;\n                }\n            }\n            else {\ncode_r0x0042f0c2:\n                uVar3 = str.5_v_[0] + L'\\xffffffff' >> 0x1f & 0x1f;\n                iVar15 = str.5_v_[0] + L'\\xffffffff' + uVar3;\n                iVar13 = iVar15 >> 5;\n                uVar9 = 1 << (0x1f - ((iVar15 & 0x1f) - uVar3) & 0x1f);\n                uVar3 = auStack100[iVar13 + 1] + uVar9;\n                if ((uVar3 < auStack100[iVar13 + 1]) || (uVar5 = uVar12,  uVar3 < uVar9)) {\n                    uVar5 = 1;\n                }\n                iVar15 = uVar5;\n                auStack100[iVar13 + 1] = uVar3;\n                iVar7 = iVar13 + -1;\n                if (-1 < iVar13 + -1) {\n                    do {\n                        iVar15 = uVar5;\n                        if (iVar15 == 0) break;\n                        uVar3 = auStack100[iVar7 + 1] + 1;\n                        if ((uVar3 < auStack100[iVar7 + 1]) || (uVar5 = uVar12,  uVar3 == 0)) {\n                            uVar5 = 1;\n                        }\n                        iVar15 = uVar5;\n                        auStack100[iVar7 + 1] = uVar3;\n                        iVar7 = iVar7 + -1;\n                    } while (-1 < iVar7);\n                }\n            }\n        }\n        auStack100[iVar17 + 1] = auStack100[iVar17 + 1] & -1 << (uVar6 & 0x1f);\n        iVar7 = iVar17 + 1;\n        if (iVar7 < 3) {\n            fcn.00418a70(auStack100 + iVar7 + 1, 0, (3 - iVar7) * 4);\n        }\n        iVar17 = iVar11;\n        if (iVar15 != 0) {\n            iVar17 = uVar10 - 0x3ffe;\n        }\n        if (iVar17 < *0x446354 - cVar2) {\n            auStack100[1] = 0;\n            auStack100[2] = 0;\n            uVar12 = 2;\n        }\n        else if (*0x446354 < iVar17) {\n            if (iVar17 < *0x446350) {\n                auStack100[1] = auStack100[1] & 0x7fffffff;\n                iVar4 = str.5_v_[3] + iVar17;\n                uVar10 = str.5_v_[1] >> 0x1f & 0x1f;\n                iVar11 = str.5_v_[1] + uVar10;\n                uVar6 = (iVar11 & 0x1f) - uVar10;\n                uVar5 = uVar12;\n                uVar16 = uVar12;\n                do {\n                    uVar10 = auStack100[uVar5 + 1];\n                    uVar5 = uVar5 + 1;\n                    auStack100[uVar5] = uVar10 >> (uVar6 & 0x1f) | uVar16;\n                    uVar16 = (~(-1 << (uVar6 & 0x1f)) & uVar10) << (0x20 - uVar6 & 0x1f);\n                } while (uVar5 < 3);\n                iVar7 = iVar11 >> 5;\n                iVar14 = 2;\n                puVar8 = auStack100 + (3 - iVar7);\n                do {\n                    if (iVar14 < iVar7) {\n                        auStack100[iVar14 + 1] = 0;\n                    }\n                    else {\n                        auStack100[iVar14 + 1] = *puVar8;\n                    }\n                    puVar8 = puVar8 + -1;\n                    iVar14 = iVar14 + -1;\n                } while (-1 < iVar14);\n            }\n            else {\n                auStack100[1] = 0x80000000;\n                auStack100[2] = 0;\n                auStack100[3] = 0;\n                uVar10 = str.5_v_[1] >> 0x1f & 0x1f;\n                iVar11 = str.5_v_[1] + uVar10;\n                uVar6 = (iVar11 & 0x1f) - uVar10;\n                uVar5 = uVar12;\n                do {\n                    uVar10 = auStack100[uVar12 + 1];\n                    uVar12 = uVar12 + 1;\n                    auStack100[uVar12] = uVar10 >> (uVar6 & 0x1f) | uVar5;\n                    uVar5 = (~(-1 << (uVar6 & 0x1f)) & uVar10) << (0x20 - uVar6 & 0x1f);\n                } while (uVar12 < 3);\n                iVar7 = iVar11 >> 5;\n                iVar14 = 2;\n                puVar8 = auStack100 + (3 - iVar7);\n                do {\n                    if (iVar14 < iVar7) {\n                        auStack100[iVar14 + 1] = 0;\n                    }\n                    else {\n                        auStack100[iVar14 + 1] = *puVar8;\n                    }\n                    puVar8 = puVar8 + -1;\n                    iVar14 = iVar14 + -1;\n                } while (-1 < iVar14);\n                uVar12 = 1;\n                iVar4 = str.5_v_[3] + *0x446350;\n            }\n        }\n        else {\n            auStack100[1] = uStack80;\n            auStack100[2] = uStack76;\n            auStack100[3] = iStack72;\n            uVar10 = *0x446354 - iVar11 >> 0x1f & 0x1f;\n            iVar11 = (*0x446354 - iVar11) + uVar10;\n            uVar6 = (iVar11 & 0x1f) - uVar10;\n            uVar5 = uVar12;\n            uVar16 = uVar12;\n            do {\n                uVar10 = auStack100[uVar5 + 1];\n                uVar5 = uVar5 + 1;\n                auStack100[uVar5] = uVar10 >> (uVar6 & 0x1f) | uVar16;\n                uVar16 = (uVar10 & ~(-1 << (uVar6 & 0x1f))) << (-uVar6 & 0x1f);\n            } while (uVar5 < 3);\n            iVar14 = iVar11 >> 5;\n            iVar7 = 2;\n            puVar8 = auStack100 + (3 - iVar14);\n            do {\n                if (iVar7 < iVar14) {\n                    auStack100[iVar7 + 1] = 0;\n                }\n                else {\n                    auStack100[iVar7 + 1] = *puVar8;\n                }\n                puVar8 = puVar8 + -1;\n                iVar7 = iVar7 + -1;\n            } while (-1 < iVar7);\n            uVar3 = str.5_v_[0] >> 0x1f & 0x1f;\n            uVar10 = str.5_v_[0] + uVar3;\n            iVar11 = uVar10 >> 5;\n            uVar10 = 0x1f - ((uVar10 & 0x1f) - uVar3);\n            uVar6 = uVar10;\n            if ((auStack100[iVar11 + 1] >> (uVar10 & 0x1f) & 1) != 0) {\n                if ((auStack100[iVar11 + 1] & ~(-1 << (uVar6 & 0x1f))) == 0) {\n                    for (iVar7 = iVar11 + 1; iVar7 < 3; iVar7 = iVar7 + 1) {\n                        if (auStack100[iVar7 + 1] != 0) goto code_r0x0042f2d8;\n                    }\n                }\n                else {\ncode_r0x0042f2d8:\n                    uVar10 = str.5_v_[0] + L'\\xffffffff' >> 0x1f & 0x1f;\n                    iVar4 = str.5_v_[0] + L'\\xffffffff' + uVar10;\n                    iVar15 = iVar4 >> 5;\n                    uVar3 = 1 << (0x1f - ((iVar4 & 0x1f) - uVar10) & 0x1f);\n                    uVar10 = auStack100[iVar15 + 1] + uVar3;\n                    if ((uVar10 < auStack100[iVar15 + 1]) || (uVar5 = uVar12,  uVar10 < uVar3)) {\n                        uVar5 = 1;\n                    }\n                    auStack100[iVar15 + 1] = uVar10;\n                    iVar7 = iVar15 + -1;\n                    if (-1 < iVar15 + -1) {\n                        do {\n                            if (uVar5 == 0) break;\n                            uVar10 = auStack100[iVar7 + 1] + 1;\n                            if ((uVar10 < auStack100[iVar7 + 1]) || (uVar5 = uVar12,  uVar10 == 0)) {\n                                uVar5 = 1;\n                            }\n                            auStack100[iVar7 + 1] = uVar10;\n                            iVar7 = iVar7 + -1;\n                        } while (-1 < iVar7);\n                    }\n                }\n            }\n            auStack100[iVar11 + 1] = auStack100[iVar11 + 1] & -1 << (uVar6 & 0x1f);\n            iVar7 = iVar11 + 1;\n            if (iVar7 < 3) {\n                fcn.00418a70(auStack100 + iVar7 + 1, 0, (3 - iVar7) * 4);\n            }\n            uVar10 = str.5_v_[1] + L'\\x01' >> 0x1f & 0x1f;\n            iVar11 = str.5_v_[1] + L'\\x01' + uVar10;\n            uVar6 = (iVar11 & 0x1f) - uVar10;\n            uVar5 = uVar12;\n            do {\n                uVar10 = auStack100[uVar12 + 1];\n                uVar12 = uVar12 + 1;\n                auStack100[uVar12] = uVar10 >> (uVar6 & 0x1f) | uVar5;\n                uVar5 = (~(-1 << (uVar6 & 0x1f)) & uVar10) << (0x20 - uVar6 & 0x1f);\n            } while (uVar12 < 3);\n            iVar14 = iVar11 >> 5;\n            iVar7 = 2;\n            puVar8 = auStack100 + (3 - iVar14);\n            do {\n                if (iVar7 < iVar14) {\n                    auStack100[iVar7 + 1] = 0;\n                }\n                else {\n                    auStack100[iVar7 + 1] = *puVar8;\n                }\n                puVar8 = puVar8 + -1;\n                iVar7 = iVar7 + -1;\n            } while (-1 < iVar7);\n            iVar4 = 0;\n            uVar12 = 2;\n        }\n    }\n    auStack100[1] = iVar4 << (0x1fU - str.5_v_[1] & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | auStack100[1];\n    if (str.5_v_[2] == L'@') {\n        arg2[1] = auStack100[1];\n        *arg2 = auStack100[2];\n        return uVar12;\n    }\n    if (str.5_v_[2] == L' ') {\n        *arg2 = auStack100[1];\n    }\n    return uVar12;\n}\n",
        "token_count": 3395
    },
    "0042f630": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check for software breakpoints/6dbbe1bd09a145a7938dedb5765a94dc"
        ],
        "decompiled_code": "\nuint64_t fcn.0042f630(uint16_t *arg1, uint32_t *arg2)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    uint64_t uVar5;\n    uint8_t uVar6;\n    int64_t iVar7;\n    uint32_t *puVar8;\n    uint32_t uVar9;\n    uint32_t uVar10;\n    int32_t iVar11;\n    uint64_t uVar12;\n    int32_t iVar13;\n    int64_t iVar14;\n    int32_t iVar15;\n    uint64_t uVar16;\n    int32_t iVar17;\n    uint32_t auStack100 [5];\n    uint32_t uStack80;\n    uint32_t uStack76;\n    int32_t iStack72;\n    \n    iVar4 = *0x446370;\n    uVar1 = arg1[5];\n    uVar10 = uVar1 & 0x7fff;\n    iVar11 = uVar10 - 0x3fff;\n    auStack100[1] = *(arg1 + 3);\n    auStack100[2] = *(arg1 + 1);\n    auStack100[3] = *arg1 << 0x10;\n    if (iVar11 == -0x3fff) {\n        uVar12 = 0;\n        iVar15 = 0;\n        uVar5 = uVar12;\n        do {\n            if (auStack100[uVar5 + 1] != 0) {\n                auStack100[1] = 0;\n                auStack100[2] = 0;\n                uVar12 = 2;\n                iVar15 = 0;\n                break;\n            }\n            uVar5 = uVar5 + 1;\n        } while (uVar5 < 3);\n    }\n    else {\n        uStack80 = *(arg1 + 3);\n        uStack76 = *(arg1 + 1);\n        uVar12 = 0;\n        iVar15 = 0;\n        iStack72 = *arg1 << 0x10;\n        iVar3 = 0;\n        uVar9 = *0x446370 >> 0x1f & 0x1f;\n        uVar2 = *0x446370 + uVar9;\n        iVar17 = uVar2 >> 5;\n        uVar2 = 0x1f - ((uVar2 & 0x1f) - uVar9);\n        uVar6 = uVar2;\n        if ((auStack100[iVar17 + 1] >> (uVar2 & 0x1f) & 1) != 0) {\n            if ((auStack100[iVar17 + 1] & ~(-1 << (uVar6 & 0x1f))) == 0) {\n                for (iVar7 = iVar17 + 1; iVar7 < 3; iVar7 = iVar7 + 1) {\n                    if (auStack100[iVar7 + 1] != 0) goto code_r0x0042f772;\n                }\n            }\n            else {\ncode_r0x0042f772:\n                uVar2 = *0x446370 + -1 >> 0x1f & 0x1f;\n                iVar3 = *0x446370 + -1 + uVar2;\n                iVar13 = iVar3 >> 5;\n                uVar9 = 1 << (0x1f - ((iVar3 & 0x1f) - uVar2) & 0x1f);\n                uVar2 = auStack100[iVar13 + 1] + uVar9;\n                if ((uVar2 < auStack100[iVar13 + 1]) || (uVar5 = uVar12,  uVar2 < uVar9)) {\n                    uVar5 = 1;\n                }\n                iVar3 = uVar5;\n                auStack100[iVar13 + 1] = uVar2;\n                iVar7 = iVar13 + -1;\n                if (-1 < iVar13 + -1) {\n                    do {\n                        iVar3 = uVar5;\n                        if (iVar3 == 0) break;\n                        uVar2 = auStack100[iVar7 + 1] + 1;\n                        if ((uVar2 < auStack100[iVar7 + 1]) || (uVar5 = uVar12,  uVar2 == 0)) {\n                            uVar5 = 1;\n                        }\n                        iVar3 = uVar5;\n                        auStack100[iVar7 + 1] = uVar2;\n                        iVar7 = iVar7 + -1;\n                    } while (-1 < iVar7);\n                }\n            }\n        }\n        auStack100[iVar17 + 1] = auStack100[iVar17 + 1] & -1 << (uVar6 & 0x1f);\n        iVar7 = iVar17 + 1;\n        if (iVar7 < 3) {\n            fcn.00418a70(auStack100 + iVar7 + 1, 0, (3 - iVar7) * 4);\n        }\n        iVar17 = iVar11;\n        if (iVar3 != 0) {\n            iVar17 = uVar10 - 0x3ffe;\n        }\n        if (iVar17 < *0x44636c - iVar4) {\n            auStack100[1] = 0;\n            auStack100[2] = 0;\n            uVar12 = 2;\n        }\n        else if (*0x44636c < iVar17) {\n            if (iVar17 < *0x446368) {\n                auStack100[1] = auStack100[1] & 0x7fffffff;\n                iVar15 = *0x44637c + iVar17;\n                uVar10 = *0x446374 >> 0x1f & 0x1f;\n                iVar4 = *0x446374 + uVar10;\n                uVar6 = (iVar4 & 0x1f) - uVar10;\n                uVar5 = uVar12;\n                uVar16 = uVar12;\n                do {\n                    uVar10 = auStack100[uVar5 + 1];\n                    uVar5 = uVar5 + 1;\n                    auStack100[uVar5] = uVar10 >> (uVar6 & 0x1f) | uVar16;\n                    uVar16 = (~(-1 << (uVar6 & 0x1f)) & uVar10) << (0x20 - uVar6 & 0x1f);\n                } while (uVar5 < 3);\n                iVar7 = iVar4 >> 5;\n                iVar14 = 2;\n                puVar8 = auStack100 + (3 - iVar7);\n                do {\n                    if (iVar14 < iVar7) {\n                        auStack100[iVar14 + 1] = 0;\n                    }\n                    else {\n                        auStack100[iVar14 + 1] = *puVar8;\n                    }\n                    puVar8 = puVar8 + -1;\n                    iVar14 = iVar14 + -1;\n                } while (-1 < iVar14);\n            }\n            else {\n                auStack100[1] = 0x80000000;\n                auStack100[2] = 0;\n                auStack100[3] = 0;\n                uVar10 = *0x446374 >> 0x1f & 0x1f;\n                iVar4 = *0x446374 + uVar10;\n                uVar6 = (iVar4 & 0x1f) - uVar10;\n                uVar5 = uVar12;\n                do {\n                    uVar10 = auStack100[uVar12 + 1];\n                    uVar12 = uVar12 + 1;\n                    auStack100[uVar12] = uVar10 >> (uVar6 & 0x1f) | uVar5;\n                    uVar5 = (~(-1 << (uVar6 & 0x1f)) & uVar10) << (0x20 - uVar6 & 0x1f);\n                } while (uVar12 < 3);\n                iVar7 = iVar4 >> 5;\n                iVar14 = 2;\n                puVar8 = auStack100 + (3 - iVar7);\n                do {\n                    if (iVar14 < iVar7) {\n                        auStack100[iVar14 + 1] = 0;\n                    }\n                    else {\n                        auStack100[iVar14 + 1] = *puVar8;\n                    }\n                    puVar8 = puVar8 + -1;\n                    iVar14 = iVar14 + -1;\n                } while (-1 < iVar14);\n                uVar12 = 1;\n                iVar15 = *0x44637c + *0x446368;\n            }\n        }\n        else {\n            auStack100[1] = uStack80;\n            auStack100[2] = uStack76;\n            auStack100[3] = iStack72;\n            uVar10 = *0x44636c - iVar11 >> 0x1f & 0x1f;\n            iVar4 = (*0x44636c - iVar11) + uVar10;\n            uVar6 = (iVar4 & 0x1f) - uVar10;\n            uVar5 = uVar12;\n            uVar16 = uVar12;\n            do {\n                uVar10 = auStack100[uVar5 + 1];\n                uVar5 = uVar5 + 1;\n                auStack100[uVar5] = uVar10 >> (uVar6 & 0x1f) | uVar16;\n                uVar16 = (uVar10 & ~(-1 << (uVar6 & 0x1f))) << (-uVar6 & 0x1f);\n            } while (uVar5 < 3);\n            iVar14 = iVar4 >> 5;\n            iVar7 = 2;\n            puVar8 = auStack100 + (3 - iVar14);\n            do {\n                if (iVar7 < iVar14) {\n                    auStack100[iVar7 + 1] = 0;\n                }\n                else {\n                    auStack100[iVar7 + 1] = *puVar8;\n                }\n                puVar8 = puVar8 + -1;\n                iVar7 = iVar7 + -1;\n            } while (-1 < iVar7);\n            uVar2 = *0x446370 >> 0x1f & 0x1f;\n            uVar10 = *0x446370 + uVar2;\n            iVar4 = uVar10 >> 5;\n            uVar10 = 0x1f - ((uVar10 & 0x1f) - uVar2);\n            uVar6 = uVar10;\n            if ((auStack100[iVar4 + 1] >> (uVar10 & 0x1f) & 1) != 0) {\n                if ((auStack100[iVar4 + 1] & ~(-1 << (uVar6 & 0x1f))) == 0) {\n                    for (iVar7 = iVar4 + 1; iVar7 < 3; iVar7 = iVar7 + 1) {\n                        if (auStack100[iVar7 + 1] != 0) goto code_r0x0042f988;\n                    }\n                }\n                else {\ncode_r0x0042f988:\n                    uVar10 = *0x446370 + -1 >> 0x1f & 0x1f;\n                    iVar11 = *0x446370 + -1 + uVar10;\n                    iVar15 = iVar11 >> 5;\n                    uVar2 = 1 << (0x1f - ((iVar11 & 0x1f) - uVar10) & 0x1f);\n                    uVar10 = auStack100[iVar15 + 1] + uVar2;\n                    if ((uVar10 < auStack100[iVar15 + 1]) || (uVar5 = uVar12,  uVar10 < uVar2)) {\n                        uVar5 = 1;\n                    }\n                    auStack100[iVar15 + 1] = uVar10;\n                    iVar7 = iVar15 + -1;\n                    if (-1 < iVar15 + -1) {\n                        do {\n                            if (uVar5 == 0) break;\n                            uVar10 = auStack100[iVar7 + 1] + 1;\n                            if ((uVar10 < auStack100[iVar7 + 1]) || (uVar5 = uVar12,  uVar10 == 0)) {\n                                uVar5 = 1;\n                            }\n                            auStack100[iVar7 + 1] = uVar10;\n                            iVar7 = iVar7 + -1;\n                        } while (-1 < iVar7);\n                    }\n                }\n            }\n            auStack100[iVar4 + 1] = auStack100[iVar4 + 1] & -1 << (uVar6 & 0x1f);\n            iVar7 = iVar4 + 1;\n            if (iVar7 < 3) {\n                fcn.00418a70(auStack100 + iVar7 + 1, 0, (3 - iVar7) * 4);\n            }\n            uVar10 = *0x446374 + 1 >> 0x1f & 0x1f;\n            iVar4 = *0x446374 + 1 + uVar10;\n            uVar6 = (iVar4 & 0x1f) - uVar10;\n            uVar5 = uVar12;\n            do {\n                uVar10 = auStack100[uVar12 + 1];\n                uVar12 = uVar12 + 1;\n                auStack100[uVar12] = uVar10 >> (uVar6 & 0x1f) | uVar5;\n                uVar5 = (~(-1 << (uVar6 & 0x1f)) & uVar10) << (0x20 - uVar6 & 0x1f);\n            } while (uVar12 < 3);\n            iVar14 = iVar4 >> 5;\n            iVar7 = 2;\n            puVar8 = auStack100 + (3 - iVar14);\n            do {\n                if (iVar7 < iVar14) {\n                    auStack100[iVar7 + 1] = 0;\n                }\n                else {\n                    auStack100[iVar7 + 1] = *puVar8;\n                }\n                puVar8 = puVar8 + -1;\n                iVar7 = iVar7 + -1;\n            } while (-1 < iVar7);\n            iVar15 = 0;\n            uVar12 = 2;\n        }\n    }\n    auStack100[1] = iVar15 << (0x1fU - *0x446374 & 0x1f) | -((uVar1 & 0x8000) != 0) & 0x80000000 | auStack100[1];\n    if (*0x446378 == 0x40) {\n        arg2[1] = auStack100[1];\n        *arg2 = auStack100[2];\n        return uVar12;\n    }\n    if (*0x446378 == 0x20) {\n        *arg2 = auStack100[1];\n    }\n    return uVar12;\n}\n",
        "token_count": 3338
    },
    "004328ac": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check Internet connectivity via WinINet/46117370ea204ccbaff71c7a54b55d32",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check OS version/c2d5920d27eb4726b54299bacf904e17"
        ],
        "decompiled_code": "\nulong fcn.004328ac(int32_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    int64_t iVar3;\n    int32_t iVar4;\n    \n    if (arg1 == NULL) {\ncode_r0x004328c0:\n        uVar2 = 0x80070057;\n    }\n    else {\n        if (*arg1 != 0) {\n            if (*arg1 != 0x48) goto code_r0x004328c0;\n            iVar4 = 0;\n            if (0 < arg1[0x10]) {\n                iVar3 = 0;\n                do {\n                    if ((iVar3 < 0) || (arg1[0x10] <= iVar4)) {\n                        (*_sym.imp.KERNEL32.dll_RaiseException)(0xc000008c, 1, 0);\n                        pcVar1 = swi(3);\n                        uVar2 = (*pcVar1)();\n                        return uVar2;\n                    }\n                    (*_sym.imp.USER32.dll_UnregisterClassA)(*(*(arg1 + 0xe) + iVar3));\n                    iVar4 = iVar4 + 1;\n                    iVar3 = iVar3 + 2;\n                } while (iVar4 < arg1[0x10]);\n            }\n            if (*(arg1 + 0xe) != 0) {\n                fcn.00419f10(*(arg1 + 0xe));\n                *(arg1 + 0xe) = 0;\n            }\n            arg1[0x10] = 0;\n            arg1[0x11] = 0;\n            (*_sym.imp.KERNEL32.dll_DeleteCriticalSection)(arg1 + 2);\n            *arg1 = 0;\n        }\n        uVar2 = 0;\n    }\n    return uVar2;\n}\n",
        "token_count": 396
    },
    "00432998": {
        "rules": [
            "check OS version/eb1d2d86c0084793ad233d63869572f1",
            "check OS version/730896de213f42198ce3af1d0fc93fbe",
            "check if file exists/0479f02c3c8a4099bfdd7ca8c1e3802e/20122460e93841beb56e12792b6a4896"
        ],
        "decompiled_code": "\nvoid fcn.00432998(uint *arg1)\n\n{\n    int32_t iVar1;\n    uchar auStack232 [32];\n    uint uStack200;\n    uint32_t uStack196;\n    int32_t iStack192;\n    int32_t iStack184;\n    uint64_t uStack40;\n    \n    uStack40 = *0x444d30 ^ auStack232;\n    fcn.00418a70(arg1 + 10, 0, 0x28);\n    *(arg1 + 0x14) = 0;\n    arg1[0x16] = 0;\n    arg1[0x17] = 0;\n    *(arg1 + 4) = 0x400000;\n    *(arg1 + 2) = 0x400000;\n    *arg1 = 0x60;\n    *(arg1 + 6) = 0;\n    fcn.00418a70(&uStack200, 0, 0x94);\n    uStack200 = 0x94;\n    (*_sym.imp.KERNEL32.dll_GetVersionExA)(&uStack200);\n    if (iStack184 == 2) {\n        if (uStack196 < 5) goto code_r0x00432a47;\n    }\n    else if ((iStack184 != 1) || ((uStack196 < 5 && ((uStack196 != 4 || (iStack192 == 0)))))) goto code_r0x00432a47;\n    *(arg1 + 6) = 1;\ncode_r0x00432a47:\n    arg1[7] = 0x800;\n    *(arg1 + 8) = 0x439588;\n    iVar1 = fcn.00432854(arg1 + 10);\n    if (iVar1 < 0) {\n        *0x446ba8 = 1;\n    }\n    fcn.00418d10(uStack40 ^ auStack232);\n    return;\n}\n",
        "token_count": 433
    },
    "00401fa0": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00401fa0(ulong *hKey, ulong arg2)\n\n{\n    int32_t iVar1;\n    uchar auStack392 [32];\n    int64_t *piStack360;\n    ulong uStack352;\n    ulong uStack344;\n    uchar *puStack336;\n    int64_t iStack328;\n    uint auStack320 [2];\n    int64_t iStack312;\n    uchar auStack304 [8];\n    uchar auStack296 [256];\n    uint64_t uStack40;\n    \n    uStack40 = *0x444d30 ^ auStack392;\n    piStack360 = &iStack312;\n    iStack328 = 0;\n    iStack312 = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyExA)(*hKey, arg2, 0, 0x2001f);\n    if (iVar1 == 0) {\n        iVar1 = 0;\n        if (iStack328 != 0) {\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n        }\n        iStack328 = iStack312;\n        if (iVar1 == 0) {\n            puStack336 = auStack304;\n            uStack344 = 0;\n            uStack352 = 0;\n            auStack320[0] = 0x100;\n            piStack360 = NULL;\n            iVar1 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyExA)(iStack312, 0, auStack296, auStack320);\n            while (iVar1 == 0) {\n                iVar1 = fcn.00401fa0(&iStack328, auStack296);\n                if (iVar1 != 0) goto code_r0x004020e7;\n                puStack336 = auStack304;\n                uStack344 = 0;\n                uStack352 = 0;\n                auStack320[0] = 0x100;\n                piStack360 = NULL;\n                iVar1 = (*_sym.imp.ADVAPI32.dll_RegEnumKeyExA)(iStack328, 0, auStack296, auStack320);\n            }\n            if (iStack328 != 0) {\n                (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n                iStack328 = 0;\n            }\n            (*_sym.imp.ADVAPI32.dll_RegDeleteKeyA)(*hKey, arg2);\n        }\n    }\ncode_r0x004020e7:\n    if (iStack328 != 0) {\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)();\n    }\n    fcn.00418d10(uStack40 ^ auStack392);\n    return;\n}\n",
        "token_count": 580
    },
    "0040daa4": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0040daa4(int64_t arg1, int64_t arg2)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    int64_t arg1_00;\n    uint64_t X;\n    uint32_t uVar6;\n    uint32_t uStack136;\n    uint32_t uStack132;\n    int32_t iStack128;\n    int32_t iStack124;\n    int32_t iStack120;\n    int32_t iStack116;\n    int32_t iStack112;\n    int32_t iStack108;\n    int32_t iStack104;\n    int32_t iStack100;\n    int32_t iStack96;\n    int32_t iStack92;\n    uint auStack88 [5];\n    uchar auStack68 [36];\n    uint64_t Y;\n    \n    uVar1 = fcn.00412724(arg1);\n    arg1_00 = 0;\n    if (arg2 == 0) {\n        if ((uVar1 >> 0x1e & 1) == 0) {\n            iVar4 = (*_sym.imp.USER32.dll_GetWindow)(*(arg1 + 0x40), 4);\n        }\n        else {\n            iVar4 = (*_sym.imp.USER32.dll_GetParent)();\n        }\n        if ((iVar4 != 0) && (iVar2 = (*_sym.imp.USER32.dll_SendMessageA)(iVar4, 0x36b),  iVar2 != 0)) {\n            iVar4 = iVar2;\n        }\n    }\n    else {\n        iVar4 = *(arg2 + 0x40);\n    }\n    (*_sym.imp.USER32.dll_GetWindowRect)(*(arg1 + 0x40), &iStack120);\n    if ((uVar1 >> 0x1e & 1) == 0) {\n        if ((iVar4 != 0) &&\n           ((uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar4, 0xfffffff0),  (uVar1 >> 0x1c & 1) == 0 ||\n            ((uVar1 >> 0x1d & 1) != 0)))) {\n            iVar4 = arg1_00;\n        }\n        auStack88[0] = 0x28;\n        if (iVar4 == 0) {\n            piVar3 = fcn.00414d8c();\n            iVar4 = arg1_00;\n            if (piVar3 != NULL) {\n                iVar4 = (**(*piVar3 + 0xe8))(piVar3);\n            }\n            if (iVar4 != 0) {\n                arg1_00 = *(iVar4 + 0x40);\n            }\n            uVar5 = fcn.0040ae60(arg1_00, 1);\n            fcn.0040aed8(uVar5, auStack88);\n            (*_sym.imp.USER32.dll_CopyRect)(&iStack104, auStack68);\n        }\n        else {\n            (*_sym.imp.USER32.dll_GetWindowRect)(iVar4, &iStack104);\n            uVar5 = fcn.0040ae60(iVar4, 2);\n            fcn.0040aed8(uVar5, auStack88);\n        }\n        (*_sym.imp.USER32.dll_CopyRect)();\n    }\n    else {\n        uVar5 = (*_sym.imp.USER32.dll_GetParent)(*(arg1 + 0x40));\n        (*_sym.imp.USER32.dll_GetClientRect)(uVar5, &uStack136);\n        (*_sym.imp.USER32.dll_GetClientRect)(iVar4, &iStack104);\n        (*_sym.imp.USER32.dll_MapWindowPoints)();\n    }\n    uVar1 = (iStack96 + iStack104) / 2 - (iStack112 - iStack120) / 2;\n    X = uVar1;\n    uVar6 = (iStack92 + iStack100) / 2 - (iStack108 - iStack116) / 2;\n    Y = uVar6;\n    if (uVar1 < uStack136) {\n        X = uStack136;\n    }\n    else if (iStack128 < (iStack112 - iStack120) + uVar1) {\n        X = (iStack120 - iStack112) + iStack128;\n    }\n    if (uVar6 < uStack132) {\n        Y = uStack132;\n    }\n    else if (iStack124 < (iStack108 - iStack116) + uVar6) {\n        Y = (iStack116 - iStack108) + iStack124;\n    }\n    fcn.004127ec(arg1, 0, X, Y);\n    return;\n}\n",
        "token_count": 1046
    },
    "0040fedc": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.0040fedc(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    ulong uStackX24;\n    ulong uStackX32;\n    \n    uStackX24 = arg3;\n    uStackX32 = arg4;\n    fcn.0040fb50(arg1, arg2, &uStackX24);\n    return;\n}\n",
        "token_count": 84
    },
    "00417ea8": {
        "rules": [
            "execute shellcode via CopyFile2/5e26aed72a5343dd8575e85c80658d9d/1e72b327ed77488fa8075dcc8fba7738"
        ],
        "decompiled_code": "\nvoid fcn.00417ea8(ulong noname_0, ulong noname_1, ulong arg3)\n\n{\n    ulong auStackX24 [2];\n    \n    auStackX24[0] = arg3;\n    fcn.00417db0(noname_0, noname_1, auStackX24, 1);\n    return;\n}\n",
        "token_count": 79
    },
    "004017a0": {
        "rules": [
            "hash data using aphash/0253f481fbfe42f6972c4d360912dc99"
        ],
        "decompiled_code": "\nint64_t fcn.004017a0(int64_t arg1, int64_t arg2)\n\n{\n    char cVar1;\n    char cVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint32_t *puVar7;\n    uint32_t uVar8;\n    int64_t iVar9;\n    \n    iVar9 = *0x444078;\n    iVar5 = *0x44407c;\n    iVar6 = *0x44406c;\n    uVar8 = 0;\n    iVar5 = *(arg1 + *((((((*0x444068 - iVar5 * iVar5) + 1) * iVar9 - iVar6 * iVar6) - iVar5) + iVar6) * 0x80 + 0x3c +\n                      arg1) + 0x88 +\n             (((((iVar9 + -1) * iVar5 + 1) * iVar6 + (iVar9 + 1) * *0x444074) - iVar6 * iVar6) - iVar5) * 4) + arg1;\n    puVar7 = *(iVar5 + 0x20) + arg1;\n    if (*(iVar5 + 0x18) != 0) {\n        do {\n            pcVar4 = *puVar7 + arg1;\n            iVar6 = arg2 - pcVar4;\n            do {\n                cVar1 = *pcVar4;\n                cVar2 = pcVar4[iVar6];\n                if (cVar1 != cVar2) break;\n                pcVar4 = pcVar4 + 1;\n            } while (cVar2 != '\\0');\n            if (cVar1 == cVar2) {\n                iVar3 = *0x444070 * 5;\n                return *(*(iVar5 + 0x1c) + arg1 +\n                        *(*(iVar5 + 0x24) + arg1 +\n                         ((iVar3 + -0xf) * *0x44407c +\n                          iVar3 + (((*0x44406c * -5 + 5) * *0x44407c + 5 +\n                                   iVar3 + (*0x44406c * 5 + *0x444068 * -5) * *0x444074) * *0x44406c -\n                                  (iVar3 + 10) * *0x444074) + uVar8) * 2) * 4) + arg1;\n            }\n            uVar8 = uVar8 + 1;\n            puVar7 = puVar7 + 1;\n        } while (uVar8 < *(iVar5 + 0x18));\n    }\n    return 0;\n}\n",
        "token_count": 593
    },
    "004192d0": {
        "rules": [
            "decompress data using aPLib/06666ba0b6a14a5481e4ee6eb664d454"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x004191cd)\n\nuint8_t * fcn.004192d0(uint8_t *arg1, ulong arg2)\n\n{\n    uint8_t uVar1;\n    uint16_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint8_t *puVar5;\n    uint *puVar6;\n    uint8_t uVar7;\n    uint8_t *puVar8;\n    bool bVar9;\n    \n    puVar5 = NULL;\n    iVar3 = fcn.0041efc0();\n    iVar4 = *(iVar3 + 0xb8);\n    if ((*(iVar3 + 0xc0) != *0x445710) && ((*0x445598 & *(iVar3 + 200)) == 0)) {\n        fcn.0041ec30();\n    }\n    if ((iVar4 != *0x445490) && ((*0x445598 & *(iVar3 + 200)) == 0)) {\n        iVar4 = fcn.0041e050();\n    }\n    bVar9 = (*(iVar3 + 200) & 2) == 0;\n    if (bVar9) {\n        *(iVar3 + 200) = *(iVar3 + 200) | 2;\n    }\n    if (*(iVar4 + 8) == 0) {\n        puVar5 = fcn.00421c50(arg1);\n        if (bVar9) {\n            *(iVar3 + 200) = *(iVar3 + 200) & 0xfffffffd;\n        }\n    }\n    else if (arg1 == NULL) {\n        puVar6 = fcn.0041d1a0();\n        *puVar6 = 0x16;\n        fcn.0041f4d0(0, 0, 0, 0);\n        if (bVar9) {\n            *(iVar3 + 200) = *(iVar3 + 200) & 0xfffffffd;\n        }\n        puVar5 = NULL;\n    }\n    else {\n        do {\n            uVar7 = *arg1;\n            if ((*(uVar7 + 0x1d + iVar4) & 4) == 0) {\n                puVar8 = arg1;\n                if (arg2 == uVar7) {\n                    puVar5 = arg1;\n                }\n            }\n            else {\n                uVar1 = arg1[1];\n                puVar8 = arg1 + 1;\n                if (uVar1 == 0) {\n                    uVar7 = uVar1;\n                    if (puVar5 == NULL) {\n                        puVar5 = puVar8;\n                    }\n                }\n                else {\n                    uVar2 = CONCAT11(uVar7, uVar1);\n                    uVar7 = uVar1;\n                    if (arg2 == uVar2) {\n                        puVar5 = arg1;\n                    }\n                }\n            }\n            arg1 = puVar8 + 1;\n        } while (uVar7 != 0);\n        if (bVar9) {\n            *(iVar3 + 200) = *(iVar3 + 200) & 0xfffffffd;\n        }\n    }\n    return puVar5;\n}\n",
        "token_count": 702
    },
    "0040e054": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nint64_t fcn.0040e054(void)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    int64_t iVar3;\n    \n    iVar3 = fcn.00415aa8(0x44a088, 0x40c074);\n    if (iVar3 == 0) {\n        fcn.004129d8();\n        pcVar1 = swi(3);\n        iVar3 = (*pcVar1)();\n        return iVar3;\n    }\n    uVar2 = (*_sym.imp.USER32.dll_GetMessageTime)();\n    *(iVar3 + 0xb8) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetMessagePos)();\n    *(iVar3 + 0xbc) = CONCAT44(uVar2 >> 0x10, uVar2);\n    return iVar3 + 0x98;\n}\n",
        "token_count": 188
    },
    "00411408": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\nuint64_t fcn.00411408(ulong arg1, ulong arg2, ulong arg3, int64_t arg4)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    int64_t *in_stack_00000028;\n    uchar auStack40 [8];\n    int64_t iStack32;\n    int32_t iStack24;\n    \n    if (arg2 < 0x2b) {\ncode_r0x00411456:\n        if (arg2 - 0x132 < 7) {\n            iStack24 = arg2 - 0x132;\n            iStack32 = arg3;\n            uVar1 = fcn.00410800(arg1, 0xbc19, 0, auStack40);\n            return -(*in_stack_00000028 != 0) & uVar1;\n        }\ncode_r0x00411532:\n        uVar3 = 0;\n    }\n    else {\n        if ((0x2f < arg2) && (arg2 != 0x39)) {\n            if (arg2 == 0x4e) {\n                iStack32 = arg4;\n                uVar3 = fcn.0041211c(arg1, 0, *(arg4 + 0x10) | 0xbc4e0000, auStack40);\n                return uVar3;\n            }\n            if (arg2 == 0x111) {\n                iVar2 = fcn.0041211c(arg1, 0, arg3 >> 0x10 | 0xbd110000, 0);\n                if (iVar2 != 0) {\n                    if (in_stack_00000028 == NULL) {\n                        return 1;\n                    }\n                    *in_stack_00000028 = 1;\n                    return 1;\n                }\n                goto code_r0x00411532;\n            }\n            if ((arg2 < 0x114) || ((0x115 < arg2 && (arg2 != 0x210)))) goto code_r0x00411456;\n        }\n        uVar3 = fcn.00410800(arg1, arg2 + 0xbc00, arg3, arg4);\n    }\n    return uVar3;\n}\n",
        "token_count": 490
    },
    "00412560": {
        "rules": [
            "hash data using murmur3/51beaa2d5a2f415db2ae4fc8ef819b72/938ec34b87fc49598ca2362852471498"
        ],
        "decompiled_code": "\n// WARNING: Variable defined which should be unmapped: var_4h\n\nvoid fcn.00412560(ulong noname_0, ulong arg2)\n\n{\n    uint8_t uVar1;\n    code *pcVar2;\n    uint uVar3;\n    uchar *puVar4;\n    int32_t iVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int64_t iVar8;\n    uint16_t uVar9;\n    uint8_t *puVar10;\n    int32_t iVar11;\n    uchar auStack232 [32];\n    uchar *puStack200;\n    uchar auStack184 [128];\n    uint64_t uStack56;\n    ulong var_4h;\n    \n    uStack56 = *0x444d30 ^ auStack232;\n    uVar3 = (*_sym.imp.USER32.dll_GetMenuCheckMarkDimensions)();\n    iVar6 = uVar3;\n    iVar7 = uVar3 >> 0x10;\n    if ((4 < iVar6) && (iVar8 = 5,  5 < iVar7)) {\n        if (0x20 < iVar6) {\n            iVar6 = 0x20;\n        }\n        iVar5 = iVar6 + 0xf >> 4;\n        iVar11 = (iVar5 * 0x10 + (iVar6 + -4) / 2) - iVar6;\n        if (0xc < iVar11) {\n            iVar11 = 0xc;\n        }\n        if (0x20 < iVar7) {\n            iVar7 = 0x20;\n        }\n        fcn.00418a70(auStack184, 0xff, 0x80);\n        puVar10 = 0x436c30;\n        puVar4 = auStack184 + (iVar7 + -6 >> 1) * iVar5 * 2;\n        do {\n            uVar1 = *puVar10;\n            puVar10 = puVar10 + 1;\n            uVar9 = ~(uVar1 << (iVar11 & 0x1f));\n            puVar4[1] = uVar9;\n            *puVar4 = uVar9 >> 8;\n            puVar4 = puVar4 + iVar5 * 2;\n            iVar8 = iVar8 + -1;\n        } while (iVar8 != 0);\n        puStack200 = auStack184;\n        *0x44a100 = (*_sym.imp.GDI32.dll_CreateBitmap)(iVar6, iVar7, 1);\n        if (*0x44a100 == 0) {\n            *0x44a100 = (*_sym.imp.USER32.dll_LoadBitmapA)(0, 0x7fe3);\n        }\n        fcn.00418d10(uStack56 ^ auStack232);\n        return;\n    }\n    fcn.004129d8();\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 635
    },
    "00416620": {
        "rules": [
            "empty recycle bin quietly/a05fef7955a340fbb66225983c77e1df"
        ],
        "decompiled_code": "\nulong * fcn.00416620(ulong *arg1, int64_t arg2, int64_t arg3, int64_t arg4)\n\n{\n    code *pcVar1;\n    ulong *puVar2;\n    ulong in_stack_00000028;\n    uint in_stack_00000030;\n    \n    *arg1 = 0x437690;\n    fcn.00417af8(arg1 + 1, *(arg2 + 8), 0x40);\n    fcn.00416120(arg1 + 6, 10);\n    fcn.00416120(arg1 + 0xd, 4);\n    if (arg3 == 0) {\n        fcn.004129d8();\n        pcVar1 = swi(3);\n        puVar2 = (*pcVar1)();\n        return puVar2;\n    }\n    if (arg4 == 0) {\n        fcn.004129d8();\n        pcVar1 = swi(3);\n        puVar2 = (*pcVar1)();\n        return puVar2;\n    }\n    fcn.00415ecc(arg1 + 0xd, 7, 0);\n    arg1[0x14] = arg2;\n    arg1[4] = arg3;\n    arg1[5] = arg4;\n    arg1[0x15] = in_stack_00000028;\n    *(arg1 + 0x16) = in_stack_00000030;\n    return arg1;\n}\n",
        "token_count": 323
    },
    "004156e0": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint64_t fcn.004156e0(int64_t lpCriticalSection)\n\n{\n    uint32_t *puVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint8_t *puVar4;\n    uint64_t uVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    uint32_t uVar8;\n    uint32_t uVar9;\n    \n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 0x28);\n    iVar2 = *(lpCriticalSection + 4);\n    uVar8 = *(lpCriticalSection + 8);\n    if ((iVar2 <= uVar8) || ((*(*(lpCriticalSection + 0x10) + uVar8 * 0x10) & 1) != 0)) {\n        uVar8 = 1;\n        iVar7 = 1;\n        if (1 < iVar2) {\n            puVar4 = *(lpCriticalSection + 0x10);\n            do {\n                puVar4 = puVar4 + 0x10;\n                if ((*puVar4 & 1) == 0) break;\n                iVar7 = iVar7 + 1;\n                uVar8 = uVar8 + 1;\n            } while (iVar7 < iVar2);\n        }\n        if (iVar2 <= uVar8) {\n            uVar9 = iVar2 + 0x20;\n            if (*(lpCriticalSection + 0x10) == 0) {\n                if (0xffffffff < uVar9 << 4) {\n                    fcn.00401040(0x80070057);\n                    pcVar3 = swi(3);\n                    uVar5 = (*pcVar3)();\n                    return uVar5;\n                }\n                iVar7 = (*_sym.imp.KERNEL32.dll_GlobalAlloc)(2);\n            }\n            else {\n                uVar6 = (*_sym.imp.KERNEL32.dll_GlobalHandle)();\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(uVar6);\n                if (0xffffffff < uVar9 << 4) {\n                    fcn.00401040(0x80070057);\n                    pcVar3 = swi(3);\n                    uVar5 = (*pcVar3)();\n                    return uVar5;\n                }\n                iVar7 = (*_sym.imp.KERNEL32.dll_GlobalReAlloc)(uVar6, uVar9 << 4 & 0xffffffff, 0x2002);\n            }\n            if (iVar7 == 0) {\n                if (*(lpCriticalSection + 0x10) != 0) {\n                    uVar6 = (*_sym.imp.KERNEL32.dll_GlobalHandle)();\n                    (*_sym.imp.KERNEL32.dll_GlobalLock)(uVar6);\n                }\n                (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 0x28);\n                fcn.004129b4();\n                pcVar3 = swi(3);\n                uVar5 = (*pcVar3)();\n                return uVar5;\n            }\n            iVar7 = (*_sym.imp.KERNEL32.dll_GlobalLock)(iVar7);\n            fcn.00418a70(*(lpCriticalSection + 4) * 0x10 + iVar7, 0, uVar9 - *(lpCriticalSection + 4) << 4);\n            *(lpCriticalSection + 4) = uVar9;\n            *(lpCriticalSection + 0x10) = iVar7;\n        }\n    }\n    if (*(lpCriticalSection + 0xc) <= uVar8) {\n        *(lpCriticalSection + 0xc) = uVar8 + 1;\n    }\n    puVar1 = *(lpCriticalSection + 0x10) + uVar8 * 0x10;\n    *puVar1 = *puVar1 | 1;\n    *(lpCriticalSection + 8) = uVar8 + 1;\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 0x28);\n    return uVar8;\n}\n",
        "token_count": 847
    },
    "00416f20": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint64_t fcn.00416f20(int64_t arg1, uint *arg2)\n\n{\n    uint32_t uVar1;\n    uint8_t *puVar2;\n    uint32_t *puVar3;\n    code *pcVar4;\n    uint64_t uVar5;\n    uint16_t *puVar6;\n    uint8_t uVar7;\n    uint16_t uVar8;\n    \n    *arg2 = 1;\n    if ((*(arg1 + 0x20) & 1) == 0) {\n        fcn.00417a38(4, *(arg1 + 0x18));\n        pcVar4 = swi(3);\n        uVar5 = (*pcVar4)();\n        return uVar5;\n    }\n    uVar5 = *(arg1 + 0x38) + 1;\n    if (*(arg1 + 0x40) <= uVar5 && uVar5 != *(arg1 + 0x40)) {\n        fcn.00416dd8(arg1, (*(arg1 + 0x38) - *(arg1 + 0x40)) + 1);\n    }\n    puVar2 = *(arg1 + 0x38);\n    uVar7 = *puVar2;\n    *(arg1 + 0x38) = puVar2 + 1;\n    if (uVar7 == 0xff) {\n        if ((*(arg1 + 0x20) & 1) == 0) {\n            fcn.00417a38(4, *(arg1 + 0x18));\n            pcVar4 = swi(3);\n            uVar5 = (*pcVar4)();\n            return uVar5;\n        }\n        if (*(arg1 + 0x40) <= puVar2 + 3 && puVar2 + 3 != *(arg1 + 0x40)) {\n            fcn.00416dd8(arg1, (*(arg1 + 0x38) - *(arg1 + 0x40)) + 2);\n        }\n        uVar8 = **(arg1 + 0x38);\n        puVar6 = *(arg1 + 0x38) + 1;\n        *(arg1 + 0x38) = puVar6;\n        if (uVar8 == 0xfffe) {\n            *arg2 = 2;\n            if ((*(arg1 + 0x20) & 1) == 0) {\n                fcn.00417a38(4, *(arg1 + 0x18));\n                pcVar4 = swi(3);\n                uVar5 = (*pcVar4)();\n                return uVar5;\n            }\n            uVar5 = *(arg1 + 0x38) + 1;\n            if (*(arg1 + 0x40) <= uVar5 && uVar5 != *(arg1 + 0x40)) {\n                fcn.00416dd8(arg1, (*(arg1 + 0x38) - *(arg1 + 0x40)) + 1);\n            }\n            puVar2 = *(arg1 + 0x38);\n            uVar7 = *puVar2;\n            *(arg1 + 0x38) = puVar2 + 1;\n            if (uVar7 != 0xff) goto code_r0x00416f77;\n            if ((*(arg1 + 0x20) & 1) == 0) {\n                fcn.00417a38(4, *(arg1 + 0x18));\n                pcVar4 = swi(3);\n                uVar5 = (*pcVar4)();\n                return uVar5;\n            }\n            if (*(arg1 + 0x40) <= puVar2 + 3 && puVar2 + 3 != *(arg1 + 0x40)) {\n                fcn.00416dd8(arg1, (*(arg1 + 0x38) - *(arg1 + 0x40)) + 2);\n            }\n            uVar8 = **(arg1 + 0x38);\n            puVar6 = *(arg1 + 0x38) + 1;\n            *(arg1 + 0x38) = puVar6;\n        }\n        if (uVar8 == 0xffff) {\n            if ((*(arg1 + 0x20) & 1) == 0) {\n                fcn.00417a38(4, *(arg1 + 0x18));\n                pcVar4 = swi(3);\n                uVar5 = (*pcVar4)();\n                return uVar5;\n            }\n            if (*(arg1 + 0x40) <= puVar6 + 2 && puVar6 + 2 != *(arg1 + 0x40)) {\n                fcn.00416dd8(arg1, (*(arg1 + 0x38) - *(arg1 + 0x40)) + 4);\n            }\n            puVar3 = *(arg1 + 0x38);\n            uVar1 = *puVar3;\n            uVar5 = uVar1;\n            *(arg1 + 0x38) = puVar3 + 1;\n            if (uVar1 == 0xffffffff) {\n                if ((*(arg1 + 0x20) & 1) == 0) {\n                    fcn.00417a38(4, *(arg1 + 0x18));\n                    pcVar4 = swi(3);\n                    uVar5 = (*pcVar4)();\n                    return uVar5;\n                }\n                if (*(arg1 + 0x40) <= puVar3 + 3 && puVar3 + 3 != *(arg1 + 0x40)) {\n                    fcn.00416dd8(arg1, (*(arg1 + 0x38) - *(arg1 + 0x40)) + 8);\n                }\n                uVar5 = **(arg1 + 0x38);\n                *(arg1 + 0x38) = *(arg1 + 0x38) + 1;\n            }\n        }\n        else {\n            uVar5 = uVar8;\n        }\n    }\n    else {\ncode_r0x00416f77:\n        uVar5 = uVar7;\n    }\n    return uVar5;\n}\n",
        "token_count": 1368
    },
    "0041753c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nvoid fcn.0041753c(int64_t arg1, uint64_t arg2)\n\n{\n    code *pcVar1;\n    uint64_t uVar2;\n    \n    if (arg2 < 0xffff) {\n        if ((~*(arg1 + 0x20) & 1) == 0) {\n            fcn.00417a38(2, *(arg1 + 0x18));\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        uVar2 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar2 && uVar2 != *(arg1 + 0x40)) {\n            fcn.00416d1c(arg1);\n        }\n        **(arg1 + 0x38) = arg2;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 2;\n    }\n    else {\n        if ((~*(arg1 + 0x20) & 1) == 0) {\n            fcn.00417a38(2, *(arg1 + 0x18));\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        uVar2 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar2 && uVar2 != *(arg1 + 0x40)) {\n            fcn.00416d1c(arg1);\n        }\n        **(arg1 + 0x38) = 0xffff;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 2;\n        if (arg2 < 0xffffffff) {\n            if ((~*(arg1 + 0x20) & 1) == 0) {\n                fcn.00417a38(2, *(arg1 + 0x18));\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            uVar2 = *(arg1 + 0x38) + 4;\n            if (*(arg1 + 0x40) <= uVar2 && uVar2 != *(arg1 + 0x40)) {\n                fcn.00416d1c(arg1);\n            }\n            **(arg1 + 0x38) = arg2;\n            *(arg1 + 0x38) = *(arg1 + 0x38) + 4;\n        }\n        else {\n            if ((~*(arg1 + 0x20) & 1) == 0) {\n                fcn.00417a38(2, *(arg1 + 0x18));\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            uVar2 = *(arg1 + 0x38) + 4;\n            if (*(arg1 + 0x40) <= uVar2 && uVar2 != *(arg1 + 0x40)) {\n                fcn.00416d1c(arg1);\n            }\n            **(arg1 + 0x38) = 0xffffffff;\n            *(arg1 + 0x38) = *(arg1 + 0x38) + 4;\n            if ((~*(arg1 + 0x20) & 1) == 0) {\n                fcn.00417a38(2, *(arg1 + 0x18));\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            uVar2 = *(arg1 + 0x38) + 8;\n            if (*(arg1 + 0x40) <= uVar2 && uVar2 != *(arg1 + 0x40)) {\n                fcn.00416d1c(arg1);\n            }\n            **(arg1 + 0x38) = arg2;\n            *(arg1 + 0x38) = *(arg1 + 0x38) + 8;\n        }\n    }\n    return;\n}\n",
        "token_count": 900
    },
    "0041767c": {
        "rules": [
            "hash data with CRC32/3eb9336125364ec68f45469b7e7bd2b9"
        ],
        "decompiled_code": "\nuint64_t fcn.0041767c(int64_t arg1)\n\n{\n    uint16_t uVar1;\n    uint32_t uVar2;\n    uint16_t *puVar3;\n    uint32_t *puVar4;\n    code *pcVar5;\n    uint64_t uVar6;\n    \n    if ((*(arg1 + 0x20) & 1) == 0) {\n        fcn.00417a38(4, *(arg1 + 0x18));\n        pcVar5 = swi(3);\n        uVar6 = (*pcVar5)();\n        return uVar6;\n    }\n    uVar6 = *(arg1 + 0x38) + 2;\n    if (*(arg1 + 0x40) <= uVar6 && uVar6 != *(arg1 + 0x40)) {\n        fcn.00416dd8(arg1, (*(arg1 + 0x38) - *(arg1 + 0x40)) + 2);\n    }\n    puVar3 = *(arg1 + 0x38);\n    uVar1 = *puVar3;\n    *(arg1 + 0x38) = puVar3 + 1;\n    if (uVar1 == 0xffff) {\n        if ((*(arg1 + 0x20) & 1) == 0) {\n            fcn.00417a38(4, *(arg1 + 0x18));\n            pcVar5 = swi(3);\n            uVar6 = (*pcVar5)();\n            return uVar6;\n        }\n        if (*(arg1 + 0x40) <= puVar3 + 3 && puVar3 + 3 != *(arg1 + 0x40)) {\n            fcn.00416dd8(arg1, (*(arg1 + 0x38) - *(arg1 + 0x40)) + 4);\n        }\n        puVar4 = *(arg1 + 0x38);\n        uVar2 = *puVar4;\n        uVar6 = uVar2;\n        *(arg1 + 0x38) = puVar4 + 1;\n        if (uVar2 == 0xffffffff) {\n            if ((*(arg1 + 0x20) & 1) == 0) {\n                fcn.00417a38(4, *(arg1 + 0x18));\n                pcVar5 = swi(3);\n                uVar6 = (*pcVar5)();\n                return uVar6;\n            }\n            if (*(arg1 + 0x40) <= puVar4 + 3 && puVar4 + 3 != *(arg1 + 0x40)) {\n                fcn.00416dd8(arg1, (*(arg1 + 0x38) - *(arg1 + 0x40)) + 8);\n            }\n            uVar6 = **(arg1 + 0x38);\n            *(arg1 + 0x38) = *(arg1 + 0x38) + 1;\n        }\n    }\n    else {\n        uVar6 = uVar1;\n    }\n    return uVar6;\n}\n",
        "token_count": 684
    },
    "0040a8f0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040a990)\n// WARNING: Removing unreachable block (ram,0x0040a9a0)\n\nvoid fcn.0040a8f0(ulong arg1, ulong noname_1, ulong arg3, ulong arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    char cVar3;\n    int32_t iVar4;\n    int64_t *piVar5;\n    ulong uVar6;\n    int64_t iVar7;\n    char *pcVar8;\n    uchar auStack408 [32];\n    int64_t iStack376;\n    ulong auStack368 [7];\n    uchar auStack312 [256];\n    uint64_t uStack56;\n    \n    uStack56 = *0x444d30 ^ auStack408;\n    fcn.004183f0(0x446a60, arg3, 0x104);\n    iVar4 = fcn.00418750(0x446a60, 0x434a18);\n    if (iVar4 != 0) {\n        piVar5 = fcn.00413fd4();\n        if (piVar5 == NULL) {\n            fcn.00401040(0x80004005);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        iStack376 = (**(*piVar5 + 0x18))(piVar5);\n        iStack376 = iStack376 + 0x18;\n        iVar7 = -1;\n        pcVar8 = 0x446a60;\n        do {\n            if (iVar7 == 0) break;\n            iVar7 = iVar7 + -1;\n            cVar3 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar3 != '\\0');\n        fcn.00402d50(&iStack376, 0x446a60, ~iVar7 - 1);\n        cVar3 = fcn.00402130(&iStack376);\n        LOCK();\n        piVar1 = iStack376 + -8;\n        iVar4 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (iVar4 + -1 < 1) {\n            (**(**(iStack376 + -0x18) + 8))();\n        }\n        if (cVar3 == '\\0') {\n            fcn.00418c50(auStack312, \"Configuration file: %s\\n%s\", 0x446a60, \"not found.\");\n        }\n        else {\n            fcn.004012b0();\n            fcn.00418c50(auStack312, \"Configuration file: %s\", 0x446a60, arg4);\n        }\n    }\n    (*_sym.imp.USER32.dll_LoadStringA)(arg1, 0x67, 0x4467b0, 0xfe);\n    (*_sym.imp.USER32.dll_LoadStringA)(arg1, 0x6d, 0x4466b0, 0xfe);\n    fcn.0040a850(arg1);\n    iVar4 = fcn.00401ca0(arg1);\n    if (iVar4 != 0) {\n        uVar6 = (*_sym.imp.USER32.dll_LoadAcceleratorsA)(arg1, 0x6d);\n        iVar4 = (*_sym.imp.USER32.dll_GetMessageA)(auStack368, 0, 0, 0);\n        while (iVar4 != 0) {\n            if ((iVar4 != 0) == 0xffffffff) {\n                (*_sym.imp.USER32.dll_MessageBoxA)(0, \"Fail to run this application !\", 0x434a18, 0x10);\n                break;\n            }\n            iVar4 = (*_sym.imp.USER32.dll_TranslateAcceleratorA)(auStack368[0], uVar6, auStack368);\n            if (iVar4 == 0) {\n                (*_sym.imp.USER32.dll_TranslateMessage)(auStack368);\n                (*_sym.imp.USER32.dll_DispatchMessageA)(auStack368);\n            }\n            iVar4 = (*_sym.imp.USER32.dll_GetMessageA)(auStack368, 0, 0, 0);\n        }\n    }\n    fcn.00418d10(uStack56 ^ auStack408);\n    return;\n}\n",
        "token_count": 957
    },
    "0041533c": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0041533c(uint64_t arg1, uint64_t arg2, ulong arg3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int64_t hModule;\n    int64_t iStackX32;\n    \n    arg1 = arg1 & 0xffffffff;\n    piVar5 = fcn.00413fd4();\n    if (piVar5 == NULL) {\n        fcn.00401040(0x80004005);\n        pcVar3 = swi(3);\n        uVar6 = (*pcVar3)();\n        return uVar6;\n    }\n    iVar7 = (**(*piVar5 + 0x18))(piVar5);\n    iStackX32 = iVar7 + 0x18;\n    hModule = fcn.00413fc0(arg1);\n    iVar7 = iVar7 + 0x18;\n    if (hModule != 0) {\n        fcn.00402bb0(&iStackX32, hModule, arg1);\n        iVar7 = iStackX32;\n    }\n    if (arg3 == 0xffffffff) {\n        arg3._0_4_ = arg1;\n    }\n    uVar4 = fcn.004152f8(iVar7, arg2 & 0xffffffff, arg3);\n    LOCK();\n    piVar1 = iVar7 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar7 + -0x18) + 8))();\n    }\n    return uVar4;\n}\n",
        "token_count": 403
    },
    "00415690": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nint32_t * fcn.00415690(int32_t *arg1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t *piVar3;\n    \n    *(arg1 + 6) = 0;\n    *(arg1 + 8) = 8;\n    arg1[1] = 0;\n    arg1[2] = 1;\n    arg1[3] = 0;\n    *(arg1 + 4) = 0;\n    iVar2 = (*_sym.imp.KERNEL32.dll_TlsAlloc)();\n    *arg1 = iVar2;\n    if (iVar2 == -1) {\n        fcn.004129b4();\n        pcVar1 = swi(3);\n        piVar3 = (*pcVar1)();\n        return piVar3;\n    }\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(arg1 + 10);\n    return arg1;\n}\n",
        "token_count": 205
    },
    "00417bb8": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nvoid fcn.00417bb8(char **arg1, char *arg2, int64_t arg3, ulong arg4)\n\n{\n    char cVar1;\n    char *arg1_00;\n    code *pcVar2;\n    int32_t iVar3;\n    int32_t iVar4;\n    int32_t iVar5;\n    char *pcVar6;\n    uint64_t arg2_00;\n    \n    arg2_00 = 0;\n    if (arg2 == NULL) {\n        fcn.004129d8();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (arg3 == 0) {\n        fcn.004129d8();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    cVar1 = *arg2;\n    pcVar6 = arg2;\n    while (iVar5 = arg2_00,  cVar1 != '\\0') {\n        if (*pcVar6 == '%') {\n            cVar1 = pcVar6[1];\n            if ((cVar1 < '1') || ('9' < cVar1)) {\n                if ((cVar1 < 'A') || ('Z' < cVar1)) goto code_r0x00417c42;\n                if (cVar1 < ':') goto code_r0x00417c1d;\n                iVar4 = cVar1 + -0x38;\n            }\n            else {\ncode_r0x00417c1d:\n                iVar4 = cVar1 + -0x31;\n            }\n            pcVar6 = pcVar6 + 2;\n            if (arg4 <= iVar4) goto code_r0x00417c5a;\n            if (*(arg3 + iVar4 * 8) != 0) {\n                iVar4 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n                arg2_00 = iVar5 + iVar4;\n            }\n        }\n        else {\ncode_r0x00417c42:\n            iVar4 = fcn.0041dcc0(*pcVar6);\n            if (iVar4 != 0) {\n                iVar5 = iVar5 + 1;\n                pcVar6 = pcVar6 + 1;\n            }\n            pcVar6 = pcVar6 + 1;\ncode_r0x00417c5a:\n            arg2_00 = iVar5 + 1;\n        }\n        cVar1 = *pcVar6;\n    }\n    if ((1U - *(*arg1 + -8) | *(*arg1 + -0xc) - iVar5) < 0) {\n        fcn.00402a90(arg1, arg2_00);\n    }\n    pcVar6 = *arg1;\n    while( true ) {\n        iVar4 = arg2_00;\n        iVar5 = 0;\n        if (*arg2 == '\\0') break;\n        if (*arg2 == '%') {\n            cVar1 = arg2[1];\n            if ((cVar1 < '1') || ('9' < cVar1)) {\n                if ((cVar1 < 'A') || ('Z' < cVar1)) goto code_r0x00417d1a;\n                if (cVar1 < ':') goto code_r0x00417cb6;\n                iVar5 = cVar1 + -0x38;\n            }\n            else {\ncode_r0x00417cb6:\n                iVar5 = cVar1 + -0x31;\n            }\n            arg2 = arg2 + 2;\n            if (arg4 <= iVar5) {\n                *pcVar6 = '?';\n                goto code_r0x00417d3e;\n            }\n            if (*(arg3 + iVar5 * 8) != 0) {\n                iVar3 = (*_sym.imp.KERNEL32.dll_lstrlenA)();\n                iVar5 = fcn.0041d920(pcVar6, iVar4 + 1, *(arg3 + iVar5 * 8));\n                if (iVar5 != 0) {\n                    if (iVar5 == 0xc) {\n                        fcn.004129b4();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if ((iVar5 == 0x16) || (iVar5 == 0x22)) {\n                        fcn.004129d8();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if (iVar5 != 0x50) {\n                        fcn.004129d8();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n                arg2_00 = iVar4 - iVar3;\n                pcVar6 = pcVar6 + iVar3;\n            }\n        }\n        else {\ncode_r0x00417d1a:\n            iVar5 = fcn.0041dcc0(*arg2);\n            if (iVar5 != 0) {\n                cVar1 = *arg2;\n                arg2 = arg2 + 1;\n                *pcVar6 = cVar1;\n                pcVar6 = pcVar6 + 1;\n                iVar4 = iVar4 + -1;\n            }\n            cVar1 = *arg2;\n            arg2 = arg2 + 1;\n            *pcVar6 = cVar1;\ncode_r0x00417d3e:\n            pcVar6 = pcVar6 + 1;\n            arg2_00 = iVar4 - 1;\n        }\n    }\n    arg1_00 = *arg1;\n    iVar4 = pcVar6 - arg1_00;\n    if (iVar4 == -1) {\n        if (arg1_00 != NULL) {\n            iVar4 = fcn.0041cd50(arg1_00);\n            goto code_r0x00417d78;\n        }\n    }\n    else {\ncode_r0x00417d78:\n        iVar5 = iVar4;\n        if (iVar4 < 0) goto code_r0x00417da5;\n    }\n    if (iVar5 <= *(*arg1 + -0xc)) {\n        *(*arg1 + -0x10) = iVar5;\n        (*arg1)[iVar5] = '\\0';\n        return;\n    }\ncode_r0x00417da5:\n    fcn.00401040(0x80070057);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 1402
    },
    "0041eda0": {
        "rules": [
            "check if file exists/c301f2ef4d414d12851aaf7cbada9e20/bb34a6814d684c5e93a48a12384793c1"
        ],
        "decompiled_code": "\nulong fcn.0041eda0(ulong arg1)\n\n{\n    int64_t iVar1;\n    code *UNRECOVERED_JUMPTABLE;\n    ulong uVar2;\n    \n    if ((*0x445730 == -1) || (iVar1 = (*_sym.imp.KERNEL32.dll_FlsGetValue)(),  iVar1 == 0)) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"KERNEL32.DLL\");\n        if (iVar1 == 0) {\n            return arg1;\n        }\n        UNRECOVERED_JUMPTABLE = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"DecodePointer\");\n    }\n    else {\n        UNRECOVERED_JUMPTABLE = *(iVar1 + 0x2b0);\n    }\n    if (UNRECOVERED_JUMPTABLE == NULL) {\n        return arg1;\n    }\n    // WARNING: Could not recover jumptable at 0x0041edf7. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar2 = (*UNRECOVERED_JUMPTABLE)(arg1);\n    return uVar2;\n}\n",
        "token_count": 255
    },
    "00414340": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.00414340(ulong *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t *piVar3;\n    ulong *puVar4;\n    int64_t iVar5;\n    ulong in_R8;\n    ulong in_R9;\n    \n    *arg1 = 0x437380;\n    piVar3 = arg1[0x17];\n    if (piVar3 != NULL) {\n        (**(*piVar3 + 0x18))(piVar3, arg1 + 0x10, in_R8, in_R9, 0xfffffffffffffffe);\n        piVar3 = arg1[0x17];\n        if (piVar3 != NULL) {\n            (**(*piVar3 + 8))(piVar3, 1);\n        }\n    }\n    puVar4 = *arg1[0x19];\n    if (puVar4 != NULL) {\n        (***puVar4)(puVar4, 1);\n    }\n    puVar4 = *(arg1[0x19] + 8);\n    if (puVar4 != NULL) {\n        (***puVar4)(puVar4, 1);\n    }\n    fcn.0040ac34(arg1[0x19]);\n    if ((arg1[0x1b] != 0) && (arg1[0x1b] != -1)) {\n        if (*0x44a068 != NULL) {\n            (**0x44a068)();\n        }\n        arg1[0x1b] = 0xffffffffffffffff;\n    }\n    fcn.00415bc8(arg1 + 0x18);\n    iVar5 = arg1[0xb];\n    LOCK();\n    piVar1 = iVar5 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar5 + -0x18) + 8))();\n    }\n    return;\n}\n",
        "token_count": 446
    },
    "004149e8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong * fcn.004149e8(ulong *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    ulong *puVar3;\n    int64_t iVar4;\n    ulong uVar5;\n    \n    *arg1 = 0x437380;\n    arg1[6] = 0;\n    arg1[7] = 0;\n    arg1[8] = 0;\n    arg1[9] = 0;\n    piVar2 = fcn.00413fd4();\n    if (piVar2 == NULL) {\n        fcn.00401040(0x80004005);\n        pcVar1 = swi(3);\n        puVar3 = (*pcVar1)();\n        return puVar3;\n    }\n    iVar4 = (**(*piVar2 + 0x18))(piVar2);\n    arg1[0xb] = iVar4 + 0x18;\n    arg1[0xe] = 0;\n    arg1[0xf] = 0;\n    *(arg1 + 0x11) = 0xffffffff;\n    arg1[0x12] = 0;\n    arg1[0x15] = 0;\n    *(arg1 + 0x16) = 0;\n    arg1[9] = 0x40;\n    arg1[7] = 0x20;\n    *(arg1 + 0x2c) = 0;\n    *(arg1 + 5) = arg2;\n    if ((*(arg1[0xb] + -0xc) - 0x1000U | 1U - *(arg1[0xb] + -8)) < 0) {\n        fcn.00402a90(arg1 + 0xb, 0x1000);\n    }\n    *(arg1 + 0x54) = 1;\n    arg1[0xf] = 0x20;\n    uVar5 = fcn.0040abf8(0x10);\n    arg1[0x19] = uVar5;\n    iVar4 = fcn.0041557c(0x310);\n    if (iVar4 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.004144f8(iVar4);\n    }\n    *arg1[0x19] = uVar5;\n    iVar4 = fcn.0041557c(200);\n    if (iVar4 == 0) {\n        uVar5 = 0;\n    }\n    else {\n        uVar5 = fcn.00414870(iVar4);\n    }\n    *(arg1[0x19] + 8) = uVar5;\n    *(arg1 + 0x1a) = 1;\n    arg1[0x1b] = 0;\n    return arg1;\n}\n",
        "token_count": 636
    },
    "00414f90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nint64_t fcn.00414f90(int64_t arg1, ulong arg2)\n\n{\n    int16_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    ulong uVar4;\n    ulong auStackX16 [3];\n    uchar auStack24 [16];\n    \n    auStackX16[0] = arg2;\n    (*_sym.imp.USER32.dll_ClientToScreen)(arg1, auStackX16);\n    uVar4 = 5;\n    do {\n        arg1 = (*_sym.imp.USER32.dll_GetWindow)(arg1, uVar4);\n        if (arg1 == 0) {\n            return 0;\n        }\n        iVar1 = (*_sym.imp.USER32.dll_GetDlgCtrlID)(arg1);\n        if ((iVar1 != 0) && (uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(arg1, 0xfffffff0),  (uVar2 >> 0x1c & 1) != 0)\n           ) {\n            (*_sym.imp.USER32.dll_GetWindowRect)(arg1, auStack24);\n            iVar3 = (*_sym.imp.USER32.dll_PtInRect)(auStack24, auStackX16[0]);\n            if (iVar3 != 0) {\n                return arg1;\n            }\n        }\n        uVar4 = 2;\n    } while( true );\n}\n",
        "token_count": 306
    },
    "0041792c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nulong * fcn.0041792c(ulong *arg1, ulong arg2, int64_t arg3)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t *piVar3;\n    ulong *puVar4;\n    int64_t iVar5;\n    uint64_t arg3_00;\n    \n    fcn.004129fc(arg1);\n    *arg1 = 0x437788;\n    piVar3 = fcn.00413fd4();\n    arg3_00 = 0;\n    if (piVar3 == NULL) {\n        fcn.00401040(0x80004005);\n        pcVar1 = swi(3);\n        puVar4 = (*pcVar1)();\n        return puVar4;\n    }\n    iVar5 = (**(*piVar3 + 0x18))(piVar3);\n    arg1[3] = iVar5 + 0x18;\n    *(arg1 + 2) = arg2;\n    if (arg3 != 0) {\n        uVar2 = fcn.0041cd50(arg3);\n        arg3_00 = uVar2;\n    }\n    fcn.00402d50(arg1 + 3, arg3, arg3_00);\n    return arg1;\n}\n",
        "token_count": 281
    },
    "00417db0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/a90d4ac7cf5b4bde87d45a81715c7353",
            "validate payment card number using luhn algorithm with lookup table/6f7029bc2c134cb690df0e7c2f59f3d4"
        ],
        "decompiled_code": "\nvoid fcn.00417db0(ulong arg1, uint64_t arg2, ulong arg3, uint64_t arg4)\n\n{\n    int32_t *piVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t hModule;\n    int64_t iStack56;\n    ulong uStack48;\n    \n    uStack48 = 0xfffffffffffffffe;\n    piVar4 = fcn.00413fd4();\n    if (piVar4 != NULL) {\n        iVar5 = (**(*piVar4 + 0x18))(piVar4);\n        iStack56 = iVar5 + 0x18;\n        hModule = fcn.00413fc0(arg2 & 0xffffffff);\n        iVar5 = iVar5 + 0x18;\n        if ((hModule == 0) ||\n           (iVar3 = fcn.00402bb0(&iStack56, hModule, arg2 & 0xffffffff),  iVar5 = iStack56,  iVar3 == 0)) {\n            LOCK();\n            piVar1 = iVar5 + -8;\n            iVar3 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar3 + -1 < 1) {\n                (**(**(iVar5 + -0x18) + 8))();\n            }\n        }\n        else {\n            fcn.00417bb8(arg1, iStack56, arg3, arg4 & 0xffffffff);\n            LOCK();\n            piVar1 = iVar5 + -8;\n            iVar3 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar3 + -1 < 1) {\n                (**(**(iVar5 + -0x18) + 8))();\n            }\n        }\n        return;\n    }\n    fcn.00401040(0x80004005);\n    pcVar2 = swi(3);\n    (*pcVar2)();\n    return;\n}\n",
        "token_count": 450
    },
    "0040e204": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040e204(ulong arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.00414d10();\n    if (*(iVar1 + 0x28) != 0) {\n        fcn.00415fc0(*(iVar1 + 0x28) + 0x30, arg1);\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "0040e280": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint64_t fcn.0040e280(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    iVar1 = *(arg1 + 0x40);\n    if (iVar1 != 0) {\n        iVar2 = fcn.00414d10();\n        if (*(iVar2 + 0x28) != 0) {\n            fcn.00416008(*(iVar2 + 0x28) + 0x30, *(arg1 + 0x40));\n        }\n        *(arg1 + 0x40) = 0;\n    }\n    *(arg1 + 0xa0) = 0;\n    return iVar1;\n}\n",
        "token_count": 153
    },
    "0040e4f8": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nuint64_t fcn.0040e4f8(int64_t arg1)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    uint64_t uVar4;\n    \n    uVar4 = 0;\n    if (*(arg1 + 0x40) == 0) {\n        if (*(arg1 + 0xa0) == 0) {\n            return 0;\n        }\n        if (*(arg1 + 0x40) == 0) goto code_r0x0040e53e;\n    }\n    iVar3 = fcn.00414d10();\n    if (*(iVar3 + 0x28) == 0) {\n        fcn.004129d8();\n        pcVar1 = swi(3);\n        uVar4 = (*pcVar1)();\n        return uVar4;\n    }\n    fcn.00415fc0(*(iVar3 + 0x28) + 0x30, *(arg1 + 0x40));\ncode_r0x0040e53e:\n    if ((*(arg1 + 0x40) != 0) || (*(arg1 + 0xa0) != 0)) {\n        if (*(arg1 + 0xa0) == 0) {\n            uVar2 = (*_sym.imp.USER32.dll_DestroyWindow)();\n        }\n        else {\n            uVar2 = (**(**(arg1 + 0xa0) + 0xb0))();\n        }\n        uVar4 = uVar2;\n    }\n    return uVar4;\n}\n",
        "token_count": 343
    },
    "00413c54": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint64_t fcn.00413c54(int64_t *arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    iVar1 = arg1[1];\n    if (iVar1 != 0) {\n        iVar2 = fcn.00414d10();\n        if (*(iVar2 + 0x38) != 0) {\n            fcn.00416008(*(iVar2 + 0x38) + 0x30, arg1[1]);\n        }\n    }\n    (**(*arg1 + 0x28))(arg1);\n    arg1[1] = 0;\n    return iVar1;\n}\n",
        "token_count": 142
    },
    "00413de0": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint64_t fcn.00413de0(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    iVar1 = *(arg1 + 8);\n    if (iVar1 != 0) {\n        iVar2 = fcn.00414d10();\n        if (*(iVar2 + 0x40) != 0) {\n            fcn.00416008(*(iVar2 + 0x40) + 0x30, *(arg1 + 8));\n        }\n    }\n    *(arg1 + 8) = 0;\n    return iVar1;\n}\n",
        "token_count": 133
    },
    "00415d20": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415d20(ulong arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.00414d10();\n    if (*(iVar1 + 0x30) != 0) {\n        fcn.00415fc0(*(iVar1 + 0x30) + 0x30, arg1);\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "00415d4c": {
        "rules": [
            "PEB access/cd8d96519f6244b6acf2796407e948b9"
        ],
        "decompiled_code": "\nint64_t fcn.00415d4c(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    iVar1 = *(arg1 + 8);\n    if (iVar1 != 0) {\n        iVar2 = fcn.00414d10();\n        if (*(iVar2 + 0x30) != 0) {\n            fcn.00416008(*(iVar2 + 0x30) + 0x30, *(arg1 + 8));\n        }\n    }\n    *(arg1 + 8) = 0;\n    return iVar1;\n}\n",
        "token_count": 134
    },
    "00419f10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00419f10(int64_t lpMem)\n\n{\n    uint *puVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint uVar4;\n    \n    if ((lpMem != 0) && (iVar2 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x44ab60, 0, lpMem),  iVar2 == 0)) {\n        puVar1 = fcn.0041d1a0();\n        uVar3 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uVar4 = fcn.0041d150(uVar3);\n        *puVar1 = uVar4;\n    }\n    return;\n}\n",
        "token_count": 154
    },
    "00401060": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint16_t * fcn.00401060(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int64_t iVar1;\n    uint16_t *puVar2;\n    uint64_t uVar3;\n    uint16_t *puVar4;\n    \n    iVar1 = (*_sym.imp.KERNEL32.dll_LoadResource)();\n    if (iVar1 == 0) {\n        return NULL;\n    }\n    puVar2 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar1);\n    if (puVar2 != NULL) {\n        uVar3 = (*_sym.imp.KERNEL32.dll_SizeofResource)(arg1, arg2);\n        puVar4 = (uVar3 & 0xffffffff) + puVar2;\n        for (arg3._0_4_ = arg3 & 0xf; arg3 != 0; arg3._0_4_ = arg3 - 1) {\n            if (puVar4 <= puVar2) {\n                return NULL;\n            }\n            puVar2 = puVar2 + *puVar2 + 1;\n        }\n        if (puVar2 < puVar4) {\n            if (*puVar2 == 0) {\n                return NULL;\n            }\n            return puVar2;\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 282
    },
    "004012b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004012b0(void)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uchar auStack88 [32];\n    uint uStack56;\n    ulong uStack48;\n    uchar auStack40 [16];\n    uint64_t uStack24;\n    \n    uStack24 = *0x444d30 ^ auStack88;\n    uVar2 = 0x4469c8;\n    uStack48 = 0x446a60;\n    uStack56 = 0x14;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)(\"SETTINGS\", \"Version\", 0x434a18);\n    if (iVar1 == 0) {\n        fcn.00418c50(0x4469c8, 0x434a54, 0x434a18, uVar2);\n    }\n    uVar2 = 0x4469e0;\n    uStack48 = 0x446a60;\n    uStack56 = 0x80;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)(\"SETTINGS\", \"Description\", 0x434a18);\n    if (iVar1 == 0) {\n        fcn.00418c50(0x4469e0, 0x434a54, 0x434a18, uVar2);\n    }\n    uVar2 = 0x4468c0;\n    uStack48 = 0x446a60;\n    uStack56 = 0x104;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)(\"SETTINGS\", \"LogFile\", 0x434a18);\n    if (iVar1 == 0) {\n        fcn.00418c50(0x4468c0, 0x434a54, \"C:\\\\MsiMgr.log\", uVar2);\n    }\n    uStack48 = 0x446a60;\n    uStack56 = 0x104;\n    iVar1 = (*_sym.imp.KERNEL32.dll_GetPrivateProfileStringA)(\"SETTINGS\", \"ExecTimeout\", 0x434a18, auStack40);\n    if (iVar1 == 0) {\n        *0x4468bc = 300000;\n        fcn.00418d10(uStack24 ^ auStack88);\n        return;\n    }\n    *0x4468bc = fcn.00418c40(auStack40);\n    fcn.00418d10(uStack24 ^ auStack88);\n    return;\n}\n",
        "token_count": 552
    },
    "00401620": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00401620(ulong hKey, ulong lpSubKey, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint uVar2;\n    ulong auStack24 [3];\n    \n    uVar2 = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegOpenKeyA)(hKey, lpSubKey, auStack24);\n    if (iVar1 == 0) {\n        iVar1 = (*_sym.imp.ADVAPI32.dll_RegDeleteValueA)(auStack24[0], arg3);\n        uVar2 = 0;\n        if (iVar1 == 0) {\n            uVar2 = 1;\n        }\n    }\n    (*_sym.imp.ADVAPI32.dll_RegCloseKey)(auStack24[0]);\n    return uVar2;\n}\n",
        "token_count": 176
    },
    "004016b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004016b0(int16_t *arg1, int16_t *arg2)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int16_t iVar4;\n    int16_t iVar5;\n    uint64_t uVar6;\n    int16_t *piVar7;\n    \n    piVar7 = arg2;\n    iVar1 = fcn.00401690(arg1);\n    iVar2 = fcn.00401690(arg2);\n    if (iVar1 != iVar2) {\n        return 1;\n    }\n    uVar6 = 0;\n    iVar1 = fcn.00401690(arg1);\n    if (iVar1 != 0) {\n        do {\n            iVar5 = *arg1;\n            iVar4 = *piVar7;\n            if (iVar5 - 0x41U < 0x1a) {\n                iVar5 = iVar5 + 0x20;\n            }\n            if (iVar4 - 0x41U < 0x1a) {\n                iVar4 = iVar4 + 0x20;\n            }\n            if (iVar5 != iVar4) {\n                return 1;\n            }\n            arg1 = arg1 + 1;\n            uVar6 = uVar6 + 1;\n            piVar7 = piVar7 + 1;\n            uVar3 = fcn.00401690(arg1);\n        } while (uVar6 < uVar3);\n    }\n    return 0;\n}\n",
        "token_count": 331
    },
    "00401ca0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00401ca0(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    ulong uVar4;\n    code *pcVar5;\n    ulong auStackX8 [2];\n    code *apcStack40 [3];\n    \n    uVar3 = 0;\n    *0x446b68 = arg1;\n    iVar1 = (*_sym.imp.USER32.dll_CreateWindowExA)\n                      (0, 0x4466b0, 0x4467b0, 0xce0000, 0x80000000, 0, 0x80000000, 0, 0, 0, arg1, 0);\n    if (iVar1 != 0) {\n        (*_sym.imp.USER32.dll_ShowWindow)(iVar1, 0);\n        iVar2 = fcn.00401680();\n        auStackX8[0] = 0;\n        apcStack40[0] = NULL;\n        *0x446688 = 0x401c40;\n        *0x446680 = 0x401c60;\n        pcVar5 = 0x401c80;\n        uVar4 = uVar3;\n        if (0x12 < *(*(iVar2 + 0x20) + 0x70)) {\n            uVar3 = 0x19ea;\n            *0x444068 = 0;\n            *0x446680 = fcn.004017a0;\n            *0x44406c = 0;\n            uVar4 = 0x19eb;\n            *0x444070 = 0;\n            *0x444078 = 0;\n            *0x446688 = 0x401740;\n            *0x444074 = 0;\n            *0x44407c = 0;\n            pcVar5 = 0x401940;\n        }\n        (*pcVar5)(uVar3, apcStack40);\n        (*pcVar5)(uVar4, auStackX8);\n        *0x4466a0 = auStackX8[0];\n        *0x4466a8 = 0;\n        *0x446690 = 0;\n        *0x446698 = 1;\n        (*apcStack40[0])(0x446690);\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar1, 2, 0);\n        (*_sym.imp.USER32.dll_UpdateWindow)(iVar1);\n        (*_sym.imp.USER32.dll_SetTimer)(iVar1, 1, 0x96);\n        iVar1 = 1;\n    }\n    return iVar1;\n}\n",
        "token_count": 586
    },
    "00401f50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00401f50(int64_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    if ((*(*arg1 + -0xc) < arg2) && (0 < arg2)) {\n        iVar2 = (**(**(*arg1 + -0x18) + 0x10))();\n        if (iVar2 == 0) {\n            fcn.00401e80();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        *arg1 = iVar2 + 0x18;\n        return;\n    }\n    fcn.00401e80();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 168
    },
    "00402130": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00402130(ulong *lpFileName)\n\n{\n    uchar auStack376 [32];\n    uchar auStack344 [320];\n    uint64_t uStack24;\n    \n    uStack24 = *0x444d30 ^ auStack376;\n    (*_sym.imp.KERNEL32.dll_FindFirstFileA)(*lpFileName, auStack344);\n    fcn.00418d10(uStack24 ^ auStack376);\n    return;\n}\n",
        "token_count": 97
    },
    "00402590": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402590(ulong hKey, ulong lpSubKey, ulong arg3)\n\n{\n    int32_t iVar1;\n    uchar auStack216 [32];\n    uint uStack184;\n    uint uStack176;\n    ulong uStack168;\n    ulong *puStack160;\n    uint *puStack152;\n    uint auStack136 [2];\n    ulong uStack128;\n    ulong auStack120 [2];\n    uchar auStack104 [80];\n    uint64_t uStack24;\n    \n    uStack24 = *0x444d30 ^ auStack216;\n    puStack152 = auStack136;\n    puStack160 = &uStack128;\n    uStack168 = 0;\n    uStack176 = 0xf003f;\n    uStack184 = 1;\n    auStack136[0] = 0;\n    iVar1 = (*_sym.imp.ADVAPI32.dll_RegCreateKeyExA)(hKey, lpSubKey, 0, auStack104);\n    if (iVar1 == 0) {\n        auStack120[0] = uStack128;\n        fcn.00401fa0(auStack120, arg3);\n        (*_sym.imp.ADVAPI32.dll_RegCloseKey)(uStack128);\n    }\n    fcn.00418d10(uStack24 ^ auStack216);\n    return;\n}\n",
        "token_count": 293
    },
    "00402910": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00402910(int64_t *arg1, int64_t arg2, ulong arg3, ulong *arg4)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    uint64_t arg2_00;\n    \n    arg2_00 = arg3;\n    if (arg4 == NULL) {\n        fcn.00401040(0x80004005);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    if ((arg2 == 0) && (arg3 != 0)) {\n        fcn.00401040(0x80070057);\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    iVar3 = (***arg4)(arg4, arg2_00 & 0xffffffff, 1);\n    if (iVar3 == 0) {\n        fcn.00401e80();\n        pcVar1 = swi(3);\n        piVar2 = (*pcVar1)();\n        return piVar2;\n    }\n    *arg1 = iVar3 + 0x18;\n    if ((-1 < arg3) && (arg3 <= *(iVar3 + 0xc))) {\n        *(iVar3 + 8) = arg3;\n        *(arg2_00 + *arg1) = 0;\n        fcn.004194d0(*arg1, arg2_00, arg2, arg2_00);\n        return arg1;\n    }\n    fcn.00401040(0x80070057);\n    pcVar1 = swi(3);\n    piVar2 = (*pcVar1)();\n    return piVar2;\n}\n",
        "token_count": 394
    },
    "00402a60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402a60(int64_t *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    iVar3 = *arg1;\n    LOCK();\n    piVar1 = iVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar3 + -0x18) + 8))();\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "00402b80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402b80(int64_t *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    \n    iVar3 = *arg1;\n    LOCK();\n    piVar1 = iVar3 + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(iVar3 + -0x18) + 8))();\n    }\n    return;\n}\n",
        "token_count": 122
    },
    "00402bb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop",
            "extract resource via kernel32 functions"
        ],
        "decompiled_code": "\nulong fcn.00402bb0(int64_t *arg1, ulong hModule, ulong arg3)\n\n{\n    uint16_t uVar1;\n    code *pcVar2;\n    uint uVar3;\n    uint32_t uVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint16_t *puVar7;\n    uint64_t uVar8;\n    ulong uVar9;\n    uint16_t *puVar10;\n    \n    iVar5 = (*_sym.imp.KERNEL32.dll_FindResourceA)(hModule, (arg3 >> 4) + 1, 6);\n    if (((iVar5 != 0) && (iVar6 = (*_sym.imp.KERNEL32.dll_LoadResource)(hModule, iVar5),  iVar6 != 0)) &&\n       (puVar7 = (*_sym.imp.KERNEL32.dll_LockResource)(iVar6),  puVar7 != NULL)) {\n        uVar8 = (*_sym.imp.KERNEL32.dll_SizeofResource)(hModule, iVar5);\n        puVar10 = (uVar8 & 0xffffffff) + puVar7;\n        for (arg3._0_4_ = arg3 & 0xf; arg3 != 0; arg3._0_4_ = arg3 - 1) {\n            if (puVar10 <= puVar7) {\n                return 0;\n            }\n            puVar7 = puVar7 + *puVar7 + 1;\n        }\n        if ((puVar7 < puVar10) && (uVar1 = *puVar7,  uVar1 != 0)) {\n            uVar3 = (**0x446650)();\n            uVar4 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(uVar3, 0, puVar7 + 1, uVar1, 0, 0, 0, 0);\n            if ((1U - *(*arg1 + -8) | *(*arg1 + -0xc) - uVar4) < 0) {\n                fcn.00402a90(arg1, uVar4);\n            }\n            iVar5 = *arg1;\n            uVar1 = *puVar7;\n            uVar3 = (**0x446650)();\n            (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(uVar3, 0, puVar7 + 1, uVar1, iVar5, uVar4, 0, 0);\n            if ((-1 < uVar4) && (uVar4 <= *(*arg1 + -0xc))) {\n                *(*arg1 + -0x10) = uVar4;\n                *(uVar4 + *arg1) = 0;\n                return 1;\n            }\n            fcn.00401040(0x80070057);\n            pcVar2 = swi(3);\n            uVar9 = (*pcVar2)();\n            return uVar9;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 649
    },
    "00402d50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00402d50(int64_t *arg1, int64_t arg2, ulong arg3)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t arg1_00;\n    code *pcVar6;\n    int64_t iVar7;\n    \n    iVar7 = arg3;\n    if (arg3 == 0) {\n        iVar7 = *arg1;\n        piVar4 = *(iVar7 + -0x18);\n        if (*(iVar7 + -0x10) != 0) {\n            if (-1 < *(iVar7 + -8)) {\n                LOCK();\n                piVar1 = iVar7 + -8;\n                iVar2 = *piVar1;\n                *piVar1 = *piVar1 + -1;\n                if (iVar2 + -1 < 1) {\n                    (**(**(iVar7 + -0x18) + 8))();\n                }\n                iVar7 = (**(*piVar4 + 0x18))(piVar4);\n                *arg1 = iVar7 + 0x18;\n                return;\n            }\n            if (*(iVar7 + -0xc) < 0) {\n                fcn.00401040(0x80070057);\n                pcVar6 = swi(3);\n                (*pcVar6)();\n                return;\n            }\n            *(iVar7 + -0x10) = 0;\n            **arg1 = 0;\n            return;\n        }\n    }\n    else {\n        if (arg2 == 0) {\n            fcn.00401040(0x80070057);\n            pcVar6 = swi(3);\n            (*pcVar6)();\n            return;\n        }\n        iVar5 = *arg1;\n        uVar3 = *(iVar5 + -0x10);\n        if ((1U - *(iVar5 + -8) | *(iVar5 + -0xc) - arg3) < 0) {\n            fcn.00402a90(arg1, arg3);\n        }\n        arg1_00 = *arg1;\n        if (uVar3 < arg2 - iVar5) {\n            fcn.004194d0(arg1_00, iVar7, arg2, iVar7);\n        }\n        else {\n            fcn.00418760(arg1_00, iVar7, arg1_00 + (arg2 - iVar5), iVar7);\n        }\n        if ((arg3 < 0) || (*(*arg1 + -0xc) < arg3)) {\n            fcn.00401040(0x80070057);\n            pcVar6 = swi(3);\n            (*pcVar6)();\n            return;\n        }\n        *(*arg1 + -0x10) = arg3;\n        *(iVar7 + *arg1) = 0;\n    }\n    return;\n}\n",
        "token_count": 636
    },
    "00402eb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nchar ** fcn.00402eb0(char **arg1)\n\n{\n    char *pcVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    char *pcVar4;\n    char **ppcVar5;\n    int32_t iVar6;\n    \n    pcVar4 = *arg1;\n    iVar3 = fcn.00418f70(*pcVar4);\n    while (iVar3 != 0) {\n        pcVar4 = fcn.00418d30(pcVar4);\n        iVar3 = fcn.00418f70(*pcVar4);\n    }\n    pcVar1 = *arg1;\n    if (pcVar4 != pcVar1) {\n        iVar3 = pcVar4 - pcVar1;\n        if ((1U - *(pcVar1 + -8) | *(pcVar1 + -0xc) - *(pcVar1 + -0x10)) < 0) {\n            fcn.00402a90(arg1, *(pcVar1 + -0x10));\n        }\n        pcVar4 = *arg1;\n        iVar6 = *(pcVar4 + -0x10) - iVar3;\n        iVar3 = fcn.00418760(pcVar4, iVar6 + 1, pcVar4 + iVar3, iVar6 + 1);\n        if (iVar3 != 0) {\n            if (iVar3 == 0xc) {\n                fcn.004129b4();\n                pcVar2 = swi(3);\n                ppcVar5 = (*pcVar2)();\n                return ppcVar5;\n            }\n            if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                fcn.004129d8();\n                pcVar2 = swi(3);\n                ppcVar5 = (*pcVar2)();\n                return ppcVar5;\n            }\n            if (iVar3 != 0x50) {\n                fcn.004129d8();\n                pcVar2 = swi(3);\n                ppcVar5 = (*pcVar2)();\n                return ppcVar5;\n            }\n        }\n        if ((iVar6 < 0) || (*(*arg1 + -0xc) < iVar6)) {\n            fcn.00401040(0x80070057);\n            pcVar2 = swi(3);\n            ppcVar5 = (*pcVar2)();\n            return ppcVar5;\n        }\n        *(*arg1 + -0x10) = iVar6;\n        (*arg1)[iVar6] = '\\0';\n    }\n    return arg1;\n}\n",
        "token_count": 561
    },
    "00402fa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t ** fcn.00402fa0(int64_t *arg1, int64_t **arg2, ulong arg3, ulong arg4)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    ulong *puVar4;\n    int64_t *piVar5;\n    int64_t **ppiVar6;\n    int64_t iVar7;\n    \n    if (arg3 < 0) {\n        arg3._0_4_ = 0;\n    }\n    if (arg4 < 0) {\n        arg4._0_4_ = 0;\n    }\n    if (0x7fffffff - arg3 < arg4) {\n        fcn.00401040(0x80070057);\n        pcVar3 = swi(3);\n        ppiVar6 = (*pcVar3)();\n        return ppiVar6;\n    }\n    iVar2 = *arg1;\n    iVar1 = *(iVar2 + -0x10);\n    if (iVar1 < arg3 + arg4) {\n        arg4._0_4_ = iVar1 - arg3;\n    }\n    if (iVar1 < arg3) {\n        arg4._0_4_ = 0;\n    }\n    if ((arg3 == 0) && (arg4 == iVar1)) {\n        piVar5 = iVar2 + -0x18;\n        puVar4 = (**(**(iVar2 + -0x18) + 0x20))();\n        if ((*(iVar2 + -8) < 0) || (puVar4 != *piVar5)) {\n            piVar5 = (***puVar4)(puVar4, *(iVar2 + -0x10), 1);\n            if (piVar5 == NULL) {\n                fcn.00401e80();\n                pcVar3 = swi(3);\n                ppiVar6 = (*pcVar3)();\n                return ppiVar6;\n            }\n            *(piVar5 + 1) = *(iVar2 + -0x10);\n            iVar7 = *(iVar2 + -0x10) + 1;\n            fcn.004194d0(piVar5 + 3, iVar7, iVar2, iVar7);\n        }\n        else {\n            LOCK();\n            *(iVar2 + -8) = *(iVar2 + -8) + 1;\n        }\n        *arg2 = piVar5 + 3;\n        return arg2;\n    }\n    if ((*(iVar2 + -0x18) == NULL) || (puVar4 = (**(**(iVar2 + -0x18) + 0x20))(),  puVar4 == NULL)) {\n        piVar5 = fcn.00413fd4();\n        puVar4 = (**(*piVar5 + 0x20))(piVar5);\n    }\n    iVar2 = *arg1;\n    if (puVar4 != NULL) {\n        if ((arg3 + iVar2 == 0) && (arg4 != 0)) {\n            fcn.00401040(0x80070057);\n            pcVar3 = swi(3);\n            ppiVar6 = (*pcVar3)();\n            return ppiVar6;\n        }\n        iVar7 = (***puVar4)(puVar4, arg4, 1);\n        if (iVar7 == 0) {\n            fcn.00401e80();\n            pcVar3 = swi(3);\n            ppiVar6 = (*pcVar3)();\n            return ppiVar6;\n        }\n        *arg2 = iVar7 + 0x18;\n        if ((-1 < arg4) && (arg4 <= *(iVar7 + 0xc))) {\n            *(iVar7 + 8) = arg4;\n            iVar7 = arg4;\n            *(iVar7 + *arg2) = 0;\n            fcn.004194d0(*arg2, iVar7, arg3 + iVar2, iVar7);\n            return arg2;\n        }\n        fcn.00401040(0x80070057);\n        pcVar3 = swi(3);\n        ppiVar6 = (*pcVar3)();\n        return ppiVar6;\n    }\n    fcn.00401040(0x80004005);\n    pcVar3 = swi(3);\n    ppiVar6 = (*pcVar3)();\n    return ppiVar6;\n}\n",
        "token_count": 956
    },
    "00403370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00403370(int64_t *arg1, ulong arg2, ulong arg3)\n\n{\n    fcn.00402fa0(arg1, arg2, arg3, *(*arg1 + -0x10) - arg3);\n    return arg2;\n}\n",
        "token_count": 60
    },
    "004033a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.004033a0(int64_t *arg1, int64_t *arg2, int64_t *arg3)\n\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    int64_t arg3_00;\n    int64_t arg3_01;\n    code *pcVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t arg2_00;\n    uint32_t uVar6;\n    \n    if (*(*arg2 + -0x18) != NULL) {\n        piVar4 = (**(**(*arg2 + -0x18) + 0x20))();\n        if (piVar4 != NULL) goto code_r0x0040340a;\n    }\n    piVar4 = fcn.00413fd4();\n    piVar4 = (**(*piVar4 + 0x20))(piVar4);\ncode_r0x0040340a:\n    if (piVar4 == NULL) {\n        fcn.00401040(0x80004005);\n        pcVar3 = swi(3);\n        piVar4 = (*pcVar3)();\n        return piVar4;\n    }\n    iVar5 = (**(*piVar4 + 0x18))();\n    *arg1 = iVar5 + 0x18;\n    arg3_00 = *arg3;\n    iVar1 = *(arg3_00 + -0x10);\n    arg3_01 = *arg2;\n    iVar2 = *(arg3_01 + -0x10);\n    arg2_00 = iVar2;\n    uVar6 = iVar2 + iVar1;\n    if ((*(iVar5 + 0xc) - uVar6 | 1U - *(iVar5 + 0x10)) < 0) {\n        fcn.00402a90(arg1, uVar6);\n    }\n    iVar5 = *arg1;\n    fcn.004194d0(iVar5, arg2_00, arg3_01, arg2_00);\n    fcn.004194d0(arg2_00 + iVar5, iVar1, arg3_00, iVar1);\n    if ((uVar6 < 0) || (*(*arg1 + -0xc) < uVar6)) {\n        arg1 = fcn.00401040(0x80070057);\n    }\n    else {\n        *(*arg1 + -0x10) = uVar6;\n        *(uVar6 + *arg1) = 0;\n    }\n    return arg1;\n}\n",
        "token_count": 558
    },
    "00403510": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00403510(int64_t *arg1, int64_t *arg2, char *arg3)\n\n{\n    char cVar1;\n    int32_t iVar2;\n    code *pcVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    int64_t iVar6;\n    uint32_t uVar7;\n    char *pcVar8;\n    int64_t arg2_00;\n    int32_t iVar9;\n    \n    iVar9 = 0;\n    if (*(*arg2 + -0x18) != NULL) {\n        piVar4 = (**(**(*arg2 + -0x18) + 0x20))();\n        if (piVar4 != NULL) goto code_r0x0040357c;\n    }\n    piVar4 = fcn.00413fd4();\n    piVar4 = (**(*piVar4 + 0x20))();\ncode_r0x0040357c:\n    if (piVar4 == NULL) {\n        fcn.00401040(0x80004005);\n        pcVar3 = swi(3);\n        piVar4 = (*pcVar3)();\n        return piVar4;\n    }\n    iVar5 = (**(*piVar4 + 0x18))(piVar4);\n    *arg1 = iVar5 + 0x18;\n    if (arg3 != NULL) {\n        iVar6 = -1;\n        pcVar8 = arg3;\n        do {\n            if (iVar6 == 0) break;\n            iVar6 = iVar6 + -1;\n            cVar1 = *pcVar8;\n            pcVar8 = pcVar8 + 1;\n        } while (cVar1 != '\\0');\n        iVar9 = ~iVar6 - 1;\n    }\n    iVar6 = *arg2;\n    iVar2 = *(iVar6 + -0x10);\n    arg2_00 = iVar2;\n    uVar7 = iVar9 + iVar2;\n    if ((*(iVar5 + 0xc) - uVar7 | 1U - *(iVar5 + 0x10)) < 0) {\n        fcn.00402a90(arg1, uVar7);\n    }\n    iVar5 = *arg1;\n    fcn.004194d0(iVar5, arg2_00, iVar6, arg2_00);\n    fcn.004194d0(arg2_00 + iVar5, iVar9, arg3, iVar9);\n    if ((uVar7 < 0) || (*(*arg1 + -0xc) < uVar7)) {\n        arg1 = fcn.00401040(0x80070057);\n    }\n    else {\n        *(*arg1 + -0x10) = uVar7;\n        *(uVar7 + *arg1) = 0;\n    }\n    return arg1;\n}\n",
        "token_count": 625
    },
    "00403880": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00403880(int64_t *arg1, char *arg2)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int64_t *piVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    char *pcVar6;\n    \n    piVar3 = fcn.00413fd4();\n    if (piVar3 == NULL) {\n        fcn.00401040(0x80004005);\n        pcVar2 = swi(3);\n        piVar3 = (*pcVar2)();\n        return piVar3;\n    }\n    iVar4 = (**(*piVar3 + 0x18))();\n    *arg1 = iVar4 + 0x18;\n    if (arg2 == NULL) {\n        uVar5 = 0;\n    }\n    else {\n        if ((arg2 & 0xffffffffffff0000) == 0) {\n            iVar4 = fcn.00413fc0(arg2 & 0xffff);\n            if (iVar4 == 0) {\n                return arg1;\n            }\n            fcn.00402bb0(arg1, iVar4, arg2 & 0xffff);\n            return arg1;\n        }\n        iVar4 = -1;\n        pcVar6 = arg2;\n        do {\n            if (iVar4 == 0) break;\n            iVar4 = iVar4 + -1;\n            cVar1 = *pcVar6;\n            pcVar6 = pcVar6 + 1;\n        } while (cVar1 != '\\0');\n        uVar5 = ~iVar4 - 1;\n    }\n    fcn.00402d50(arg1, arg2, uVar5);\n    return arg1;\n}\n",
        "token_count": 376
    },
    "00405e90": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00405e90(char **arg1, char **arg2, uint64_t arg3)\n\n{\n    char cVar1;\n    char *pcVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    uint64_t uVar5;\n    int32_t iVar6;\n    int32_t iVar7;\n    int64_t iVar8;\n    char *pcVar9;\n    \n    if ((1U - *(*arg2 + -8) | *(*arg2 + -0xc) - 3U) < 0) {\n        fcn.00402a90(arg2, 3);\n    }\n    pcVar2 = *arg2;\n    if ((1U - *(*arg1 + -8) | *(*arg1 + -0xc) - 0x104U) < 0) {\n        fcn.00402a90(arg1, 0x104);\n    }\n    uVar4 = fcn.00405980(*arg1, arg3 & 0xffffffff, 0, pcVar2);\n    pcVar2 = *arg1;\n    iVar7 = 0;\n    if (pcVar2 == NULL) {\n        iVar6 = 0;\n    }\n    else {\n        iVar8 = -1;\n        pcVar9 = pcVar2;\n        do {\n            if (iVar8 == 0) break;\n            iVar8 = iVar8 + -1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        iVar6 = ~iVar8 - 1;\n        if (iVar6 < 0) goto code_r0x00405fac;\n    }\n    if (*(pcVar2 + -0xc) < iVar6) {\ncode_r0x00405fac:\n        fcn.00401040(0x80070057);\n        pcVar3 = swi(3);\n        uVar5 = (*pcVar3)();\n        return uVar5;\n    }\n    *(pcVar2 + -0x10) = iVar6;\n    (*arg1)[iVar6] = '\\0';\n    pcVar2 = *arg2;\n    if (pcVar2 != NULL) {\n        iVar8 = -1;\n        pcVar9 = pcVar2;\n        do {\n            if (iVar8 == 0) break;\n            iVar8 = iVar8 + -1;\n            cVar1 = *pcVar9;\n            pcVar9 = pcVar9 + 1;\n        } while (cVar1 != '\\0');\n        iVar7 = ~iVar8 - 1;\n        if (iVar7 < 0) goto code_r0x00405fa1;\n    }\n    if (iVar7 <= *(pcVar2 + -0xc)) {\n        *(pcVar2 + -0x10) = iVar7;\n        (*arg2)[iVar7] = '\\0';\n        return uVar4;\n    }\ncode_r0x00405fa1:\n    fcn.00401040(0x80070057);\n    pcVar3 = swi(3);\n    uVar5 = (*pcVar3)();\n    return uVar5;\n}\n",
        "token_count": 691
    },
    "00405fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0040603c)\n// WARNING: Removing unreachable block (ram,0x0040604b)\n\nuint64_t fcn.00405fc0(char **arg1, uint64_t arg2, uint64_t arg3)\n\n{\n    int32_t *piVar1;\n    char cVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    int64_t *piVar5;\n    uint64_t uVar6;\n    int64_t iVar7;\n    int32_t iVar8;\n    int32_t iVar9;\n    char *pcVar10;\n    char *pcVar11;\n    char *pcVar12;\n    char *pcStack40;\n    ulong uStack32;\n    \n    uStack32 = 0xfffffffffffffffe;\n    piVar5 = fcn.00413fd4();\n    iVar9 = 0;\n    if (piVar5 == NULL) {\n        fcn.00401040(0x80004005);\n        pcVar3 = swi(3);\n        uVar6 = (*pcVar3)();\n        return uVar6;\n    }\n    iVar7 = (**(*piVar5 + 0x18))();\n    pcStack40 = iVar7 + 0x18;\n    iVar7 = -1;\n    pcVar10 = 0x434e10;\n    do {\n        if (iVar7 == 0) break;\n        iVar7 = iVar7 + -1;\n        cVar2 = *pcVar10;\n        pcVar10 = pcVar10 + 1;\n    } while (cVar2 != '\\0');\n    fcn.00402d50(&pcStack40, 0x434e10, ~iVar7 - 1);\n    if ((*(pcStack40 + -0xc) - 3U | 1U - *(pcStack40 + -8)) < 0) {\n        fcn.00402a90(&pcStack40, 3);\n    }\n    pcVar10 = pcStack40;\n    if ((*(*arg1 + -0xc) - 0x104U | 1U - *(*arg1 + -8)) < 0) {\n        fcn.00402a90(arg1, 0x104);\n    }\n    uVar4 = fcn.00405980(*arg1, arg2 & 0xffffffff, arg3 & 0xffffffff, pcVar10);\n    pcVar12 = *arg1;\n    if (pcVar12 == NULL) {\n        iVar8 = 0;\n    }\n    else {\n        iVar7 = -1;\n        pcVar11 = pcVar12;\n        do {\n            if (iVar7 == 0) break;\n            iVar7 = iVar7 + -1;\n            cVar2 = *pcVar11;\n            pcVar11 = pcVar11 + 1;\n        } while (cVar2 != '\\0');\n        iVar8 = ~iVar7 - 1;\n        if (iVar8 < 0) goto code_r0x00406167;\n    }\n    if (*(pcVar12 + -0xc) < iVar8) {\ncode_r0x00406167:\n        uVar6 = fcn.00401040(0x80070057);\n        return uVar6;\n    }\n    *(pcVar12 + -0x10) = iVar8;\n    (*arg1)[iVar8] = '\\0';\n    if (pcVar10 != NULL) {\n        iVar7 = -1;\n        pcVar12 = pcVar10;\n        do {\n            if (iVar7 == 0) break;\n            iVar7 = iVar7 + -1;\n            cVar2 = *pcVar12;\n            pcVar12 = pcVar12 + 1;\n        } while (cVar2 != '\\0');\n        iVar9 = ~iVar7 - 1;\n        if (iVar9 < 0) goto code_r0x0040615c;\n    }\n    if (iVar9 <= *(pcVar10 + -0xc)) {\n        *(pcVar10 + -0x10) = iVar9;\n        pcVar10[iVar9] = '\\0';\n        LOCK();\n        piVar1 = pcVar10 + -8;\n        iVar9 = *piVar1;\n        *piVar1 = *piVar1 + -1;\n        if (0 < iVar9 + -1) {\n            return uVar4;\n        }\n        (**(**(pcVar10 + -0x18) + 8))();\n        return uVar4;\n    }\ncode_r0x0040615c:\n    fcn.00401040(0x80070057);\n    pcVar3 = swi(3);\n    uVar6 = (*pcVar3)();\n    return uVar6;\n}\n",
        "token_count": 1028
    },
    "00406930": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00406930(ulong arg1, int64_t *arg2, int64_t arg3)\n\n{\n    char cVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    char *pcVar6;\n    uchar auStack264 [32];\n    uint uStack232;\n    int64_t *piStack224;\n    ulong uStack216;\n    uchar auStack208 [40];\n    char acStack168 [128];\n    uint64_t uStack40;\n    \n    uStack216 = 0xfffffffffffffffe;\n    uStack40 = *0x444d30 ^ auStack264;\n    uStack232 = 0;\n    piStack224 = arg2;\n    if (arg3 == 0) {\n        piVar4 = fcn.00413fd4();\n        if (piVar4 == NULL) {\n            fcn.00401040(0x80004005);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        iVar5 = (**(*piVar4 + 0x18))(piVar4);\n        *arg2 = iVar5 + 0x18;\n        fcn.00402d50(arg2, 0, 0);\n    }\n    else {\n        iVar3 = fcn.0041b8c0(auStack208, arg1);\n        if ((iVar3 != 0) || (iVar5 = fcn.0041b8a0(acStack168, 0x80, arg3, auStack208),  iVar5 == 0)) {\n            acStack168[0] = '\\0';\n        }\n        piVar4 = fcn.00413fd4();\n        if (piVar4 == NULL) {\n            fcn.00401040(0x80004005);\n            pcVar2 = swi(3);\n            (*pcVar2)();\n            return;\n        }\n        iVar5 = (**(*piVar4 + 0x18))(piVar4);\n        *arg2 = iVar5 + 0x18;\n        if ((acStack168 & 0xffffffffffff0000) == 0) {\n            iVar5 = fcn.00413fc0(acStack168 & 0xffff);\n            if (iVar5 != 0) {\n                fcn.00402bb0(arg2, iVar5, acStack168 & 0xffff);\n            }\n        }\n        else {\n            iVar5 = -1;\n            pcVar6 = acStack168;\n            do {\n                if (iVar5 == 0) break;\n                iVar5 = iVar5 + -1;\n                cVar1 = *pcVar6;\n                pcVar6 = pcVar6 + 1;\n            } while (cVar1 != '\\0');\n            fcn.00402d50(arg2, acStack168, ~iVar5 - 1);\n        }\n    }\n    fcn.00418d10(uStack40 ^ auStack264);\n    return;\n}\n",
        "token_count": 656
    },
    "0040a850": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040a850(ulong arg1)\n\n{\n    uint uStack88;\n    uint uStack84;\n    ulong uStack80;\n    uint uStack72;\n    uint uStack68;\n    ulong uStack64;\n    ulong uStack56;\n    ulong uStack48;\n    ulong uStack40;\n    ulong uStack32;\n    ulong uStack24;\n    ulong uStack16;\n    \n    uStack88 = 0x50;\n    uStack84 = 0x200;\n    uStack80 = 0x409980;\n    uStack72 = 0;\n    uStack68 = 0;\n    uStack64 = arg1;\n    uStack56 = (*_sym.imp.USER32.dll_LoadIconA)(arg1, 0x6b);\n    uStack48 = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f89);\n    uStack32 = 0x434a18;\n    uStack40 = 2;\n    uStack24 = 0x4466b0;\n    uStack16 = (*_sym.imp.USER32.dll_LoadIconA)(uStack64, 0x6c);\n    (*_sym.imp.USER32.dll_RegisterClassExA)(&uStack88);\n    return;\n}\n",
        "token_count": 274
    },
    "0040ab80": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ab80(int64_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.00419f50(arg2);\n    if (iVar2 == 0) {\n        fcn.00401040(0x8007000e);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    *arg1 = iVar2;\n    return;\n}\n",
        "token_count": 108
    },
    "0040abb0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040abb0(int64_t *arg1)\n\n{\n    if (*arg1 != arg1 + 1) {\n        fcn.0040ab70(arg1);\n    }\n    return;\n}\n",
        "token_count": 47
    },
    "0040abf8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0040abf8(ulong arg1)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    \n    while( true ) {\n        iVar2 = fcn.00419f50(arg1);\n        if (iVar2 != 0) {\n            return iVar2;\n        }\n        if (*0x444158 == NULL) break;\n        iVar1 = (**0x444158)(arg1);\n        if (iVar1 == 0) {\n            return 0;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 120
    },
    "0040ac9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.0040ac9c(void)\n\n{\n    int64_t iVar1;\n    bool bVar2;\n    \n    bVar2 = false;\n    if (*0x449c38 == 0) {\n        *0x449c3c = fcn.0040ac3c();\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"USER32\");\n        if (((((iVar1 == 0) || (*0x449c00 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, 0x435728),  *0x449c00 == 0))\n             || (*0x449c08 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"MonitorFromWindow\"),  *0x449c08 == 0)) ||\n            ((*0x449c10 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"MonitorFromRect\"),  *0x449c10 == 0 ||\n             (*0x449c18 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"MonitorFromPoint\"),  *0x449c18 == 0)))) ||\n           ((*0x449c28 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"EnumDisplayMonitors\"),  *0x449c28 == 0 ||\n            ((*0x449c20 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"GetMonitorInfoA\"),  *0x449c20 == 0 ||\n             (*0x449c30 = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"EnumDisplayDevicesA\"),  *0x449c30 == 0)))))) {\n            *0x449c00 = 0;\n            *0x449c08 = 0;\n            *0x449c10 = 0;\n            *0x449c18 = 0;\n            *0x449c20 = 0;\n            *0x449c28 = 0;\n            *0x449c30 = 0;\n        }\n        else {\n            bVar2 = true;\n        }\n        *0x449c38 = 1;\n        return bVar2;\n    }\n    return *0x449c20 != 0;\n}\n",
        "token_count": 493
    },
    "0040ae60": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040ae60(ulong arg1, uint64_t arg2)\n\n{\n    int32_t iVar1;\n    ulong uVar2;\n    uchar auStack44 [28];\n    \n    iVar1 = fcn.0040ac9c();\n    if (iVar1 == 0) {\n        if ((arg2 & 3) == 0) {\n            iVar1 = (*_sym.imp.USER32.dll_IsIconic)(arg1);\n            if (iVar1 == 0) {\n                iVar1 = (*_sym.imp.USER32.dll_GetWindowRect)(arg1);\n            }\n            else {\n                iVar1 = (*_sym.imp.USER32.dll_GetWindowPlacement)();\n            }\n            if (iVar1 == 0) {\n                uVar2 = 0;\n            }\n            else {\n                uVar2 = fcn.0040adf8(auStack44, arg2 & 0xffffffff);\n            }\n        }\n        else {\n            uVar2 = 0x12340042;\n        }\n    }\n    else {\n        uVar2 = (**0x449c08)(arg1, arg2 & 0xffffffff);\n    }\n    return uVar2;\n}\n",
        "token_count": 252
    },
    "0040aed8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040aed8(int64_t arg1, uint32_t *arg2)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    ulong uVar3;\n    uint32_t uStack40;\n    uint32_t uStack36;\n    uint32_t uStack32;\n    uint32_t uStack28;\n    \n    iVar1 = fcn.0040ac9c();\n    if (iVar1 == 0) {\n        if ((((arg1 == 0x12340042) && (arg2 != NULL)) && (0x27 < *arg2)) &&\n           (iVar1 = (*_sym.imp.USER32.dll_SystemParametersInfoA)(0x30, 0, &uStack40),  iVar1 != 0)) {\n            arg2[1] = 0;\n            arg2[2] = 0;\n            uVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0);\n            arg2[3] = uVar2;\n            uVar2 = (*_sym.imp.USER32.dll_GetSystemMetrics)(1);\n            arg2[9] = 1;\n            arg2[5] = uStack40;\n            arg2[6] = uStack36;\n            arg2[7] = uStack32;\n            arg2[8] = uStack28;\n            arg2[4] = uVar2;\n            if (0x47 < *arg2) {\n                fcn.0041c820(arg2 + 10, 0x20, \"DISPLAY\", 0x1f);\n            }\n            return 1;\n        }\n        uVar3 = 0;\n    }\n    else {\n        uVar3 = (**0x449c20)(arg1, arg2);\n    }\n    return uVar3;\n}\n",
        "token_count": 389
    },
    "0040b848": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040b848(ulong noname_0, ulong *arg2, ulong arg3)\n\n{\n    bool bVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    uint *puVar4;\n    ulong *puVar5;\n    int64_t iVar6;\n    uint *in_stack_00000028;\n    \n    uVar3 = 0;\n    if (arg3 != 0) {\n        do {\n            bVar1 = false;\n            puVar4 = 0x444230;\n            puVar5 = 0x444190;\n            iVar6 = 0x13;\n            do {\n                iVar2 = (*_sym.imp.KERNEL32.dll_lstrcmpW)(*arg2, *puVar5);\n                if (iVar2 == 0) {\n                    bVar1 = true;\n                    *in_stack_00000028 = *puVar4;\n                }\n                puVar5 = puVar5 + 1;\n                puVar4 = puVar4 + 1;\n                iVar6 = iVar6 + -1;\n            } while (iVar6 != 0);\n            if (!bVar1) {\n                return 0x80020006;\n            }\n            uVar3 = uVar3 + 1;\n            arg2 = arg2 + 1;\n            in_stack_00000028 = in_stack_00000028 + 1;\n        } while (uVar3 < arg3);\n    }\n    return 0;\n}\n",
        "token_count": 320
    },
    "0040b8dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.0040b8dc(ulong *arg1, ulong arg2)\n\n{\n    fcn.004122f0(arg1);\n    *arg1 = 0x435a78;\n    arg1[0xc] = 0x435958;\n    arg1[0xd] = 0x435a40;\n    arg1[8] = arg2;\n    *(arg1 + 9) = 0;\n    arg1[0xb] = 0;\n    arg1[0xe] = 0;\n    *(arg1 + 0xf) = 0;\n    arg1[0x10] = 0;\n    *(arg1 + 0x11) = 0;\n    arg1[0x12] = 0;\n    arg1[0x13] = 0;\n    arg1[0x14] = 0;\n    return arg1;\n}\n",
        "token_count": 199
    },
    "0040bb30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.0040bb30(ulong *arg1)\n\n{\n    fcn.004122c0(arg1);\n    *(arg1 + 8) = 1;\n    *arg1 = 0x435ce8;\n    return arg1;\n}\n",
        "token_count": 58
    },
    "0040c6e4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.0040c6e4(ulong *arg1)\n\n{\n    fcn.004122f0(arg1);\n    *arg1 = 0x435a78;\n    arg1[0xc] = 0x435958;\n    arg1[0xd] = 0x435a40;\n    arg1[8] = 0;\n    *(arg1 + 9) = 0;\n    arg1[0xb] = 0;\n    arg1[10] = 0;\n    arg1[0xe] = 0;\n    *(arg1 + 0xf) = 0;\n    arg1[0x10] = 0;\n    *(arg1 + 0x11) = 0;\n    arg1[0x12] = 0;\n    arg1[0x13] = 0;\n    arg1[0x14] = 0;\n    return arg1;\n}\n",
        "token_count": 206
    },
    "0040c89c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c89c(ulong arg1)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    int16_t iVar3;\n    int64_t iVar4;\n    \n    iVar4 = fcn.00414d10();\n    if ((*(iVar4 + 0x78) != 0) && (iVar1 = *(*(iVar4 + 0x78) + 0x40),  iVar1 != 0)) {\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar1, 0x401, 0, 0);\n    }\n    piVar2 = *(iVar4 + 0xa0);\n    if ((arg1 != 0) && (piVar2 != NULL)) {\n        iVar3 = (*_sym.imp.USER32.dll_GetKeyState)(1);\n        if (-1 < iVar3) {\n            (**(*piVar2 + 0x2d0))(piVar2, 0xffffffffffffffff);\n        }\n    }\n    return;\n}\n",
        "token_count": 221
    },
    "0040c90c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0040c90c(int64_t hMenu, uint64_t arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    ulong arg1;\n    int32_t iVar5;\n    \n    arg2 = arg2 & 0xffffffff;\n    if (hMenu == 0) {\n        fcn.004129d8();\n        pcVar1 = swi(3);\n        iVar4 = (*pcVar1)();\n        return iVar4;\n    }\n    iVar2 = (*_sym.imp.USER32.dll_GetMenuItemCount)(*(hMenu + 8));\n    iVar5 = 0;\n    if (0 < iVar2) {\n        do {\n            arg1 = (*_sym.imp.USER32.dll_GetSubMenu)(*(hMenu + 8));\n            iVar4 = fcn.00415cfc(arg1);\n            if (iVar4 == 0) {\n                iVar3 = (*_sym.imp.USER32.dll_GetMenuItemID)(*(hMenu + 8));\n                if (iVar3 == arg2) goto code_r0x0040c989;\n            }\n            else {\n                if (*(iVar4 + 8) == arg2) {\ncode_r0x0040c989:\n                    iVar4 = fcn.00415d20(*(hMenu + 8));\n                    return iVar4;\n                }\n                iVar4 = fcn.0040c90c(iVar4, arg2);\n                if (iVar4 != 0) {\n                    return iVar4;\n                }\n            }\n            iVar5 = iVar5 + 1;\n        } while (iVar5 < iVar2);\n    }\n    return 0;\n}\n",
        "token_count": 368
    },
    "0040c994": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040c994(ulong *arg1)\n\n{\n    *arg1 = 0x435d58;\n    if (arg1[1] != 0) {\n        (*_sym.imp.KERNEL32.dll_FreeLibrary)();\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "0040da8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040da8c(int64_t **arg1)\n\n{\n    if (*arg1 != NULL) {\n        (**(**arg1 + 0x10))();\n    }\n    return;\n}\n",
        "token_count": 45
    },
    "0040e030": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040e030(uint32_t *arg1)\n\n{\n    if (*arg1 != 0x7fffffff) {\n        fcn.00415ea0(*arg1);\n        *arg1 = 0x7fffffff;\n    }\n    return;\n}\n",
        "token_count": 59
    },
    "0040e0bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040e0bc(int64_t *arg1)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.00415aa8(0x44a088, 0x40c074);\n    if (iVar2 == 0) {\n        fcn.004129d8();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x0040e106. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(*arg1 + 0x220))(arg1, *(iVar2 + 0xa0), *(iVar2 + 0xa8), *(iVar2 + 0xb0));\n    return;\n}\n",
        "token_count": 177
    },
    "0040e110": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040e110(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong arg1_00;\n    int64_t arg1_01;\n    ulong uVar2;\n    \n    iVar1 = fcn.00414d10();\n    uVar2 = 0;\n    if ((*(iVar1 + 0x28) == 0) && (arg1 != 0)) {\n        arg1_00 = fcn.0040abe8(0x414f30);\n        arg1_01 = fcn.0040abf8(0xb8);\n        if (arg1_01 != 0) {\n            uVar2 = fcn.00416620(arg1_01, 0x435678, 0x40dd74, 0x40c068);\n        }\n        *(iVar1 + 0x28) = uVar2;\n        fcn.0040abe8(arg1_00);\n    }\n    return *(iVar1 + 0x28);\n}\n",
        "token_count": 221
    },
    "0040e1c8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040e1c8(ulong arg1)\n\n{\n    ulong arg1_00;\n    ulong hWnd;\n    \n    arg1_00 = fcn.0040e110(1);\n    hWnd = fcn.0041674c(arg1_00, arg1);\n    fcn.00412864(hWnd, arg1_00);\n    return hWnd;\n}\n",
        "token_count": 82
    },
    "0040e230": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.0040e230(int64_t arg1, int64_t arg2)\n\n{\n    int64_t arg2_00;\n    int64_t *piVar1;\n    \n    if (arg2 != 0) {\n        arg2_00 = fcn.0040e110(1);\n        *(arg1 + 0x40) = arg2;\n        piVar1 = fcn.004161dc(arg2_00 + 0x30, arg2);\n        *piVar1 = arg1;\n        fcn.00412864(arg1, arg2_00);\n    }\n    return arg2 != 0;\n}\n",
        "token_count": 140
    },
    "0040e5dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.0040e5dc(ulong arg1, uint64_t arg2, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    \n    arg3 = arg3 & 0xffffffff;\n    iVar1 = (*_sym.imp.USER32.dll_GetDlgItem)();\n    if (iVar1 != 0) {\n        iVar2 = (*_sym.imp.USER32.dll_GetTopWindow)(iVar1);\n        if ((iVar2 != 0) && (iVar2 = fcn.0040e5dc(iVar1, arg2 & 0xffffffff, arg3),  iVar2 != 0)) {\n            return iVar2;\n        }\n        if (arg3 == 0) {\n            iVar1 = fcn.0040e1c8(iVar1);\n            return iVar1;\n        }\n        iVar1 = fcn.0040e204(iVar1);\n        if (iVar1 != 0) {\n            return iVar1;\n        }\n    }\n    iVar1 = (*_sym.imp.USER32.dll_GetTopWindow)(arg1);\n    while( true ) {\n        if (iVar1 == 0) {\n            return 0;\n        }\n        iVar2 = fcn.0040e5dc(iVar1, arg2 & 0xffffffff, arg3);\n        if (iVar2 != 0) break;\n        iVar1 = (*_sym.imp.USER32.dll_GetWindow)(iVar1);\n    }\n    return iVar2;\n}\n",
        "token_count": 320
    },
    "0040e670": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040e670(int64_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.00415aa8(0x44a088, 0x40c074);\n    if (iVar2 == 0) {\n        fcn.004129d8();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    (**(*arg1 + 0x230))(arg1, *(iVar2 + 0xa0), *(iVar2 + 0xa8), *(iVar2 + 0xb0), arg2);\n    return;\n}\n",
        "token_count": 149
    },
    "0040e8bc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.0040e8bc(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t *piVar3;\n    uint32_t uVar4;\n    uchar auStackX24 [16];\n    \n    uVar4 = 0;\n    iVar2 = fcn.00414cc0();\n    piVar3 = fcn.0040decc(**(iVar2 + 200), auStackX24);\n    if (*piVar3 == 0) {\n        if ((arg2 & 0x3fc0) == arg2) {\n            iVar2 = fcn.00414cc0();\n            fcn.0040de2c(**(iVar2 + 200));\n            uVar4 = 0x3fc0;\n        }\n    }\n    else {\n        iVar2 = fcn.00414cc0();\n        iVar1 = fcn.0040df38(**(iVar2 + 200), arg1);\n        if (iVar1 != 0) {\n            uVar4 = arg2;\n        }\n    }\n    return uVar4;\n}\n",
        "token_count": 248
    },
    "0040e960": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040e960(int64_t *arg1, int32_t *arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    uint64_t uVar2;\n    ulong arg1_00;\n    int64_t hWnd;\n    int32_t iStack40;\n    int32_t iStack36;\n    \n    if (((((arg3 >> 0x1c & 1) == 0) && (uVar2 = fcn.00412724(arg1),  (uVar2 & 0x50000000) == 0)) &&\n        ((*_sym.imp.USER32.dll_GetWindowRect)(arg1[8], &iStack40),  *arg2 == iStack40)) && (arg2[1] == iStack36)) {\n        arg1_00 = (*_sym.imp.USER32.dll_GetWindow)(arg1[8]);\n        hWnd = fcn.0040e1c8(arg1_00);\n        if (((hWnd == 0) || (iVar1 = fcn.0041278c(hWnd),  iVar1 == 0)) &&\n           (iVar1 = (**(*arg1 + 0x238))(arg1),  iVar1 != 0)) {\n            fcn.0040daa4(arg1, 0);\n        }\n    }\n    return;\n}\n",
        "token_count": 288
    },
    "00412328": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412328(int64_t arg1)\n\n{\n    if (*(arg1 + 0x20) != 0) {\n        (**(*(arg1 + 0x20) + 0x38))();\n    }\n    *(arg1 + 0x38) = 0;\n    return;\n}\n",
        "token_count": 69
    },
    "0040edc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040edc0(ulong hWnd, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    int64_t arg1;\n    int64_t iVar1;\n    int32_t in_stack_00000028;\n    int32_t in_stack_00000030;\n    \n    for (arg1 = (*_sym.imp.USER32.dll_GetTopWindow)(); arg1 != 0; arg1 = (*_sym.imp.USER32.dll_GetWindow)(arg1)) {\n        if (in_stack_00000030 == 0) {\n            (*_sym.imp.USER32.dll_SendMessageA)();\n        }\n        else {\n            iVar1 = fcn.0040e204(arg1);\n            if (iVar1 != 0) {\n                fcn.0040e9f0(iVar1, *(iVar1 + 0x40), arg2, arg3);\n            }\n        }\n        if ((in_stack_00000028 != 0) && (iVar1 = (*_sym.imp.USER32.dll_GetTopWindow)(arg1),  iVar1 != 0)) {\n            fcn.0040edc0(arg1, arg2, arg3, arg4);\n        }\n    }\n    return;\n}\n",
        "token_count": 262
    },
    "0040ee88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.0040ee88(ulong arg1, ulong arg2)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    int64_t arg1_00;\n    ulong arg2_00;\n    uint64_t uVar3;\n    uchar auStack216 [64];\n    ulong uStack152;\n    int64_t iStack56;\n    \n    iVar2 = fcn.00414d10();\n    if (*(iVar2 + 0x28) == 0) {\n        uVar3 = 0;\n    }\n    else {\n        iVar2 = *(iVar2 + 0x28) + 0x30;\n        arg1_00 = fcn.00415fc0(iVar2, arg1);\n        if (arg1_00 == 0) {\n            arg2_00 = (*_sym.imp.USER32.dll_GetParent)(arg1);\n            iVar2 = fcn.00415fc0(iVar2, arg2_00);\n            if (((iVar2 != 0) && (*(iVar2 + 0x98) != 0)) &&\n               (iStack56 = fcn.00415fc0(*(iVar2 + 0x98) + 0x48, arg1),  iStack56 != 0)) {\n                fcn.0040b8dc(auStack216, arg1);\n                iVar1 = fcn.0040e670(auStack216, arg2);\n                uStack152 = 0;\n                fcn.0040ebec(auStack216);\n                return iVar1 != 0;\n            }\n            uVar3 = 0;\n        }\n        else {\n            uVar3 = fcn.0040e670(arg1_00, arg2);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 388
    },
    "0040f968": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040f968(ulong arg1)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    int64_t arg1_00;\n    ulong uVar3;\n    \n    iVar2 = fcn.0040e204(arg1);\n    uVar3 = 0;\n    if (iVar2 == 0) {\n        uVar1 = (*_sym.imp.USER32.dll_GetWindowLongA)(arg1, 0xfffffff0);\n        if ((uVar1 >> 0x1e & 1) == 0) {\n            uVar3 = (*_sym.imp.USER32.dll_GetWindow)(arg1, 4);\n        }\n        else {\n            uVar3 = (*_sym.imp.USER32.dll_GetParent)();\n        }\n    }\n    else {\n        arg1_00 = *(iVar2 + 0x70);\n        if (arg1_00 == 0) {\n            arg1_00 = (*_sym.imp.USER32.dll_GetParent)(*(iVar2 + 0x40));\n        }\n        iVar2 = fcn.0040e1c8(arg1_00);\n        if (iVar2 != 0) {\n            uVar3 = *(iVar2 + 0x40);\n        }\n    }\n    return uVar3;\n}\n",
        "token_count": 280
    },
    "0040f9d8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040f9d8(int64_t arg1)\n\n{\n    int64_t iVar1;\n    ulong uVar2;\n    int64_t arg1_00;\n    \n    if ((arg1 == 0) || (iVar1 = *(arg1 + 0x40),  *(arg1 + 0x40) == 0)) {\n        uVar2 = 0;\n    }\n    else {\n        do {\n            arg1_00 = iVar1;\n            iVar1 = fcn.0040f968(arg1_00);\n        } while (iVar1 != 0);\n        uVar2 = fcn.0040e1c8(arg1_00);\n    }\n    return uVar2;\n}\n",
        "token_count": 158
    },
    "0040fb50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040fb50(int64_t *arg1, int64_t arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    \n    if (arg2 == 0) {\n        fcn.00401040(0x80070057);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    uVar2 = fcn.0041c940(arg2, arg3);\n    if ((1U - *(*arg1 + -8) | *(*arg1 + -0xc) - uVar2) < 0) {\n        fcn.00402a90(arg1, uVar2);\n    }\n    fcn.0041cad0(*arg1, uVar2 + 1, arg2, arg3);\n    if ((-1 < uVar2) && (uVar2 <= *(*arg1 + -0xc))) {\n        *(*arg1 + -0x10) = uVar2;\n        *(uVar2 + *arg1) = 0;\n        return;\n    }\n    fcn.00401040(0x80070057);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 273
    },
    "0040fddc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040fddc(int64_t *arg1, int64_t arg2, ulong arg3)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    uint32_t uVar4;\n    \n    iVar2 = *arg1;\n    uVar1 = *(iVar2 + -0x10);\n    uVar4 = uVar1 + arg3;\n    if ((1U - *(iVar2 + -8) | *(iVar2 + -0xc) - uVar4) < 0) {\n        fcn.00402a90(arg1, uVar4);\n    }\n    if (arg2 - iVar2 <= uVar1) {\n        arg2 = *arg1 + (arg2 - iVar2);\n    }\n    fcn.004194d0(uVar1 + *arg1, arg3, arg2, arg3);\n    if ((-1 < uVar4) && (uVar4 <= *(*arg1 + -0xc))) {\n        *(*arg1 + -0x10) = uVar4;\n        *(uVar4 + *arg1) = 0;\n        return;\n    }\n    fcn.00401040(0x80070057);\n    pcVar3 = swi(3);\n    (*pcVar3)();\n    return;\n}\n",
        "token_count": 291
    },
    "0040fe70": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.0040fe70(int64_t *arg1)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    code *pcVar3;\n    int64_t *piVar4;\n    uchar in_DL;\n    uint32_t uVar5;\n    \n    iVar2 = *arg1;\n    uVar1 = *(iVar2 + -0x10);\n    uVar5 = uVar1 + 1;\n    if ((1U - *(iVar2 + -8) | *(iVar2 + -0xc) - uVar5) < 0) {\n        fcn.00402a90(arg1, uVar5);\n    }\n    *(uVar1 + *arg1) = in_DL;\n    if ((-1 < uVar5) && (uVar5 <= *(*arg1 + -0xc))) {\n        *(*arg1 + -0x10) = uVar5;\n        *(uVar5 + *arg1) = 0;\n        return arg1;\n    }\n    fcn.00401040(0x80070057);\n    pcVar3 = swi(3);\n    piVar4 = (*pcVar3)();\n    return piVar4;\n}\n",
        "token_count": 264
    },
    "0040ff00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0040ff00(int64_t arg1, ulong arg2, int64_t arg3)\n\n{\n    uint32_t uVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    ulong uStack56;\n    int64_t iStack48;\n    \n    uVar1 = fcn.00412724(arg1);\n    if ((((uVar1 >> 0x1e & 1) == 0) && (iVar3 = fcn.0040f9d8(arg1),  iVar3 != 0)) &&\n       ((arg3 == 0 ||\n        ((iVar2 = (*_sym.imp.USER32.dll_IsWindow)(*(arg3 + 0x40)),  iVar2 == 0 ||\n         (iVar4 = fcn.0040f9d8(arg3),  iVar3 != iVar4)))))) {\n        uStack56 = *(arg1 + 0x40);\n        iStack48 = arg3;\n        if (arg3 != 0) {\n            iStack48 = *(arg3 + 0x40);\n        }\n        (*_sym.imp.USER32.dll_SendMessageA)(*(iVar3 + 0x40), 0x36e, arg2, &uStack56);\n    }\n    return;\n}\n",
        "token_count": 283
    },
    "0040ff8c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0040ff8c(ulong arg1, ulong arg2, ulong arg3)\n\n{\n    int32_t iVar1;\n    int64_t iVar2;\n    ulong uVar3;\n    int64_t iVar4;\n    \n    if (((arg2 == -2) && (((arg3 == 0x201 || (arg3 == 0x207)) || (arg3 == 0x204)))) &&\n       (iVar2 = fcn.0040f9d8(arg1),  iVar2 != 0)) {\n        uVar3 = (*_sym.imp.USER32.dll_GetLastActivePopup)(*(iVar2 + 0x40));\n        iVar2 = fcn.0040e1c8(uVar3);\n        if (iVar2 != 0) {\n            uVar3 = (*_sym.imp.USER32.dll_GetForegroundWindow)();\n            iVar4 = fcn.0040e1c8(uVar3);\n            if ((iVar2 != iVar4) && (iVar1 = fcn.0041278c(iVar2),  iVar1 != 0)) {\n                (*_sym.imp.USER32.dll_SetForegroundWindow)(*(iVar2 + 0x40));\n                return 1;\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 273
    },
    "00410738": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00410738(int64_t *arg1)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    uint uVar4;\n    uint uVar5;\n    \n    iVar2 = (**(*arg1 + 0x240))();\n    if (iVar2 != 0) {\n        (**(*arg1 + 0x2e0))(arg1);\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(arg1[8]);\n    fcn.0040edc0(arg1[8], 0x1f, 0, 0);\n    iVar3 = fcn.0040f9d8(arg1);\n    if (iVar3 == 0) {\n        fcn.004129d8();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    (*_sym.imp.USER32.dll_SendMessageA)(*(iVar3 + 0x40));\n    uVar5 = 1;\n    uVar4 = 1;\n    fcn.0040edc0(*(iVar3 + 0x40), 0x1f, 0, 0);\n    iVar3 = (*_sym.imp.USER32.dll_GetCapture)();\n    if (iVar3 != 0) {\n        (*_sym.imp.USER32.dll_SendMessageA)(iVar3, 0x1f, 0, 0, uVar4, uVar5);\n    }\n    return;\n}\n",
        "token_count": 324
    },
    "00411580": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint fcn.00411580(ulong *arg1)\n\n{\n    ulong *puVar1;\n    ulong *puVar2;\n    uint uVar3;\n    \n    puVar2 = NULL;\n    if (arg1 == NULL) {\n        uVar3 = 0x80004003;\n    }\n    else {\n        *arg1 = 0;\n        puVar1 = fcn.0040abf8(0x30);\n        if (puVar1 != NULL) {\n            *(puVar1 + 5) = 0;\n            puVar1[2] = 0;\n            puVar1[3] = 0;\n            *puVar1 = 0x436388;\n            puVar1[1] = 0x436360;\n            puVar1[4] = 0x436330;\n            fcn.004169b8();\n            puVar2 = puVar1;\n        }\n        uVar3 = 0x8007000e;\n        if (puVar2 != NULL) {\n            uVar3 = 0;\n        }\n        *arg1 = puVar2;\n    }\n    return uVar3;\n}\n",
        "token_count": 251
    },
    "00411688": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00411688(void)\n\n{\n    int64_t iVar1;\n    uchar auStack616 [64];\n    ulong uStack552;\n    uint64_t uStack24;\n    \n    uStack552 = 0xfffffffffffffffe;\n    uStack24 = *0x444d30 ^ auStack616;\n    iVar1 = fcn.00414cc0();\n    fcn.00412370(*(iVar1 + 8));\n    fcn.00418d10(uStack24 ^ auStack616);\n    return;\n}\n",
        "token_count": 114
    },
    "00411ab0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00411ab0(int64_t arg1)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    uint64_t arg3;\n    uchar auStack120 [96];\n    \n    iVar2 = fcn.0040c1a8(*(arg1 + 0x18), *(arg1 + 0x40), auStack120);\n    arg3 = 0;\n    if (iVar2 == 0) {\n        iVar1 = fcn.0040c0cc(arg1);\n        if (iVar1 == 0) {\n            uVar6 = 0;\n        }\n        else {\n            iVar4 = fcn.00414cc0();\n            if (*(iVar4 + 0x28) != '\\0') {\n                fcn.00415e14(1);\n                iVar5 = fcn.00414cc0();\n                iVar4 = *(arg1 + 0x40);\n                if (iVar4 != 0) {\n                    uVar3 = fcn.0041cd50(iVar4);\n                    arg3 = uVar3;\n                }\n                fcn.0040fddc(iVar5 + 0x58, iVar4, arg3);\n                fcn.0040fe70(iVar5 + 0x58);\n                fcn.00415ea0(1);\n            }\n            uVar6 = 1;\n        }\n    }\n    else {\n        uVar6 = 1;\n    }\n    return uVar6;\n}\n",
        "token_count": 350
    },
    "00411b88": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00411b88(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    int16_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    uint64_t arg3_00;\n    uchar auStack120 [56];\n    ulong uStack64;\n    \n    *(arg1 + 0x40) = arg2;\n    uStack64 = 0x411b9e;\n    iVar5 = fcn.00414cc0();\n    uStack64 = 0x411bab;\n    iVar5 = (*_sym.imp.USER32.dll_LoadIconA)(*(iVar5 + 0x18), arg3);\n    *(arg1 + 0x20) = iVar5;\n    if (iVar5 == 0) {\n        uStack64 = 0x411bc1;\n        uVar6 = (*_sym.imp.USER32.dll_LoadIconA)(0, 0x7f00);\n        *(arg1 + 0x20) = uVar6;\n    }\n    iVar2 = fcn.0040c1a8(*(arg1 + 0x18), *(arg1 + 0x40), &stack0xffffffffffffff88);\n    arg3_00 = 0;\n    if (iVar2 == 0) {\n        iVar1 = fcn.0040c0cc(arg1);\n        if (iVar1 == 0) {\n            uVar6 = 0;\n        }\n        else {\n            iVar5 = fcn.00414cc0();\n            if (*(iVar5 + 0x28) != '\\0') {\n                fcn.00415e14(1);\n                iVar4 = fcn.00414cc0();\n                iVar5 = *(arg1 + 0x40);\n                if (iVar5 != 0) {\n                    uVar3 = fcn.0041cd50(iVar5);\n                    arg3_00 = uVar3;\n                }\n                fcn.0040fddc(iVar4 + 0x58, iVar5, arg3_00);\n                fcn.0040fe70(iVar4 + 0x58);\n                fcn.00415ea0(1);\n            }\n            uVar6 = 1;\n        }\n    }\n    else {\n        uVar6 = 1;\n    }\n    return uVar6;\n}\n",
        "token_count": 530
    },
    "00411bd4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00411bd4(ulong arg1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    uint32_t uVar5;\n    bool bVar6;\n    uint uStackX16;\n    uint uStackX20;\n    uint32_t auStack120 [2];\n    ulong uStack112;\n    ulong uStack96;\n    ulong uStack80;\n    ulong uStack72;\n    char *pcStack56;\n    \n    iVar3 = fcn.00414cc0();\n    arg1._0_4_ = arg1 & ~*(iVar3 + 0x2c);\n    if (arg1 == 0) {\n        bVar6 = true;\n    }\n    else {\n        fcn.00418a70(auStack120, 0, 0x48);\n        uStack112 = _sym.imp.USER32.dll_DefWindowProcA;\n        iVar4 = fcn.00414cc0();\n        uStack96 = *(iVar4 + 0x10);\n        uStack80 = *0x44a0e0;\n        uStackX16 = 8;\n        uVar5 = 0;\n        if ((arg1 & 1) != 0) {\n            auStack120[0] = 0xb;\n            pcStack56 = \"AfxWnd80s\";\n            iVar1 = fcn.00411ab0(auStack120);\n            uVar5 = 0;\n            if (iVar1 != 0) {\n                uVar5 = 1;\n            }\n        }\n        if ((arg1 & 0x20) != 0) {\n            auStack120[0] = auStack120[0] | 0x8b;\n            pcStack56 = \"AfxOleControl80s\";\n            iVar1 = fcn.00411ab0(auStack120);\n            if (iVar1 != 0) {\n                uVar5 = uVar5 | 0x20;\n            }\n        }\n        if ((arg1 & 2) != 0) {\n            auStack120[0] = 0;\n            pcStack56 = \"AfxControlBar80s\";\n            uStack72 = 0x10;\n            iVar1 = fcn.00411ab0(auStack120);\n            if (iVar1 != 0) {\n                uVar5 = uVar5 | 2;\n            }\n        }\n        if ((arg1 & 4) != 0) {\n            auStack120[0] = 8;\n            uStack72 = 0;\n            iVar1 = fcn.00411b88(auStack120, \"AfxMDIFrame80s\", 0x7a01);\n            if (iVar1 != 0) {\n                uVar5 = uVar5 | 4;\n            }\n        }\n        if ((arg1 & 8) != 0) {\n            auStack120[0] = 0xb;\n            uStack72 = 6;\n            iVar1 = fcn.00411b88(auStack120, \"AfxFrameOrView80s\", 0x7a02);\n            if (iVar1 != 0) {\n                uVar5 = uVar5 | 8;\n            }\n        }\n        if ((arg1 & 0x10) != 0) {\n            uStackX20 = 0xff;\n            uVar2 = fcn.0040e8bc(&uStackX16, 0x3fc0);\n            uVar5 = uVar5 | uVar2;\n            arg1._0_4_ = arg1 & 0xffffc03f;\n        }\n        if ((arg1 & 0x40) != 0) {\n            uStackX20 = 0x10;\n            uVar2 = fcn.0040e8bc(&uStackX16, 0x40);\n            uVar5 = uVar5 | uVar2;\n        }\n        if (arg1 < '\\0') {\n            uStackX20 = 2;\n            uVar2 = fcn.0040e8bc(&uStackX16, 0x80);\n            uVar5 = uVar5 | uVar2;\n        }\n        if ((arg1 >> 8 & 1) != 0) {\n            uStackX20 = 8;\n            uVar2 = fcn.0040e8bc(&uStackX16, 0x100);\n            uVar5 = uVar5 | uVar2;\n        }\n        if ((arg1 >> 9 & 1) != 0) {\n            uStackX20 = 0x20;\n            uVar2 = fcn.0040e8bc(&uStackX16, 0x200);\n            uVar5 = uVar5 | uVar2;\n        }\n        if ((arg1 >> 10 & 1) != 0) {\n            uStackX20 = 1;\n            uVar2 = fcn.0040e8bc(&uStackX16, 0x400);\n            uVar5 = uVar5 | uVar2;\n        }\n        if ((arg1 >> 0xb & 1) != 0) {\n            uStackX20 = 0x40;\n            uVar2 = fcn.0040e8bc(&uStackX16, 0x800);\n            uVar5 = uVar5 | uVar2;\n        }\n        if ((arg1 >> 0xc & 1) != 0) {\n            uStackX20 = 4;\n            uVar2 = fcn.0040e8bc(&uStackX16, 0x1000);\n            uVar5 = uVar5 | uVar2;\n        }\n        if ((arg1 >> 0xd & 1) != 0) {\n            uStackX20 = 0x80;\n            uVar2 = fcn.0040e8bc(&uStackX16, 0x2000);\n            uVar5 = uVar5 | uVar2;\n        }\n        if ((arg1 >> 0xe & 1) != 0) {\n            uStackX20 = 0x800;\n            uVar2 = fcn.0040e8bc(&uStackX16, 0x4000);\n            uVar5 = uVar5 | uVar2;\n        }\n        if ((arg1 >> 0xf & 1) != 0) {\n            uStackX20 = 0x400;\n            uVar2 = fcn.0040e8bc(&uStackX16, 0x8000);\n            uVar5 = uVar5 | uVar2;\n        }\n        if ((arg1 >> 0x10 & 1) != 0) {\n            uStackX20 = 0x200;\n            uVar2 = fcn.0040e8bc(&uStackX16, 0x10000);\n            uVar5 = uVar5 | uVar2;\n        }\n        if ((arg1 >> 0x11 & 1) != 0) {\n            uStackX20 = 0x100;\n            uVar2 = fcn.0040e8bc(&uStackX16, 0x20000);\n            uVar5 = uVar5 | uVar2;\n        }\n        if ((arg1 >> 0x12 & 1) != 0) {\n            uStackX20 = 0x8000;\n            uVar2 = fcn.0040e8bc(&uStackX16, 0x40000);\n            uVar5 = uVar5 | uVar2;\n        }\n        *(iVar3 + 0x2c) = *(iVar3 + 0x2c) | uVar5;\n        if ((*(iVar3 + 0x2c) & 0x3fc0) == 0x3fc0) {\n            uVar5 = uVar5 | 0x10;\n            *(iVar3 + 0x2c) = *(iVar3 + 0x2c) | 0x10;\n        }\n        bVar6 = (uVar5 & arg1) == arg1;\n    }\n    return bVar6;\n}\n",
        "token_count": 1804
    },
    "00411f9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.00411f9c(int64_t arg1, uint64_t arg2, ulong noname_2, code *arg4)\n\n{\n    int32_t iVar1;\n    code *pcVar2;\n    uint32_t uVar3;\n    uint64_t uVar4;\n    ulong *in_stack_00000028;\n    uint64_t in_stack_00000030;\n    int64_t *in_stack_00000038;\n    \n    if (arg1 == 0) {\n        fcn.004129d8();\n        pcVar2 = swi(3);\n        uVar4 = (*pcVar2)();\n        return uVar4;\n    }\n    if (in_stack_00000038 != NULL) {\n        *in_stack_00000038 = arg1;\n        in_stack_00000038[1] = arg4;\n        return 1;\n    }\n    if (in_stack_00000030 < 0x3f) {\n        if (in_stack_00000030 == 0x3e) {\n            if (in_stack_00000028 == NULL) {\n                fcn.004129d8();\n                pcVar2 = swi(3);\n                uVar4 = (*pcVar2)();\n                return uVar4;\n            }\n            (*arg4)(arg1, arg2, in_stack_00000028[1], *in_stack_00000028);\n            return 1;\n        }\n        if (in_stack_00000030 == 0x38) {\n            (*arg4)();\n            return 1;\n        }\n        if (in_stack_00000030 == 0x39) {\n            uVar3 = (*arg4)();\n        }\n        else {\n            if (in_stack_00000030 == 0x3a) {\n                (*arg4)();\n                return 1;\n            }\n            if (in_stack_00000030 == 0x3b) {\n                uVar3 = (*arg4)();\n            }\n            else {\n                if (in_stack_00000030 == 0x3c) {\n                    if (in_stack_00000028 == NULL) {\n                        fcn.004129d8();\n                        pcVar2 = swi(3);\n                        uVar4 = (*pcVar2)();\n                        return uVar4;\n                    }\n                    (*arg4)(arg1, in_stack_00000028[1], *in_stack_00000028);\n                    return 1;\n                }\n                if (in_stack_00000030 != 0x3d) {\n                    return 0;\n                }\n                if (in_stack_00000028 == NULL) {\n                    fcn.004129d8();\n                    pcVar2 = swi(3);\n                    uVar4 = (*pcVar2)();\n                    return uVar4;\n                }\n                uVar3 = (*arg4)(arg1, in_stack_00000028[1], *in_stack_00000028);\n            }\n        }\n    }\n    else if (in_stack_00000030 == 0x3f) {\n        if (in_stack_00000028 == NULL) {\n            fcn.004129d8();\n            pcVar2 = swi(3);\n            uVar4 = (*pcVar2)();\n            return uVar4;\n        }\n        uVar3 = (*arg4)(arg1, arg2, in_stack_00000028[1], *in_stack_00000028);\n    }\n    else {\n        if (in_stack_00000030 == 0x40) {\n            if (in_stack_00000028 == NULL) {\n                fcn.004129d8();\n                pcVar2 = swi(3);\n                uVar4 = (*pcVar2)();\n                return uVar4;\n            }\n            (*arg4)(arg1, in_stack_00000028);\n        }\n        else {\n            if (in_stack_00000030 != 0x41) {\n                if (in_stack_00000030 == 0x42) {\n                    (*arg4)(arg1, in_stack_00000028);\n                    return 1;\n                }\n                if (in_stack_00000030 != 0x43) {\n                    return 0;\n                }\n                uVar3 = (*arg4)(arg1, in_stack_00000028);\n                goto code_r0x0041210f;\n            }\n            if (in_stack_00000028 == NULL) {\n                fcn.004129d8();\n                pcVar2 = swi(3);\n                uVar4 = (*pcVar2)();\n                return uVar4;\n            }\n            (*arg4)(arg1, in_stack_00000028, arg2 & 0xffffffff);\n        }\n        iVar1 = *(in_stack_00000028 + 0x2c);\n        *(in_stack_00000028 + 0x2c) = 0;\n        uVar3 = iVar1 == 0;\n    }\ncode_r0x0041210f:\n    return uVar3;\n}\n",
        "token_count": 1078
    },
    "004122f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004122f0(int64_t arg1)\n\n{\n    ulong uVar1;\n    \n    uVar1 = fcn.00414cc0();\n    *(arg1 + 0x38) = uVar1;\n    *(arg1 + 8) = 1;\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 0x18) = 0;\n    *(arg1 + 0x20) = 0;\n    *(arg1 + 0x30) = 0;\n    *(arg1 + 0x28) = 1;\n    return arg1;\n}\n",
        "token_count": 141
    },
    "00412350": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412350(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.00414cc0();\n    // WARNING: Could not recover jumptable at 0x00412369. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(iVar1 + 8) + 0x138))(*(iVar1 + 8), 1);\n    return;\n}\n",
        "token_count": 94
    },
    "00412370": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412370(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.00414cc0();\n    // WARNING: Could not recover jumptable at 0x00412389. Too many branches\n    // WARNING: Treating indirect jump as call\n    (**(**(iVar1 + 8) + 0x138))(*(iVar1 + 8), 0xffffffff);\n    return;\n}\n",
        "token_count": 95
    },
    "004127ec": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004127ec(int64_t hWnd, int64_t arg2, ulong X, ulong Y)\n\n{\n    ulong uVar1;\n    \n    uVar1 = 0;\n    if (*(hWnd + 0xa0) == 0) {\n        if (arg2 != 0) {\n            uVar1 = *(arg2 + 0x40);\n        }\n        (*_sym.imp.USER32.dll_SetWindowPos)(*(hWnd + 0x40), uVar1);\n    }\n    else {\n        (**(**(hWnd + 0xa0) + 0x138))(*(hWnd + 0xa0), arg2);\n    }\n    return;\n}\n",
        "token_count": 149
    },
    "0041297c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382",
            "enumerate PE sections/e92b906b5db4485ea433dde72854611a"
        ],
        "decompiled_code": "\nvoid fcn.0041297c(int64_t arg1)\n\n{\n    int32_t iVar1;\n    \n    *(arg1 + 0x14) = 1;\n    iVar1 = fcn.00413f14(*(arg1 + 0x9c), arg1 + 0x1c, 0x80);\n    *(arg1 + 0x18) = iVar1 != 0;\n    return;\n}\n",
        "token_count": 94
    },
    "00412c78": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412c78(int64_t *arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.00419f50(arg2);\n    if (iVar2 == 0) {\n        fcn.00401040(0x8007000e);\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    *arg1 = iVar2;\n    return;\n}\n",
        "token_count": 108
    },
    "00412d00": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412d00(int64_t *arg1)\n\n{\n    if (*arg1 != arg1 + 1) {\n        fcn.00412c70(arg1);\n    }\n    return;\n}\n",
        "token_count": 47
    },
    "00412d18": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00412d18(ulong arg1, int64_t *arg2)\n\n{\n    fcn.004170f8(arg1, *(*arg2 + -0x10), 0);\n    fcn.004173d8(arg1, *arg2, *(*arg2 + -0x10));\n    return arg1;\n}\n",
        "token_count": 75
    },
    "00412d50": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412d50(int64_t *arg1, int64_t arg2)\n\n{\n    code *pcVar1;\n    int64_t *piVar2;\n    int64_t iVar3;\n    \n    if (arg2 != 0) {\n        do {\n            arg2 = arg2 + -1;\n            if (arg1 == NULL) {\n                fcn.004129d8();\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            piVar2 = fcn.00413fd4();\n            if (piVar2 == NULL) {\n                fcn.00401040(0x80004005);\n                pcVar1 = swi(3);\n                (*pcVar1)();\n                return;\n            }\n            iVar3 = (**(*piVar2 + 0x18))(piVar2);\n            *arg1 = iVar3 + 0x18;\n            arg1 = arg1 + 1;\n        } while (arg2 != 0);\n    }\n    return;\n}\n",
        "token_count": 225
    },
    "00412da8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412da8(int64_t *arg1, int64_t arg2)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    \n    if (arg2 != 0) {\n        do {\n            arg2 = arg2 + -1;\n            if (arg1 == NULL) {\n                fcn.004129d8();\n                pcVar4 = swi(3);\n                (*pcVar4)();\n                return;\n            }\n            iVar3 = *arg1;\n            LOCK();\n            piVar1 = iVar3 + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 + -1 < 1) {\n                (**(**(iVar3 + -0x18) + 8))();\n            }\n            arg1 = arg1 + 1;\n        } while (arg2 != 0);\n    }\n    return;\n}\n",
        "token_count": 219
    },
    "00412dfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412dfc(ulong *arg1)\n\n{\n    int32_t iVar1;\n    uint32_t uVar2;\n    uint uVar3;\n    uint *puVar4;\n    ulong unaff_RBX;\n    ulong in_R9;\n    \n    *arg1 = 0x436f38;\n    fcn.00412da8(arg1[1], arg1[2]);\n    if ((arg1[1] != 0) &&\n       (iVar1 = (*_sym.imp.KERNEL32.dll_HeapFree)(*0x44ab60, 0, arg1[1], in_R9, unaff_RBX),  iVar1 == 0)) {\n        puVar4 = fcn.0041d1a0();\n        uVar2 = (*_sym.imp.KERNEL32.dll_GetLastError)();\n        uVar3 = fcn.0041d150(uVar2);\n        *puVar4 = uVar3;\n    }\n    return;\n}\n",
        "token_count": 212
    },
    "00412e2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00412e2c(int64_t arg1, int64_t arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ulong arg1_00;\n    int64_t iVar4;\n    int64_t iVar5;\n    \n    if (arg2 < 0) {\n        fcn.004129d8();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (-1 < arg3) {\n        *(arg1 + 0x20) = arg3;\n    }\n    if (arg2 == 0) {\n        fcn.00412da8(*(arg1 + 8), *(arg1 + 0x10));\n        fcn.0040ac34(*(arg1 + 8));\n        *(arg1 + 8) = 0;\n        *(arg1 + 0x18) = 0;\n        *(arg1 + 0x10) = 0;\n    }\n    else {\n        iVar5 = *(arg1 + 8);\n        if (iVar5 == 0) {\n            arg1_00 = fcn.0040abf8(arg2 << 3);\n            *(arg1 + 8) = arg1_00;\n            fcn.00412d50(arg1_00, arg2);\n            *(arg1 + 0x18) = arg2;\n        }\n        else {\n            iVar1 = *(arg1 + 0x18);\n            if (iVar1 < arg2) {\n                iVar5 = *(arg1 + 0x20);\n                if (*(arg1 + 0x20) == 0) {\n                    iVar4 = *(arg1 + 0x10) + (*(arg1 + 0x10) >> 0x3f & 7) >> 3;\n                    if (((iVar4 < 4) || (iVar5 = 0x400,  iVar4 < 0x401)) && (iVar5 = iVar4,  iVar4 < 4)) {\n                        iVar5 = 4;\n                    }\n                }\n                iVar4 = arg2;\n                if (arg2 < iVar5 + iVar1) {\n                    iVar4 = iVar5 + iVar1;\n                }\n                if (iVar4 < iVar1) {\n                    fcn.004129d8();\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n                iVar5 = fcn.0040abf8(iVar4 << 3);\n                iVar3 = fcn.004194d0(iVar5, iVar4 << 3, *(arg1 + 8), *(arg1 + 0x10) << 3);\n                if (iVar3 != 0) {\n                    if (iVar3 == 0xc) {\n                        fcn.004129b4();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                        fcn.004129d8();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if (iVar3 != 0x50) {\n                        fcn.004129d8();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n                fcn.00412d50(iVar5 + *(arg1 + 0x10) * 8, arg2 - *(arg1 + 0x10));\n                fcn.0040ac34(*(arg1 + 8));\n                *(arg1 + 8) = iVar5;\n                *(arg1 + 0x18) = iVar4;\n            }\n            else {\n                iVar1 = *(arg1 + 0x10);\n                if (iVar1 < arg2) {\n                    fcn.00412d50(iVar5 + iVar1 * 8, arg2 - iVar1);\n                }\n                else if (arg2 < iVar1) {\n                    fcn.00412da8(iVar5 + arg2 * 8, iVar1 - arg2);\n                }\n            }\n        }\n        *(arg1 + 0x10) = arg2;\n    }\n    return;\n}\n",
        "token_count": 937
    },
    "00412fcc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00412fcc(int64_t *arg1, int64_t arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    uint uVar2;\n    uint32_t uVar3;\n    int64_t *piVar4;\n    int64_t iVar5;\n    ulong uVar6;\n    \n    uVar6 = 0xfffffffffffffffe;\n    piVar4 = fcn.00413fd4();\n    if (piVar4 == NULL) {\n        fcn.00401040(0x80004005);\n        pcVar1 = swi(3);\n        piVar4 = (*pcVar1)();\n        return piVar4;\n    }\n    iVar5 = (**(*piVar4 + 0x18))(piVar4);\n    *arg1 = iVar5 + 0x18;\n    if (0 < arg3) {\n        if (arg2 == 0) {\n            fcn.00401040(0x80070057);\n            pcVar1 = swi(3);\n            piVar4 = (*pcVar1)();\n            return piVar4;\n        }\n        uVar2 = (**0x446650)();\n        uVar3 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(uVar2, 0, arg2, arg3, 0, 0, 0, 0, uVar6);\n        if ((*(*arg1 + -0xc) - uVar3 | 1U - *(*arg1 + -8)) < 0) {\n            fcn.00402a90(arg1, uVar3);\n        }\n        iVar5 = *arg1;\n        uVar2 = (**0x446650)();\n        (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(uVar2, 0, arg2, arg3, iVar5, uVar3, 0, 0);\n        if ((uVar3 < 0) || (*(*arg1 + -0xc) < uVar3)) {\n            fcn.00401040(0x80070057);\n        }\n        else {\n            *(*arg1 + -0x10) = uVar3;\n            *(uVar3 + *arg1) = 0;\n        }\n    }\n    return arg1;\n}\n",
        "token_count": 496
    },
    "00413140": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t * fcn.00413140(int64_t arg1, int64_t arg2, int64_t *arg3)\n\n{\n    int64_t **arg1_00;\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    code *pcVar4;\n    int64_t iVar5;\n    int64_t *piVar6;\n    int64_t **ppiVar7;\n    \n    if (arg2 < 0) {\n        fcn.004129d8();\n        pcVar4 = swi(3);\n        piVar6 = (*pcVar4)();\n        return piVar6;\n    }\n    if (*(arg1 + 0x10) <= arg2) {\n        fcn.00412e2c(arg1, arg2 + 1, 0xffffffffffffffff);\n    }\n    piVar6 = *(arg1 + 8) + arg2 * 8;\n    iVar5 = *arg3;\n    iVar3 = *piVar6;\n    arg1_00 = iVar5 + -0x18;\n    ppiVar7 = iVar3 + -0x18;\n    if (arg1_00 != ppiVar7) {\n        if ((-1 < *(iVar3 + -8)) && (*arg1_00 == *ppiVar7)) {\n            iVar5 = fcn.00402af0(arg1_00);\n            LOCK();\n            piVar1 = iVar3 + -8;\n            iVar2 = *piVar1;\n            *piVar1 = *piVar1 + -1;\n            if (iVar2 + -1 < 1) {\n                (**(**ppiVar7 + 8))(*ppiVar7, ppiVar7);\n            }\n            *piVar6 = iVar5 + 0x18;\n            return piVar6;\n        }\n        fcn.00402d50(piVar6, iVar5, *(iVar5 + -0x10));\n    }\n    return piVar6;\n}\n",
        "token_count": 432
    },
    "00413b2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00413b2c(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong arg1_00;\n    int64_t arg1_01;\n    ulong uVar2;\n    \n    iVar1 = fcn.00414d10();\n    uVar2 = 0;\n    if ((*(iVar1 + 0x38) == 0) && (arg1 != 0)) {\n        arg1_00 = fcn.0040abe8(0x414f30);\n        arg1_01 = fcn.0040abf8(0xb8);\n        if (arg1_01 != 0) {\n            uVar2 = fcn.00416620(arg1_01, 0x437040, 0x413aa4, 0x40c068);\n        }\n        *(iVar1 + 0x38) = uVar2;\n        fcn.0040abe8(arg1_00);\n    }\n    return *(iVar1 + 0x38);\n}\n",
        "token_count": 222
    },
    "00413be4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00413be4(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong arg1_00;\n    int64_t iVar3;\n    int64_t *piVar4;\n    \n    iVar1 = fcn.00413b2c(1);\n    if (arg1 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.00415fc0(iVar1 + 0x30, arg1);\n        if (iVar2 == 0) {\n            iVar2 = fcn.00415fc0(iVar1 + 0x68, arg1);\n            if (iVar2 == 0) {\n                arg1_00 = fcn.0040abe8(0x414f30);\n                iVar2 = fcn.00417b5c(iVar1 + 8);\n                iVar3 = iVar2;\n                if (iVar2 == 0) {\n                    iVar3 = fcn.004129b4();\n                }\n                (**(iVar1 + 0x20))(iVar3);\n                piVar4 = fcn.004161dc(iVar1 + 0x68, arg1);\n                *piVar4 = iVar2;\n                fcn.0040abe8(arg1_00);\n                iVar3 = *(iVar1 + 0xa8);\n                *(iVar2 + iVar3) = arg1;\n                if (*(iVar1 + 0xb0) == 2) {\n                    *(iVar2 + 8 + iVar3) = arg1;\n                }\n            }\n            else {\n                iVar3 = *(iVar1 + 0xa8);\n                *(iVar2 + iVar3) = arg1;\n                if (*(iVar1 + 0xb0) == 2) {\n                    *(iVar2 + 8 + iVar3) = arg1;\n                }\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 421
    },
    "00413c08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00413c08(int64_t *arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    int64_t **ppiVar2;\n    \n    if (arg2 != 0) {\n        arg1[1] = arg2;\n        iVar1 = fcn.00413b2c(1);\n        ppiVar2 = fcn.004161dc(iVar1 + 0x30, arg1[1]);\n        *ppiVar2 = arg1;\n        (**(*arg1 + 0x18))(arg1, arg1[1]);\n    }\n    return arg2 != 0;\n}\n",
        "token_count": 140
    },
    "00413cc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00413cc8(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong arg1_00;\n    int64_t arg1_01;\n    ulong uVar2;\n    \n    iVar1 = fcn.00414d10();\n    uVar2 = 0;\n    if ((*(iVar1 + 0x40) == 0) && (arg1 != 0)) {\n        arg1_00 = fcn.0040abe8(0x414f30);\n        arg1_01 = fcn.0040abf8(0xb8);\n        if (arg1_01 != 0) {\n            uVar2 = fcn.00416620(arg1_01, 0x437070, 0x413ac4, 0x40c068);\n        }\n        *(iVar1 + 0x40) = uVar2;\n        fcn.0040abe8(arg1_00);\n    }\n    return *(iVar1 + 0x40);\n}\n",
        "token_count": 221
    },
    "00413eb8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00413eb8(int64_t arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    int64_t iVar3;\n    ulong arg1_00;\n    int64_t iVar4;\n    int64_t *piVar5;\n    \n    iVar1 = 0;\n    iVar2 = iVar1;\n    if (*(arg1 + 8) != *(arg1 + 0x10)) {\n        if (arg2 != 0) {\n            iVar2 = *(arg2 + 8);\n        }\n        iVar2 = (*_sym.imp.GDI32.dll_SelectObject)(*(arg1 + 8), iVar2);\n    }\n    if (*(arg1 + 0x10) != 0) {\n        if (arg2 != 0) {\n            iVar1 = *(arg2 + 8);\n        }\n        iVar2 = (*_sym.imp.GDI32.dll_SelectObject)(*(arg1 + 0x10), iVar1);\n    }\n    iVar1 = fcn.00413cc8(1);\n    if (iVar2 == 0) {\n        iVar3 = 0;\n    }\n    else {\n        iVar3 = fcn.00415fc0(iVar1 + 0x30, iVar2);\n        if (iVar3 == 0) {\n            iVar3 = fcn.00415fc0(iVar1 + 0x68, iVar2);\n            if (iVar3 == 0) {\n                arg1_00 = fcn.0040abe8(0x414f30);\n                iVar3 = fcn.00417b5c(iVar1 + 8);\n                iVar4 = iVar3;\n                if (iVar3 == 0) {\n                    iVar4 = fcn.004129b4();\n                }\n                (**(iVar1 + 0x20))(iVar4);\n                piVar5 = fcn.004161dc(iVar1 + 0x68, iVar2);\n                *piVar5 = iVar3;\n                fcn.0040abe8(arg1_00);\n                iVar4 = *(iVar1 + 0xa8);\n                *(iVar3 + iVar4) = iVar2;\n                if (*(iVar1 + 0xb0) == 2) {\n                    *(iVar3 + 8 + iVar4) = iVar2;\n                }\n            }\n            else {\n                iVar4 = *(iVar1 + 0xa8);\n                *(iVar3 + iVar4) = iVar2;\n                if (*(iVar1 + 0xb0) == 2) {\n                    *(iVar3 + 8 + iVar4) = iVar2;\n                }\n            }\n        }\n    }\n    return iVar3;\n}\n",
        "token_count": 585
    },
    "00413da4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nbool fcn.00413da4(int64_t arg1, int64_t arg2)\n\n{\n    int64_t iVar1;\n    int64_t *piVar2;\n    \n    if (arg2 != 0) {\n        *(arg1 + 8) = arg2;\n        iVar1 = fcn.00413cc8(1);\n        piVar2 = fcn.004161dc(iVar1 + 0x30, *(arg1 + 8));\n        *piVar2 = arg1;\n    }\n    return arg2 != 0;\n}\n",
        "token_count": 122
    },
    "00413f14": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00413f14(uint64_t arg1, uchar *arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    ushort *puVar3;\n    ulong uVar4;\n    \n    if ((arg2 == NULL) || (arg3 == 0)) {\n        fcn.004129d8();\n        pcVar1 = swi(3);\n        uVar4 = (*pcVar1)();\n        return uVar4;\n    }\n    iVar2 = fcn.00414cc0();\n    uVar4 = *(iVar2 + 0x18);\n    iVar2 = (*_sym.imp.KERNEL32.dll_FindResourceA)(uVar4, ((arg1 & 0xffffffff) >> 4) + 1);\n    if ((iVar2 != 0) && (puVar3 = fcn.00401060(uVar4, iVar2, arg1 & 0xffffffff),  puVar3 != NULL)) {\n        uVar4 = (*_sym.imp.KERNEL32.dll_WideCharToMultiByte)(0, 0, puVar3 + 1, *puVar3, arg2, arg3 + -1, 0, 0);\n        arg2[uVar4] = 0;\n        return uVar4;\n    }\n    *arg2 = 0;\n    return 0;\n}\n",
        "token_count": 297
    },
    "00413fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00413fc0(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.00414cc0();\n    return *(iVar1 + 0x18);\n}\n",
        "token_count": 44
    },
    "00415ea0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415ea0(ulong arg1)\n\n{\n    code *pcVar1;\n    \n    if (0x10 < arg1) {\n        fcn.004129d8();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    // WARNING: Could not recover jumptable at 0x00415ec5. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(arg1 * 0x28 + 0x44a180);\n    return;\n}\n",
        "token_count": 130
    },
    "00415bc8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415bc8(uint32_t *arg1)\n\n{\n    if ((*arg1 != 0) && (*0x44a110 != 0)) {\n        fcn.00415858(*0x44a110, *arg1);\n    }\n    *arg1 = 0;\n    return;\n}\n",
        "token_count": 70
    },
    "004140b0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004140b0(void)\n\n{\n    if (*0x44a078 != NULL) {\n        (**0x44a078)();\n    }\n    return;\n}\n",
        "token_count": 38
    },
    "004140cc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint64_t fcn.004140cc(ulong noname_0, int64_t arg2)\n\n{\n    code *pcVar1;\n    int32_t iVar2;\n    uint64_t uVar3;\n    \n    if (arg2 == 0) {\n        fcn.004129d8();\n        pcVar1 = swi(3);\n        uVar3 = (*pcVar1)();\n        return uVar3;\n    }\n    if (*0x44a070 == NULL) {\n        uVar3 = 2;\n    }\n    else {\n        iVar2 = (**0x44a070)();\n        uVar3 = iVar2 != 0;\n    }\n    return uVar3;\n}\n",
        "token_count": 150
    },
    "00414134": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414134(ulong *arg1)\n\n{\n    *arg1 = 0x437338;\n    if (arg1[10] != 0) {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)();\n    }\n    if (arg1[9] != 0) {\n        (*_sym.imp.USER32.dll_UnhookWindowsHookEx)();\n    }\n    if (arg1[3] != 0) {\n        fcn.00419f10(arg1[3]);\n    }\n    return;\n}\n",
        "token_count": 116
    },
    "00414318": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414318(void)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.00415aa8(0x44a088, 0x40c074);\n    if (iVar2 == 0) {\n        fcn.004129d8();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 95
    },
    "004144f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong * fcn.004144f8(ulong *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t aiStackX8 [4];\n    \n    fcn.00403880(aiStackX8, \"comctl32.dll\");\n    *arg1 = 0x437390;\n    iVar3 = fcn.00402af0(aiStackX8[0] + -0x18);\n    arg1[3] = iVar3 + 0x18;\n    arg1[1] = 0;\n    *(arg1 + 2) = 0;\n    LOCK();\n    piVar1 = aiStackX8[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(aiStackX8[0] + -0x18) + 8))();\n    }\n    *arg1 = 0x4373c8;\n    arg1[4] = 0;\n    arg1[5] = 0;\n    arg1[6] = 0;\n    arg1[7] = 0;\n    arg1[8] = 0;\n    arg1[9] = 0;\n    arg1[10] = 0;\n    arg1[0xb] = 0;\n    arg1[0xc] = 0;\n    arg1[0xd] = 0;\n    arg1[0xe] = 0;\n    arg1[0xf] = 0;\n    arg1[0x10] = 0;\n    arg1[0x11] = 0;\n    arg1[0x12] = 0;\n    arg1[0x13] = 0;\n    arg1[0x14] = 0;\n    arg1[0x15] = 0;\n    arg1[0x16] = 0;\n    arg1[0x17] = 0;\n    arg1[0x18] = 0;\n    arg1[0x19] = 0;\n    arg1[0x1a] = 0;\n    arg1[0x1b] = 0;\n    arg1[0x1c] = 0;\n    arg1[0x1d] = 0;\n    arg1[0x1e] = 0;\n    arg1[0x1f] = 0;\n    arg1[0x20] = 0;\n    arg1[0x21] = 0;\n    arg1[0x22] = 0;\n    arg1[0x23] = 0;\n    arg1[0x24] = 0;\n    arg1[0x25] = 0;\n    arg1[0x26] = 0;\n    arg1[0x27] = 0;\n    arg1[0x28] = 0;\n    arg1[0x29] = 0;\n    arg1[0x2a] = 0;\n    arg1[0x2b] = 0;\n    arg1[0x2c] = 0;\n    arg1[0x2d] = 0;\n    arg1[0x2e] = 0;\n    arg1[0x2f] = 0;\n    arg1[0x30] = 0;\n    arg1[0x31] = 0;\n    arg1[0x32] = 0;\n    arg1[0x33] = 0;\n    arg1[0x34] = 0;\n    arg1[0x35] = 0;\n    arg1[0x36] = 0;\n    arg1[0x37] = 0;\n    arg1[0x38] = 0;\n    arg1[0x39] = 0;\n    arg1[0x3a] = 0;\n    arg1[0x3b] = 0;\n    arg1[0x3c] = 0;\n    arg1[0x3d] = 0;\n    arg1[0x3e] = 0;\n    arg1[0x3f] = 0;\n    arg1[0x40] = 0;\n    arg1[0x41] = 0;\n    arg1[0x42] = 0;\n    arg1[0x43] = 0;\n    arg1[0x44] = 0;\n    arg1[0x45] = 0;\n    arg1[0x46] = 0;\n    arg1[0x47] = 0;\n    arg1[0x48] = 0;\n    arg1[0x49] = 0;\n    arg1[0x4a] = 0;\n    arg1[0x4b] = 0;\n    arg1[0x4c] = 0;\n    arg1[0x4d] = 0;\n    arg1[0x4e] = 0;\n    arg1[0x4f] = 0;\n    arg1[0x50] = 0;\n    arg1[0x51] = 0;\n    arg1[0x52] = 0;\n    arg1[0x53] = 0;\n    arg1[0x54] = 0;\n    arg1[0x55] = 0;\n    arg1[0x56] = 0;\n    arg1[0x57] = 0;\n    arg1[0x58] = 0;\n    arg1[0x59] = 0;\n    arg1[0x5a] = 0;\n    arg1[0x5b] = 0;\n    arg1[0x5c] = 0;\n    arg1[0x5d] = 0;\n    arg1[0x5e] = 0;\n    arg1[0x5f] = 0;\n    arg1[0x60] = 0;\n    arg1[0x61] = 0;\n    return arg1;\n}\n",
        "token_count": 1379
    },
    "00414870": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nulong * fcn.00414870(ulong *arg1)\n\n{\n    int32_t *piVar1;\n    int32_t iVar2;\n    int64_t iVar3;\n    int64_t aiStackX8 [4];\n    \n    fcn.00403880(aiStackX8, \"comdlg32.dll\");\n    *arg1 = 0x437390;\n    iVar3 = fcn.00402af0(aiStackX8[0] + -0x18);\n    arg1[3] = iVar3 + 0x18;\n    arg1[1] = 0;\n    *(arg1 + 2) = 0;\n    LOCK();\n    piVar1 = aiStackX8[0] + -8;\n    iVar2 = *piVar1;\n    *piVar1 = *piVar1 + -1;\n    if (iVar2 + -1 < 1) {\n        (**(**(aiStackX8[0] + -0x18) + 8))();\n    }\n    *arg1 = 0x437410;\n    arg1[4] = 0;\n    arg1[5] = 0;\n    arg1[6] = 0;\n    arg1[7] = 0;\n    arg1[8] = 0;\n    arg1[9] = 0;\n    arg1[10] = 0;\n    arg1[0xb] = 0;\n    arg1[0xc] = 0;\n    arg1[0xd] = 0;\n    arg1[0xe] = 0;\n    arg1[0xf] = 0;\n    arg1[0x10] = 0;\n    arg1[0x11] = 0;\n    arg1[0x12] = 0;\n    arg1[0x13] = 0;\n    arg1[0x14] = 0;\n    arg1[0x15] = 0;\n    arg1[0x16] = 0;\n    arg1[0x17] = 0;\n    arg1[0x18] = 0;\n    return arg1;\n}\n",
        "token_count": 470
    },
    "00414cc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414cc0(void)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.00415aa8(0x44a088, 0x40c074);\n    if (iVar2 == 0) {\n        fcn.004129d8();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if (*(iVar2 + 8) == 0) {\n        iVar2 = fcn.004155b4(0x44a080, 0x414c58);\n        if (iVar2 == 0) {\n            fcn.004129d8();\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n    }\n    return;\n}\n",
        "token_count": 177
    },
    "00414d10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414d10(void)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.00414cc0();\n    iVar2 = fcn.00415aa8(iVar2 + 0xc0, 0x4142bc);\n    if (iVar2 == 0) {\n        fcn.004129d8();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 110
    },
    "00414d3c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00414d3c(int64_t arg1, int64_t arg2)\n\n{\n    uint uVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.00414cc0();\n    uVar1 = 0;\n    if (((*(iVar2 + 0xd0) != 0) && (*(arg2 + 0xd8) != -1)) && (*0x44a070 != NULL)) {\n        uVar1 = (**0x44a070)(*(arg2 + 0xd8), arg1);\n    }\n    *(arg1 + 8) = uVar1;\n    return arg1;\n}\n",
        "token_count": 145
    },
    "00414dd0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414dd0(ulong arg1, ulong arg2)\n\n{\n    int64_t *piVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.00414d10();\n    piVar1 = *(iVar2 + 8);\n    if (piVar1 == NULL) {\n        fcn.00414da0(arg1, arg2);\n    }\n    else {\n        (**(*piVar1 + 0xd8))(piVar1, arg1, arg2);\n    }\n    return;\n}\n",
        "token_count": 117
    },
    "00414e10": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414e10(int64_t arg1, int64_t lpString)\n\n{\n    code *pcVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    int32_t iVar4;\n    uchar auStack328 [32];\n    uchar uStack296;\n    uchar auStack295 [255];\n    uint64_t uStack40;\n    \n    uStack40 = *0x444d30 ^ auStack328;\n    if (arg1 == 0) {\n        fcn.004129d8();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    if (lpString == 0) {\n        fcn.004129d8();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    uVar2 = (*_sym.imp.KERNEL32.dll_lstrlenA)(lpString);\n    uStack296 = 0;\n    fcn.00418a70(auStack295, 0, 0xff);\n    if (uVar2 < 0x101) {\n        uVar3 = (*_sym.imp.USER32.dll_GetWindowTextA)(arg1, &uStack296);\n        if (uVar3 == uVar2) {\n            iVar4 = (*_sym.imp.KERNEL32.dll_lstrcmpA)(&uStack296, lpString);\n            if (iVar4 == 0) goto code_r0x00414ea6;\n        }\n    }\n    (*_sym.imp.USER32.dll_SetWindowTextA)(arg1, lpString);\ncode_r0x00414ea6:\n    fcn.00418d10(uStack40 ^ auStack328);\n    return;\n}\n",
        "token_count": 370
    },
    "00414ef4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00414ef4(int64_t arg1)\n\n{\n    uint8_t uVar1;\n    uint32_t uVar2;\n    \n    if (arg1 != 0) {\n        uVar1 = (*_sym.imp.KERNEL32.dll_GlobalFlags)();\n        uVar2 = uVar1;\n        if (uVar1 != 0) {\n            do {\n                (*_sym.imp.KERNEL32.dll_GlobalUnlock)(arg1);\n                uVar2 = uVar2 - 1;\n            } while (uVar2 != 0);\n        }\n        (*_sym.imp.KERNEL32.dll_GlobalFree)(arg1);\n    }\n    return;\n}\n",
        "token_count": 143
    },
    "00415078": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00415078(int64_t arg1, int64_t *arg2)\n\n{\n    int64_t iVar1;\n    uint32_t uVar2;\n    int32_t iVar3;\n    int64_t iVar4;\n    int64_t *piVar5;\n    int64_t iVar6;\n    int64_t iVar7;\n    \n    iVar4 = arg1;\n    if (arg1 != 0) goto code_r0x004150d2;\n    iVar4 = fcn.00414318();\n    if (*(iVar4 + 0x158) == 0) {\n        piVar5 = fcn.00414d8c();\n        if (piVar5 == NULL) {\n            iVar4 = 0;\n        }\n        else {\n            iVar4 = (**(*piVar5 + 0xe8))(piVar5);\n        }\n        if (iVar4 == 0) {\n            iVar4 = 0;\n            iVar6 = iVar4;\n            iVar7 = iVar4;\n            goto joined_r0x00415100;\n        }\n        iVar4 = *(iVar4 + 0x40);\n    }\n    else {\n        iVar4 = *(*(iVar4 + 0x158) + 0x40);\n    }\n    for (; iVar6 = iVar4,  iVar7 = iVar4,  iVar4 != 0; iVar4 = (*_sym.imp.USER32.dll_GetParent)(iVar4)) {\ncode_r0x004150d2:\n        uVar2 = (*_sym.imp.USER32.dll_GetWindowLongA)(iVar4, 0xfffffff0);\n        iVar6 = iVar4;\n        iVar7 = iVar4;\n        if ((uVar2 >> 0x1e & 1) == 0) break;\n    }\njoined_r0x00415100:\n    while (iVar1 = iVar6,  iVar1 != 0) {\n        iVar6 = (*_sym.imp.USER32.dll_GetParent)(iVar1);\n        iVar4 = iVar1;\n    }\n    if ((arg1 == 0) && (iVar7 != 0)) {\n        iVar7 = (*_sym.imp.USER32.dll_GetLastActivePopup)(iVar7);\n    }\n    if (arg2 != NULL) {\n        if (((iVar4 == 0) || (iVar3 = (*_sym.imp.USER32.dll_IsWindowEnabled)(iVar4),  iVar3 == 0)) || (iVar4 == iVar7))\n        {\n            *arg2 = 0;\n        }\n        else {\n            *arg2 = iVar4;\n            (*_sym.imp.USER32.dll_EnableWindow)(iVar4, 0);\n        }\n    }\n    return iVar7;\n}\n",
        "token_count": 575
    },
    "004152f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004152f8(ulong arg1, uint64_t arg2, uint64_t arg3)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.00414cc0();\n    if (*(iVar1 + 8) == NULL) {\n        fcn.00415168(0, arg1, arg2 & 0xffffffff, arg3 & 0xffffffff);\n    }\n    else {\n        (**(**(iVar1 + 8) + 0x130))();\n    }\n    return;\n}\n",
        "token_count": 115
    },
    "00415404": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415404(int64_t arg1)\n\n{\n    ulong uVar1;\n    uint uVar2;\n    \n    uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0xf);\n    *(arg1 + 0x30) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0x10);\n    *(arg1 + 0x34) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0x14);\n    *(arg1 + 0x38) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(0x12);\n    *(arg1 + 0x3c) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_GetSysColor)(6);\n    *(arg1 + 0x40) = uVar2;\n    uVar1 = (*_sym.imp.USER32.dll_GetSysColorBrush)(0xf);\n    *(arg1 + 0x28) = uVar1;\n    uVar1 = (*_sym.imp.USER32.dll_GetSysColorBrush)(6);\n    *(arg1 + 0x20) = uVar1;\n    return;\n}\n",
        "token_count": 272
    },
    "00415478": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415478(int64_t arg1)\n\n{\n    uint uVar1;\n    ulong uVar2;\n    \n    uVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xb);\n    *(arg1 + 8) = uVar1;\n    uVar1 = (*_sym.imp.USER32.dll_GetSystemMetrics)(0xc);\n    *(arg1 + 0xc) = uVar1;\n    *0x44a090 = (*_sym.imp.USER32.dll_GetSystemMetrics)(2);\n    *0x44a090 = *0x44a090 + 1;\n    *0x44a094 = (*_sym.imp.USER32.dll_GetSystemMetrics)(3);\n    *0x44a094 = *0x44a094 + 1;\n    uVar2 = (*_sym.imp.USER32.dll_GetDC)(0);\n    uVar1 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar2, 0x58);\n    *(arg1 + 0x18) = uVar1;\n    uVar1 = (*_sym.imp.GDI32.dll_GetDeviceCaps)(uVar2, 0x5a);\n    *(arg1 + 0x1c) = uVar1;\n    // WARNING: Could not recover jumptable at 0x004154fe. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.USER32.dll_ReleaseDC)(0, uVar2);\n    return;\n}\n",
        "token_count": 326
    },
    "00415508": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "get OS version"
        ],
        "decompiled_code": "\nint64_t fcn.00415508(int64_t arg1)\n\n{\n    uint32_t uVar1;\n    ulong uVar2;\n    \n    uVar1 = (*_sym.imp.KERNEL32.dll_GetVersion)();\n    *(arg1 + 0x78) = uVar1 >> 0x1f;\n    fcn.00415478(arg1);\n    *(arg1 + 0x28) = 0;\n    fcn.00415404(arg1);\n    uVar2 = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f02);\n    *(arg1 + 0x48) = uVar2;\n    uVar2 = (*_sym.imp.USER32.dll_LoadCursorA)(0, 0x7f00);\n    *(arg1 + 0x70) = 0;\n    *(arg1 + 0x50) = uVar2;\n    *(arg1 + 0x58) = 0;\n    *(arg1 + 0x10) = 2;\n    *(arg1 + 0x14) = 2;\n    return arg1;\n}\n",
        "token_count": 245
    },
    "0041557c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0041557c(ulong uBytes)\n\n{\n    code *pcVar1;\n    int64_t iVar2;\n    \n    iVar2 = (*_sym.imp.KERNEL32.dll_LocalAlloc)(0x40, uBytes);\n    if (iVar2 == 0) {\n        fcn.004129b4();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "004155b4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.004155b4(int64_t *arg1, code *arg2)\n\n{\n    int64_t iVar1;\n    \n    if (*arg1 == 0) {\n        fcn.00415e14(0x10);\n        if (*arg1 == 0) {\n            iVar1 = (*arg2)();\n            *arg1 = iVar1;\n        }\n        fcn.00415ea0(0x10);\n    }\n    return *arg1;\n}\n",
        "token_count": 105
    },
    "00415668": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415668(int64_t *arg1, int64_t arg2)\n\n{\n    code *pcVar1;\n    \n    if (arg2 == 0) {\n        fcn.004129d8();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    *(arg2 + arg1[1]) = *arg1;\n    *arg1 = arg2;\n    return;\n}\n",
        "token_count": 97
    },
    "00415858": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "contain loop"
        ],
        "decompiled_code": "\nvoid fcn.00415858(int64_t lpCriticalSection, ulong arg2)\n\n{\n    uint32_t *puVar1;\n    ulong *puVar2;\n    int64_t iVar3;\n    int64_t iVar4;\n    \n    iVar4 = arg2;\n    (*_sym.imp.KERNEL32.dll_EnterCriticalSection)(lpCriticalSection + 0x28);\n    if ((0 < arg2) && (arg2 < *(lpCriticalSection + 0xc))) {\n        for (iVar3 = *(lpCriticalSection + 0x18); iVar3 != 0; iVar3 = *(iVar3 + 8)) {\n            if (arg2 < *(iVar3 + 0x10)) {\n                puVar2 = *(*(iVar3 + 0x18) + iVar4 * 8);\n                if (puVar2 != NULL) {\n                    (***puVar2)(puVar2, 1);\n                }\n                *(*(iVar3 + 0x18) + iVar4 * 8) = 0;\n            }\n        }\n        puVar1 = *(lpCriticalSection + 0x10) + iVar4 * 0x10;\n        *puVar1 = *puVar1 & 0xfffffffe;\n        (*_sym.imp.KERNEL32.dll_LeaveCriticalSection)(lpCriticalSection + 0x28);\n    }\n    return;\n}\n",
        "token_count": 287
    },
    "00415c44": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00415c44(ulong arg1)\n\n{\n    int64_t iVar1;\n    ulong arg1_00;\n    int64_t arg1_01;\n    ulong uVar2;\n    \n    iVar1 = fcn.00414d10();\n    uVar2 = 0;\n    if ((*(iVar1 + 0x30) == 0) && (arg1 != 0)) {\n        arg1_00 = fcn.0040abe8(0x414f30);\n        arg1_01 = fcn.0040abf8(0xb8);\n        if (arg1_01 != 0) {\n            uVar2 = fcn.00416620(arg1_01, 0x437540, 0x415c2c, 0x40c068);\n        }\n        *(iVar1 + 0x30) = uVar2;\n        fcn.0040abe8(arg1_00);\n    }\n    return *(iVar1 + 0x30);\n}\n",
        "token_count": 222
    },
    "00415cfc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00415cfc(int64_t arg1)\n\n{\n    int64_t iVar1;\n    int64_t iVar2;\n    ulong arg1_00;\n    int64_t iVar3;\n    int64_t *piVar4;\n    \n    iVar1 = fcn.00415c44(1);\n    if (arg1 == 0) {\n        iVar2 = 0;\n    }\n    else {\n        iVar2 = fcn.00415fc0(iVar1 + 0x30, arg1);\n        if (iVar2 == 0) {\n            iVar2 = fcn.00415fc0(iVar1 + 0x68, arg1);\n            if (iVar2 == 0) {\n                arg1_00 = fcn.0040abe8(0x414f30);\n                iVar2 = fcn.00417b5c(iVar1 + 8);\n                iVar3 = iVar2;\n                if (iVar2 == 0) {\n                    iVar3 = fcn.004129b4();\n                }\n                (**(iVar1 + 0x20))(iVar3);\n                piVar4 = fcn.004161dc(iVar1 + 0x68, arg1);\n                *piVar4 = iVar2;\n                fcn.0040abe8(arg1_00);\n                iVar3 = *(iVar1 + 0xa8);\n                *(iVar2 + iVar3) = arg1;\n                if (*(iVar1 + 0xb0) == 2) {\n                    *(iVar2 + 8 + iVar3) = arg1;\n                }\n            }\n            else {\n                iVar3 = *(iVar1 + 0xa8);\n                *(iVar2 + iVar3) = arg1;\n                if (*(iVar1 + 0xb0) == 2) {\n                    *(iVar2 + 8 + iVar3) = arg1;\n                }\n            }\n        }\n    }\n    return iVar2;\n}\n",
        "token_count": 420
    },
    "00415de4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.00415de4(void)\n\n{\n    if (*0x44a170 == 0) {\n        *0x44a170 = 1;\n        (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)(0x44a428);\n    }\n    return *0x44a170;\n}\n",
        "token_count": 69
    },
    "00415ecc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415ecc(int64_t arg1, ulong arg2, ulong arg3)\n\n{\n    ulong uVar1;\n    uint64_t uVar2;\n    \n    uVar2 = arg2;\n    if (arg2 == 0) {\n        uVar2 = 0x11;\n    }\n    if (*(arg1 + 8) != 0) {\n        fcn.0040ac34(*(arg1 + 8));\n        *(arg1 + 8) = 0;\n    }\n    if (arg3 != 0) {\n        uVar1 = SUB168(ZEXT816(8) * ZEXT816(uVar2), 0);\n        if (SUB168(ZEXT816(8) * ZEXT816(uVar2) >> 0x40, 0) != 0) {\n            uVar1 = 0xffffffffffffffff;\n        }\n        uVar1 = fcn.0040abf8(uVar1);\n        *(arg1 + 8) = uVar1;\n        fcn.00418a70(uVar1, 0, uVar2 << 3);\n    }\n    *(arg1 + 0x10) = uVar2;\n    return;\n}\n",
        "token_count": 263
    },
    "00415f40": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00415f40(int64_t arg1)\n\n{\n    if (*(arg1 + 8) != 0) {\n        fcn.0040ac34(*(arg1 + 8));\n        *(arg1 + 8) = 0;\n    }\n    *(arg1 + 0x18) = 0;\n    *(arg1 + 0x20) = 0;\n    fcn.00417ad8(*(arg1 + 0x28));\n    *(arg1 + 0x28) = 0;\n    return;\n}\n",
        "token_count": 122
    },
    "00415fc0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00415fc0(int64_t arg1, uint64_t arg2)\n\n{\n    code *pcVar1;\n    ulong uVar2;\n    ulong *puVar3;\n    \n    if (arg1 == 0) {\n        fcn.004129d8();\n        pcVar1 = swi(3);\n        uVar2 = (*pcVar1)();\n        return uVar2;\n    }\n    if (*(arg1 + 8) != 0) {\n        for (puVar3 = *(*(arg1 + 8) + ((arg2 >> 4 & 0xffffffff) % *(arg1 + 0x10)) * 8); puVar3 != NULL; puVar3 = *puVar3\n            ) {\n            if (puVar3[1] == arg2) {\n                return puVar3[2];\n            }\n        }\n    }\n    return 0;\n}\n",
        "token_count": 197
    },
    "00416008": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00416008(int64_t arg1, uint64_t arg2)\n\n{\n    int64_t *piVar1;\n    ulong *puVar2;\n    ulong *puVar3;\n    ulong *puVar4;\n    \n    if (*(arg1 + 8) != 0) {\n        puVar4 = *(arg1 + 8) + ((arg2 >> 4 & 0xffffffff) % *(arg1 + 0x10)) * 8;\n        puVar2 = *puVar4;\n        while (puVar3 = puVar2,  puVar3 != NULL) {\n            if (puVar3[1] == arg2) {\n                *puVar4 = *puVar3;\n                *puVar3 = *(arg1 + 0x20);\n                piVar1 = arg1 + 0x18;\n                *piVar1 = *piVar1 + -1;\n                *(arg1 + 0x20) = puVar3;\n                if (*piVar1 == 0) {\n                    fcn.00415f40(arg1);\n                }\n                return 1;\n            }\n            puVar4 = puVar3;\n            puVar2 = *puVar3;\n        }\n    }\n    return 0;\n}\n",
        "token_count": 275
    },
    "00416070": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416070(int64_t arg1, int64_t **arg2, int64_t *arg3, int64_t *arg4)\n\n{\n    code *pcVar1;\n    int64_t **ppiVar2;\n    int64_t *piVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    int64_t *piVar6;\n    \n    piVar6 = *arg2;\n    if (piVar6 != NULL) {\n        if ((piVar6 == 0xffffffffffffffff) && (uVar5 = 0,  *(arg1 + 0x10) != 0)) {\n            ppiVar2 = *(arg1 + 8);\n            while (piVar6 = *ppiVar2,  piVar6 == NULL) {\n                uVar5 = uVar5 + 1;\n                ppiVar2 = ppiVar2 + 1;\n                if (*(arg1 + 0x10) <= uVar5) {\n                    fcn.004129d8();\n                    pcVar1 = swi(3);\n                    (*pcVar1)();\n                    return;\n                }\n            }\n        }\n        piVar3 = *piVar6;\n        if (piVar3 == NULL) {\n            uVar5 = *(arg1 + 0x10);\n            uVar4 = (piVar6[1] >> 4 & 0xffffffff) % uVar5 + 1;\n            if (uVar4 < uVar5) {\n                ppiVar2 = *(arg1 + 8) + uVar4 * 8;\n                do {\n                    piVar3 = *ppiVar2;\n                    if (piVar3 != NULL) break;\n                    uVar4 = uVar4 + 1;\n                    ppiVar2 = ppiVar2 + 1;\n                } while (uVar4 < uVar5);\n            }\n        }\n        *arg2 = piVar3;\n        *arg3 = piVar6[1];\n        *arg4 = piVar6[2];\n    }\n    return;\n}\n",
        "token_count": 450
    },
    "004161dc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong * fcn.004161dc(int64_t arg1, ulong arg2)\n\n{\n    ulong *puVar1;\n    int64_t arg1_00;\n    uint32_t auStackX24 [2];\n    uchar auStackX32 [8];\n    \n    arg1_00 = arg1;\n    puVar1 = fcn.00415f88(arg1, arg2, auStackX24, auStackX32);\n    if (puVar1 == NULL) {\n        if (*(arg1_00 + 8) == 0) {\n            fcn.00415ecc(arg1_00, *(arg1_00 + 0x10), 1);\n        }\n        puVar1 = fcn.00416168(arg1);\n        puVar1[1] = arg2;\n        *puVar1 = *(*(arg1 + 8) + auStackX24[0] * 8);\n        *(*(arg1 + 8) + auStackX24[0] * 8) = puVar1;\n    }\n    return puVar1 + 2;\n}\n",
        "token_count": 237
    },
    "00416488": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nuint32_t fcn.00416488(ulong arg1, ulong arg2, int64_t *arg3)\n\n{\n    uint32_t uVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.00416278(arg1, arg2);\n    *arg3 = iVar2;\n    if (iVar2 == 0) {\n        iVar2 = fcn.00416344(arg1, arg2);\n        *arg3 = iVar2;\n        uVar1 = ~-(iVar2 != 0) & 0x80004002;\n    }\n    else {\n        fcn.004163c0(arg1);\n        uVar1 = 0;\n    }\n    return uVar1;\n}\n",
        "token_count": 155
    },
    "004164f4": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004164f4(ulong arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.00414d8c();\n    if ((iVar1 != 0) && (*(iVar1 + 0x78) != NULL)) {\n        (**(iVar1 + 0x78))(1, 1);\n    }\n    // WARNING: Could not recover jumptable at 0x0041651f. Too many branches\n    // WARNING: Treating indirect jump as call\n    (*_sym.imp.USER32.dll_PostQuitMessage)(arg1);\n    return;\n}\n",
        "token_count": 130
    },
    "004169a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nbool fcn.004169a0(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.00414cc0();\n    return *(iVar1 + 0x50) == 0;\n}\n",
        "token_count": 48
    },
    "004169b8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004169b8(void)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.00414cc0();\n    LOCK();\n    *(iVar1 + 0x50) = *(iVar1 + 0x50) + 1;\n    return;\n}\n",
        "token_count": 63
    },
    "00416a30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416a30(void)\n\n{\n    int32_t *piVar1;\n    int64_t iVar2;\n    \n    iVar2 = fcn.00414cc0();\n    LOCK();\n    piVar1 = iVar2 + 0x50;\n    *piVar1 = *piVar1 + -1;\n    if (*piVar1 == 0) {\n        fcn.004169cc();\n    }\n    return;\n}\n",
        "token_count": 96
    },
    "00416a9c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416a9c(int64_t arg1)\n\n{\n    *(arg1 + 0x18) = 0;\n    *(arg1 + 0x20) = 0;\n    *(arg1 + 0x10) = 0;\n    *(arg1 + 8) = 0;\n    fcn.00417ad8(*(arg1 + 0x28));\n    *(arg1 + 0x28) = 0;\n    return;\n}\n",
        "token_count": 106
    },
    "00416adc": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00416adc(int64_t arg1, ulong *arg2)\n\n{\n    int64_t *piVar1;\n    code *pcVar2;\n    \n    if (arg2 == NULL) {\n        fcn.004129d8();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    *arg2 = *(arg1 + 0x20);\n    piVar1 = arg1 + 0x18;\n    *piVar1 = *piVar1 + -1;\n    *(arg1 + 0x20) = arg2;\n    if (*piVar1 == 0) {\n        fcn.00416a9c(arg1);\n    }\n    return;\n}\n",
        "token_count": 160
    },
    "00416b08": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint64_t fcn.00416b08(int64_t arg1)\n\n{\n    int64_t *arg2;\n    int64_t iVar1;\n    code *pcVar2;\n    int64_t iVar3;\n    \n    if (arg1 == 0) {\n        fcn.004129d8();\n        pcVar2 = swi(3);\n        iVar3 = (*pcVar2)();\n        return iVar3;\n    }\n    arg2 = *(arg1 + 8);\n    if (arg2 == NULL) {\n        fcn.004129d8();\n        pcVar2 = swi(3);\n        iVar3 = (*pcVar2)();\n        return iVar3;\n    }\n    iVar3 = *arg2;\n    iVar1 = arg2[2];\n    *(arg1 + 8) = iVar3;\n    if (iVar3 == 0) {\n        *(arg1 + 0x10) = 0;\n    }\n    else {\n        *(iVar3 + 8) = 0;\n    }\n    fcn.00416adc(arg1, arg2);\n    return iVar1;\n}\n",
        "token_count": 239
    },
    "004170f8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.004170f8(int64_t arg1, uint64_t arg2, ulong arg3)\n\n{\n    code *pcVar1;\n    uint8_t uVar2;\n    uint64_t uVar3;\n    \n    if (arg3 != 0) {\n        if ((~*(arg1 + 0x20) & 1) == 0) {\n            fcn.00417a38(2, *(arg1 + 0x18));\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        uVar3 = *(arg1 + 0x38) + 1;\n        if (*(arg1 + 0x40) <= uVar3 && uVar3 != *(arg1 + 0x40)) {\n            fcn.00416d1c(arg1);\n        }\n        **(arg1 + 0x38) = 0xff;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 1;\n        if ((~*(arg1 + 0x20) & 1) == 0) {\n            fcn.00417a38(2, *(arg1 + 0x18));\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        uVar3 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar3 && uVar3 != *(arg1 + 0x40)) {\n            fcn.00416d1c(arg1);\n        }\n        **(arg1 + 0x38) = 0xfffe;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 2;\n    }\n    uVar2 = ~*(arg1 + 0x20);\n    if (arg2 < 0xff) {\n        if ((uVar2 & 1) == 0) {\n            fcn.00417a38(2, *(arg1 + 0x18));\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        uVar3 = *(arg1 + 0x38) + 1;\n        if (*(arg1 + 0x40) <= uVar3 && uVar3 != *(arg1 + 0x40)) {\n            fcn.00416d1c(arg1);\n        }\n        **(arg1 + 0x38) = arg2;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 1;\n    }\n    else if (arg2 < 0xfffe) {\n        if ((uVar2 & 1) == 0) {\n            fcn.00417a38(2, *(arg1 + 0x18));\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        uVar3 = *(arg1 + 0x38) + 1;\n        if (*(arg1 + 0x40) <= uVar3 && uVar3 != *(arg1 + 0x40)) {\n            fcn.00416d1c(arg1);\n        }\n        **(arg1 + 0x38) = 0xff;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 1;\n        if ((~*(arg1 + 0x20) & 1) == 0) {\n            fcn.00417a38(2, *(arg1 + 0x18));\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        uVar3 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar3 && uVar3 != *(arg1 + 0x40)) {\n            fcn.00416d1c(arg1);\n        }\n        **(arg1 + 0x38) = arg2;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 2;\n    }\n    else if (arg2 < 0xffffffff) {\n        if ((uVar2 & 1) == 0) {\n            fcn.00417a38(2, *(arg1 + 0x18));\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        uVar3 = *(arg1 + 0x38) + 1;\n        if (*(arg1 + 0x40) <= uVar3 && uVar3 != *(arg1 + 0x40)) {\n            fcn.00416d1c(arg1);\n        }\n        **(arg1 + 0x38) = 0xff;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 1;\n        if ((~*(arg1 + 0x20) & 1) == 0) {\n            fcn.00417a38(2, *(arg1 + 0x18));\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        uVar3 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar3 && uVar3 != *(arg1 + 0x40)) {\n            fcn.00416d1c(arg1);\n        }\n        **(arg1 + 0x38) = 0xffff;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 2;\n        if ((~*(arg1 + 0x20) & 1) == 0) {\n            fcn.00417a38(2, *(arg1 + 0x18));\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        uVar3 = *(arg1 + 0x38) + 4;\n        if (*(arg1 + 0x40) <= uVar3 && uVar3 != *(arg1 + 0x40)) {\n            fcn.00416d1c(arg1);\n        }\n        **(arg1 + 0x38) = arg2;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 4;\n    }\n    else {\n        if ((uVar2 & 1) == 0) {\n            fcn.00417a38(2, *(arg1 + 0x18));\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        uVar3 = *(arg1 + 0x38) + 1;\n        if (*(arg1 + 0x40) <= uVar3 && uVar3 != *(arg1 + 0x40)) {\n            fcn.00416d1c(arg1);\n        }\n        **(arg1 + 0x38) = 0xff;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 1;\n        if ((~*(arg1 + 0x20) & 1) == 0) {\n            fcn.00417a38(2, *(arg1 + 0x18));\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        uVar3 = *(arg1 + 0x38) + 2;\n        if (*(arg1 + 0x40) <= uVar3 && uVar3 != *(arg1 + 0x40)) {\n            fcn.00416d1c(arg1);\n        }\n        **(arg1 + 0x38) = 0xffff;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 2;\n        if ((~*(arg1 + 0x20) & 1) == 0) {\n            fcn.00417a38(2, *(arg1 + 0x18));\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        uVar3 = *(arg1 + 0x38) + 4;\n        if (*(arg1 + 0x40) <= uVar3 && uVar3 != *(arg1 + 0x40)) {\n            fcn.00416d1c(arg1);\n        }\n        **(arg1 + 0x38) = 0xffffffff;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 4;\n        if ((~*(arg1 + 0x20) & 1) == 0) {\n            fcn.00417a38(2, *(arg1 + 0x18));\n            pcVar1 = swi(3);\n            (*pcVar1)();\n            return;\n        }\n        uVar3 = *(arg1 + 0x38) + 8;\n        if (*(arg1 + 0x40) <= uVar3 && uVar3 != *(arg1 + 0x40)) {\n            fcn.00416d1c(arg1);\n        }\n        **(arg1 + 0x38) = arg2;\n        *(arg1 + 0x38) = *(arg1 + 0x38) + 8;\n    }\n    return;\n}\n",
        "token_count": 2077
    },
    "00417aa0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417aa0(ulong *arg1, int64_t arg2, int64_t arg3)\n\n{\n    code *pcVar1;\n    ulong *puVar2;\n    \n    if ((arg2 != 0) && (arg3 != 0)) {\n        puVar2 = fcn.0040abf8(arg2 * arg3 + 8);\n        *puVar2 = *arg1;\n        *arg1 = puVar2;\n        return;\n    }\n    fcn.004129d8();\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 136
    },
    "00417ad8": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417ad8(int64_t *arg1)\n\n{\n    int64_t *piVar1;\n    \n    if (arg1 != NULL) {\n        do {\n            piVar1 = *arg1;\n            fcn.0040ac34(arg1);\n            arg1 = piVar1;\n        } while (piVar1 != NULL);\n    }\n    return;\n}\n",
        "token_count": 83
    },
    "00417b2c": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417b2c(int64_t arg1)\n\n{\n    fcn.00417ad8(*(arg1 + 8));\n    *(arg1 + 8) = 0;\n    *(arg1 + 0x10) = 0;\n    return;\n}\n",
        "token_count": 62
    },
    "00417ed0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.00417ed0(int64_t arg1, uint64_t arg2, int64_t arg3)\n\n{\n    int64_t iVar1;\n    code *pcVar2;\n    int32_t iVar3;\n    ulong arg1_00;\n    int64_t iVar4;\n    int64_t iVar5;\n    uint64_t arg1_01;\n    \n    if (arg2 < 0) {\n        fcn.004129d8();\n        pcVar2 = swi(3);\n        (*pcVar2)();\n        return;\n    }\n    if (-1 < arg3) {\n        *(arg1 + 0x20) = arg3;\n    }\n    iVar5 = *(arg1 + 8);\n    if (arg2 == 0) {\n        fcn.0040ac34(iVar5);\n        *(arg1 + 8) = 0;\n        *(arg1 + 0x18) = 0;\n        *(arg1 + 0x10) = 0;\n    }\n    else {\n        if (iVar5 == 0) {\n            if (0xffffffff < arg2) {\n                fcn.004129d8();\n                pcVar2 = swi(3);\n                (*pcVar2)();\n                return;\n            }\n            arg1_00 = fcn.0040abf8(arg2);\n            *(arg1 + 8) = arg1_00;\n            fcn.00418a70(arg1_00, 0, arg2);\n            *(arg1 + 0x18) = arg2;\n        }\n        else {\n            iVar1 = *(arg1 + 0x18);\n            if (iVar1 < arg2) {\n                iVar5 = *(arg1 + 0x20);\n                if (*(arg1 + 0x20) == 0) {\n                    iVar4 = *(arg1 + 0x10) + (*(arg1 + 0x10) >> 0x3f & 7) >> 3;\n                    if (((iVar4 < 4) || (iVar5 = 0x400,  iVar4 < 0x401)) && (iVar5 = iVar4,  iVar4 < 4)) {\n                        iVar5 = 4;\n                    }\n                }\n                arg1_01 = arg2;\n                if (arg2 < iVar5 + iVar1) {\n                    arg1_01 = iVar5 + iVar1;\n                }\n                if (arg1_01 < iVar1) {\n                    fcn.004129d8();\n                    pcVar2 = swi(3);\n                    (*pcVar2)();\n                    return;\n                }\n                iVar5 = fcn.0040abf8(arg1_01);\n                iVar3 = fcn.004194d0(iVar5, arg1_01, *(arg1 + 8), *(arg1 + 0x10));\n                if (iVar3 != 0) {\n                    if (iVar3 == 0xc) {\n                        fcn.004129b4();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if ((iVar3 == 0x16) || (iVar3 == 0x22)) {\n                        fcn.004129d8();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                    if (iVar3 != 0x50) {\n                        fcn.004129d8();\n                        pcVar2 = swi(3);\n                        (*pcVar2)();\n                        return;\n                    }\n                }\n                fcn.00418a70(*(arg1 + 0x10) + iVar5, 0, arg2 - *(arg1 + 0x10));\n                fcn.0040ac34(*(arg1 + 8));\n                *(arg1 + 8) = iVar5;\n                *(arg1 + 0x18) = arg1_01;\n            }\n            else {\n                iVar1 = *(arg1 + 0x10);\n                if (iVar1 < arg2) {\n                    fcn.00418a70(iVar5 + iVar1, 0, arg2 - iVar1);\n                }\n            }\n        }\n        *(arg1 + 0x10) = arg2;\n    }\n    return;\n}\n",
        "token_count": 921
    },
    "00424250": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00424250(uint *arg1)\n\n{\n    uint *puVar1;\n    \n    if (arg1 == NULL) {\n        puVar1 = fcn.0041d1a0();\n        *puVar1 = 0x16;\n        fcn.0041f4d0(0, 0, 0, 0);\n        return 0x16;\n    }\n    *arg1 = *0x445924;\n    return 0;\n}\n",
        "token_count": 105
    },
    "004242a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004242a0(uint *arg1)\n\n{\n    uint *puVar1;\n    \n    if (arg1 == NULL) {\n        puVar1 = fcn.0041d1a0();\n        *puVar1 = 0x16;\n        fcn.0041f4d0(0, 0, 0, 0);\n        return 0x16;\n    }\n    *arg1 = *0x445928;\n    return 0;\n}\n",
        "token_count": 106
    },
    "004242f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.004242f0(uint *arg1)\n\n{\n    uint *puVar1;\n    \n    if (arg1 == NULL) {\n        puVar1 = fcn.0041d1a0();\n        *puVar1 = 0x16;\n        fcn.0041f4d0(0, 0, 0, 0);\n        return 0x16;\n    }\n    *arg1 = *0x445920;\n    return 0;\n}\n",
        "token_count": 106
    },
    "004271f0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00427211)\n// WARNING: Removing unreachable block (ram,0x00427219)\n// WARNING: Removing unreachable block (ram,0x0042721b)\n\nvoid fcn.004271f0(void)\n\n{\n    return;\n}\n",
        "token_count": 62
    },
    "0042d270": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nvoid fcn.0042d270(ulong arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    uint32_t in_stack_00000028;\n    \n    fcn.0042d0c0(arg2, arg3, arg4, in_stack_00000028);\n    return;\n}\n",
        "token_count": 69
    },
    "0042ef30": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.0042ef30(uint *arg1)\n\n{\n    uint *puVar1;\n    \n    if (arg1 == NULL) {\n        puVar1 = fcn.0041d1a0();\n        *puVar1 = 0x16;\n        fcn.0041f4d0(0, 0, 0, 0);\n        return 0x16;\n    }\n    *arg1 = *0x44b3b4;\n    return 0;\n}\n",
        "token_count": 109
    },
    "00432854": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nulong fcn.00432854(ulong lpCriticalSection)\n\n{\n    (*_sym.imp.KERNEL32.dll_InitializeCriticalSection)();\n    return 0;\n}\n",
        "token_count": 33
    },
    "0041c2a0": {
        "rules": [
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55",
            "validate payment card number using luhn algorithm with no lookup table/ca2c8d7b7d994625afebb42274522c55"
        ],
        "decompiled_code": "\nint32_t fcn.0041c2a0(ulong arg1)\n\n{\n    int64_t iVar1;\n    \n    iVar1 = fcn.0041c170(arg1);\n    return (iVar1 != 0) - 1;\n}\n",
        "token_count": 55
    },
    "00401040": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00401040(ulong arg1)\n\n{\n    code *pcVar1;\n    \n    if (arg1 == -0x7ff8fff2) {\n        fcn.004129b4();\n        pcVar1 = swi(3);\n        (*pcVar1)();\n        return;\n    }\n    fcn.00412b1c(arg1);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 100
    },
    "00417a38": {
        "rules": [
            "check for time delay via GetTickCount/79c6cbe28590449abc100fa77278b382"
        ],
        "decompiled_code": "\nvoid fcn.00417a38(ulong arg1, ulong arg2)\n\n{\n    code *pcVar1;\n    ulong uStackX24;\n    int64_t iStackX32;\n    \n    iStackX32 = fcn.0040abf8(0x20);\n    uStackX24 = 0;\n    if (iStackX32 != 0) {\n        uStackX24 = fcn.0041792c(iStackX32, arg1, arg2);\n    }\n    fcn.0041a020(&uStackX24, 0x441560);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 149
    },
    "00401680": {
        "rules": [
            "PEB access"
        ],
        "decompiled_code": "\nulong fcn.00401680(void)\n\n{\n    int64_t in_GS_OFFSET;\n    \n    return *(in_GS_OFFSET + 0x60);\n}\n",
        "token_count": 35
    },
    "0040baa8": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nint32_t * fcn.0040baa8(int32_t *arg1, ulong arg2, ulong arg3, ulong arg4)\n\n{\n    while( true ) {\n        if (*(arg1 + 4) == 0) {\n            return NULL;\n        }\n        if ((((*arg1 == arg2) && (arg1[1] == arg3)) && (arg1[2] <= arg4)) && (arg4 < arg1[3] || arg4 == arg1[3])) break;\n        arg1 = arg1 + 8;\n    }\n    return arg1;\n}\n",
        "token_count": 130
    },
    "00415f88": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\nulong * fcn.00415f88(int64_t arg1, uint64_t arg2, uint *arg3, uint *arg4)\n\n{\n    uint64_t uVar1;\n    ulong *puVar2;\n    \n    *arg4 = arg2 >> 4;\n    uVar1 = (arg2 >> 4 & 0xffffffff) % *(arg1 + 0x10);\n    *arg3 = uVar1;\n    if (*(arg1 + 8) != 0) {\n        for (puVar2 = *(*(arg1 + 8) + uVar1 * 8); puVar2 != NULL; puVar2 = *puVar2) {\n            if (puVar2[1] == arg2) {\n                return puVar2;\n            }\n        }\n    }\n    return NULL;\n}\n",
        "token_count": 179
    },
    "0041d880": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x0041d805)\n// WARNING: Removing unreachable block (ram,0x0041d792)\n// WARNING: Removing unreachable block (ram,0x0041d7c0)\n// WARNING: Removing unreachable block (ram,0x0041d7ce)\n// WARNING: Removing unreachable block (ram,0x0041d7d6)\n// WARNING: Removing unreachable block (ram,0x0041d7d8)\n// WARNING: Removing unreachable block (ram,0x0041d7da)\n// WARNING: Removing unreachable block (ram,0x0041d82e)\n\nvoid fcn.0041d880(ulong arg1)\n\n{\n    code *pcVar1;\n    \n    fcn.00428b20(8);\n    if (*0x44a56c != 1) {\n        *0x44a568 = 1;\n        *0x44a524 = 0;\n        fcn.0041d570(0x434988, 0x434998);\n    }\n    *0x44a56c = 1;\n    fcn.004289f0(8);\n    fcn.0041d510(arg1);\n    pcVar1 = swi(3);\n    (*pcVar1)();\n    return;\n}\n",
        "token_count": 283
    },
    "00425c30": {
        "rules": [
            "contain loop"
        ],
        "decompiled_code": "\n// WARNING: Removing unreachable block (ram,0x00425b6a)\n// WARNING: Removing unreachable block (ram,0x00425b6f)\n// WARNING: Removing unreachable block (ram,0x00425b73)\n// WARNING: Removing unreachable block (ram,0x00425b7b)\n// WARNING: Removing unreachable block (ram,0x00425b7f)\n\nint32_t fcn.00425c30(void)\n\n{\n    int64_t iVar1;\n    int32_t iVar2;\n    uint32_t uVar3;\n    int64_t iVar4;\n    int32_t iVar5;\n    \n    iVar5 = 0;\n    fcn.00428b20(1);\n    for (uVar3 = 0; uVar3 < *0x44c6c0; uVar3 = uVar3 + 1) {\n        iVar4 = uVar3;\n        if ((*(*0x44b6a0 + iVar4 * 8) != 0) && (iVar1 = *(*0x44b6a0 + iVar4 * 8),  (*(iVar1 + 0x18) & 0x83) != 0)) {\n            fcn.00425dd0(uVar3, iVar1);\n            iVar1 = *(*0x44b6a0 + iVar4 * 8);\n            if (((*(iVar1 + 0x18) & 0x83) != 0) && (iVar2 = fcn.004259f0(iVar1),  iVar2 != -1)) {\n                iVar5 = iVar5 + 1;\n            }\n            fcn.00425e40(uVar3, *(*0x44b6a0 + iVar4 * 8));\n        }\n    }\n    fcn.004289f0(1);\n    return iVar5;\n}\n",
        "token_count": 399
    },
    "00428be0": {
        "rules": [
            "link function at runtime on Windows"
        ],
        "decompiled_code": "\nulong fcn.00428be0(void)\n\n{\n    int64_t iVar1;\n    code *UNRECOVERED_JUMPTABLE;\n    ulong uVar2;\n    \n    uVar2 = *0x44b2e0;\n    if ((*0x445730 == -1) || (iVar1 = (*_sym.imp.KERNEL32.dll_FlsGetValue)(),  iVar1 == 0)) {\n        iVar1 = (*_sym.imp.KERNEL32.dll_GetModuleHandleA)(\"KERNEL32.DLL\");\n        if (iVar1 == 0) {\n            return uVar2;\n        }\n        UNRECOVERED_JUMPTABLE = (*_sym.imp.KERNEL32.dll_GetProcAddress)(iVar1, \"DecodePointer\");\n    }\n    else {\n        UNRECOVERED_JUMPTABLE = *(iVar1 + 0x2b0);\n    }\n    if (UNRECOVERED_JUMPTABLE == NULL) {\n        return uVar2;\n    }\n    // WARNING: Could not recover jumptable at 0x0041edf7. Too many branches\n    // WARNING: Treating indirect jump as call\n    uVar2 = (*UNRECOVERED_JUMPTABLE)(uVar2);\n    return uVar2;\n}\n",
        "token_count": 269
    }
}